2020-11-25 19:48:12,019 DEBUG  [main] BasicTypeRegistry: Adding type registration boolean -> org.hibernate.type.BooleanType@6babffb5
2020-11-25 19:48:12,081 DEBUG  [main] BasicTypeRegistry: Adding type registration boolean -> org.hibernate.type.BooleanType@6babffb5
2020-11-25 19:48:12,082 DEBUG  [main] BasicTypeRegistry: Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@6babffb5
2020-11-25 19:48:12,083 DEBUG  [main] BasicTypeRegistry: Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@162c1dfb
2020-11-25 19:48:12,085 DEBUG  [main] BasicTypeRegistry: Adding type registration true_false -> org.hibernate.type.TrueFalseType@576b7c74
2020-11-25 19:48:12,087 DEBUG  [main] BasicTypeRegistry: Adding type registration yes_no -> org.hibernate.type.YesNoType@7698b7a4
2020-11-25 19:48:12,090 DEBUG  [main] BasicTypeRegistry: Adding type registration byte -> org.hibernate.type.ByteType@3fbe503c
2020-11-25 19:48:12,091 DEBUG  [main] BasicTypeRegistry: Adding type registration byte -> org.hibernate.type.ByteType@3fbe503c
2020-11-25 19:48:12,091 DEBUG  [main] BasicTypeRegistry: Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@3fbe503c
2020-11-25 19:48:12,104 DEBUG  [main] BasicTypeRegistry: Adding type registration character -> org.hibernate.type.CharacterType@52454457
2020-11-25 19:48:12,104 DEBUG  [main] BasicTypeRegistry: Adding type registration char -> org.hibernate.type.CharacterType@52454457
2020-11-25 19:48:12,104 DEBUG  [main] BasicTypeRegistry: Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@52454457
2020-11-25 19:48:12,107 DEBUG  [main] BasicTypeRegistry: Adding type registration short -> org.hibernate.type.ShortType@24043ec5
2020-11-25 19:48:12,107 DEBUG  [main] BasicTypeRegistry: Adding type registration short -> org.hibernate.type.ShortType@24043ec5
2020-11-25 19:48:12,108 DEBUG  [main] BasicTypeRegistry: Adding type registration java.lang.Short -> org.hibernate.type.ShortType@24043ec5
2020-11-25 19:48:12,110 DEBUG  [main] BasicTypeRegistry: Adding type registration integer -> org.hibernate.type.IntegerType@1ca3d25b
2020-11-25 19:48:12,111 DEBUG  [main] BasicTypeRegistry: Adding type registration int -> org.hibernate.type.IntegerType@1ca3d25b
2020-11-25 19:48:12,112 DEBUG  [main] BasicTypeRegistry: Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@1ca3d25b
2020-11-25 19:48:12,114 DEBUG  [main] BasicTypeRegistry: Adding type registration long -> org.hibernate.type.LongType@7bbfc5ff
2020-11-25 19:48:12,115 DEBUG  [main] BasicTypeRegistry: Adding type registration long -> org.hibernate.type.LongType@7bbfc5ff
2020-11-25 19:48:12,116 DEBUG  [main] BasicTypeRegistry: Adding type registration java.lang.Long -> org.hibernate.type.LongType@7bbfc5ff
2020-11-25 19:48:12,124 DEBUG  [main] BasicTypeRegistry: Adding type registration float -> org.hibernate.type.FloatType@5f8d9767
2020-11-25 19:48:12,125 DEBUG  [main] BasicTypeRegistry: Adding type registration float -> org.hibernate.type.FloatType@5f8d9767
2020-11-25 19:48:12,126 DEBUG  [main] BasicTypeRegistry: Adding type registration java.lang.Float -> org.hibernate.type.FloatType@5f8d9767
2020-11-25 19:48:12,129 DEBUG  [main] BasicTypeRegistry: Adding type registration double -> org.hibernate.type.DoubleType@1980a3f
2020-11-25 19:48:12,129 DEBUG  [main] BasicTypeRegistry: Adding type registration double -> org.hibernate.type.DoubleType@1980a3f
2020-11-25 19:48:12,129 DEBUG  [main] BasicTypeRegistry: Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@1980a3f
2020-11-25 19:48:12,131 DEBUG  [main] BasicTypeRegistry: Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@6f5d0190
2020-11-25 19:48:12,131 DEBUG  [main] BasicTypeRegistry: Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@6f5d0190
2020-11-25 19:48:12,133 DEBUG  [main] BasicTypeRegistry: Adding type registration big_integer -> org.hibernate.type.BigIntegerType@1e5eb20a
2020-11-25 19:48:12,134 DEBUG  [main] BasicTypeRegistry: Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@1e5eb20a
2020-11-25 19:48:12,136 DEBUG  [main] BasicTypeRegistry: Adding type registration string -> org.hibernate.type.StringType@1e8fb66f
2020-11-25 19:48:12,137 DEBUG  [main] BasicTypeRegistry: Adding type registration java.lang.String -> org.hibernate.type.StringType@1e8fb66f
2020-11-25 19:48:12,138 DEBUG  [main] BasicTypeRegistry: Adding type registration nstring -> org.hibernate.type.StringNVarcharType@7f79edee
2020-11-25 19:48:12,139 DEBUG  [main] BasicTypeRegistry: Adding type registration ncharacter -> org.hibernate.type.CharacterNCharType@b5c6a30
2020-11-25 19:48:12,142 DEBUG  [main] BasicTypeRegistry: Adding type registration url -> org.hibernate.type.UrlType@43f03c23
2020-11-25 19:48:12,143 DEBUG  [main] BasicTypeRegistry: Adding type registration java.net.URL -> org.hibernate.type.UrlType@43f03c23
2020-11-25 19:48:12,145 DEBUG  [main] BasicTypeRegistry: Adding type registration Duration -> org.hibernate.type.DurationType@59fc6d05
2020-11-25 19:48:12,145 DEBUG  [main] BasicTypeRegistry: Adding type registration java.time.Duration -> org.hibernate.type.DurationType@59fc6d05
2020-11-25 19:48:12,150 DEBUG  [main] BasicTypeRegistry: Adding type registration Instant -> org.hibernate.type.InstantType@629a9f26
2020-11-25 19:48:12,151 DEBUG  [main] BasicTypeRegistry: Adding type registration java.time.Instant -> org.hibernate.type.InstantType@629a9f26
2020-11-25 19:48:12,156 DEBUG  [main] BasicTypeRegistry: Adding type registration LocalDateTime -> org.hibernate.type.LocalDateTimeType@32091c14
2020-11-25 19:48:12,157 DEBUG  [main] BasicTypeRegistry: Adding type registration java.time.LocalDateTime -> org.hibernate.type.LocalDateTimeType@32091c14
2020-11-25 19:48:12,160 DEBUG  [main] BasicTypeRegistry: Adding type registration LocalDate -> org.hibernate.type.LocalDateType@6579cdbb
2020-11-25 19:48:12,161 DEBUG  [main] BasicTypeRegistry: Adding type registration java.time.LocalDate -> org.hibernate.type.LocalDateType@6579cdbb
2020-11-25 19:48:12,165 DEBUG  [main] BasicTypeRegistry: Adding type registration LocalTime -> org.hibernate.type.LocalTimeType@6b357eb6
2020-11-25 19:48:12,165 DEBUG  [main] BasicTypeRegistry: Adding type registration java.time.LocalTime -> org.hibernate.type.LocalTimeType@6b357eb6
2020-11-25 19:48:12,168 DEBUG  [main] BasicTypeRegistry: Adding type registration OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@66f5a02e
2020-11-25 19:48:12,168 DEBUG  [main] BasicTypeRegistry: Adding type registration java.time.OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@66f5a02e
2020-11-25 19:48:12,171 DEBUG  [main] BasicTypeRegistry: Adding type registration OffsetTime -> org.hibernate.type.OffsetTimeType@72443081
2020-11-25 19:48:12,172 DEBUG  [main] BasicTypeRegistry: Adding type registration java.time.OffsetTime -> org.hibernate.type.OffsetTimeType@72443081
2020-11-25 19:48:12,175 DEBUG  [main] BasicTypeRegistry: Adding type registration ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@27fe059d
2020-11-25 19:48:12,176 DEBUG  [main] BasicTypeRegistry: Adding type registration java.time.ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@27fe059d
2020-11-25 19:48:12,179 DEBUG  [main] BasicTypeRegistry: Adding type registration date -> org.hibernate.type.DateType@5f0bab7e
2020-11-25 19:48:12,179 DEBUG  [main] BasicTypeRegistry: Adding type registration java.sql.Date -> org.hibernate.type.DateType@5f0bab7e
2020-11-25 19:48:12,181 DEBUG  [main] BasicTypeRegistry: Adding type registration time -> org.hibernate.type.TimeType@157d3a45
2020-11-25 19:48:12,181 DEBUG  [main] BasicTypeRegistry: Adding type registration java.sql.Time -> org.hibernate.type.TimeType@157d3a45
2020-11-25 19:48:12,184 DEBUG  [main] BasicTypeRegistry: Adding type registration timestamp -> org.hibernate.type.TimestampType@18d11527
2020-11-25 19:48:12,185 DEBUG  [main] BasicTypeRegistry: Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@18d11527
2020-11-25 19:48:12,185 DEBUG  [main] BasicTypeRegistry: Adding type registration java.util.Date -> org.hibernate.type.TimestampType@18d11527
2020-11-25 19:48:12,188 DEBUG  [main] BasicTypeRegistry: Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@28279a49
2020-11-25 19:48:12,190 DEBUG  [main] BasicTypeRegistry: Adding type registration calendar -> org.hibernate.type.CalendarType@566e142
2020-11-25 19:48:12,190 DEBUG  [main] BasicTypeRegistry: Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@566e142
2020-11-25 19:48:12,194 DEBUG  [main] BasicTypeRegistry: Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@566e142
2020-11-25 19:48:12,196 DEBUG  [main] BasicTypeRegistry: Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@30bf26df
2020-11-25 19:48:12,202 DEBUG  [main] BasicTypeRegistry: Adding type registration locale -> org.hibernate.type.LocaleType@7f4596d0
2020-11-25 19:48:12,202 DEBUG  [main] BasicTypeRegistry: Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@7f4596d0
2020-11-25 19:48:12,204 DEBUG  [main] BasicTypeRegistry: Adding type registration currency -> org.hibernate.type.CurrencyType@f171912
2020-11-25 19:48:12,204 DEBUG  [main] BasicTypeRegistry: Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@f171912
2020-11-25 19:48:12,206 DEBUG  [main] BasicTypeRegistry: Adding type registration timezone -> org.hibernate.type.TimeZoneType@f238e4f
2020-11-25 19:48:12,206 DEBUG  [main] BasicTypeRegistry: Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@f238e4f
2020-11-25 19:48:12,208 DEBUG  [main] BasicTypeRegistry: Adding type registration class -> org.hibernate.type.ClassType@469a7575
2020-11-25 19:48:12,208 DEBUG  [main] BasicTypeRegistry: Adding type registration java.lang.Class -> org.hibernate.type.ClassType@469a7575
2020-11-25 19:48:12,210 DEBUG  [main] BasicTypeRegistry: Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@1c34365c
2020-11-25 19:48:12,210 DEBUG  [main] BasicTypeRegistry: Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@1c34365c
2020-11-25 19:48:12,211 DEBUG  [main] BasicTypeRegistry: Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@637791d
2020-11-25 19:48:12,214 DEBUG  [main] BasicTypeRegistry: Adding type registration binary -> org.hibernate.type.BinaryType@422ab737
2020-11-25 19:48:12,214 DEBUG  [main] BasicTypeRegistry: Adding type registration byte[] -> org.hibernate.type.BinaryType@422ab737
2020-11-25 19:48:12,214 DEBUG  [main] BasicTypeRegistry: Adding type registration [B -> org.hibernate.type.BinaryType@422ab737
2020-11-25 19:48:12,217 DEBUG  [main] BasicTypeRegistry: Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@11381415
2020-11-25 19:48:12,217 DEBUG  [main] BasicTypeRegistry: Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@11381415
2020-11-25 19:48:12,217 DEBUG  [main] BasicTypeRegistry: Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@11381415
2020-11-25 19:48:12,220 DEBUG  [main] BasicTypeRegistry: Adding type registration row_version -> org.hibernate.type.RowVersionType@5403799b
2020-11-25 19:48:12,222 DEBUG  [main] BasicTypeRegistry: Adding type registration image -> org.hibernate.type.ImageType@4293e066
2020-11-25 19:48:12,224 DEBUG  [main] BasicTypeRegistry: Adding type registration characters -> org.hibernate.type.CharArrayType@122635ef
2020-11-25 19:48:12,224 DEBUG  [main] BasicTypeRegistry: Adding type registration char[] -> org.hibernate.type.CharArrayType@122635ef
2020-11-25 19:48:12,225 DEBUG  [main] BasicTypeRegistry: Adding type registration [C -> org.hibernate.type.CharArrayType@122635ef
2020-11-25 19:48:12,227 DEBUG  [main] BasicTypeRegistry: Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@3cc79c02
2020-11-25 19:48:12,227 DEBUG  [main] BasicTypeRegistry: Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@3cc79c02
2020-11-25 19:48:12,227 DEBUG  [main] BasicTypeRegistry: Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@3cc79c02
2020-11-25 19:48:12,228 DEBUG  [main] BasicTypeRegistry: Adding type registration text -> org.hibernate.type.TextType@6be6931f
2020-11-25 19:48:12,229 DEBUG  [main] BasicTypeRegistry: Adding type registration ntext -> org.hibernate.type.NTextType@e7b265e
2020-11-25 19:48:12,232 DEBUG  [main] BasicTypeRegistry: Adding type registration blob -> org.hibernate.type.BlobType@33f2cfda
2020-11-25 19:48:12,232 DEBUG  [main] BasicTypeRegistry: Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@33f2cfda
2020-11-25 19:48:12,233 DEBUG  [main] BasicTypeRegistry: Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@186d8a71
2020-11-25 19:48:12,243 DEBUG  [main] BasicTypeRegistry: Adding type registration clob -> org.hibernate.type.ClobType@3592c1c4
2020-11-25 19:48:12,243 DEBUG  [main] BasicTypeRegistry: Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@3592c1c4
2020-11-25 19:48:12,249 DEBUG  [main] BasicTypeRegistry: Adding type registration nclob -> org.hibernate.type.NClobType@13ed066e
2020-11-25 19:48:12,249 DEBUG  [main] BasicTypeRegistry: Adding type registration java.sql.NClob -> org.hibernate.type.NClobType@13ed066e
2020-11-25 19:48:12,250 DEBUG  [main] BasicTypeRegistry: Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@19489b27
2020-11-25 19:48:12,251 DEBUG  [main] BasicTypeRegistry: Adding type registration materialized_nclob -> org.hibernate.type.MaterializedNClobType@4f116ca2
2020-11-25 19:48:12,253 DEBUG  [main] BasicTypeRegistry: Adding type registration serializable -> org.hibernate.type.SerializableType@78b7f805
2020-11-25 19:48:12,260 DEBUG  [main] BasicTypeRegistry: Adding type registration object -> org.hibernate.type.ObjectType@e9474f
2020-11-25 19:48:12,261 DEBUG  [main] BasicTypeRegistry: Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@e9474f
2020-11-25 19:48:12,262 DEBUG  [main] BasicTypeRegistry: Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@59838256
2020-11-25 19:48:12,262 DEBUG  [main] BasicTypeRegistry: Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@131a7516
2020-11-25 19:48:12,262 DEBUG  [main] BasicTypeRegistry: Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@5ae15
2020-11-25 19:48:12,262 DEBUG  [main] BasicTypeRegistry: Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@577536e0
2020-11-25 19:48:12,262 DEBUG  [main] BasicTypeRegistry: Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@12219f6a
2020-11-25 19:48:12,262 DEBUG  [main] BasicTypeRegistry: Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@52d3fafd
2020-11-25 19:48:12,263 DEBUG  [main] BasicTypeRegistry: Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@7f0b93b4
2020-11-25 19:48:12,263 DEBUG  [main] BasicTypeRegistry: Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@1376883
2020-11-25 19:48:13,453 DEBUG  [main] TypeConfiguration$Scope: Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@74f280bd] to MetadataBuildingContext [org.hibernate.boot.internal.MetadataBuildingContextRootImpl@675b18ff]
2020-11-25 19:48:13,915 DEBUG  [main] EnumType: Using NAMED-based conversion for Enum com.sf.back.entities.Kind
2020-11-25 19:48:14,053 DEBUG  [main] EnumType: Using NAMED-based conversion for Enum com.sf.back.entities.Kind
2020-11-25 19:48:14,277 DEBUG  [main] TypeConfiguration$Scope: Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@74f280bd] to SessionFactoryImpl [org.hibernate.internal.SessionFactoryImpl@36211bbc]
2020-11-25 19:48:14,448 DEBUG  [main] EnumType: Using NAMED-based conversion for Enum com.sf.back.entities.Kind
2020-11-25 19:48:14,449 DEBUG  [main] EnumType: Using NAMED-based conversion for Enum com.sf.back.entities.Kind
2020-11-25 19:48:16,036 DEBUG  [main] EnumType: Using NAMED-based conversion for Enum com.sf.back.entities.Kind
2020-11-25 19:48:16,037 DEBUG  [main] EnumType: Using NAMED-based conversion for Enum com.sf.back.entities.Kind
2020-11-25 19:48:16,378 DEBUG  [main] EnumType: Using NAMED-based conversion for Enum com.sf.back.entities.Kind
2020-11-25 19:48:16,379 DEBUG  [main] EnumType: Using NAMED-based conversion for Enum com.sf.back.entities.Kind
2020-11-25 19:48:16,480 DEBUG  [main] EnumType: Using NAMED-based conversion for Enum com.sf.back.entities.Kind
2020-11-25 19:48:16,523 TRACE  [main] TypeConfiguration$Scope: Handling #sessionFactoryCreated from [org.hibernate.internal.SessionFactoryImpl@36211bbc] for TypeConfiguration
2020-11-25 19:48:18,295 WARN   [main] GlobalSettings: Dozer configuration file not found: dozer.properties.  Using defaults for all Dozer global properties.
2020-11-25 19:48:19,651 WARN   [main] JpaBaseConfiguration$JpaWebConfiguration: spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2020-11-25 19:48:21,706 TRACE  [main] BasicBinder: binding parameter [1] as [BLOB] - [[70, 105, 110, 100, 32, 97, 108, 108, 32, 114, 111, 111, 116, 115, 32, 111, 102, 32, 103, 105, 118, 101, 110, 32, 112, 111, 108, 121, 110, 111, 109, 105, 97, 108]]
2020-11-25 19:48:21,707 TRACE  [main] BasicBinder: binding parameter [2] as [BOOLEAN] - [false]
2020-11-25 19:48:21,708 TRACE  [main] BasicBinder: binding parameter [3] as [VARCHAR] - [POLYNOMIAL]
2020-11-25 19:48:21,709 TRACE  [main] BasicBinder: binding parameter [4] as [INTEGER] - [1]
2020-11-25 19:48:21,711 TRACE  [main] BasicBinder: binding parameter [5] as [BIGINT] - [null]
2020-11-25 19:48:21,711 TRACE  [main] BasicBinder: binding parameter [6] as [INTEGER] - [6]
2020-11-25 19:48:21,728 TRACE  [main] BasicBinder: binding parameter [1] as [BLOB] - [null]
2020-11-25 19:48:21,729 TRACE  [main] BasicBinder: binding parameter [2] as [DOUBLE] - [1.0]
2020-11-25 19:48:21,729 TRACE  [main] BasicBinder: binding parameter [3] as [INTEGER] - [0]
2020-11-25 19:48:21,730 TRACE  [main] BasicBinder: binding parameter [4] as [BOOLEAN] - [true]
2020-11-25 19:48:21,730 TRACE  [main] BasicBinder: binding parameter [5] as [INTEGER] - [0]
2020-11-25 19:48:21,730 TRACE  [main] BasicBinder: binding parameter [6] as [BIGINT] - [1]
2020-11-25 19:48:21,733 TRACE  [main] BasicBinder: binding parameter [1] as [BLOB] - [null]
2020-11-25 19:48:21,734 TRACE  [main] BasicBinder: binding parameter [2] as [DOUBLE] - [2.0]
2020-11-25 19:48:21,734 TRACE  [main] BasicBinder: binding parameter [3] as [INTEGER] - [0]
2020-11-25 19:48:21,734 TRACE  [main] BasicBinder: binding parameter [4] as [BOOLEAN] - [true]
2020-11-25 19:48:21,735 TRACE  [main] BasicBinder: binding parameter [5] as [INTEGER] - [1]
2020-11-25 19:48:21,735 TRACE  [main] BasicBinder: binding parameter [6] as [BIGINT] - [1]
2020-11-25 19:48:21,736 TRACE  [main] BasicBinder: binding parameter [1] as [BLOB] - [null]
2020-11-25 19:48:21,737 TRACE  [main] BasicBinder: binding parameter [2] as [DOUBLE] - [1.0]
2020-11-25 19:48:21,737 TRACE  [main] BasicBinder: binding parameter [3] as [INTEGER] - [0]
2020-11-25 19:48:21,737 TRACE  [main] BasicBinder: binding parameter [4] as [BOOLEAN] - [true]
2020-11-25 19:48:21,738 TRACE  [main] BasicBinder: binding parameter [5] as [INTEGER] - [2]
2020-11-25 19:48:21,738 TRACE  [main] BasicBinder: binding parameter [6] as [BIGINT] - [1]
2020-11-25 19:48:21,740 TRACE  [main] BasicBinder: binding parameter [1] as [BLOB] - [null]
2020-11-25 19:48:21,740 TRACE  [main] BasicBinder: binding parameter [2] as [DOUBLE] - [1.0]
2020-11-25 19:48:21,741 TRACE  [main] BasicBinder: binding parameter [3] as [INTEGER] - [0]
2020-11-25 19:48:21,741 TRACE  [main] BasicBinder: binding parameter [4] as [BOOLEAN] - [false]
2020-11-25 19:48:21,741 TRACE  [main] BasicBinder: binding parameter [5] as [INTEGER] - [0]
2020-11-25 19:48:21,741 TRACE  [main] BasicBinder: binding parameter [6] as [BIGINT] - [1]
2020-11-25 19:48:21,743 TRACE  [main] BasicBinder: binding parameter [1] as [BLOB] - [null]
2020-11-25 19:48:21,743 TRACE  [main] BasicBinder: binding parameter [2] as [DOUBLE] - [1.0]
2020-11-25 19:48:21,743 TRACE  [main] BasicBinder: binding parameter [3] as [INTEGER] - [0]
2020-11-25 19:48:21,744 TRACE  [main] BasicBinder: binding parameter [4] as [BOOLEAN] - [false]
2020-11-25 19:48:21,744 TRACE  [main] BasicBinder: binding parameter [5] as [INTEGER] - [1]
2020-11-25 19:48:21,744 TRACE  [main] BasicBinder: binding parameter [6] as [BIGINT] - [1]
2020-11-25 19:48:30,560 DEBUG  [main] BasicTypeRegistry: Adding type registration boolean -> org.hibernate.type.BooleanType@6babffb5
2020-11-25 19:48:30,561 DEBUG  [main] BasicTypeRegistry: Adding type registration boolean -> org.hibernate.type.BooleanType@6babffb5
2020-11-25 19:48:30,561 DEBUG  [main] BasicTypeRegistry: Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@6babffb5
2020-11-25 19:48:30,561 DEBUG  [main] BasicTypeRegistry: Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@162c1dfb
2020-11-25 19:48:30,561 DEBUG  [main] BasicTypeRegistry: Adding type registration true_false -> org.hibernate.type.TrueFalseType@576b7c74
2020-11-25 19:48:30,562 DEBUG  [main] BasicTypeRegistry: Adding type registration yes_no -> org.hibernate.type.YesNoType@7698b7a4
2020-11-25 19:48:30,562 DEBUG  [main] BasicTypeRegistry: Adding type registration byte -> org.hibernate.type.ByteType@3fbe503c
2020-11-25 19:48:30,562 DEBUG  [main] BasicTypeRegistry: Adding type registration byte -> org.hibernate.type.ByteType@3fbe503c
2020-11-25 19:48:30,563 DEBUG  [main] BasicTypeRegistry: Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@3fbe503c
2020-11-25 19:48:30,563 DEBUG  [main] BasicTypeRegistry: Adding type registration character -> org.hibernate.type.CharacterType@52454457
2020-11-25 19:48:30,563 DEBUG  [main] BasicTypeRegistry: Adding type registration char -> org.hibernate.type.CharacterType@52454457
2020-11-25 19:48:30,563 DEBUG  [main] BasicTypeRegistry: Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@52454457
2020-11-25 19:48:30,563 DEBUG  [main] BasicTypeRegistry: Adding type registration short -> org.hibernate.type.ShortType@24043ec5
2020-11-25 19:48:30,563 DEBUG  [main] BasicTypeRegistry: Adding type registration short -> org.hibernate.type.ShortType@24043ec5
2020-11-25 19:48:30,563 DEBUG  [main] BasicTypeRegistry: Adding type registration java.lang.Short -> org.hibernate.type.ShortType@24043ec5
2020-11-25 19:48:30,563 DEBUG  [main] BasicTypeRegistry: Adding type registration integer -> org.hibernate.type.IntegerType@1ca3d25b
2020-11-25 19:48:30,563 DEBUG  [main] BasicTypeRegistry: Adding type registration int -> org.hibernate.type.IntegerType@1ca3d25b
2020-11-25 19:48:30,563 DEBUG  [main] BasicTypeRegistry: Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@1ca3d25b
2020-11-25 19:48:30,564 DEBUG  [main] BasicTypeRegistry: Adding type registration long -> org.hibernate.type.LongType@7bbfc5ff
2020-11-25 19:48:30,564 DEBUG  [main] BasicTypeRegistry: Adding type registration long -> org.hibernate.type.LongType@7bbfc5ff
2020-11-25 19:48:30,564 DEBUG  [main] BasicTypeRegistry: Adding type registration java.lang.Long -> org.hibernate.type.LongType@7bbfc5ff
2020-11-25 19:48:30,564 DEBUG  [main] BasicTypeRegistry: Adding type registration float -> org.hibernate.type.FloatType@5f8d9767
2020-11-25 19:48:30,564 DEBUG  [main] BasicTypeRegistry: Adding type registration float -> org.hibernate.type.FloatType@5f8d9767
2020-11-25 19:48:30,564 DEBUG  [main] BasicTypeRegistry: Adding type registration java.lang.Float -> org.hibernate.type.FloatType@5f8d9767
2020-11-25 19:48:30,565 DEBUG  [main] BasicTypeRegistry: Adding type registration double -> org.hibernate.type.DoubleType@1980a3f
2020-11-25 19:48:30,565 DEBUG  [main] BasicTypeRegistry: Adding type registration double -> org.hibernate.type.DoubleType@1980a3f
2020-11-25 19:48:30,565 DEBUG  [main] BasicTypeRegistry: Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@1980a3f
2020-11-25 19:48:30,565 DEBUG  [main] BasicTypeRegistry: Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@6f5d0190
2020-11-25 19:48:30,565 DEBUG  [main] BasicTypeRegistry: Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@6f5d0190
2020-11-25 19:48:30,565 DEBUG  [main] BasicTypeRegistry: Adding type registration big_integer -> org.hibernate.type.BigIntegerType@1e5eb20a
2020-11-25 19:48:30,565 DEBUG  [main] BasicTypeRegistry: Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@1e5eb20a
2020-11-25 19:48:30,566 DEBUG  [main] BasicTypeRegistry: Adding type registration string -> org.hibernate.type.StringType@1e8fb66f
2020-11-25 19:48:30,566 DEBUG  [main] BasicTypeRegistry: Adding type registration java.lang.String -> org.hibernate.type.StringType@1e8fb66f
2020-11-25 19:48:30,566 DEBUG  [main] BasicTypeRegistry: Adding type registration nstring -> org.hibernate.type.StringNVarcharType@7f79edee
2020-11-25 19:48:30,566 DEBUG  [main] BasicTypeRegistry: Adding type registration ncharacter -> org.hibernate.type.CharacterNCharType@b5c6a30
2020-11-25 19:48:30,566 DEBUG  [main] BasicTypeRegistry: Adding type registration url -> org.hibernate.type.UrlType@43f03c23
2020-11-25 19:48:30,566 DEBUG  [main] BasicTypeRegistry: Adding type registration java.net.URL -> org.hibernate.type.UrlType@43f03c23
2020-11-25 19:48:30,567 DEBUG  [main] BasicTypeRegistry: Adding type registration Duration -> org.hibernate.type.DurationType@59fc6d05
2020-11-25 19:48:30,567 DEBUG  [main] BasicTypeRegistry: Adding type registration java.time.Duration -> org.hibernate.type.DurationType@59fc6d05
2020-11-25 19:48:30,567 DEBUG  [main] BasicTypeRegistry: Adding type registration Instant -> org.hibernate.type.InstantType@629a9f26
2020-11-25 19:48:30,567 DEBUG  [main] BasicTypeRegistry: Adding type registration java.time.Instant -> org.hibernate.type.InstantType@629a9f26
2020-11-25 19:48:30,567 DEBUG  [main] BasicTypeRegistry: Adding type registration LocalDateTime -> org.hibernate.type.LocalDateTimeType@32091c14
2020-11-25 19:48:30,567 DEBUG  [main] BasicTypeRegistry: Adding type registration java.time.LocalDateTime -> org.hibernate.type.LocalDateTimeType@32091c14
2020-11-25 19:48:30,568 DEBUG  [main] BasicTypeRegistry: Adding type registration LocalDate -> org.hibernate.type.LocalDateType@6579cdbb
2020-11-25 19:48:30,568 DEBUG  [main] BasicTypeRegistry: Adding type registration java.time.LocalDate -> org.hibernate.type.LocalDateType@6579cdbb
2020-11-25 19:48:30,568 DEBUG  [main] BasicTypeRegistry: Adding type registration LocalTime -> org.hibernate.type.LocalTimeType@6b357eb6
2020-11-25 19:48:30,568 DEBUG  [main] BasicTypeRegistry: Adding type registration java.time.LocalTime -> org.hibernate.type.LocalTimeType@6b357eb6
2020-11-25 19:48:30,568 DEBUG  [main] BasicTypeRegistry: Adding type registration OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@66f5a02e
2020-11-25 19:48:30,568 DEBUG  [main] BasicTypeRegistry: Adding type registration java.time.OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@66f5a02e
2020-11-25 19:48:30,569 DEBUG  [main] BasicTypeRegistry: Adding type registration OffsetTime -> org.hibernate.type.OffsetTimeType@72443081
2020-11-25 19:48:30,569 DEBUG  [main] BasicTypeRegistry: Adding type registration java.time.OffsetTime -> org.hibernate.type.OffsetTimeType@72443081
2020-11-25 19:48:30,569 DEBUG  [main] BasicTypeRegistry: Adding type registration ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@27fe059d
2020-11-25 19:48:30,569 DEBUG  [main] BasicTypeRegistry: Adding type registration java.time.ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@27fe059d
2020-11-25 19:48:30,569 DEBUG  [main] BasicTypeRegistry: Adding type registration date -> org.hibernate.type.DateType@5f0bab7e
2020-11-25 19:48:30,569 DEBUG  [main] BasicTypeRegistry: Adding type registration java.sql.Date -> org.hibernate.type.DateType@5f0bab7e
2020-11-25 19:48:30,570 DEBUG  [main] BasicTypeRegistry: Adding type registration time -> org.hibernate.type.TimeType@157d3a45
2020-11-25 19:48:30,572 DEBUG  [main] BasicTypeRegistry: Adding type registration java.sql.Time -> org.hibernate.type.TimeType@157d3a45
2020-11-25 19:48:30,572 DEBUG  [main] BasicTypeRegistry: Adding type registration timestamp -> org.hibernate.type.TimestampType@18d11527
2020-11-25 19:48:30,572 DEBUG  [main] BasicTypeRegistry: Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@18d11527
2020-11-25 19:48:30,572 DEBUG  [main] BasicTypeRegistry: Adding type registration java.util.Date -> org.hibernate.type.TimestampType@18d11527
2020-11-25 19:48:30,572 DEBUG  [main] BasicTypeRegistry: Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@28279a49
2020-11-25 19:48:30,573 DEBUG  [main] BasicTypeRegistry: Adding type registration calendar -> org.hibernate.type.CalendarType@566e142
2020-11-25 19:48:30,573 DEBUG  [main] BasicTypeRegistry: Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@566e142
2020-11-25 19:48:30,573 DEBUG  [main] BasicTypeRegistry: Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@566e142
2020-11-25 19:48:30,577 DEBUG  [main] BasicTypeRegistry: Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@30bf26df
2020-11-25 19:48:30,577 DEBUG  [main] BasicTypeRegistry: Adding type registration locale -> org.hibernate.type.LocaleType@7f4596d0
2020-11-25 19:48:30,577 DEBUG  [main] BasicTypeRegistry: Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@7f4596d0
2020-11-25 19:48:30,577 DEBUG  [main] BasicTypeRegistry: Adding type registration currency -> org.hibernate.type.CurrencyType@f171912
2020-11-25 19:48:30,578 DEBUG  [main] BasicTypeRegistry: Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@f171912
2020-11-25 19:48:30,578 DEBUG  [main] BasicTypeRegistry: Adding type registration timezone -> org.hibernate.type.TimeZoneType@f238e4f
2020-11-25 19:48:30,578 DEBUG  [main] BasicTypeRegistry: Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@f238e4f
2020-11-25 19:48:30,578 DEBUG  [main] BasicTypeRegistry: Adding type registration class -> org.hibernate.type.ClassType@469a7575
2020-11-25 19:48:30,578 DEBUG  [main] BasicTypeRegistry: Adding type registration java.lang.Class -> org.hibernate.type.ClassType@469a7575
2020-11-25 19:48:30,578 DEBUG  [main] BasicTypeRegistry: Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@1c34365c
2020-11-25 19:48:30,578 DEBUG  [main] BasicTypeRegistry: Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@1c34365c
2020-11-25 19:48:30,578 DEBUG  [main] BasicTypeRegistry: Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@637791d
2020-11-25 19:48:30,579 DEBUG  [main] BasicTypeRegistry: Adding type registration binary -> org.hibernate.type.BinaryType@422ab737
2020-11-25 19:48:30,579 DEBUG  [main] BasicTypeRegistry: Adding type registration byte[] -> org.hibernate.type.BinaryType@422ab737
2020-11-25 19:48:30,579 DEBUG  [main] BasicTypeRegistry: Adding type registration [B -> org.hibernate.type.BinaryType@422ab737
2020-11-25 19:48:30,579 DEBUG  [main] BasicTypeRegistry: Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@11381415
2020-11-25 19:48:30,579 DEBUG  [main] BasicTypeRegistry: Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@11381415
2020-11-25 19:48:30,579 DEBUG  [main] BasicTypeRegistry: Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@11381415
2020-11-25 19:48:30,582 DEBUG  [main] BasicTypeRegistry: Adding type registration row_version -> org.hibernate.type.RowVersionType@5403799b
2020-11-25 19:48:30,583 DEBUG  [main] BasicTypeRegistry: Adding type registration image -> org.hibernate.type.ImageType@4293e066
2020-11-25 19:48:30,583 DEBUG  [main] BasicTypeRegistry: Adding type registration characters -> org.hibernate.type.CharArrayType@122635ef
2020-11-25 19:48:30,583 DEBUG  [main] BasicTypeRegistry: Adding type registration char[] -> org.hibernate.type.CharArrayType@122635ef
2020-11-25 19:48:30,583 DEBUG  [main] BasicTypeRegistry: Adding type registration [C -> org.hibernate.type.CharArrayType@122635ef
2020-11-25 19:48:30,583 DEBUG  [main] BasicTypeRegistry: Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@3cc79c02
2020-11-25 19:48:30,583 DEBUG  [main] BasicTypeRegistry: Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@3cc79c02
2020-11-25 19:48:30,584 DEBUG  [main] BasicTypeRegistry: Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@3cc79c02
2020-11-25 19:48:30,589 DEBUG  [main] BasicTypeRegistry: Adding type registration text -> org.hibernate.type.TextType@6be6931f
2020-11-25 19:48:30,632 DEBUG  [main] BasicTypeRegistry: Adding type registration ntext -> org.hibernate.type.NTextType@e7b265e
2020-11-25 19:48:30,634 DEBUG  [main] BasicTypeRegistry: Adding type registration blob -> org.hibernate.type.BlobType@33f2cfda
2020-11-25 19:48:30,634 DEBUG  [main] BasicTypeRegistry: Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@33f2cfda
2020-11-25 19:48:30,635 DEBUG  [main] BasicTypeRegistry: Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@186d8a71
2020-11-25 19:48:30,635 DEBUG  [main] BasicTypeRegistry: Adding type registration clob -> org.hibernate.type.ClobType@3592c1c4
2020-11-25 19:48:30,636 DEBUG  [main] BasicTypeRegistry: Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@3592c1c4
2020-11-25 19:48:30,636 DEBUG  [main] BasicTypeRegistry: Adding type registration nclob -> org.hibernate.type.NClobType@13ed066e
2020-11-25 19:48:30,638 DEBUG  [main] BasicTypeRegistry: Adding type registration java.sql.NClob -> org.hibernate.type.NClobType@13ed066e
2020-11-25 19:48:30,638 DEBUG  [main] BasicTypeRegistry: Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@19489b27
2020-11-25 19:48:30,638 DEBUG  [main] BasicTypeRegistry: Adding type registration materialized_nclob -> org.hibernate.type.MaterializedNClobType@4f116ca2
2020-11-25 19:48:30,639 DEBUG  [main] BasicTypeRegistry: Adding type registration serializable -> org.hibernate.type.SerializableType@78b7f805
2020-11-25 19:48:30,639 DEBUG  [main] BasicTypeRegistry: Adding type registration object -> org.hibernate.type.ObjectType@e9474f
2020-11-25 19:48:30,640 DEBUG  [main] BasicTypeRegistry: Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@e9474f
2020-11-25 19:48:30,640 DEBUG  [main] BasicTypeRegistry: Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@66589252
2020-11-25 19:48:30,641 DEBUG  [main] BasicTypeRegistry: Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@66a8ff6d
2020-11-25 19:48:30,643 DEBUG  [main] BasicTypeRegistry: Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@1abbc1d4
2020-11-25 19:48:30,643 DEBUG  [main] BasicTypeRegistry: Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@48bab2c6
2020-11-25 19:48:30,646 DEBUG  [main] BasicTypeRegistry: Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@6ad26381
2020-11-25 19:48:30,646 DEBUG  [main] BasicTypeRegistry: Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@4b20aa21
2020-11-25 19:48:30,647 DEBUG  [main] BasicTypeRegistry: Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@f5167f0
2020-11-25 19:48:30,648 DEBUG  [main] BasicTypeRegistry: Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@1260c85e
2020-11-25 19:48:30,674 DEBUG  [main] TypeConfiguration$Scope: Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@125124ea] to MetadataBuildingContext [org.hibernate.boot.internal.MetadataBuildingContextRootImpl@314c6f89]
2020-11-25 19:48:30,708 DEBUG  [main] EnumType: Using NAMED-based conversion for Enum com.sf.back.entities.Kind
2020-11-25 19:48:30,712 DEBUG  [main] EnumType: Using NAMED-based conversion for Enum com.sf.back.entities.Kind
2020-11-25 19:48:30,747 DEBUG  [main] TypeConfiguration$Scope: Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@125124ea] to SessionFactoryImpl [org.hibernate.internal.SessionFactoryImpl@ce0bbd5]
2020-11-25 19:48:30,748 DEBUG  [main] EnumType: Using NAMED-based conversion for Enum com.sf.back.entities.Kind
2020-11-25 19:48:30,748 DEBUG  [main] EnumType: Using NAMED-based conversion for Enum com.sf.back.entities.Kind
2020-11-25 19:48:30,750 DEBUG  [main] EnumType: Using NAMED-based conversion for Enum com.sf.back.entities.Kind
2020-11-25 19:48:30,751 DEBUG  [main] EnumType: Using NAMED-based conversion for Enum com.sf.back.entities.Kind
2020-11-25 19:48:30,776 DEBUG  [main] EnumType: Using NAMED-based conversion for Enum com.sf.back.entities.Kind
2020-11-25 19:48:30,776 DEBUG  [main] EnumType: Using NAMED-based conversion for Enum com.sf.back.entities.Kind
2020-11-25 19:48:30,799 DEBUG  [main] EnumType: Using NAMED-based conversion for Enum com.sf.back.entities.Kind
2020-11-25 19:48:30,827 TRACE  [main] TypeConfiguration$Scope: Handling #sessionFactoryCreated from [org.hibernate.internal.SessionFactoryImpl@ce0bbd5] for TypeConfiguration
2020-11-25 19:48:31,756 WARN   [main] JpaBaseConfiguration$JpaWebConfiguration: spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2020-11-25 19:48:32,345 TRACE  [main] BasicBinder: binding parameter [1] as [BLOB] - [[70, 105, 110, 100, 32, 97, 108, 108, 32, 114, 111, 111, 116, 115, 32, 111, 102, 32, 103, 105, 118, 101, 110, 32, 112, 111, 108, 121, 110, 111, 109, 105, 97, 108]]
2020-11-25 19:48:32,346 TRACE  [main] BasicBinder: binding parameter [2] as [BOOLEAN] - [false]
2020-11-25 19:48:32,346 TRACE  [main] BasicBinder: binding parameter [3] as [VARCHAR] - [POLYNOMIAL]
2020-11-25 19:48:32,346 TRACE  [main] BasicBinder: binding parameter [4] as [INTEGER] - [1]
2020-11-25 19:48:32,346 TRACE  [main] BasicBinder: binding parameter [5] as [BIGINT] - [null]
2020-11-25 19:48:32,346 TRACE  [main] BasicBinder: binding parameter [6] as [INTEGER] - [6]
2020-11-25 19:48:32,351 TRACE  [main] BasicBinder: binding parameter [1] as [BLOB] - [null]
2020-11-25 19:48:32,352 TRACE  [main] BasicBinder: binding parameter [2] as [DOUBLE] - [1.0]
2020-11-25 19:48:32,352 TRACE  [main] BasicBinder: binding parameter [3] as [INTEGER] - [0]
2020-11-25 19:48:32,352 TRACE  [main] BasicBinder: binding parameter [4] as [BOOLEAN] - [true]
2020-11-25 19:48:32,352 TRACE  [main] BasicBinder: binding parameter [5] as [INTEGER] - [0]
2020-11-25 19:48:32,352 TRACE  [main] BasicBinder: binding parameter [6] as [BIGINT] - [1]
2020-11-25 19:48:32,354 TRACE  [main] BasicBinder: binding parameter [1] as [BLOB] - [null]
2020-11-25 19:48:32,354 TRACE  [main] BasicBinder: binding parameter [2] as [DOUBLE] - [2.0]
2020-11-25 19:48:32,354 TRACE  [main] BasicBinder: binding parameter [3] as [INTEGER] - [0]
2020-11-25 19:48:32,354 TRACE  [main] BasicBinder: binding parameter [4] as [BOOLEAN] - [true]
2020-11-25 19:48:32,354 TRACE  [main] BasicBinder: binding parameter [5] as [INTEGER] - [1]
2020-11-25 19:48:32,354 TRACE  [main] BasicBinder: binding parameter [6] as [BIGINT] - [1]
2020-11-25 19:48:32,356 TRACE  [main] BasicBinder: binding parameter [1] as [BLOB] - [null]
2020-11-25 19:48:32,356 TRACE  [main] BasicBinder: binding parameter [2] as [DOUBLE] - [1.0]
2020-11-25 19:48:32,356 TRACE  [main] BasicBinder: binding parameter [3] as [INTEGER] - [0]
2020-11-25 19:48:32,356 TRACE  [main] BasicBinder: binding parameter [4] as [BOOLEAN] - [true]
2020-11-25 19:48:32,356 TRACE  [main] BasicBinder: binding parameter [5] as [INTEGER] - [2]
2020-11-25 19:48:32,360 TRACE  [main] BasicBinder: binding parameter [6] as [BIGINT] - [1]
2020-11-25 19:48:32,362 TRACE  [main] BasicBinder: binding parameter [1] as [BLOB] - [null]
2020-11-25 19:48:32,362 TRACE  [main] BasicBinder: binding parameter [2] as [DOUBLE] - [1.0]
2020-11-25 19:48:32,362 TRACE  [main] BasicBinder: binding parameter [3] as [INTEGER] - [0]
2020-11-25 19:48:32,363 TRACE  [main] BasicBinder: binding parameter [4] as [BOOLEAN] - [false]
2020-11-25 19:48:32,363 TRACE  [main] BasicBinder: binding parameter [5] as [INTEGER] - [0]
2020-11-25 19:48:32,363 TRACE  [main] BasicBinder: binding parameter [6] as [BIGINT] - [1]
2020-11-25 19:48:32,364 TRACE  [main] BasicBinder: binding parameter [1] as [BLOB] - [null]
2020-11-25 19:48:32,364 TRACE  [main] BasicBinder: binding parameter [2] as [DOUBLE] - [1.0]
2020-11-25 19:48:32,364 TRACE  [main] BasicBinder: binding parameter [3] as [INTEGER] - [0]
2020-11-25 19:48:32,367 TRACE  [main] BasicBinder: binding parameter [4] as [BOOLEAN] - [false]
2020-11-25 19:48:32,368 TRACE  [main] BasicBinder: binding parameter [5] as [INTEGER] - [1]
2020-11-25 19:48:32,368 TRACE  [main] BasicBinder: binding parameter [6] as [BIGINT] - [1]
2020-11-25 19:48:32,742 TRACE  [main] BasicBinder: binding parameter [1] as [BIGINT] - [2]
2020-11-25 19:48:32,748 TRACE  [main] BasicExtractor: extracted value ([id1_1_2_] : [BIGINT]) - [null]
2020-11-25 19:48:32,749 TRACE  [main] BasicExtractor: extracted value ([id1_0_4_] : [BIGINT]) - [null]
2020-11-25 19:48:32,757 TRACE  [main] BasicExtractor: extracted value ([descript2_1_0_] : [BLOB]) - [[112, 114, 111, 98, 108, 101, 109, 100, 101, 115, 99, 114, 105, 112, 116, 105, 111, 110]]
2020-11-25 19:48:32,759 TRACE  [main] BasicExtractor: extracted value ([is_solve3_1_0_] : [BOOLEAN]) - [null]
2020-11-25 19:48:32,759 TRACE  [main] BasicExtractor: extracted value ([kind4_1_0_] : [VARCHAR]) - [POLYNOMIAL]
2020-11-25 19:48:32,760 TRACE  [main] BasicExtractor: extracted value ([matrix_d5_1_0_] : [INTEGER]) - [1]
2020-11-25 19:48:32,760 TRACE  [main] BasicExtractor: extracted value ([parent_p7_1_0_] : [BIGINT]) - [null]
2020-11-25 19:48:32,760 TRACE  [main] BasicExtractor: extracted value ([problem_6_1_0_] : [INTEGER]) - [22]
2020-11-25 19:48:32,761 TRACE  [main] BasicExtractor: extracted value ([problem_7_0_3_] : [BIGINT]) - [null]
2020-11-25 19:48:32,762 TRACE  [main] BasicExtractor: extracted value ([parent_p7_1_1_] : [BIGINT]) - [null]
2020-11-25 19:48:32,820 TRACE  [main] CollectionType: Created collection wrapper: [com.sf.back.entities.Problem.matrixes#2]
2020-11-25 19:48:32,830 TRACE  [main] BasicBinder: binding parameter [1] as [BIGINT] - [2]
2020-11-25 19:48:32,833 TRACE  [main] BasicExtractor: extracted value ([id1_0_1_] : [BIGINT]) - [6]
2020-11-25 19:48:32,835 TRACE  [main] BasicExtractor: extracted value ([binary_v2_0_1_] : [BLOB]) - [null]
2020-11-25 19:48:32,837 TRACE  [main] BasicExtractor: extracted value ([float_va3_0_1_] : [DOUBLE]) - [1.0]
2020-11-25 19:48:32,837 TRACE  [main] BasicExtractor: extracted value ([i4_0_1_] : [INTEGER]) - [0]
2020-11-25 19:48:32,838 TRACE  [main] BasicExtractor: extracted value ([is_condi5_0_1_] : [BOOLEAN]) - [true]
2020-11-25 19:48:32,838 TRACE  [main] BasicExtractor: extracted value ([j6_0_1_] : [INTEGER]) - [0]
2020-11-25 19:48:32,839 TRACE  [main] BasicExtractor: extracted value ([problem_7_0_1_] : [BIGINT]) - [2]
2020-11-25 19:48:32,839 TRACE  [main] BasicExtractor: extracted value ([problem_7_0_0_] : [BIGINT]) - [2]
2020-11-25 19:48:32,840 TRACE  [main] BasicExtractor: extracted value ([id1_0_0_] : [BIGINT]) - [6]
2020-11-25 19:48:32,860 TRACE  [main] BasicExtractor: extracted value ([id1_0_1_] : [BIGINT]) - [7]
2020-11-25 19:48:32,861 TRACE  [main] BasicExtractor: extracted value ([binary_v2_0_1_] : [BLOB]) - [null]
2020-11-25 19:48:32,870 TRACE  [main] BasicExtractor: extracted value ([float_va3_0_1_] : [DOUBLE]) - [2.718281828459045]
2020-11-25 19:48:32,870 TRACE  [main] BasicExtractor: extracted value ([i4_0_1_] : [INTEGER]) - [0]
2020-11-25 19:48:32,871 TRACE  [main] BasicExtractor: extracted value ([is_condi5_0_1_] : [BOOLEAN]) - [true]
2020-11-25 19:48:32,871 TRACE  [main] BasicExtractor: extracted value ([j6_0_1_] : [INTEGER]) - [1]
2020-11-25 19:48:32,873 TRACE  [main] BasicExtractor: extracted value ([problem_7_0_1_] : [BIGINT]) - [2]
2020-11-25 19:48:32,874 TRACE  [main] BasicExtractor: extracted value ([problem_7_0_0_] : [BIGINT]) - [2]
2020-11-25 19:48:32,874 TRACE  [main] BasicExtractor: extracted value ([id1_0_0_] : [BIGINT]) - [7]
2020-11-25 19:48:32,875 TRACE  [main] BasicExtractor: extracted value ([id1_0_1_] : [BIGINT]) - [8]
2020-11-25 19:48:32,876 TRACE  [main] BasicExtractor: extracted value ([binary_v2_0_1_] : [BLOB]) - [null]
2020-11-25 19:48:32,876 TRACE  [main] BasicExtractor: extracted value ([float_va3_0_1_] : [DOUBLE]) - [7.38905609893065]
2020-11-25 19:48:32,879 TRACE  [main] BasicExtractor: extracted value ([i4_0_1_] : [INTEGER]) - [0]
2020-11-25 19:48:32,880 TRACE  [main] BasicExtractor: extracted value ([is_condi5_0_1_] : [BOOLEAN]) - [true]
2020-11-25 19:48:32,880 TRACE  [main] BasicExtractor: extracted value ([j6_0_1_] : [INTEGER]) - [2]
2020-11-25 19:48:32,880 TRACE  [main] BasicExtractor: extracted value ([problem_7_0_1_] : [BIGINT]) - [2]
2020-11-25 19:48:32,881 TRACE  [main] BasicExtractor: extracted value ([problem_7_0_0_] : [BIGINT]) - [2]
2020-11-25 19:48:32,889 TRACE  [main] BasicExtractor: extracted value ([id1_0_0_] : [BIGINT]) - [8]
2020-11-25 19:48:32,893 TRACE  [main] BasicExtractor: extracted value ([id1_0_1_] : [BIGINT]) - [9]
2020-11-25 19:48:32,894 TRACE  [main] BasicExtractor: extracted value ([binary_v2_0_1_] : [BLOB]) - [null]
2020-11-25 19:48:32,895 TRACE  [main] BasicExtractor: extracted value ([float_va3_0_1_] : [DOUBLE]) - [20.085536923187668]
2020-11-25 19:48:32,896 TRACE  [main] BasicExtractor: extracted value ([i4_0_1_] : [INTEGER]) - [0]
2020-11-25 19:48:32,896 TRACE  [main] BasicExtractor: extracted value ([is_condi5_0_1_] : [BOOLEAN]) - [true]
2020-11-25 19:48:32,897 TRACE  [main] BasicExtractor: extracted value ([j6_0_1_] : [INTEGER]) - [3]
2020-11-25 19:48:32,897 TRACE  [main] BasicExtractor: extracted value ([problem_7_0_1_] : [BIGINT]) - [2]
2020-11-25 19:48:32,897 TRACE  [main] BasicExtractor: extracted value ([problem_7_0_0_] : [BIGINT]) - [2]
2020-11-25 19:48:32,898 TRACE  [main] BasicExtractor: extracted value ([id1_0_0_] : [BIGINT]) - [9]
2020-11-25 19:48:32,898 TRACE  [main] BasicExtractor: extracted value ([id1_0_1_] : [BIGINT]) - [10]
2020-11-25 19:48:32,899 TRACE  [main] BasicExtractor: extracted value ([binary_v2_0_1_] : [BLOB]) - [null]
2020-11-25 19:48:32,901 TRACE  [main] BasicExtractor: extracted value ([float_va3_0_1_] : [DOUBLE]) - [54.598150033144236]
2020-11-25 19:48:32,902 TRACE  [main] BasicExtractor: extracted value ([i4_0_1_] : [INTEGER]) - [0]
2020-11-25 19:48:32,902 TRACE  [main] BasicExtractor: extracted value ([is_condi5_0_1_] : [BOOLEAN]) - [true]
2020-11-25 19:48:32,903 TRACE  [main] BasicExtractor: extracted value ([j6_0_1_] : [INTEGER]) - [4]
2020-11-25 19:48:32,903 TRACE  [main] BasicExtractor: extracted value ([problem_7_0_1_] : [BIGINT]) - [2]
2020-11-25 19:48:32,903 TRACE  [main] BasicExtractor: extracted value ([problem_7_0_0_] : [BIGINT]) - [2]
2020-11-25 19:48:32,906 TRACE  [main] BasicExtractor: extracted value ([id1_0_0_] : [BIGINT]) - [10]
2020-11-25 19:48:32,906 TRACE  [main] BasicExtractor: extracted value ([id1_0_1_] : [BIGINT]) - [11]
2020-11-25 19:48:32,907 TRACE  [main] BasicExtractor: extracted value ([binary_v2_0_1_] : [BLOB]) - [null]
2020-11-25 19:48:32,907 TRACE  [main] BasicExtractor: extracted value ([float_va3_0_1_] : [DOUBLE]) - [148.4131591025766]
2020-11-25 19:48:32,907 TRACE  [main] BasicExtractor: extracted value ([i4_0_1_] : [INTEGER]) - [0]
2020-11-25 19:48:32,907 TRACE  [main] BasicExtractor: extracted value ([is_condi5_0_1_] : [BOOLEAN]) - [true]
2020-11-25 19:48:32,908 TRACE  [main] BasicExtractor: extracted value ([j6_0_1_] : [INTEGER]) - [5]
2020-11-25 19:48:32,908 TRACE  [main] BasicExtractor: extracted value ([problem_7_0_1_] : [BIGINT]) - [2]
2020-11-25 19:48:32,908 TRACE  [main] BasicExtractor: extracted value ([problem_7_0_0_] : [BIGINT]) - [2]
2020-11-25 19:48:32,909 TRACE  [main] BasicExtractor: extracted value ([id1_0_0_] : [BIGINT]) - [11]
2020-11-25 19:48:33,258 TRACE  [main] BasicBinder: binding parameter [1] as [BIGINT] - [2]
2020-11-25 19:48:33,260 TRACE  [main] BasicExtractor: extracted value ([id1_1_2_] : [BIGINT]) - [null]
2020-11-25 19:48:33,260 TRACE  [main] BasicExtractor: extracted value ([id1_0_4_] : [BIGINT]) - [null]
2020-11-25 19:48:33,260 TRACE  [main] BasicExtractor: extracted value ([descript2_1_0_] : [BLOB]) - [[112, 114, 111, 98, 108, 101, 109, 100, 101, 115, 99, 114, 105, 112, 116, 105, 111, 110]]
2020-11-25 19:48:33,260 TRACE  [main] BasicExtractor: extracted value ([is_solve3_1_0_] : [BOOLEAN]) - [null]
2020-11-25 19:48:33,261 TRACE  [main] BasicExtractor: extracted value ([kind4_1_0_] : [VARCHAR]) - [POLYNOMIAL]
2020-11-25 19:48:33,261 TRACE  [main] BasicExtractor: extracted value ([matrix_d5_1_0_] : [INTEGER]) - [1]
2020-11-25 19:48:33,261 TRACE  [main] BasicExtractor: extracted value ([parent_p7_1_0_] : [BIGINT]) - [null]
2020-11-25 19:48:33,261 TRACE  [main] BasicExtractor: extracted value ([problem_6_1_0_] : [INTEGER]) - [22]
2020-11-25 19:48:33,261 TRACE  [main] BasicExtractor: extracted value ([problem_7_0_3_] : [BIGINT]) - [null]
2020-11-25 19:48:33,261 TRACE  [main] BasicExtractor: extracted value ([parent_p7_1_1_] : [BIGINT]) - [null]
2020-11-25 19:48:33,262 TRACE  [main] CollectionType: Created collection wrapper: [com.sf.back.entities.Problem.matrixes#2]
2020-11-25 19:48:33,263 TRACE  [main] BasicBinder: binding parameter [1] as [BIGINT] - [2]
2020-11-25 19:48:33,263 TRACE  [main] BasicExtractor: extracted value ([id1_0_1_] : [BIGINT]) - [6]
2020-11-25 19:48:33,263 TRACE  [main] BasicExtractor: extracted value ([binary_v2_0_1_] : [BLOB]) - [null]
2020-11-25 19:48:33,263 TRACE  [main] BasicExtractor: extracted value ([float_va3_0_1_] : [DOUBLE]) - [1.0]
2020-11-25 19:48:33,264 TRACE  [main] BasicExtractor: extracted value ([i4_0_1_] : [INTEGER]) - [0]
2020-11-25 19:48:33,264 TRACE  [main] BasicExtractor: extracted value ([is_condi5_0_1_] : [BOOLEAN]) - [true]
2020-11-25 19:48:33,264 TRACE  [main] BasicExtractor: extracted value ([j6_0_1_] : [INTEGER]) - [0]
2020-11-25 19:48:33,264 TRACE  [main] BasicExtractor: extracted value ([problem_7_0_1_] : [BIGINT]) - [2]
2020-11-25 19:48:33,264 TRACE  [main] BasicExtractor: extracted value ([problem_7_0_0_] : [BIGINT]) - [2]
2020-11-25 19:48:33,264 TRACE  [main] BasicExtractor: extracted value ([id1_0_0_] : [BIGINT]) - [6]
2020-11-25 19:48:33,264 TRACE  [main] BasicExtractor: extracted value ([id1_0_1_] : [BIGINT]) - [7]
2020-11-25 19:48:33,264 TRACE  [main] BasicExtractor: extracted value ([binary_v2_0_1_] : [BLOB]) - [null]
2020-11-25 19:48:33,265 TRACE  [main] BasicExtractor: extracted value ([float_va3_0_1_] : [DOUBLE]) - [2.718281828459045]
2020-11-25 19:48:33,265 TRACE  [main] BasicExtractor: extracted value ([i4_0_1_] : [INTEGER]) - [0]
2020-11-25 19:48:33,265 TRACE  [main] BasicExtractor: extracted value ([is_condi5_0_1_] : [BOOLEAN]) - [true]
2020-11-25 19:48:33,265 TRACE  [main] BasicExtractor: extracted value ([j6_0_1_] : [INTEGER]) - [1]
2020-11-25 19:48:33,265 TRACE  [main] BasicExtractor: extracted value ([problem_7_0_1_] : [BIGINT]) - [2]
2020-11-25 19:48:33,265 TRACE  [main] BasicExtractor: extracted value ([problem_7_0_0_] : [BIGINT]) - [2]
2020-11-25 19:48:33,265 TRACE  [main] BasicExtractor: extracted value ([id1_0_0_] : [BIGINT]) - [7]
2020-11-25 19:48:33,265 TRACE  [main] BasicExtractor: extracted value ([id1_0_1_] : [BIGINT]) - [8]
2020-11-25 19:48:33,266 TRACE  [main] BasicExtractor: extracted value ([binary_v2_0_1_] : [BLOB]) - [null]
2020-11-25 19:48:33,266 TRACE  [main] BasicExtractor: extracted value ([float_va3_0_1_] : [DOUBLE]) - [7.38905609893065]
2020-11-25 19:48:33,266 TRACE  [main] BasicExtractor: extracted value ([i4_0_1_] : [INTEGER]) - [0]
2020-11-25 19:48:33,266 TRACE  [main] BasicExtractor: extracted value ([is_condi5_0_1_] : [BOOLEAN]) - [true]
2020-11-25 19:48:33,266 TRACE  [main] BasicExtractor: extracted value ([j6_0_1_] : [INTEGER]) - [2]
2020-11-25 19:48:33,266 TRACE  [main] BasicExtractor: extracted value ([problem_7_0_1_] : [BIGINT]) - [2]
2020-11-25 19:48:33,266 TRACE  [main] BasicExtractor: extracted value ([problem_7_0_0_] : [BIGINT]) - [2]
2020-11-25 19:48:33,266 TRACE  [main] BasicExtractor: extracted value ([id1_0_0_] : [BIGINT]) - [8]
2020-11-25 19:48:33,267 TRACE  [main] BasicExtractor: extracted value ([id1_0_1_] : [BIGINT]) - [9]
2020-11-25 19:48:33,267 TRACE  [main] BasicExtractor: extracted value ([binary_v2_0_1_] : [BLOB]) - [null]
2020-11-25 19:48:33,267 TRACE  [main] BasicExtractor: extracted value ([float_va3_0_1_] : [DOUBLE]) - [20.085536923187668]
2020-11-25 19:48:33,267 TRACE  [main] BasicExtractor: extracted value ([i4_0_1_] : [INTEGER]) - [0]
2020-11-25 19:48:33,267 TRACE  [main] BasicExtractor: extracted value ([is_condi5_0_1_] : [BOOLEAN]) - [true]
2020-11-25 19:48:33,268 TRACE  [main] BasicExtractor: extracted value ([j6_0_1_] : [INTEGER]) - [3]
2020-11-25 19:48:33,268 TRACE  [main] BasicExtractor: extracted value ([problem_7_0_1_] : [BIGINT]) - [2]
2020-11-25 19:48:33,268 TRACE  [main] BasicExtractor: extracted value ([problem_7_0_0_] : [BIGINT]) - [2]
2020-11-25 19:48:33,268 TRACE  [main] BasicExtractor: extracted value ([id1_0_0_] : [BIGINT]) - [9]
2020-11-25 19:48:33,268 TRACE  [main] BasicExtractor: extracted value ([id1_0_1_] : [BIGINT]) - [10]
2020-11-25 19:48:33,268 TRACE  [main] BasicExtractor: extracted value ([binary_v2_0_1_] : [BLOB]) - [null]
2020-11-25 19:48:33,269 TRACE  [main] BasicExtractor: extracted value ([float_va3_0_1_] : [DOUBLE]) - [54.598150033144236]
2020-11-25 19:48:33,269 TRACE  [main] BasicExtractor: extracted value ([i4_0_1_] : [INTEGER]) - [0]
2020-11-25 19:48:33,269 TRACE  [main] BasicExtractor: extracted value ([is_condi5_0_1_] : [BOOLEAN]) - [true]
2020-11-25 19:48:33,269 TRACE  [main] BasicExtractor: extracted value ([j6_0_1_] : [INTEGER]) - [4]
2020-11-25 19:48:33,269 TRACE  [main] BasicExtractor: extracted value ([problem_7_0_1_] : [BIGINT]) - [2]
2020-11-25 19:48:33,269 TRACE  [main] BasicExtractor: extracted value ([problem_7_0_0_] : [BIGINT]) - [2]
2020-11-25 19:48:33,269 TRACE  [main] BasicExtractor: extracted value ([id1_0_0_] : [BIGINT]) - [10]
2020-11-25 19:48:33,270 TRACE  [main] BasicExtractor: extracted value ([id1_0_1_] : [BIGINT]) - [11]
2020-11-25 19:48:33,270 TRACE  [main] BasicExtractor: extracted value ([binary_v2_0_1_] : [BLOB]) - [null]
2020-11-25 19:48:33,270 TRACE  [main] BasicExtractor: extracted value ([float_va3_0_1_] : [DOUBLE]) - [148.4131591025766]
2020-11-25 19:48:33,270 TRACE  [main] BasicExtractor: extracted value ([i4_0_1_] : [INTEGER]) - [0]
2020-11-25 19:48:33,270 TRACE  [main] BasicExtractor: extracted value ([is_condi5_0_1_] : [BOOLEAN]) - [true]
2020-11-25 19:48:33,270 TRACE  [main] BasicExtractor: extracted value ([j6_0_1_] : [INTEGER]) - [5]
2020-11-25 19:48:33,270 TRACE  [main] BasicExtractor: extracted value ([problem_7_0_1_] : [BIGINT]) - [2]
2020-11-25 19:48:33,270 TRACE  [main] BasicExtractor: extracted value ([problem_7_0_0_] : [BIGINT]) - [2]
2020-11-25 19:48:33,273 TRACE  [main] BasicExtractor: extracted value ([id1_0_0_] : [BIGINT]) - [11]
2020-11-25 19:48:33,303 TRACE  [main] BasicBinder: binding parameter [1] as [BLOB] - [[100, 101, 115, 99, 114, 105, 112, 116, 105, 111, 110, 100, 101, 115, 99, 114, 105, 112, 116, 105, 111, 110]]
2020-11-25 19:48:33,304 TRACE  [main] BasicBinder: binding parameter [2] as [BOOLEAN] - [null]
2020-11-25 19:48:33,304 TRACE  [main] BasicBinder: binding parameter [3] as [VARCHAR] - [POLYNOMIAL]
2020-11-25 19:48:33,304 TRACE  [main] BasicBinder: binding parameter [4] as [INTEGER] - [1]
2020-11-25 19:48:33,304 TRACE  [main] BasicBinder: binding parameter [5] as [BIGINT] - [null]
2020-11-25 19:48:33,304 TRACE  [main] BasicBinder: binding parameter [6] as [INTEGER] - [22]
2020-11-25 19:48:33,305 TRACE  [main] BasicBinder: binding parameter [7] as [BIGINT] - [2]
2020-11-25 19:48:33,308 TRACE  [main] BasicBinder: binding parameter [1] as [BLOB] - [null]
2020-11-25 19:48:33,309 TRACE  [main] BasicBinder: binding parameter [2] as [DOUBLE] - [1.01]
2020-11-25 19:48:33,309 TRACE  [main] BasicBinder: binding parameter [3] as [INTEGER] - [0]
2020-11-25 19:48:33,309 TRACE  [main] BasicBinder: binding parameter [4] as [BOOLEAN] - [true]
2020-11-25 19:48:33,309 TRACE  [main] BasicBinder: binding parameter [5] as [INTEGER] - [0]
2020-11-25 19:48:33,309 TRACE  [main] BasicBinder: binding parameter [6] as [BIGINT] - [2]
2020-11-25 19:48:33,309 TRACE  [main] BasicBinder: binding parameter [7] as [BIGINT] - [6]
2020-11-25 19:48:33,315 TRACE  [main] BasicBinder: binding parameter [1] as [BIGINT] - [2]
2020-11-25 19:48:33,317 TRACE  [main] BasicExtractor: extracted value ([id1_1_2_] : [BIGINT]) - [null]
2020-11-25 19:48:33,317 TRACE  [main] BasicExtractor: extracted value ([id1_0_4_] : [BIGINT]) - [null]
2020-11-25 19:48:33,319 TRACE  [main] BasicExtractor: extracted value ([descript2_1_0_] : [BLOB]) - [[100, 101, 115, 99, 114, 105, 112, 116, 105, 111, 110, 100, 101, 115, 99, 114, 105, 112, 116, 105, 111, 110]]
2020-11-25 19:48:33,319 TRACE  [main] BasicExtractor: extracted value ([is_solve3_1_0_] : [BOOLEAN]) - [null]
2020-11-25 19:48:33,319 TRACE  [main] BasicExtractor: extracted value ([kind4_1_0_] : [VARCHAR]) - [POLYNOMIAL]
2020-11-25 19:48:33,320 TRACE  [main] BasicExtractor: extracted value ([matrix_d5_1_0_] : [INTEGER]) - [1]
2020-11-25 19:48:33,320 TRACE  [main] BasicExtractor: extracted value ([parent_p7_1_0_] : [BIGINT]) - [null]
2020-11-25 19:48:33,320 TRACE  [main] BasicExtractor: extracted value ([problem_6_1_0_] : [INTEGER]) - [22]
2020-11-25 19:48:33,321 TRACE  [main] BasicExtractor: extracted value ([problem_7_0_3_] : [BIGINT]) - [null]
2020-11-25 19:48:33,321 TRACE  [main] BasicExtractor: extracted value ([parent_p7_1_1_] : [BIGINT]) - [null]
2020-11-25 19:48:33,321 TRACE  [main] CollectionType: Created collection wrapper: [com.sf.back.entities.Problem.matrixes#2]
2020-11-25 19:48:33,322 TRACE  [main] BasicBinder: binding parameter [1] as [BIGINT] - [2]
2020-11-25 19:48:33,322 TRACE  [main] BasicExtractor: extracted value ([id1_0_1_] : [BIGINT]) - [6]
2020-11-25 19:48:33,322 TRACE  [main] BasicExtractor: extracted value ([binary_v2_0_1_] : [BLOB]) - [null]
2020-11-25 19:48:33,323 TRACE  [main] BasicExtractor: extracted value ([float_va3_0_1_] : [DOUBLE]) - [1.01]
2020-11-25 19:48:33,323 TRACE  [main] BasicExtractor: extracted value ([i4_0_1_] : [INTEGER]) - [0]
2020-11-25 19:48:33,323 TRACE  [main] BasicExtractor: extracted value ([is_condi5_0_1_] : [BOOLEAN]) - [true]
2020-11-25 19:48:33,323 TRACE  [main] BasicExtractor: extracted value ([j6_0_1_] : [INTEGER]) - [0]
2020-11-25 19:48:33,323 TRACE  [main] BasicExtractor: extracted value ([problem_7_0_1_] : [BIGINT]) - [2]
2020-11-25 19:48:33,323 TRACE  [main] BasicExtractor: extracted value ([problem_7_0_0_] : [BIGINT]) - [2]
2020-11-25 19:48:33,324 TRACE  [main] BasicExtractor: extracted value ([id1_0_0_] : [BIGINT]) - [6]
2020-11-25 19:48:33,324 TRACE  [main] BasicExtractor: extracted value ([id1_0_1_] : [BIGINT]) - [7]
2020-11-25 19:48:33,325 TRACE  [main] BasicExtractor: extracted value ([binary_v2_0_1_] : [BLOB]) - [null]
2020-11-25 19:48:33,325 TRACE  [main] BasicExtractor: extracted value ([float_va3_0_1_] : [DOUBLE]) - [2.718281828459045]
2020-11-25 19:48:33,325 TRACE  [main] BasicExtractor: extracted value ([i4_0_1_] : [INTEGER]) - [0]
2020-11-25 19:48:33,325 TRACE  [main] BasicExtractor: extracted value ([is_condi5_0_1_] : [BOOLEAN]) - [true]
2020-11-25 19:48:33,336 TRACE  [main] BasicExtractor: extracted value ([j6_0_1_] : [INTEGER]) - [1]
2020-11-25 19:48:33,337 TRACE  [main] BasicExtractor: extracted value ([problem_7_0_1_] : [BIGINT]) - [2]
2020-11-25 19:48:33,337 TRACE  [main] BasicExtractor: extracted value ([problem_7_0_0_] : [BIGINT]) - [2]
2020-11-25 19:48:33,337 TRACE  [main] BasicExtractor: extracted value ([id1_0_0_] : [BIGINT]) - [7]
2020-11-25 19:48:33,337 TRACE  [main] BasicExtractor: extracted value ([id1_0_1_] : [BIGINT]) - [8]
2020-11-25 19:48:33,338 TRACE  [main] BasicExtractor: extracted value ([binary_v2_0_1_] : [BLOB]) - [null]
2020-11-25 19:48:33,338 TRACE  [main] BasicExtractor: extracted value ([float_va3_0_1_] : [DOUBLE]) - [7.38905609893065]
2020-11-25 19:48:33,338 TRACE  [main] BasicExtractor: extracted value ([i4_0_1_] : [INTEGER]) - [0]
2020-11-25 19:48:33,338 TRACE  [main] BasicExtractor: extracted value ([is_condi5_0_1_] : [BOOLEAN]) - [true]
2020-11-25 19:48:33,338 TRACE  [main] BasicExtractor: extracted value ([j6_0_1_] : [INTEGER]) - [2]
2020-11-25 19:48:33,338 TRACE  [main] BasicExtractor: extracted value ([problem_7_0_1_] : [BIGINT]) - [2]
2020-11-25 19:48:33,339 TRACE  [main] BasicExtractor: extracted value ([problem_7_0_0_] : [BIGINT]) - [2]
2020-11-25 19:48:33,339 TRACE  [main] BasicExtractor: extracted value ([id1_0_0_] : [BIGINT]) - [8]
2020-11-25 19:48:33,339 TRACE  [main] BasicExtractor: extracted value ([id1_0_1_] : [BIGINT]) - [9]
2020-11-25 19:48:33,339 TRACE  [main] BasicExtractor: extracted value ([binary_v2_0_1_] : [BLOB]) - [null]
2020-11-25 19:48:33,340 TRACE  [main] BasicExtractor: extracted value ([float_va3_0_1_] : [DOUBLE]) - [20.085536923187668]
2020-11-25 19:48:33,341 TRACE  [main] BasicExtractor: extracted value ([i4_0_1_] : [INTEGER]) - [0]
2020-11-25 19:48:33,341 TRACE  [main] BasicExtractor: extracted value ([is_condi5_0_1_] : [BOOLEAN]) - [true]
2020-11-25 19:48:33,341 TRACE  [main] BasicExtractor: extracted value ([j6_0_1_] : [INTEGER]) - [3]
2020-11-25 19:48:33,342 TRACE  [main] BasicExtractor: extracted value ([problem_7_0_1_] : [BIGINT]) - [2]
2020-11-25 19:48:33,342 TRACE  [main] BasicExtractor: extracted value ([problem_7_0_0_] : [BIGINT]) - [2]
2020-11-25 19:48:33,343 TRACE  [main] BasicExtractor: extracted value ([id1_0_0_] : [BIGINT]) - [9]
2020-11-25 19:48:33,343 TRACE  [main] BasicExtractor: extracted value ([id1_0_1_] : [BIGINT]) - [10]
2020-11-25 19:48:33,344 TRACE  [main] BasicExtractor: extracted value ([binary_v2_0_1_] : [BLOB]) - [null]
2020-11-25 19:48:33,344 TRACE  [main] BasicExtractor: extracted value ([float_va3_0_1_] : [DOUBLE]) - [54.598150033144236]
2020-11-25 19:48:33,344 TRACE  [main] BasicExtractor: extracted value ([i4_0_1_] : [INTEGER]) - [0]
2020-11-25 19:48:33,344 TRACE  [main] BasicExtractor: extracted value ([is_condi5_0_1_] : [BOOLEAN]) - [true]
2020-11-25 19:48:33,345 TRACE  [main] BasicExtractor: extracted value ([j6_0_1_] : [INTEGER]) - [4]
2020-11-25 19:48:33,345 TRACE  [main] BasicExtractor: extracted value ([problem_7_0_1_] : [BIGINT]) - [2]
2020-11-25 19:48:33,346 TRACE  [main] BasicExtractor: extracted value ([problem_7_0_0_] : [BIGINT]) - [2]
2020-11-25 19:48:33,346 TRACE  [main] BasicExtractor: extracted value ([id1_0_0_] : [BIGINT]) - [10]
2020-11-25 19:48:33,347 TRACE  [main] BasicExtractor: extracted value ([id1_0_1_] : [BIGINT]) - [11]
2020-11-25 19:48:33,347 TRACE  [main] BasicExtractor: extracted value ([binary_v2_0_1_] : [BLOB]) - [null]
2020-11-25 19:48:33,347 TRACE  [main] BasicExtractor: extracted value ([float_va3_0_1_] : [DOUBLE]) - [148.4131591025766]
2020-11-25 19:48:33,348 TRACE  [main] BasicExtractor: extracted value ([i4_0_1_] : [INTEGER]) - [0]
2020-11-25 19:48:33,348 TRACE  [main] BasicExtractor: extracted value ([is_condi5_0_1_] : [BOOLEAN]) - [true]
2020-11-25 19:48:33,348 TRACE  [main] BasicExtractor: extracted value ([j6_0_1_] : [INTEGER]) - [5]
2020-11-25 19:48:33,348 TRACE  [main] BasicExtractor: extracted value ([problem_7_0_1_] : [BIGINT]) - [2]
2020-11-25 19:48:33,349 TRACE  [main] BasicExtractor: extracted value ([problem_7_0_0_] : [BIGINT]) - [2]
2020-11-25 19:48:33,349 TRACE  [main] BasicExtractor: extracted value ([id1_0_0_] : [BIGINT]) - [11]
2020-11-25 19:48:33,409 TRACE  [main] BasicBinder: binding parameter [1] as [BLOB] - [[100, 101, 115, 99, 114, 105, 112, 116, 105, 111, 110]]
2020-11-25 19:48:33,409 TRACE  [main] BasicBinder: binding parameter [2] as [BOOLEAN] - [false]
2020-11-25 19:48:33,410 TRACE  [main] BasicBinder: binding parameter [3] as [VARCHAR] - [POLYNOMIAL]
2020-11-25 19:48:33,410 TRACE  [main] BasicBinder: binding parameter [4] as [INTEGER] - [12]
2020-11-25 19:48:33,411 TRACE  [main] BasicBinder: binding parameter [5] as [BIGINT] - [null]
2020-11-25 19:48:33,411 TRACE  [main] BasicBinder: binding parameter [6] as [INTEGER] - [null]
2020-11-25 19:48:33,413 TRACE  [main] BasicBinder: binding parameter [1] as [BLOB] - [null]
2020-11-25 19:48:33,413 TRACE  [main] BasicBinder: binding parameter [2] as [DOUBLE] - [0.0]
2020-11-25 19:48:33,414 TRACE  [main] BasicBinder: binding parameter [3] as [INTEGER] - [0]
2020-11-25 19:48:33,414 TRACE  [main] BasicBinder: binding parameter [4] as [BOOLEAN] - [true]
2020-11-25 19:48:33,414 TRACE  [main] BasicBinder: binding parameter [5] as [INTEGER] - [0]
2020-11-25 19:48:33,414 TRACE  [main] BasicBinder: binding parameter [6] as [BIGINT] - [4]
2020-11-25 19:48:33,416 TRACE  [main] BasicBinder: binding parameter [1] as [BLOB] - [null]
2020-11-25 19:48:33,417 TRACE  [main] BasicBinder: binding parameter [2] as [DOUBLE] - [1.0]
2020-11-25 19:48:33,417 TRACE  [main] BasicBinder: binding parameter [3] as [INTEGER] - [0]
2020-11-25 19:48:33,417 TRACE  [main] BasicBinder: binding parameter [4] as [BOOLEAN] - [true]
2020-11-25 19:48:33,417 TRACE  [main] BasicBinder: binding parameter [5] as [INTEGER] - [1]
2020-11-25 19:48:33,418 TRACE  [main] BasicBinder: binding parameter [6] as [BIGINT] - [4]
2020-11-25 19:48:33,419 TRACE  [main] BasicBinder: binding parameter [1] as [BLOB] - [null]
2020-11-25 19:48:33,419 TRACE  [main] BasicBinder: binding parameter [2] as [DOUBLE] - [2.0]
2020-11-25 19:48:33,420 TRACE  [main] BasicBinder: binding parameter [3] as [INTEGER] - [0]
2020-11-25 19:48:33,420 TRACE  [main] BasicBinder: binding parameter [4] as [BOOLEAN] - [true]
2020-11-25 19:48:33,420 TRACE  [main] BasicBinder: binding parameter [5] as [INTEGER] - [2]
2020-11-25 19:48:33,420 TRACE  [main] BasicBinder: binding parameter [6] as [BIGINT] - [4]
2020-11-25 19:48:33,423 TRACE  [main] BasicBinder: binding parameter [1] as [BLOB] - [null]
2020-11-25 19:48:33,424 TRACE  [main] BasicBinder: binding parameter [2] as [DOUBLE] - [3.0]
2020-11-25 19:48:33,425 TRACE  [main] BasicBinder: binding parameter [3] as [INTEGER] - [0]
2020-11-25 19:48:33,425 TRACE  [main] BasicBinder: binding parameter [4] as [BOOLEAN] - [true]
2020-11-25 19:48:33,425 TRACE  [main] BasicBinder: binding parameter [5] as [INTEGER] - [3]
2020-11-25 19:48:33,426 TRACE  [main] BasicBinder: binding parameter [6] as [BIGINT] - [4]
2020-11-25 19:48:33,427 TRACE  [main] BasicBinder: binding parameter [1] as [BLOB] - [null]
2020-11-25 19:48:33,427 TRACE  [main] BasicBinder: binding parameter [2] as [DOUBLE] - [4.0]
2020-11-25 19:48:33,427 TRACE  [main] BasicBinder: binding parameter [3] as [INTEGER] - [0]
2020-11-25 19:48:33,428 TRACE  [main] BasicBinder: binding parameter [4] as [BOOLEAN] - [true]
2020-11-25 19:48:33,428 TRACE  [main] BasicBinder: binding parameter [5] as [INTEGER] - [4]
2020-11-25 19:48:33,429 TRACE  [main] BasicBinder: binding parameter [6] as [BIGINT] - [4]
2020-11-25 19:48:33,431 TRACE  [main] BasicBinder: binding parameter [1] as [BLOB] - [null]
2020-11-25 19:48:33,431 TRACE  [main] BasicBinder: binding parameter [2] as [DOUBLE] - [5.0]
2020-11-25 19:48:33,431 TRACE  [main] BasicBinder: binding parameter [3] as [INTEGER] - [0]
2020-11-25 19:48:33,431 TRACE  [main] BasicBinder: binding parameter [4] as [BOOLEAN] - [true]
2020-11-25 19:48:33,432 TRACE  [main] BasicBinder: binding parameter [5] as [INTEGER] - [5]
2020-11-25 19:48:33,432 TRACE  [main] BasicBinder: binding parameter [6] as [BIGINT] - [4]
2020-11-25 19:48:33,433 TRACE  [main] BasicBinder: binding parameter [1] as [BLOB] - [null]
2020-11-25 19:48:33,434 TRACE  [main] BasicBinder: binding parameter [2] as [DOUBLE] - [6.0]
2020-11-25 19:48:33,434 TRACE  [main] BasicBinder: binding parameter [3] as [INTEGER] - [0]
2020-11-25 19:48:33,434 TRACE  [main] BasicBinder: binding parameter [4] as [BOOLEAN] - [true]
2020-11-25 19:48:33,434 TRACE  [main] BasicBinder: binding parameter [5] as [INTEGER] - [6]
2020-11-25 19:48:33,435 TRACE  [main] BasicBinder: binding parameter [6] as [BIGINT] - [4]
2020-11-25 19:48:33,437 TRACE  [main] BasicBinder: binding parameter [1] as [BLOB] - [null]
2020-11-25 19:48:33,438 TRACE  [main] BasicBinder: binding parameter [2] as [DOUBLE] - [7.0]
2020-11-25 19:48:33,438 TRACE  [main] BasicBinder: binding parameter [3] as [INTEGER] - [0]
2020-11-25 19:48:33,438 TRACE  [main] BasicBinder: binding parameter [4] as [BOOLEAN] - [true]
2020-11-25 19:48:33,439 TRACE  [main] BasicBinder: binding parameter [5] as [INTEGER] - [7]
2020-11-25 19:48:33,440 TRACE  [main] BasicBinder: binding parameter [6] as [BIGINT] - [4]
2020-11-25 19:48:33,441 TRACE  [main] BasicBinder: binding parameter [1] as [BLOB] - [null]
2020-11-25 19:48:33,442 TRACE  [main] BasicBinder: binding parameter [2] as [DOUBLE] - [8.0]
2020-11-25 19:48:33,442 TRACE  [main] BasicBinder: binding parameter [3] as [INTEGER] - [0]
2020-11-25 19:48:33,442 TRACE  [main] BasicBinder: binding parameter [4] as [BOOLEAN] - [true]
2020-11-25 19:48:33,442 TRACE  [main] BasicBinder: binding parameter [5] as [INTEGER] - [8]
2020-11-25 19:48:33,443 TRACE  [main] BasicBinder: binding parameter [6] as [BIGINT] - [4]
2020-11-25 19:48:33,444 TRACE  [main] BasicBinder: binding parameter [1] as [BLOB] - [null]
2020-11-25 19:48:33,444 TRACE  [main] BasicBinder: binding parameter [2] as [DOUBLE] - [9.0]
2020-11-25 19:48:33,445 TRACE  [main] BasicBinder: binding parameter [3] as [INTEGER] - [0]
2020-11-25 19:48:33,445 TRACE  [main] BasicBinder: binding parameter [4] as [BOOLEAN] - [true]
2020-11-25 19:48:33,445 TRACE  [main] BasicBinder: binding parameter [5] as [INTEGER] - [9]
2020-11-25 19:48:33,445 TRACE  [main] BasicBinder: binding parameter [6] as [BIGINT] - [4]
2020-11-25 19:48:33,984 TRACE  [main] BasicExtractor: extracted value ([id1_1_] : [BIGINT]) - [1]
2020-11-25 19:48:33,985 TRACE  [main] BasicExtractor: extracted value ([descript2_1_] : [BLOB]) - [[70, 105, 110, 100, 32, 97, 108, 108, 32, 114, 111, 111, 116, 115, 32, 111, 102, 32, 103, 105, 118, 101, 110, 32, 112, 111, 108, 121, 110, 111, 109, 105, 97, 108]]
2020-11-25 19:48:33,986 TRACE  [main] BasicExtractor: extracted value ([is_solve3_1_] : [BOOLEAN]) - [false]
2020-11-25 19:48:33,986 TRACE  [main] BasicExtractor: extracted value ([kind4_1_] : [VARCHAR]) - [POLYNOMIAL]
2020-11-25 19:48:33,987 TRACE  [main] BasicExtractor: extracted value ([matrix_d5_1_] : [INTEGER]) - [1]
2020-11-25 19:48:33,987 TRACE  [main] BasicExtractor: extracted value ([parent_p7_1_] : [BIGINT]) - [null]
2020-11-25 19:48:33,987 TRACE  [main] BasicExtractor: extracted value ([problem_6_1_] : [INTEGER]) - [6]
2020-11-25 19:48:33,988 TRACE  [main] BasicExtractor: extracted value ([id1_1_] : [BIGINT]) - [2]
2020-11-25 19:48:33,988 TRACE  [main] BasicExtractor: extracted value ([descript2_1_] : [BLOB]) - [[100, 101, 115, 99, 114, 105, 112, 116, 105, 111, 110, 100, 101, 115, 99, 114, 105, 112, 116, 105, 111, 110]]
2020-11-25 19:48:33,989 TRACE  [main] BasicExtractor: extracted value ([is_solve3_1_] : [BOOLEAN]) - [null]
2020-11-25 19:48:33,989 TRACE  [main] BasicExtractor: extracted value ([kind4_1_] : [VARCHAR]) - [POLYNOMIAL]
2020-11-25 19:48:33,990 TRACE  [main] BasicExtractor: extracted value ([matrix_d5_1_] : [INTEGER]) - [1]
2020-11-25 19:48:33,990 TRACE  [main] BasicExtractor: extracted value ([parent_p7_1_] : [BIGINT]) - [null]
2020-11-25 19:48:33,990 TRACE  [main] BasicExtractor: extracted value ([problem_6_1_] : [INTEGER]) - [22]
2020-11-25 19:48:33,991 TRACE  [main] BasicExtractor: extracted value ([id1_1_] : [BIGINT]) - [3]
2020-11-25 19:48:33,993 TRACE  [main] BasicExtractor: extracted value ([descript2_1_] : [BLOB]) - [[112, 114, 111, 98, 108, 101, 109, 100, 101, 115, 99, 114, 105, 112, 116, 105, 111, 110]]
2020-11-25 19:48:33,993 TRACE  [main] BasicExtractor: extracted value ([is_solve3_1_] : [BOOLEAN]) - [null]
2020-11-25 19:48:33,994 TRACE  [main] BasicExtractor: extracted value ([kind4_1_] : [VARCHAR]) - [POLYNOMIAL]
2020-11-25 19:48:33,994 TRACE  [main] BasicExtractor: extracted value ([matrix_d5_1_] : [INTEGER]) - [1]
2020-11-25 19:48:33,995 TRACE  [main] BasicExtractor: extracted value ([parent_p7_1_] : [BIGINT]) - [null]
2020-11-25 19:48:33,995 TRACE  [main] BasicExtractor: extracted value ([problem_6_1_] : [INTEGER]) - [22]
2020-11-25 19:48:33,995 TRACE  [main] BasicExtractor: extracted value ([id1_1_] : [BIGINT]) - [4]
2020-11-25 19:48:33,996 TRACE  [main] BasicExtractor: extracted value ([descript2_1_] : [BLOB]) - [[100, 101, 115, 99, 114, 105, 112, 116, 105, 111, 110]]
2020-11-25 19:48:33,996 TRACE  [main] BasicExtractor: extracted value ([is_solve3_1_] : [BOOLEAN]) - [false]
2020-11-25 19:48:33,996 TRACE  [main] BasicExtractor: extracted value ([kind4_1_] : [VARCHAR]) - [POLYNOMIAL]
2020-11-25 19:48:33,996 TRACE  [main] BasicExtractor: extracted value ([matrix_d5_1_] : [INTEGER]) - [12]
2020-11-25 19:48:33,996 TRACE  [main] BasicExtractor: extracted value ([parent_p7_1_] : [BIGINT]) - [null]
2020-11-25 19:48:33,996 TRACE  [main] BasicExtractor: extracted value ([problem_6_1_] : [INTEGER]) - [null]
2020-11-25 19:48:33,997 TRACE  [main] BasicExtractor: extracted value ([id1_1_] : [BIGINT]) - [5]
2020-11-25 19:48:33,997 TRACE  [main] BasicExtractor: extracted value ([descript2_1_] : [BLOB]) - [[112, 114, 111, 98, 108, 101, 109, 100, 101, 115, 99, 114, 105, 112, 116, 105, 111, 110]]
2020-11-25 19:48:33,998 TRACE  [main] BasicExtractor: extracted value ([is_solve3_1_] : [BOOLEAN]) - [null]
2020-11-25 19:48:33,998 TRACE  [main] BasicExtractor: extracted value ([kind4_1_] : [VARCHAR]) - [POLYNOMIAL]
2020-11-25 19:48:33,998 TRACE  [main] BasicExtractor: extracted value ([matrix_d5_1_] : [INTEGER]) - [1]
2020-11-25 19:48:33,998 TRACE  [main] BasicExtractor: extracted value ([parent_p7_1_] : [BIGINT]) - [null]
2020-11-25 19:48:33,998 TRACE  [main] BasicExtractor: extracted value ([problem_6_1_] : [INTEGER]) - [22]
2020-11-25 19:48:33,999 TRACE  [main] CollectionType: Created collection wrapper: [com.sf.back.entities.Problem.children#1]
2020-11-25 19:48:33,999 TRACE  [main] CollectionType: Created collection wrapper: [com.sf.back.entities.Problem.matrixes#1]
2020-11-25 19:48:34,000 TRACE  [main] CollectionType: Created collection wrapper: [com.sf.back.entities.Problem.children#2]
2020-11-25 19:48:34,000 TRACE  [main] CollectionType: Created collection wrapper: [com.sf.back.entities.Problem.matrixes#2]
2020-11-25 19:48:34,001 TRACE  [main] CollectionType: Created collection wrapper: [com.sf.back.entities.Problem.children#3]
2020-11-25 19:48:34,002 TRACE  [main] CollectionType: Created collection wrapper: [com.sf.back.entities.Problem.matrixes#3]
2020-11-25 19:48:34,002 TRACE  [main] CollectionType: Created collection wrapper: [com.sf.back.entities.Problem.children#4]
2020-11-25 19:48:34,002 TRACE  [main] CollectionType: Created collection wrapper: [com.sf.back.entities.Problem.matrixes#4]
2020-11-25 19:48:34,002 TRACE  [main] CollectionType: Created collection wrapper: [com.sf.back.entities.Problem.children#5]
2020-11-25 19:48:34,002 TRACE  [main] CollectionType: Created collection wrapper: [com.sf.back.entities.Problem.matrixes#5]
2020-11-25 19:48:34,005 TRACE  [main] BasicBinder: binding parameter [1] as [BIGINT] - [5]
2020-11-25 19:48:34,007 TRACE  [main] BasicExtractor: extracted value ([id1_0_1_] : [BIGINT]) - [28]
2020-11-25 19:48:34,007 TRACE  [main] BasicExtractor: extracted value ([binary_v2_0_1_] : [BLOB]) - [null]
2020-11-25 19:48:34,008 TRACE  [main] BasicExtractor: extracted value ([float_va3_0_1_] : [DOUBLE]) - [1.0]
2020-11-25 19:48:34,009 TRACE  [main] BasicExtractor: extracted value ([i4_0_1_] : [INTEGER]) - [0]
2020-11-25 19:48:34,009 TRACE  [main] BasicExtractor: extracted value ([is_condi5_0_1_] : [BOOLEAN]) - [true]
2020-11-25 19:48:34,010 TRACE  [main] BasicExtractor: extracted value ([j6_0_1_] : [INTEGER]) - [0]
2020-11-25 19:48:34,010 TRACE  [main] BasicExtractor: extracted value ([problem_7_0_1_] : [BIGINT]) - [5]
2020-11-25 19:48:34,010 TRACE  [main] BasicExtractor: extracted value ([problem_7_0_0_] : [BIGINT]) - [5]
2020-11-25 19:48:34,011 TRACE  [main] BasicExtractor: extracted value ([id1_0_0_] : [BIGINT]) - [28]
2020-11-25 19:48:34,015 TRACE  [main] BasicExtractor: extracted value ([id1_0_1_] : [BIGINT]) - [29]
2020-11-25 19:48:34,015 TRACE  [main] BasicExtractor: extracted value ([binary_v2_0_1_] : [BLOB]) - [null]
2020-11-25 19:48:34,016 TRACE  [main] BasicExtractor: extracted value ([float_va3_0_1_] : [DOUBLE]) - [2.718281828459045]
2020-11-25 19:48:34,016 TRACE  [main] BasicExtractor: extracted value ([i4_0_1_] : [INTEGER]) - [0]
2020-11-25 19:48:34,016 TRACE  [main] BasicExtractor: extracted value ([is_condi5_0_1_] : [BOOLEAN]) - [true]
2020-11-25 19:48:34,017 TRACE  [main] BasicExtractor: extracted value ([j6_0_1_] : [INTEGER]) - [1]
2020-11-25 19:48:34,017 TRACE  [main] BasicExtractor: extracted value ([problem_7_0_1_] : [BIGINT]) - [5]
2020-11-25 19:48:34,017 TRACE  [main] BasicExtractor: extracted value ([problem_7_0_0_] : [BIGINT]) - [5]
2020-11-25 19:48:34,017 TRACE  [main] BasicExtractor: extracted value ([id1_0_0_] : [BIGINT]) - [29]
2020-11-25 19:48:34,018 TRACE  [main] BasicExtractor: extracted value ([id1_0_1_] : [BIGINT]) - [30]
2020-11-25 19:48:34,018 TRACE  [main] BasicExtractor: extracted value ([binary_v2_0_1_] : [BLOB]) - [null]
2020-11-25 19:48:34,018 TRACE  [main] BasicExtractor: extracted value ([float_va3_0_1_] : [DOUBLE]) - [7.38905609893065]
2020-11-25 19:48:34,018 TRACE  [main] BasicExtractor: extracted value ([i4_0_1_] : [INTEGER]) - [0]
2020-11-25 19:48:34,030 TRACE  [main] BasicExtractor: extracted value ([is_condi5_0_1_] : [BOOLEAN]) - [true]
2020-11-25 19:48:34,031 TRACE  [main] BasicExtractor: extracted value ([j6_0_1_] : [INTEGER]) - [2]
2020-11-25 19:48:34,031 TRACE  [main] BasicExtractor: extracted value ([problem_7_0_1_] : [BIGINT]) - [5]
2020-11-25 19:48:34,032 TRACE  [main] BasicExtractor: extracted value ([problem_7_0_0_] : [BIGINT]) - [5]
2020-11-25 19:48:34,032 TRACE  [main] BasicExtractor: extracted value ([id1_0_0_] : [BIGINT]) - [30]
2020-11-25 19:48:34,033 TRACE  [main] BasicExtractor: extracted value ([id1_0_1_] : [BIGINT]) - [31]
2020-11-25 19:48:34,033 TRACE  [main] BasicExtractor: extracted value ([binary_v2_0_1_] : [BLOB]) - [null]
2020-11-25 19:48:34,033 TRACE  [main] BasicExtractor: extracted value ([float_va3_0_1_] : [DOUBLE]) - [20.085536923187668]
2020-11-25 19:48:34,034 TRACE  [main] BasicExtractor: extracted value ([i4_0_1_] : [INTEGER]) - [0]
2020-11-25 19:48:34,034 TRACE  [main] BasicExtractor: extracted value ([is_condi5_0_1_] : [BOOLEAN]) - [true]
2020-11-25 19:48:34,035 TRACE  [main] BasicExtractor: extracted value ([j6_0_1_] : [INTEGER]) - [3]
2020-11-25 19:48:34,035 TRACE  [main] BasicExtractor: extracted value ([problem_7_0_1_] : [BIGINT]) - [5]
2020-11-25 19:48:34,036 TRACE  [main] BasicExtractor: extracted value ([problem_7_0_0_] : [BIGINT]) - [5]
2020-11-25 19:48:34,036 TRACE  [main] BasicExtractor: extracted value ([id1_0_0_] : [BIGINT]) - [31]
2020-11-25 19:48:34,037 TRACE  [main] BasicExtractor: extracted value ([id1_0_1_] : [BIGINT]) - [32]
2020-11-25 19:48:34,040 TRACE  [main] BasicExtractor: extracted value ([binary_v2_0_1_] : [BLOB]) - [null]
2020-11-25 19:48:34,040 TRACE  [main] BasicExtractor: extracted value ([float_va3_0_1_] : [DOUBLE]) - [54.598150033144236]
2020-11-25 19:48:34,041 TRACE  [main] BasicExtractor: extracted value ([i4_0_1_] : [INTEGER]) - [0]
2020-11-25 19:48:34,041 TRACE  [main] BasicExtractor: extracted value ([is_condi5_0_1_] : [BOOLEAN]) - [true]
2020-11-25 19:48:34,042 TRACE  [main] BasicExtractor: extracted value ([j6_0_1_] : [INTEGER]) - [4]
2020-11-25 19:48:34,042 TRACE  [main] BasicExtractor: extracted value ([problem_7_0_1_] : [BIGINT]) - [5]
2020-11-25 19:48:34,043 TRACE  [main] BasicExtractor: extracted value ([problem_7_0_0_] : [BIGINT]) - [5]
2020-11-25 19:48:34,044 TRACE  [main] BasicExtractor: extracted value ([id1_0_0_] : [BIGINT]) - [32]
2020-11-25 19:48:34,044 TRACE  [main] BasicExtractor: extracted value ([id1_0_1_] : [BIGINT]) - [33]
2020-11-25 19:48:34,045 TRACE  [main] BasicExtractor: extracted value ([binary_v2_0_1_] : [BLOB]) - [null]
2020-11-25 19:48:34,046 TRACE  [main] BasicExtractor: extracted value ([float_va3_0_1_] : [DOUBLE]) - [148.4131591025766]
2020-11-25 19:48:34,047 TRACE  [main] BasicExtractor: extracted value ([i4_0_1_] : [INTEGER]) - [0]
2020-11-25 19:48:34,047 TRACE  [main] BasicExtractor: extracted value ([is_condi5_0_1_] : [BOOLEAN]) - [true]
2020-11-25 19:48:34,048 TRACE  [main] BasicExtractor: extracted value ([j6_0_1_] : [INTEGER]) - [5]
2020-11-25 19:48:34,048 TRACE  [main] BasicExtractor: extracted value ([problem_7_0_1_] : [BIGINT]) - [5]
2020-11-25 19:48:34,049 TRACE  [main] BasicExtractor: extracted value ([problem_7_0_0_] : [BIGINT]) - [5]
2020-11-25 19:48:34,049 TRACE  [main] BasicExtractor: extracted value ([id1_0_0_] : [BIGINT]) - [33]
2020-11-25 19:48:34,052 TRACE  [main] BasicBinder: binding parameter [1] as [BIGINT] - [5]
2020-11-25 19:48:34,053 TRACE  [main] BasicBinder: binding parameter [1] as [BIGINT] - [4]
2020-11-25 19:48:34,053 TRACE  [main] BasicExtractor: extracted value ([id1_0_1_] : [BIGINT]) - [18]
2020-11-25 19:48:34,053 TRACE  [main] BasicExtractor: extracted value ([binary_v2_0_1_] : [BLOB]) - [null]
2020-11-25 19:48:34,055 TRACE  [main] BasicExtractor: extracted value ([float_va3_0_1_] : [DOUBLE]) - [0.0]
2020-11-25 19:48:34,055 TRACE  [main] BasicExtractor: extracted value ([i4_0_1_] : [INTEGER]) - [0]
2020-11-25 19:48:34,055 TRACE  [main] BasicExtractor: extracted value ([is_condi5_0_1_] : [BOOLEAN]) - [true]
2020-11-25 19:48:34,055 TRACE  [main] BasicExtractor: extracted value ([j6_0_1_] : [INTEGER]) - [0]
2020-11-25 19:48:34,055 TRACE  [main] BasicExtractor: extracted value ([problem_7_0_1_] : [BIGINT]) - [4]
2020-11-25 19:48:34,055 TRACE  [main] BasicExtractor: extracted value ([problem_7_0_0_] : [BIGINT]) - [4]
2020-11-25 19:48:34,056 TRACE  [main] BasicExtractor: extracted value ([id1_0_0_] : [BIGINT]) - [18]
2020-11-25 19:48:34,056 TRACE  [main] BasicExtractor: extracted value ([id1_0_1_] : [BIGINT]) - [19]
2020-11-25 19:48:34,056 TRACE  [main] BasicExtractor: extracted value ([binary_v2_0_1_] : [BLOB]) - [null]
2020-11-25 19:48:34,057 TRACE  [main] BasicExtractor: extracted value ([float_va3_0_1_] : [DOUBLE]) - [1.0]
2020-11-25 19:48:34,057 TRACE  [main] BasicExtractor: extracted value ([i4_0_1_] : [INTEGER]) - [0]
2020-11-25 19:48:34,057 TRACE  [main] BasicExtractor: extracted value ([is_condi5_0_1_] : [BOOLEAN]) - [true]
2020-11-25 19:48:34,057 TRACE  [main] BasicExtractor: extracted value ([j6_0_1_] : [INTEGER]) - [1]
2020-11-25 19:48:34,057 TRACE  [main] BasicExtractor: extracted value ([problem_7_0_1_] : [BIGINT]) - [4]
2020-11-25 19:48:34,057 TRACE  [main] BasicExtractor: extracted value ([problem_7_0_0_] : [BIGINT]) - [4]
2020-11-25 19:48:34,058 TRACE  [main] BasicExtractor: extracted value ([id1_0_0_] : [BIGINT]) - [19]
2020-11-25 19:48:34,058 TRACE  [main] BasicExtractor: extracted value ([id1_0_1_] : [BIGINT]) - [20]
2020-11-25 19:48:34,058 TRACE  [main] BasicExtractor: extracted value ([binary_v2_0_1_] : [BLOB]) - [null]
2020-11-25 19:48:34,058 TRACE  [main] BasicExtractor: extracted value ([float_va3_0_1_] : [DOUBLE]) - [2.0]
2020-11-25 19:48:34,058 TRACE  [main] BasicExtractor: extracted value ([i4_0_1_] : [INTEGER]) - [0]
2020-11-25 19:48:34,058 TRACE  [main] BasicExtractor: extracted value ([is_condi5_0_1_] : [BOOLEAN]) - [true]
2020-11-25 19:48:34,058 TRACE  [main] BasicExtractor: extracted value ([j6_0_1_] : [INTEGER]) - [2]
2020-11-25 19:48:34,058 TRACE  [main] BasicExtractor: extracted value ([problem_7_0_1_] : [BIGINT]) - [4]
2020-11-25 19:48:34,059 TRACE  [main] BasicExtractor: extracted value ([problem_7_0_0_] : [BIGINT]) - [4]
2020-11-25 19:48:34,059 TRACE  [main] BasicExtractor: extracted value ([id1_0_0_] : [BIGINT]) - [20]
2020-11-25 19:48:34,059 TRACE  [main] BasicExtractor: extracted value ([id1_0_1_] : [BIGINT]) - [21]
2020-11-25 19:48:34,059 TRACE  [main] BasicExtractor: extracted value ([binary_v2_0_1_] : [BLOB]) - [null]
2020-11-25 19:48:34,059 TRACE  [main] BasicExtractor: extracted value ([float_va3_0_1_] : [DOUBLE]) - [3.0]
2020-11-25 19:48:34,060 TRACE  [main] BasicExtractor: extracted value ([i4_0_1_] : [INTEGER]) - [0]
2020-11-25 19:48:34,060 TRACE  [main] BasicExtractor: extracted value ([is_condi5_0_1_] : [BOOLEAN]) - [true]
2020-11-25 19:48:34,060 TRACE  [main] BasicExtractor: extracted value ([j6_0_1_] : [INTEGER]) - [3]
2020-11-25 19:48:34,060 TRACE  [main] BasicExtractor: extracted value ([problem_7_0_1_] : [BIGINT]) - [4]
2020-11-25 19:48:34,080 TRACE  [main] BasicExtractor: extracted value ([problem_7_0_0_] : [BIGINT]) - [4]
2020-11-25 19:48:34,081 TRACE  [main] BasicExtractor: extracted value ([id1_0_0_] : [BIGINT]) - [21]
2020-11-25 19:48:34,082 TRACE  [main] BasicExtractor: extracted value ([id1_0_1_] : [BIGINT]) - [22]
2020-11-25 19:48:34,082 TRACE  [main] BasicExtractor: extracted value ([binary_v2_0_1_] : [BLOB]) - [null]
2020-11-25 19:48:34,083 TRACE  [main] BasicExtractor: extracted value ([float_va3_0_1_] : [DOUBLE]) - [4.0]
2020-11-25 19:48:34,083 TRACE  [main] BasicExtractor: extracted value ([i4_0_1_] : [INTEGER]) - [0]
2020-11-25 19:48:34,084 TRACE  [main] BasicExtractor: extracted value ([is_condi5_0_1_] : [BOOLEAN]) - [true]
2020-11-25 19:48:34,084 TRACE  [main] BasicExtractor: extracted value ([j6_0_1_] : [INTEGER]) - [4]
2020-11-25 19:48:34,085 TRACE  [main] BasicExtractor: extracted value ([problem_7_0_1_] : [BIGINT]) - [4]
2020-11-25 19:48:34,085 TRACE  [main] BasicExtractor: extracted value ([problem_7_0_0_] : [BIGINT]) - [4]
2020-11-25 19:48:34,086 TRACE  [main] BasicExtractor: extracted value ([id1_0_0_] : [BIGINT]) - [22]
2020-11-25 19:48:34,087 TRACE  [main] BasicExtractor: extracted value ([id1_0_1_] : [BIGINT]) - [23]
2020-11-25 19:48:34,087 TRACE  [main] BasicExtractor: extracted value ([binary_v2_0_1_] : [BLOB]) - [null]
2020-11-25 19:48:34,088 TRACE  [main] BasicExtractor: extracted value ([float_va3_0_1_] : [DOUBLE]) - [5.0]
2020-11-25 19:48:34,088 TRACE  [main] BasicExtractor: extracted value ([i4_0_1_] : [INTEGER]) - [0]
2020-11-25 19:48:34,088 TRACE  [main] BasicExtractor: extracted value ([is_condi5_0_1_] : [BOOLEAN]) - [true]
2020-11-25 19:48:34,088 TRACE  [main] BasicExtractor: extracted value ([j6_0_1_] : [INTEGER]) - [5]
2020-11-25 19:48:34,089 TRACE  [main] BasicExtractor: extracted value ([problem_7_0_1_] : [BIGINT]) - [4]
2020-11-25 19:48:34,089 TRACE  [main] BasicExtractor: extracted value ([problem_7_0_0_] : [BIGINT]) - [4]
2020-11-25 19:48:34,089 TRACE  [main] BasicExtractor: extracted value ([id1_0_0_] : [BIGINT]) - [23]
2020-11-25 19:48:34,090 TRACE  [main] BasicExtractor: extracted value ([id1_0_1_] : [BIGINT]) - [24]
2020-11-25 19:48:34,091 TRACE  [main] BasicExtractor: extracted value ([binary_v2_0_1_] : [BLOB]) - [null]
2020-11-25 19:48:34,092 TRACE  [main] BasicExtractor: extracted value ([float_va3_0_1_] : [DOUBLE]) - [6.0]
2020-11-25 19:48:34,092 TRACE  [main] BasicExtractor: extracted value ([i4_0_1_] : [INTEGER]) - [0]
2020-11-25 19:48:34,092 TRACE  [main] BasicExtractor: extracted value ([is_condi5_0_1_] : [BOOLEAN]) - [true]
2020-11-25 19:48:34,092 TRACE  [main] BasicExtractor: extracted value ([j6_0_1_] : [INTEGER]) - [6]
2020-11-25 19:48:34,092 TRACE  [main] BasicExtractor: extracted value ([problem_7_0_1_] : [BIGINT]) - [4]
2020-11-25 19:48:34,092 TRACE  [main] BasicExtractor: extracted value ([problem_7_0_0_] : [BIGINT]) - [4]
2020-11-25 19:48:34,093 TRACE  [main] BasicExtractor: extracted value ([id1_0_0_] : [BIGINT]) - [24]
2020-11-25 19:48:34,093 TRACE  [main] BasicExtractor: extracted value ([id1_0_1_] : [BIGINT]) - [25]
2020-11-25 19:48:34,093 TRACE  [main] BasicExtractor: extracted value ([binary_v2_0_1_] : [BLOB]) - [null]
2020-11-25 19:48:34,093 TRACE  [main] BasicExtractor: extracted value ([float_va3_0_1_] : [DOUBLE]) - [7.0]
2020-11-25 19:48:34,094 TRACE  [main] BasicExtractor: extracted value ([i4_0_1_] : [INTEGER]) - [0]
2020-11-25 19:48:34,094 TRACE  [main] BasicExtractor: extracted value ([is_condi5_0_1_] : [BOOLEAN]) - [true]
2020-11-25 19:48:34,094 TRACE  [main] BasicExtractor: extracted value ([j6_0_1_] : [INTEGER]) - [7]
2020-11-25 19:48:34,094 TRACE  [main] BasicExtractor: extracted value ([problem_7_0_1_] : [BIGINT]) - [4]
2020-11-25 19:48:34,094 TRACE  [main] BasicExtractor: extracted value ([problem_7_0_0_] : [BIGINT]) - [4]
2020-11-25 19:48:34,095 TRACE  [main] BasicExtractor: extracted value ([id1_0_0_] : [BIGINT]) - [25]
2020-11-25 19:48:34,095 TRACE  [main] BasicExtractor: extracted value ([id1_0_1_] : [BIGINT]) - [26]
2020-11-25 19:48:34,095 TRACE  [main] BasicExtractor: extracted value ([binary_v2_0_1_] : [BLOB]) - [null]
2020-11-25 19:48:34,095 TRACE  [main] BasicExtractor: extracted value ([float_va3_0_1_] : [DOUBLE]) - [8.0]
2020-11-25 19:48:34,095 TRACE  [main] BasicExtractor: extracted value ([i4_0_1_] : [INTEGER]) - [0]
2020-11-25 19:48:34,096 TRACE  [main] BasicExtractor: extracted value ([is_condi5_0_1_] : [BOOLEAN]) - [true]
2020-11-25 19:48:34,096 TRACE  [main] BasicExtractor: extracted value ([j6_0_1_] : [INTEGER]) - [8]
2020-11-25 19:48:34,096 TRACE  [main] BasicExtractor: extracted value ([problem_7_0_1_] : [BIGINT]) - [4]
2020-11-25 19:48:34,097 TRACE  [main] BasicExtractor: extracted value ([problem_7_0_0_] : [BIGINT]) - [4]
2020-11-25 19:48:34,098 TRACE  [main] BasicExtractor: extracted value ([id1_0_0_] : [BIGINT]) - [26]
2020-11-25 19:48:34,099 TRACE  [main] BasicExtractor: extracted value ([id1_0_1_] : [BIGINT]) - [27]
2020-11-25 19:48:34,099 TRACE  [main] BasicExtractor: extracted value ([binary_v2_0_1_] : [BLOB]) - [null]
2020-11-25 19:48:34,099 TRACE  [main] BasicExtractor: extracted value ([float_va3_0_1_] : [DOUBLE]) - [9.0]
2020-11-25 19:48:34,100 TRACE  [main] BasicExtractor: extracted value ([i4_0_1_] : [INTEGER]) - [0]
2020-11-25 19:48:34,100 TRACE  [main] BasicExtractor: extracted value ([is_condi5_0_1_] : [BOOLEAN]) - [true]
2020-11-25 19:48:34,100 TRACE  [main] BasicExtractor: extracted value ([j6_0_1_] : [INTEGER]) - [9]
2020-11-25 19:48:34,101 TRACE  [main] BasicExtractor: extracted value ([problem_7_0_1_] : [BIGINT]) - [4]
2020-11-25 19:48:34,101 TRACE  [main] BasicExtractor: extracted value ([problem_7_0_0_] : [BIGINT]) - [4]
2020-11-25 19:48:34,101 TRACE  [main] BasicExtractor: extracted value ([id1_0_0_] : [BIGINT]) - [27]
2020-11-25 19:48:34,104 TRACE  [main] BasicBinder: binding parameter [1] as [BIGINT] - [4]
2020-11-25 19:48:34,105 TRACE  [main] BasicBinder: binding parameter [1] as [BIGINT] - [3]
2020-11-25 19:48:34,106 TRACE  [main] BasicExtractor: extracted value ([id1_0_1_] : [BIGINT]) - [12]
2020-11-25 19:48:34,106 TRACE  [main] BasicExtractor: extracted value ([binary_v2_0_1_] : [BLOB]) - [null]
2020-11-25 19:48:34,106 TRACE  [main] BasicExtractor: extracted value ([float_va3_0_1_] : [DOUBLE]) - [1.0]
2020-11-25 19:48:34,106 TRACE  [main] BasicExtractor: extracted value ([i4_0_1_] : [INTEGER]) - [0]
2020-11-25 19:48:34,106 TRACE  [main] BasicExtractor: extracted value ([is_condi5_0_1_] : [BOOLEAN]) - [true]
2020-11-25 19:48:34,107 TRACE  [main] BasicExtractor: extracted value ([j6_0_1_] : [INTEGER]) - [0]
2020-11-25 19:48:34,107 TRACE  [main] BasicExtractor: extracted value ([problem_7_0_1_] : [BIGINT]) - [3]
2020-11-25 19:48:34,107 TRACE  [main] BasicExtractor: extracted value ([problem_7_0_0_] : [BIGINT]) - [3]
2020-11-25 19:48:34,108 TRACE  [main] BasicExtractor: extracted value ([id1_0_0_] : [BIGINT]) - [12]
2020-11-25 19:48:34,109 TRACE  [main] BasicExtractor: extracted value ([id1_0_1_] : [BIGINT]) - [13]
2020-11-25 19:48:34,109 TRACE  [main] BasicExtractor: extracted value ([binary_v2_0_1_] : [BLOB]) - [null]
2020-11-25 19:48:34,109 TRACE  [main] BasicExtractor: extracted value ([float_va3_0_1_] : [DOUBLE]) - [2.718281828459045]
2020-11-25 19:48:34,110 TRACE  [main] BasicExtractor: extracted value ([i4_0_1_] : [INTEGER]) - [0]
2020-11-25 19:48:34,110 TRACE  [main] BasicExtractor: extracted value ([is_condi5_0_1_] : [BOOLEAN]) - [true]
2020-11-25 19:48:34,110 TRACE  [main] BasicExtractor: extracted value ([j6_0_1_] : [INTEGER]) - [1]
2020-11-25 19:48:34,111 TRACE  [main] BasicExtractor: extracted value ([problem_7_0_1_] : [BIGINT]) - [3]
2020-11-25 19:48:34,111 TRACE  [main] BasicExtractor: extracted value ([problem_7_0_0_] : [BIGINT]) - [3]
2020-11-25 19:48:34,111 TRACE  [main] BasicExtractor: extracted value ([id1_0_0_] : [BIGINT]) - [13]
2020-11-25 19:48:34,112 TRACE  [main] BasicExtractor: extracted value ([id1_0_1_] : [BIGINT]) - [14]
2020-11-25 19:48:34,112 TRACE  [main] BasicExtractor: extracted value ([binary_v2_0_1_] : [BLOB]) - [null]
2020-11-25 19:48:34,112 TRACE  [main] BasicExtractor: extracted value ([float_va3_0_1_] : [DOUBLE]) - [7.38905609893065]
2020-11-25 19:48:34,113 TRACE  [main] BasicExtractor: extracted value ([i4_0_1_] : [INTEGER]) - [0]
2020-11-25 19:48:34,113 TRACE  [main] BasicExtractor: extracted value ([is_condi5_0_1_] : [BOOLEAN]) - [true]
2020-11-25 19:48:34,113 TRACE  [main] BasicExtractor: extracted value ([j6_0_1_] : [INTEGER]) - [2]
2020-11-25 19:48:34,114 TRACE  [main] BasicExtractor: extracted value ([problem_7_0_1_] : [BIGINT]) - [3]
2020-11-25 19:48:34,114 TRACE  [main] BasicExtractor: extracted value ([problem_7_0_0_] : [BIGINT]) - [3]
2020-11-25 19:48:34,114 TRACE  [main] BasicExtractor: extracted value ([id1_0_0_] : [BIGINT]) - [14]
2020-11-25 19:48:34,114 TRACE  [main] BasicExtractor: extracted value ([id1_0_1_] : [BIGINT]) - [15]
2020-11-25 19:48:34,115 TRACE  [main] BasicExtractor: extracted value ([binary_v2_0_1_] : [BLOB]) - [null]
2020-11-25 19:48:34,115 TRACE  [main] BasicExtractor: extracted value ([float_va3_0_1_] : [DOUBLE]) - [20.085536923187668]
2020-11-25 19:48:34,115 TRACE  [main] BasicExtractor: extracted value ([i4_0_1_] : [INTEGER]) - [0]
2020-11-25 19:48:34,115 TRACE  [main] BasicExtractor: extracted value ([is_condi5_0_1_] : [BOOLEAN]) - [true]
2020-11-25 19:48:34,115 TRACE  [main] BasicExtractor: extracted value ([j6_0_1_] : [INTEGER]) - [3]
2020-11-25 19:48:34,115 TRACE  [main] BasicExtractor: extracted value ([problem_7_0_1_] : [BIGINT]) - [3]
2020-11-25 19:48:34,116 TRACE  [main] BasicExtractor: extracted value ([problem_7_0_0_] : [BIGINT]) - [3]
2020-11-25 19:48:34,116 TRACE  [main] BasicExtractor: extracted value ([id1_0_0_] : [BIGINT]) - [15]
2020-11-25 19:48:34,116 TRACE  [main] BasicExtractor: extracted value ([id1_0_1_] : [BIGINT]) - [16]
2020-11-25 19:48:34,116 TRACE  [main] BasicExtractor: extracted value ([binary_v2_0_1_] : [BLOB]) - [null]
2020-11-25 19:48:34,116 TRACE  [main] BasicExtractor: extracted value ([float_va3_0_1_] : [DOUBLE]) - [54.598150033144236]
2020-11-25 19:48:34,116 TRACE  [main] BasicExtractor: extracted value ([i4_0_1_] : [INTEGER]) - [0]
2020-11-25 19:48:34,117 TRACE  [main] BasicExtractor: extracted value ([is_condi5_0_1_] : [BOOLEAN]) - [true]
2020-11-25 19:48:34,117 TRACE  [main] BasicExtractor: extracted value ([j6_0_1_] : [INTEGER]) - [4]
2020-11-25 19:48:34,117 TRACE  [main] BasicExtractor: extracted value ([problem_7_0_1_] : [BIGINT]) - [3]
2020-11-25 19:48:34,117 TRACE  [main] BasicExtractor: extracted value ([problem_7_0_0_] : [BIGINT]) - [3]
2020-11-25 19:48:34,117 TRACE  [main] BasicExtractor: extracted value ([id1_0_0_] : [BIGINT]) - [16]
2020-11-25 19:48:34,117 TRACE  [main] BasicExtractor: extracted value ([id1_0_1_] : [BIGINT]) - [17]
2020-11-25 19:48:34,118 TRACE  [main] BasicExtractor: extracted value ([binary_v2_0_1_] : [BLOB]) - [null]
2020-11-25 19:48:34,121 TRACE  [main] BasicExtractor: extracted value ([float_va3_0_1_] : [DOUBLE]) - [148.4131591025766]
2020-11-25 19:48:34,121 TRACE  [main] BasicExtractor: extracted value ([i4_0_1_] : [INTEGER]) - [0]
2020-11-25 19:48:34,121 TRACE  [main] BasicExtractor: extracted value ([is_condi5_0_1_] : [BOOLEAN]) - [true]
2020-11-25 19:48:34,121 TRACE  [main] BasicExtractor: extracted value ([j6_0_1_] : [INTEGER]) - [5]
2020-11-25 19:48:34,121 TRACE  [main] BasicExtractor: extracted value ([problem_7_0_1_] : [BIGINT]) - [3]
2020-11-25 19:48:34,122 TRACE  [main] BasicExtractor: extracted value ([problem_7_0_0_] : [BIGINT]) - [3]
2020-11-25 19:48:34,122 TRACE  [main] BasicExtractor: extracted value ([id1_0_0_] : [BIGINT]) - [17]
2020-11-25 19:48:34,124 TRACE  [main] BasicBinder: binding parameter [1] as [BIGINT] - [3]
2020-11-25 19:48:34,126 TRACE  [main] BasicBinder: binding parameter [1] as [BIGINT] - [2]
2020-11-25 19:48:34,127 TRACE  [main] BasicExtractor: extracted value ([id1_0_1_] : [BIGINT]) - [6]
2020-11-25 19:48:34,128 TRACE  [main] BasicExtractor: extracted value ([binary_v2_0_1_] : [BLOB]) - [null]
2020-11-25 19:48:34,129 TRACE  [main] BasicExtractor: extracted value ([float_va3_0_1_] : [DOUBLE]) - [1.01]
2020-11-25 19:48:34,129 TRACE  [main] BasicExtractor: extracted value ([i4_0_1_] : [INTEGER]) - [0]
2020-11-25 19:48:34,129 TRACE  [main] BasicExtractor: extracted value ([is_condi5_0_1_] : [BOOLEAN]) - [true]
2020-11-25 19:48:34,130 TRACE  [main] BasicExtractor: extracted value ([j6_0_1_] : [INTEGER]) - [0]
2020-11-25 19:48:34,130 TRACE  [main] BasicExtractor: extracted value ([problem_7_0_1_] : [BIGINT]) - [2]
2020-11-25 19:48:34,130 TRACE  [main] BasicExtractor: extracted value ([problem_7_0_0_] : [BIGINT]) - [2]
2020-11-25 19:48:34,130 TRACE  [main] BasicExtractor: extracted value ([id1_0_0_] : [BIGINT]) - [6]
2020-11-25 19:48:34,131 TRACE  [main] BasicExtractor: extracted value ([id1_0_1_] : [BIGINT]) - [7]
2020-11-25 19:48:34,131 TRACE  [main] BasicExtractor: extracted value ([binary_v2_0_1_] : [BLOB]) - [null]
2020-11-25 19:48:34,131 TRACE  [main] BasicExtractor: extracted value ([float_va3_0_1_] : [DOUBLE]) - [2.718281828459045]
2020-11-25 19:48:34,132 TRACE  [main] BasicExtractor: extracted value ([i4_0_1_] : [INTEGER]) - [0]
2020-11-25 19:48:34,132 TRACE  [main] BasicExtractor: extracted value ([is_condi5_0_1_] : [BOOLEAN]) - [true]
2020-11-25 19:48:34,132 TRACE  [main] BasicExtractor: extracted value ([j6_0_1_] : [INTEGER]) - [1]
2020-11-25 19:48:34,132 TRACE  [main] BasicExtractor: extracted value ([problem_7_0_1_] : [BIGINT]) - [2]
2020-11-25 19:48:34,132 TRACE  [main] BasicExtractor: extracted value ([problem_7_0_0_] : [BIGINT]) - [2]
2020-11-25 19:48:34,133 TRACE  [main] BasicExtractor: extracted value ([id1_0_0_] : [BIGINT]) - [7]
2020-11-25 19:48:34,133 TRACE  [main] BasicExtractor: extracted value ([id1_0_1_] : [BIGINT]) - [8]
2020-11-25 19:48:34,133 TRACE  [main] BasicExtractor: extracted value ([binary_v2_0_1_] : [BLOB]) - [null]
2020-11-25 19:48:34,133 TRACE  [main] BasicExtractor: extracted value ([float_va3_0_1_] : [DOUBLE]) - [7.38905609893065]
2020-11-25 19:48:34,133 TRACE  [main] BasicExtractor: extracted value ([i4_0_1_] : [INTEGER]) - [0]
2020-11-25 19:48:34,134 TRACE  [main] BasicExtractor: extracted value ([is_condi5_0_1_] : [BOOLEAN]) - [true]
2020-11-25 19:48:34,134 TRACE  [main] BasicExtractor: extracted value ([j6_0_1_] : [INTEGER]) - [2]
2020-11-25 19:48:34,134 TRACE  [main] BasicExtractor: extracted value ([problem_7_0_1_] : [BIGINT]) - [2]
2020-11-25 19:48:34,134 TRACE  [main] BasicExtractor: extracted value ([problem_7_0_0_] : [BIGINT]) - [2]
2020-11-25 19:48:34,134 TRACE  [main] BasicExtractor: extracted value ([id1_0_0_] : [BIGINT]) - [8]
2020-11-25 19:48:34,135 TRACE  [main] BasicExtractor: extracted value ([id1_0_1_] : [BIGINT]) - [9]
2020-11-25 19:48:34,135 TRACE  [main] BasicExtractor: extracted value ([binary_v2_0_1_] : [BLOB]) - [null]
2020-11-25 19:48:34,136 TRACE  [main] BasicExtractor: extracted value ([float_va3_0_1_] : [DOUBLE]) - [20.085536923187668]
2020-11-25 19:48:34,136 TRACE  [main] BasicExtractor: extracted value ([i4_0_1_] : [INTEGER]) - [0]
2020-11-25 19:48:34,137 TRACE  [main] BasicExtractor: extracted value ([is_condi5_0_1_] : [BOOLEAN]) - [true]
2020-11-25 19:48:34,137 TRACE  [main] BasicExtractor: extracted value ([j6_0_1_] : [INTEGER]) - [3]
2020-11-25 19:48:34,137 TRACE  [main] BasicExtractor: extracted value ([problem_7_0_1_] : [BIGINT]) - [2]
2020-11-25 19:48:34,138 TRACE  [main] BasicExtractor: extracted value ([problem_7_0_0_] : [BIGINT]) - [2]
2020-11-25 19:48:34,138 TRACE  [main] BasicExtractor: extracted value ([id1_0_0_] : [BIGINT]) - [9]
2020-11-25 19:48:34,138 TRACE  [main] BasicExtractor: extracted value ([id1_0_1_] : [BIGINT]) - [10]
2020-11-25 19:48:34,139 TRACE  [main] BasicExtractor: extracted value ([binary_v2_0_1_] : [BLOB]) - [null]
2020-11-25 19:48:34,139 TRACE  [main] BasicExtractor: extracted value ([float_va3_0_1_] : [DOUBLE]) - [54.598150033144236]
2020-11-25 19:48:34,140 TRACE  [main] BasicExtractor: extracted value ([i4_0_1_] : [INTEGER]) - [0]
2020-11-25 19:48:34,140 TRACE  [main] BasicExtractor: extracted value ([is_condi5_0_1_] : [BOOLEAN]) - [true]
2020-11-25 19:48:34,141 TRACE  [main] BasicExtractor: extracted value ([j6_0_1_] : [INTEGER]) - [4]
2020-11-25 19:48:34,141 TRACE  [main] BasicExtractor: extracted value ([problem_7_0_1_] : [BIGINT]) - [2]
2020-11-25 19:48:34,141 TRACE  [main] BasicExtractor: extracted value ([problem_7_0_0_] : [BIGINT]) - [2]
2020-11-25 19:48:34,141 TRACE  [main] BasicExtractor: extracted value ([id1_0_0_] : [BIGINT]) - [10]
2020-11-25 19:48:34,141 TRACE  [main] BasicExtractor: extracted value ([id1_0_1_] : [BIGINT]) - [11]
2020-11-25 19:48:34,142 TRACE  [main] BasicExtractor: extracted value ([binary_v2_0_1_] : [BLOB]) - [null]
2020-11-25 19:48:34,143 TRACE  [main] BasicExtractor: extracted value ([float_va3_0_1_] : [DOUBLE]) - [148.4131591025766]
2020-11-25 19:48:34,143 TRACE  [main] BasicExtractor: extracted value ([i4_0_1_] : [INTEGER]) - [0]
2020-11-25 19:48:34,143 TRACE  [main] BasicExtractor: extracted value ([is_condi5_0_1_] : [BOOLEAN]) - [true]
2020-11-25 19:48:34,144 TRACE  [main] BasicExtractor: extracted value ([j6_0_1_] : [INTEGER]) - [5]
2020-11-25 19:48:34,144 TRACE  [main] BasicExtractor: extracted value ([problem_7_0_1_] : [BIGINT]) - [2]
2020-11-25 19:48:34,144 TRACE  [main] BasicExtractor: extracted value ([problem_7_0_0_] : [BIGINT]) - [2]
2020-11-25 19:48:34,145 TRACE  [main] BasicExtractor: extracted value ([id1_0_0_] : [BIGINT]) - [11]
2020-11-25 19:48:34,147 TRACE  [main] BasicBinder: binding parameter [1] as [BIGINT] - [2]
2020-11-25 19:48:34,149 TRACE  [main] BasicBinder: binding parameter [1] as [BIGINT] - [1]
2020-11-25 19:48:34,150 TRACE  [main] BasicExtractor: extracted value ([id1_0_1_] : [BIGINT]) - [1]
2020-11-25 19:48:34,170 TRACE  [main] BasicExtractor: extracted value ([binary_v2_0_1_] : [BLOB]) - [null]
2020-11-25 19:48:34,171 TRACE  [main] BasicExtractor: extracted value ([float_va3_0_1_] : [DOUBLE]) - [1.0]
2020-11-25 19:48:34,171 TRACE  [main] BasicExtractor: extracted value ([i4_0_1_] : [INTEGER]) - [0]
2020-11-25 19:48:34,171 TRACE  [main] BasicExtractor: extracted value ([is_condi5_0_1_] : [BOOLEAN]) - [true]
2020-11-25 19:48:34,171 TRACE  [main] BasicExtractor: extracted value ([j6_0_1_] : [INTEGER]) - [0]
2020-11-25 19:48:34,171 TRACE  [main] BasicExtractor: extracted value ([problem_7_0_1_] : [BIGINT]) - [1]
2020-11-25 19:48:34,171 TRACE  [main] BasicExtractor: extracted value ([problem_7_0_0_] : [BIGINT]) - [1]
2020-11-25 19:48:34,172 TRACE  [main] BasicExtractor: extracted value ([id1_0_0_] : [BIGINT]) - [1]
2020-11-25 19:48:34,172 TRACE  [main] BasicExtractor: extracted value ([id1_0_1_] : [BIGINT]) - [2]
2020-11-25 19:48:34,172 TRACE  [main] BasicExtractor: extracted value ([binary_v2_0_1_] : [BLOB]) - [null]
2020-11-25 19:48:34,172 TRACE  [main] BasicExtractor: extracted value ([float_va3_0_1_] : [DOUBLE]) - [2.0]
2020-11-25 19:48:34,172 TRACE  [main] BasicExtractor: extracted value ([i4_0_1_] : [INTEGER]) - [0]
2020-11-25 19:48:34,173 TRACE  [main] BasicExtractor: extracted value ([is_condi5_0_1_] : [BOOLEAN]) - [true]
2020-11-25 19:48:34,173 TRACE  [main] BasicExtractor: extracted value ([j6_0_1_] : [INTEGER]) - [1]
2020-11-25 19:48:34,173 TRACE  [main] BasicExtractor: extracted value ([problem_7_0_1_] : [BIGINT]) - [1]
2020-11-25 19:48:34,173 TRACE  [main] BasicExtractor: extracted value ([problem_7_0_0_] : [BIGINT]) - [1]
2020-11-25 19:48:34,173 TRACE  [main] BasicExtractor: extracted value ([id1_0_0_] : [BIGINT]) - [2]
2020-11-25 19:48:34,174 TRACE  [main] BasicExtractor: extracted value ([id1_0_1_] : [BIGINT]) - [3]
2020-11-25 19:48:34,174 TRACE  [main] BasicExtractor: extracted value ([binary_v2_0_1_] : [BLOB]) - [null]
2020-11-25 19:48:34,175 TRACE  [main] BasicExtractor: extracted value ([float_va3_0_1_] : [DOUBLE]) - [1.0]
2020-11-25 19:48:34,175 TRACE  [main] BasicExtractor: extracted value ([i4_0_1_] : [INTEGER]) - [0]
2020-11-25 19:48:34,175 TRACE  [main] BasicExtractor: extracted value ([is_condi5_0_1_] : [BOOLEAN]) - [true]
2020-11-25 19:48:34,176 TRACE  [main] BasicExtractor: extracted value ([j6_0_1_] : [INTEGER]) - [2]
2020-11-25 19:48:34,176 TRACE  [main] BasicExtractor: extracted value ([problem_7_0_1_] : [BIGINT]) - [1]
2020-11-25 19:48:34,176 TRACE  [main] BasicExtractor: extracted value ([problem_7_0_0_] : [BIGINT]) - [1]
2020-11-25 19:48:34,177 TRACE  [main] BasicExtractor: extracted value ([id1_0_0_] : [BIGINT]) - [3]
2020-11-25 19:48:34,177 TRACE  [main] BasicExtractor: extracted value ([id1_0_1_] : [BIGINT]) - [4]
2020-11-25 19:48:34,177 TRACE  [main] BasicExtractor: extracted value ([binary_v2_0_1_] : [BLOB]) - [null]
2020-11-25 19:48:34,178 TRACE  [main] BasicExtractor: extracted value ([float_va3_0_1_] : [DOUBLE]) - [1.0]
2020-11-25 19:48:34,178 TRACE  [main] BasicExtractor: extracted value ([i4_0_1_] : [INTEGER]) - [0]
2020-11-25 19:48:34,178 TRACE  [main] BasicExtractor: extracted value ([is_condi5_0_1_] : [BOOLEAN]) - [false]
2020-11-25 19:48:34,178 TRACE  [main] BasicExtractor: extracted value ([j6_0_1_] : [INTEGER]) - [0]
2020-11-25 19:48:34,178 TRACE  [main] BasicExtractor: extracted value ([problem_7_0_1_] : [BIGINT]) - [1]
2020-11-25 19:48:34,178 TRACE  [main] BasicExtractor: extracted value ([problem_7_0_0_] : [BIGINT]) - [1]
2020-11-25 19:48:34,179 TRACE  [main] BasicExtractor: extracted value ([id1_0_0_] : [BIGINT]) - [4]
2020-11-25 19:48:34,179 TRACE  [main] BasicExtractor: extracted value ([id1_0_1_] : [BIGINT]) - [5]
2020-11-25 19:48:34,180 TRACE  [main] BasicExtractor: extracted value ([binary_v2_0_1_] : [BLOB]) - [null]
2020-11-25 19:48:34,180 TRACE  [main] BasicExtractor: extracted value ([float_va3_0_1_] : [DOUBLE]) - [1.0]
2020-11-25 19:48:34,181 TRACE  [main] BasicExtractor: extracted value ([i4_0_1_] : [INTEGER]) - [0]
2020-11-25 19:48:34,181 TRACE  [main] BasicExtractor: extracted value ([is_condi5_0_1_] : [BOOLEAN]) - [false]
2020-11-25 19:48:34,181 TRACE  [main] BasicExtractor: extracted value ([j6_0_1_] : [INTEGER]) - [1]
2020-11-25 19:48:34,181 TRACE  [main] BasicExtractor: extracted value ([problem_7_0_1_] : [BIGINT]) - [1]
2020-11-25 19:48:34,181 TRACE  [main] BasicExtractor: extracted value ([problem_7_0_0_] : [BIGINT]) - [1]
2020-11-25 19:48:34,181 TRACE  [main] BasicExtractor: extracted value ([id1_0_0_] : [BIGINT]) - [5]
2020-11-25 19:48:34,183 TRACE  [main] BasicBinder: binding parameter [1] as [BIGINT] - [1]
2020-11-25 19:48:34,233 TRACE  [main] BasicBinder: binding parameter [1] as [BIGINT] - [7]
2020-11-25 19:48:34,234 TRACE  [main] BasicExtractor: extracted value ([id1_1_2_] : [BIGINT]) - [null]
2020-11-25 19:48:34,234 TRACE  [main] BasicExtractor: extracted value ([id1_0_4_] : [BIGINT]) - [null]
2020-11-25 19:48:34,234 TRACE  [main] BasicExtractor: extracted value ([descript2_1_0_] : [BLOB]) - [[112, 114, 111, 98, 108, 101, 109, 100, 101, 115, 99, 114, 105, 112, 116, 105, 111, 110]]
2020-11-25 19:48:34,234 TRACE  [main] BasicExtractor: extracted value ([is_solve3_1_0_] : [BOOLEAN]) - [true]
2020-11-25 19:48:34,234 TRACE  [main] BasicExtractor: extracted value ([kind4_1_0_] : [VARCHAR]) - [POLYNOMIAL]
2020-11-25 19:48:34,235 TRACE  [main] BasicExtractor: extracted value ([matrix_d5_1_0_] : [INTEGER]) - [1]
2020-11-25 19:48:34,235 TRACE  [main] BasicExtractor: extracted value ([parent_p7_1_0_] : [BIGINT]) - [null]
2020-11-25 19:48:34,235 TRACE  [main] BasicExtractor: extracted value ([problem_6_1_0_] : [INTEGER]) - [0]
2020-11-25 19:48:34,235 TRACE  [main] BasicExtractor: extracted value ([problem_7_0_3_] : [BIGINT]) - [null]
2020-11-25 19:48:34,235 TRACE  [main] BasicExtractor: extracted value ([parent_p7_1_1_] : [BIGINT]) - [null]
2020-11-25 19:48:34,235 TRACE  [main] CollectionType: Created collection wrapper: [com.sf.back.entities.Problem.matrixes#7]
2020-11-25 19:48:34,236 TRACE  [main] BasicBinder: binding parameter [1] as [BIGINT] - [7]
2020-11-25 19:48:34,236 TRACE  [main] BasicExtractor: extracted value ([id1_0_1_] : [BIGINT]) - [40]
2020-11-25 19:48:34,236 TRACE  [main] BasicExtractor: extracted value ([binary_v2_0_1_] : [BLOB]) - [null]
2020-11-25 19:48:34,236 TRACE  [main] BasicExtractor: extracted value ([float_va3_0_1_] : [DOUBLE]) - [1.0]
2020-11-25 19:48:34,237 TRACE  [main] BasicExtractor: extracted value ([i4_0_1_] : [INTEGER]) - [0]
2020-11-25 19:48:34,237 TRACE  [main] BasicExtractor: extracted value ([is_condi5_0_1_] : [BOOLEAN]) - [true]
2020-11-25 19:48:34,237 TRACE  [main] BasicExtractor: extracted value ([j6_0_1_] : [INTEGER]) - [0]
2020-11-25 19:48:34,237 TRACE  [main] BasicExtractor: extracted value ([problem_7_0_1_] : [BIGINT]) - [7]
2020-11-25 19:48:34,237 TRACE  [main] BasicExtractor: extracted value ([problem_7_0_0_] : [BIGINT]) - [7]
2020-11-25 19:48:34,240 TRACE  [main] BasicExtractor: extracted value ([id1_0_0_] : [BIGINT]) - [40]
2020-11-25 19:48:34,241 TRACE  [main] BasicExtractor: extracted value ([id1_0_1_] : [BIGINT]) - [41]
2020-11-25 19:48:34,253 TRACE  [main] BasicExtractor: extracted value ([binary_v2_0_1_] : [BLOB]) - [null]
2020-11-25 19:48:34,253 TRACE  [main] BasicExtractor: extracted value ([float_va3_0_1_] : [DOUBLE]) - [-3.0]
2020-11-25 19:48:34,254 TRACE  [main] BasicExtractor: extracted value ([i4_0_1_] : [INTEGER]) - [0]
2020-11-25 19:48:34,254 TRACE  [main] BasicExtractor: extracted value ([is_condi5_0_1_] : [BOOLEAN]) - [true]
2020-11-25 19:48:34,254 TRACE  [main] BasicExtractor: extracted value ([j6_0_1_] : [INTEGER]) - [1]
2020-11-25 19:48:34,255 TRACE  [main] BasicExtractor: extracted value ([problem_7_0_1_] : [BIGINT]) - [7]
2020-11-25 19:48:34,255 TRACE  [main] BasicExtractor: extracted value ([problem_7_0_0_] : [BIGINT]) - [7]
2020-11-25 19:48:34,255 TRACE  [main] BasicExtractor: extracted value ([id1_0_0_] : [BIGINT]) - [41]
2020-11-25 19:48:34,255 TRACE  [main] BasicExtractor: extracted value ([id1_0_1_] : [BIGINT]) - [42]
2020-11-25 19:48:34,255 TRACE  [main] BasicExtractor: extracted value ([binary_v2_0_1_] : [BLOB]) - [null]
2020-11-25 19:48:34,256 TRACE  [main] BasicExtractor: extracted value ([float_va3_0_1_] : [DOUBLE]) - [2.0]
2020-11-25 19:48:34,256 TRACE  [main] BasicExtractor: extracted value ([i4_0_1_] : [INTEGER]) - [0]
2020-11-25 19:48:34,256 TRACE  [main] BasicExtractor: extracted value ([is_condi5_0_1_] : [BOOLEAN]) - [true]
2020-11-25 19:48:34,256 TRACE  [main] BasicExtractor: extracted value ([j6_0_1_] : [INTEGER]) - [2]
2020-11-25 19:48:34,256 TRACE  [main] BasicExtractor: extracted value ([problem_7_0_1_] : [BIGINT]) - [7]
2020-11-25 19:48:34,256 TRACE  [main] BasicExtractor: extracted value ([problem_7_0_0_] : [BIGINT]) - [7]
2020-11-25 19:48:34,256 TRACE  [main] BasicExtractor: extracted value ([id1_0_0_] : [BIGINT]) - [42]
2020-11-25 19:48:34,257 TRACE  [main] BasicExtractor: extracted value ([id1_0_1_] : [BIGINT]) - [43]
2020-11-25 19:48:34,257 TRACE  [main] BasicExtractor: extracted value ([binary_v2_0_1_] : [BLOB]) - [null]
2020-11-25 19:48:34,257 TRACE  [main] BasicExtractor: extracted value ([float_va3_0_1_] : [DOUBLE]) - [1.0]
2020-11-25 19:48:34,257 TRACE  [main] BasicExtractor: extracted value ([i4_0_1_] : [INTEGER]) - [0]
2020-11-25 19:48:34,257 TRACE  [main] BasicExtractor: extracted value ([is_condi5_0_1_] : [BOOLEAN]) - [false]
2020-11-25 19:48:34,258 TRACE  [main] BasicExtractor: extracted value ([j6_0_1_] : [INTEGER]) - [0]
2020-11-25 19:48:34,258 TRACE  [main] BasicExtractor: extracted value ([problem_7_0_1_] : [BIGINT]) - [7]
2020-11-25 19:48:34,258 TRACE  [main] BasicExtractor: extracted value ([problem_7_0_0_] : [BIGINT]) - [7]
2020-11-25 19:48:34,258 TRACE  [main] BasicExtractor: extracted value ([id1_0_0_] : [BIGINT]) - [43]
2020-11-25 19:48:34,259 TRACE  [main] BasicExtractor: extracted value ([id1_0_1_] : [BIGINT]) - [44]
2020-11-25 19:48:34,259 TRACE  [main] BasicExtractor: extracted value ([binary_v2_0_1_] : [BLOB]) - [null]
2020-11-25 19:48:34,259 TRACE  [main] BasicExtractor: extracted value ([float_va3_0_1_] : [DOUBLE]) - [2.0]
2020-11-25 19:48:34,259 TRACE  [main] BasicExtractor: extracted value ([i4_0_1_] : [INTEGER]) - [0]
2020-11-25 19:48:34,259 TRACE  [main] BasicExtractor: extracted value ([is_condi5_0_1_] : [BOOLEAN]) - [false]
2020-11-25 19:48:34,259 TRACE  [main] BasicExtractor: extracted value ([j6_0_1_] : [INTEGER]) - [1]
2020-11-25 19:48:34,260 TRACE  [main] BasicExtractor: extracted value ([problem_7_0_1_] : [BIGINT]) - [7]
2020-11-25 19:48:34,260 TRACE  [main] BasicExtractor: extracted value ([problem_7_0_0_] : [BIGINT]) - [7]
2020-11-25 19:48:34,260 TRACE  [main] BasicExtractor: extracted value ([id1_0_0_] : [BIGINT]) - [44]
2020-11-25 19:48:34,360 TRACE  [main] BasicBinder: binding parameter [1] as [BOOLEAN] - [false]
2020-11-25 19:48:34,360 TRACE  [main] BasicBinder: binding parameter [2] as [BIGINT] - [7]
2020-11-25 19:48:34,361 TRACE  [main] BasicExtractor: extracted value ([id1_0_] : [BIGINT]) - [43]
2020-11-25 19:48:34,361 TRACE  [main] BasicExtractor: extracted value ([binary_v2_0_] : [BLOB]) - [null]
2020-11-25 19:48:34,362 TRACE  [main] BasicExtractor: extracted value ([float_va3_0_] : [DOUBLE]) - [1.0]
2020-11-25 19:48:34,362 TRACE  [main] BasicExtractor: extracted value ([i4_0_] : [INTEGER]) - [0]
2020-11-25 19:48:34,362 TRACE  [main] BasicExtractor: extracted value ([is_condi5_0_] : [BOOLEAN]) - [false]
2020-11-25 19:48:34,363 TRACE  [main] BasicExtractor: extracted value ([j6_0_] : [INTEGER]) - [0]
2020-11-25 19:48:34,364 TRACE  [main] BasicExtractor: extracted value ([problem_7_0_] : [BIGINT]) - [7]
2020-11-25 19:48:34,365 TRACE  [main] BasicExtractor: extracted value ([id1_0_] : [BIGINT]) - [44]
2020-11-25 19:48:34,365 TRACE  [main] BasicExtractor: extracted value ([binary_v2_0_] : [BLOB]) - [null]
2020-11-25 19:48:34,366 TRACE  [main] BasicExtractor: extracted value ([float_va3_0_] : [DOUBLE]) - [2.0]
2020-11-25 19:48:34,366 TRACE  [main] BasicExtractor: extracted value ([i4_0_] : [INTEGER]) - [0]
2020-11-25 19:48:34,366 TRACE  [main] BasicExtractor: extracted value ([is_condi5_0_] : [BOOLEAN]) - [false]
2020-11-25 19:48:34,366 TRACE  [main] BasicExtractor: extracted value ([j6_0_] : [INTEGER]) - [1]
2020-11-25 19:48:34,366 TRACE  [main] BasicExtractor: extracted value ([problem_7_0_] : [BIGINT]) - [7]
2020-11-25 19:48:34,370 TRACE  [main] BasicBinder: binding parameter [1] as [BIGINT] - [7]
2020-11-25 19:48:34,371 TRACE  [main] BasicExtractor: extracted value ([id1_1_2_] : [BIGINT]) - [null]
2020-11-25 19:48:34,372 TRACE  [main] BasicExtractor: extracted value ([id1_0_4_] : [BIGINT]) - [null]
2020-11-25 19:48:34,373 TRACE  [main] BasicExtractor: extracted value ([descript2_1_0_] : [BLOB]) - [[112, 114, 111, 98, 108, 101, 109, 100, 101, 115, 99, 114, 105, 112, 116, 105, 111, 110]]
2020-11-25 19:48:34,373 TRACE  [main] BasicExtractor: extracted value ([is_solve3_1_0_] : [BOOLEAN]) - [true]
2020-11-25 19:48:34,373 TRACE  [main] BasicExtractor: extracted value ([kind4_1_0_] : [VARCHAR]) - [POLYNOMIAL]
2020-11-25 19:48:34,374 TRACE  [main] BasicExtractor: extracted value ([matrix_d5_1_0_] : [INTEGER]) - [1]
2020-11-25 19:48:34,375 TRACE  [main] BasicExtractor: extracted value ([parent_p7_1_0_] : [BIGINT]) - [null]
2020-11-25 19:48:34,375 TRACE  [main] BasicExtractor: extracted value ([problem_6_1_0_] : [INTEGER]) - [0]
2020-11-25 19:48:34,375 TRACE  [main] BasicExtractor: extracted value ([problem_7_0_3_] : [BIGINT]) - [null]
2020-11-25 19:48:34,375 TRACE  [main] BasicExtractor: extracted value ([parent_p7_1_1_] : [BIGINT]) - [null]
2020-11-25 19:48:34,375 TRACE  [main] CollectionType: Created collection wrapper: [com.sf.back.entities.Problem.matrixes#7]
2020-11-25 19:48:34,378 TRACE  [main] BasicBinder: binding parameter [1] as [BIGINT] - [7]
2020-11-25 19:48:34,379 TRACE  [main] BasicExtractor: extracted value ([id1_0_1_] : [BIGINT]) - [40]
2020-11-25 19:48:34,379 TRACE  [main] BasicExtractor: extracted value ([binary_v2_0_1_] : [BLOB]) - [null]
2020-11-25 19:48:34,380 TRACE  [main] BasicExtractor: extracted value ([float_va3_0_1_] : [DOUBLE]) - [1.0]
2020-11-25 19:48:34,380 TRACE  [main] BasicExtractor: extracted value ([i4_0_1_] : [INTEGER]) - [0]
2020-11-25 19:48:34,381 TRACE  [main] BasicExtractor: extracted value ([is_condi5_0_1_] : [BOOLEAN]) - [true]
2020-11-25 19:48:34,381 TRACE  [main] BasicExtractor: extracted value ([j6_0_1_] : [INTEGER]) - [0]
2020-11-25 19:48:34,381 TRACE  [main] BasicExtractor: extracted value ([problem_7_0_1_] : [BIGINT]) - [7]
2020-11-25 19:48:34,381 TRACE  [main] BasicExtractor: extracted value ([problem_7_0_0_] : [BIGINT]) - [7]
2020-11-25 19:48:34,381 TRACE  [main] BasicExtractor: extracted value ([id1_0_0_] : [BIGINT]) - [40]
2020-11-25 19:48:34,382 TRACE  [main] BasicExtractor: extracted value ([id1_0_1_] : [BIGINT]) - [41]
2020-11-25 19:48:34,382 TRACE  [main] BasicExtractor: extracted value ([binary_v2_0_1_] : [BLOB]) - [null]
2020-11-25 19:48:34,384 TRACE  [main] BasicExtractor: extracted value ([float_va3_0_1_] : [DOUBLE]) - [-3.0]
2020-11-25 19:48:34,385 TRACE  [main] BasicExtractor: extracted value ([i4_0_1_] : [INTEGER]) - [0]
2020-11-25 19:48:34,385 TRACE  [main] BasicExtractor: extracted value ([is_condi5_0_1_] : [BOOLEAN]) - [true]
2020-11-25 19:48:34,385 TRACE  [main] BasicExtractor: extracted value ([j6_0_1_] : [INTEGER]) - [1]
2020-11-25 19:48:34,386 TRACE  [main] BasicExtractor: extracted value ([problem_7_0_1_] : [BIGINT]) - [7]
2020-11-25 19:48:34,389 TRACE  [main] BasicExtractor: extracted value ([problem_7_0_0_] : [BIGINT]) - [7]
2020-11-25 19:48:34,390 TRACE  [main] BasicExtractor: extracted value ([id1_0_0_] : [BIGINT]) - [41]
2020-11-25 19:48:34,391 TRACE  [main] BasicExtractor: extracted value ([id1_0_1_] : [BIGINT]) - [42]
2020-11-25 19:48:34,392 TRACE  [main] BasicExtractor: extracted value ([binary_v2_0_1_] : [BLOB]) - [null]
2020-11-25 19:48:34,392 TRACE  [main] BasicExtractor: extracted value ([float_va3_0_1_] : [DOUBLE]) - [2.0]
2020-11-25 19:48:34,392 TRACE  [main] BasicExtractor: extracted value ([i4_0_1_] : [INTEGER]) - [0]
2020-11-25 19:48:34,393 TRACE  [main] BasicExtractor: extracted value ([is_condi5_0_1_] : [BOOLEAN]) - [true]
2020-11-25 19:48:34,393 TRACE  [main] BasicExtractor: extracted value ([j6_0_1_] : [INTEGER]) - [2]
2020-11-25 19:48:34,393 TRACE  [main] BasicExtractor: extracted value ([problem_7_0_1_] : [BIGINT]) - [7]
2020-11-25 19:48:34,394 TRACE  [main] BasicExtractor: extracted value ([problem_7_0_0_] : [BIGINT]) - [7]
2020-11-25 19:48:34,394 TRACE  [main] BasicExtractor: extracted value ([id1_0_0_] : [BIGINT]) - [42]
2020-11-25 19:48:34,395 TRACE  [main] BasicExtractor: extracted value ([id1_0_1_] : [BIGINT]) - [43]
2020-11-25 19:48:34,395 TRACE  [main] BasicExtractor: extracted value ([problem_7_0_0_] : [BIGINT]) - [7]
2020-11-25 19:48:34,396 TRACE  [main] BasicExtractor: extracted value ([id1_0_0_] : [BIGINT]) - [43]
2020-11-25 19:48:34,398 TRACE  [main] BasicExtractor: extracted value ([id1_0_1_] : [BIGINT]) - [44]
2020-11-25 19:48:34,398 TRACE  [main] BasicExtractor: extracted value ([problem_7_0_0_] : [BIGINT]) - [7]
2020-11-25 19:48:34,399 TRACE  [main] BasicExtractor: extracted value ([id1_0_0_] : [BIGINT]) - [44]
2020-11-25 19:48:34,432 TRACE  [main] BasicBinder: binding parameter [1] as [BIGINT] - [8]
2020-11-25 19:48:34,433 TRACE  [main] BasicExtractor: extracted value ([id1_1_2_] : [BIGINT]) - [null]
2020-11-25 19:48:34,433 TRACE  [main] BasicExtractor: extracted value ([id1_0_4_] : [BIGINT]) - [null]
2020-11-25 19:48:34,433 TRACE  [main] BasicExtractor: extracted value ([descript2_1_0_] : [BLOB]) - [[112, 114, 111, 98, 108, 101, 109, 100, 101, 115, 99, 114, 105, 112, 116, 105, 111, 110]]
2020-11-25 19:48:34,433 TRACE  [main] BasicExtractor: extracted value ([is_solve3_1_0_] : [BOOLEAN]) - [null]
2020-11-25 19:48:34,434 TRACE  [main] BasicExtractor: extracted value ([kind4_1_0_] : [VARCHAR]) - [POLYNOMIAL]
2020-11-25 19:48:34,434 TRACE  [main] BasicExtractor: extracted value ([matrix_d5_1_0_] : [INTEGER]) - [1]
2020-11-25 19:48:34,434 TRACE  [main] BasicExtractor: extracted value ([parent_p7_1_0_] : [BIGINT]) - [null]
2020-11-25 19:48:34,434 TRACE  [main] BasicExtractor: extracted value ([problem_6_1_0_] : [INTEGER]) - [22]
2020-11-25 19:48:34,434 TRACE  [main] BasicExtractor: extracted value ([problem_7_0_3_] : [BIGINT]) - [null]
2020-11-25 19:48:34,434 TRACE  [main] BasicExtractor: extracted value ([parent_p7_1_1_] : [BIGINT]) - [null]
2020-11-25 19:48:34,435 TRACE  [main] CollectionType: Created collection wrapper: [com.sf.back.entities.Problem.matrixes#8]
2020-11-25 19:48:34,435 TRACE  [main] BasicBinder: binding parameter [1] as [BIGINT] - [8]
2020-11-25 19:48:34,436 TRACE  [main] BasicExtractor: extracted value ([id1_0_1_] : [BIGINT]) - [45]
2020-11-25 19:48:34,436 TRACE  [main] BasicExtractor: extracted value ([binary_v2_0_1_] : [BLOB]) - [null]
2020-11-25 19:48:34,436 TRACE  [main] BasicExtractor: extracted value ([float_va3_0_1_] : [DOUBLE]) - [1.0]
2020-11-25 19:48:34,436 TRACE  [main] BasicExtractor: extracted value ([i4_0_1_] : [INTEGER]) - [0]
2020-11-25 19:48:34,437 TRACE  [main] BasicExtractor: extracted value ([is_condi5_0_1_] : [BOOLEAN]) - [true]
2020-11-25 19:48:34,437 TRACE  [main] BasicExtractor: extracted value ([j6_0_1_] : [INTEGER]) - [0]
2020-11-25 19:48:34,437 TRACE  [main] BasicExtractor: extracted value ([problem_7_0_1_] : [BIGINT]) - [8]
2020-11-25 19:48:34,437 TRACE  [main] BasicExtractor: extracted value ([problem_7_0_0_] : [BIGINT]) - [8]
2020-11-25 19:48:34,437 TRACE  [main] BasicExtractor: extracted value ([id1_0_0_] : [BIGINT]) - [45]
2020-11-25 19:48:34,437 TRACE  [main] BasicExtractor: extracted value ([id1_0_1_] : [BIGINT]) - [46]
2020-11-25 19:48:34,438 TRACE  [main] BasicExtractor: extracted value ([binary_v2_0_1_] : [BLOB]) - [null]
2020-11-25 19:48:34,438 TRACE  [main] BasicExtractor: extracted value ([float_va3_0_1_] : [DOUBLE]) - [2.718281828459045]
2020-11-25 19:48:34,439 TRACE  [main] BasicExtractor: extracted value ([i4_0_1_] : [INTEGER]) - [0]
2020-11-25 19:48:34,439 TRACE  [main] BasicExtractor: extracted value ([is_condi5_0_1_] : [BOOLEAN]) - [true]
2020-11-25 19:48:34,439 TRACE  [main] BasicExtractor: extracted value ([j6_0_1_] : [INTEGER]) - [1]
2020-11-25 19:48:34,439 TRACE  [main] BasicExtractor: extracted value ([problem_7_0_1_] : [BIGINT]) - [8]
2020-11-25 19:48:34,439 TRACE  [main] BasicExtractor: extracted value ([problem_7_0_0_] : [BIGINT]) - [8]
2020-11-25 19:48:34,439 TRACE  [main] BasicExtractor: extracted value ([id1_0_0_] : [BIGINT]) - [46]
2020-11-25 19:48:34,439 TRACE  [main] BasicExtractor: extracted value ([id1_0_1_] : [BIGINT]) - [47]
2020-11-25 19:48:34,440 TRACE  [main] BasicExtractor: extracted value ([binary_v2_0_1_] : [BLOB]) - [null]
2020-11-25 19:48:34,440 TRACE  [main] BasicExtractor: extracted value ([float_va3_0_1_] : [DOUBLE]) - [7.38905609893065]
2020-11-25 19:48:34,440 TRACE  [main] BasicExtractor: extracted value ([i4_0_1_] : [INTEGER]) - [0]
2020-11-25 19:48:34,440 TRACE  [main] BasicExtractor: extracted value ([is_condi5_0_1_] : [BOOLEAN]) - [true]
2020-11-25 19:48:34,440 TRACE  [main] BasicExtractor: extracted value ([j6_0_1_] : [INTEGER]) - [2]
2020-11-25 19:48:34,440 TRACE  [main] BasicExtractor: extracted value ([problem_7_0_1_] : [BIGINT]) - [8]
2020-11-25 19:48:34,440 TRACE  [main] BasicExtractor: extracted value ([problem_7_0_0_] : [BIGINT]) - [8]
2020-11-25 19:48:34,441 TRACE  [main] BasicExtractor: extracted value ([id1_0_0_] : [BIGINT]) - [47]
2020-11-25 19:48:34,441 TRACE  [main] BasicExtractor: extracted value ([id1_0_1_] : [BIGINT]) - [48]
2020-11-25 19:48:34,441 TRACE  [main] BasicExtractor: extracted value ([binary_v2_0_1_] : [BLOB]) - [null]
2020-11-25 19:48:34,441 TRACE  [main] BasicExtractor: extracted value ([float_va3_0_1_] : [DOUBLE]) - [20.085536923187668]
2020-11-25 19:48:34,441 TRACE  [main] BasicExtractor: extracted value ([i4_0_1_] : [INTEGER]) - [0]
2020-11-25 19:48:34,441 TRACE  [main] BasicExtractor: extracted value ([is_condi5_0_1_] : [BOOLEAN]) - [true]
2020-11-25 19:48:34,442 TRACE  [main] BasicExtractor: extracted value ([j6_0_1_] : [INTEGER]) - [3]
2020-11-25 19:48:34,442 TRACE  [main] BasicExtractor: extracted value ([problem_7_0_1_] : [BIGINT]) - [8]
2020-11-25 19:48:34,442 TRACE  [main] BasicExtractor: extracted value ([problem_7_0_0_] : [BIGINT]) - [8]
2020-11-25 19:48:34,442 TRACE  [main] BasicExtractor: extracted value ([id1_0_0_] : [BIGINT]) - [48]
2020-11-25 19:48:34,442 TRACE  [main] BasicExtractor: extracted value ([id1_0_1_] : [BIGINT]) - [49]
2020-11-25 19:48:34,443 TRACE  [main] BasicExtractor: extracted value ([binary_v2_0_1_] : [BLOB]) - [null]
2020-11-25 19:48:34,443 TRACE  [main] BasicExtractor: extracted value ([float_va3_0_1_] : [DOUBLE]) - [54.598150033144236]
2020-11-25 19:48:34,443 TRACE  [main] BasicExtractor: extracted value ([i4_0_1_] : [INTEGER]) - [0]
2020-11-25 19:48:34,443 TRACE  [main] BasicExtractor: extracted value ([is_condi5_0_1_] : [BOOLEAN]) - [true]
2020-11-25 19:48:34,443 TRACE  [main] BasicExtractor: extracted value ([j6_0_1_] : [INTEGER]) - [4]
2020-11-25 19:48:34,443 TRACE  [main] BasicExtractor: extracted value ([problem_7_0_1_] : [BIGINT]) - [8]
2020-11-25 19:48:34,443 TRACE  [main] BasicExtractor: extracted value ([problem_7_0_0_] : [BIGINT]) - [8]
2020-11-25 19:48:34,443 TRACE  [main] BasicExtractor: extracted value ([id1_0_0_] : [BIGINT]) - [49]
2020-11-25 19:48:34,444 TRACE  [main] BasicExtractor: extracted value ([id1_0_1_] : [BIGINT]) - [50]
2020-11-25 19:48:34,444 TRACE  [main] BasicExtractor: extracted value ([binary_v2_0_1_] : [BLOB]) - [null]
2020-11-25 19:48:34,444 TRACE  [main] BasicExtractor: extracted value ([float_va3_0_1_] : [DOUBLE]) - [148.4131591025766]
2020-11-25 19:48:34,444 TRACE  [main] BasicExtractor: extracted value ([i4_0_1_] : [INTEGER]) - [0]
2020-11-25 19:48:34,445 TRACE  [main] BasicExtractor: extracted value ([is_condi5_0_1_] : [BOOLEAN]) - [true]
2020-11-25 19:48:34,445 TRACE  [main] BasicExtractor: extracted value ([j6_0_1_] : [INTEGER]) - [5]
2020-11-25 19:48:34,445 TRACE  [main] BasicExtractor: extracted value ([problem_7_0_1_] : [BIGINT]) - [8]
2020-11-25 19:48:34,445 TRACE  [main] BasicExtractor: extracted value ([problem_7_0_0_] : [BIGINT]) - [8]
2020-11-25 19:48:34,445 TRACE  [main] BasicExtractor: extracted value ([id1_0_0_] : [BIGINT]) - [50]
2020-11-25 19:48:34,463 TRACE  [main] BasicBinder: binding parameter [1] as [BLOB] - [[100, 101, 115, 99, 114, 105, 112, 116, 105, 111, 110]]
2020-11-25 19:48:34,463 TRACE  [main] BasicBinder: binding parameter [2] as [BOOLEAN] - [null]
2020-11-25 19:48:34,463 TRACE  [main] BasicBinder: binding parameter [3] as [VARCHAR] - [POLYNOMIAL]
2020-11-25 19:48:34,463 TRACE  [main] BasicBinder: binding parameter [4] as [INTEGER] - [null]
2020-11-25 19:48:34,463 TRACE  [main] BasicBinder: binding parameter [5] as [BIGINT] - [null]
2020-11-25 19:48:34,463 TRACE  [main] BasicBinder: binding parameter [6] as [INTEGER] - [24]
2020-11-25 19:48:34,464 TRACE  [main] BasicBinder: binding parameter [1] as [BLOB] - [null]
2020-11-25 19:48:34,465 TRACE  [main] BasicBinder: binding parameter [2] as [DOUBLE] - [1.0]
2020-11-25 19:48:34,465 TRACE  [main] BasicBinder: binding parameter [3] as [INTEGER] - [0]
2020-11-25 19:48:34,465 TRACE  [main] BasicBinder: binding parameter [4] as [BOOLEAN] - [true]
2020-11-25 19:48:34,465 TRACE  [main] BasicBinder: binding parameter [5] as [INTEGER] - [0]
2020-11-25 19:48:34,465 TRACE  [main] BasicBinder: binding parameter [6] as [BIGINT] - [10]
2020-11-25 19:48:34,467 TRACE  [main] BasicBinder: binding parameter [1] as [BLOB] - [null]
2020-11-25 19:48:34,468 TRACE  [main] BasicBinder: binding parameter [2] as [DOUBLE] - [2.0]
2020-11-25 19:48:34,468 TRACE  [main] BasicBinder: binding parameter [3] as [INTEGER] - [0]
2020-11-25 19:48:34,468 TRACE  [main] BasicBinder: binding parameter [4] as [BOOLEAN] - [true]
2020-11-25 19:48:34,468 TRACE  [main] BasicBinder: binding parameter [5] as [INTEGER] - [1]
2020-11-25 19:48:34,468 TRACE  [main] BasicBinder: binding parameter [6] as [BIGINT] - [10]
2020-11-25 19:48:34,470 TRACE  [main] BasicBinder: binding parameter [1] as [BLOB] - [null]
2020-11-25 19:48:34,471 TRACE  [main] BasicBinder: binding parameter [2] as [DOUBLE] - [3.0]
2020-11-25 19:48:34,471 TRACE  [main] BasicBinder: binding parameter [3] as [INTEGER] - [0]
2020-11-25 19:48:34,475 TRACE  [main] BasicBinder: binding parameter [4] as [BOOLEAN] - [true]
2020-11-25 19:48:34,476 TRACE  [main] BasicBinder: binding parameter [5] as [INTEGER] - [2]
2020-11-25 19:48:34,476 TRACE  [main] BasicBinder: binding parameter [6] as [BIGINT] - [10]
2020-11-25 19:48:34,478 TRACE  [main] BasicBinder: binding parameter [1] as [BLOB] - [null]
2020-11-25 19:48:34,478 TRACE  [main] BasicBinder: binding parameter [2] as [DOUBLE] - [4.0]
2020-11-25 19:48:34,479 TRACE  [main] BasicBinder: binding parameter [3] as [INTEGER] - [0]
2020-11-25 19:48:34,479 TRACE  [main] BasicBinder: binding parameter [4] as [BOOLEAN] - [true]
2020-11-25 19:48:34,479 TRACE  [main] BasicBinder: binding parameter [5] as [INTEGER] - [3]
2020-11-25 19:48:34,479 TRACE  [main] BasicBinder: binding parameter [6] as [BIGINT] - [10]
2020-11-25 19:48:34,519 TRACE  [main] BasicBinder: binding parameter [1] as [BIGINT] - [10]
2020-11-25 19:48:34,525 TRACE  [main] BasicExtractor: extracted value ([id1_1_2_] : [BIGINT]) - [null]
2020-11-25 19:48:34,525 TRACE  [main] BasicExtractor: extracted value ([id1_0_4_] : [BIGINT]) - [null]
2020-11-25 19:48:34,530 TRACE  [main] BasicExtractor: extracted value ([descript2_1_0_] : [BLOB]) - [[100, 101, 115, 99, 114, 105, 112, 116, 105, 111, 110]]
2020-11-25 19:48:34,530 TRACE  [main] BasicExtractor: extracted value ([is_solve3_1_0_] : [BOOLEAN]) - [null]
2020-11-25 19:48:34,531 TRACE  [main] BasicExtractor: extracted value ([kind4_1_0_] : [VARCHAR]) - [POLYNOMIAL]
2020-11-25 19:48:34,531 TRACE  [main] BasicExtractor: extracted value ([matrix_d5_1_0_] : [INTEGER]) - [null]
2020-11-25 19:48:34,531 TRACE  [main] BasicExtractor: extracted value ([parent_p7_1_0_] : [BIGINT]) - [null]
2020-11-25 19:48:34,532 TRACE  [main] BasicExtractor: extracted value ([problem_6_1_0_] : [INTEGER]) - [24]
2020-11-25 19:48:34,532 TRACE  [main] BasicExtractor: extracted value ([problem_7_0_3_] : [BIGINT]) - [null]
2020-11-25 19:48:34,532 TRACE  [main] BasicExtractor: extracted value ([parent_p7_1_1_] : [BIGINT]) - [null]
2020-11-25 19:48:34,533 TRACE  [main] CollectionType: Created collection wrapper: [com.sf.back.entities.Problem.matrixes#10]
2020-11-25 19:48:34,534 TRACE  [main] BasicBinder: binding parameter [1] as [BIGINT] - [10]
2020-11-25 19:48:34,536 TRACE  [main] BasicExtractor: extracted value ([id1_0_1_] : [BIGINT]) - [57]
2020-11-25 19:48:34,536 TRACE  [main] BasicExtractor: extracted value ([binary_v2_0_1_] : [BLOB]) - [null]
2020-11-25 19:48:34,536 TRACE  [main] BasicExtractor: extracted value ([float_va3_0_1_] : [DOUBLE]) - [1.0]
2020-11-25 19:48:34,536 TRACE  [main] BasicExtractor: extracted value ([i4_0_1_] : [INTEGER]) - [0]
2020-11-25 19:48:34,537 TRACE  [main] BasicExtractor: extracted value ([is_condi5_0_1_] : [BOOLEAN]) - [true]
2020-11-25 19:48:34,537 TRACE  [main] BasicExtractor: extracted value ([j6_0_1_] : [INTEGER]) - [0]
2020-11-25 19:48:34,537 TRACE  [main] BasicExtractor: extracted value ([problem_7_0_1_] : [BIGINT]) - [10]
2020-11-25 19:48:34,537 TRACE  [main] BasicExtractor: extracted value ([problem_7_0_0_] : [BIGINT]) - [10]
2020-11-25 19:48:34,537 TRACE  [main] BasicExtractor: extracted value ([id1_0_0_] : [BIGINT]) - [57]
2020-11-25 19:48:34,537 TRACE  [main] BasicExtractor: extracted value ([id1_0_1_] : [BIGINT]) - [58]
2020-11-25 19:48:34,537 TRACE  [main] BasicExtractor: extracted value ([binary_v2_0_1_] : [BLOB]) - [null]
2020-11-25 19:48:34,538 TRACE  [main] BasicExtractor: extracted value ([float_va3_0_1_] : [DOUBLE]) - [2.0]
2020-11-25 19:48:34,538 TRACE  [main] BasicExtractor: extracted value ([i4_0_1_] : [INTEGER]) - [0]
2020-11-25 19:48:34,538 TRACE  [main] BasicExtractor: extracted value ([is_condi5_0_1_] : [BOOLEAN]) - [true]
2020-11-25 19:48:34,538 TRACE  [main] BasicExtractor: extracted value ([j6_0_1_] : [INTEGER]) - [1]
2020-11-25 19:48:34,538 TRACE  [main] BasicExtractor: extracted value ([problem_7_0_1_] : [BIGINT]) - [10]
2020-11-25 19:48:34,538 TRACE  [main] BasicExtractor: extracted value ([problem_7_0_0_] : [BIGINT]) - [10]
2020-11-25 19:48:34,538 TRACE  [main] BasicExtractor: extracted value ([id1_0_0_] : [BIGINT]) - [58]
2020-11-25 19:48:34,539 TRACE  [main] BasicExtractor: extracted value ([id1_0_1_] : [BIGINT]) - [59]
2020-11-25 19:48:34,539 TRACE  [main] BasicExtractor: extracted value ([binary_v2_0_1_] : [BLOB]) - [null]
2020-11-25 19:48:34,539 TRACE  [main] BasicExtractor: extracted value ([float_va3_0_1_] : [DOUBLE]) - [3.0]
2020-11-25 19:48:34,539 TRACE  [main] BasicExtractor: extracted value ([i4_0_1_] : [INTEGER]) - [0]
2020-11-25 19:48:34,539 TRACE  [main] BasicExtractor: extracted value ([is_condi5_0_1_] : [BOOLEAN]) - [true]
2020-11-25 19:48:34,539 TRACE  [main] BasicExtractor: extracted value ([j6_0_1_] : [INTEGER]) - [2]
2020-11-25 19:48:34,539 TRACE  [main] BasicExtractor: extracted value ([problem_7_0_1_] : [BIGINT]) - [10]
2020-11-25 19:48:34,540 TRACE  [main] BasicExtractor: extracted value ([problem_7_0_0_] : [BIGINT]) - [10]
2020-11-25 19:48:34,540 TRACE  [main] BasicExtractor: extracted value ([id1_0_0_] : [BIGINT]) - [59]
2020-11-25 19:48:34,540 TRACE  [main] BasicExtractor: extracted value ([id1_0_1_] : [BIGINT]) - [60]
2020-11-25 19:48:34,540 TRACE  [main] BasicExtractor: extracted value ([binary_v2_0_1_] : [BLOB]) - [null]
2020-11-25 19:48:34,541 TRACE  [main] BasicExtractor: extracted value ([float_va3_0_1_] : [DOUBLE]) - [4.0]
2020-11-25 19:48:34,541 TRACE  [main] BasicExtractor: extracted value ([i4_0_1_] : [INTEGER]) - [0]
2020-11-25 19:48:34,541 TRACE  [main] BasicExtractor: extracted value ([is_condi5_0_1_] : [BOOLEAN]) - [true]
2020-11-25 19:48:34,541 TRACE  [main] BasicExtractor: extracted value ([j6_0_1_] : [INTEGER]) - [3]
2020-11-25 19:48:34,541 TRACE  [main] BasicExtractor: extracted value ([problem_7_0_1_] : [BIGINT]) - [10]
2020-11-25 19:48:34,542 TRACE  [main] BasicExtractor: extracted value ([problem_7_0_0_] : [BIGINT]) - [10]
2020-11-25 19:48:34,542 TRACE  [main] BasicExtractor: extracted value ([id1_0_0_] : [BIGINT]) - [60]
2020-11-25 19:48:34,552 TRACE  [main] BasicBinder: binding parameter [1] as [BIGINT] - [11]
2020-11-25 19:48:34,553 TRACE  [main] BasicExtractor: extracted value ([id1_1_2_] : [BIGINT]) - [null]
2020-11-25 19:48:34,553 TRACE  [main] BasicExtractor: extracted value ([id1_0_4_] : [BIGINT]) - [null]
2020-11-25 19:48:34,553 TRACE  [main] BasicExtractor: extracted value ([descript2_1_0_] : [BLOB]) - [[112, 114, 111, 98, 108, 101, 109, 100, 101, 115, 99, 114, 105, 112, 116, 105, 111, 110]]
2020-11-25 19:48:34,554 TRACE  [main] BasicExtractor: extracted value ([is_solve3_1_0_] : [BOOLEAN]) - [null]
2020-11-25 19:48:34,554 TRACE  [main] BasicExtractor: extracted value ([kind4_1_0_] : [VARCHAR]) - [POLYNOMIAL]
2020-11-25 19:48:34,554 TRACE  [main] BasicExtractor: extracted value ([matrix_d5_1_0_] : [INTEGER]) - [1]
2020-11-25 19:48:34,554 TRACE  [main] BasicExtractor: extracted value ([parent_p7_1_0_] : [BIGINT]) - [null]
2020-11-25 19:48:34,554 TRACE  [main] BasicExtractor: extracted value ([problem_6_1_0_] : [INTEGER]) - [22]
2020-11-25 19:48:34,554 TRACE  [main] BasicExtractor: extracted value ([problem_7_0_3_] : [BIGINT]) - [null]
2020-11-25 19:48:34,554 TRACE  [main] BasicExtractor: extracted value ([parent_p7_1_1_] : [BIGINT]) - [null]
2020-11-25 19:48:34,555 TRACE  [main] CollectionType: Created collection wrapper: [com.sf.back.entities.Problem.matrixes#11]
2020-11-25 19:48:34,556 TRACE  [main] BasicBinder: binding parameter [1] as [BIGINT] - [11]
2020-11-25 19:48:34,556 TRACE  [main] BasicExtractor: extracted value ([id1_0_1_] : [BIGINT]) - [61]
2020-11-25 19:48:34,557 TRACE  [main] BasicExtractor: extracted value ([binary_v2_0_1_] : [BLOB]) - [null]
2020-11-25 19:48:34,557 TRACE  [main] BasicExtractor: extracted value ([float_va3_0_1_] : [DOUBLE]) - [1.0]
2020-11-25 19:48:34,558 TRACE  [main] BasicExtractor: extracted value ([i4_0_1_] : [INTEGER]) - [0]
2020-11-25 19:48:34,558 TRACE  [main] BasicExtractor: extracted value ([is_condi5_0_1_] : [BOOLEAN]) - [true]
2020-11-25 19:48:34,558 TRACE  [main] BasicExtractor: extracted value ([j6_0_1_] : [INTEGER]) - [0]
2020-11-25 19:48:34,558 TRACE  [main] BasicExtractor: extracted value ([problem_7_0_1_] : [BIGINT]) - [11]
2020-11-25 19:48:34,558 TRACE  [main] BasicExtractor: extracted value ([problem_7_0_0_] : [BIGINT]) - [11]
2020-11-25 19:48:34,558 TRACE  [main] BasicExtractor: extracted value ([id1_0_0_] : [BIGINT]) - [61]
2020-11-25 19:48:34,559 TRACE  [main] BasicExtractor: extracted value ([id1_0_1_] : [BIGINT]) - [62]
2020-11-25 19:48:34,559 TRACE  [main] BasicExtractor: extracted value ([binary_v2_0_1_] : [BLOB]) - [null]
2020-11-25 19:48:34,559 TRACE  [main] BasicExtractor: extracted value ([float_va3_0_1_] : [DOUBLE]) - [2.718281828459045]
2020-11-25 19:48:34,559 TRACE  [main] BasicExtractor: extracted value ([i4_0_1_] : [INTEGER]) - [0]
2020-11-25 19:48:34,559 TRACE  [main] BasicExtractor: extracted value ([is_condi5_0_1_] : [BOOLEAN]) - [true]
2020-11-25 19:48:34,560 TRACE  [main] BasicExtractor: extracted value ([j6_0_1_] : [INTEGER]) - [1]
2020-11-25 19:48:34,560 TRACE  [main] BasicExtractor: extracted value ([problem_7_0_1_] : [BIGINT]) - [11]
2020-11-25 19:48:34,560 TRACE  [main] BasicExtractor: extracted value ([problem_7_0_0_] : [BIGINT]) - [11]
2020-11-25 19:48:34,560 TRACE  [main] BasicExtractor: extracted value ([id1_0_0_] : [BIGINT]) - [62]
2020-11-25 19:48:34,560 TRACE  [main] BasicExtractor: extracted value ([id1_0_1_] : [BIGINT]) - [63]
2020-11-25 19:48:34,561 TRACE  [main] BasicExtractor: extracted value ([binary_v2_0_1_] : [BLOB]) - [null]
2020-11-25 19:48:34,561 TRACE  [main] BasicExtractor: extracted value ([float_va3_0_1_] : [DOUBLE]) - [7.38905609893065]
2020-11-25 19:48:34,561 TRACE  [main] BasicExtractor: extracted value ([i4_0_1_] : [INTEGER]) - [0]
2020-11-25 19:48:34,561 TRACE  [main] BasicExtractor: extracted value ([is_condi5_0_1_] : [BOOLEAN]) - [true]
2020-11-25 19:48:34,561 TRACE  [main] BasicExtractor: extracted value ([j6_0_1_] : [INTEGER]) - [2]
2020-11-25 19:48:34,561 TRACE  [main] BasicExtractor: extracted value ([problem_7_0_1_] : [BIGINT]) - [11]
2020-11-25 19:48:34,561 TRACE  [main] BasicExtractor: extracted value ([problem_7_0_0_] : [BIGINT]) - [11]
2020-11-25 19:48:34,562 TRACE  [main] BasicExtractor: extracted value ([id1_0_0_] : [BIGINT]) - [63]
2020-11-25 19:48:34,562 TRACE  [main] BasicExtractor: extracted value ([id1_0_1_] : [BIGINT]) - [64]
2020-11-25 19:48:34,562 TRACE  [main] BasicExtractor: extracted value ([binary_v2_0_1_] : [BLOB]) - [null]
2020-11-25 19:48:34,562 TRACE  [main] BasicExtractor: extracted value ([float_va3_0_1_] : [DOUBLE]) - [20.085536923187668]
2020-11-25 19:48:34,562 TRACE  [main] BasicExtractor: extracted value ([i4_0_1_] : [INTEGER]) - [0]
2020-11-25 19:48:34,563 TRACE  [main] BasicExtractor: extracted value ([is_condi5_0_1_] : [BOOLEAN]) - [true]
2020-11-25 19:48:34,563 TRACE  [main] BasicExtractor: extracted value ([j6_0_1_] : [INTEGER]) - [3]
2020-11-25 19:48:34,563 TRACE  [main] BasicExtractor: extracted value ([problem_7_0_1_] : [BIGINT]) - [11]
2020-11-25 19:48:34,563 TRACE  [main] BasicExtractor: extracted value ([problem_7_0_0_] : [BIGINT]) - [11]
2020-11-25 19:48:34,563 TRACE  [main] BasicExtractor: extracted value ([id1_0_0_] : [BIGINT]) - [64]
2020-11-25 19:48:34,563 TRACE  [main] BasicExtractor: extracted value ([id1_0_1_] : [BIGINT]) - [65]
2020-11-25 19:48:34,564 TRACE  [main] BasicExtractor: extracted value ([binary_v2_0_1_] : [BLOB]) - [null]
2020-11-25 19:48:34,564 TRACE  [main] BasicExtractor: extracted value ([float_va3_0_1_] : [DOUBLE]) - [54.598150033144236]
2020-11-25 19:48:34,564 TRACE  [main] BasicExtractor: extracted value ([i4_0_1_] : [INTEGER]) - [0]
2020-11-25 19:48:34,564 TRACE  [main] BasicExtractor: extracted value ([is_condi5_0_1_] : [BOOLEAN]) - [true]
2020-11-25 19:48:34,564 TRACE  [main] BasicExtractor: extracted value ([j6_0_1_] : [INTEGER]) - [4]
2020-11-25 19:48:34,564 TRACE  [main] BasicExtractor: extracted value ([problem_7_0_1_] : [BIGINT]) - [11]
2020-11-25 19:48:34,565 TRACE  [main] BasicExtractor: extracted value ([problem_7_0_0_] : [BIGINT]) - [11]
2020-11-25 19:48:34,565 TRACE  [main] BasicExtractor: extracted value ([id1_0_0_] : [BIGINT]) - [65]
2020-11-25 19:48:34,565 TRACE  [main] BasicExtractor: extracted value ([id1_0_1_] : [BIGINT]) - [66]
2020-11-25 19:48:34,565 TRACE  [main] BasicExtractor: extracted value ([binary_v2_0_1_] : [BLOB]) - [null]
2020-11-25 19:48:34,565 TRACE  [main] BasicExtractor: extracted value ([float_va3_0_1_] : [DOUBLE]) - [148.4131591025766]
2020-11-25 19:48:34,565 TRACE  [main] BasicExtractor: extracted value ([i4_0_1_] : [INTEGER]) - [0]
2020-11-25 19:48:34,565 TRACE  [main] BasicExtractor: extracted value ([is_condi5_0_1_] : [BOOLEAN]) - [true]
2020-11-25 19:48:34,566 TRACE  [main] BasicExtractor: extracted value ([j6_0_1_] : [INTEGER]) - [5]
2020-11-25 19:48:34,566 TRACE  [main] BasicExtractor: extracted value ([problem_7_0_1_] : [BIGINT]) - [11]
2020-11-25 19:48:34,566 TRACE  [main] BasicExtractor: extracted value ([problem_7_0_0_] : [BIGINT]) - [11]
2020-11-25 19:48:34,566 TRACE  [main] BasicExtractor: extracted value ([id1_0_0_] : [BIGINT]) - [66]
2020-11-25 19:48:34,575 TRACE  [main] BasicBinder: binding parameter [1] as [BIGINT] - [11]
2020-11-25 19:48:34,578 TRACE  [main] BasicExtractor: extracted value ([id1_0_0_] : [BIGINT]) - [61]
2020-11-25 19:48:34,578 TRACE  [main] BasicExtractor: extracted value ([binary_v2_0_0_] : [BLOB]) - [null]
2020-11-25 19:48:34,578 TRACE  [main] BasicExtractor: extracted value ([float_va3_0_0_] : [DOUBLE]) - [1.0]
2020-11-25 19:48:34,578 TRACE  [main] BasicExtractor: extracted value ([i4_0_0_] : [INTEGER]) - [0]
2020-11-25 19:48:34,578 TRACE  [main] BasicExtractor: extracted value ([is_condi5_0_0_] : [BOOLEAN]) - [true]
2020-11-25 19:48:34,579 TRACE  [main] BasicExtractor: extracted value ([j6_0_0_] : [INTEGER]) - [0]
2020-11-25 19:48:34,579 TRACE  [main] BasicExtractor: extracted value ([problem_7_0_0_] : [BIGINT]) - [11]
2020-11-25 19:48:34,579 TRACE  [main] BasicExtractor: extracted value ([descript2_1_1_] : [BLOB]) - [[112, 114, 111, 98, 108, 101, 109, 100, 101, 115, 99, 114, 105, 112, 116, 105, 111, 110]]
2020-11-25 19:48:34,579 TRACE  [main] BasicExtractor: extracted value ([is_solve3_1_1_] : [BOOLEAN]) - [null]
2020-11-25 19:48:34,600 TRACE  [main] BasicExtractor: extracted value ([kind4_1_1_] : [VARCHAR]) - [POLYNOMIAL]
2020-11-25 19:48:34,601 TRACE  [main] BasicExtractor: extracted value ([matrix_d5_1_1_] : [INTEGER]) - [1]
2020-11-25 19:48:34,601 TRACE  [main] BasicExtractor: extracted value ([parent_p7_1_1_] : [BIGINT]) - [null]
2020-11-25 19:48:34,601 TRACE  [main] BasicExtractor: extracted value ([problem_6_1_1_] : [INTEGER]) - [22]
2020-11-25 19:48:34,601 TRACE  [main] BasicExtractor: extracted value ([problem_7_0_3_] : [BIGINT]) - [11]
2020-11-25 19:48:34,602 TRACE  [main] BasicExtractor: extracted value ([id1_0_3_] : [BIGINT]) - [61]
2020-11-25 19:48:34,602 TRACE  [main] BasicExtractor: extracted value ([id1_0_0_] : [BIGINT]) - [62]
2020-11-25 19:48:34,602 TRACE  [main] BasicExtractor: extracted value ([binary_v2_0_0_] : [BLOB]) - [null]
2020-11-25 19:48:34,602 TRACE  [main] BasicExtractor: extracted value ([float_va3_0_0_] : [DOUBLE]) - [2.718281828459045]
2020-11-25 19:48:34,603 TRACE  [main] BasicExtractor: extracted value ([i4_0_0_] : [INTEGER]) - [0]
2020-11-25 19:48:34,603 TRACE  [main] BasicExtractor: extracted value ([is_condi5_0_0_] : [BOOLEAN]) - [true]
2020-11-25 19:48:34,603 TRACE  [main] BasicExtractor: extracted value ([j6_0_0_] : [INTEGER]) - [1]
2020-11-25 19:48:34,603 TRACE  [main] BasicExtractor: extracted value ([problem_7_0_0_] : [BIGINT]) - [11]
2020-11-25 19:48:34,603 TRACE  [main] BasicExtractor: extracted value ([problem_7_0_3_] : [BIGINT]) - [11]
2020-11-25 19:48:34,604 TRACE  [main] BasicExtractor: extracted value ([id1_0_3_] : [BIGINT]) - [62]
2020-11-25 19:48:34,604 TRACE  [main] BasicExtractor: extracted value ([id1_0_0_] : [BIGINT]) - [63]
2020-11-25 19:48:34,604 TRACE  [main] BasicExtractor: extracted value ([binary_v2_0_0_] : [BLOB]) - [null]
2020-11-25 19:48:34,604 TRACE  [main] BasicExtractor: extracted value ([float_va3_0_0_] : [DOUBLE]) - [7.38905609893065]
2020-11-25 19:48:34,604 TRACE  [main] BasicExtractor: extracted value ([i4_0_0_] : [INTEGER]) - [0]
2020-11-25 19:48:34,605 TRACE  [main] BasicExtractor: extracted value ([is_condi5_0_0_] : [BOOLEAN]) - [true]
2020-11-25 19:48:34,605 TRACE  [main] BasicExtractor: extracted value ([j6_0_0_] : [INTEGER]) - [2]
2020-11-25 19:48:34,605 TRACE  [main] BasicExtractor: extracted value ([problem_7_0_0_] : [BIGINT]) - [11]
2020-11-25 19:48:34,605 TRACE  [main] BasicExtractor: extracted value ([problem_7_0_3_] : [BIGINT]) - [11]
2020-11-25 19:48:34,605 TRACE  [main] BasicExtractor: extracted value ([id1_0_3_] : [BIGINT]) - [63]
2020-11-25 19:48:34,605 TRACE  [main] BasicExtractor: extracted value ([id1_0_0_] : [BIGINT]) - [64]
2020-11-25 19:48:34,606 TRACE  [main] BasicExtractor: extracted value ([binary_v2_0_0_] : [BLOB]) - [null]
2020-11-25 19:48:34,607 TRACE  [main] BasicExtractor: extracted value ([float_va3_0_0_] : [DOUBLE]) - [20.085536923187668]
2020-11-25 19:48:34,607 TRACE  [main] BasicExtractor: extracted value ([i4_0_0_] : [INTEGER]) - [0]
2020-11-25 19:48:34,608 TRACE  [main] BasicExtractor: extracted value ([is_condi5_0_0_] : [BOOLEAN]) - [true]
2020-11-25 19:48:34,609 TRACE  [main] BasicExtractor: extracted value ([j6_0_0_] : [INTEGER]) - [3]
2020-11-25 19:48:34,609 TRACE  [main] BasicExtractor: extracted value ([problem_7_0_0_] : [BIGINT]) - [11]
2020-11-25 19:48:34,609 TRACE  [main] BasicExtractor: extracted value ([problem_7_0_3_] : [BIGINT]) - [11]
2020-11-25 19:48:34,609 TRACE  [main] BasicExtractor: extracted value ([id1_0_3_] : [BIGINT]) - [64]
2020-11-25 19:48:34,609 TRACE  [main] BasicExtractor: extracted value ([id1_0_0_] : [BIGINT]) - [65]
2020-11-25 19:48:34,610 TRACE  [main] BasicExtractor: extracted value ([binary_v2_0_0_] : [BLOB]) - [null]
2020-11-25 19:48:34,610 TRACE  [main] BasicExtractor: extracted value ([float_va3_0_0_] : [DOUBLE]) - [54.598150033144236]
2020-11-25 19:48:34,610 TRACE  [main] BasicExtractor: extracted value ([i4_0_0_] : [INTEGER]) - [0]
2020-11-25 19:48:34,611 TRACE  [main] BasicExtractor: extracted value ([is_condi5_0_0_] : [BOOLEAN]) - [true]
2020-11-25 19:48:34,611 TRACE  [main] BasicExtractor: extracted value ([j6_0_0_] : [INTEGER]) - [4]
2020-11-25 19:48:34,611 TRACE  [main] BasicExtractor: extracted value ([problem_7_0_0_] : [BIGINT]) - [11]
2020-11-25 19:48:34,612 TRACE  [main] BasicExtractor: extracted value ([problem_7_0_3_] : [BIGINT]) - [11]
2020-11-25 19:48:34,612 TRACE  [main] BasicExtractor: extracted value ([id1_0_3_] : [BIGINT]) - [65]
2020-11-25 19:48:34,612 TRACE  [main] BasicExtractor: extracted value ([id1_0_0_] : [BIGINT]) - [66]
2020-11-25 19:48:34,612 TRACE  [main] BasicExtractor: extracted value ([binary_v2_0_0_] : [BLOB]) - [null]
2020-11-25 19:48:34,613 TRACE  [main] BasicExtractor: extracted value ([float_va3_0_0_] : [DOUBLE]) - [148.4131591025766]
2020-11-25 19:48:34,613 TRACE  [main] BasicExtractor: extracted value ([i4_0_0_] : [INTEGER]) - [0]
2020-11-25 19:48:34,613 TRACE  [main] BasicExtractor: extracted value ([is_condi5_0_0_] : [BOOLEAN]) - [true]
2020-11-25 19:48:34,613 TRACE  [main] BasicExtractor: extracted value ([j6_0_0_] : [INTEGER]) - [5]
2020-11-25 19:48:34,614 TRACE  [main] BasicExtractor: extracted value ([problem_7_0_0_] : [BIGINT]) - [11]
2020-11-25 19:48:34,614 TRACE  [main] BasicExtractor: extracted value ([problem_7_0_3_] : [BIGINT]) - [11]
2020-11-25 19:48:34,614 TRACE  [main] BasicExtractor: extracted value ([id1_0_3_] : [BIGINT]) - [66]
2020-11-25 19:48:34,615 TRACE  [main] CollectionType: Created collection wrapper: [com.sf.back.entities.Problem.children#11]
2020-11-25 19:48:34,620 TRACE  [main] BasicBinder: binding parameter [1] as [BIGINT] - [11]
2020-11-25 19:48:34,623 TRACE  [main] BasicBinder: binding parameter [1] as [BLOB] - [null]
2020-11-25 19:48:34,623 TRACE  [main] BasicBinder: binding parameter [2] as [DOUBLE] - [2.0]
2020-11-25 19:48:34,624 TRACE  [main] BasicBinder: binding parameter [3] as [INTEGER] - [0]
2020-11-25 19:48:34,624 TRACE  [main] BasicBinder: binding parameter [4] as [BOOLEAN] - [true]
2020-11-25 19:48:34,624 TRACE  [main] BasicBinder: binding parameter [5] as [INTEGER] - [0]
2020-11-25 19:48:34,625 TRACE  [main] BasicBinder: binding parameter [6] as [BIGINT] - [11]
2020-11-25 19:48:34,625 TRACE  [main] BasicBinder: binding parameter [7] as [BIGINT] - [61]
2020-11-25 19:48:34,627 TRACE  [main] BasicBinder: binding parameter [1] as [BLOB] - [[100, 101, 115, 99, 114, 105, 112, 116, 105, 111, 110, 112, 114, 111, 98, 108, 101, 109]]
2020-11-25 19:48:34,628 TRACE  [main] BasicBinder: binding parameter [2] as [BOOLEAN] - [null]
2020-11-25 19:48:34,628 TRACE  [main] BasicBinder: binding parameter [3] as [VARCHAR] - [POLYNOMIAL]
2020-11-25 19:48:34,628 TRACE  [main] BasicBinder: binding parameter [4] as [INTEGER] - [1]
2020-11-25 19:48:34,628 TRACE  [main] BasicBinder: binding parameter [5] as [BIGINT] - [null]
2020-11-25 19:48:34,628 TRACE  [main] BasicBinder: binding parameter [6] as [INTEGER] - [22]
2020-11-25 19:48:34,629 TRACE  [main] BasicBinder: binding parameter [7] as [BIGINT] - [11]
2020-11-25 19:48:34,645 TRACE  [main] BasicBinder: binding parameter [1] as [BIGINT] - [12]
2020-11-25 19:48:34,646 TRACE  [main] BasicExtractor: extracted value ([id1_1_2_] : [BIGINT]) - [null]
2020-11-25 19:48:34,646 TRACE  [main] BasicExtractor: extracted value ([id1_0_4_] : [BIGINT]) - [null]
2020-11-25 19:48:34,646 TRACE  [main] BasicExtractor: extracted value ([descript2_1_0_] : [BLOB]) - [[112, 114, 111, 98, 108, 101, 109, 100, 101, 115, 99, 114, 105, 112, 116, 105, 111, 110]]
2020-11-25 19:48:34,646 TRACE  [main] BasicExtractor: extracted value ([is_solve3_1_0_] : [BOOLEAN]) - [null]
2020-11-25 19:48:34,647 TRACE  [main] BasicExtractor: extracted value ([kind4_1_0_] : [VARCHAR]) - [POLYNOMIAL]
2020-11-25 19:48:34,647 TRACE  [main] BasicExtractor: extracted value ([matrix_d5_1_0_] : [INTEGER]) - [1]
2020-11-25 19:48:34,647 TRACE  [main] BasicExtractor: extracted value ([parent_p7_1_0_] : [BIGINT]) - [null]
2020-11-25 19:48:34,647 TRACE  [main] BasicExtractor: extracted value ([problem_6_1_0_] : [INTEGER]) - [22]
2020-11-25 19:48:34,647 TRACE  [main] BasicExtractor: extracted value ([problem_7_0_3_] : [BIGINT]) - [null]
2020-11-25 19:48:34,648 TRACE  [main] BasicExtractor: extracted value ([parent_p7_1_1_] : [BIGINT]) - [null]
2020-11-25 19:48:34,649 TRACE  [main] CollectionType: Created collection wrapper: [com.sf.back.entities.Problem.matrixes#12]
2020-11-25 19:48:34,649 TRACE  [main] BasicBinder: binding parameter [1] as [BIGINT] - [12]
2020-11-25 19:48:34,650 TRACE  [main] BasicExtractor: extracted value ([id1_0_1_] : [BIGINT]) - [67]
2020-11-25 19:48:34,650 TRACE  [main] BasicExtractor: extracted value ([binary_v2_0_1_] : [BLOB]) - [null]
2020-11-25 19:48:34,650 TRACE  [main] BasicExtractor: extracted value ([float_va3_0_1_] : [DOUBLE]) - [1.0]
2020-11-25 19:48:34,650 TRACE  [main] BasicExtractor: extracted value ([i4_0_1_] : [INTEGER]) - [0]
2020-11-25 19:48:34,650 TRACE  [main] BasicExtractor: extracted value ([is_condi5_0_1_] : [BOOLEAN]) - [true]
2020-11-25 19:48:34,650 TRACE  [main] BasicExtractor: extracted value ([j6_0_1_] : [INTEGER]) - [0]
2020-11-25 19:48:34,650 TRACE  [main] BasicExtractor: extracted value ([problem_7_0_1_] : [BIGINT]) - [12]
2020-11-25 19:48:34,650 TRACE  [main] BasicExtractor: extracted value ([problem_7_0_0_] : [BIGINT]) - [12]
2020-11-25 19:48:34,651 TRACE  [main] BasicExtractor: extracted value ([id1_0_0_] : [BIGINT]) - [67]
2020-11-25 19:48:34,651 TRACE  [main] BasicExtractor: extracted value ([id1_0_1_] : [BIGINT]) - [68]
2020-11-25 19:48:34,651 TRACE  [main] BasicExtractor: extracted value ([binary_v2_0_1_] : [BLOB]) - [null]
2020-11-25 19:48:34,651 TRACE  [main] BasicExtractor: extracted value ([float_va3_0_1_] : [DOUBLE]) - [2.718281828459045]
2020-11-25 19:48:34,651 TRACE  [main] BasicExtractor: extracted value ([i4_0_1_] : [INTEGER]) - [0]
2020-11-25 19:48:34,651 TRACE  [main] BasicExtractor: extracted value ([is_condi5_0_1_] : [BOOLEAN]) - [true]
2020-11-25 19:48:34,651 TRACE  [main] BasicExtractor: extracted value ([j6_0_1_] : [INTEGER]) - [1]
2020-11-25 19:48:34,651 TRACE  [main] BasicExtractor: extracted value ([problem_7_0_1_] : [BIGINT]) - [12]
2020-11-25 19:48:34,652 TRACE  [main] BasicExtractor: extracted value ([problem_7_0_0_] : [BIGINT]) - [12]
2020-11-25 19:48:34,652 TRACE  [main] BasicExtractor: extracted value ([id1_0_0_] : [BIGINT]) - [68]
2020-11-25 19:48:34,653 TRACE  [main] BasicExtractor: extracted value ([id1_0_1_] : [BIGINT]) - [69]
2020-11-25 19:48:34,653 TRACE  [main] BasicExtractor: extracted value ([binary_v2_0_1_] : [BLOB]) - [null]
2020-11-25 19:48:34,653 TRACE  [main] BasicExtractor: extracted value ([float_va3_0_1_] : [DOUBLE]) - [7.38905609893065]
2020-11-25 19:48:34,653 TRACE  [main] BasicExtractor: extracted value ([i4_0_1_] : [INTEGER]) - [0]
2020-11-25 19:48:34,653 TRACE  [main] BasicExtractor: extracted value ([is_condi5_0_1_] : [BOOLEAN]) - [true]
2020-11-25 19:48:34,653 TRACE  [main] BasicExtractor: extracted value ([j6_0_1_] : [INTEGER]) - [2]
2020-11-25 19:48:34,653 TRACE  [main] BasicExtractor: extracted value ([problem_7_0_1_] : [BIGINT]) - [12]
2020-11-25 19:48:34,654 TRACE  [main] BasicExtractor: extracted value ([problem_7_0_0_] : [BIGINT]) - [12]
2020-11-25 19:48:34,654 TRACE  [main] BasicExtractor: extracted value ([id1_0_0_] : [BIGINT]) - [69]
2020-11-25 19:48:34,654 TRACE  [main] BasicExtractor: extracted value ([id1_0_1_] : [BIGINT]) - [70]
2020-11-25 19:48:34,654 TRACE  [main] BasicExtractor: extracted value ([binary_v2_0_1_] : [BLOB]) - [null]
2020-11-25 19:48:34,654 TRACE  [main] BasicExtractor: extracted value ([float_va3_0_1_] : [DOUBLE]) - [20.085536923187668]
2020-11-25 19:48:34,654 TRACE  [main] BasicExtractor: extracted value ([i4_0_1_] : [INTEGER]) - [0]
2020-11-25 19:48:34,674 TRACE  [main] BasicExtractor: extracted value ([is_condi5_0_1_] : [BOOLEAN]) - [true]
2020-11-25 19:48:34,675 TRACE  [main] BasicExtractor: extracted value ([j6_0_1_] : [INTEGER]) - [3]
2020-11-25 19:48:34,675 TRACE  [main] BasicExtractor: extracted value ([problem_7_0_1_] : [BIGINT]) - [12]
2020-11-25 19:48:34,675 TRACE  [main] BasicExtractor: extracted value ([problem_7_0_0_] : [BIGINT]) - [12]
2020-11-25 19:48:34,675 TRACE  [main] BasicExtractor: extracted value ([id1_0_0_] : [BIGINT]) - [70]
2020-11-25 19:48:34,675 TRACE  [main] BasicExtractor: extracted value ([id1_0_1_] : [BIGINT]) - [71]
2020-11-25 19:48:34,676 TRACE  [main] BasicExtractor: extracted value ([binary_v2_0_1_] : [BLOB]) - [null]
2020-11-25 19:48:34,676 TRACE  [main] BasicExtractor: extracted value ([float_va3_0_1_] : [DOUBLE]) - [54.598150033144236]
2020-11-25 19:48:34,677 TRACE  [main] BasicExtractor: extracted value ([i4_0_1_] : [INTEGER]) - [0]
2020-11-25 19:48:34,677 TRACE  [main] BasicExtractor: extracted value ([is_condi5_0_1_] : [BOOLEAN]) - [true]
2020-11-25 19:48:34,677 TRACE  [main] BasicExtractor: extracted value ([j6_0_1_] : [INTEGER]) - [4]
2020-11-25 19:48:34,677 TRACE  [main] BasicExtractor: extracted value ([problem_7_0_1_] : [BIGINT]) - [12]
2020-11-25 19:48:34,677 TRACE  [main] BasicExtractor: extracted value ([problem_7_0_0_] : [BIGINT]) - [12]
2020-11-25 19:48:34,678 TRACE  [main] BasicExtractor: extracted value ([id1_0_0_] : [BIGINT]) - [71]
2020-11-25 19:48:34,678 TRACE  [main] BasicExtractor: extracted value ([id1_0_1_] : [BIGINT]) - [72]
2020-11-25 19:48:34,678 TRACE  [main] BasicExtractor: extracted value ([binary_v2_0_1_] : [BLOB]) - [null]
2020-11-25 19:48:34,678 TRACE  [main] BasicExtractor: extracted value ([float_va3_0_1_] : [DOUBLE]) - [148.4131591025766]
2020-11-25 19:48:34,678 TRACE  [main] BasicExtractor: extracted value ([i4_0_1_] : [INTEGER]) - [0]
2020-11-25 19:48:34,679 TRACE  [main] BasicExtractor: extracted value ([is_condi5_0_1_] : [BOOLEAN]) - [true]
2020-11-25 19:48:34,679 TRACE  [main] BasicExtractor: extracted value ([j6_0_1_] : [INTEGER]) - [5]
2020-11-25 19:48:34,679 TRACE  [main] BasicExtractor: extracted value ([problem_7_0_1_] : [BIGINT]) - [12]
2020-11-25 19:48:34,679 TRACE  [main] BasicExtractor: extracted value ([problem_7_0_0_] : [BIGINT]) - [12]
2020-11-25 19:48:34,679 TRACE  [main] BasicExtractor: extracted value ([id1_0_0_] : [BIGINT]) - [72]
2020-11-25 19:48:34,683 TRACE  [main] BasicBinder: binding parameter [1] as [BIGINT] - [12]
2020-11-25 19:48:34,684 TRACE  [main] BasicExtractor: extracted value ([id1_1_2_] : [BIGINT]) - [null]
2020-11-25 19:48:34,684 TRACE  [main] BasicExtractor: extracted value ([id1_0_4_] : [BIGINT]) - [null]
2020-11-25 19:48:34,684 TRACE  [main] BasicExtractor: extracted value ([descript2_1_0_] : [BLOB]) - [[112, 114, 111, 98, 108, 101, 109, 100, 101, 115, 99, 114, 105, 112, 116, 105, 111, 110]]
2020-11-25 19:48:34,684 TRACE  [main] BasicExtractor: extracted value ([is_solve3_1_0_] : [BOOLEAN]) - [null]
2020-11-25 19:48:34,685 TRACE  [main] BasicExtractor: extracted value ([kind4_1_0_] : [VARCHAR]) - [POLYNOMIAL]
2020-11-25 19:48:34,685 TRACE  [main] BasicExtractor: extracted value ([matrix_d5_1_0_] : [INTEGER]) - [1]
2020-11-25 19:48:34,685 TRACE  [main] BasicExtractor: extracted value ([parent_p7_1_0_] : [BIGINT]) - [null]
2020-11-25 19:48:34,685 TRACE  [main] BasicExtractor: extracted value ([problem_6_1_0_] : [INTEGER]) - [22]
2020-11-25 19:48:34,685 TRACE  [main] BasicExtractor: extracted value ([problem_7_0_3_] : [BIGINT]) - [null]
2020-11-25 19:48:34,685 TRACE  [main] BasicExtractor: extracted value ([parent_p7_1_1_] : [BIGINT]) - [null]
2020-11-25 19:48:34,686 TRACE  [main] CollectionType: Created collection wrapper: [com.sf.back.entities.Problem.matrixes#12]
2020-11-25 19:48:34,687 TRACE  [main] BasicBinder: binding parameter [1] as [BIGINT] - [12]
2020-11-25 19:48:34,688 TRACE  [main] BasicExtractor: extracted value ([id1_0_1_] : [BIGINT]) - [67]
2020-11-25 19:48:34,689 TRACE  [main] BasicExtractor: extracted value ([binary_v2_0_1_] : [BLOB]) - [null]
2020-11-25 19:48:34,689 TRACE  [main] BasicExtractor: extracted value ([float_va3_0_1_] : [DOUBLE]) - [1.0]
2020-11-25 19:48:34,690 TRACE  [main] BasicExtractor: extracted value ([i4_0_1_] : [INTEGER]) - [0]
2020-11-25 19:48:34,690 TRACE  [main] BasicExtractor: extracted value ([is_condi5_0_1_] : [BOOLEAN]) - [true]
2020-11-25 19:48:34,690 TRACE  [main] BasicExtractor: extracted value ([j6_0_1_] : [INTEGER]) - [0]
2020-11-25 19:48:34,690 TRACE  [main] BasicExtractor: extracted value ([problem_7_0_1_] : [BIGINT]) - [12]
2020-11-25 19:48:34,691 TRACE  [main] BasicExtractor: extracted value ([problem_7_0_0_] : [BIGINT]) - [12]
2020-11-25 19:48:34,692 TRACE  [main] BasicExtractor: extracted value ([id1_0_0_] : [BIGINT]) - [67]
2020-11-25 19:48:34,692 TRACE  [main] BasicExtractor: extracted value ([id1_0_1_] : [BIGINT]) - [68]
2020-11-25 19:48:34,693 TRACE  [main] BasicExtractor: extracted value ([binary_v2_0_1_] : [BLOB]) - [null]
2020-11-25 19:48:34,693 TRACE  [main] BasicExtractor: extracted value ([float_va3_0_1_] : [DOUBLE]) - [2.718281828459045]
2020-11-25 19:48:34,693 TRACE  [main] BasicExtractor: extracted value ([i4_0_1_] : [INTEGER]) - [0]
2020-11-25 19:48:34,694 TRACE  [main] BasicExtractor: extracted value ([is_condi5_0_1_] : [BOOLEAN]) - [true]
2020-11-25 19:48:34,694 TRACE  [main] BasicExtractor: extracted value ([j6_0_1_] : [INTEGER]) - [1]
2020-11-25 19:48:34,694 TRACE  [main] BasicExtractor: extracted value ([problem_7_0_1_] : [BIGINT]) - [12]
2020-11-25 19:48:34,694 TRACE  [main] BasicExtractor: extracted value ([problem_7_0_0_] : [BIGINT]) - [12]
2020-11-25 19:48:34,695 TRACE  [main] BasicExtractor: extracted value ([id1_0_0_] : [BIGINT]) - [68]
2020-11-25 19:48:34,695 TRACE  [main] BasicExtractor: extracted value ([id1_0_1_] : [BIGINT]) - [69]
2020-11-25 19:48:34,695 TRACE  [main] BasicExtractor: extracted value ([binary_v2_0_1_] : [BLOB]) - [null]
2020-11-25 19:48:34,695 TRACE  [main] BasicExtractor: extracted value ([float_va3_0_1_] : [DOUBLE]) - [7.38905609893065]
2020-11-25 19:48:34,696 TRACE  [main] BasicExtractor: extracted value ([i4_0_1_] : [INTEGER]) - [0]
2020-11-25 19:48:34,696 TRACE  [main] BasicExtractor: extracted value ([is_condi5_0_1_] : [BOOLEAN]) - [true]
2020-11-25 19:48:34,696 TRACE  [main] BasicExtractor: extracted value ([j6_0_1_] : [INTEGER]) - [2]
2020-11-25 19:48:34,696 TRACE  [main] BasicExtractor: extracted value ([problem_7_0_1_] : [BIGINT]) - [12]
2020-11-25 19:48:34,696 TRACE  [main] BasicExtractor: extracted value ([problem_7_0_0_] : [BIGINT]) - [12]
2020-11-25 19:48:34,696 TRACE  [main] BasicExtractor: extracted value ([id1_0_0_] : [BIGINT]) - [69]
2020-11-25 19:48:34,696 TRACE  [main] BasicExtractor: extracted value ([id1_0_1_] : [BIGINT]) - [70]
2020-11-25 19:48:34,697 TRACE  [main] BasicExtractor: extracted value ([binary_v2_0_1_] : [BLOB]) - [null]
2020-11-25 19:48:34,697 TRACE  [main] BasicExtractor: extracted value ([float_va3_0_1_] : [DOUBLE]) - [20.085536923187668]
2020-11-25 19:48:34,697 TRACE  [main] BasicExtractor: extracted value ([i4_0_1_] : [INTEGER]) - [0]
2020-11-25 19:48:34,698 TRACE  [main] BasicExtractor: extracted value ([is_condi5_0_1_] : [BOOLEAN]) - [true]
2020-11-25 19:48:34,698 TRACE  [main] BasicExtractor: extracted value ([j6_0_1_] : [INTEGER]) - [3]
2020-11-25 19:48:34,698 TRACE  [main] BasicExtractor: extracted value ([problem_7_0_1_] : [BIGINT]) - [12]
2020-11-25 19:48:34,698 TRACE  [main] BasicExtractor: extracted value ([problem_7_0_0_] : [BIGINT]) - [12]
2020-11-25 19:48:34,698 TRACE  [main] BasicExtractor: extracted value ([id1_0_0_] : [BIGINT]) - [70]
2020-11-25 19:48:34,698 TRACE  [main] BasicExtractor: extracted value ([id1_0_1_] : [BIGINT]) - [71]
2020-11-25 19:48:34,699 TRACE  [main] BasicExtractor: extracted value ([binary_v2_0_1_] : [BLOB]) - [null]
2020-11-25 19:48:34,699 TRACE  [main] BasicExtractor: extracted value ([float_va3_0_1_] : [DOUBLE]) - [54.598150033144236]
2020-11-25 19:48:34,699 TRACE  [main] BasicExtractor: extracted value ([i4_0_1_] : [INTEGER]) - [0]
2020-11-25 19:48:34,700 TRACE  [main] BasicExtractor: extracted value ([is_condi5_0_1_] : [BOOLEAN]) - [true]
2020-11-25 19:48:34,700 TRACE  [main] BasicExtractor: extracted value ([j6_0_1_] : [INTEGER]) - [4]
2020-11-25 19:48:34,700 TRACE  [main] BasicExtractor: extracted value ([problem_7_0_1_] : [BIGINT]) - [12]
2020-11-25 19:48:34,701 TRACE  [main] BasicExtractor: extracted value ([problem_7_0_0_] : [BIGINT]) - [12]
2020-11-25 19:48:34,701 TRACE  [main] BasicExtractor: extracted value ([id1_0_0_] : [BIGINT]) - [71]
2020-11-25 19:48:34,701 TRACE  [main] BasicExtractor: extracted value ([id1_0_1_] : [BIGINT]) - [72]
2020-11-25 19:48:34,702 TRACE  [main] BasicExtractor: extracted value ([binary_v2_0_1_] : [BLOB]) - [null]
2020-11-25 19:48:34,702 TRACE  [main] BasicExtractor: extracted value ([float_va3_0_1_] : [DOUBLE]) - [148.4131591025766]
2020-11-25 19:48:34,702 TRACE  [main] BasicExtractor: extracted value ([i4_0_1_] : [INTEGER]) - [0]
2020-11-25 19:48:34,702 TRACE  [main] BasicExtractor: extracted value ([is_condi5_0_1_] : [BOOLEAN]) - [true]
2020-11-25 19:48:34,702 TRACE  [main] BasicExtractor: extracted value ([j6_0_1_] : [INTEGER]) - [5]
2020-11-25 19:48:34,702 TRACE  [main] BasicExtractor: extracted value ([problem_7_0_1_] : [BIGINT]) - [12]
2020-11-25 19:48:34,703 TRACE  [main] BasicExtractor: extracted value ([problem_7_0_0_] : [BIGINT]) - [12]
2020-11-25 19:48:34,703 TRACE  [main] BasicExtractor: extracted value ([id1_0_0_] : [BIGINT]) - [72]
2020-11-25 19:48:34,723 TRACE  [main] BasicBinder: binding parameter [1] as [BIGINT] - [67]
2020-11-25 19:48:34,727 TRACE  [main] BasicBinder: binding parameter [1] as [BIGINT] - [68]
2020-11-25 19:48:34,727 TRACE  [main] BasicBinder: binding parameter [1] as [BIGINT] - [69]
2020-11-25 19:48:34,730 TRACE  [main] BasicBinder: binding parameter [1] as [BIGINT] - [70]
2020-11-25 19:48:34,732 TRACE  [main] BasicBinder: binding parameter [1] as [BIGINT] - [71]
2020-11-25 19:48:34,732 TRACE  [main] BasicBinder: binding parameter [1] as [BIGINT] - [72]
2020-11-25 19:48:34,733 TRACE  [main] BasicBinder: binding parameter [1] as [BIGINT] - [12]
2020-11-25 19:48:34,735 TRACE  [main] BasicBinder: binding parameter [1] as [BIGINT] - [12]
2020-11-25 19:48:34,736 WARN   [main] ProblemService: Problem with 12 is not found
2020-11-25 19:48:36,276 DEBUG  [main] BasicTypeRegistry: Adding type registration boolean -> org.hibernate.type.BooleanType@6babffb5
2020-11-25 19:48:36,276 DEBUG  [main] BasicTypeRegistry: Adding type registration boolean -> org.hibernate.type.BooleanType@6babffb5
2020-11-25 19:48:36,276 DEBUG  [main] BasicTypeRegistry: Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@6babffb5
2020-11-25 19:48:36,277 DEBUG  [main] BasicTypeRegistry: Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@162c1dfb
2020-11-25 19:48:36,277 DEBUG  [main] BasicTypeRegistry: Adding type registration true_false -> org.hibernate.type.TrueFalseType@576b7c74
2020-11-25 19:48:36,277 DEBUG  [main] BasicTypeRegistry: Adding type registration yes_no -> org.hibernate.type.YesNoType@7698b7a4
2020-11-25 19:48:36,277 DEBUG  [main] BasicTypeRegistry: Adding type registration byte -> org.hibernate.type.ByteType@3fbe503c
2020-11-25 19:48:36,277 DEBUG  [main] BasicTypeRegistry: Adding type registration byte -> org.hibernate.type.ByteType@3fbe503c
2020-11-25 19:48:36,277 DEBUG  [main] BasicTypeRegistry: Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@3fbe503c
2020-11-25 19:48:36,277 DEBUG  [main] BasicTypeRegistry: Adding type registration character -> org.hibernate.type.CharacterType@52454457
2020-11-25 19:48:36,277 DEBUG  [main] BasicTypeRegistry: Adding type registration char -> org.hibernate.type.CharacterType@52454457
2020-11-25 19:48:36,277 DEBUG  [main] BasicTypeRegistry: Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@52454457
2020-11-25 19:48:36,278 DEBUG  [main] BasicTypeRegistry: Adding type registration short -> org.hibernate.type.ShortType@24043ec5
2020-11-25 19:48:36,278 DEBUG  [main] BasicTypeRegistry: Adding type registration short -> org.hibernate.type.ShortType@24043ec5
2020-11-25 19:48:36,279 DEBUG  [main] BasicTypeRegistry: Adding type registration java.lang.Short -> org.hibernate.type.ShortType@24043ec5
2020-11-25 19:48:36,279 DEBUG  [main] BasicTypeRegistry: Adding type registration integer -> org.hibernate.type.IntegerType@1ca3d25b
2020-11-25 19:48:36,279 DEBUG  [main] BasicTypeRegistry: Adding type registration int -> org.hibernate.type.IntegerType@1ca3d25b
2020-11-25 19:48:36,280 DEBUG  [main] BasicTypeRegistry: Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@1ca3d25b
2020-11-25 19:48:36,280 DEBUG  [main] BasicTypeRegistry: Adding type registration long -> org.hibernate.type.LongType@7bbfc5ff
2020-11-25 19:48:36,280 DEBUG  [main] BasicTypeRegistry: Adding type registration long -> org.hibernate.type.LongType@7bbfc5ff
2020-11-25 19:48:36,281 DEBUG  [main] BasicTypeRegistry: Adding type registration java.lang.Long -> org.hibernate.type.LongType@7bbfc5ff
2020-11-25 19:48:36,281 DEBUG  [main] BasicTypeRegistry: Adding type registration float -> org.hibernate.type.FloatType@5f8d9767
2020-11-25 19:48:36,282 DEBUG  [main] BasicTypeRegistry: Adding type registration float -> org.hibernate.type.FloatType@5f8d9767
2020-11-25 19:48:36,282 DEBUG  [main] BasicTypeRegistry: Adding type registration java.lang.Float -> org.hibernate.type.FloatType@5f8d9767
2020-11-25 19:48:36,282 DEBUG  [main] BasicTypeRegistry: Adding type registration double -> org.hibernate.type.DoubleType@1980a3f
2020-11-25 19:48:36,283 DEBUG  [main] BasicTypeRegistry: Adding type registration double -> org.hibernate.type.DoubleType@1980a3f
2020-11-25 19:48:36,283 DEBUG  [main] BasicTypeRegistry: Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@1980a3f
2020-11-25 19:48:36,283 DEBUG  [main] BasicTypeRegistry: Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@6f5d0190
2020-11-25 19:48:36,283 DEBUG  [main] BasicTypeRegistry: Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@6f5d0190
2020-11-25 19:48:36,283 DEBUG  [main] BasicTypeRegistry: Adding type registration big_integer -> org.hibernate.type.BigIntegerType@1e5eb20a
2020-11-25 19:48:36,284 DEBUG  [main] BasicTypeRegistry: Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@1e5eb20a
2020-11-25 19:48:36,284 DEBUG  [main] BasicTypeRegistry: Adding type registration string -> org.hibernate.type.StringType@1e8fb66f
2020-11-25 19:48:36,284 DEBUG  [main] BasicTypeRegistry: Adding type registration java.lang.String -> org.hibernate.type.StringType@1e8fb66f
2020-11-25 19:48:36,284 DEBUG  [main] BasicTypeRegistry: Adding type registration nstring -> org.hibernate.type.StringNVarcharType@7f79edee
2020-11-25 19:48:36,284 DEBUG  [main] BasicTypeRegistry: Adding type registration ncharacter -> org.hibernate.type.CharacterNCharType@b5c6a30
2020-11-25 19:48:36,284 DEBUG  [main] BasicTypeRegistry: Adding type registration url -> org.hibernate.type.UrlType@43f03c23
2020-11-25 19:48:36,285 DEBUG  [main] BasicTypeRegistry: Adding type registration java.net.URL -> org.hibernate.type.UrlType@43f03c23
2020-11-25 19:48:36,285 DEBUG  [main] BasicTypeRegistry: Adding type registration Duration -> org.hibernate.type.DurationType@59fc6d05
2020-11-25 19:48:36,285 DEBUG  [main] BasicTypeRegistry: Adding type registration java.time.Duration -> org.hibernate.type.DurationType@59fc6d05
2020-11-25 19:48:36,287 DEBUG  [main] BasicTypeRegistry: Adding type registration Instant -> org.hibernate.type.InstantType@629a9f26
2020-11-25 19:48:36,287 DEBUG  [main] BasicTypeRegistry: Adding type registration java.time.Instant -> org.hibernate.type.InstantType@629a9f26
2020-11-25 19:48:36,287 DEBUG  [main] BasicTypeRegistry: Adding type registration LocalDateTime -> org.hibernate.type.LocalDateTimeType@32091c14
2020-11-25 19:48:36,288 DEBUG  [main] BasicTypeRegistry: Adding type registration java.time.LocalDateTime -> org.hibernate.type.LocalDateTimeType@32091c14
2020-11-25 19:48:36,288 DEBUG  [main] BasicTypeRegistry: Adding type registration LocalDate -> org.hibernate.type.LocalDateType@6579cdbb
2020-11-25 19:48:36,288 DEBUG  [main] BasicTypeRegistry: Adding type registration java.time.LocalDate -> org.hibernate.type.LocalDateType@6579cdbb
2020-11-25 19:48:36,288 DEBUG  [main] BasicTypeRegistry: Adding type registration LocalTime -> org.hibernate.type.LocalTimeType@6b357eb6
2020-11-25 19:48:36,288 DEBUG  [main] BasicTypeRegistry: Adding type registration java.time.LocalTime -> org.hibernate.type.LocalTimeType@6b357eb6
2020-11-25 19:48:36,288 DEBUG  [main] BasicTypeRegistry: Adding type registration OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@66f5a02e
2020-11-25 19:48:36,289 DEBUG  [main] BasicTypeRegistry: Adding type registration java.time.OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@66f5a02e
2020-11-25 19:48:36,289 DEBUG  [main] BasicTypeRegistry: Adding type registration OffsetTime -> org.hibernate.type.OffsetTimeType@72443081
2020-11-25 19:48:36,289 DEBUG  [main] BasicTypeRegistry: Adding type registration java.time.OffsetTime -> org.hibernate.type.OffsetTimeType@72443081
2020-11-25 19:48:36,289 DEBUG  [main] BasicTypeRegistry: Adding type registration ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@27fe059d
2020-11-25 19:48:36,289 DEBUG  [main] BasicTypeRegistry: Adding type registration java.time.ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@27fe059d
2020-11-25 19:48:36,289 DEBUG  [main] BasicTypeRegistry: Adding type registration date -> org.hibernate.type.DateType@5f0bab7e
2020-11-25 19:48:36,289 DEBUG  [main] BasicTypeRegistry: Adding type registration java.sql.Date -> org.hibernate.type.DateType@5f0bab7e
2020-11-25 19:48:36,289 DEBUG  [main] BasicTypeRegistry: Adding type registration time -> org.hibernate.type.TimeType@157d3a45
2020-11-25 19:48:36,290 DEBUG  [main] BasicTypeRegistry: Adding type registration java.sql.Time -> org.hibernate.type.TimeType@157d3a45
2020-11-25 19:48:36,290 DEBUG  [main] BasicTypeRegistry: Adding type registration timestamp -> org.hibernate.type.TimestampType@18d11527
2020-11-25 19:48:36,290 DEBUG  [main] BasicTypeRegistry: Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@18d11527
2020-11-25 19:48:36,290 DEBUG  [main] BasicTypeRegistry: Adding type registration java.util.Date -> org.hibernate.type.TimestampType@18d11527
2020-11-25 19:48:36,290 DEBUG  [main] BasicTypeRegistry: Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@28279a49
2020-11-25 19:48:36,290 DEBUG  [main] BasicTypeRegistry: Adding type registration calendar -> org.hibernate.type.CalendarType@566e142
2020-11-25 19:48:36,290 DEBUG  [main] BasicTypeRegistry: Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@566e142
2020-11-25 19:48:36,291 DEBUG  [main] BasicTypeRegistry: Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@566e142
2020-11-25 19:48:36,291 DEBUG  [main] BasicTypeRegistry: Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@30bf26df
2020-11-25 19:48:36,291 DEBUG  [main] BasicTypeRegistry: Adding type registration locale -> org.hibernate.type.LocaleType@7f4596d0
2020-11-25 19:48:36,291 DEBUG  [main] BasicTypeRegistry: Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@7f4596d0
2020-11-25 19:48:36,291 DEBUG  [main] BasicTypeRegistry: Adding type registration currency -> org.hibernate.type.CurrencyType@f171912
2020-11-25 19:48:36,291 DEBUG  [main] BasicTypeRegistry: Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@f171912
2020-11-25 19:48:36,292 DEBUG  [main] BasicTypeRegistry: Adding type registration timezone -> org.hibernate.type.TimeZoneType@f238e4f
2020-11-25 19:48:36,292 DEBUG  [main] BasicTypeRegistry: Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@f238e4f
2020-11-25 19:48:36,292 DEBUG  [main] BasicTypeRegistry: Adding type registration class -> org.hibernate.type.ClassType@469a7575
2020-11-25 19:48:36,292 DEBUG  [main] BasicTypeRegistry: Adding type registration java.lang.Class -> org.hibernate.type.ClassType@469a7575
2020-11-25 19:48:36,292 DEBUG  [main] BasicTypeRegistry: Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@1c34365c
2020-11-25 19:48:36,292 DEBUG  [main] BasicTypeRegistry: Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@1c34365c
2020-11-25 19:48:36,292 DEBUG  [main] BasicTypeRegistry: Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@637791d
2020-11-25 19:48:36,293 DEBUG  [main] BasicTypeRegistry: Adding type registration binary -> org.hibernate.type.BinaryType@422ab737
2020-11-25 19:48:36,293 DEBUG  [main] BasicTypeRegistry: Adding type registration byte[] -> org.hibernate.type.BinaryType@422ab737
2020-11-25 19:48:36,293 DEBUG  [main] BasicTypeRegistry: Adding type registration [B -> org.hibernate.type.BinaryType@422ab737
2020-11-25 19:48:36,293 DEBUG  [main] BasicTypeRegistry: Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@11381415
2020-11-25 19:48:36,293 DEBUG  [main] BasicTypeRegistry: Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@11381415
2020-11-25 19:48:36,293 DEBUG  [main] BasicTypeRegistry: Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@11381415
2020-11-25 19:48:36,293 DEBUG  [main] BasicTypeRegistry: Adding type registration row_version -> org.hibernate.type.RowVersionType@5403799b
2020-11-25 19:48:36,293 DEBUG  [main] BasicTypeRegistry: Adding type registration image -> org.hibernate.type.ImageType@4293e066
2020-11-25 19:48:36,294 DEBUG  [main] BasicTypeRegistry: Adding type registration characters -> org.hibernate.type.CharArrayType@122635ef
2020-11-25 19:48:36,294 DEBUG  [main] BasicTypeRegistry: Adding type registration char[] -> org.hibernate.type.CharArrayType@122635ef
2020-11-25 19:48:36,294 DEBUG  [main] BasicTypeRegistry: Adding type registration [C -> org.hibernate.type.CharArrayType@122635ef
2020-11-25 19:48:36,294 DEBUG  [main] BasicTypeRegistry: Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@3cc79c02
2020-11-25 19:48:36,294 DEBUG  [main] BasicTypeRegistry: Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@3cc79c02
2020-11-25 19:48:36,294 DEBUG  [main] BasicTypeRegistry: Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@3cc79c02
2020-11-25 19:48:36,294 DEBUG  [main] BasicTypeRegistry: Adding type registration text -> org.hibernate.type.TextType@6be6931f
2020-11-25 19:48:36,294 DEBUG  [main] BasicTypeRegistry: Adding type registration ntext -> org.hibernate.type.NTextType@e7b265e
2020-11-25 19:48:36,294 DEBUG  [main] BasicTypeRegistry: Adding type registration blob -> org.hibernate.type.BlobType@33f2cfda
2020-11-25 19:48:36,295 DEBUG  [main] BasicTypeRegistry: Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@33f2cfda
2020-11-25 19:48:36,295 DEBUG  [main] BasicTypeRegistry: Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@186d8a71
2020-11-25 19:48:36,295 DEBUG  [main] BasicTypeRegistry: Adding type registration clob -> org.hibernate.type.ClobType@3592c1c4
2020-11-25 19:48:36,295 DEBUG  [main] BasicTypeRegistry: Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@3592c1c4
2020-11-25 19:48:36,296 DEBUG  [main] BasicTypeRegistry: Adding type registration nclob -> org.hibernate.type.NClobType@13ed066e
2020-11-25 19:48:36,296 DEBUG  [main] BasicTypeRegistry: Adding type registration java.sql.NClob -> org.hibernate.type.NClobType@13ed066e
2020-11-25 19:48:36,296 DEBUG  [main] BasicTypeRegistry: Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@19489b27
2020-11-25 19:48:36,296 DEBUG  [main] BasicTypeRegistry: Adding type registration materialized_nclob -> org.hibernate.type.MaterializedNClobType@4f116ca2
2020-11-25 19:48:36,296 DEBUG  [main] BasicTypeRegistry: Adding type registration serializable -> org.hibernate.type.SerializableType@78b7f805
2020-11-25 19:48:36,296 DEBUG  [main] BasicTypeRegistry: Adding type registration object -> org.hibernate.type.ObjectType@e9474f
2020-11-25 19:48:36,296 DEBUG  [main] BasicTypeRegistry: Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@e9474f
2020-11-25 19:48:36,296 DEBUG  [main] BasicTypeRegistry: Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@6464f017
2020-11-25 19:48:36,297 DEBUG  [main] BasicTypeRegistry: Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@755a90a6
2020-11-25 19:48:36,297 DEBUG  [main] BasicTypeRegistry: Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@5862ab28
2020-11-25 19:48:36,297 DEBUG  [main] BasicTypeRegistry: Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@21202507
2020-11-25 19:48:36,297 DEBUG  [main] BasicTypeRegistry: Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@62878d7c
2020-11-25 19:48:36,297 DEBUG  [main] BasicTypeRegistry: Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@4379fe2a
2020-11-25 19:48:36,297 DEBUG  [main] BasicTypeRegistry: Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@e0f2686
2020-11-25 19:48:36,297 DEBUG  [main] BasicTypeRegistry: Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@2e27325d
2020-11-25 19:48:36,312 DEBUG  [main] TypeConfiguration$Scope: Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@577f81a0] to MetadataBuildingContext [org.hibernate.boot.internal.MetadataBuildingContextRootImpl@202d1424]
2020-11-25 19:48:36,331 DEBUG  [main] EnumType: Using NAMED-based conversion for Enum com.sf.back.entities.Kind
2020-11-25 19:48:36,334 DEBUG  [main] EnumType: Using NAMED-based conversion for Enum com.sf.back.entities.Kind
2020-11-25 19:48:36,359 DEBUG  [main] TypeConfiguration$Scope: Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@577f81a0] to SessionFactoryImpl [org.hibernate.internal.SessionFactoryImpl@1372696b]
2020-11-25 19:48:36,379 DEBUG  [main] EnumType: Using NAMED-based conversion for Enum com.sf.back.entities.Kind
2020-11-25 19:48:36,379 DEBUG  [main] EnumType: Using NAMED-based conversion for Enum com.sf.back.entities.Kind
2020-11-25 19:48:36,381 DEBUG  [main] EnumType: Using NAMED-based conversion for Enum com.sf.back.entities.Kind
2020-11-25 19:48:36,382 DEBUG  [main] EnumType: Using NAMED-based conversion for Enum com.sf.back.entities.Kind
2020-11-25 19:48:36,389 DEBUG  [main] EnumType: Using NAMED-based conversion for Enum com.sf.back.entities.Kind
2020-11-25 19:48:36,389 DEBUG  [main] EnumType: Using NAMED-based conversion for Enum com.sf.back.entities.Kind
2020-11-25 19:48:36,396 DEBUG  [main] EnumType: Using NAMED-based conversion for Enum com.sf.back.entities.Kind
2020-11-25 19:48:36,404 TRACE  [main] TypeConfiguration$Scope: Handling #sessionFactoryCreated from [org.hibernate.internal.SessionFactoryImpl@1372696b] for TypeConfiguration
2020-11-25 19:48:36,738 WARN   [main] JpaBaseConfiguration$JpaWebConfiguration: spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2020-11-25 19:48:37,198 TRACE  [main] BasicBinder: binding parameter [1] as [BLOB] - [[70, 105, 110, 100, 32, 97, 108, 108, 32, 114, 111, 111, 116, 115, 32, 111, 102, 32, 103, 105, 118, 101, 110, 32, 112, 111, 108, 121, 110, 111, 109, 105, 97, 108]]
2020-11-25 19:48:37,198 TRACE  [main] BasicBinder: binding parameter [2] as [BOOLEAN] - [false]
2020-11-25 19:48:37,198 TRACE  [main] BasicBinder: binding parameter [3] as [VARCHAR] - [POLYNOMIAL]
2020-11-25 19:48:37,198 TRACE  [main] BasicBinder: binding parameter [4] as [INTEGER] - [1]
2020-11-25 19:48:37,198 TRACE  [main] BasicBinder: binding parameter [5] as [BIGINT] - [null]
2020-11-25 19:48:37,199 TRACE  [main] BasicBinder: binding parameter [6] as [INTEGER] - [6]
2020-11-25 19:48:37,203 TRACE  [main] BasicBinder: binding parameter [1] as [BLOB] - [null]
2020-11-25 19:48:37,204 TRACE  [main] BasicBinder: binding parameter [2] as [DOUBLE] - [1.0]
2020-11-25 19:48:37,204 TRACE  [main] BasicBinder: binding parameter [3] as [INTEGER] - [0]
2020-11-25 19:48:37,205 TRACE  [main] BasicBinder: binding parameter [4] as [BOOLEAN] - [true]
2020-11-25 19:48:37,205 TRACE  [main] BasicBinder: binding parameter [5] as [INTEGER] - [0]
2020-11-25 19:48:37,205 TRACE  [main] BasicBinder: binding parameter [6] as [BIGINT] - [1]
2020-11-25 19:48:37,209 TRACE  [main] BasicBinder: binding parameter [1] as [BLOB] - [null]
2020-11-25 19:48:37,210 TRACE  [main] BasicBinder: binding parameter [2] as [DOUBLE] - [2.0]
2020-11-25 19:48:37,210 TRACE  [main] BasicBinder: binding parameter [3] as [INTEGER] - [0]
2020-11-25 19:48:37,210 TRACE  [main] BasicBinder: binding parameter [4] as [BOOLEAN] - [true]
2020-11-25 19:48:37,210 TRACE  [main] BasicBinder: binding parameter [5] as [INTEGER] - [1]
2020-11-25 19:48:37,211 TRACE  [main] BasicBinder: binding parameter [6] as [BIGINT] - [1]
2020-11-25 19:48:37,212 TRACE  [main] BasicBinder: binding parameter [1] as [BLOB] - [null]
2020-11-25 19:48:37,213 TRACE  [main] BasicBinder: binding parameter [2] as [DOUBLE] - [1.0]
2020-11-25 19:48:37,213 TRACE  [main] BasicBinder: binding parameter [3] as [INTEGER] - [0]
2020-11-25 19:48:37,213 TRACE  [main] BasicBinder: binding parameter [4] as [BOOLEAN] - [true]
2020-11-25 19:48:37,214 TRACE  [main] BasicBinder: binding parameter [5] as [INTEGER] - [2]
2020-11-25 19:48:37,214 TRACE  [main] BasicBinder: binding parameter [6] as [BIGINT] - [1]
2020-11-25 19:48:37,216 TRACE  [main] BasicBinder: binding parameter [1] as [BLOB] - [null]
2020-11-25 19:48:37,217 TRACE  [main] BasicBinder: binding parameter [2] as [DOUBLE] - [1.0]
2020-11-25 19:48:37,217 TRACE  [main] BasicBinder: binding parameter [3] as [INTEGER] - [0]
2020-11-25 19:48:37,219 TRACE  [main] BasicBinder: binding parameter [4] as [BOOLEAN] - [false]
2020-11-25 19:48:37,220 TRACE  [main] BasicBinder: binding parameter [5] as [INTEGER] - [0]
2020-11-25 19:48:37,220 TRACE  [main] BasicBinder: binding parameter [6] as [BIGINT] - [1]
2020-11-25 19:48:37,222 TRACE  [main] BasicBinder: binding parameter [1] as [BLOB] - [null]
2020-11-25 19:48:37,222 TRACE  [main] BasicBinder: binding parameter [2] as [DOUBLE] - [1.0]
2020-11-25 19:48:37,223 TRACE  [main] BasicBinder: binding parameter [3] as [INTEGER] - [0]
2020-11-25 19:48:37,223 TRACE  [main] BasicBinder: binding parameter [4] as [BOOLEAN] - [false]
2020-11-25 19:48:37,223 TRACE  [main] BasicBinder: binding parameter [5] as [INTEGER] - [1]
2020-11-25 19:48:37,224 TRACE  [main] BasicBinder: binding parameter [6] as [BIGINT] - [1]
2020-11-25 19:48:37,330 WARN   [SpringContextShutdownHook] SqlExceptionHelper: SQL Error: 90121, SQLState: 90121
2020-11-25 19:48:37,435 ERROR  [SpringContextShutdownHook] SqlExceptionHelper: Database is already closed (to disable automatic closing at VM shutdown, add ";DB_CLOSE_ON_EXIT=FALSE" to the db URL) [90121-200]
2020-11-25 19:48:37,437 WARN   [SpringContextShutdownHook] SqlExceptionHelper: SQL Error: 90121, SQLState: 90121
2020-11-25 19:48:37,437 ERROR  [SpringContextShutdownHook] SqlExceptionHelper: Database is already closed (to disable automatic closing at VM shutdown, add ";DB_CLOSE_ON_EXIT=FALSE" to the db URL) [90121-200]
2020-11-25 19:48:37,438 WARN   [SpringContextShutdownHook] DisposableBeanAdapter: Invocation of destroy method failed on bean with name 'entityManagerFactory': org.hibernate.exception.JDBCConnectionException: Unable to release JDBC Connection used for DDL execution
2020-11-25 19:48:37,568 TRACE  [SpringContextShutdownHook] TypeConfiguration$Scope: Handling #sessionFactoryClosed from [org.hibernate.internal.SessionFactoryImpl@36211bbc] for TypeConfiguration
2020-11-25 19:48:37,569 DEBUG  [SpringContextShutdownHook] TypeConfiguration$Scope: Un-scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration$Scope@611ead99] from SessionFactory [org.hibernate.internal.SessionFactoryImpl@36211bbc]
2020-11-25 19:48:37,610 TRACE  [SpringContextShutdownHook] TypeConfiguration$Scope: Handling #sessionFactoryClosed from [org.hibernate.internal.SessionFactoryImpl@ce0bbd5] for TypeConfiguration
2020-11-25 19:48:37,610 DEBUG  [SpringContextShutdownHook] TypeConfiguration$Scope: Un-scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration$Scope@73179e8a] from SessionFactory [org.hibernate.internal.SessionFactoryImpl@ce0bbd5]
2020-11-25 20:17:11,131 DEBUG  [main] BasicTypeRegistry: Adding type registration boolean -> org.hibernate.type.BooleanType@6babffb5
2020-11-25 20:17:11,187 DEBUG  [main] BasicTypeRegistry: Adding type registration boolean -> org.hibernate.type.BooleanType@6babffb5
2020-11-25 20:17:11,188 DEBUG  [main] BasicTypeRegistry: Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@6babffb5
2020-11-25 20:17:11,189 DEBUG  [main] BasicTypeRegistry: Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@7698b7a4
2020-11-25 20:17:11,190 DEBUG  [main] BasicTypeRegistry: Adding type registration true_false -> org.hibernate.type.TrueFalseType@11c713b7
2020-11-25 20:17:11,191 DEBUG  [main] BasicTypeRegistry: Adding type registration yes_no -> org.hibernate.type.YesNoType@3c232051
2020-11-25 20:17:11,193 DEBUG  [main] BasicTypeRegistry: Adding type registration byte -> org.hibernate.type.ByteType@4130a648
2020-11-25 20:17:11,193 DEBUG  [main] BasicTypeRegistry: Adding type registration byte -> org.hibernate.type.ByteType@4130a648
2020-11-25 20:17:11,194 DEBUG  [main] BasicTypeRegistry: Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@4130a648
2020-11-25 20:17:11,195 DEBUG  [main] BasicTypeRegistry: Adding type registration character -> org.hibernate.type.CharacterType@3e33b52e
2020-11-25 20:17:11,196 DEBUG  [main] BasicTypeRegistry: Adding type registration char -> org.hibernate.type.CharacterType@3e33b52e
2020-11-25 20:17:11,197 DEBUG  [main] BasicTypeRegistry: Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@3e33b52e
2020-11-25 20:17:11,200 DEBUG  [main] BasicTypeRegistry: Adding type registration short -> org.hibernate.type.ShortType@2287395
2020-11-25 20:17:11,200 DEBUG  [main] BasicTypeRegistry: Adding type registration short -> org.hibernate.type.ShortType@2287395
2020-11-25 20:17:11,201 DEBUG  [main] BasicTypeRegistry: Adding type registration java.lang.Short -> org.hibernate.type.ShortType@2287395
2020-11-25 20:17:11,204 DEBUG  [main] BasicTypeRegistry: Adding type registration integer -> org.hibernate.type.IntegerType@7a682d35
2020-11-25 20:17:11,204 DEBUG  [main] BasicTypeRegistry: Adding type registration int -> org.hibernate.type.IntegerType@7a682d35
2020-11-25 20:17:11,205 DEBUG  [main] BasicTypeRegistry: Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@7a682d35
2020-11-25 20:17:11,210 DEBUG  [main] BasicTypeRegistry: Adding type registration long -> org.hibernate.type.LongType@16134476
2020-11-25 20:17:11,211 DEBUG  [main] BasicTypeRegistry: Adding type registration long -> org.hibernate.type.LongType@16134476
2020-11-25 20:17:11,211 DEBUG  [main] BasicTypeRegistry: Adding type registration java.lang.Long -> org.hibernate.type.LongType@16134476
2020-11-25 20:17:11,214 DEBUG  [main] BasicTypeRegistry: Adding type registration float -> org.hibernate.type.FloatType@67f63d26
2020-11-25 20:17:11,216 DEBUG  [main] BasicTypeRegistry: Adding type registration float -> org.hibernate.type.FloatType@67f63d26
2020-11-25 20:17:11,217 DEBUG  [main] BasicTypeRegistry: Adding type registration java.lang.Float -> org.hibernate.type.FloatType@67f63d26
2020-11-25 20:17:11,221 DEBUG  [main] BasicTypeRegistry: Adding type registration double -> org.hibernate.type.DoubleType@67332b1e
2020-11-25 20:17:11,221 DEBUG  [main] BasicTypeRegistry: Adding type registration double -> org.hibernate.type.DoubleType@67332b1e
2020-11-25 20:17:11,222 DEBUG  [main] BasicTypeRegistry: Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@67332b1e
2020-11-25 20:17:11,223 DEBUG  [main] BasicTypeRegistry: Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@4538856f
2020-11-25 20:17:11,224 DEBUG  [main] BasicTypeRegistry: Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@4538856f
2020-11-25 20:17:11,227 DEBUG  [main] BasicTypeRegistry: Adding type registration big_integer -> org.hibernate.type.BigIntegerType@3d8d17a3
2020-11-25 20:17:11,227 DEBUG  [main] BasicTypeRegistry: Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@3d8d17a3
2020-11-25 20:17:11,230 DEBUG  [main] BasicTypeRegistry: Adding type registration string -> org.hibernate.type.StringType@b5c6a30
2020-11-25 20:17:11,230 DEBUG  [main] BasicTypeRegistry: Adding type registration java.lang.String -> org.hibernate.type.StringType@b5c6a30
2020-11-25 20:17:11,231 DEBUG  [main] BasicTypeRegistry: Adding type registration nstring -> org.hibernate.type.StringNVarcharType@47829d6d
2020-11-25 20:17:11,233 DEBUG  [main] BasicTypeRegistry: Adding type registration ncharacter -> org.hibernate.type.CharacterNCharType@7a1b8a46
2020-11-25 20:17:11,234 DEBUG  [main] BasicTypeRegistry: Adding type registration url -> org.hibernate.type.UrlType@78307a56
2020-11-25 20:17:11,235 DEBUG  [main] BasicTypeRegistry: Adding type registration java.net.URL -> org.hibernate.type.UrlType@78307a56
2020-11-25 20:17:11,236 DEBUG  [main] BasicTypeRegistry: Adding type registration Duration -> org.hibernate.type.DurationType@b791a81
2020-11-25 20:17:11,237 DEBUG  [main] BasicTypeRegistry: Adding type registration java.time.Duration -> org.hibernate.type.DurationType@b791a81
2020-11-25 20:17:11,240 DEBUG  [main] BasicTypeRegistry: Adding type registration Instant -> org.hibernate.type.InstantType@7c40ffef
2020-11-25 20:17:11,241 DEBUG  [main] BasicTypeRegistry: Adding type registration java.time.Instant -> org.hibernate.type.InstantType@7c40ffef
2020-11-25 20:17:11,243 DEBUG  [main] BasicTypeRegistry: Adding type registration LocalDateTime -> org.hibernate.type.LocalDateTimeType@fd413fb
2020-11-25 20:17:11,243 DEBUG  [main] BasicTypeRegistry: Adding type registration java.time.LocalDateTime -> org.hibernate.type.LocalDateTimeType@fd413fb
2020-11-25 20:17:11,246 DEBUG  [main] BasicTypeRegistry: Adding type registration LocalDate -> org.hibernate.type.LocalDateType@64bebd55
2020-11-25 20:17:11,249 DEBUG  [main] BasicTypeRegistry: Adding type registration java.time.LocalDate -> org.hibernate.type.LocalDateType@64bebd55
2020-11-25 20:17:11,251 DEBUG  [main] BasicTypeRegistry: Adding type registration LocalTime -> org.hibernate.type.LocalTimeType@4e3f2908
2020-11-25 20:17:11,251 DEBUG  [main] BasicTypeRegistry: Adding type registration java.time.LocalTime -> org.hibernate.type.LocalTimeType@4e3f2908
2020-11-25 20:17:11,253 DEBUG  [main] BasicTypeRegistry: Adding type registration OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@33feda48
2020-11-25 20:17:11,254 DEBUG  [main] BasicTypeRegistry: Adding type registration java.time.OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@33feda48
2020-11-25 20:17:11,256 DEBUG  [main] BasicTypeRegistry: Adding type registration OffsetTime -> org.hibernate.type.OffsetTimeType@373052b5
2020-11-25 20:17:11,256 DEBUG  [main] BasicTypeRegistry: Adding type registration java.time.OffsetTime -> org.hibernate.type.OffsetTimeType@373052b5
2020-11-25 20:17:11,259 DEBUG  [main] BasicTypeRegistry: Adding type registration ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@7d8cf9ac
2020-11-25 20:17:11,260 DEBUG  [main] BasicTypeRegistry: Adding type registration java.time.ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@7d8cf9ac
2020-11-25 20:17:11,262 DEBUG  [main] BasicTypeRegistry: Adding type registration date -> org.hibernate.type.DateType@750ed637
2020-11-25 20:17:11,262 DEBUG  [main] BasicTypeRegistry: Adding type registration java.sql.Date -> org.hibernate.type.DateType@750ed637
2020-11-25 20:17:11,264 DEBUG  [main] BasicTypeRegistry: Adding type registration time -> org.hibernate.type.TimeType@4998e74b
2020-11-25 20:17:11,265 DEBUG  [main] BasicTypeRegistry: Adding type registration java.sql.Time -> org.hibernate.type.TimeType@4998e74b
2020-11-25 20:17:11,266 DEBUG  [main] BasicTypeRegistry: Adding type registration timestamp -> org.hibernate.type.TimestampType@575cabf0
2020-11-25 20:17:11,267 DEBUG  [main] BasicTypeRegistry: Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@575cabf0
2020-11-25 20:17:11,267 DEBUG  [main] BasicTypeRegistry: Adding type registration java.util.Date -> org.hibernate.type.TimestampType@575cabf0
2020-11-25 20:17:11,271 DEBUG  [main] BasicTypeRegistry: Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@2da81754
2020-11-25 20:17:11,273 DEBUG  [main] BasicTypeRegistry: Adding type registration calendar -> org.hibernate.type.CalendarType@390037e7
2020-11-25 20:17:11,273 DEBUG  [main] BasicTypeRegistry: Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@390037e7
2020-11-25 20:17:11,273 DEBUG  [main] BasicTypeRegistry: Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@390037e7
2020-11-25 20:17:11,274 DEBUG  [main] BasicTypeRegistry: Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@6002e944
2020-11-25 20:17:11,276 DEBUG  [main] BasicTypeRegistry: Adding type registration locale -> org.hibernate.type.LocaleType@7d4d8579
2020-11-25 20:17:11,276 DEBUG  [main] BasicTypeRegistry: Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@7d4d8579
2020-11-25 20:17:11,278 DEBUG  [main] BasicTypeRegistry: Adding type registration currency -> org.hibernate.type.CurrencyType@3b24087d
2020-11-25 20:17:11,278 DEBUG  [main] BasicTypeRegistry: Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@3b24087d
2020-11-25 20:17:11,280 DEBUG  [main] BasicTypeRegistry: Adding type registration timezone -> org.hibernate.type.TimeZoneType@4351ed61
2020-11-25 20:17:11,280 DEBUG  [main] BasicTypeRegistry: Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@4351ed61
2020-11-25 20:17:11,282 DEBUG  [main] BasicTypeRegistry: Adding type registration class -> org.hibernate.type.ClassType@348137e8
2020-11-25 20:17:11,282 DEBUG  [main] BasicTypeRegistry: Adding type registration java.lang.Class -> org.hibernate.type.ClassType@348137e8
2020-11-25 20:17:11,283 DEBUG  [main] BasicTypeRegistry: Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@2574a9e3
2020-11-25 20:17:11,283 DEBUG  [main] BasicTypeRegistry: Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@2574a9e3
2020-11-25 20:17:11,284 DEBUG  [main] BasicTypeRegistry: Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@3fe512d2
2020-11-25 20:17:11,286 DEBUG  [main] BasicTypeRegistry: Adding type registration binary -> org.hibernate.type.BinaryType@5ad6cc21
2020-11-25 20:17:11,286 DEBUG  [main] BasicTypeRegistry: Adding type registration byte[] -> org.hibernate.type.BinaryType@5ad6cc21
2020-11-25 20:17:11,286 DEBUG  [main] BasicTypeRegistry: Adding type registration [B -> org.hibernate.type.BinaryType@5ad6cc21
2020-11-25 20:17:11,288 DEBUG  [main] BasicTypeRegistry: Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@5a0e0886
2020-11-25 20:17:11,288 DEBUG  [main] BasicTypeRegistry: Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@5a0e0886
2020-11-25 20:17:11,288 DEBUG  [main] BasicTypeRegistry: Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@5a0e0886
2020-11-25 20:17:11,290 DEBUG  [main] BasicTypeRegistry: Adding type registration row_version -> org.hibernate.type.RowVersionType@5e593b08
2020-11-25 20:17:11,291 DEBUG  [main] BasicTypeRegistry: Adding type registration image -> org.hibernate.type.ImageType@2ac519dc
2020-11-25 20:17:11,292 DEBUG  [main] BasicTypeRegistry: Adding type registration characters -> org.hibernate.type.CharArrayType@1e01b133
2020-11-25 20:17:11,293 DEBUG  [main] BasicTypeRegistry: Adding type registration char[] -> org.hibernate.type.CharArrayType@1e01b133
2020-11-25 20:17:11,293 DEBUG  [main] BasicTypeRegistry: Adding type registration [C -> org.hibernate.type.CharArrayType@1e01b133
2020-11-25 20:17:11,295 DEBUG  [main] BasicTypeRegistry: Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@e7b265e
2020-11-25 20:17:11,295 DEBUG  [main] BasicTypeRegistry: Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@e7b265e
2020-11-25 20:17:11,295 DEBUG  [main] BasicTypeRegistry: Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@e7b265e
2020-11-25 20:17:11,296 DEBUG  [main] BasicTypeRegistry: Adding type registration text -> org.hibernate.type.TextType@1fecfaea
2020-11-25 20:17:11,297 DEBUG  [main] BasicTypeRegistry: Adding type registration ntext -> org.hibernate.type.NTextType@4bb147ec
2020-11-25 20:17:11,300 DEBUG  [main] BasicTypeRegistry: Adding type registration blob -> org.hibernate.type.BlobType@6518fdfd
2020-11-25 20:17:11,300 DEBUG  [main] BasicTypeRegistry: Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@6518fdfd
2020-11-25 20:17:11,301 DEBUG  [main] BasicTypeRegistry: Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@174721c4
2020-11-25 20:17:11,303 DEBUG  [main] BasicTypeRegistry: Adding type registration clob -> org.hibernate.type.ClobType@151ab2b9
2020-11-25 20:17:11,303 DEBUG  [main] BasicTypeRegistry: Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@151ab2b9
2020-11-25 20:17:11,305 DEBUG  [main] BasicTypeRegistry: Adding type registration nclob -> org.hibernate.type.NClobType@4f116ca2
2020-11-25 20:17:11,305 DEBUG  [main] BasicTypeRegistry: Adding type registration java.sql.NClob -> org.hibernate.type.NClobType@4f116ca2
2020-11-25 20:17:11,306 DEBUG  [main] BasicTypeRegistry: Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@64b018f3
2020-11-25 20:17:11,307 DEBUG  [main] BasicTypeRegistry: Adding type registration materialized_nclob -> org.hibernate.type.MaterializedNClobType@1c240cf2
2020-11-25 20:17:11,309 DEBUG  [main] BasicTypeRegistry: Adding type registration serializable -> org.hibernate.type.SerializableType@7e8279e5
2020-11-25 20:17:11,319 DEBUG  [main] BasicTypeRegistry: Adding type registration object -> org.hibernate.type.ObjectType@577536e0
2020-11-25 20:17:11,320 DEBUG  [main] BasicTypeRegistry: Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@577536e0
2020-11-25 20:17:11,321 DEBUG  [main] BasicTypeRegistry: Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@7f0b93b4
2020-11-25 20:17:11,324 DEBUG  [main] BasicTypeRegistry: Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@1376883
2020-11-25 20:17:11,324 DEBUG  [main] BasicTypeRegistry: Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@1f736d00
2020-11-25 20:17:11,325 DEBUG  [main] BasicTypeRegistry: Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@523a7801
2020-11-25 20:17:11,326 DEBUG  [main] BasicTypeRegistry: Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@718fd7c1
2020-11-25 20:17:11,326 DEBUG  [main] BasicTypeRegistry: Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@4bc6da03
2020-11-25 20:17:11,327 DEBUG  [main] BasicTypeRegistry: Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@4f59a516
2020-11-25 20:17:11,327 DEBUG  [main] BasicTypeRegistry: Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@4e22368c
2020-11-25 20:17:12,283 DEBUG  [main] TypeConfiguration$Scope: Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@3fb450d7] to MetadataBuildingContext [org.hibernate.boot.internal.MetadataBuildingContextRootImpl@4b7ed03e]
2020-11-25 20:17:12,567 DEBUG  [main] EnumType: Using NAMED-based conversion for Enum com.sf.back.entities.Kind
2020-11-25 20:17:12,669 DEBUG  [main] EnumType: Using NAMED-based conversion for Enum com.sf.back.entities.Kind
2020-11-25 20:17:12,829 DEBUG  [main] TypeConfiguration$Scope: Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@3fb450d7] to SessionFactoryImpl [org.hibernate.internal.SessionFactoryImpl@4fe8f2ae]
2020-11-25 20:17:12,904 DEBUG  [main] EnumType: Using NAMED-based conversion for Enum com.sf.back.entities.Kind
2020-11-25 20:17:12,904 DEBUG  [main] EnumType: Using NAMED-based conversion for Enum com.sf.back.entities.Kind
2020-11-25 20:17:13,456 DEBUG  [main] EnumType: Using NAMED-based conversion for Enum com.sf.back.entities.Kind
2020-11-25 20:17:13,457 DEBUG  [main] EnumType: Using NAMED-based conversion for Enum com.sf.back.entities.Kind
2020-11-25 20:17:13,605 DEBUG  [main] EnumType: Using NAMED-based conversion for Enum com.sf.back.entities.Kind
2020-11-25 20:17:13,605 DEBUG  [main] EnumType: Using NAMED-based conversion for Enum com.sf.back.entities.Kind
2020-11-25 20:17:13,636 DEBUG  [main] EnumType: Using NAMED-based conversion for Enum com.sf.back.entities.Kind
2020-11-25 20:17:13,656 TRACE  [main] TypeConfiguration$Scope: Handling #sessionFactoryCreated from [org.hibernate.internal.SessionFactoryImpl@4fe8f2ae] for TypeConfiguration
2020-11-25 20:17:14,360 WARN   [main] GlobalSettings: Dozer configuration file not found: dozer.properties.  Using defaults for all Dozer global properties.
2020-11-25 20:17:14,896 WARN   [main] JpaBaseConfiguration$JpaWebConfiguration: spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2020-11-25 20:17:16,183 TRACE  [main] BasicBinder: binding parameter [1] as [BLOB] - [[70, 105, 110, 100, 32, 97, 108, 108, 32, 114, 111, 111, 116, 115, 32, 111, 102, 32, 103, 105, 118, 101, 110, 32, 112, 111, 108, 121, 110, 111, 109, 105, 97, 108]]
2020-11-25 20:17:16,185 TRACE  [main] BasicBinder: binding parameter [2] as [BOOLEAN] - [false]
2020-11-25 20:17:16,189 TRACE  [main] BasicBinder: binding parameter [3] as [VARCHAR] - [POLYNOMIAL]
2020-11-25 20:17:16,190 TRACE  [main] BasicBinder: binding parameter [4] as [INTEGER] - [1]
2020-11-25 20:17:16,192 TRACE  [main] BasicBinder: binding parameter [5] as [BIGINT] - [null]
2020-11-25 20:17:16,192 TRACE  [main] BasicBinder: binding parameter [6] as [INTEGER] - [6]
2020-11-25 20:17:16,211 TRACE  [main] BasicBinder: binding parameter [1] as [BLOB] - [null]
2020-11-25 20:17:16,212 TRACE  [main] BasicBinder: binding parameter [2] as [DOUBLE] - [1.0]
2020-11-25 20:17:16,213 TRACE  [main] BasicBinder: binding parameter [3] as [INTEGER] - [0]
2020-11-25 20:17:16,213 TRACE  [main] BasicBinder: binding parameter [4] as [BOOLEAN] - [true]
2020-11-25 20:17:16,213 TRACE  [main] BasicBinder: binding parameter [5] as [INTEGER] - [0]
2020-11-25 20:17:16,213 TRACE  [main] BasicBinder: binding parameter [6] as [BIGINT] - [1]
2020-11-25 20:17:16,217 TRACE  [main] BasicBinder: binding parameter [1] as [BLOB] - [null]
2020-11-25 20:17:16,217 TRACE  [main] BasicBinder: binding parameter [2] as [DOUBLE] - [2.0]
2020-11-25 20:17:16,217 TRACE  [main] BasicBinder: binding parameter [3] as [INTEGER] - [0]
2020-11-25 20:17:16,217 TRACE  [main] BasicBinder: binding parameter [4] as [BOOLEAN] - [true]
2020-11-25 20:17:16,218 TRACE  [main] BasicBinder: binding parameter [5] as [INTEGER] - [1]
2020-11-25 20:17:16,218 TRACE  [main] BasicBinder: binding parameter [6] as [BIGINT] - [1]
2020-11-25 20:17:16,219 TRACE  [main] BasicBinder: binding parameter [1] as [BLOB] - [null]
2020-11-25 20:17:16,219 TRACE  [main] BasicBinder: binding parameter [2] as [DOUBLE] - [1.0]
2020-11-25 20:17:16,220 TRACE  [main] BasicBinder: binding parameter [3] as [INTEGER] - [0]
2020-11-25 20:17:16,220 TRACE  [main] BasicBinder: binding parameter [4] as [BOOLEAN] - [true]
2020-11-25 20:17:16,220 TRACE  [main] BasicBinder: binding parameter [5] as [INTEGER] - [2]
2020-11-25 20:17:16,220 TRACE  [main] BasicBinder: binding parameter [6] as [BIGINT] - [1]
2020-11-25 20:17:16,227 TRACE  [main] BasicBinder: binding parameter [1] as [BLOB] - [null]
2020-11-25 20:17:16,227 TRACE  [main] BasicBinder: binding parameter [2] as [DOUBLE] - [1.0]
2020-11-25 20:17:16,228 TRACE  [main] BasicBinder: binding parameter [3] as [INTEGER] - [0]
2020-11-25 20:17:16,229 TRACE  [main] BasicBinder: binding parameter [4] as [BOOLEAN] - [false]
2020-11-25 20:17:16,229 TRACE  [main] BasicBinder: binding parameter [5] as [INTEGER] - [0]
2020-11-25 20:17:16,231 TRACE  [main] BasicBinder: binding parameter [6] as [BIGINT] - [1]
2020-11-25 20:17:16,234 TRACE  [main] BasicBinder: binding parameter [1] as [BLOB] - [null]
2020-11-25 20:17:16,234 TRACE  [main] BasicBinder: binding parameter [2] as [DOUBLE] - [1.0]
2020-11-25 20:17:16,235 TRACE  [main] BasicBinder: binding parameter [3] as [INTEGER] - [0]
2020-11-25 20:17:16,236 TRACE  [main] BasicBinder: binding parameter [4] as [BOOLEAN] - [false]
2020-11-25 20:17:16,241 TRACE  [main] BasicBinder: binding parameter [5] as [INTEGER] - [1]
2020-11-25 20:17:16,241 TRACE  [main] BasicBinder: binding parameter [6] as [BIGINT] - [1]
2020-11-25 20:17:21,394 DEBUG  [main] BasicTypeRegistry: Adding type registration boolean -> org.hibernate.type.BooleanType@6babffb5
2020-11-25 20:17:21,395 DEBUG  [main] BasicTypeRegistry: Adding type registration boolean -> org.hibernate.type.BooleanType@6babffb5
2020-11-25 20:17:21,395 DEBUG  [main] BasicTypeRegistry: Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@6babffb5
2020-11-25 20:17:21,395 DEBUG  [main] BasicTypeRegistry: Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@7698b7a4
2020-11-25 20:17:21,396 DEBUG  [main] BasicTypeRegistry: Adding type registration true_false -> org.hibernate.type.TrueFalseType@11c713b7
2020-11-25 20:17:21,396 DEBUG  [main] BasicTypeRegistry: Adding type registration yes_no -> org.hibernate.type.YesNoType@3c232051
2020-11-25 20:17:21,397 DEBUG  [main] BasicTypeRegistry: Adding type registration byte -> org.hibernate.type.ByteType@4130a648
2020-11-25 20:17:21,397 DEBUG  [main] BasicTypeRegistry: Adding type registration byte -> org.hibernate.type.ByteType@4130a648
2020-11-25 20:17:21,397 DEBUG  [main] BasicTypeRegistry: Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@4130a648
2020-11-25 20:17:21,398 DEBUG  [main] BasicTypeRegistry: Adding type registration character -> org.hibernate.type.CharacterType@3e33b52e
2020-11-25 20:17:21,398 DEBUG  [main] BasicTypeRegistry: Adding type registration char -> org.hibernate.type.CharacterType@3e33b52e
2020-11-25 20:17:21,398 DEBUG  [main] BasicTypeRegistry: Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@3e33b52e
2020-11-25 20:17:21,398 DEBUG  [main] BasicTypeRegistry: Adding type registration short -> org.hibernate.type.ShortType@2287395
2020-11-25 20:17:21,398 DEBUG  [main] BasicTypeRegistry: Adding type registration short -> org.hibernate.type.ShortType@2287395
2020-11-25 20:17:21,398 DEBUG  [main] BasicTypeRegistry: Adding type registration java.lang.Short -> org.hibernate.type.ShortType@2287395
2020-11-25 20:17:21,399 DEBUG  [main] BasicTypeRegistry: Adding type registration integer -> org.hibernate.type.IntegerType@7a682d35
2020-11-25 20:17:21,399 DEBUG  [main] BasicTypeRegistry: Adding type registration int -> org.hibernate.type.IntegerType@7a682d35
2020-11-25 20:17:21,399 DEBUG  [main] BasicTypeRegistry: Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@7a682d35
2020-11-25 20:17:21,400 DEBUG  [main] BasicTypeRegistry: Adding type registration long -> org.hibernate.type.LongType@16134476
2020-11-25 20:17:21,402 DEBUG  [main] BasicTypeRegistry: Adding type registration long -> org.hibernate.type.LongType@16134476
2020-11-25 20:17:21,403 DEBUG  [main] BasicTypeRegistry: Adding type registration java.lang.Long -> org.hibernate.type.LongType@16134476
2020-11-25 20:17:21,404 DEBUG  [main] BasicTypeRegistry: Adding type registration float -> org.hibernate.type.FloatType@67f63d26
2020-11-25 20:17:21,404 DEBUG  [main] BasicTypeRegistry: Adding type registration float -> org.hibernate.type.FloatType@67f63d26
2020-11-25 20:17:21,404 DEBUG  [main] BasicTypeRegistry: Adding type registration java.lang.Float -> org.hibernate.type.FloatType@67f63d26
2020-11-25 20:17:21,404 DEBUG  [main] BasicTypeRegistry: Adding type registration double -> org.hibernate.type.DoubleType@67332b1e
2020-11-25 20:17:21,405 DEBUG  [main] BasicTypeRegistry: Adding type registration double -> org.hibernate.type.DoubleType@67332b1e
2020-11-25 20:17:21,405 DEBUG  [main] BasicTypeRegistry: Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@67332b1e
2020-11-25 20:17:21,405 DEBUG  [main] BasicTypeRegistry: Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@4538856f
2020-11-25 20:17:21,406 DEBUG  [main] BasicTypeRegistry: Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@4538856f
2020-11-25 20:17:21,406 DEBUG  [main] BasicTypeRegistry: Adding type registration big_integer -> org.hibernate.type.BigIntegerType@3d8d17a3
2020-11-25 20:17:21,406 DEBUG  [main] BasicTypeRegistry: Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@3d8d17a3
2020-11-25 20:17:21,407 DEBUG  [main] BasicTypeRegistry: Adding type registration string -> org.hibernate.type.StringType@b5c6a30
2020-11-25 20:17:21,407 DEBUG  [main] BasicTypeRegistry: Adding type registration java.lang.String -> org.hibernate.type.StringType@b5c6a30
2020-11-25 20:17:21,408 DEBUG  [main] BasicTypeRegistry: Adding type registration nstring -> org.hibernate.type.StringNVarcharType@47829d6d
2020-11-25 20:17:21,408 DEBUG  [main] BasicTypeRegistry: Adding type registration ncharacter -> org.hibernate.type.CharacterNCharType@7a1b8a46
2020-11-25 20:17:21,408 DEBUG  [main] BasicTypeRegistry: Adding type registration url -> org.hibernate.type.UrlType@78307a56
2020-11-25 20:17:21,408 DEBUG  [main] BasicTypeRegistry: Adding type registration java.net.URL -> org.hibernate.type.UrlType@78307a56
2020-11-25 20:17:21,409 DEBUG  [main] BasicTypeRegistry: Adding type registration Duration -> org.hibernate.type.DurationType@b791a81
2020-11-25 20:17:21,409 DEBUG  [main] BasicTypeRegistry: Adding type registration java.time.Duration -> org.hibernate.type.DurationType@b791a81
2020-11-25 20:17:21,409 DEBUG  [main] BasicTypeRegistry: Adding type registration Instant -> org.hibernate.type.InstantType@7c40ffef
2020-11-25 20:17:21,409 DEBUG  [main] BasicTypeRegistry: Adding type registration java.time.Instant -> org.hibernate.type.InstantType@7c40ffef
2020-11-25 20:17:21,409 DEBUG  [main] BasicTypeRegistry: Adding type registration LocalDateTime -> org.hibernate.type.LocalDateTimeType@fd413fb
2020-11-25 20:17:21,409 DEBUG  [main] BasicTypeRegistry: Adding type registration java.time.LocalDateTime -> org.hibernate.type.LocalDateTimeType@fd413fb
2020-11-25 20:17:21,410 DEBUG  [main] BasicTypeRegistry: Adding type registration LocalDate -> org.hibernate.type.LocalDateType@64bebd55
2020-11-25 20:17:21,410 DEBUG  [main] BasicTypeRegistry: Adding type registration java.time.LocalDate -> org.hibernate.type.LocalDateType@64bebd55
2020-11-25 20:17:21,410 DEBUG  [main] BasicTypeRegistry: Adding type registration LocalTime -> org.hibernate.type.LocalTimeType@4e3f2908
2020-11-25 20:17:21,411 DEBUG  [main] BasicTypeRegistry: Adding type registration java.time.LocalTime -> org.hibernate.type.LocalTimeType@4e3f2908
2020-11-25 20:17:21,411 DEBUG  [main] BasicTypeRegistry: Adding type registration OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@33feda48
2020-11-25 20:17:21,411 DEBUG  [main] BasicTypeRegistry: Adding type registration java.time.OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@33feda48
2020-11-25 20:17:21,412 DEBUG  [main] BasicTypeRegistry: Adding type registration OffsetTime -> org.hibernate.type.OffsetTimeType@373052b5
2020-11-25 20:17:21,412 DEBUG  [main] BasicTypeRegistry: Adding type registration java.time.OffsetTime -> org.hibernate.type.OffsetTimeType@373052b5
2020-11-25 20:17:21,412 DEBUG  [main] BasicTypeRegistry: Adding type registration ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@7d8cf9ac
2020-11-25 20:17:21,412 DEBUG  [main] BasicTypeRegistry: Adding type registration java.time.ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@7d8cf9ac
2020-11-25 20:17:21,412 DEBUG  [main] BasicTypeRegistry: Adding type registration date -> org.hibernate.type.DateType@750ed637
2020-11-25 20:17:21,412 DEBUG  [main] BasicTypeRegistry: Adding type registration java.sql.Date -> org.hibernate.type.DateType@750ed637
2020-11-25 20:17:21,413 DEBUG  [main] BasicTypeRegistry: Adding type registration time -> org.hibernate.type.TimeType@4998e74b
2020-11-25 20:17:21,413 DEBUG  [main] BasicTypeRegistry: Adding type registration java.sql.Time -> org.hibernate.type.TimeType@4998e74b
2020-11-25 20:17:21,413 DEBUG  [main] BasicTypeRegistry: Adding type registration timestamp -> org.hibernate.type.TimestampType@575cabf0
2020-11-25 20:17:21,414 DEBUG  [main] BasicTypeRegistry: Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@575cabf0
2020-11-25 20:17:21,414 DEBUG  [main] BasicTypeRegistry: Adding type registration java.util.Date -> org.hibernate.type.TimestampType@575cabf0
2020-11-25 20:17:21,414 DEBUG  [main] BasicTypeRegistry: Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@2da81754
2020-11-25 20:17:21,414 DEBUG  [main] BasicTypeRegistry: Adding type registration calendar -> org.hibernate.type.CalendarType@390037e7
2020-11-25 20:17:21,415 DEBUG  [main] BasicTypeRegistry: Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@390037e7
2020-11-25 20:17:21,415 DEBUG  [main] BasicTypeRegistry: Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@390037e7
2020-11-25 20:17:21,415 DEBUG  [main] BasicTypeRegistry: Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@6002e944
2020-11-25 20:17:21,415 DEBUG  [main] BasicTypeRegistry: Adding type registration locale -> org.hibernate.type.LocaleType@7d4d8579
2020-11-25 20:17:21,416 DEBUG  [main] BasicTypeRegistry: Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@7d4d8579
2020-11-25 20:17:21,416 DEBUG  [main] BasicTypeRegistry: Adding type registration currency -> org.hibernate.type.CurrencyType@3b24087d
2020-11-25 20:17:21,417 DEBUG  [main] BasicTypeRegistry: Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@3b24087d
2020-11-25 20:17:21,417 DEBUG  [main] BasicTypeRegistry: Adding type registration timezone -> org.hibernate.type.TimeZoneType@4351ed61
2020-11-25 20:17:21,418 DEBUG  [main] BasicTypeRegistry: Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@4351ed61
2020-11-25 20:17:21,418 DEBUG  [main] BasicTypeRegistry: Adding type registration class -> org.hibernate.type.ClassType@348137e8
2020-11-25 20:17:21,418 DEBUG  [main] BasicTypeRegistry: Adding type registration java.lang.Class -> org.hibernate.type.ClassType@348137e8
2020-11-25 20:17:21,418 DEBUG  [main] BasicTypeRegistry: Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@2574a9e3
2020-11-25 20:17:21,418 DEBUG  [main] BasicTypeRegistry: Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@2574a9e3
2020-11-25 20:17:21,419 DEBUG  [main] BasicTypeRegistry: Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@3fe512d2
2020-11-25 20:17:21,419 DEBUG  [main] BasicTypeRegistry: Adding type registration binary -> org.hibernate.type.BinaryType@5ad6cc21
2020-11-25 20:17:21,419 DEBUG  [main] BasicTypeRegistry: Adding type registration byte[] -> org.hibernate.type.BinaryType@5ad6cc21
2020-11-25 20:17:21,419 DEBUG  [main] BasicTypeRegistry: Adding type registration [B -> org.hibernate.type.BinaryType@5ad6cc21
2020-11-25 20:17:21,419 DEBUG  [main] BasicTypeRegistry: Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@5a0e0886
2020-11-25 20:17:21,419 DEBUG  [main] BasicTypeRegistry: Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@5a0e0886
2020-11-25 20:17:21,420 DEBUG  [main] BasicTypeRegistry: Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@5a0e0886
2020-11-25 20:17:21,420 DEBUG  [main] BasicTypeRegistry: Adding type registration row_version -> org.hibernate.type.RowVersionType@5e593b08
2020-11-25 20:17:21,420 DEBUG  [main] BasicTypeRegistry: Adding type registration image -> org.hibernate.type.ImageType@2ac519dc
2020-11-25 20:17:21,420 DEBUG  [main] BasicTypeRegistry: Adding type registration characters -> org.hibernate.type.CharArrayType@1e01b133
2020-11-25 20:17:21,420 DEBUG  [main] BasicTypeRegistry: Adding type registration char[] -> org.hibernate.type.CharArrayType@1e01b133
2020-11-25 20:17:21,420 DEBUG  [main] BasicTypeRegistry: Adding type registration [C -> org.hibernate.type.CharArrayType@1e01b133
2020-11-25 20:17:21,421 DEBUG  [main] BasicTypeRegistry: Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@e7b265e
2020-11-25 20:17:21,421 DEBUG  [main] BasicTypeRegistry: Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@e7b265e
2020-11-25 20:17:21,421 DEBUG  [main] BasicTypeRegistry: Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@e7b265e
2020-11-25 20:17:21,421 DEBUG  [main] BasicTypeRegistry: Adding type registration text -> org.hibernate.type.TextType@1fecfaea
2020-11-25 20:17:21,421 DEBUG  [main] BasicTypeRegistry: Adding type registration ntext -> org.hibernate.type.NTextType@4bb147ec
2020-11-25 20:17:21,421 DEBUG  [main] BasicTypeRegistry: Adding type registration blob -> org.hibernate.type.BlobType@6518fdfd
2020-11-25 20:17:21,422 DEBUG  [main] BasicTypeRegistry: Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@6518fdfd
2020-11-25 20:17:21,422 DEBUG  [main] BasicTypeRegistry: Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@174721c4
2020-11-25 20:17:21,422 DEBUG  [main] BasicTypeRegistry: Adding type registration clob -> org.hibernate.type.ClobType@151ab2b9
2020-11-25 20:17:21,422 DEBUG  [main] BasicTypeRegistry: Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@151ab2b9
2020-11-25 20:17:21,422 DEBUG  [main] BasicTypeRegistry: Adding type registration nclob -> org.hibernate.type.NClobType@4f116ca2
2020-11-25 20:17:21,423 DEBUG  [main] BasicTypeRegistry: Adding type registration java.sql.NClob -> org.hibernate.type.NClobType@4f116ca2
2020-11-25 20:17:21,423 DEBUG  [main] BasicTypeRegistry: Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@64b018f3
2020-11-25 20:17:21,423 DEBUG  [main] BasicTypeRegistry: Adding type registration materialized_nclob -> org.hibernate.type.MaterializedNClobType@1c240cf2
2020-11-25 20:17:21,423 DEBUG  [main] BasicTypeRegistry: Adding type registration serializable -> org.hibernate.type.SerializableType@7e8279e5
2020-11-25 20:17:21,423 DEBUG  [main] BasicTypeRegistry: Adding type registration object -> org.hibernate.type.ObjectType@577536e0
2020-11-25 20:17:21,423 DEBUG  [main] BasicTypeRegistry: Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@577536e0
2020-11-25 20:17:21,423 DEBUG  [main] BasicTypeRegistry: Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@66589252
2020-11-25 20:17:21,424 DEBUG  [main] BasicTypeRegistry: Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@66a8ff6d
2020-11-25 20:17:21,424 DEBUG  [main] BasicTypeRegistry: Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@1abbc1d4
2020-11-25 20:17:21,424 DEBUG  [main] BasicTypeRegistry: Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@48bab2c6
2020-11-25 20:17:21,424 DEBUG  [main] BasicTypeRegistry: Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@6ad26381
2020-11-25 20:17:21,424 DEBUG  [main] BasicTypeRegistry: Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@4b20aa21
2020-11-25 20:17:21,424 DEBUG  [main] BasicTypeRegistry: Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@f5167f0
2020-11-25 20:17:21,425 DEBUG  [main] BasicTypeRegistry: Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@1260c85e
2020-11-25 20:17:21,439 DEBUG  [main] TypeConfiguration$Scope: Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@125124ea] to MetadataBuildingContext [org.hibernate.boot.internal.MetadataBuildingContextRootImpl@314c6f89]
2020-11-25 20:17:21,448 DEBUG  [main] EnumType: Using NAMED-based conversion for Enum com.sf.back.entities.Kind
2020-11-25 20:17:21,450 DEBUG  [main] EnumType: Using NAMED-based conversion for Enum com.sf.back.entities.Kind
2020-11-25 20:17:21,471 DEBUG  [main] TypeConfiguration$Scope: Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@125124ea] to SessionFactoryImpl [org.hibernate.internal.SessionFactoryImpl@ce0bbd5]
2020-11-25 20:17:21,472 DEBUG  [main] EnumType: Using NAMED-based conversion for Enum com.sf.back.entities.Kind
2020-11-25 20:17:21,473 DEBUG  [main] EnumType: Using NAMED-based conversion for Enum com.sf.back.entities.Kind
2020-11-25 20:17:21,475 DEBUG  [main] EnumType: Using NAMED-based conversion for Enum com.sf.back.entities.Kind
2020-11-25 20:17:21,475 DEBUG  [main] EnumType: Using NAMED-based conversion for Enum com.sf.back.entities.Kind
2020-11-25 20:17:21,483 DEBUG  [main] EnumType: Using NAMED-based conversion for Enum com.sf.back.entities.Kind
2020-11-25 20:17:21,483 DEBUG  [main] EnumType: Using NAMED-based conversion for Enum com.sf.back.entities.Kind
2020-11-25 20:17:21,500 DEBUG  [main] EnumType: Using NAMED-based conversion for Enum com.sf.back.entities.Kind
2020-11-25 20:17:21,516 TRACE  [main] TypeConfiguration$Scope: Handling #sessionFactoryCreated from [org.hibernate.internal.SessionFactoryImpl@ce0bbd5] for TypeConfiguration
2020-11-25 20:17:21,865 WARN   [main] JpaBaseConfiguration$JpaWebConfiguration: spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2020-11-25 20:17:22,181 TRACE  [main] BasicBinder: binding parameter [1] as [BLOB] - [[70, 105, 110, 100, 32, 97, 108, 108, 32, 114, 111, 111, 116, 115, 32, 111, 102, 32, 103, 105, 118, 101, 110, 32, 112, 111, 108, 121, 110, 111, 109, 105, 97, 108]]
2020-11-25 20:17:22,181 TRACE  [main] BasicBinder: binding parameter [2] as [BOOLEAN] - [false]
2020-11-25 20:17:22,181 TRACE  [main] BasicBinder: binding parameter [3] as [VARCHAR] - [POLYNOMIAL]
2020-11-25 20:17:22,181 TRACE  [main] BasicBinder: binding parameter [4] as [INTEGER] - [1]
2020-11-25 20:17:22,182 TRACE  [main] BasicBinder: binding parameter [5] as [BIGINT] - [null]
2020-11-25 20:17:22,183 TRACE  [main] BasicBinder: binding parameter [6] as [INTEGER] - [6]
2020-11-25 20:17:22,189 TRACE  [main] BasicBinder: binding parameter [1] as [BLOB] - [null]
2020-11-25 20:17:22,189 TRACE  [main] BasicBinder: binding parameter [2] as [DOUBLE] - [1.0]
2020-11-25 20:17:22,189 TRACE  [main] BasicBinder: binding parameter [3] as [INTEGER] - [0]
2020-11-25 20:17:22,189 TRACE  [main] BasicBinder: binding parameter [4] as [BOOLEAN] - [true]
2020-11-25 20:17:22,190 TRACE  [main] BasicBinder: binding parameter [5] as [INTEGER] - [0]
2020-11-25 20:17:22,190 TRACE  [main] BasicBinder: binding parameter [6] as [BIGINT] - [1]
2020-11-25 20:17:22,192 TRACE  [main] BasicBinder: binding parameter [1] as [BLOB] - [null]
2020-11-25 20:17:22,193 TRACE  [main] BasicBinder: binding parameter [2] as [DOUBLE] - [2.0]
2020-11-25 20:17:22,193 TRACE  [main] BasicBinder: binding parameter [3] as [INTEGER] - [0]
2020-11-25 20:17:22,193 TRACE  [main] BasicBinder: binding parameter [4] as [BOOLEAN] - [true]
2020-11-25 20:17:22,194 TRACE  [main] BasicBinder: binding parameter [5] as [INTEGER] - [1]
2020-11-25 20:17:22,195 TRACE  [main] BasicBinder: binding parameter [6] as [BIGINT] - [1]
2020-11-25 20:17:22,196 TRACE  [main] BasicBinder: binding parameter [1] as [BLOB] - [null]
2020-11-25 20:17:22,197 TRACE  [main] BasicBinder: binding parameter [2] as [DOUBLE] - [1.0]
2020-11-25 20:17:22,198 TRACE  [main] BasicBinder: binding parameter [3] as [INTEGER] - [0]
2020-11-25 20:17:22,198 TRACE  [main] BasicBinder: binding parameter [4] as [BOOLEAN] - [true]
2020-11-25 20:17:22,199 TRACE  [main] BasicBinder: binding parameter [5] as [INTEGER] - [2]
2020-11-25 20:17:22,200 TRACE  [main] BasicBinder: binding parameter [6] as [BIGINT] - [1]
2020-11-25 20:17:22,202 TRACE  [main] BasicBinder: binding parameter [1] as [BLOB] - [null]
2020-11-25 20:17:22,203 TRACE  [main] BasicBinder: binding parameter [2] as [DOUBLE] - [1.0]
2020-11-25 20:17:22,203 TRACE  [main] BasicBinder: binding parameter [3] as [INTEGER] - [0]
2020-11-25 20:17:22,203 TRACE  [main] BasicBinder: binding parameter [4] as [BOOLEAN] - [false]
2020-11-25 20:17:22,203 TRACE  [main] BasicBinder: binding parameter [5] as [INTEGER] - [0]
2020-11-25 20:17:22,204 TRACE  [main] BasicBinder: binding parameter [6] as [BIGINT] - [1]
2020-11-25 20:17:22,205 TRACE  [main] BasicBinder: binding parameter [1] as [BLOB] - [null]
2020-11-25 20:17:22,205 TRACE  [main] BasicBinder: binding parameter [2] as [DOUBLE] - [1.0]
2020-11-25 20:17:22,205 TRACE  [main] BasicBinder: binding parameter [3] as [INTEGER] - [0]
2020-11-25 20:17:22,205 TRACE  [main] BasicBinder: binding parameter [4] as [BOOLEAN] - [false]
2020-11-25 20:17:22,205 TRACE  [main] BasicBinder: binding parameter [5] as [INTEGER] - [1]
2020-11-25 20:17:22,205 TRACE  [main] BasicBinder: binding parameter [6] as [BIGINT] - [1]
2020-11-25 20:17:22,299 TRACE  [main] BasicBinder: binding parameter [1] as [BIGINT] - [2]
2020-11-25 20:17:22,306 TRACE  [main] BasicExtractor: extracted value ([id1_1_2_] : [BIGINT]) - [null]
2020-11-25 20:17:22,307 TRACE  [main] BasicExtractor: extracted value ([id1_0_4_] : [BIGINT]) - [null]
2020-11-25 20:17:22,318 TRACE  [main] BasicExtractor: extracted value ([descript2_1_0_] : [BLOB]) - [[112, 114, 111, 98, 108, 101, 109, 100, 101, 115, 99, 114, 105, 112, 116, 105, 111, 110]]
2020-11-25 20:17:22,319 TRACE  [main] BasicExtractor: extracted value ([is_solve3_1_0_] : [BOOLEAN]) - [null]
2020-11-25 20:17:22,319 TRACE  [main] BasicExtractor: extracted value ([kind4_1_0_] : [VARCHAR]) - [POLYNOMIAL]
2020-11-25 20:17:22,320 TRACE  [main] BasicExtractor: extracted value ([matrix_d5_1_0_] : [INTEGER]) - [1]
2020-11-25 20:17:22,321 TRACE  [main] BasicExtractor: extracted value ([parent_p7_1_0_] : [BIGINT]) - [null]
2020-11-25 20:17:22,322 TRACE  [main] BasicExtractor: extracted value ([problem_6_1_0_] : [INTEGER]) - [22]
2020-11-25 20:17:22,323 TRACE  [main] BasicExtractor: extracted value ([problem_7_0_3_] : [BIGINT]) - [null]
2020-11-25 20:17:22,323 TRACE  [main] BasicExtractor: extracted value ([parent_p7_1_1_] : [BIGINT]) - [null]
2020-11-25 20:17:22,332 TRACE  [main] CollectionType: Created collection wrapper: [com.sf.back.entities.Problem.matrixes#2]
2020-11-25 20:17:22,339 TRACE  [main] BasicBinder: binding parameter [1] as [BIGINT] - [2]
2020-11-25 20:17:22,340 TRACE  [main] BasicExtractor: extracted value ([id1_0_1_] : [BIGINT]) - [6]
2020-11-25 20:17:22,340 TRACE  [main] BasicExtractor: extracted value ([binary_v2_0_1_] : [BLOB]) - [null]
2020-11-25 20:17:22,341 TRACE  [main] BasicExtractor: extracted value ([float_va3_0_1_] : [DOUBLE]) - [1.0]
2020-11-25 20:17:22,342 TRACE  [main] BasicExtractor: extracted value ([i4_0_1_] : [INTEGER]) - [0]
2020-11-25 20:17:22,342 TRACE  [main] BasicExtractor: extracted value ([is_condi5_0_1_] : [BOOLEAN]) - [true]
2020-11-25 20:17:22,342 TRACE  [main] BasicExtractor: extracted value ([j6_0_1_] : [INTEGER]) - [0]
2020-11-25 20:17:22,342 TRACE  [main] BasicExtractor: extracted value ([problem_7_0_1_] : [BIGINT]) - [2]
2020-11-25 20:17:22,342 TRACE  [main] BasicExtractor: extracted value ([problem_7_0_0_] : [BIGINT]) - [2]
2020-11-25 20:17:22,343 TRACE  [main] BasicExtractor: extracted value ([id1_0_0_] : [BIGINT]) - [6]
2020-11-25 20:17:22,343 TRACE  [main] BasicExtractor: extracted value ([id1_0_1_] : [BIGINT]) - [7]
2020-11-25 20:17:22,343 TRACE  [main] BasicExtractor: extracted value ([binary_v2_0_1_] : [BLOB]) - [null]
2020-11-25 20:17:22,344 TRACE  [main] BasicExtractor: extracted value ([float_va3_0_1_] : [DOUBLE]) - [2.718281828459045]
2020-11-25 20:17:22,344 TRACE  [main] BasicExtractor: extracted value ([i4_0_1_] : [INTEGER]) - [0]
2020-11-25 20:17:22,344 TRACE  [main] BasicExtractor: extracted value ([is_condi5_0_1_] : [BOOLEAN]) - [true]
2020-11-25 20:17:22,344 TRACE  [main] BasicExtractor: extracted value ([j6_0_1_] : [INTEGER]) - [1]
2020-11-25 20:17:22,344 TRACE  [main] BasicExtractor: extracted value ([problem_7_0_1_] : [BIGINT]) - [2]
2020-11-25 20:17:22,345 TRACE  [main] BasicExtractor: extracted value ([problem_7_0_0_] : [BIGINT]) - [2]
2020-11-25 20:17:22,345 TRACE  [main] BasicExtractor: extracted value ([id1_0_0_] : [BIGINT]) - [7]
2020-11-25 20:17:22,351 TRACE  [main] BasicExtractor: extracted value ([id1_0_1_] : [BIGINT]) - [8]
2020-11-25 20:17:22,352 TRACE  [main] BasicExtractor: extracted value ([binary_v2_0_1_] : [BLOB]) - [null]
2020-11-25 20:17:22,352 TRACE  [main] BasicExtractor: extracted value ([float_va3_0_1_] : [DOUBLE]) - [7.38905609893065]
2020-11-25 20:17:22,353 TRACE  [main] BasicExtractor: extracted value ([i4_0_1_] : [INTEGER]) - [0]
2020-11-25 20:17:22,353 TRACE  [main] BasicExtractor: extracted value ([is_condi5_0_1_] : [BOOLEAN]) - [true]
2020-11-25 20:17:22,353 TRACE  [main] BasicExtractor: extracted value ([j6_0_1_] : [INTEGER]) - [2]
2020-11-25 20:17:22,354 TRACE  [main] BasicExtractor: extracted value ([problem_7_0_1_] : [BIGINT]) - [2]
2020-11-25 20:17:22,354 TRACE  [main] BasicExtractor: extracted value ([problem_7_0_0_] : [BIGINT]) - [2]
2020-11-25 20:17:22,354 TRACE  [main] BasicExtractor: extracted value ([id1_0_0_] : [BIGINT]) - [8]
2020-11-25 20:17:22,355 TRACE  [main] BasicExtractor: extracted value ([id1_0_1_] : [BIGINT]) - [9]
2020-11-25 20:17:22,356 TRACE  [main] BasicExtractor: extracted value ([binary_v2_0_1_] : [BLOB]) - [null]
2020-11-25 20:17:22,356 TRACE  [main] BasicExtractor: extracted value ([float_va3_0_1_] : [DOUBLE]) - [20.085536923187668]
2020-11-25 20:17:22,356 TRACE  [main] BasicExtractor: extracted value ([i4_0_1_] : [INTEGER]) - [0]
2020-11-25 20:17:22,357 TRACE  [main] BasicExtractor: extracted value ([is_condi5_0_1_] : [BOOLEAN]) - [true]
2020-11-25 20:17:22,357 TRACE  [main] BasicExtractor: extracted value ([j6_0_1_] : [INTEGER]) - [3]
2020-11-25 20:17:22,357 TRACE  [main] BasicExtractor: extracted value ([problem_7_0_1_] : [BIGINT]) - [2]
2020-11-25 20:17:22,358 TRACE  [main] BasicExtractor: extracted value ([problem_7_0_0_] : [BIGINT]) - [2]
2020-11-25 20:17:22,358 TRACE  [main] BasicExtractor: extracted value ([id1_0_0_] : [BIGINT]) - [9]
2020-11-25 20:17:22,358 TRACE  [main] BasicExtractor: extracted value ([id1_0_1_] : [BIGINT]) - [10]
2020-11-25 20:17:22,359 TRACE  [main] BasicExtractor: extracted value ([binary_v2_0_1_] : [BLOB]) - [null]
2020-11-25 20:17:22,359 TRACE  [main] BasicExtractor: extracted value ([float_va3_0_1_] : [DOUBLE]) - [54.598150033144236]
2020-11-25 20:17:22,359 TRACE  [main] BasicExtractor: extracted value ([i4_0_1_] : [INTEGER]) - [0]
2020-11-25 20:17:22,359 TRACE  [main] BasicExtractor: extracted value ([is_condi5_0_1_] : [BOOLEAN]) - [true]
2020-11-25 20:17:22,359 TRACE  [main] BasicExtractor: extracted value ([j6_0_1_] : [INTEGER]) - [4]
2020-11-25 20:17:22,360 TRACE  [main] BasicExtractor: extracted value ([problem_7_0_1_] : [BIGINT]) - [2]
2020-11-25 20:17:22,360 TRACE  [main] BasicExtractor: extracted value ([problem_7_0_0_] : [BIGINT]) - [2]
2020-11-25 20:17:22,360 TRACE  [main] BasicExtractor: extracted value ([id1_0_0_] : [BIGINT]) - [10]
2020-11-25 20:17:22,360 TRACE  [main] BasicExtractor: extracted value ([id1_0_1_] : [BIGINT]) - [11]
2020-11-25 20:17:22,361 TRACE  [main] BasicExtractor: extracted value ([binary_v2_0_1_] : [BLOB]) - [null]
2020-11-25 20:17:22,361 TRACE  [main] BasicExtractor: extracted value ([float_va3_0_1_] : [DOUBLE]) - [148.4131591025766]
2020-11-25 20:17:22,365 TRACE  [main] BasicExtractor: extracted value ([i4_0_1_] : [INTEGER]) - [0]
2020-11-25 20:17:22,365 TRACE  [main] BasicExtractor: extracted value ([is_condi5_0_1_] : [BOOLEAN]) - [true]
2020-11-25 20:17:22,366 TRACE  [main] BasicExtractor: extracted value ([j6_0_1_] : [INTEGER]) - [5]
2020-11-25 20:17:22,366 TRACE  [main] BasicExtractor: extracted value ([problem_7_0_1_] : [BIGINT]) - [2]
2020-11-25 20:17:22,366 TRACE  [main] BasicExtractor: extracted value ([problem_7_0_0_] : [BIGINT]) - [2]
2020-11-25 20:17:22,367 TRACE  [main] BasicExtractor: extracted value ([id1_0_0_] : [BIGINT]) - [11]
2020-11-25 20:17:22,501 TRACE  [main] BasicBinder: binding parameter [1] as [BIGINT] - [2]
2020-11-25 20:17:22,501 TRACE  [main] BasicExtractor: extracted value ([id1_1_2_] : [BIGINT]) - [null]
2020-11-25 20:17:22,502 TRACE  [main] BasicExtractor: extracted value ([id1_0_4_] : [BIGINT]) - [null]
2020-11-25 20:17:22,502 TRACE  [main] BasicExtractor: extracted value ([descript2_1_0_] : [BLOB]) - [[112, 114, 111, 98, 108, 101, 109, 100, 101, 115, 99, 114, 105, 112, 116, 105, 111, 110]]
2020-11-25 20:17:22,503 TRACE  [main] BasicExtractor: extracted value ([is_solve3_1_0_] : [BOOLEAN]) - [null]
2020-11-25 20:17:22,504 TRACE  [main] BasicExtractor: extracted value ([kind4_1_0_] : [VARCHAR]) - [POLYNOMIAL]
2020-11-25 20:17:22,504 TRACE  [main] BasicExtractor: extracted value ([matrix_d5_1_0_] : [INTEGER]) - [1]
2020-11-25 20:17:22,504 TRACE  [main] BasicExtractor: extracted value ([parent_p7_1_0_] : [BIGINT]) - [null]
2020-11-25 20:17:22,504 TRACE  [main] BasicExtractor: extracted value ([problem_6_1_0_] : [INTEGER]) - [22]
2020-11-25 20:17:22,505 TRACE  [main] BasicExtractor: extracted value ([problem_7_0_3_] : [BIGINT]) - [null]
2020-11-25 20:17:22,505 TRACE  [main] BasicExtractor: extracted value ([parent_p7_1_1_] : [BIGINT]) - [null]
2020-11-25 20:17:22,506 TRACE  [main] CollectionType: Created collection wrapper: [com.sf.back.entities.Problem.matrixes#2]
2020-11-25 20:17:22,507 TRACE  [main] BasicBinder: binding parameter [1] as [BIGINT] - [2]
2020-11-25 20:17:22,508 TRACE  [main] BasicExtractor: extracted value ([id1_0_1_] : [BIGINT]) - [6]
2020-11-25 20:17:22,509 TRACE  [main] BasicExtractor: extracted value ([binary_v2_0_1_] : [BLOB]) - [null]
2020-11-25 20:17:22,509 TRACE  [main] BasicExtractor: extracted value ([float_va3_0_1_] : [DOUBLE]) - [1.0]
2020-11-25 20:17:22,509 TRACE  [main] BasicExtractor: extracted value ([i4_0_1_] : [INTEGER]) - [0]
2020-11-25 20:17:22,510 TRACE  [main] BasicExtractor: extracted value ([is_condi5_0_1_] : [BOOLEAN]) - [true]
2020-11-25 20:17:22,510 TRACE  [main] BasicExtractor: extracted value ([j6_0_1_] : [INTEGER]) - [0]
2020-11-25 20:17:22,510 TRACE  [main] BasicExtractor: extracted value ([problem_7_0_1_] : [BIGINT]) - [2]
2020-11-25 20:17:22,510 TRACE  [main] BasicExtractor: extracted value ([problem_7_0_0_] : [BIGINT]) - [2]
2020-11-25 20:17:22,511 TRACE  [main] BasicExtractor: extracted value ([id1_0_0_] : [BIGINT]) - [6]
2020-11-25 20:17:22,511 TRACE  [main] BasicExtractor: extracted value ([id1_0_1_] : [BIGINT]) - [7]
2020-11-25 20:17:22,511 TRACE  [main] BasicExtractor: extracted value ([binary_v2_0_1_] : [BLOB]) - [null]
2020-11-25 20:17:22,511 TRACE  [main] BasicExtractor: extracted value ([float_va3_0_1_] : [DOUBLE]) - [2.718281828459045]
2020-11-25 20:17:22,511 TRACE  [main] BasicExtractor: extracted value ([i4_0_1_] : [INTEGER]) - [0]
2020-11-25 20:17:22,511 TRACE  [main] BasicExtractor: extracted value ([is_condi5_0_1_] : [BOOLEAN]) - [true]
2020-11-25 20:17:22,512 TRACE  [main] BasicExtractor: extracted value ([j6_0_1_] : [INTEGER]) - [1]
2020-11-25 20:17:22,512 TRACE  [main] BasicExtractor: extracted value ([problem_7_0_1_] : [BIGINT]) - [2]
2020-11-25 20:17:22,512 TRACE  [main] BasicExtractor: extracted value ([problem_7_0_0_] : [BIGINT]) - [2]
2020-11-25 20:17:22,513 TRACE  [main] BasicExtractor: extracted value ([id1_0_0_] : [BIGINT]) - [7]
2020-11-25 20:17:22,514 TRACE  [main] BasicExtractor: extracted value ([id1_0_1_] : [BIGINT]) - [8]
2020-11-25 20:17:22,515 TRACE  [main] BasicExtractor: extracted value ([binary_v2_0_1_] : [BLOB]) - [null]
2020-11-25 20:17:22,516 TRACE  [main] BasicExtractor: extracted value ([float_va3_0_1_] : [DOUBLE]) - [7.38905609893065]
2020-11-25 20:17:22,516 TRACE  [main] BasicExtractor: extracted value ([i4_0_1_] : [INTEGER]) - [0]
2020-11-25 20:17:22,516 TRACE  [main] BasicExtractor: extracted value ([is_condi5_0_1_] : [BOOLEAN]) - [true]
2020-11-25 20:17:22,517 TRACE  [main] BasicExtractor: extracted value ([j6_0_1_] : [INTEGER]) - [2]
2020-11-25 20:17:22,517 TRACE  [main] BasicExtractor: extracted value ([problem_7_0_1_] : [BIGINT]) - [2]
2020-11-25 20:17:22,517 TRACE  [main] BasicExtractor: extracted value ([problem_7_0_0_] : [BIGINT]) - [2]
2020-11-25 20:17:22,518 TRACE  [main] BasicExtractor: extracted value ([id1_0_0_] : [BIGINT]) - [8]
2020-11-25 20:17:22,518 TRACE  [main] BasicExtractor: extracted value ([id1_0_1_] : [BIGINT]) - [9]
2020-11-25 20:17:22,518 TRACE  [main] BasicExtractor: extracted value ([binary_v2_0_1_] : [BLOB]) - [null]
2020-11-25 20:17:22,519 TRACE  [main] BasicExtractor: extracted value ([float_va3_0_1_] : [DOUBLE]) - [20.085536923187668]
2020-11-25 20:17:22,519 TRACE  [main] BasicExtractor: extracted value ([i4_0_1_] : [INTEGER]) - [0]
2020-11-25 20:17:22,519 TRACE  [main] BasicExtractor: extracted value ([is_condi5_0_1_] : [BOOLEAN]) - [true]
2020-11-25 20:17:22,519 TRACE  [main] BasicExtractor: extracted value ([j6_0_1_] : [INTEGER]) - [3]
2020-11-25 20:17:22,519 TRACE  [main] BasicExtractor: extracted value ([problem_7_0_1_] : [BIGINT]) - [2]
2020-11-25 20:17:22,520 TRACE  [main] BasicExtractor: extracted value ([problem_7_0_0_] : [BIGINT]) - [2]
2020-11-25 20:17:22,520 TRACE  [main] BasicExtractor: extracted value ([id1_0_0_] : [BIGINT]) - [9]
2020-11-25 20:17:22,520 TRACE  [main] BasicExtractor: extracted value ([id1_0_1_] : [BIGINT]) - [10]
2020-11-25 20:17:22,520 TRACE  [main] BasicExtractor: extracted value ([binary_v2_0_1_] : [BLOB]) - [null]
2020-11-25 20:17:22,520 TRACE  [main] BasicExtractor: extracted value ([float_va3_0_1_] : [DOUBLE]) - [54.598150033144236]
2020-11-25 20:17:22,520 TRACE  [main] BasicExtractor: extracted value ([i4_0_1_] : [INTEGER]) - [0]
2020-11-25 20:17:22,521 TRACE  [main] BasicExtractor: extracted value ([is_condi5_0_1_] : [BOOLEAN]) - [true]
2020-11-25 20:17:22,521 TRACE  [main] BasicExtractor: extracted value ([j6_0_1_] : [INTEGER]) - [4]
2020-11-25 20:17:22,521 TRACE  [main] BasicExtractor: extracted value ([problem_7_0_1_] : [BIGINT]) - [2]
2020-11-25 20:17:22,521 TRACE  [main] BasicExtractor: extracted value ([problem_7_0_0_] : [BIGINT]) - [2]
2020-11-25 20:17:22,521 TRACE  [main] BasicExtractor: extracted value ([id1_0_0_] : [BIGINT]) - [10]
2020-11-25 20:17:22,521 TRACE  [main] BasicExtractor: extracted value ([id1_0_1_] : [BIGINT]) - [11]
2020-11-25 20:17:22,522 TRACE  [main] BasicExtractor: extracted value ([binary_v2_0_1_] : [BLOB]) - [null]
2020-11-25 20:17:22,522 TRACE  [main] BasicExtractor: extracted value ([float_va3_0_1_] : [DOUBLE]) - [148.4131591025766]
2020-11-25 20:17:22,522 TRACE  [main] BasicExtractor: extracted value ([i4_0_1_] : [INTEGER]) - [0]
2020-11-25 20:17:22,522 TRACE  [main] BasicExtractor: extracted value ([is_condi5_0_1_] : [BOOLEAN]) - [true]
2020-11-25 20:17:22,522 TRACE  [main] BasicExtractor: extracted value ([j6_0_1_] : [INTEGER]) - [5]
2020-11-25 20:17:22,523 TRACE  [main] BasicExtractor: extracted value ([problem_7_0_1_] : [BIGINT]) - [2]
2020-11-25 20:17:22,523 TRACE  [main] BasicExtractor: extracted value ([problem_7_0_0_] : [BIGINT]) - [2]
2020-11-25 20:17:22,523 TRACE  [main] BasicExtractor: extracted value ([id1_0_0_] : [BIGINT]) - [11]
2020-11-25 20:17:22,548 TRACE  [main] BasicBinder: binding parameter [1] as [BLOB] - [[100, 101, 115, 99, 114, 105, 112, 116, 105, 111, 110, 100, 101, 115, 99, 114, 105, 112, 116, 105, 111, 110]]
2020-11-25 20:17:22,549 TRACE  [main] BasicBinder: binding parameter [2] as [BOOLEAN] - [null]
2020-11-25 20:17:22,549 TRACE  [main] BasicBinder: binding parameter [3] as [VARCHAR] - [POLYNOMIAL]
2020-11-25 20:17:22,549 TRACE  [main] BasicBinder: binding parameter [4] as [INTEGER] - [1]
2020-11-25 20:17:22,550 TRACE  [main] BasicBinder: binding parameter [5] as [BIGINT] - [null]
2020-11-25 20:17:22,550 TRACE  [main] BasicBinder: binding parameter [6] as [INTEGER] - [22]
2020-11-25 20:17:22,550 TRACE  [main] BasicBinder: binding parameter [7] as [BIGINT] - [2]
2020-11-25 20:17:22,563 TRACE  [main] BasicBinder: binding parameter [1] as [BLOB] - [null]
2020-11-25 20:17:22,564 TRACE  [main] BasicBinder: binding parameter [2] as [DOUBLE] - [1.01]
2020-11-25 20:17:22,564 TRACE  [main] BasicBinder: binding parameter [3] as [INTEGER] - [0]
2020-11-25 20:17:22,565 TRACE  [main] BasicBinder: binding parameter [4] as [BOOLEAN] - [true]
2020-11-25 20:17:22,565 TRACE  [main] BasicBinder: binding parameter [5] as [INTEGER] - [0]
2020-11-25 20:17:22,566 TRACE  [main] BasicBinder: binding parameter [6] as [BIGINT] - [2]
2020-11-25 20:17:22,566 TRACE  [main] BasicBinder: binding parameter [7] as [BIGINT] - [6]
2020-11-25 20:17:22,571 TRACE  [main] BasicBinder: binding parameter [1] as [BIGINT] - [2]
2020-11-25 20:17:22,572 TRACE  [main] BasicExtractor: extracted value ([id1_1_2_] : [BIGINT]) - [null]
2020-11-25 20:17:22,573 TRACE  [main] BasicExtractor: extracted value ([id1_0_4_] : [BIGINT]) - [null]
2020-11-25 20:17:22,573 TRACE  [main] BasicExtractor: extracted value ([descript2_1_0_] : [BLOB]) - [[100, 101, 115, 99, 114, 105, 112, 116, 105, 111, 110, 100, 101, 115, 99, 114, 105, 112, 116, 105, 111, 110]]
2020-11-25 20:17:22,573 TRACE  [main] BasicExtractor: extracted value ([is_solve3_1_0_] : [BOOLEAN]) - [null]
2020-11-25 20:17:22,574 TRACE  [main] BasicExtractor: extracted value ([kind4_1_0_] : [VARCHAR]) - [POLYNOMIAL]
2020-11-25 20:17:22,574 TRACE  [main] BasicExtractor: extracted value ([matrix_d5_1_0_] : [INTEGER]) - [1]
2020-11-25 20:17:22,574 TRACE  [main] BasicExtractor: extracted value ([parent_p7_1_0_] : [BIGINT]) - [null]
2020-11-25 20:17:22,574 TRACE  [main] BasicExtractor: extracted value ([problem_6_1_0_] : [INTEGER]) - [22]
2020-11-25 20:17:22,574 TRACE  [main] BasicExtractor: extracted value ([problem_7_0_3_] : [BIGINT]) - [null]
2020-11-25 20:17:22,574 TRACE  [main] BasicExtractor: extracted value ([parent_p7_1_1_] : [BIGINT]) - [null]
2020-11-25 20:17:22,575 TRACE  [main] CollectionType: Created collection wrapper: [com.sf.back.entities.Problem.matrixes#2]
2020-11-25 20:17:22,575 TRACE  [main] BasicBinder: binding parameter [1] as [BIGINT] - [2]
2020-11-25 20:17:22,576 TRACE  [main] BasicExtractor: extracted value ([id1_0_1_] : [BIGINT]) - [6]
2020-11-25 20:17:22,576 TRACE  [main] BasicExtractor: extracted value ([binary_v2_0_1_] : [BLOB]) - [null]
2020-11-25 20:17:22,576 TRACE  [main] BasicExtractor: extracted value ([float_va3_0_1_] : [DOUBLE]) - [1.01]
2020-11-25 20:17:22,576 TRACE  [main] BasicExtractor: extracted value ([i4_0_1_] : [INTEGER]) - [0]
2020-11-25 20:17:22,576 TRACE  [main] BasicExtractor: extracted value ([is_condi5_0_1_] : [BOOLEAN]) - [true]
2020-11-25 20:17:22,577 TRACE  [main] BasicExtractor: extracted value ([j6_0_1_] : [INTEGER]) - [0]
2020-11-25 20:17:22,577 TRACE  [main] BasicExtractor: extracted value ([problem_7_0_1_] : [BIGINT]) - [2]
2020-11-25 20:17:22,577 TRACE  [main] BasicExtractor: extracted value ([problem_7_0_0_] : [BIGINT]) - [2]
2020-11-25 20:17:22,577 TRACE  [main] BasicExtractor: extracted value ([id1_0_0_] : [BIGINT]) - [6]
2020-11-25 20:17:22,577 TRACE  [main] BasicExtractor: extracted value ([id1_0_1_] : [BIGINT]) - [7]
2020-11-25 20:17:22,578 TRACE  [main] BasicExtractor: extracted value ([binary_v2_0_1_] : [BLOB]) - [null]
2020-11-25 20:17:22,578 TRACE  [main] BasicExtractor: extracted value ([float_va3_0_1_] : [DOUBLE]) - [2.718281828459045]
2020-11-25 20:17:22,578 TRACE  [main] BasicExtractor: extracted value ([i4_0_1_] : [INTEGER]) - [0]
2020-11-25 20:17:22,578 TRACE  [main] BasicExtractor: extracted value ([is_condi5_0_1_] : [BOOLEAN]) - [true]
2020-11-25 20:17:22,579 TRACE  [main] BasicExtractor: extracted value ([j6_0_1_] : [INTEGER]) - [1]
2020-11-25 20:17:22,579 TRACE  [main] BasicExtractor: extracted value ([problem_7_0_1_] : [BIGINT]) - [2]
2020-11-25 20:17:22,579 TRACE  [main] BasicExtractor: extracted value ([problem_7_0_0_] : [BIGINT]) - [2]
2020-11-25 20:17:22,579 TRACE  [main] BasicExtractor: extracted value ([id1_0_0_] : [BIGINT]) - [7]
2020-11-25 20:17:22,580 TRACE  [main] BasicExtractor: extracted value ([id1_0_1_] : [BIGINT]) - [8]
2020-11-25 20:17:22,580 TRACE  [main] BasicExtractor: extracted value ([binary_v2_0_1_] : [BLOB]) - [null]
2020-11-25 20:17:22,580 TRACE  [main] BasicExtractor: extracted value ([float_va3_0_1_] : [DOUBLE]) - [7.38905609893065]
2020-11-25 20:17:22,580 TRACE  [main] BasicExtractor: extracted value ([i4_0_1_] : [INTEGER]) - [0]
2020-11-25 20:17:22,580 TRACE  [main] BasicExtractor: extracted value ([is_condi5_0_1_] : [BOOLEAN]) - [true]
2020-11-25 20:17:22,580 TRACE  [main] BasicExtractor: extracted value ([j6_0_1_] : [INTEGER]) - [2]
2020-11-25 20:17:22,581 TRACE  [main] BasicExtractor: extracted value ([problem_7_0_1_] : [BIGINT]) - [2]
2020-11-25 20:17:22,581 TRACE  [main] BasicExtractor: extracted value ([problem_7_0_0_] : [BIGINT]) - [2]
2020-11-25 20:17:22,581 TRACE  [main] BasicExtractor: extracted value ([id1_0_0_] : [BIGINT]) - [8]
2020-11-25 20:17:22,581 TRACE  [main] BasicExtractor: extracted value ([id1_0_1_] : [BIGINT]) - [9]
2020-11-25 20:17:22,582 TRACE  [main] BasicExtractor: extracted value ([binary_v2_0_1_] : [BLOB]) - [null]
2020-11-25 20:17:22,582 TRACE  [main] BasicExtractor: extracted value ([float_va3_0_1_] : [DOUBLE]) - [20.085536923187668]
2020-11-25 20:17:22,582 TRACE  [main] BasicExtractor: extracted value ([i4_0_1_] : [INTEGER]) - [0]
2020-11-25 20:17:22,582 TRACE  [main] BasicExtractor: extracted value ([is_condi5_0_1_] : [BOOLEAN]) - [true]
2020-11-25 20:17:22,582 TRACE  [main] BasicExtractor: extracted value ([j6_0_1_] : [INTEGER]) - [3]
2020-11-25 20:17:22,582 TRACE  [main] BasicExtractor: extracted value ([problem_7_0_1_] : [BIGINT]) - [2]
2020-11-25 20:17:22,582 TRACE  [main] BasicExtractor: extracted value ([problem_7_0_0_] : [BIGINT]) - [2]
2020-11-25 20:17:22,583 TRACE  [main] BasicExtractor: extracted value ([id1_0_0_] : [BIGINT]) - [9]
2020-11-25 20:17:22,583 TRACE  [main] BasicExtractor: extracted value ([id1_0_1_] : [BIGINT]) - [10]
2020-11-25 20:17:22,583 TRACE  [main] BasicExtractor: extracted value ([binary_v2_0_1_] : [BLOB]) - [null]
2020-11-25 20:17:22,583 TRACE  [main] BasicExtractor: extracted value ([float_va3_0_1_] : [DOUBLE]) - [54.598150033144236]
2020-11-25 20:17:22,583 TRACE  [main] BasicExtractor: extracted value ([i4_0_1_] : [INTEGER]) - [0]
2020-11-25 20:17:22,583 TRACE  [main] BasicExtractor: extracted value ([is_condi5_0_1_] : [BOOLEAN]) - [true]
2020-11-25 20:17:22,583 TRACE  [main] BasicExtractor: extracted value ([j6_0_1_] : [INTEGER]) - [4]
2020-11-25 20:17:22,584 TRACE  [main] BasicExtractor: extracted value ([problem_7_0_1_] : [BIGINT]) - [2]
2020-11-25 20:17:22,584 TRACE  [main] BasicExtractor: extracted value ([problem_7_0_0_] : [BIGINT]) - [2]
2020-11-25 20:17:22,584 TRACE  [main] BasicExtractor: extracted value ([id1_0_0_] : [BIGINT]) - [10]
2020-11-25 20:17:22,584 TRACE  [main] BasicExtractor: extracted value ([id1_0_1_] : [BIGINT]) - [11]
2020-11-25 20:17:22,584 TRACE  [main] BasicExtractor: extracted value ([binary_v2_0_1_] : [BLOB]) - [null]
2020-11-25 20:17:22,585 TRACE  [main] BasicExtractor: extracted value ([float_va3_0_1_] : [DOUBLE]) - [148.4131591025766]
2020-11-25 20:17:22,585 TRACE  [main] BasicExtractor: extracted value ([i4_0_1_] : [INTEGER]) - [0]
2020-11-25 20:17:22,585 TRACE  [main] BasicExtractor: extracted value ([is_condi5_0_1_] : [BOOLEAN]) - [true]
2020-11-25 20:17:22,585 TRACE  [main] BasicExtractor: extracted value ([j6_0_1_] : [INTEGER]) - [5]
2020-11-25 20:17:22,585 TRACE  [main] BasicExtractor: extracted value ([problem_7_0_1_] : [BIGINT]) - [2]
2020-11-25 20:17:22,586 TRACE  [main] BasicExtractor: extracted value ([problem_7_0_0_] : [BIGINT]) - [2]
2020-11-25 20:17:22,586 TRACE  [main] BasicExtractor: extracted value ([id1_0_0_] : [BIGINT]) - [11]
2020-11-25 20:17:22,604 TRACE  [main] BasicBinder: binding parameter [1] as [BLOB] - [[100, 101, 115, 99, 114, 105, 112, 116, 105, 111, 110]]
2020-11-25 20:17:22,604 TRACE  [main] BasicBinder: binding parameter [2] as [BOOLEAN] - [false]
2020-11-25 20:17:22,605 TRACE  [main] BasicBinder: binding parameter [3] as [VARCHAR] - [POLYNOMIAL]
2020-11-25 20:17:22,605 TRACE  [main] BasicBinder: binding parameter [4] as [INTEGER] - [12]
2020-11-25 20:17:22,605 TRACE  [main] BasicBinder: binding parameter [5] as [BIGINT] - [null]
2020-11-25 20:17:22,605 TRACE  [main] BasicBinder: binding parameter [6] as [INTEGER] - [null]
2020-11-25 20:17:22,608 TRACE  [main] BasicBinder: binding parameter [1] as [BLOB] - [null]
2020-11-25 20:17:22,608 TRACE  [main] BasicBinder: binding parameter [2] as [DOUBLE] - [0.0]
2020-11-25 20:17:22,609 TRACE  [main] BasicBinder: binding parameter [3] as [INTEGER] - [0]
2020-11-25 20:17:22,609 TRACE  [main] BasicBinder: binding parameter [4] as [BOOLEAN] - [true]
2020-11-25 20:17:22,610 TRACE  [main] BasicBinder: binding parameter [5] as [INTEGER] - [0]
2020-11-25 20:17:22,610 TRACE  [main] BasicBinder: binding parameter [6] as [BIGINT] - [4]
2020-11-25 20:17:22,612 TRACE  [main] BasicBinder: binding parameter [1] as [BLOB] - [null]
2020-11-25 20:17:22,613 TRACE  [main] BasicBinder: binding parameter [2] as [DOUBLE] - [1.0]
2020-11-25 20:17:22,613 TRACE  [main] BasicBinder: binding parameter [3] as [INTEGER] - [0]
2020-11-25 20:17:22,614 TRACE  [main] BasicBinder: binding parameter [4] as [BOOLEAN] - [true]
2020-11-25 20:17:22,615 TRACE  [main] BasicBinder: binding parameter [5] as [INTEGER] - [1]
2020-11-25 20:17:22,615 TRACE  [main] BasicBinder: binding parameter [6] as [BIGINT] - [4]
2020-11-25 20:17:22,617 TRACE  [main] BasicBinder: binding parameter [1] as [BLOB] - [null]
2020-11-25 20:17:22,618 TRACE  [main] BasicBinder: binding parameter [2] as [DOUBLE] - [2.0]
2020-11-25 20:17:22,618 TRACE  [main] BasicBinder: binding parameter [3] as [INTEGER] - [0]
2020-11-25 20:17:22,619 TRACE  [main] BasicBinder: binding parameter [4] as [BOOLEAN] - [true]
2020-11-25 20:17:22,619 TRACE  [main] BasicBinder: binding parameter [5] as [INTEGER] - [2]
2020-11-25 20:17:22,620 TRACE  [main] BasicBinder: binding parameter [6] as [BIGINT] - [4]
2020-11-25 20:17:22,623 TRACE  [main] BasicBinder: binding parameter [1] as [BLOB] - [null]
2020-11-25 20:17:22,623 TRACE  [main] BasicBinder: binding parameter [2] as [DOUBLE] - [3.0]
2020-11-25 20:17:22,624 TRACE  [main] BasicBinder: binding parameter [3] as [INTEGER] - [0]
2020-11-25 20:17:22,625 TRACE  [main] BasicBinder: binding parameter [4] as [BOOLEAN] - [true]
2020-11-25 20:17:22,625 TRACE  [main] BasicBinder: binding parameter [5] as [INTEGER] - [3]
2020-11-25 20:17:22,625 TRACE  [main] BasicBinder: binding parameter [6] as [BIGINT] - [4]
2020-11-25 20:17:22,627 TRACE  [main] BasicBinder: binding parameter [1] as [BLOB] - [null]
2020-11-25 20:17:22,628 TRACE  [main] BasicBinder: binding parameter [2] as [DOUBLE] - [4.0]
2020-11-25 20:17:22,628 TRACE  [main] BasicBinder: binding parameter [3] as [INTEGER] - [0]
2020-11-25 20:17:22,628 TRACE  [main] BasicBinder: binding parameter [4] as [BOOLEAN] - [true]
2020-11-25 20:17:22,629 TRACE  [main] BasicBinder: binding parameter [5] as [INTEGER] - [4]
2020-11-25 20:17:22,629 TRACE  [main] BasicBinder: binding parameter [6] as [BIGINT] - [4]
2020-11-25 20:17:22,632 TRACE  [main] BasicBinder: binding parameter [1] as [BLOB] - [null]
2020-11-25 20:17:22,632 TRACE  [main] BasicBinder: binding parameter [2] as [DOUBLE] - [5.0]
2020-11-25 20:17:22,632 TRACE  [main] BasicBinder: binding parameter [3] as [INTEGER] - [0]
2020-11-25 20:17:22,633 TRACE  [main] BasicBinder: binding parameter [4] as [BOOLEAN] - [true]
2020-11-25 20:17:22,633 TRACE  [main] BasicBinder: binding parameter [5] as [INTEGER] - [5]
2020-11-25 20:17:22,633 TRACE  [main] BasicBinder: binding parameter [6] as [BIGINT] - [4]
2020-11-25 20:17:22,634 TRACE  [main] BasicBinder: binding parameter [1] as [BLOB] - [null]
2020-11-25 20:17:22,635 TRACE  [main] BasicBinder: binding parameter [2] as [DOUBLE] - [6.0]
2020-11-25 20:17:22,635 TRACE  [main] BasicBinder: binding parameter [3] as [INTEGER] - [0]
2020-11-25 20:17:22,635 TRACE  [main] BasicBinder: binding parameter [4] as [BOOLEAN] - [true]
2020-11-25 20:17:22,635 TRACE  [main] BasicBinder: binding parameter [5] as [INTEGER] - [6]
2020-11-25 20:17:22,636 TRACE  [main] BasicBinder: binding parameter [6] as [BIGINT] - [4]
2020-11-25 20:17:22,639 TRACE  [main] BasicBinder: binding parameter [1] as [BLOB] - [null]
2020-11-25 20:17:22,640 TRACE  [main] BasicBinder: binding parameter [2] as [DOUBLE] - [7.0]
2020-11-25 20:17:22,640 TRACE  [main] BasicBinder: binding parameter [3] as [INTEGER] - [0]
2020-11-25 20:17:22,641 TRACE  [main] BasicBinder: binding parameter [4] as [BOOLEAN] - [true]
2020-11-25 20:17:22,642 TRACE  [main] BasicBinder: binding parameter [5] as [INTEGER] - [7]
2020-11-25 20:17:22,643 TRACE  [main] BasicBinder: binding parameter [6] as [BIGINT] - [4]
2020-11-25 20:17:22,646 TRACE  [main] BasicBinder: binding parameter [1] as [BLOB] - [null]
2020-11-25 20:17:22,646 TRACE  [main] BasicBinder: binding parameter [2] as [DOUBLE] - [8.0]
2020-11-25 20:17:22,647 TRACE  [main] BasicBinder: binding parameter [3] as [INTEGER] - [0]
2020-11-25 20:17:22,647 TRACE  [main] BasicBinder: binding parameter [4] as [BOOLEAN] - [true]
2020-11-25 20:17:22,647 TRACE  [main] BasicBinder: binding parameter [5] as [INTEGER] - [8]
2020-11-25 20:17:22,647 TRACE  [main] BasicBinder: binding parameter [6] as [BIGINT] - [4]
2020-11-25 20:17:22,649 TRACE  [main] BasicBinder: binding parameter [1] as [BLOB] - [null]
2020-11-25 20:17:22,649 TRACE  [main] BasicBinder: binding parameter [2] as [DOUBLE] - [9.0]
2020-11-25 20:17:22,649 TRACE  [main] BasicBinder: binding parameter [3] as [INTEGER] - [0]
2020-11-25 20:17:22,650 TRACE  [main] BasicBinder: binding parameter [4] as [BOOLEAN] - [true]
2020-11-25 20:17:22,650 TRACE  [main] BasicBinder: binding parameter [5] as [INTEGER] - [9]
2020-11-25 20:17:22,650 TRACE  [main] BasicBinder: binding parameter [6] as [BIGINT] - [4]
2020-11-25 20:17:22,900 TRACE  [main] BasicExtractor: extracted value ([id1_1_] : [BIGINT]) - [1]
2020-11-25 20:17:22,901 TRACE  [main] BasicExtractor: extracted value ([descript2_1_] : [BLOB]) - [[70, 105, 110, 100, 32, 97, 108, 108, 32, 114, 111, 111, 116, 115, 32, 111, 102, 32, 103, 105, 118, 101, 110, 32, 112, 111, 108, 121, 110, 111, 109, 105, 97, 108]]
2020-11-25 20:17:22,901 TRACE  [main] BasicExtractor: extracted value ([is_solve3_1_] : [BOOLEAN]) - [false]
2020-11-25 20:17:22,902 TRACE  [main] BasicExtractor: extracted value ([kind4_1_] : [VARCHAR]) - [POLYNOMIAL]
2020-11-25 20:17:22,902 TRACE  [main] BasicExtractor: extracted value ([matrix_d5_1_] : [INTEGER]) - [1]
2020-11-25 20:17:22,903 TRACE  [main] BasicExtractor: extracted value ([parent_p7_1_] : [BIGINT]) - [null]
2020-11-25 20:17:22,903 TRACE  [main] BasicExtractor: extracted value ([problem_6_1_] : [INTEGER]) - [6]
2020-11-25 20:17:22,904 TRACE  [main] BasicExtractor: extracted value ([id1_1_] : [BIGINT]) - [2]
2020-11-25 20:17:22,905 TRACE  [main] BasicExtractor: extracted value ([descript2_1_] : [BLOB]) - [[100, 101, 115, 99, 114, 105, 112, 116, 105, 111, 110, 100, 101, 115, 99, 114, 105, 112, 116, 105, 111, 110]]
2020-11-25 20:17:22,905 TRACE  [main] BasicExtractor: extracted value ([is_solve3_1_] : [BOOLEAN]) - [null]
2020-11-25 20:17:22,905 TRACE  [main] BasicExtractor: extracted value ([kind4_1_] : [VARCHAR]) - [POLYNOMIAL]
2020-11-25 20:17:22,906 TRACE  [main] BasicExtractor: extracted value ([matrix_d5_1_] : [INTEGER]) - [1]
2020-11-25 20:17:22,906 TRACE  [main] BasicExtractor: extracted value ([parent_p7_1_] : [BIGINT]) - [null]
2020-11-25 20:17:22,906 TRACE  [main] BasicExtractor: extracted value ([problem_6_1_] : [INTEGER]) - [22]
2020-11-25 20:17:22,907 TRACE  [main] BasicExtractor: extracted value ([id1_1_] : [BIGINT]) - [3]
2020-11-25 20:17:22,907 TRACE  [main] BasicExtractor: extracted value ([descript2_1_] : [BLOB]) - [[112, 114, 111, 98, 108, 101, 109, 100, 101, 115, 99, 114, 105, 112, 116, 105, 111, 110]]
2020-11-25 20:17:22,908 TRACE  [main] BasicExtractor: extracted value ([is_solve3_1_] : [BOOLEAN]) - [null]
2020-11-25 20:17:22,908 TRACE  [main] BasicExtractor: extracted value ([kind4_1_] : [VARCHAR]) - [POLYNOMIAL]
2020-11-25 20:17:22,908 TRACE  [main] BasicExtractor: extracted value ([matrix_d5_1_] : [INTEGER]) - [1]
2020-11-25 20:17:22,909 TRACE  [main] BasicExtractor: extracted value ([parent_p7_1_] : [BIGINT]) - [null]
2020-11-25 20:17:22,909 TRACE  [main] BasicExtractor: extracted value ([problem_6_1_] : [INTEGER]) - [22]
2020-11-25 20:17:22,909 TRACE  [main] BasicExtractor: extracted value ([id1_1_] : [BIGINT]) - [4]
2020-11-25 20:17:22,910 TRACE  [main] BasicExtractor: extracted value ([descript2_1_] : [BLOB]) - [[100, 101, 115, 99, 114, 105, 112, 116, 105, 111, 110]]
2020-11-25 20:17:22,910 TRACE  [main] BasicExtractor: extracted value ([is_solve3_1_] : [BOOLEAN]) - [false]
2020-11-25 20:17:22,910 TRACE  [main] BasicExtractor: extracted value ([kind4_1_] : [VARCHAR]) - [POLYNOMIAL]
2020-11-25 20:17:22,911 TRACE  [main] BasicExtractor: extracted value ([matrix_d5_1_] : [INTEGER]) - [12]
2020-11-25 20:17:22,911 TRACE  [main] BasicExtractor: extracted value ([parent_p7_1_] : [BIGINT]) - [null]
2020-11-25 20:17:22,911 TRACE  [main] BasicExtractor: extracted value ([problem_6_1_] : [INTEGER]) - [null]
2020-11-25 20:17:22,912 TRACE  [main] BasicExtractor: extracted value ([id1_1_] : [BIGINT]) - [5]
2020-11-25 20:17:22,913 TRACE  [main] BasicExtractor: extracted value ([descript2_1_] : [BLOB]) - [[112, 114, 111, 98, 108, 101, 109, 100, 101, 115, 99, 114, 105, 112, 116, 105, 111, 110]]
2020-11-25 20:17:22,913 TRACE  [main] BasicExtractor: extracted value ([is_solve3_1_] : [BOOLEAN]) - [null]
2020-11-25 20:17:22,914 TRACE  [main] BasicExtractor: extracted value ([kind4_1_] : [VARCHAR]) - [POLYNOMIAL]
2020-11-25 20:17:22,914 TRACE  [main] BasicExtractor: extracted value ([matrix_d5_1_] : [INTEGER]) - [1]
2020-11-25 20:17:22,915 TRACE  [main] BasicExtractor: extracted value ([parent_p7_1_] : [BIGINT]) - [null]
2020-11-25 20:17:22,915 TRACE  [main] BasicExtractor: extracted value ([problem_6_1_] : [INTEGER]) - [22]
2020-11-25 20:17:22,916 TRACE  [main] CollectionType: Created collection wrapper: [com.sf.back.entities.Problem.children#1]
2020-11-25 20:17:22,917 TRACE  [main] CollectionType: Created collection wrapper: [com.sf.back.entities.Problem.matrixes#1]
2020-11-25 20:17:22,919 TRACE  [main] CollectionType: Created collection wrapper: [com.sf.back.entities.Problem.children#2]
2020-11-25 20:17:22,921 TRACE  [main] CollectionType: Created collection wrapper: [com.sf.back.entities.Problem.matrixes#2]
2020-11-25 20:17:22,922 TRACE  [main] CollectionType: Created collection wrapper: [com.sf.back.entities.Problem.children#3]
2020-11-25 20:17:22,922 TRACE  [main] CollectionType: Created collection wrapper: [com.sf.back.entities.Problem.matrixes#3]
2020-11-25 20:17:22,923 TRACE  [main] CollectionType: Created collection wrapper: [com.sf.back.entities.Problem.children#4]
2020-11-25 20:17:22,923 TRACE  [main] CollectionType: Created collection wrapper: [com.sf.back.entities.Problem.matrixes#4]
2020-11-25 20:17:22,923 TRACE  [main] CollectionType: Created collection wrapper: [com.sf.back.entities.Problem.children#5]
2020-11-25 20:17:22,924 TRACE  [main] CollectionType: Created collection wrapper: [com.sf.back.entities.Problem.matrixes#5]
2020-11-25 20:17:22,927 TRACE  [main] BasicBinder: binding parameter [1] as [BIGINT] - [5]
2020-11-25 20:17:22,928 TRACE  [main] BasicExtractor: extracted value ([id1_0_1_] : [BIGINT]) - [28]
2020-11-25 20:17:22,929 TRACE  [main] BasicExtractor: extracted value ([binary_v2_0_1_] : [BLOB]) - [null]
2020-11-25 20:17:22,929 TRACE  [main] BasicExtractor: extracted value ([float_va3_0_1_] : [DOUBLE]) - [1.0]
2020-11-25 20:17:22,930 TRACE  [main] BasicExtractor: extracted value ([i4_0_1_] : [INTEGER]) - [0]
2020-11-25 20:17:22,930 TRACE  [main] BasicExtractor: extracted value ([is_condi5_0_1_] : [BOOLEAN]) - [true]
2020-11-25 20:17:22,930 TRACE  [main] BasicExtractor: extracted value ([j6_0_1_] : [INTEGER]) - [0]
2020-11-25 20:17:22,931 TRACE  [main] BasicExtractor: extracted value ([problem_7_0_1_] : [BIGINT]) - [5]
2020-11-25 20:17:22,931 TRACE  [main] BasicExtractor: extracted value ([problem_7_0_0_] : [BIGINT]) - [5]
2020-11-25 20:17:22,931 TRACE  [main] BasicExtractor: extracted value ([id1_0_0_] : [BIGINT]) - [28]
2020-11-25 20:17:22,931 TRACE  [main] BasicExtractor: extracted value ([id1_0_1_] : [BIGINT]) - [29]
2020-11-25 20:17:22,932 TRACE  [main] BasicExtractor: extracted value ([binary_v2_0_1_] : [BLOB]) - [null]
2020-11-25 20:17:22,932 TRACE  [main] BasicExtractor: extracted value ([float_va3_0_1_] : [DOUBLE]) - [2.718281828459045]
2020-11-25 20:17:22,932 TRACE  [main] BasicExtractor: extracted value ([i4_0_1_] : [INTEGER]) - [0]
2020-11-25 20:17:22,933 TRACE  [main] BasicExtractor: extracted value ([is_condi5_0_1_] : [BOOLEAN]) - [true]
2020-11-25 20:17:22,934 TRACE  [main] BasicExtractor: extracted value ([j6_0_1_] : [INTEGER]) - [1]
2020-11-25 20:17:22,934 TRACE  [main] BasicExtractor: extracted value ([problem_7_0_1_] : [BIGINT]) - [5]
2020-11-25 20:17:22,934 TRACE  [main] BasicExtractor: extracted value ([problem_7_0_0_] : [BIGINT]) - [5]
2020-11-25 20:17:22,934 TRACE  [main] BasicExtractor: extracted value ([id1_0_0_] : [BIGINT]) - [29]
2020-11-25 20:17:22,934 TRACE  [main] BasicExtractor: extracted value ([id1_0_1_] : [BIGINT]) - [30]
2020-11-25 20:17:22,935 TRACE  [main] BasicExtractor: extracted value ([binary_v2_0_1_] : [BLOB]) - [null]
2020-11-25 20:17:22,935 TRACE  [main] BasicExtractor: extracted value ([float_va3_0_1_] : [DOUBLE]) - [7.38905609893065]
2020-11-25 20:17:22,935 TRACE  [main] BasicExtractor: extracted value ([i4_0_1_] : [INTEGER]) - [0]
2020-11-25 20:17:22,935 TRACE  [main] BasicExtractor: extracted value ([is_condi5_0_1_] : [BOOLEAN]) - [true]
2020-11-25 20:17:22,936 TRACE  [main] BasicExtractor: extracted value ([j6_0_1_] : [INTEGER]) - [2]
2020-11-25 20:17:22,936 TRACE  [main] BasicExtractor: extracted value ([problem_7_0_1_] : [BIGINT]) - [5]
2020-11-25 20:17:22,936 TRACE  [main] BasicExtractor: extracted value ([problem_7_0_0_] : [BIGINT]) - [5]
2020-11-25 20:17:22,936 TRACE  [main] BasicExtractor: extracted value ([id1_0_0_] : [BIGINT]) - [30]
2020-11-25 20:17:22,936 TRACE  [main] BasicExtractor: extracted value ([id1_0_1_] : [BIGINT]) - [31]
2020-11-25 20:17:22,937 TRACE  [main] BasicExtractor: extracted value ([binary_v2_0_1_] : [BLOB]) - [null]
2020-11-25 20:17:22,937 TRACE  [main] BasicExtractor: extracted value ([float_va3_0_1_] : [DOUBLE]) - [20.085536923187668]
2020-11-25 20:17:22,937 TRACE  [main] BasicExtractor: extracted value ([i4_0_1_] : [INTEGER]) - [0]
2020-11-25 20:17:22,938 TRACE  [main] BasicExtractor: extracted value ([is_condi5_0_1_] : [BOOLEAN]) - [true]
2020-11-25 20:17:22,938 TRACE  [main] BasicExtractor: extracted value ([j6_0_1_] : [INTEGER]) - [3]
2020-11-25 20:17:22,938 TRACE  [main] BasicExtractor: extracted value ([problem_7_0_1_] : [BIGINT]) - [5]
2020-11-25 20:17:22,939 TRACE  [main] BasicExtractor: extracted value ([problem_7_0_0_] : [BIGINT]) - [5]
2020-11-25 20:17:22,939 TRACE  [main] BasicExtractor: extracted value ([id1_0_0_] : [BIGINT]) - [31]
2020-11-25 20:17:22,939 TRACE  [main] BasicExtractor: extracted value ([id1_0_1_] : [BIGINT]) - [32]
2020-11-25 20:17:22,940 TRACE  [main] BasicExtractor: extracted value ([binary_v2_0_1_] : [BLOB]) - [null]
2020-11-25 20:17:22,940 TRACE  [main] BasicExtractor: extracted value ([float_va3_0_1_] : [DOUBLE]) - [54.598150033144236]
2020-11-25 20:17:22,940 TRACE  [main] BasicExtractor: extracted value ([i4_0_1_] : [INTEGER]) - [0]
2020-11-25 20:17:22,941 TRACE  [main] BasicExtractor: extracted value ([is_condi5_0_1_] : [BOOLEAN]) - [true]
2020-11-25 20:17:22,941 TRACE  [main] BasicExtractor: extracted value ([j6_0_1_] : [INTEGER]) - [4]
2020-11-25 20:17:22,941 TRACE  [main] BasicExtractor: extracted value ([problem_7_0_1_] : [BIGINT]) - [5]
2020-11-25 20:17:22,941 TRACE  [main] BasicExtractor: extracted value ([problem_7_0_0_] : [BIGINT]) - [5]
2020-11-25 20:17:22,941 TRACE  [main] BasicExtractor: extracted value ([id1_0_0_] : [BIGINT]) - [32]
2020-11-25 20:17:22,942 TRACE  [main] BasicExtractor: extracted value ([id1_0_1_] : [BIGINT]) - [33]
2020-11-25 20:17:22,942 TRACE  [main] BasicExtractor: extracted value ([binary_v2_0_1_] : [BLOB]) - [null]
2020-11-25 20:17:22,943 TRACE  [main] BasicExtractor: extracted value ([float_va3_0_1_] : [DOUBLE]) - [148.4131591025766]
2020-11-25 20:17:22,944 TRACE  [main] BasicExtractor: extracted value ([i4_0_1_] : [INTEGER]) - [0]
2020-11-25 20:17:22,944 TRACE  [main] BasicExtractor: extracted value ([is_condi5_0_1_] : [BOOLEAN]) - [true]
2020-11-25 20:17:22,944 TRACE  [main] BasicExtractor: extracted value ([j6_0_1_] : [INTEGER]) - [5]
2020-11-25 20:17:22,945 TRACE  [main] BasicExtractor: extracted value ([problem_7_0_1_] : [BIGINT]) - [5]
2020-11-25 20:17:22,945 TRACE  [main] BasicExtractor: extracted value ([problem_7_0_0_] : [BIGINT]) - [5]
2020-11-25 20:17:22,946 TRACE  [main] BasicExtractor: extracted value ([id1_0_0_] : [BIGINT]) - [33]
2020-11-25 20:17:22,954 TRACE  [main] BasicBinder: binding parameter [1] as [BIGINT] - [5]
2020-11-25 20:17:22,955 TRACE  [main] BasicBinder: binding parameter [1] as [BIGINT] - [4]
2020-11-25 20:17:22,956 TRACE  [main] BasicExtractor: extracted value ([id1_0_1_] : [BIGINT]) - [18]
2020-11-25 20:17:22,957 TRACE  [main] BasicExtractor: extracted value ([binary_v2_0_1_] : [BLOB]) - [null]
2020-11-25 20:17:22,957 TRACE  [main] BasicExtractor: extracted value ([float_va3_0_1_] : [DOUBLE]) - [0.0]
2020-11-25 20:17:22,957 TRACE  [main] BasicExtractor: extracted value ([i4_0_1_] : [INTEGER]) - [0]
2020-11-25 20:17:22,957 TRACE  [main] BasicExtractor: extracted value ([is_condi5_0_1_] : [BOOLEAN]) - [true]
2020-11-25 20:17:22,957 TRACE  [main] BasicExtractor: extracted value ([j6_0_1_] : [INTEGER]) - [0]
2020-11-25 20:17:22,957 TRACE  [main] BasicExtractor: extracted value ([problem_7_0_1_] : [BIGINT]) - [4]
2020-11-25 20:17:22,957 TRACE  [main] BasicExtractor: extracted value ([problem_7_0_0_] : [BIGINT]) - [4]
2020-11-25 20:17:22,958 TRACE  [main] BasicExtractor: extracted value ([id1_0_0_] : [BIGINT]) - [18]
2020-11-25 20:17:22,958 TRACE  [main] BasicExtractor: extracted value ([id1_0_1_] : [BIGINT]) - [19]
2020-11-25 20:17:22,958 TRACE  [main] BasicExtractor: extracted value ([binary_v2_0_1_] : [BLOB]) - [null]
2020-11-25 20:17:22,958 TRACE  [main] BasicExtractor: extracted value ([float_va3_0_1_] : [DOUBLE]) - [1.0]
2020-11-25 20:17:22,959 TRACE  [main] BasicExtractor: extracted value ([i4_0_1_] : [INTEGER]) - [0]
2020-11-25 20:17:22,959 TRACE  [main] BasicExtractor: extracted value ([is_condi5_0_1_] : [BOOLEAN]) - [true]
2020-11-25 20:17:22,959 TRACE  [main] BasicExtractor: extracted value ([j6_0_1_] : [INTEGER]) - [1]
2020-11-25 20:17:22,959 TRACE  [main] BasicExtractor: extracted value ([problem_7_0_1_] : [BIGINT]) - [4]
2020-11-25 20:17:22,959 TRACE  [main] BasicExtractor: extracted value ([problem_7_0_0_] : [BIGINT]) - [4]
2020-11-25 20:17:22,959 TRACE  [main] BasicExtractor: extracted value ([id1_0_0_] : [BIGINT]) - [19]
2020-11-25 20:17:22,960 TRACE  [main] BasicExtractor: extracted value ([id1_0_1_] : [BIGINT]) - [20]
2020-11-25 20:17:22,960 TRACE  [main] BasicExtractor: extracted value ([binary_v2_0_1_] : [BLOB]) - [null]
2020-11-25 20:17:22,960 TRACE  [main] BasicExtractor: extracted value ([float_va3_0_1_] : [DOUBLE]) - [2.0]
2020-11-25 20:17:22,960 TRACE  [main] BasicExtractor: extracted value ([i4_0_1_] : [INTEGER]) - [0]
2020-11-25 20:17:22,961 TRACE  [main] BasicExtractor: extracted value ([is_condi5_0_1_] : [BOOLEAN]) - [true]
2020-11-25 20:17:22,961 TRACE  [main] BasicExtractor: extracted value ([j6_0_1_] : [INTEGER]) - [2]
2020-11-25 20:17:22,961 TRACE  [main] BasicExtractor: extracted value ([problem_7_0_1_] : [BIGINT]) - [4]
2020-11-25 20:17:22,962 TRACE  [main] BasicExtractor: extracted value ([problem_7_0_0_] : [BIGINT]) - [4]
2020-11-25 20:17:22,962 TRACE  [main] BasicExtractor: extracted value ([id1_0_0_] : [BIGINT]) - [20]
2020-11-25 20:17:22,962 TRACE  [main] BasicExtractor: extracted value ([id1_0_1_] : [BIGINT]) - [21]
2020-11-25 20:17:22,963 TRACE  [main] BasicExtractor: extracted value ([binary_v2_0_1_] : [BLOB]) - [null]
2020-11-25 20:17:22,963 TRACE  [main] BasicExtractor: extracted value ([float_va3_0_1_] : [DOUBLE]) - [3.0]
2020-11-25 20:17:22,964 TRACE  [main] BasicExtractor: extracted value ([i4_0_1_] : [INTEGER]) - [0]
2020-11-25 20:17:22,964 TRACE  [main] BasicExtractor: extracted value ([is_condi5_0_1_] : [BOOLEAN]) - [true]
2020-11-25 20:17:22,965 TRACE  [main] BasicExtractor: extracted value ([j6_0_1_] : [INTEGER]) - [3]
2020-11-25 20:17:22,965 TRACE  [main] BasicExtractor: extracted value ([problem_7_0_1_] : [BIGINT]) - [4]
2020-11-25 20:17:22,966 TRACE  [main] BasicExtractor: extracted value ([problem_7_0_0_] : [BIGINT]) - [4]
2020-11-25 20:17:22,967 TRACE  [main] BasicExtractor: extracted value ([id1_0_0_] : [BIGINT]) - [21]
2020-11-25 20:17:22,967 TRACE  [main] BasicExtractor: extracted value ([id1_0_1_] : [BIGINT]) - [22]
2020-11-25 20:17:22,968 TRACE  [main] BasicExtractor: extracted value ([binary_v2_0_1_] : [BLOB]) - [null]
2020-11-25 20:17:22,968 TRACE  [main] BasicExtractor: extracted value ([float_va3_0_1_] : [DOUBLE]) - [4.0]
2020-11-25 20:17:22,968 TRACE  [main] BasicExtractor: extracted value ([i4_0_1_] : [INTEGER]) - [0]
2020-11-25 20:17:22,969 TRACE  [main] BasicExtractor: extracted value ([is_condi5_0_1_] : [BOOLEAN]) - [true]
2020-11-25 20:17:22,969 TRACE  [main] BasicExtractor: extracted value ([j6_0_1_] : [INTEGER]) - [4]
2020-11-25 20:17:22,969 TRACE  [main] BasicExtractor: extracted value ([problem_7_0_1_] : [BIGINT]) - [4]
2020-11-25 20:17:22,969 TRACE  [main] BasicExtractor: extracted value ([problem_7_0_0_] : [BIGINT]) - [4]
2020-11-25 20:17:22,969 TRACE  [main] BasicExtractor: extracted value ([id1_0_0_] : [BIGINT]) - [22]
2020-11-25 20:17:22,970 TRACE  [main] BasicExtractor: extracted value ([id1_0_1_] : [BIGINT]) - [23]
2020-11-25 20:17:22,970 TRACE  [main] BasicExtractor: extracted value ([binary_v2_0_1_] : [BLOB]) - [null]
2020-11-25 20:17:22,970 TRACE  [main] BasicExtractor: extracted value ([float_va3_0_1_] : [DOUBLE]) - [5.0]
2020-11-25 20:17:22,970 TRACE  [main] BasicExtractor: extracted value ([i4_0_1_] : [INTEGER]) - [0]
2020-11-25 20:17:22,971 TRACE  [main] BasicExtractor: extracted value ([is_condi5_0_1_] : [BOOLEAN]) - [true]
2020-11-25 20:17:22,971 TRACE  [main] BasicExtractor: extracted value ([j6_0_1_] : [INTEGER]) - [5]
2020-11-25 20:17:22,971 TRACE  [main] BasicExtractor: extracted value ([problem_7_0_1_] : [BIGINT]) - [4]
2020-11-25 20:17:22,972 TRACE  [main] BasicExtractor: extracted value ([problem_7_0_0_] : [BIGINT]) - [4]
2020-11-25 20:17:22,973 TRACE  [main] BasicExtractor: extracted value ([id1_0_0_] : [BIGINT]) - [23]
2020-11-25 20:17:22,973 TRACE  [main] BasicExtractor: extracted value ([id1_0_1_] : [BIGINT]) - [24]
2020-11-25 20:17:22,974 TRACE  [main] BasicExtractor: extracted value ([binary_v2_0_1_] : [BLOB]) - [null]
2020-11-25 20:17:22,974 TRACE  [main] BasicExtractor: extracted value ([float_va3_0_1_] : [DOUBLE]) - [6.0]
2020-11-25 20:17:22,975 TRACE  [main] BasicExtractor: extracted value ([i4_0_1_] : [INTEGER]) - [0]
2020-11-25 20:17:22,975 TRACE  [main] BasicExtractor: extracted value ([is_condi5_0_1_] : [BOOLEAN]) - [true]
2020-11-25 20:17:22,976 TRACE  [main] BasicExtractor: extracted value ([j6_0_1_] : [INTEGER]) - [6]
2020-11-25 20:17:22,976 TRACE  [main] BasicExtractor: extracted value ([problem_7_0_1_] : [BIGINT]) - [4]
2020-11-25 20:17:22,977 TRACE  [main] BasicExtractor: extracted value ([problem_7_0_0_] : [BIGINT]) - [4]
2020-11-25 20:17:22,977 TRACE  [main] BasicExtractor: extracted value ([id1_0_0_] : [BIGINT]) - [24]
2020-11-25 20:17:22,977 TRACE  [main] BasicExtractor: extracted value ([id1_0_1_] : [BIGINT]) - [25]
2020-11-25 20:17:22,978 TRACE  [main] BasicExtractor: extracted value ([binary_v2_0_1_] : [BLOB]) - [null]
2020-11-25 20:17:22,978 TRACE  [main] BasicExtractor: extracted value ([float_va3_0_1_] : [DOUBLE]) - [7.0]
2020-11-25 20:17:22,978 TRACE  [main] BasicExtractor: extracted value ([i4_0_1_] : [INTEGER]) - [0]
2020-11-25 20:17:22,978 TRACE  [main] BasicExtractor: extracted value ([is_condi5_0_1_] : [BOOLEAN]) - [true]
2020-11-25 20:17:22,978 TRACE  [main] BasicExtractor: extracted value ([j6_0_1_] : [INTEGER]) - [7]
2020-11-25 20:17:22,978 TRACE  [main] BasicExtractor: extracted value ([problem_7_0_1_] : [BIGINT]) - [4]
2020-11-25 20:17:22,979 TRACE  [main] BasicExtractor: extracted value ([problem_7_0_0_] : [BIGINT]) - [4]
2020-11-25 20:17:22,979 TRACE  [main] BasicExtractor: extracted value ([id1_0_0_] : [BIGINT]) - [25]
2020-11-25 20:17:22,979 TRACE  [main] BasicExtractor: extracted value ([id1_0_1_] : [BIGINT]) - [26]
2020-11-25 20:17:22,980 TRACE  [main] BasicExtractor: extracted value ([binary_v2_0_1_] : [BLOB]) - [null]
2020-11-25 20:17:22,981 TRACE  [main] BasicExtractor: extracted value ([float_va3_0_1_] : [DOUBLE]) - [8.0]
2020-11-25 20:17:22,981 TRACE  [main] BasicExtractor: extracted value ([i4_0_1_] : [INTEGER]) - [0]
2020-11-25 20:17:22,981 TRACE  [main] BasicExtractor: extracted value ([is_condi5_0_1_] : [BOOLEAN]) - [true]
2020-11-25 20:17:22,982 TRACE  [main] BasicExtractor: extracted value ([j6_0_1_] : [INTEGER]) - [8]
2020-11-25 20:17:22,982 TRACE  [main] BasicExtractor: extracted value ([problem_7_0_1_] : [BIGINT]) - [4]
2020-11-25 20:17:22,982 TRACE  [main] BasicExtractor: extracted value ([problem_7_0_0_] : [BIGINT]) - [4]
2020-11-25 20:17:22,983 TRACE  [main] BasicExtractor: extracted value ([id1_0_0_] : [BIGINT]) - [26]
2020-11-25 20:17:22,983 TRACE  [main] BasicExtractor: extracted value ([id1_0_1_] : [BIGINT]) - [27]
2020-11-25 20:17:22,984 TRACE  [main] BasicExtractor: extracted value ([binary_v2_0_1_] : [BLOB]) - [null]
2020-11-25 20:17:22,984 TRACE  [main] BasicExtractor: extracted value ([float_va3_0_1_] : [DOUBLE]) - [9.0]
2020-11-25 20:17:22,984 TRACE  [main] BasicExtractor: extracted value ([i4_0_1_] : [INTEGER]) - [0]
2020-11-25 20:17:22,984 TRACE  [main] BasicExtractor: extracted value ([is_condi5_0_1_] : [BOOLEAN]) - [true]
2020-11-25 20:17:22,984 TRACE  [main] BasicExtractor: extracted value ([j6_0_1_] : [INTEGER]) - [9]
2020-11-25 20:17:22,985 TRACE  [main] BasicExtractor: extracted value ([problem_7_0_1_] : [BIGINT]) - [4]
2020-11-25 20:17:22,985 TRACE  [main] BasicExtractor: extracted value ([problem_7_0_0_] : [BIGINT]) - [4]
2020-11-25 20:17:22,985 TRACE  [main] BasicExtractor: extracted value ([id1_0_0_] : [BIGINT]) - [27]
2020-11-25 20:17:22,988 TRACE  [main] BasicBinder: binding parameter [1] as [BIGINT] - [4]
2020-11-25 20:17:22,989 TRACE  [main] BasicBinder: binding parameter [1] as [BIGINT] - [3]
2020-11-25 20:17:22,990 TRACE  [main] BasicExtractor: extracted value ([id1_0_1_] : [BIGINT]) - [12]
2020-11-25 20:17:22,990 TRACE  [main] BasicExtractor: extracted value ([binary_v2_0_1_] : [BLOB]) - [null]
2020-11-25 20:17:22,990 TRACE  [main] BasicExtractor: extracted value ([float_va3_0_1_] : [DOUBLE]) - [1.0]
2020-11-25 20:17:22,991 TRACE  [main] BasicExtractor: extracted value ([i4_0_1_] : [INTEGER]) - [0]
2020-11-25 20:17:22,991 TRACE  [main] BasicExtractor: extracted value ([is_condi5_0_1_] : [BOOLEAN]) - [true]
2020-11-25 20:17:22,991 TRACE  [main] BasicExtractor: extracted value ([j6_0_1_] : [INTEGER]) - [0]
2020-11-25 20:17:22,994 TRACE  [main] BasicExtractor: extracted value ([problem_7_0_1_] : [BIGINT]) - [3]
2020-11-25 20:17:22,995 TRACE  [main] BasicExtractor: extracted value ([problem_7_0_0_] : [BIGINT]) - [3]
2020-11-25 20:17:22,995 TRACE  [main] BasicExtractor: extracted value ([id1_0_0_] : [BIGINT]) - [12]
2020-11-25 20:17:22,996 TRACE  [main] BasicExtractor: extracted value ([id1_0_1_] : [BIGINT]) - [13]
2020-11-25 20:17:22,996 TRACE  [main] BasicExtractor: extracted value ([binary_v2_0_1_] : [BLOB]) - [null]
2020-11-25 20:17:22,997 TRACE  [main] BasicExtractor: extracted value ([float_va3_0_1_] : [DOUBLE]) - [2.718281828459045]
2020-11-25 20:17:22,998 TRACE  [main] BasicExtractor: extracted value ([i4_0_1_] : [INTEGER]) - [0]
2020-11-25 20:17:22,998 TRACE  [main] BasicExtractor: extracted value ([is_condi5_0_1_] : [BOOLEAN]) - [true]
2020-11-25 20:17:22,998 TRACE  [main] BasicExtractor: extracted value ([j6_0_1_] : [INTEGER]) - [1]
2020-11-25 20:17:22,999 TRACE  [main] BasicExtractor: extracted value ([problem_7_0_1_] : [BIGINT]) - [3]
2020-11-25 20:17:22,999 TRACE  [main] BasicExtractor: extracted value ([problem_7_0_0_] : [BIGINT]) - [3]
2020-11-25 20:17:22,999 TRACE  [main] BasicExtractor: extracted value ([id1_0_0_] : [BIGINT]) - [13]
2020-11-25 20:17:23,000 TRACE  [main] BasicExtractor: extracted value ([id1_0_1_] : [BIGINT]) - [14]
2020-11-25 20:17:23,000 TRACE  [main] BasicExtractor: extracted value ([binary_v2_0_1_] : [BLOB]) - [null]
2020-11-25 20:17:23,001 TRACE  [main] BasicExtractor: extracted value ([float_va3_0_1_] : [DOUBLE]) - [7.38905609893065]
2020-11-25 20:17:23,001 TRACE  [main] BasicExtractor: extracted value ([i4_0_1_] : [INTEGER]) - [0]
2020-11-25 20:17:23,002 TRACE  [main] BasicExtractor: extracted value ([is_condi5_0_1_] : [BOOLEAN]) - [true]
2020-11-25 20:17:23,002 TRACE  [main] BasicExtractor: extracted value ([j6_0_1_] : [INTEGER]) - [2]
2020-11-25 20:17:23,002 TRACE  [main] BasicExtractor: extracted value ([problem_7_0_1_] : [BIGINT]) - [3]
2020-11-25 20:17:23,003 TRACE  [main] BasicExtractor: extracted value ([problem_7_0_0_] : [BIGINT]) - [3]
2020-11-25 20:17:23,003 TRACE  [main] BasicExtractor: extracted value ([id1_0_0_] : [BIGINT]) - [14]
2020-11-25 20:17:23,004 TRACE  [main] BasicExtractor: extracted value ([id1_0_1_] : [BIGINT]) - [15]
2020-11-25 20:17:23,004 TRACE  [main] BasicExtractor: extracted value ([binary_v2_0_1_] : [BLOB]) - [null]
2020-11-25 20:17:23,005 TRACE  [main] BasicExtractor: extracted value ([float_va3_0_1_] : [DOUBLE]) - [20.085536923187668]
2020-11-25 20:17:23,005 TRACE  [main] BasicExtractor: extracted value ([i4_0_1_] : [INTEGER]) - [0]
2020-11-25 20:17:23,006 TRACE  [main] BasicExtractor: extracted value ([is_condi5_0_1_] : [BOOLEAN]) - [true]
2020-11-25 20:17:23,006 TRACE  [main] BasicExtractor: extracted value ([j6_0_1_] : [INTEGER]) - [3]
2020-11-25 20:17:23,006 TRACE  [main] BasicExtractor: extracted value ([problem_7_0_1_] : [BIGINT]) - [3]
2020-11-25 20:17:23,007 TRACE  [main] BasicExtractor: extracted value ([problem_7_0_0_] : [BIGINT]) - [3]
2020-11-25 20:17:23,007 TRACE  [main] BasicExtractor: extracted value ([id1_0_0_] : [BIGINT]) - [15]
2020-11-25 20:17:23,007 TRACE  [main] BasicExtractor: extracted value ([id1_0_1_] : [BIGINT]) - [16]
2020-11-25 20:17:23,008 TRACE  [main] BasicExtractor: extracted value ([binary_v2_0_1_] : [BLOB]) - [null]
2020-11-25 20:17:23,008 TRACE  [main] BasicExtractor: extracted value ([float_va3_0_1_] : [DOUBLE]) - [54.598150033144236]
2020-11-25 20:17:23,009 TRACE  [main] BasicExtractor: extracted value ([i4_0_1_] : [INTEGER]) - [0]
2020-11-25 20:17:23,009 TRACE  [main] BasicExtractor: extracted value ([is_condi5_0_1_] : [BOOLEAN]) - [true]
2020-11-25 20:17:23,009 TRACE  [main] BasicExtractor: extracted value ([j6_0_1_] : [INTEGER]) - [4]
2020-11-25 20:17:23,009 TRACE  [main] BasicExtractor: extracted value ([problem_7_0_1_] : [BIGINT]) - [3]
2020-11-25 20:17:23,010 TRACE  [main] BasicExtractor: extracted value ([problem_7_0_0_] : [BIGINT]) - [3]
2020-11-25 20:17:23,010 TRACE  [main] BasicExtractor: extracted value ([id1_0_0_] : [BIGINT]) - [16]
2020-11-25 20:17:23,011 TRACE  [main] BasicExtractor: extracted value ([id1_0_1_] : [BIGINT]) - [17]
2020-11-25 20:17:23,011 TRACE  [main] BasicExtractor: extracted value ([binary_v2_0_1_] : [BLOB]) - [null]
2020-11-25 20:17:23,012 TRACE  [main] BasicExtractor: extracted value ([float_va3_0_1_] : [DOUBLE]) - [148.4131591025766]
2020-11-25 20:17:23,012 TRACE  [main] BasicExtractor: extracted value ([i4_0_1_] : [INTEGER]) - [0]
2020-11-25 20:17:23,012 TRACE  [main] BasicExtractor: extracted value ([is_condi5_0_1_] : [BOOLEAN]) - [true]
2020-11-25 20:17:23,013 TRACE  [main] BasicExtractor: extracted value ([j6_0_1_] : [INTEGER]) - [5]
2020-11-25 20:17:23,013 TRACE  [main] BasicExtractor: extracted value ([problem_7_0_1_] : [BIGINT]) - [3]
2020-11-25 20:17:23,013 TRACE  [main] BasicExtractor: extracted value ([problem_7_0_0_] : [BIGINT]) - [3]
2020-11-25 20:17:23,014 TRACE  [main] BasicExtractor: extracted value ([id1_0_0_] : [BIGINT]) - [17]
2020-11-25 20:17:23,016 TRACE  [main] BasicBinder: binding parameter [1] as [BIGINT] - [3]
2020-11-25 20:17:23,017 TRACE  [main] BasicBinder: binding parameter [1] as [BIGINT] - [2]
2020-11-25 20:17:23,018 TRACE  [main] BasicExtractor: extracted value ([id1_0_1_] : [BIGINT]) - [6]
2020-11-25 20:17:23,018 TRACE  [main] BasicExtractor: extracted value ([binary_v2_0_1_] : [BLOB]) - [null]
2020-11-25 20:17:23,018 TRACE  [main] BasicExtractor: extracted value ([float_va3_0_1_] : [DOUBLE]) - [1.01]
2020-11-25 20:17:23,019 TRACE  [main] BasicExtractor: extracted value ([i4_0_1_] : [INTEGER]) - [0]
2020-11-25 20:17:23,019 TRACE  [main] BasicExtractor: extracted value ([is_condi5_0_1_] : [BOOLEAN]) - [true]
2020-11-25 20:17:23,019 TRACE  [main] BasicExtractor: extracted value ([j6_0_1_] : [INTEGER]) - [0]
2020-11-25 20:17:23,019 TRACE  [main] BasicExtractor: extracted value ([problem_7_0_1_] : [BIGINT]) - [2]
2020-11-25 20:17:23,019 TRACE  [main] BasicExtractor: extracted value ([problem_7_0_0_] : [BIGINT]) - [2]
2020-11-25 20:17:23,020 TRACE  [main] BasicExtractor: extracted value ([id1_0_0_] : [BIGINT]) - [6]
2020-11-25 20:17:23,020 TRACE  [main] BasicExtractor: extracted value ([id1_0_1_] : [BIGINT]) - [7]
2020-11-25 20:17:23,021 TRACE  [main] BasicExtractor: extracted value ([binary_v2_0_1_] : [BLOB]) - [null]
2020-11-25 20:17:23,021 TRACE  [main] BasicExtractor: extracted value ([float_va3_0_1_] : [DOUBLE]) - [2.718281828459045]
2020-11-25 20:17:23,022 TRACE  [main] BasicExtractor: extracted value ([i4_0_1_] : [INTEGER]) - [0]
2020-11-25 20:17:23,022 TRACE  [main] BasicExtractor: extracted value ([is_condi5_0_1_] : [BOOLEAN]) - [true]
2020-11-25 20:17:23,022 TRACE  [main] BasicExtractor: extracted value ([j6_0_1_] : [INTEGER]) - [1]
2020-11-25 20:17:23,023 TRACE  [main] BasicExtractor: extracted value ([problem_7_0_1_] : [BIGINT]) - [2]
2020-11-25 20:17:23,023 TRACE  [main] BasicExtractor: extracted value ([problem_7_0_0_] : [BIGINT]) - [2]
2020-11-25 20:17:23,023 TRACE  [main] BasicExtractor: extracted value ([id1_0_0_] : [BIGINT]) - [7]
2020-11-25 20:17:23,023 TRACE  [main] BasicExtractor: extracted value ([id1_0_1_] : [BIGINT]) - [8]
2020-11-25 20:17:23,024 TRACE  [main] BasicExtractor: extracted value ([binary_v2_0_1_] : [BLOB]) - [null]
2020-11-25 20:17:23,024 TRACE  [main] BasicExtractor: extracted value ([float_va3_0_1_] : [DOUBLE]) - [7.38905609893065]
2020-11-25 20:17:23,024 TRACE  [main] BasicExtractor: extracted value ([i4_0_1_] : [INTEGER]) - [0]
2020-11-25 20:17:23,025 TRACE  [main] BasicExtractor: extracted value ([is_condi5_0_1_] : [BOOLEAN]) - [true]
2020-11-25 20:17:23,025 TRACE  [main] BasicExtractor: extracted value ([j6_0_1_] : [INTEGER]) - [2]
2020-11-25 20:17:23,025 TRACE  [main] BasicExtractor: extracted value ([problem_7_0_1_] : [BIGINT]) - [2]
2020-11-25 20:17:23,025 TRACE  [main] BasicExtractor: extracted value ([problem_7_0_0_] : [BIGINT]) - [2]
2020-11-25 20:17:23,025 TRACE  [main] BasicExtractor: extracted value ([id1_0_0_] : [BIGINT]) - [8]
2020-11-25 20:17:23,026 TRACE  [main] BasicExtractor: extracted value ([id1_0_1_] : [BIGINT]) - [9]
2020-11-25 20:17:23,026 TRACE  [main] BasicExtractor: extracted value ([binary_v2_0_1_] : [BLOB]) - [null]
2020-11-25 20:17:23,026 TRACE  [main] BasicExtractor: extracted value ([float_va3_0_1_] : [DOUBLE]) - [20.085536923187668]
2020-11-25 20:17:23,026 TRACE  [main] BasicExtractor: extracted value ([i4_0_1_] : [INTEGER]) - [0]
2020-11-25 20:17:23,026 TRACE  [main] BasicExtractor: extracted value ([is_condi5_0_1_] : [BOOLEAN]) - [true]
2020-11-25 20:17:23,026 TRACE  [main] BasicExtractor: extracted value ([j6_0_1_] : [INTEGER]) - [3]
2020-11-25 20:17:23,027 TRACE  [main] BasicExtractor: extracted value ([problem_7_0_1_] : [BIGINT]) - [2]
2020-11-25 20:17:23,027 TRACE  [main] BasicExtractor: extracted value ([problem_7_0_0_] : [BIGINT]) - [2]
2020-11-25 20:17:23,027 TRACE  [main] BasicExtractor: extracted value ([id1_0_0_] : [BIGINT]) - [9]
2020-11-25 20:17:23,027 TRACE  [main] BasicExtractor: extracted value ([id1_0_1_] : [BIGINT]) - [10]
2020-11-25 20:17:23,027 TRACE  [main] BasicExtractor: extracted value ([binary_v2_0_1_] : [BLOB]) - [null]
2020-11-25 20:17:23,027 TRACE  [main] BasicExtractor: extracted value ([float_va3_0_1_] : [DOUBLE]) - [54.598150033144236]
2020-11-25 20:17:23,028 TRACE  [main] BasicExtractor: extracted value ([i4_0_1_] : [INTEGER]) - [0]
2020-11-25 20:17:23,028 TRACE  [main] BasicExtractor: extracted value ([is_condi5_0_1_] : [BOOLEAN]) - [true]
2020-11-25 20:17:23,028 TRACE  [main] BasicExtractor: extracted value ([j6_0_1_] : [INTEGER]) - [4]
2020-11-25 20:17:23,028 TRACE  [main] BasicExtractor: extracted value ([problem_7_0_1_] : [BIGINT]) - [2]
2020-11-25 20:17:23,028 TRACE  [main] BasicExtractor: extracted value ([problem_7_0_0_] : [BIGINT]) - [2]
2020-11-25 20:17:23,028 TRACE  [main] BasicExtractor: extracted value ([id1_0_0_] : [BIGINT]) - [10]
2020-11-25 20:17:23,029 TRACE  [main] BasicExtractor: extracted value ([id1_0_1_] : [BIGINT]) - [11]
2020-11-25 20:17:23,029 TRACE  [main] BasicExtractor: extracted value ([binary_v2_0_1_] : [BLOB]) - [null]
2020-11-25 20:17:23,029 TRACE  [main] BasicExtractor: extracted value ([float_va3_0_1_] : [DOUBLE]) - [148.4131591025766]
2020-11-25 20:17:23,030 TRACE  [main] BasicExtractor: extracted value ([i4_0_1_] : [INTEGER]) - [0]
2020-11-25 20:17:23,030 TRACE  [main] BasicExtractor: extracted value ([is_condi5_0_1_] : [BOOLEAN]) - [true]
2020-11-25 20:17:23,030 TRACE  [main] BasicExtractor: extracted value ([j6_0_1_] : [INTEGER]) - [5]
2020-11-25 20:17:23,030 TRACE  [main] BasicExtractor: extracted value ([problem_7_0_1_] : [BIGINT]) - [2]
2020-11-25 20:17:23,031 TRACE  [main] BasicExtractor: extracted value ([problem_7_0_0_] : [BIGINT]) - [2]
2020-11-25 20:17:23,031 TRACE  [main] BasicExtractor: extracted value ([id1_0_0_] : [BIGINT]) - [11]
2020-11-25 20:17:23,032 TRACE  [main] BasicBinder: binding parameter [1] as [BIGINT] - [2]
2020-11-25 20:17:23,034 TRACE  [main] BasicBinder: binding parameter [1] as [BIGINT] - [1]
2020-11-25 20:17:23,035 TRACE  [main] BasicExtractor: extracted value ([id1_0_1_] : [BIGINT]) - [1]
2020-11-25 20:17:23,036 TRACE  [main] BasicExtractor: extracted value ([binary_v2_0_1_] : [BLOB]) - [null]
2020-11-25 20:17:23,036 TRACE  [main] BasicExtractor: extracted value ([float_va3_0_1_] : [DOUBLE]) - [1.0]
2020-11-25 20:17:23,037 TRACE  [main] BasicExtractor: extracted value ([i4_0_1_] : [INTEGER]) - [0]
2020-11-25 20:17:23,037 TRACE  [main] BasicExtractor: extracted value ([is_condi5_0_1_] : [BOOLEAN]) - [true]
2020-11-25 20:17:23,037 TRACE  [main] BasicExtractor: extracted value ([j6_0_1_] : [INTEGER]) - [0]
2020-11-25 20:17:23,037 TRACE  [main] BasicExtractor: extracted value ([problem_7_0_1_] : [BIGINT]) - [1]
2020-11-25 20:17:23,037 TRACE  [main] BasicExtractor: extracted value ([problem_7_0_0_] : [BIGINT]) - [1]
2020-11-25 20:17:23,038 TRACE  [main] BasicExtractor: extracted value ([id1_0_0_] : [BIGINT]) - [1]
2020-11-25 20:17:23,038 TRACE  [main] BasicExtractor: extracted value ([id1_0_1_] : [BIGINT]) - [2]
2020-11-25 20:17:23,038 TRACE  [main] BasicExtractor: extracted value ([binary_v2_0_1_] : [BLOB]) - [null]
2020-11-25 20:17:23,038 TRACE  [main] BasicExtractor: extracted value ([float_va3_0_1_] : [DOUBLE]) - [2.0]
2020-11-25 20:17:23,038 TRACE  [main] BasicExtractor: extracted value ([i4_0_1_] : [INTEGER]) - [0]
2020-11-25 20:17:23,038 TRACE  [main] BasicExtractor: extracted value ([is_condi5_0_1_] : [BOOLEAN]) - [true]
2020-11-25 20:17:23,039 TRACE  [main] BasicExtractor: extracted value ([j6_0_1_] : [INTEGER]) - [1]
2020-11-25 20:17:23,039 TRACE  [main] BasicExtractor: extracted value ([problem_7_0_1_] : [BIGINT]) - [1]
2020-11-25 20:17:23,039 TRACE  [main] BasicExtractor: extracted value ([problem_7_0_0_] : [BIGINT]) - [1]
2020-11-25 20:17:23,039 TRACE  [main] BasicExtractor: extracted value ([id1_0_0_] : [BIGINT]) - [2]
2020-11-25 20:17:23,039 TRACE  [main] BasicExtractor: extracted value ([id1_0_1_] : [BIGINT]) - [3]
2020-11-25 20:17:23,040 TRACE  [main] BasicExtractor: extracted value ([binary_v2_0_1_] : [BLOB]) - [null]
2020-11-25 20:17:23,040 TRACE  [main] BasicExtractor: extracted value ([float_va3_0_1_] : [DOUBLE]) - [1.0]
2020-11-25 20:17:23,040 TRACE  [main] BasicExtractor: extracted value ([i4_0_1_] : [INTEGER]) - [0]
2020-11-25 20:17:23,040 TRACE  [main] BasicExtractor: extracted value ([is_condi5_0_1_] : [BOOLEAN]) - [true]
2020-11-25 20:17:23,040 TRACE  [main] BasicExtractor: extracted value ([j6_0_1_] : [INTEGER]) - [2]
2020-11-25 20:17:23,041 TRACE  [main] BasicExtractor: extracted value ([problem_7_0_1_] : [BIGINT]) - [1]
2020-11-25 20:17:23,041 TRACE  [main] BasicExtractor: extracted value ([problem_7_0_0_] : [BIGINT]) - [1]
2020-11-25 20:17:23,041 TRACE  [main] BasicExtractor: extracted value ([id1_0_0_] : [BIGINT]) - [3]
2020-11-25 20:17:23,042 TRACE  [main] BasicExtractor: extracted value ([id1_0_1_] : [BIGINT]) - [4]
2020-11-25 20:17:23,042 TRACE  [main] BasicExtractor: extracted value ([binary_v2_0_1_] : [BLOB]) - [null]
2020-11-25 20:17:23,042 TRACE  [main] BasicExtractor: extracted value ([float_va3_0_1_] : [DOUBLE]) - [1.0]
2020-11-25 20:17:23,042 TRACE  [main] BasicExtractor: extracted value ([i4_0_1_] : [INTEGER]) - [0]
2020-11-25 20:17:23,042 TRACE  [main] BasicExtractor: extracted value ([is_condi5_0_1_] : [BOOLEAN]) - [false]
2020-11-25 20:17:23,042 TRACE  [main] BasicExtractor: extracted value ([j6_0_1_] : [INTEGER]) - [0]
2020-11-25 20:17:23,043 TRACE  [main] BasicExtractor: extracted value ([problem_7_0_1_] : [BIGINT]) - [1]
2020-11-25 20:17:23,043 TRACE  [main] BasicExtractor: extracted value ([problem_7_0_0_] : [BIGINT]) - [1]
2020-11-25 20:17:23,043 TRACE  [main] BasicExtractor: extracted value ([id1_0_0_] : [BIGINT]) - [4]
2020-11-25 20:17:23,043 TRACE  [main] BasicExtractor: extracted value ([id1_0_1_] : [BIGINT]) - [5]
2020-11-25 20:17:23,044 TRACE  [main] BasicExtractor: extracted value ([binary_v2_0_1_] : [BLOB]) - [null]
2020-11-25 20:17:23,044 TRACE  [main] BasicExtractor: extracted value ([float_va3_0_1_] : [DOUBLE]) - [1.0]
2020-11-25 20:17:23,044 TRACE  [main] BasicExtractor: extracted value ([i4_0_1_] : [INTEGER]) - [0]
2020-11-25 20:17:23,044 TRACE  [main] BasicExtractor: extracted value ([is_condi5_0_1_] : [BOOLEAN]) - [false]
2020-11-25 20:17:23,044 TRACE  [main] BasicExtractor: extracted value ([j6_0_1_] : [INTEGER]) - [1]
2020-11-25 20:17:23,045 TRACE  [main] BasicExtractor: extracted value ([problem_7_0_1_] : [BIGINT]) - [1]
2020-11-25 20:17:23,045 TRACE  [main] BasicExtractor: extracted value ([problem_7_0_0_] : [BIGINT]) - [1]
2020-11-25 20:17:23,045 TRACE  [main] BasicExtractor: extracted value ([id1_0_0_] : [BIGINT]) - [5]
2020-11-25 20:17:23,046 TRACE  [main] BasicBinder: binding parameter [1] as [BIGINT] - [1]
2020-11-25 20:17:23,069 TRACE  [main] BasicBinder: binding parameter [1] as [BIGINT] - [7]
2020-11-25 20:17:23,070 TRACE  [main] BasicExtractor: extracted value ([id1_1_2_] : [BIGINT]) - [null]
2020-11-25 20:17:23,070 TRACE  [main] BasicExtractor: extracted value ([id1_0_4_] : [BIGINT]) - [null]
2020-11-25 20:17:23,071 TRACE  [main] BasicExtractor: extracted value ([descript2_1_0_] : [BLOB]) - [[112, 114, 111, 98, 108, 101, 109, 100, 101, 115, 99, 114, 105, 112, 116, 105, 111, 110]]
2020-11-25 20:17:23,071 TRACE  [main] BasicExtractor: extracted value ([is_solve3_1_0_] : [BOOLEAN]) - [true]
2020-11-25 20:17:23,071 TRACE  [main] BasicExtractor: extracted value ([kind4_1_0_] : [VARCHAR]) - [POLYNOMIAL]
2020-11-25 20:17:23,071 TRACE  [main] BasicExtractor: extracted value ([matrix_d5_1_0_] : [INTEGER]) - [1]
2020-11-25 20:17:23,071 TRACE  [main] BasicExtractor: extracted value ([parent_p7_1_0_] : [BIGINT]) - [null]
2020-11-25 20:17:23,071 TRACE  [main] BasicExtractor: extracted value ([problem_6_1_0_] : [INTEGER]) - [0]
2020-11-25 20:17:23,071 TRACE  [main] BasicExtractor: extracted value ([problem_7_0_3_] : [BIGINT]) - [null]
2020-11-25 20:17:23,071 TRACE  [main] BasicExtractor: extracted value ([parent_p7_1_1_] : [BIGINT]) - [null]
2020-11-25 20:17:23,072 TRACE  [main] CollectionType: Created collection wrapper: [com.sf.back.entities.Problem.matrixes#7]
2020-11-25 20:17:23,072 TRACE  [main] BasicBinder: binding parameter [1] as [BIGINT] - [7]
2020-11-25 20:17:23,073 TRACE  [main] BasicExtractor: extracted value ([id1_0_1_] : [BIGINT]) - [40]
2020-11-25 20:17:23,073 TRACE  [main] BasicExtractor: extracted value ([binary_v2_0_1_] : [BLOB]) - [null]
2020-11-25 20:17:23,073 TRACE  [main] BasicExtractor: extracted value ([float_va3_0_1_] : [DOUBLE]) - [1.0]
2020-11-25 20:17:23,073 TRACE  [main] BasicExtractor: extracted value ([i4_0_1_] : [INTEGER]) - [0]
2020-11-25 20:17:23,073 TRACE  [main] BasicExtractor: extracted value ([is_condi5_0_1_] : [BOOLEAN]) - [true]
2020-11-25 20:17:23,074 TRACE  [main] BasicExtractor: extracted value ([j6_0_1_] : [INTEGER]) - [0]
2020-11-25 20:17:23,074 TRACE  [main] BasicExtractor: extracted value ([problem_7_0_1_] : [BIGINT]) - [7]
2020-11-25 20:17:23,074 TRACE  [main] BasicExtractor: extracted value ([problem_7_0_0_] : [BIGINT]) - [7]
2020-11-25 20:17:23,074 TRACE  [main] BasicExtractor: extracted value ([id1_0_0_] : [BIGINT]) - [40]
2020-11-25 20:17:23,074 TRACE  [main] BasicExtractor: extracted value ([id1_0_1_] : [BIGINT]) - [41]
2020-11-25 20:17:23,075 TRACE  [main] BasicExtractor: extracted value ([binary_v2_0_1_] : [BLOB]) - [null]
2020-11-25 20:17:23,075 TRACE  [main] BasicExtractor: extracted value ([float_va3_0_1_] : [DOUBLE]) - [-3.0]
2020-11-25 20:17:23,075 TRACE  [main] BasicExtractor: extracted value ([i4_0_1_] : [INTEGER]) - [0]
2020-11-25 20:17:23,075 TRACE  [main] BasicExtractor: extracted value ([is_condi5_0_1_] : [BOOLEAN]) - [true]
2020-11-25 20:17:23,075 TRACE  [main] BasicExtractor: extracted value ([j6_0_1_] : [INTEGER]) - [1]
2020-11-25 20:17:23,075 TRACE  [main] BasicExtractor: extracted value ([problem_7_0_1_] : [BIGINT]) - [7]
2020-11-25 20:17:23,075 TRACE  [main] BasicExtractor: extracted value ([problem_7_0_0_] : [BIGINT]) - [7]
2020-11-25 20:17:23,075 TRACE  [main] BasicExtractor: extracted value ([id1_0_0_] : [BIGINT]) - [41]
2020-11-25 20:17:23,075 TRACE  [main] BasicExtractor: extracted value ([id1_0_1_] : [BIGINT]) - [42]
2020-11-25 20:17:23,076 TRACE  [main] BasicExtractor: extracted value ([binary_v2_0_1_] : [BLOB]) - [null]
2020-11-25 20:17:23,076 TRACE  [main] BasicExtractor: extracted value ([float_va3_0_1_] : [DOUBLE]) - [2.0]
2020-11-25 20:17:23,076 TRACE  [main] BasicExtractor: extracted value ([i4_0_1_] : [INTEGER]) - [0]
2020-11-25 20:17:23,076 TRACE  [main] BasicExtractor: extracted value ([is_condi5_0_1_] : [BOOLEAN]) - [true]
2020-11-25 20:17:23,076 TRACE  [main] BasicExtractor: extracted value ([j6_0_1_] : [INTEGER]) - [2]
2020-11-25 20:17:23,076 TRACE  [main] BasicExtractor: extracted value ([problem_7_0_1_] : [BIGINT]) - [7]
2020-11-25 20:17:23,076 TRACE  [main] BasicExtractor: extracted value ([problem_7_0_0_] : [BIGINT]) - [7]
2020-11-25 20:17:23,081 TRACE  [main] BasicExtractor: extracted value ([id1_0_0_] : [BIGINT]) - [42]
2020-11-25 20:17:23,091 TRACE  [main] BasicExtractor: extracted value ([id1_0_1_] : [BIGINT]) - [43]
2020-11-25 20:17:23,092 TRACE  [main] BasicExtractor: extracted value ([binary_v2_0_1_] : [BLOB]) - [null]
2020-11-25 20:17:23,092 TRACE  [main] BasicExtractor: extracted value ([float_va3_0_1_] : [DOUBLE]) - [1.0]
2020-11-25 20:17:23,092 TRACE  [main] BasicExtractor: extracted value ([i4_0_1_] : [INTEGER]) - [0]
2020-11-25 20:17:23,092 TRACE  [main] BasicExtractor: extracted value ([is_condi5_0_1_] : [BOOLEAN]) - [false]
2020-11-25 20:17:23,092 TRACE  [main] BasicExtractor: extracted value ([j6_0_1_] : [INTEGER]) - [0]
2020-11-25 20:17:23,093 TRACE  [main] BasicExtractor: extracted value ([problem_7_0_1_] : [BIGINT]) - [7]
2020-11-25 20:17:23,093 TRACE  [main] BasicExtractor: extracted value ([problem_7_0_0_] : [BIGINT]) - [7]
2020-11-25 20:17:23,093 TRACE  [main] BasicExtractor: extracted value ([id1_0_0_] : [BIGINT]) - [43]
2020-11-25 20:17:23,093 TRACE  [main] BasicExtractor: extracted value ([id1_0_1_] : [BIGINT]) - [44]
2020-11-25 20:17:23,094 TRACE  [main] BasicExtractor: extracted value ([binary_v2_0_1_] : [BLOB]) - [null]
2020-11-25 20:17:23,094 TRACE  [main] BasicExtractor: extracted value ([float_va3_0_1_] : [DOUBLE]) - [2.0]
2020-11-25 20:17:23,094 TRACE  [main] BasicExtractor: extracted value ([i4_0_1_] : [INTEGER]) - [0]
2020-11-25 20:17:23,094 TRACE  [main] BasicExtractor: extracted value ([is_condi5_0_1_] : [BOOLEAN]) - [false]
2020-11-25 20:17:23,094 TRACE  [main] BasicExtractor: extracted value ([j6_0_1_] : [INTEGER]) - [1]
2020-11-25 20:17:23,095 TRACE  [main] BasicExtractor: extracted value ([problem_7_0_1_] : [BIGINT]) - [7]
2020-11-25 20:17:23,095 TRACE  [main] BasicExtractor: extracted value ([problem_7_0_0_] : [BIGINT]) - [7]
2020-11-25 20:17:23,095 TRACE  [main] BasicExtractor: extracted value ([id1_0_0_] : [BIGINT]) - [44]
2020-11-25 20:17:23,177 TRACE  [main] BasicBinder: binding parameter [1] as [BOOLEAN] - [false]
2020-11-25 20:17:23,178 TRACE  [main] BasicBinder: binding parameter [2] as [BIGINT] - [7]
2020-11-25 20:17:23,179 TRACE  [main] BasicExtractor: extracted value ([id1_0_] : [BIGINT]) - [43]
2020-11-25 20:17:23,180 TRACE  [main] BasicExtractor: extracted value ([binary_v2_0_] : [BLOB]) - [null]
2020-11-25 20:17:23,180 TRACE  [main] BasicExtractor: extracted value ([float_va3_0_] : [DOUBLE]) - [1.0]
2020-11-25 20:17:23,180 TRACE  [main] BasicExtractor: extracted value ([i4_0_] : [INTEGER]) - [0]
2020-11-25 20:17:23,180 TRACE  [main] BasicExtractor: extracted value ([is_condi5_0_] : [BOOLEAN]) - [false]
2020-11-25 20:17:23,181 TRACE  [main] BasicExtractor: extracted value ([j6_0_] : [INTEGER]) - [0]
2020-11-25 20:17:23,181 TRACE  [main] BasicExtractor: extracted value ([problem_7_0_] : [BIGINT]) - [7]
2020-11-25 20:17:23,182 TRACE  [main] BasicExtractor: extracted value ([id1_0_] : [BIGINT]) - [44]
2020-11-25 20:17:23,182 TRACE  [main] BasicExtractor: extracted value ([binary_v2_0_] : [BLOB]) - [null]
2020-11-25 20:17:23,182 TRACE  [main] BasicExtractor: extracted value ([float_va3_0_] : [DOUBLE]) - [2.0]
2020-11-25 20:17:23,182 TRACE  [main] BasicExtractor: extracted value ([i4_0_] : [INTEGER]) - [0]
2020-11-25 20:17:23,182 TRACE  [main] BasicExtractor: extracted value ([is_condi5_0_] : [BOOLEAN]) - [false]
2020-11-25 20:17:23,183 TRACE  [main] BasicExtractor: extracted value ([j6_0_] : [INTEGER]) - [1]
2020-11-25 20:17:23,183 TRACE  [main] BasicExtractor: extracted value ([problem_7_0_] : [BIGINT]) - [7]
2020-11-25 20:17:23,186 TRACE  [main] BasicBinder: binding parameter [1] as [BIGINT] - [7]
2020-11-25 20:17:23,187 TRACE  [main] BasicExtractor: extracted value ([id1_1_2_] : [BIGINT]) - [null]
2020-11-25 20:17:23,187 TRACE  [main] BasicExtractor: extracted value ([id1_0_4_] : [BIGINT]) - [null]
2020-11-25 20:17:23,188 TRACE  [main] BasicExtractor: extracted value ([descript2_1_0_] : [BLOB]) - [[112, 114, 111, 98, 108, 101, 109, 100, 101, 115, 99, 114, 105, 112, 116, 105, 111, 110]]
2020-11-25 20:17:23,188 TRACE  [main] BasicExtractor: extracted value ([is_solve3_1_0_] : [BOOLEAN]) - [true]
2020-11-25 20:17:23,188 TRACE  [main] BasicExtractor: extracted value ([kind4_1_0_] : [VARCHAR]) - [POLYNOMIAL]
2020-11-25 20:17:23,188 TRACE  [main] BasicExtractor: extracted value ([matrix_d5_1_0_] : [INTEGER]) - [1]
2020-11-25 20:17:23,188 TRACE  [main] BasicExtractor: extracted value ([parent_p7_1_0_] : [BIGINT]) - [null]
2020-11-25 20:17:23,188 TRACE  [main] BasicExtractor: extracted value ([problem_6_1_0_] : [INTEGER]) - [0]
2020-11-25 20:17:23,189 TRACE  [main] BasicExtractor: extracted value ([problem_7_0_3_] : [BIGINT]) - [null]
2020-11-25 20:17:23,189 TRACE  [main] BasicExtractor: extracted value ([parent_p7_1_1_] : [BIGINT]) - [null]
2020-11-25 20:17:23,189 TRACE  [main] CollectionType: Created collection wrapper: [com.sf.back.entities.Problem.matrixes#7]
2020-11-25 20:17:23,190 TRACE  [main] BasicBinder: binding parameter [1] as [BIGINT] - [7]
2020-11-25 20:17:23,191 TRACE  [main] BasicExtractor: extracted value ([id1_0_1_] : [BIGINT]) - [40]
2020-11-25 20:17:23,191 TRACE  [main] BasicExtractor: extracted value ([binary_v2_0_1_] : [BLOB]) - [null]
2020-11-25 20:17:23,191 TRACE  [main] BasicExtractor: extracted value ([float_va3_0_1_] : [DOUBLE]) - [1.0]
2020-11-25 20:17:23,191 TRACE  [main] BasicExtractor: extracted value ([i4_0_1_] : [INTEGER]) - [0]
2020-11-25 20:17:23,191 TRACE  [main] BasicExtractor: extracted value ([is_condi5_0_1_] : [BOOLEAN]) - [true]
2020-11-25 20:17:23,192 TRACE  [main] BasicExtractor: extracted value ([j6_0_1_] : [INTEGER]) - [0]
2020-11-25 20:17:23,192 TRACE  [main] BasicExtractor: extracted value ([problem_7_0_1_] : [BIGINT]) - [7]
2020-11-25 20:17:23,192 TRACE  [main] BasicExtractor: extracted value ([problem_7_0_0_] : [BIGINT]) - [7]
2020-11-25 20:17:23,192 TRACE  [main] BasicExtractor: extracted value ([id1_0_0_] : [BIGINT]) - [40]
2020-11-25 20:17:23,192 TRACE  [main] BasicExtractor: extracted value ([id1_0_1_] : [BIGINT]) - [41]
2020-11-25 20:17:23,193 TRACE  [main] BasicExtractor: extracted value ([binary_v2_0_1_] : [BLOB]) - [null]
2020-11-25 20:17:23,193 TRACE  [main] BasicExtractor: extracted value ([float_va3_0_1_] : [DOUBLE]) - [-3.0]
2020-11-25 20:17:23,193 TRACE  [main] BasicExtractor: extracted value ([i4_0_1_] : [INTEGER]) - [0]
2020-11-25 20:17:23,193 TRACE  [main] BasicExtractor: extracted value ([is_condi5_0_1_] : [BOOLEAN]) - [true]
2020-11-25 20:17:23,193 TRACE  [main] BasicExtractor: extracted value ([j6_0_1_] : [INTEGER]) - [1]
2020-11-25 20:17:23,194 TRACE  [main] BasicExtractor: extracted value ([problem_7_0_1_] : [BIGINT]) - [7]
2020-11-25 20:17:23,194 TRACE  [main] BasicExtractor: extracted value ([problem_7_0_0_] : [BIGINT]) - [7]
2020-11-25 20:17:23,194 TRACE  [main] BasicExtractor: extracted value ([id1_0_0_] : [BIGINT]) - [41]
2020-11-25 20:17:23,194 TRACE  [main] BasicExtractor: extracted value ([id1_0_1_] : [BIGINT]) - [42]
2020-11-25 20:17:23,194 TRACE  [main] BasicExtractor: extracted value ([binary_v2_0_1_] : [BLOB]) - [null]
2020-11-25 20:17:23,194 TRACE  [main] BasicExtractor: extracted value ([float_va3_0_1_] : [DOUBLE]) - [2.0]
2020-11-25 20:17:23,195 TRACE  [main] BasicExtractor: extracted value ([i4_0_1_] : [INTEGER]) - [0]
2020-11-25 20:17:23,195 TRACE  [main] BasicExtractor: extracted value ([is_condi5_0_1_] : [BOOLEAN]) - [true]
2020-11-25 20:17:23,195 TRACE  [main] BasicExtractor: extracted value ([j6_0_1_] : [INTEGER]) - [2]
2020-11-25 20:17:23,195 TRACE  [main] BasicExtractor: extracted value ([problem_7_0_1_] : [BIGINT]) - [7]
2020-11-25 20:17:23,195 TRACE  [main] BasicExtractor: extracted value ([problem_7_0_0_] : [BIGINT]) - [7]
2020-11-25 20:17:23,196 TRACE  [main] BasicExtractor: extracted value ([id1_0_0_] : [BIGINT]) - [42]
2020-11-25 20:17:23,196 TRACE  [main] BasicExtractor: extracted value ([id1_0_1_] : [BIGINT]) - [43]
2020-11-25 20:17:23,197 TRACE  [main] BasicExtractor: extracted value ([problem_7_0_0_] : [BIGINT]) - [7]
2020-11-25 20:17:23,197 TRACE  [main] BasicExtractor: extracted value ([id1_0_0_] : [BIGINT]) - [43]
2020-11-25 20:17:23,197 TRACE  [main] BasicExtractor: extracted value ([id1_0_1_] : [BIGINT]) - [44]
2020-11-25 20:17:23,197 TRACE  [main] BasicExtractor: extracted value ([problem_7_0_0_] : [BIGINT]) - [7]
2020-11-25 20:17:23,198 TRACE  [main] BasicExtractor: extracted value ([id1_0_0_] : [BIGINT]) - [44]
2020-11-25 20:17:23,216 TRACE  [main] BasicBinder: binding parameter [1] as [BIGINT] - [8]
2020-11-25 20:17:23,216 TRACE  [main] BasicExtractor: extracted value ([id1_1_2_] : [BIGINT]) - [null]
2020-11-25 20:17:23,217 TRACE  [main] BasicExtractor: extracted value ([id1_0_4_] : [BIGINT]) - [null]
2020-11-25 20:17:23,217 TRACE  [main] BasicExtractor: extracted value ([descript2_1_0_] : [BLOB]) - [[112, 114, 111, 98, 108, 101, 109, 100, 101, 115, 99, 114, 105, 112, 116, 105, 111, 110]]
2020-11-25 20:17:23,217 TRACE  [main] BasicExtractor: extracted value ([is_solve3_1_0_] : [BOOLEAN]) - [null]
2020-11-25 20:17:23,217 TRACE  [main] BasicExtractor: extracted value ([kind4_1_0_] : [VARCHAR]) - [POLYNOMIAL]
2020-11-25 20:17:23,217 TRACE  [main] BasicExtractor: extracted value ([matrix_d5_1_0_] : [INTEGER]) - [1]
2020-11-25 20:17:23,217 TRACE  [main] BasicExtractor: extracted value ([parent_p7_1_0_] : [BIGINT]) - [null]
2020-11-25 20:17:23,219 TRACE  [main] BasicExtractor: extracted value ([problem_6_1_0_] : [INTEGER]) - [22]
2020-11-25 20:17:23,219 TRACE  [main] BasicExtractor: extracted value ([problem_7_0_3_] : [BIGINT]) - [null]
2020-11-25 20:17:23,219 TRACE  [main] BasicExtractor: extracted value ([parent_p7_1_1_] : [BIGINT]) - [null]
2020-11-25 20:17:23,220 TRACE  [main] CollectionType: Created collection wrapper: [com.sf.back.entities.Problem.matrixes#8]
2020-11-25 20:17:23,224 TRACE  [main] BasicBinder: binding parameter [1] as [BIGINT] - [8]
2020-11-25 20:17:23,225 TRACE  [main] BasicExtractor: extracted value ([id1_0_1_] : [BIGINT]) - [45]
2020-11-25 20:17:23,226 TRACE  [main] BasicExtractor: extracted value ([binary_v2_0_1_] : [BLOB]) - [null]
2020-11-25 20:17:23,226 TRACE  [main] BasicExtractor: extracted value ([float_va3_0_1_] : [DOUBLE]) - [1.0]
2020-11-25 20:17:23,227 TRACE  [main] BasicExtractor: extracted value ([i4_0_1_] : [INTEGER]) - [0]
2020-11-25 20:17:23,227 TRACE  [main] BasicExtractor: extracted value ([is_condi5_0_1_] : [BOOLEAN]) - [true]
2020-11-25 20:17:23,227 TRACE  [main] BasicExtractor: extracted value ([j6_0_1_] : [INTEGER]) - [0]
2020-11-25 20:17:23,229 TRACE  [main] BasicExtractor: extracted value ([problem_7_0_1_] : [BIGINT]) - [8]
2020-11-25 20:17:23,229 TRACE  [main] BasicExtractor: extracted value ([problem_7_0_0_] : [BIGINT]) - [8]
2020-11-25 20:17:23,229 TRACE  [main] BasicExtractor: extracted value ([id1_0_0_] : [BIGINT]) - [45]
2020-11-25 20:17:23,230 TRACE  [main] BasicExtractor: extracted value ([id1_0_1_] : [BIGINT]) - [46]
2020-11-25 20:17:23,231 TRACE  [main] BasicExtractor: extracted value ([binary_v2_0_1_] : [BLOB]) - [null]
2020-11-25 20:17:23,231 TRACE  [main] BasicExtractor: extracted value ([float_va3_0_1_] : [DOUBLE]) - [2.718281828459045]
2020-11-25 20:17:23,231 TRACE  [main] BasicExtractor: extracted value ([i4_0_1_] : [INTEGER]) - [0]
2020-11-25 20:17:23,231 TRACE  [main] BasicExtractor: extracted value ([is_condi5_0_1_] : [BOOLEAN]) - [true]
2020-11-25 20:17:23,231 TRACE  [main] BasicExtractor: extracted value ([j6_0_1_] : [INTEGER]) - [1]
2020-11-25 20:17:23,232 TRACE  [main] BasicExtractor: extracted value ([problem_7_0_1_] : [BIGINT]) - [8]
2020-11-25 20:17:23,232 TRACE  [main] BasicExtractor: extracted value ([problem_7_0_0_] : [BIGINT]) - [8]
2020-11-25 20:17:23,232 TRACE  [main] BasicExtractor: extracted value ([id1_0_0_] : [BIGINT]) - [46]
2020-11-25 20:17:23,233 TRACE  [main] BasicExtractor: extracted value ([id1_0_1_] : [BIGINT]) - [47]
2020-11-25 20:17:23,234 TRACE  [main] BasicExtractor: extracted value ([binary_v2_0_1_] : [BLOB]) - [null]
2020-11-25 20:17:23,234 TRACE  [main] BasicExtractor: extracted value ([float_va3_0_1_] : [DOUBLE]) - [7.38905609893065]
2020-11-25 20:17:23,234 TRACE  [main] BasicExtractor: extracted value ([i4_0_1_] : [INTEGER]) - [0]
2020-11-25 20:17:23,235 TRACE  [main] BasicExtractor: extracted value ([is_condi5_0_1_] : [BOOLEAN]) - [true]
2020-11-25 20:17:23,235 TRACE  [main] BasicExtractor: extracted value ([j6_0_1_] : [INTEGER]) - [2]
2020-11-25 20:17:23,235 TRACE  [main] BasicExtractor: extracted value ([problem_7_0_1_] : [BIGINT]) - [8]
2020-11-25 20:17:23,236 TRACE  [main] BasicExtractor: extracted value ([problem_7_0_0_] : [BIGINT]) - [8]
2020-11-25 20:17:23,236 TRACE  [main] BasicExtractor: extracted value ([id1_0_0_] : [BIGINT]) - [47]
2020-11-25 20:17:23,237 TRACE  [main] BasicExtractor: extracted value ([id1_0_1_] : [BIGINT]) - [48]
2020-11-25 20:17:23,237 TRACE  [main] BasicExtractor: extracted value ([binary_v2_0_1_] : [BLOB]) - [null]
2020-11-25 20:17:23,238 TRACE  [main] BasicExtractor: extracted value ([float_va3_0_1_] : [DOUBLE]) - [20.085536923187668]
2020-11-25 20:17:23,238 TRACE  [main] BasicExtractor: extracted value ([i4_0_1_] : [INTEGER]) - [0]
2020-11-25 20:17:23,238 TRACE  [main] BasicExtractor: extracted value ([is_condi5_0_1_] : [BOOLEAN]) - [true]
2020-11-25 20:17:23,239 TRACE  [main] BasicExtractor: extracted value ([j6_0_1_] : [INTEGER]) - [3]
2020-11-25 20:17:23,239 TRACE  [main] BasicExtractor: extracted value ([problem_7_0_1_] : [BIGINT]) - [8]
2020-11-25 20:17:23,239 TRACE  [main] BasicExtractor: extracted value ([problem_7_0_0_] : [BIGINT]) - [8]
2020-11-25 20:17:23,240 TRACE  [main] BasicExtractor: extracted value ([id1_0_0_] : [BIGINT]) - [48]
2020-11-25 20:17:23,240 TRACE  [main] BasicExtractor: extracted value ([id1_0_1_] : [BIGINT]) - [49]
2020-11-25 20:17:23,241 TRACE  [main] BasicExtractor: extracted value ([binary_v2_0_1_] : [BLOB]) - [null]
2020-11-25 20:17:23,241 TRACE  [main] BasicExtractor: extracted value ([float_va3_0_1_] : [DOUBLE]) - [54.598150033144236]
2020-11-25 20:17:23,241 TRACE  [main] BasicExtractor: extracted value ([i4_0_1_] : [INTEGER]) - [0]
2020-11-25 20:17:23,246 TRACE  [main] BasicExtractor: extracted value ([is_condi5_0_1_] : [BOOLEAN]) - [true]
2020-11-25 20:17:23,247 TRACE  [main] BasicExtractor: extracted value ([j6_0_1_] : [INTEGER]) - [4]
2020-11-25 20:17:23,248 TRACE  [main] BasicExtractor: extracted value ([problem_7_0_1_] : [BIGINT]) - [8]
2020-11-25 20:17:23,249 TRACE  [main] BasicExtractor: extracted value ([problem_7_0_0_] : [BIGINT]) - [8]
2020-11-25 20:17:23,249 TRACE  [main] BasicExtractor: extracted value ([id1_0_0_] : [BIGINT]) - [49]
2020-11-25 20:17:23,249 TRACE  [main] BasicExtractor: extracted value ([id1_0_1_] : [BIGINT]) - [50]
2020-11-25 20:17:23,250 TRACE  [main] BasicExtractor: extracted value ([binary_v2_0_1_] : [BLOB]) - [null]
2020-11-25 20:17:23,250 TRACE  [main] BasicExtractor: extracted value ([float_va3_0_1_] : [DOUBLE]) - [148.4131591025766]
2020-11-25 20:17:23,251 TRACE  [main] BasicExtractor: extracted value ([i4_0_1_] : [INTEGER]) - [0]
2020-11-25 20:17:23,251 TRACE  [main] BasicExtractor: extracted value ([is_condi5_0_1_] : [BOOLEAN]) - [true]
2020-11-25 20:17:23,251 TRACE  [main] BasicExtractor: extracted value ([j6_0_1_] : [INTEGER]) - [5]
2020-11-25 20:17:23,252 TRACE  [main] BasicExtractor: extracted value ([problem_7_0_1_] : [BIGINT]) - [8]
2020-11-25 20:17:23,252 TRACE  [main] BasicExtractor: extracted value ([problem_7_0_0_] : [BIGINT]) - [8]
2020-11-25 20:17:23,252 TRACE  [main] BasicExtractor: extracted value ([id1_0_0_] : [BIGINT]) - [50]
2020-11-25 20:17:23,265 TRACE  [main] BasicBinder: binding parameter [1] as [BLOB] - [[100, 101, 115, 99, 114, 105, 112, 116, 105, 111, 110]]
2020-11-25 20:17:23,265 TRACE  [main] BasicBinder: binding parameter [2] as [BOOLEAN] - [null]
2020-11-25 20:17:23,265 TRACE  [main] BasicBinder: binding parameter [3] as [VARCHAR] - [POLYNOMIAL]
2020-11-25 20:17:23,266 TRACE  [main] BasicBinder: binding parameter [4] as [INTEGER] - [null]
2020-11-25 20:17:23,266 TRACE  [main] BasicBinder: binding parameter [5] as [BIGINT] - [null]
2020-11-25 20:17:23,266 TRACE  [main] BasicBinder: binding parameter [6] as [INTEGER] - [24]
2020-11-25 20:17:23,269 TRACE  [main] BasicBinder: binding parameter [1] as [BLOB] - [null]
2020-11-25 20:17:23,269 TRACE  [main] BasicBinder: binding parameter [2] as [DOUBLE] - [1.0]
2020-11-25 20:17:23,269 TRACE  [main] BasicBinder: binding parameter [3] as [INTEGER] - [0]
2020-11-25 20:17:23,270 TRACE  [main] BasicBinder: binding parameter [4] as [BOOLEAN] - [true]
2020-11-25 20:17:23,270 TRACE  [main] BasicBinder: binding parameter [5] as [INTEGER] - [0]
2020-11-25 20:17:23,270 TRACE  [main] BasicBinder: binding parameter [6] as [BIGINT] - [10]
2020-11-25 20:17:23,272 TRACE  [main] BasicBinder: binding parameter [1] as [BLOB] - [null]
2020-11-25 20:17:23,273 TRACE  [main] BasicBinder: binding parameter [2] as [DOUBLE] - [2.0]
2020-11-25 20:17:23,273 TRACE  [main] BasicBinder: binding parameter [3] as [INTEGER] - [0]
2020-11-25 20:17:23,273 TRACE  [main] BasicBinder: binding parameter [4] as [BOOLEAN] - [true]
2020-11-25 20:17:23,273 TRACE  [main] BasicBinder: binding parameter [5] as [INTEGER] - [1]
2020-11-25 20:17:23,274 TRACE  [main] BasicBinder: binding parameter [6] as [BIGINT] - [10]
2020-11-25 20:17:23,275 TRACE  [main] BasicBinder: binding parameter [1] as [BLOB] - [null]
2020-11-25 20:17:23,276 TRACE  [main] BasicBinder: binding parameter [2] as [DOUBLE] - [3.0]
2020-11-25 20:17:23,276 TRACE  [main] BasicBinder: binding parameter [3] as [INTEGER] - [0]
2020-11-25 20:17:23,276 TRACE  [main] BasicBinder: binding parameter [4] as [BOOLEAN] - [true]
2020-11-25 20:17:23,276 TRACE  [main] BasicBinder: binding parameter [5] as [INTEGER] - [2]
2020-11-25 20:17:23,277 TRACE  [main] BasicBinder: binding parameter [6] as [BIGINT] - [10]
2020-11-25 20:17:23,277 TRACE  [main] BasicBinder: binding parameter [1] as [BLOB] - [null]
2020-11-25 20:17:23,278 TRACE  [main] BasicBinder: binding parameter [2] as [DOUBLE] - [4.0]
2020-11-25 20:17:23,278 TRACE  [main] BasicBinder: binding parameter [3] as [INTEGER] - [0]
2020-11-25 20:17:23,278 TRACE  [main] BasicBinder: binding parameter [4] as [BOOLEAN] - [true]
2020-11-25 20:17:23,278 TRACE  [main] BasicBinder: binding parameter [5] as [INTEGER] - [3]
2020-11-25 20:17:23,278 TRACE  [main] BasicBinder: binding parameter [6] as [BIGINT] - [10]
2020-11-25 20:17:23,307 TRACE  [main] BasicBinder: binding parameter [1] as [BIGINT] - [10]
2020-11-25 20:17:23,308 TRACE  [main] BasicExtractor: extracted value ([id1_1_2_] : [BIGINT]) - [null]
2020-11-25 20:17:23,308 TRACE  [main] BasicExtractor: extracted value ([id1_0_4_] : [BIGINT]) - [null]
2020-11-25 20:17:23,309 TRACE  [main] BasicExtractor: extracted value ([descript2_1_0_] : [BLOB]) - [[100, 101, 115, 99, 114, 105, 112, 116, 105, 111, 110]]
2020-11-25 20:17:23,309 TRACE  [main] BasicExtractor: extracted value ([is_solve3_1_0_] : [BOOLEAN]) - [null]
2020-11-25 20:17:23,309 TRACE  [main] BasicExtractor: extracted value ([kind4_1_0_] : [VARCHAR]) - [POLYNOMIAL]
2020-11-25 20:17:23,309 TRACE  [main] BasicExtractor: extracted value ([matrix_d5_1_0_] : [INTEGER]) - [null]
2020-11-25 20:17:23,310 TRACE  [main] BasicExtractor: extracted value ([parent_p7_1_0_] : [BIGINT]) - [null]
2020-11-25 20:17:23,310 TRACE  [main] BasicExtractor: extracted value ([problem_6_1_0_] : [INTEGER]) - [24]
2020-11-25 20:17:23,310 TRACE  [main] BasicExtractor: extracted value ([problem_7_0_3_] : [BIGINT]) - [null]
2020-11-25 20:17:23,310 TRACE  [main] BasicExtractor: extracted value ([parent_p7_1_1_] : [BIGINT]) - [null]
2020-11-25 20:17:23,311 TRACE  [main] CollectionType: Created collection wrapper: [com.sf.back.entities.Problem.matrixes#10]
2020-11-25 20:17:23,311 TRACE  [main] BasicBinder: binding parameter [1] as [BIGINT] - [10]
2020-11-25 20:17:23,312 TRACE  [main] BasicExtractor: extracted value ([id1_0_1_] : [BIGINT]) - [57]
2020-11-25 20:17:23,313 TRACE  [main] BasicExtractor: extracted value ([binary_v2_0_1_] : [BLOB]) - [null]
2020-11-25 20:17:23,313 TRACE  [main] BasicExtractor: extracted value ([float_va3_0_1_] : [DOUBLE]) - [1.0]
2020-11-25 20:17:23,313 TRACE  [main] BasicExtractor: extracted value ([i4_0_1_] : [INTEGER]) - [0]
2020-11-25 20:17:23,314 TRACE  [main] BasicExtractor: extracted value ([is_condi5_0_1_] : [BOOLEAN]) - [true]
2020-11-25 20:17:23,314 TRACE  [main] BasicExtractor: extracted value ([j6_0_1_] : [INTEGER]) - [0]
2020-11-25 20:17:23,314 TRACE  [main] BasicExtractor: extracted value ([problem_7_0_1_] : [BIGINT]) - [10]
2020-11-25 20:17:23,314 TRACE  [main] BasicExtractor: extracted value ([problem_7_0_0_] : [BIGINT]) - [10]
2020-11-25 20:17:23,314 TRACE  [main] BasicExtractor: extracted value ([id1_0_0_] : [BIGINT]) - [57]
2020-11-25 20:17:23,315 TRACE  [main] BasicExtractor: extracted value ([id1_0_1_] : [BIGINT]) - [58]
2020-11-25 20:17:23,315 TRACE  [main] BasicExtractor: extracted value ([binary_v2_0_1_] : [BLOB]) - [null]
2020-11-25 20:17:23,315 TRACE  [main] BasicExtractor: extracted value ([float_va3_0_1_] : [DOUBLE]) - [2.0]
2020-11-25 20:17:23,315 TRACE  [main] BasicExtractor: extracted value ([i4_0_1_] : [INTEGER]) - [0]
2020-11-25 20:17:23,315 TRACE  [main] BasicExtractor: extracted value ([is_condi5_0_1_] : [BOOLEAN]) - [true]
2020-11-25 20:17:23,315 TRACE  [main] BasicExtractor: extracted value ([j6_0_1_] : [INTEGER]) - [1]
2020-11-25 20:17:23,315 TRACE  [main] BasicExtractor: extracted value ([problem_7_0_1_] : [BIGINT]) - [10]
2020-11-25 20:17:23,316 TRACE  [main] BasicExtractor: extracted value ([problem_7_0_0_] : [BIGINT]) - [10]
2020-11-25 20:17:23,316 TRACE  [main] BasicExtractor: extracted value ([id1_0_0_] : [BIGINT]) - [58]
2020-11-25 20:17:23,316 TRACE  [main] BasicExtractor: extracted value ([id1_0_1_] : [BIGINT]) - [59]
2020-11-25 20:17:23,316 TRACE  [main] BasicExtractor: extracted value ([binary_v2_0_1_] : [BLOB]) - [null]
2020-11-25 20:17:23,316 TRACE  [main] BasicExtractor: extracted value ([float_va3_0_1_] : [DOUBLE]) - [3.0]
2020-11-25 20:17:23,317 TRACE  [main] BasicExtractor: extracted value ([i4_0_1_] : [INTEGER]) - [0]
2020-11-25 20:17:23,317 TRACE  [main] BasicExtractor: extracted value ([is_condi5_0_1_] : [BOOLEAN]) - [true]
2020-11-25 20:17:23,317 TRACE  [main] BasicExtractor: extracted value ([j6_0_1_] : [INTEGER]) - [2]
2020-11-25 20:17:23,317 TRACE  [main] BasicExtractor: extracted value ([problem_7_0_1_] : [BIGINT]) - [10]
2020-11-25 20:17:23,317 TRACE  [main] BasicExtractor: extracted value ([problem_7_0_0_] : [BIGINT]) - [10]
2020-11-25 20:17:23,317 TRACE  [main] BasicExtractor: extracted value ([id1_0_0_] : [BIGINT]) - [59]
2020-11-25 20:17:23,318 TRACE  [main] BasicExtractor: extracted value ([id1_0_1_] : [BIGINT]) - [60]
2020-11-25 20:17:23,319 TRACE  [main] BasicExtractor: extracted value ([binary_v2_0_1_] : [BLOB]) - [null]
2020-11-25 20:17:23,320 TRACE  [main] BasicExtractor: extracted value ([float_va3_0_1_] : [DOUBLE]) - [4.0]
2020-11-25 20:17:23,320 TRACE  [main] BasicExtractor: extracted value ([i4_0_1_] : [INTEGER]) - [0]
2020-11-25 20:17:23,320 TRACE  [main] BasicExtractor: extracted value ([is_condi5_0_1_] : [BOOLEAN]) - [true]
2020-11-25 20:17:23,321 TRACE  [main] BasicExtractor: extracted value ([j6_0_1_] : [INTEGER]) - [3]
2020-11-25 20:17:23,321 TRACE  [main] BasicExtractor: extracted value ([problem_7_0_1_] : [BIGINT]) - [10]
2020-11-25 20:17:23,322 TRACE  [main] BasicExtractor: extracted value ([problem_7_0_0_] : [BIGINT]) - [10]
2020-11-25 20:17:23,322 TRACE  [main] BasicExtractor: extracted value ([id1_0_0_] : [BIGINT]) - [60]
2020-11-25 20:17:23,340 TRACE  [main] BasicBinder: binding parameter [1] as [BIGINT] - [11]
2020-11-25 20:17:23,342 TRACE  [main] BasicExtractor: extracted value ([id1_1_2_] : [BIGINT]) - [null]
2020-11-25 20:17:23,343 TRACE  [main] BasicExtractor: extracted value ([id1_0_4_] : [BIGINT]) - [null]
2020-11-25 20:17:23,343 TRACE  [main] BasicExtractor: extracted value ([descript2_1_0_] : [BLOB]) - [[112, 114, 111, 98, 108, 101, 109, 100, 101, 115, 99, 114, 105, 112, 116, 105, 111, 110]]
2020-11-25 20:17:23,343 TRACE  [main] BasicExtractor: extracted value ([is_solve3_1_0_] : [BOOLEAN]) - [null]
2020-11-25 20:17:23,343 TRACE  [main] BasicExtractor: extracted value ([kind4_1_0_] : [VARCHAR]) - [POLYNOMIAL]
2020-11-25 20:17:23,344 TRACE  [main] BasicExtractor: extracted value ([matrix_d5_1_0_] : [INTEGER]) - [1]
2020-11-25 20:17:23,345 TRACE  [main] BasicExtractor: extracted value ([parent_p7_1_0_] : [BIGINT]) - [null]
2020-11-25 20:17:23,345 TRACE  [main] BasicExtractor: extracted value ([problem_6_1_0_] : [INTEGER]) - [22]
2020-11-25 20:17:23,345 TRACE  [main] BasicExtractor: extracted value ([problem_7_0_3_] : [BIGINT]) - [null]
2020-11-25 20:17:23,346 TRACE  [main] BasicExtractor: extracted value ([parent_p7_1_1_] : [BIGINT]) - [null]
2020-11-25 20:17:23,346 TRACE  [main] CollectionType: Created collection wrapper: [com.sf.back.entities.Problem.matrixes#11]
2020-11-25 20:17:23,349 TRACE  [main] BasicBinder: binding parameter [1] as [BIGINT] - [11]
2020-11-25 20:17:23,351 TRACE  [main] BasicExtractor: extracted value ([id1_0_1_] : [BIGINT]) - [61]
2020-11-25 20:17:23,351 TRACE  [main] BasicExtractor: extracted value ([binary_v2_0_1_] : [BLOB]) - [null]
2020-11-25 20:17:23,351 TRACE  [main] BasicExtractor: extracted value ([float_va3_0_1_] : [DOUBLE]) - [1.0]
2020-11-25 20:17:23,352 TRACE  [main] BasicExtractor: extracted value ([i4_0_1_] : [INTEGER]) - [0]
2020-11-25 20:17:23,352 TRACE  [main] BasicExtractor: extracted value ([is_condi5_0_1_] : [BOOLEAN]) - [true]
2020-11-25 20:17:23,352 TRACE  [main] BasicExtractor: extracted value ([j6_0_1_] : [INTEGER]) - [0]
2020-11-25 20:17:23,352 TRACE  [main] BasicExtractor: extracted value ([problem_7_0_1_] : [BIGINT]) - [11]
2020-11-25 20:17:23,352 TRACE  [main] BasicExtractor: extracted value ([problem_7_0_0_] : [BIGINT]) - [11]
2020-11-25 20:17:23,353 TRACE  [main] BasicExtractor: extracted value ([id1_0_0_] : [BIGINT]) - [61]
2020-11-25 20:17:23,353 TRACE  [main] BasicExtractor: extracted value ([id1_0_1_] : [BIGINT]) - [62]
2020-11-25 20:17:23,353 TRACE  [main] BasicExtractor: extracted value ([binary_v2_0_1_] : [BLOB]) - [null]
2020-11-25 20:17:23,353 TRACE  [main] BasicExtractor: extracted value ([float_va3_0_1_] : [DOUBLE]) - [2.718281828459045]
2020-11-25 20:17:23,354 TRACE  [main] BasicExtractor: extracted value ([i4_0_1_] : [INTEGER]) - [0]
2020-11-25 20:17:23,354 TRACE  [main] BasicExtractor: extracted value ([is_condi5_0_1_] : [BOOLEAN]) - [true]
2020-11-25 20:17:23,354 TRACE  [main] BasicExtractor: extracted value ([j6_0_1_] : [INTEGER]) - [1]
2020-11-25 20:17:23,354 TRACE  [main] BasicExtractor: extracted value ([problem_7_0_1_] : [BIGINT]) - [11]
2020-11-25 20:17:23,354 TRACE  [main] BasicExtractor: extracted value ([problem_7_0_0_] : [BIGINT]) - [11]
2020-11-25 20:17:23,355 TRACE  [main] BasicExtractor: extracted value ([id1_0_0_] : [BIGINT]) - [62]
2020-11-25 20:17:23,355 TRACE  [main] BasicExtractor: extracted value ([id1_0_1_] : [BIGINT]) - [63]
2020-11-25 20:17:23,355 TRACE  [main] BasicExtractor: extracted value ([binary_v2_0_1_] : [BLOB]) - [null]
2020-11-25 20:17:23,356 TRACE  [main] BasicExtractor: extracted value ([float_va3_0_1_] : [DOUBLE]) - [7.38905609893065]
2020-11-25 20:17:23,356 TRACE  [main] BasicExtractor: extracted value ([i4_0_1_] : [INTEGER]) - [0]
2020-11-25 20:17:23,356 TRACE  [main] BasicExtractor: extracted value ([is_condi5_0_1_] : [BOOLEAN]) - [true]
2020-11-25 20:17:23,356 TRACE  [main] BasicExtractor: extracted value ([j6_0_1_] : [INTEGER]) - [2]
2020-11-25 20:17:23,356 TRACE  [main] BasicExtractor: extracted value ([problem_7_0_1_] : [BIGINT]) - [11]
2020-11-25 20:17:23,357 TRACE  [main] BasicExtractor: extracted value ([problem_7_0_0_] : [BIGINT]) - [11]
2020-11-25 20:17:23,357 TRACE  [main] BasicExtractor: extracted value ([id1_0_0_] : [BIGINT]) - [63]
2020-11-25 20:17:23,357 TRACE  [main] BasicExtractor: extracted value ([id1_0_1_] : [BIGINT]) - [64]
2020-11-25 20:17:23,357 TRACE  [main] BasicExtractor: extracted value ([binary_v2_0_1_] : [BLOB]) - [null]
2020-11-25 20:17:23,358 TRACE  [main] BasicExtractor: extracted value ([float_va3_0_1_] : [DOUBLE]) - [20.085536923187668]
2020-11-25 20:17:23,358 TRACE  [main] BasicExtractor: extracted value ([i4_0_1_] : [INTEGER]) - [0]
2020-11-25 20:17:23,358 TRACE  [main] BasicExtractor: extracted value ([is_condi5_0_1_] : [BOOLEAN]) - [true]
2020-11-25 20:17:23,358 TRACE  [main] BasicExtractor: extracted value ([j6_0_1_] : [INTEGER]) - [3]
2020-11-25 20:17:23,358 TRACE  [main] BasicExtractor: extracted value ([problem_7_0_1_] : [BIGINT]) - [11]
2020-11-25 20:17:23,359 TRACE  [main] BasicExtractor: extracted value ([problem_7_0_0_] : [BIGINT]) - [11]
2020-11-25 20:17:23,359 TRACE  [main] BasicExtractor: extracted value ([id1_0_0_] : [BIGINT]) - [64]
2020-11-25 20:17:23,359 TRACE  [main] BasicExtractor: extracted value ([id1_0_1_] : [BIGINT]) - [65]
2020-11-25 20:17:23,359 TRACE  [main] BasicExtractor: extracted value ([binary_v2_0_1_] : [BLOB]) - [null]
2020-11-25 20:17:23,359 TRACE  [main] BasicExtractor: extracted value ([float_va3_0_1_] : [DOUBLE]) - [54.598150033144236]
2020-11-25 20:17:23,360 TRACE  [main] BasicExtractor: extracted value ([i4_0_1_] : [INTEGER]) - [0]
2020-11-25 20:17:23,360 TRACE  [main] BasicExtractor: extracted value ([is_condi5_0_1_] : [BOOLEAN]) - [true]
2020-11-25 20:17:23,360 TRACE  [main] BasicExtractor: extracted value ([j6_0_1_] : [INTEGER]) - [4]
2020-11-25 20:17:23,360 TRACE  [main] BasicExtractor: extracted value ([problem_7_0_1_] : [BIGINT]) - [11]
2020-11-25 20:17:23,360 TRACE  [main] BasicExtractor: extracted value ([problem_7_0_0_] : [BIGINT]) - [11]
2020-11-25 20:17:23,360 TRACE  [main] BasicExtractor: extracted value ([id1_0_0_] : [BIGINT]) - [65]
2020-11-25 20:17:23,361 TRACE  [main] BasicExtractor: extracted value ([id1_0_1_] : [BIGINT]) - [66]
2020-11-25 20:17:23,361 TRACE  [main] BasicExtractor: extracted value ([binary_v2_0_1_] : [BLOB]) - [null]
2020-11-25 20:17:23,361 TRACE  [main] BasicExtractor: extracted value ([float_va3_0_1_] : [DOUBLE]) - [148.4131591025766]
2020-11-25 20:17:23,361 TRACE  [main] BasicExtractor: extracted value ([i4_0_1_] : [INTEGER]) - [0]
2020-11-25 20:17:23,361 TRACE  [main] BasicExtractor: extracted value ([is_condi5_0_1_] : [BOOLEAN]) - [true]
2020-11-25 20:17:23,361 TRACE  [main] BasicExtractor: extracted value ([j6_0_1_] : [INTEGER]) - [5]
2020-11-25 20:17:23,361 TRACE  [main] BasicExtractor: extracted value ([problem_7_0_1_] : [BIGINT]) - [11]
2020-11-25 20:17:23,362 TRACE  [main] BasicExtractor: extracted value ([problem_7_0_0_] : [BIGINT]) - [11]
2020-11-25 20:17:23,362 TRACE  [main] BasicExtractor: extracted value ([id1_0_0_] : [BIGINT]) - [66]
2020-11-25 20:17:23,368 TRACE  [main] BasicBinder: binding parameter [1] as [BIGINT] - [11]
2020-11-25 20:17:23,371 TRACE  [main] BasicExtractor: extracted value ([id1_0_0_] : [BIGINT]) - [61]
2020-11-25 20:17:23,372 TRACE  [main] BasicExtractor: extracted value ([binary_v2_0_0_] : [BLOB]) - [null]
2020-11-25 20:17:23,372 TRACE  [main] BasicExtractor: extracted value ([float_va3_0_0_] : [DOUBLE]) - [1.0]
2020-11-25 20:17:23,373 TRACE  [main] BasicExtractor: extracted value ([i4_0_0_] : [INTEGER]) - [0]
2020-11-25 20:17:23,373 TRACE  [main] BasicExtractor: extracted value ([is_condi5_0_0_] : [BOOLEAN]) - [true]
2020-11-25 20:17:23,373 TRACE  [main] BasicExtractor: extracted value ([j6_0_0_] : [INTEGER]) - [0]
2020-11-25 20:17:23,373 TRACE  [main] BasicExtractor: extracted value ([problem_7_0_0_] : [BIGINT]) - [11]
2020-11-25 20:17:23,374 TRACE  [main] BasicExtractor: extracted value ([descript2_1_1_] : [BLOB]) - [[112, 114, 111, 98, 108, 101, 109, 100, 101, 115, 99, 114, 105, 112, 116, 105, 111, 110]]
2020-11-25 20:17:23,374 TRACE  [main] BasicExtractor: extracted value ([is_solve3_1_1_] : [BOOLEAN]) - [null]
2020-11-25 20:17:23,374 TRACE  [main] BasicExtractor: extracted value ([kind4_1_1_] : [VARCHAR]) - [POLYNOMIAL]
2020-11-25 20:17:23,374 TRACE  [main] BasicExtractor: extracted value ([matrix_d5_1_1_] : [INTEGER]) - [1]
2020-11-25 20:17:23,374 TRACE  [main] BasicExtractor: extracted value ([parent_p7_1_1_] : [BIGINT]) - [null]
2020-11-25 20:17:23,375 TRACE  [main] BasicExtractor: extracted value ([problem_6_1_1_] : [INTEGER]) - [22]
2020-11-25 20:17:23,375 TRACE  [main] BasicExtractor: extracted value ([problem_7_0_3_] : [BIGINT]) - [11]
2020-11-25 20:17:23,375 TRACE  [main] BasicExtractor: extracted value ([id1_0_3_] : [BIGINT]) - [61]
2020-11-25 20:17:23,375 TRACE  [main] BasicExtractor: extracted value ([id1_0_0_] : [BIGINT]) - [62]
2020-11-25 20:17:23,388 TRACE  [main] BasicExtractor: extracted value ([binary_v2_0_0_] : [BLOB]) - [null]
2020-11-25 20:17:23,388 TRACE  [main] BasicExtractor: extracted value ([float_va3_0_0_] : [DOUBLE]) - [2.718281828459045]
2020-11-25 20:17:23,388 TRACE  [main] BasicExtractor: extracted value ([i4_0_0_] : [INTEGER]) - [0]
2020-11-25 20:17:23,388 TRACE  [main] BasicExtractor: extracted value ([is_condi5_0_0_] : [BOOLEAN]) - [true]
2020-11-25 20:17:23,389 TRACE  [main] BasicExtractor: extracted value ([j6_0_0_] : [INTEGER]) - [1]
2020-11-25 20:17:23,389 TRACE  [main] BasicExtractor: extracted value ([problem_7_0_0_] : [BIGINT]) - [11]
2020-11-25 20:17:23,389 TRACE  [main] BasicExtractor: extracted value ([problem_7_0_3_] : [BIGINT]) - [11]
2020-11-25 20:17:23,389 TRACE  [main] BasicExtractor: extracted value ([id1_0_3_] : [BIGINT]) - [62]
2020-11-25 20:17:23,389 TRACE  [main] BasicExtractor: extracted value ([id1_0_0_] : [BIGINT]) - [63]
2020-11-25 20:17:23,389 TRACE  [main] BasicExtractor: extracted value ([binary_v2_0_0_] : [BLOB]) - [null]
2020-11-25 20:17:23,390 TRACE  [main] BasicExtractor: extracted value ([float_va3_0_0_] : [DOUBLE]) - [7.38905609893065]
2020-11-25 20:17:23,390 TRACE  [main] BasicExtractor: extracted value ([i4_0_0_] : [INTEGER]) - [0]
2020-11-25 20:17:23,390 TRACE  [main] BasicExtractor: extracted value ([is_condi5_0_0_] : [BOOLEAN]) - [true]
2020-11-25 20:17:23,390 TRACE  [main] BasicExtractor: extracted value ([j6_0_0_] : [INTEGER]) - [2]
2020-11-25 20:17:23,391 TRACE  [main] BasicExtractor: extracted value ([problem_7_0_0_] : [BIGINT]) - [11]
2020-11-25 20:17:23,391 TRACE  [main] BasicExtractor: extracted value ([problem_7_0_3_] : [BIGINT]) - [11]
2020-11-25 20:17:23,391 TRACE  [main] BasicExtractor: extracted value ([id1_0_3_] : [BIGINT]) - [63]
2020-11-25 20:17:23,392 TRACE  [main] BasicExtractor: extracted value ([id1_0_0_] : [BIGINT]) - [64]
2020-11-25 20:17:23,392 TRACE  [main] BasicExtractor: extracted value ([binary_v2_0_0_] : [BLOB]) - [null]
2020-11-25 20:17:23,392 TRACE  [main] BasicExtractor: extracted value ([float_va3_0_0_] : [DOUBLE]) - [20.085536923187668]
2020-11-25 20:17:23,392 TRACE  [main] BasicExtractor: extracted value ([i4_0_0_] : [INTEGER]) - [0]
2020-11-25 20:17:23,393 TRACE  [main] BasicExtractor: extracted value ([is_condi5_0_0_] : [BOOLEAN]) - [true]
2020-11-25 20:17:23,393 TRACE  [main] BasicExtractor: extracted value ([j6_0_0_] : [INTEGER]) - [3]
2020-11-25 20:17:23,393 TRACE  [main] BasicExtractor: extracted value ([problem_7_0_0_] : [BIGINT]) - [11]
2020-11-25 20:17:23,393 TRACE  [main] BasicExtractor: extracted value ([problem_7_0_3_] : [BIGINT]) - [11]
2020-11-25 20:17:23,393 TRACE  [main] BasicExtractor: extracted value ([id1_0_3_] : [BIGINT]) - [64]
2020-11-25 20:17:23,393 TRACE  [main] BasicExtractor: extracted value ([id1_0_0_] : [BIGINT]) - [65]
2020-11-25 20:17:23,394 TRACE  [main] BasicExtractor: extracted value ([binary_v2_0_0_] : [BLOB]) - [null]
2020-11-25 20:17:23,394 TRACE  [main] BasicExtractor: extracted value ([float_va3_0_0_] : [DOUBLE]) - [54.598150033144236]
2020-11-25 20:17:23,394 TRACE  [main] BasicExtractor: extracted value ([i4_0_0_] : [INTEGER]) - [0]
2020-11-25 20:17:23,394 TRACE  [main] BasicExtractor: extracted value ([is_condi5_0_0_] : [BOOLEAN]) - [true]
2020-11-25 20:17:23,394 TRACE  [main] BasicExtractor: extracted value ([j6_0_0_] : [INTEGER]) - [4]
2020-11-25 20:17:23,394 TRACE  [main] BasicExtractor: extracted value ([problem_7_0_0_] : [BIGINT]) - [11]
2020-11-25 20:17:23,394 TRACE  [main] BasicExtractor: extracted value ([problem_7_0_3_] : [BIGINT]) - [11]
2020-11-25 20:17:23,394 TRACE  [main] BasicExtractor: extracted value ([id1_0_3_] : [BIGINT]) - [65]
2020-11-25 20:17:23,395 TRACE  [main] BasicExtractor: extracted value ([id1_0_0_] : [BIGINT]) - [66]
2020-11-25 20:17:23,395 TRACE  [main] BasicExtractor: extracted value ([binary_v2_0_0_] : [BLOB]) - [null]
2020-11-25 20:17:23,395 TRACE  [main] BasicExtractor: extracted value ([float_va3_0_0_] : [DOUBLE]) - [148.4131591025766]
2020-11-25 20:17:23,395 TRACE  [main] BasicExtractor: extracted value ([i4_0_0_] : [INTEGER]) - [0]
2020-11-25 20:17:23,395 TRACE  [main] BasicExtractor: extracted value ([is_condi5_0_0_] : [BOOLEAN]) - [true]
2020-11-25 20:17:23,395 TRACE  [main] BasicExtractor: extracted value ([j6_0_0_] : [INTEGER]) - [5]
2020-11-25 20:17:23,395 TRACE  [main] BasicExtractor: extracted value ([problem_7_0_0_] : [BIGINT]) - [11]
2020-11-25 20:17:23,396 TRACE  [main] BasicExtractor: extracted value ([problem_7_0_3_] : [BIGINT]) - [11]
2020-11-25 20:17:23,396 TRACE  [main] BasicExtractor: extracted value ([id1_0_3_] : [BIGINT]) - [66]
2020-11-25 20:17:23,397 TRACE  [main] CollectionType: Created collection wrapper: [com.sf.back.entities.Problem.children#11]
2020-11-25 20:17:23,401 TRACE  [main] BasicBinder: binding parameter [1] as [BIGINT] - [11]
2020-11-25 20:17:23,404 TRACE  [main] BasicBinder: binding parameter [1] as [BLOB] - [null]
2020-11-25 20:17:23,405 TRACE  [main] BasicBinder: binding parameter [2] as [DOUBLE] - [2.0]
2020-11-25 20:17:23,405 TRACE  [main] BasicBinder: binding parameter [3] as [INTEGER] - [0]
2020-11-25 20:17:23,405 TRACE  [main] BasicBinder: binding parameter [4] as [BOOLEAN] - [true]
2020-11-25 20:17:23,405 TRACE  [main] BasicBinder: binding parameter [5] as [INTEGER] - [0]
2020-11-25 20:17:23,405 TRACE  [main] BasicBinder: binding parameter [6] as [BIGINT] - [11]
2020-11-25 20:17:23,405 TRACE  [main] BasicBinder: binding parameter [7] as [BIGINT] - [61]
2020-11-25 20:17:23,406 TRACE  [main] BasicBinder: binding parameter [1] as [BLOB] - [[100, 101, 115, 99, 114, 105, 112, 116, 105, 111, 110, 112, 114, 111, 98, 108, 101, 109]]
2020-11-25 20:17:23,426 TRACE  [main] BasicBinder: binding parameter [2] as [BOOLEAN] - [null]
2020-11-25 20:17:23,426 TRACE  [main] BasicBinder: binding parameter [3] as [VARCHAR] - [POLYNOMIAL]
2020-11-25 20:17:23,427 TRACE  [main] BasicBinder: binding parameter [4] as [INTEGER] - [1]
2020-11-25 20:17:23,427 TRACE  [main] BasicBinder: binding parameter [5] as [BIGINT] - [null]
2020-11-25 20:17:23,427 TRACE  [main] BasicBinder: binding parameter [6] as [INTEGER] - [22]
2020-11-25 20:17:23,428 TRACE  [main] BasicBinder: binding parameter [7] as [BIGINT] - [11]
2020-11-25 20:17:23,453 TRACE  [main] BasicBinder: binding parameter [1] as [BIGINT] - [12]
2020-11-25 20:17:23,454 TRACE  [main] BasicExtractor: extracted value ([id1_1_2_] : [BIGINT]) - [null]
2020-11-25 20:17:23,455 TRACE  [main] BasicExtractor: extracted value ([id1_0_4_] : [BIGINT]) - [null]
2020-11-25 20:17:23,455 TRACE  [main] BasicExtractor: extracted value ([descript2_1_0_] : [BLOB]) - [[112, 114, 111, 98, 108, 101, 109, 100, 101, 115, 99, 114, 105, 112, 116, 105, 111, 110]]
2020-11-25 20:17:23,455 TRACE  [main] BasicExtractor: extracted value ([is_solve3_1_0_] : [BOOLEAN]) - [null]
2020-11-25 20:17:23,455 TRACE  [main] BasicExtractor: extracted value ([kind4_1_0_] : [VARCHAR]) - [POLYNOMIAL]
2020-11-25 20:17:23,456 TRACE  [main] BasicExtractor: extracted value ([matrix_d5_1_0_] : [INTEGER]) - [1]
2020-11-25 20:17:23,456 TRACE  [main] BasicExtractor: extracted value ([parent_p7_1_0_] : [BIGINT]) - [null]
2020-11-25 20:17:23,457 TRACE  [main] BasicExtractor: extracted value ([problem_6_1_0_] : [INTEGER]) - [22]
2020-11-25 20:17:23,457 TRACE  [main] BasicExtractor: extracted value ([problem_7_0_3_] : [BIGINT]) - [null]
2020-11-25 20:17:23,457 TRACE  [main] BasicExtractor: extracted value ([parent_p7_1_1_] : [BIGINT]) - [null]
2020-11-25 20:17:23,458 TRACE  [main] CollectionType: Created collection wrapper: [com.sf.back.entities.Problem.matrixes#12]
2020-11-25 20:17:23,458 TRACE  [main] BasicBinder: binding parameter [1] as [BIGINT] - [12]
2020-11-25 20:17:23,460 TRACE  [main] BasicExtractor: extracted value ([id1_0_1_] : [BIGINT]) - [67]
2020-11-25 20:17:23,460 TRACE  [main] BasicExtractor: extracted value ([binary_v2_0_1_] : [BLOB]) - [null]
2020-11-25 20:17:23,460 TRACE  [main] BasicExtractor: extracted value ([float_va3_0_1_] : [DOUBLE]) - [1.0]
2020-11-25 20:17:23,461 TRACE  [main] BasicExtractor: extracted value ([i4_0_1_] : [INTEGER]) - [0]
2020-11-25 20:17:23,461 TRACE  [main] BasicExtractor: extracted value ([is_condi5_0_1_] : [BOOLEAN]) - [true]
2020-11-25 20:17:23,462 TRACE  [main] BasicExtractor: extracted value ([j6_0_1_] : [INTEGER]) - [0]
2020-11-25 20:17:23,462 TRACE  [main] BasicExtractor: extracted value ([problem_7_0_1_] : [BIGINT]) - [12]
2020-11-25 20:17:23,462 TRACE  [main] BasicExtractor: extracted value ([problem_7_0_0_] : [BIGINT]) - [12]
2020-11-25 20:17:23,463 TRACE  [main] BasicExtractor: extracted value ([id1_0_0_] : [BIGINT]) - [67]
2020-11-25 20:17:23,463 TRACE  [main] BasicExtractor: extracted value ([id1_0_1_] : [BIGINT]) - [68]
2020-11-25 20:17:23,463 TRACE  [main] BasicExtractor: extracted value ([binary_v2_0_1_] : [BLOB]) - [null]
2020-11-25 20:17:23,464 TRACE  [main] BasicExtractor: extracted value ([float_va3_0_1_] : [DOUBLE]) - [2.718281828459045]
2020-11-25 20:17:23,464 TRACE  [main] BasicExtractor: extracted value ([i4_0_1_] : [INTEGER]) - [0]
2020-11-25 20:17:23,464 TRACE  [main] BasicExtractor: extracted value ([is_condi5_0_1_] : [BOOLEAN]) - [true]
2020-11-25 20:17:23,465 TRACE  [main] BasicExtractor: extracted value ([j6_0_1_] : [INTEGER]) - [1]
2020-11-25 20:17:23,465 TRACE  [main] BasicExtractor: extracted value ([problem_7_0_1_] : [BIGINT]) - [12]
2020-11-25 20:17:23,465 TRACE  [main] BasicExtractor: extracted value ([problem_7_0_0_] : [BIGINT]) - [12]
2020-11-25 20:17:23,465 TRACE  [main] BasicExtractor: extracted value ([id1_0_0_] : [BIGINT]) - [68]
2020-11-25 20:17:23,466 TRACE  [main] BasicExtractor: extracted value ([id1_0_1_] : [BIGINT]) - [69]
2020-11-25 20:17:23,466 TRACE  [main] BasicExtractor: extracted value ([binary_v2_0_1_] : [BLOB]) - [null]
2020-11-25 20:17:23,467 TRACE  [main] BasicExtractor: extracted value ([float_va3_0_1_] : [DOUBLE]) - [7.38905609893065]
2020-11-25 20:17:23,468 TRACE  [main] BasicExtractor: extracted value ([i4_0_1_] : [INTEGER]) - [0]
2020-11-25 20:17:23,468 TRACE  [main] BasicExtractor: extracted value ([is_condi5_0_1_] : [BOOLEAN]) - [true]
2020-11-25 20:17:23,468 TRACE  [main] BasicExtractor: extracted value ([j6_0_1_] : [INTEGER]) - [2]
2020-11-25 20:17:23,468 TRACE  [main] BasicExtractor: extracted value ([problem_7_0_1_] : [BIGINT]) - [12]
2020-11-25 20:17:23,469 TRACE  [main] BasicExtractor: extracted value ([problem_7_0_0_] : [BIGINT]) - [12]
2020-11-25 20:17:23,469 TRACE  [main] BasicExtractor: extracted value ([id1_0_0_] : [BIGINT]) - [69]
2020-11-25 20:17:23,470 TRACE  [main] BasicExtractor: extracted value ([id1_0_1_] : [BIGINT]) - [70]
2020-11-25 20:17:23,470 TRACE  [main] BasicExtractor: extracted value ([binary_v2_0_1_] : [BLOB]) - [null]
2020-11-25 20:17:23,471 TRACE  [main] BasicExtractor: extracted value ([float_va3_0_1_] : [DOUBLE]) - [20.085536923187668]
2020-11-25 20:17:23,471 TRACE  [main] BasicExtractor: extracted value ([i4_0_1_] : [INTEGER]) - [0]
2020-11-25 20:17:23,471 TRACE  [main] BasicExtractor: extracted value ([is_condi5_0_1_] : [BOOLEAN]) - [true]
2020-11-25 20:17:23,471 TRACE  [main] BasicExtractor: extracted value ([j6_0_1_] : [INTEGER]) - [3]
2020-11-25 20:17:23,472 TRACE  [main] BasicExtractor: extracted value ([problem_7_0_1_] : [BIGINT]) - [12]
2020-11-25 20:17:23,472 TRACE  [main] BasicExtractor: extracted value ([problem_7_0_0_] : [BIGINT]) - [12]
2020-11-25 20:17:23,472 TRACE  [main] BasicExtractor: extracted value ([id1_0_0_] : [BIGINT]) - [70]
2020-11-25 20:17:23,472 TRACE  [main] BasicExtractor: extracted value ([id1_0_1_] : [BIGINT]) - [71]
2020-11-25 20:17:23,472 TRACE  [main] BasicExtractor: extracted value ([binary_v2_0_1_] : [BLOB]) - [null]
2020-11-25 20:17:23,473 TRACE  [main] BasicExtractor: extracted value ([float_va3_0_1_] : [DOUBLE]) - [54.598150033144236]
2020-11-25 20:17:23,473 TRACE  [main] BasicExtractor: extracted value ([i4_0_1_] : [INTEGER]) - [0]
2020-11-25 20:17:23,473 TRACE  [main] BasicExtractor: extracted value ([is_condi5_0_1_] : [BOOLEAN]) - [true]
2020-11-25 20:17:23,473 TRACE  [main] BasicExtractor: extracted value ([j6_0_1_] : [INTEGER]) - [4]
2020-11-25 20:17:23,473 TRACE  [main] BasicExtractor: extracted value ([problem_7_0_1_] : [BIGINT]) - [12]
2020-11-25 20:17:23,473 TRACE  [main] BasicExtractor: extracted value ([problem_7_0_0_] : [BIGINT]) - [12]
2020-11-25 20:17:23,473 TRACE  [main] BasicExtractor: extracted value ([id1_0_0_] : [BIGINT]) - [71]
2020-11-25 20:17:23,473 TRACE  [main] BasicExtractor: extracted value ([id1_0_1_] : [BIGINT]) - [72]
2020-11-25 20:17:23,474 TRACE  [main] BasicExtractor: extracted value ([binary_v2_0_1_] : [BLOB]) - [null]
2020-11-25 20:17:23,474 TRACE  [main] BasicExtractor: extracted value ([float_va3_0_1_] : [DOUBLE]) - [148.4131591025766]
2020-11-25 20:17:23,474 TRACE  [main] BasicExtractor: extracted value ([i4_0_1_] : [INTEGER]) - [0]
2020-11-25 20:17:23,474 TRACE  [main] BasicExtractor: extracted value ([is_condi5_0_1_] : [BOOLEAN]) - [true]
2020-11-25 20:17:23,474 TRACE  [main] BasicExtractor: extracted value ([j6_0_1_] : [INTEGER]) - [5]
2020-11-25 20:17:23,474 TRACE  [main] BasicExtractor: extracted value ([problem_7_0_1_] : [BIGINT]) - [12]
2020-11-25 20:17:23,474 TRACE  [main] BasicExtractor: extracted value ([problem_7_0_0_] : [BIGINT]) - [12]
2020-11-25 20:17:23,475 TRACE  [main] BasicExtractor: extracted value ([id1_0_0_] : [BIGINT]) - [72]
2020-11-25 20:17:23,477 TRACE  [main] BasicBinder: binding parameter [1] as [BIGINT] - [12]
2020-11-25 20:17:23,478 TRACE  [main] BasicExtractor: extracted value ([id1_1_2_] : [BIGINT]) - [null]
2020-11-25 20:17:23,478 TRACE  [main] BasicExtractor: extracted value ([id1_0_4_] : [BIGINT]) - [null]
2020-11-25 20:17:23,478 TRACE  [main] BasicExtractor: extracted value ([descript2_1_0_] : [BLOB]) - [[112, 114, 111, 98, 108, 101, 109, 100, 101, 115, 99, 114, 105, 112, 116, 105, 111, 110]]
2020-11-25 20:17:23,478 TRACE  [main] BasicExtractor: extracted value ([is_solve3_1_0_] : [BOOLEAN]) - [null]
2020-11-25 20:17:23,478 TRACE  [main] BasicExtractor: extracted value ([kind4_1_0_] : [VARCHAR]) - [POLYNOMIAL]
2020-11-25 20:17:23,478 TRACE  [main] BasicExtractor: extracted value ([matrix_d5_1_0_] : [INTEGER]) - [1]
2020-11-25 20:17:23,479 TRACE  [main] BasicExtractor: extracted value ([parent_p7_1_0_] : [BIGINT]) - [null]
2020-11-25 20:17:23,479 TRACE  [main] BasicExtractor: extracted value ([problem_6_1_0_] : [INTEGER]) - [22]
2020-11-25 20:17:23,479 TRACE  [main] BasicExtractor: extracted value ([problem_7_0_3_] : [BIGINT]) - [null]
2020-11-25 20:17:23,479 TRACE  [main] BasicExtractor: extracted value ([parent_p7_1_1_] : [BIGINT]) - [null]
2020-11-25 20:17:23,479 TRACE  [main] CollectionType: Created collection wrapper: [com.sf.back.entities.Problem.matrixes#12]
2020-11-25 20:17:23,483 TRACE  [main] BasicBinder: binding parameter [1] as [BIGINT] - [12]
2020-11-25 20:17:23,483 TRACE  [main] BasicExtractor: extracted value ([id1_0_1_] : [BIGINT]) - [67]
2020-11-25 20:17:23,483 TRACE  [main] BasicExtractor: extracted value ([binary_v2_0_1_] : [BLOB]) - [null]
2020-11-25 20:17:23,483 TRACE  [main] BasicExtractor: extracted value ([float_va3_0_1_] : [DOUBLE]) - [1.0]
2020-11-25 20:17:23,484 TRACE  [main] BasicExtractor: extracted value ([i4_0_1_] : [INTEGER]) - [0]
2020-11-25 20:17:23,484 TRACE  [main] BasicExtractor: extracted value ([is_condi5_0_1_] : [BOOLEAN]) - [true]
2020-11-25 20:17:23,484 TRACE  [main] BasicExtractor: extracted value ([j6_0_1_] : [INTEGER]) - [0]
2020-11-25 20:17:23,484 TRACE  [main] BasicExtractor: extracted value ([problem_7_0_1_] : [BIGINT]) - [12]
2020-11-25 20:17:23,484 TRACE  [main] BasicExtractor: extracted value ([problem_7_0_0_] : [BIGINT]) - [12]
2020-11-25 20:17:23,484 TRACE  [main] BasicExtractor: extracted value ([id1_0_0_] : [BIGINT]) - [67]
2020-11-25 20:17:23,485 TRACE  [main] BasicExtractor: extracted value ([id1_0_1_] : [BIGINT]) - [68]
2020-11-25 20:17:23,486 TRACE  [main] BasicExtractor: extracted value ([binary_v2_0_1_] : [BLOB]) - [null]
2020-11-25 20:17:23,486 TRACE  [main] BasicExtractor: extracted value ([float_va3_0_1_] : [DOUBLE]) - [2.718281828459045]
2020-11-25 20:17:23,486 TRACE  [main] BasicExtractor: extracted value ([i4_0_1_] : [INTEGER]) - [0]
2020-11-25 20:17:23,486 TRACE  [main] BasicExtractor: extracted value ([is_condi5_0_1_] : [BOOLEAN]) - [true]
2020-11-25 20:17:23,486 TRACE  [main] BasicExtractor: extracted value ([j6_0_1_] : [INTEGER]) - [1]
2020-11-25 20:17:23,486 TRACE  [main] BasicExtractor: extracted value ([problem_7_0_1_] : [BIGINT]) - [12]
2020-11-25 20:17:23,486 TRACE  [main] BasicExtractor: extracted value ([problem_7_0_0_] : [BIGINT]) - [12]
2020-11-25 20:17:23,486 TRACE  [main] BasicExtractor: extracted value ([id1_0_0_] : [BIGINT]) - [68]
2020-11-25 20:17:23,487 TRACE  [main] BasicExtractor: extracted value ([id1_0_1_] : [BIGINT]) - [69]
2020-11-25 20:17:23,487 TRACE  [main] BasicExtractor: extracted value ([binary_v2_0_1_] : [BLOB]) - [null]
2020-11-25 20:17:23,487 TRACE  [main] BasicExtractor: extracted value ([float_va3_0_1_] : [DOUBLE]) - [7.38905609893065]
2020-11-25 20:17:23,487 TRACE  [main] BasicExtractor: extracted value ([i4_0_1_] : [INTEGER]) - [0]
2020-11-25 20:17:23,487 TRACE  [main] BasicExtractor: extracted value ([is_condi5_0_1_] : [BOOLEAN]) - [true]
2020-11-25 20:17:23,487 TRACE  [main] BasicExtractor: extracted value ([j6_0_1_] : [INTEGER]) - [2]
2020-11-25 20:17:23,488 TRACE  [main] BasicExtractor: extracted value ([problem_7_0_1_] : [BIGINT]) - [12]
2020-11-25 20:17:23,488 TRACE  [main] BasicExtractor: extracted value ([problem_7_0_0_] : [BIGINT]) - [12]
2020-11-25 20:17:23,488 TRACE  [main] BasicExtractor: extracted value ([id1_0_0_] : [BIGINT]) - [69]
2020-11-25 20:17:23,488 TRACE  [main] BasicExtractor: extracted value ([id1_0_1_] : [BIGINT]) - [70]
2020-11-25 20:17:23,503 TRACE  [main] BasicExtractor: extracted value ([binary_v2_0_1_] : [BLOB]) - [null]
2020-11-25 20:17:23,504 TRACE  [main] BasicExtractor: extracted value ([float_va3_0_1_] : [DOUBLE]) - [20.085536923187668]
2020-11-25 20:17:23,504 TRACE  [main] BasicExtractor: extracted value ([i4_0_1_] : [INTEGER]) - [0]
2020-11-25 20:17:23,504 TRACE  [main] BasicExtractor: extracted value ([is_condi5_0_1_] : [BOOLEAN]) - [true]
2020-11-25 20:17:23,505 TRACE  [main] BasicExtractor: extracted value ([j6_0_1_] : [INTEGER]) - [3]
2020-11-25 20:17:23,505 TRACE  [main] BasicExtractor: extracted value ([problem_7_0_1_] : [BIGINT]) - [12]
2020-11-25 20:17:23,506 TRACE  [main] BasicExtractor: extracted value ([problem_7_0_0_] : [BIGINT]) - [12]
2020-11-25 20:17:23,506 TRACE  [main] BasicExtractor: extracted value ([id1_0_0_] : [BIGINT]) - [70]
2020-11-25 20:17:23,506 TRACE  [main] BasicExtractor: extracted value ([id1_0_1_] : [BIGINT]) - [71]
2020-11-25 20:17:23,507 TRACE  [main] BasicExtractor: extracted value ([binary_v2_0_1_] : [BLOB]) - [null]
2020-11-25 20:17:23,508 TRACE  [main] BasicExtractor: extracted value ([float_va3_0_1_] : [DOUBLE]) - [54.598150033144236]
2020-11-25 20:17:23,508 TRACE  [main] BasicExtractor: extracted value ([i4_0_1_] : [INTEGER]) - [0]
2020-11-25 20:17:23,509 TRACE  [main] BasicExtractor: extracted value ([is_condi5_0_1_] : [BOOLEAN]) - [true]
2020-11-25 20:17:23,509 TRACE  [main] BasicExtractor: extracted value ([j6_0_1_] : [INTEGER]) - [4]
2020-11-25 20:17:23,509 TRACE  [main] BasicExtractor: extracted value ([problem_7_0_1_] : [BIGINT]) - [12]
2020-11-25 20:17:23,510 TRACE  [main] BasicExtractor: extracted value ([problem_7_0_0_] : [BIGINT]) - [12]
2020-11-25 20:17:23,513 TRACE  [main] BasicExtractor: extracted value ([id1_0_0_] : [BIGINT]) - [71]
2020-11-25 20:17:23,514 TRACE  [main] BasicExtractor: extracted value ([id1_0_1_] : [BIGINT]) - [72]
2020-11-25 20:17:23,514 TRACE  [main] BasicExtractor: extracted value ([binary_v2_0_1_] : [BLOB]) - [null]
2020-11-25 20:17:23,514 TRACE  [main] BasicExtractor: extracted value ([float_va3_0_1_] : [DOUBLE]) - [148.4131591025766]
2020-11-25 20:17:23,514 TRACE  [main] BasicExtractor: extracted value ([i4_0_1_] : [INTEGER]) - [0]
2020-11-25 20:17:23,515 TRACE  [main] BasicExtractor: extracted value ([is_condi5_0_1_] : [BOOLEAN]) - [true]
2020-11-25 20:17:23,515 TRACE  [main] BasicExtractor: extracted value ([j6_0_1_] : [INTEGER]) - [5]
2020-11-25 20:17:23,515 TRACE  [main] BasicExtractor: extracted value ([problem_7_0_1_] : [BIGINT]) - [12]
2020-11-25 20:17:23,515 TRACE  [main] BasicExtractor: extracted value ([problem_7_0_0_] : [BIGINT]) - [12]
2020-11-25 20:17:23,515 TRACE  [main] BasicExtractor: extracted value ([id1_0_0_] : [BIGINT]) - [72]
2020-11-25 20:17:23,532 TRACE  [main] BasicBinder: binding parameter [1] as [BIGINT] - [67]
2020-11-25 20:17:23,536 TRACE  [main] BasicBinder: binding parameter [1] as [BIGINT] - [68]
2020-11-25 20:17:23,537 TRACE  [main] BasicBinder: binding parameter [1] as [BIGINT] - [69]
2020-11-25 20:17:23,537 TRACE  [main] BasicBinder: binding parameter [1] as [BIGINT] - [70]
2020-11-25 20:17:23,542 TRACE  [main] BasicBinder: binding parameter [1] as [BIGINT] - [71]
2020-11-25 20:17:23,543 TRACE  [main] BasicBinder: binding parameter [1] as [BIGINT] - [72]
2020-11-25 20:17:23,545 TRACE  [main] BasicBinder: binding parameter [1] as [BIGINT] - [12]
2020-11-25 20:17:23,551 TRACE  [main] BasicBinder: binding parameter [1] as [BIGINT] - [12]
2020-11-25 20:17:23,558 WARN   [main] ProblemService: Problem with 12 is not found
2020-11-25 20:17:24,793 DEBUG  [main] BasicTypeRegistry: Adding type registration boolean -> org.hibernate.type.BooleanType@6babffb5
2020-11-25 20:17:24,793 DEBUG  [main] BasicTypeRegistry: Adding type registration boolean -> org.hibernate.type.BooleanType@6babffb5
2020-11-25 20:17:24,793 DEBUG  [main] BasicTypeRegistry: Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@6babffb5
2020-11-25 20:17:24,793 DEBUG  [main] BasicTypeRegistry: Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@7698b7a4
2020-11-25 20:17:24,793 DEBUG  [main] BasicTypeRegistry: Adding type registration true_false -> org.hibernate.type.TrueFalseType@11c713b7
2020-11-25 20:17:24,793 DEBUG  [main] BasicTypeRegistry: Adding type registration yes_no -> org.hibernate.type.YesNoType@3c232051
2020-11-25 20:17:24,793 DEBUG  [main] BasicTypeRegistry: Adding type registration byte -> org.hibernate.type.ByteType@4130a648
2020-11-25 20:17:24,793 DEBUG  [main] BasicTypeRegistry: Adding type registration byte -> org.hibernate.type.ByteType@4130a648
2020-11-25 20:17:24,793 DEBUG  [main] BasicTypeRegistry: Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@4130a648
2020-11-25 20:17:24,793 DEBUG  [main] BasicTypeRegistry: Adding type registration character -> org.hibernate.type.CharacterType@3e33b52e
2020-11-25 20:17:24,794 DEBUG  [main] BasicTypeRegistry: Adding type registration char -> org.hibernate.type.CharacterType@3e33b52e
2020-11-25 20:17:24,794 DEBUG  [main] BasicTypeRegistry: Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@3e33b52e
2020-11-25 20:17:24,794 DEBUG  [main] BasicTypeRegistry: Adding type registration short -> org.hibernate.type.ShortType@2287395
2020-11-25 20:17:24,794 DEBUG  [main] BasicTypeRegistry: Adding type registration short -> org.hibernate.type.ShortType@2287395
2020-11-25 20:17:24,794 DEBUG  [main] BasicTypeRegistry: Adding type registration java.lang.Short -> org.hibernate.type.ShortType@2287395
2020-11-25 20:17:24,794 DEBUG  [main] BasicTypeRegistry: Adding type registration integer -> org.hibernate.type.IntegerType@7a682d35
2020-11-25 20:17:24,794 DEBUG  [main] BasicTypeRegistry: Adding type registration int -> org.hibernate.type.IntegerType@7a682d35
2020-11-25 20:17:24,794 DEBUG  [main] BasicTypeRegistry: Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@7a682d35
2020-11-25 20:17:24,794 DEBUG  [main] BasicTypeRegistry: Adding type registration long -> org.hibernate.type.LongType@16134476
2020-11-25 20:17:24,794 DEBUG  [main] BasicTypeRegistry: Adding type registration long -> org.hibernate.type.LongType@16134476
2020-11-25 20:17:24,794 DEBUG  [main] BasicTypeRegistry: Adding type registration java.lang.Long -> org.hibernate.type.LongType@16134476
2020-11-25 20:17:24,794 DEBUG  [main] BasicTypeRegistry: Adding type registration float -> org.hibernate.type.FloatType@67f63d26
2020-11-25 20:17:24,794 DEBUG  [main] BasicTypeRegistry: Adding type registration float -> org.hibernate.type.FloatType@67f63d26
2020-11-25 20:17:24,794 DEBUG  [main] BasicTypeRegistry: Adding type registration java.lang.Float -> org.hibernate.type.FloatType@67f63d26
2020-11-25 20:17:24,794 DEBUG  [main] BasicTypeRegistry: Adding type registration double -> org.hibernate.type.DoubleType@67332b1e
2020-11-25 20:17:24,794 DEBUG  [main] BasicTypeRegistry: Adding type registration double -> org.hibernate.type.DoubleType@67332b1e
2020-11-25 20:17:24,794 DEBUG  [main] BasicTypeRegistry: Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@67332b1e
2020-11-25 20:17:24,794 DEBUG  [main] BasicTypeRegistry: Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@4538856f
2020-11-25 20:17:24,794 DEBUG  [main] BasicTypeRegistry: Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@4538856f
2020-11-25 20:17:24,794 DEBUG  [main] BasicTypeRegistry: Adding type registration big_integer -> org.hibernate.type.BigIntegerType@3d8d17a3
2020-11-25 20:17:24,794 DEBUG  [main] BasicTypeRegistry: Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@3d8d17a3
2020-11-25 20:17:24,794 DEBUG  [main] BasicTypeRegistry: Adding type registration string -> org.hibernate.type.StringType@b5c6a30
2020-11-25 20:17:24,794 DEBUG  [main] BasicTypeRegistry: Adding type registration java.lang.String -> org.hibernate.type.StringType@b5c6a30
2020-11-25 20:17:24,794 DEBUG  [main] BasicTypeRegistry: Adding type registration nstring -> org.hibernate.type.StringNVarcharType@47829d6d
2020-11-25 20:17:24,795 DEBUG  [main] BasicTypeRegistry: Adding type registration ncharacter -> org.hibernate.type.CharacterNCharType@7a1b8a46
2020-11-25 20:17:24,795 DEBUG  [main] BasicTypeRegistry: Adding type registration url -> org.hibernate.type.UrlType@78307a56
2020-11-25 20:17:24,795 DEBUG  [main] BasicTypeRegistry: Adding type registration java.net.URL -> org.hibernate.type.UrlType@78307a56
2020-11-25 20:17:24,795 DEBUG  [main] BasicTypeRegistry: Adding type registration Duration -> org.hibernate.type.DurationType@b791a81
2020-11-25 20:17:24,795 DEBUG  [main] BasicTypeRegistry: Adding type registration java.time.Duration -> org.hibernate.type.DurationType@b791a81
2020-11-25 20:17:24,795 DEBUG  [main] BasicTypeRegistry: Adding type registration Instant -> org.hibernate.type.InstantType@7c40ffef
2020-11-25 20:17:24,795 DEBUG  [main] BasicTypeRegistry: Adding type registration java.time.Instant -> org.hibernate.type.InstantType@7c40ffef
2020-11-25 20:17:24,795 DEBUG  [main] BasicTypeRegistry: Adding type registration LocalDateTime -> org.hibernate.type.LocalDateTimeType@fd413fb
2020-11-25 20:17:24,795 DEBUG  [main] BasicTypeRegistry: Adding type registration java.time.LocalDateTime -> org.hibernate.type.LocalDateTimeType@fd413fb
2020-11-25 20:17:24,795 DEBUG  [main] BasicTypeRegistry: Adding type registration LocalDate -> org.hibernate.type.LocalDateType@64bebd55
2020-11-25 20:17:24,795 DEBUG  [main] BasicTypeRegistry: Adding type registration java.time.LocalDate -> org.hibernate.type.LocalDateType@64bebd55
2020-11-25 20:17:24,795 DEBUG  [main] BasicTypeRegistry: Adding type registration LocalTime -> org.hibernate.type.LocalTimeType@4e3f2908
2020-11-25 20:17:24,795 DEBUG  [main] BasicTypeRegistry: Adding type registration java.time.LocalTime -> org.hibernate.type.LocalTimeType@4e3f2908
2020-11-25 20:17:24,795 DEBUG  [main] BasicTypeRegistry: Adding type registration OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@33feda48
2020-11-25 20:17:24,795 DEBUG  [main] BasicTypeRegistry: Adding type registration java.time.OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@33feda48
2020-11-25 20:17:24,795 DEBUG  [main] BasicTypeRegistry: Adding type registration OffsetTime -> org.hibernate.type.OffsetTimeType@373052b5
2020-11-25 20:17:24,795 DEBUG  [main] BasicTypeRegistry: Adding type registration java.time.OffsetTime -> org.hibernate.type.OffsetTimeType@373052b5
2020-11-25 20:17:24,795 DEBUG  [main] BasicTypeRegistry: Adding type registration ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@7d8cf9ac
2020-11-25 20:17:24,795 DEBUG  [main] BasicTypeRegistry: Adding type registration java.time.ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@7d8cf9ac
2020-11-25 20:17:24,795 DEBUG  [main] BasicTypeRegistry: Adding type registration date -> org.hibernate.type.DateType@750ed637
2020-11-25 20:17:24,795 DEBUG  [main] BasicTypeRegistry: Adding type registration java.sql.Date -> org.hibernate.type.DateType@750ed637
2020-11-25 20:17:24,795 DEBUG  [main] BasicTypeRegistry: Adding type registration time -> org.hibernate.type.TimeType@4998e74b
2020-11-25 20:17:24,795 DEBUG  [main] BasicTypeRegistry: Adding type registration java.sql.Time -> org.hibernate.type.TimeType@4998e74b
2020-11-25 20:17:24,796 DEBUG  [main] BasicTypeRegistry: Adding type registration timestamp -> org.hibernate.type.TimestampType@575cabf0
2020-11-25 20:17:24,796 DEBUG  [main] BasicTypeRegistry: Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@575cabf0
2020-11-25 20:17:24,796 DEBUG  [main] BasicTypeRegistry: Adding type registration java.util.Date -> org.hibernate.type.TimestampType@575cabf0
2020-11-25 20:17:24,796 DEBUG  [main] BasicTypeRegistry: Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@2da81754
2020-11-25 20:17:24,796 DEBUG  [main] BasicTypeRegistry: Adding type registration calendar -> org.hibernate.type.CalendarType@390037e7
2020-11-25 20:17:24,796 DEBUG  [main] BasicTypeRegistry: Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@390037e7
2020-11-25 20:17:24,796 DEBUG  [main] BasicTypeRegistry: Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@390037e7
2020-11-25 20:17:24,796 DEBUG  [main] BasicTypeRegistry: Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@6002e944
2020-11-25 20:17:24,796 DEBUG  [main] BasicTypeRegistry: Adding type registration locale -> org.hibernate.type.LocaleType@7d4d8579
2020-11-25 20:17:24,796 DEBUG  [main] BasicTypeRegistry: Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@7d4d8579
2020-11-25 20:17:24,796 DEBUG  [main] BasicTypeRegistry: Adding type registration currency -> org.hibernate.type.CurrencyType@3b24087d
2020-11-25 20:17:24,796 DEBUG  [main] BasicTypeRegistry: Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@3b24087d
2020-11-25 20:17:24,796 DEBUG  [main] BasicTypeRegistry: Adding type registration timezone -> org.hibernate.type.TimeZoneType@4351ed61
2020-11-25 20:17:24,802 DEBUG  [main] BasicTypeRegistry: Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@4351ed61
2020-11-25 20:17:24,802 DEBUG  [main] BasicTypeRegistry: Adding type registration class -> org.hibernate.type.ClassType@348137e8
2020-11-25 20:17:24,802 DEBUG  [main] BasicTypeRegistry: Adding type registration java.lang.Class -> org.hibernate.type.ClassType@348137e8
2020-11-25 20:17:24,802 DEBUG  [main] BasicTypeRegistry: Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@2574a9e3
2020-11-25 20:17:24,802 DEBUG  [main] BasicTypeRegistry: Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@2574a9e3
2020-11-25 20:17:24,803 DEBUG  [main] BasicTypeRegistry: Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@3fe512d2
2020-11-25 20:17:24,803 DEBUG  [main] BasicTypeRegistry: Adding type registration binary -> org.hibernate.type.BinaryType@5ad6cc21
2020-11-25 20:17:24,803 DEBUG  [main] BasicTypeRegistry: Adding type registration byte[] -> org.hibernate.type.BinaryType@5ad6cc21
2020-11-25 20:17:24,803 DEBUG  [main] BasicTypeRegistry: Adding type registration [B -> org.hibernate.type.BinaryType@5ad6cc21
2020-11-25 20:17:24,803 DEBUG  [main] BasicTypeRegistry: Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@5a0e0886
2020-11-25 20:17:24,803 DEBUG  [main] BasicTypeRegistry: Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@5a0e0886
2020-11-25 20:17:24,803 DEBUG  [main] BasicTypeRegistry: Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@5a0e0886
2020-11-25 20:17:24,804 DEBUG  [main] BasicTypeRegistry: Adding type registration row_version -> org.hibernate.type.RowVersionType@5e593b08
2020-11-25 20:17:24,804 DEBUG  [main] BasicTypeRegistry: Adding type registration image -> org.hibernate.type.ImageType@2ac519dc
2020-11-25 20:17:24,804 DEBUG  [main] BasicTypeRegistry: Adding type registration characters -> org.hibernate.type.CharArrayType@1e01b133
2020-11-25 20:17:24,804 DEBUG  [main] BasicTypeRegistry: Adding type registration char[] -> org.hibernate.type.CharArrayType@1e01b133
2020-11-25 20:17:24,804 DEBUG  [main] BasicTypeRegistry: Adding type registration [C -> org.hibernate.type.CharArrayType@1e01b133
2020-11-25 20:17:24,810 DEBUG  [main] BasicTypeRegistry: Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@e7b265e
2020-11-25 20:17:24,810 DEBUG  [main] BasicTypeRegistry: Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@e7b265e
2020-11-25 20:17:24,811 DEBUG  [main] BasicTypeRegistry: Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@e7b265e
2020-11-25 20:17:24,811 DEBUG  [main] BasicTypeRegistry: Adding type registration text -> org.hibernate.type.TextType@1fecfaea
2020-11-25 20:17:24,811 DEBUG  [main] BasicTypeRegistry: Adding type registration ntext -> org.hibernate.type.NTextType@4bb147ec
2020-11-25 20:17:24,812 DEBUG  [main] BasicTypeRegistry: Adding type registration blob -> org.hibernate.type.BlobType@6518fdfd
2020-11-25 20:17:24,812 DEBUG  [main] BasicTypeRegistry: Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@6518fdfd
2020-11-25 20:17:24,813 DEBUG  [main] BasicTypeRegistry: Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@174721c4
2020-11-25 20:17:24,813 DEBUG  [main] BasicTypeRegistry: Adding type registration clob -> org.hibernate.type.ClobType@151ab2b9
2020-11-25 20:17:24,813 DEBUG  [main] BasicTypeRegistry: Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@151ab2b9
2020-11-25 20:17:24,814 DEBUG  [main] BasicTypeRegistry: Adding type registration nclob -> org.hibernate.type.NClobType@4f116ca2
2020-11-25 20:17:24,814 DEBUG  [main] BasicTypeRegistry: Adding type registration java.sql.NClob -> org.hibernate.type.NClobType@4f116ca2
2020-11-25 20:17:24,814 DEBUG  [main] BasicTypeRegistry: Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@64b018f3
2020-11-25 20:17:24,815 DEBUG  [main] BasicTypeRegistry: Adding type registration materialized_nclob -> org.hibernate.type.MaterializedNClobType@1c240cf2
2020-11-25 20:17:24,815 DEBUG  [main] BasicTypeRegistry: Adding type registration serializable -> org.hibernate.type.SerializableType@7e8279e5
2020-11-25 20:17:24,816 DEBUG  [main] BasicTypeRegistry: Adding type registration object -> org.hibernate.type.ObjectType@577536e0
2020-11-25 20:17:24,816 DEBUG  [main] BasicTypeRegistry: Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@577536e0
2020-11-25 20:17:24,816 DEBUG  [main] BasicTypeRegistry: Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@1c25385a
2020-11-25 20:17:24,817 DEBUG  [main] BasicTypeRegistry: Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@75d0cac6
2020-11-25 20:17:24,817 DEBUG  [main] BasicTypeRegistry: Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@44a0e68f
2020-11-25 20:17:24,817 DEBUG  [main] BasicTypeRegistry: Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@567baa55
2020-11-25 20:17:24,818 DEBUG  [main] BasicTypeRegistry: Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@63a9af28
2020-11-25 20:17:24,818 DEBUG  [main] BasicTypeRegistry: Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@105cdf61
2020-11-25 20:17:24,818 DEBUG  [main] BasicTypeRegistry: Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@530bd77b
2020-11-25 20:17:24,819 DEBUG  [main] BasicTypeRegistry: Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@58a9e64d
2020-11-25 20:17:24,845 DEBUG  [main] TypeConfiguration$Scope: Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@3d0f4ac4] to MetadataBuildingContext [org.hibernate.boot.internal.MetadataBuildingContextRootImpl@544733a4]
2020-11-25 20:17:24,855 DEBUG  [main] EnumType: Using NAMED-based conversion for Enum com.sf.back.entities.Kind
2020-11-25 20:17:24,857 DEBUG  [main] EnumType: Using NAMED-based conversion for Enum com.sf.back.entities.Kind
2020-11-25 20:17:24,903 DEBUG  [main] TypeConfiguration$Scope: Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@3d0f4ac4] to SessionFactoryImpl [org.hibernate.internal.SessionFactoryImpl@1be3a294]
2020-11-25 20:17:24,904 DEBUG  [main] EnumType: Using NAMED-based conversion for Enum com.sf.back.entities.Kind
2020-11-25 20:17:24,904 DEBUG  [main] EnumType: Using NAMED-based conversion for Enum com.sf.back.entities.Kind
2020-11-25 20:17:24,906 DEBUG  [main] EnumType: Using NAMED-based conversion for Enum com.sf.back.entities.Kind
2020-11-25 20:17:24,907 DEBUG  [main] EnumType: Using NAMED-based conversion for Enum com.sf.back.entities.Kind
2020-11-25 20:17:24,926 DEBUG  [main] EnumType: Using NAMED-based conversion for Enum com.sf.back.entities.Kind
2020-11-25 20:17:24,927 DEBUG  [main] EnumType: Using NAMED-based conversion for Enum com.sf.back.entities.Kind
2020-11-25 20:17:24,945 DEBUG  [main] EnumType: Using NAMED-based conversion for Enum com.sf.back.entities.Kind
2020-11-25 20:17:24,961 TRACE  [main] TypeConfiguration$Scope: Handling #sessionFactoryCreated from [org.hibernate.internal.SessionFactoryImpl@1be3a294] for TypeConfiguration
2020-11-25 20:17:25,164 WARN   [main] JpaBaseConfiguration$JpaWebConfiguration: spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2020-11-25 20:17:25,435 TRACE  [main] BasicBinder: binding parameter [1] as [BLOB] - [[70, 105, 110, 100, 32, 97, 108, 108, 32, 114, 111, 111, 116, 115, 32, 111, 102, 32, 103, 105, 118, 101, 110, 32, 112, 111, 108, 121, 110, 111, 109, 105, 97, 108]]
2020-11-25 20:17:25,436 TRACE  [main] BasicBinder: binding parameter [2] as [BOOLEAN] - [false]
2020-11-25 20:17:25,437 TRACE  [main] BasicBinder: binding parameter [3] as [VARCHAR] - [POLYNOMIAL]
2020-11-25 20:17:25,437 TRACE  [main] BasicBinder: binding parameter [4] as [INTEGER] - [1]
2020-11-25 20:17:25,437 TRACE  [main] BasicBinder: binding parameter [5] as [BIGINT] - [null]
2020-11-25 20:17:25,437 TRACE  [main] BasicBinder: binding parameter [6] as [INTEGER] - [6]
2020-11-25 20:17:25,440 TRACE  [main] BasicBinder: binding parameter [1] as [BLOB] - [null]
2020-11-25 20:17:25,440 TRACE  [main] BasicBinder: binding parameter [2] as [DOUBLE] - [1.0]
2020-11-25 20:17:25,441 TRACE  [main] BasicBinder: binding parameter [3] as [INTEGER] - [0]
2020-11-25 20:17:25,441 TRACE  [main] BasicBinder: binding parameter [4] as [BOOLEAN] - [true]
2020-11-25 20:17:25,441 TRACE  [main] BasicBinder: binding parameter [5] as [INTEGER] - [0]
2020-11-25 20:17:25,441 TRACE  [main] BasicBinder: binding parameter [6] as [BIGINT] - [1]
2020-11-25 20:17:25,442 TRACE  [main] BasicBinder: binding parameter [1] as [BLOB] - [null]
2020-11-25 20:17:25,442 TRACE  [main] BasicBinder: binding parameter [2] as [DOUBLE] - [2.0]
2020-11-25 20:17:25,443 TRACE  [main] BasicBinder: binding parameter [3] as [INTEGER] - [0]
2020-11-25 20:17:25,443 TRACE  [main] BasicBinder: binding parameter [4] as [BOOLEAN] - [true]
2020-11-25 20:17:25,443 TRACE  [main] BasicBinder: binding parameter [5] as [INTEGER] - [1]
2020-11-25 20:17:25,444 TRACE  [main] BasicBinder: binding parameter [6] as [BIGINT] - [1]
2020-11-25 20:17:25,446 TRACE  [main] BasicBinder: binding parameter [1] as [BLOB] - [null]
2020-11-25 20:17:25,447 TRACE  [main] BasicBinder: binding parameter [2] as [DOUBLE] - [1.0]
2020-11-25 20:17:25,447 TRACE  [main] BasicBinder: binding parameter [3] as [INTEGER] - [0]
2020-11-25 20:17:25,447 TRACE  [main] BasicBinder: binding parameter [4] as [BOOLEAN] - [true]
2020-11-25 20:17:25,447 TRACE  [main] BasicBinder: binding parameter [5] as [INTEGER] - [2]
2020-11-25 20:17:25,448 TRACE  [main] BasicBinder: binding parameter [6] as [BIGINT] - [1]
2020-11-25 20:17:25,450 TRACE  [main] BasicBinder: binding parameter [1] as [BLOB] - [null]
2020-11-25 20:17:25,450 TRACE  [main] BasicBinder: binding parameter [2] as [DOUBLE] - [1.0]
2020-11-25 20:17:25,450 TRACE  [main] BasicBinder: binding parameter [3] as [INTEGER] - [0]
2020-11-25 20:17:25,451 TRACE  [main] BasicBinder: binding parameter [4] as [BOOLEAN] - [false]
2020-11-25 20:17:25,451 TRACE  [main] BasicBinder: binding parameter [5] as [INTEGER] - [0]
2020-11-25 20:17:25,451 TRACE  [main] BasicBinder: binding parameter [6] as [BIGINT] - [1]
2020-11-25 20:17:25,459 TRACE  [main] BasicBinder: binding parameter [1] as [BLOB] - [null]
2020-11-25 20:17:25,459 TRACE  [main] BasicBinder: binding parameter [2] as [DOUBLE] - [1.0]
2020-11-25 20:17:25,460 TRACE  [main] BasicBinder: binding parameter [3] as [INTEGER] - [0]
2020-11-25 20:17:25,460 TRACE  [main] BasicBinder: binding parameter [4] as [BOOLEAN] - [false]
2020-11-25 20:17:25,460 TRACE  [main] BasicBinder: binding parameter [5] as [INTEGER] - [1]
2020-11-25 20:17:25,461 TRACE  [main] BasicBinder: binding parameter [6] as [BIGINT] - [1]
2020-11-25 20:17:25,744 WARN   [SpringContextShutdownHook] SqlExceptionHelper: SQL Error: 90121, SQLState: 90121
2020-11-25 20:17:25,750 ERROR  [SpringContextShutdownHook] SqlExceptionHelper: Database is already closed (to disable automatic closing at VM shutdown, add ";DB_CLOSE_ON_EXIT=FALSE" to the db URL) [90121-200]
2020-11-25 20:17:25,751 WARN   [SpringContextShutdownHook] SqlExceptionHelper: SQL Error: 90121, SQLState: 90121
2020-11-25 20:17:25,751 ERROR  [SpringContextShutdownHook] SqlExceptionHelper: Database is already closed (to disable automatic closing at VM shutdown, add ";DB_CLOSE_ON_EXIT=FALSE" to the db URL) [90121-200]
2020-11-25 20:17:25,751 WARN   [SpringContextShutdownHook] DisposableBeanAdapter: Invocation of destroy method failed on bean with name 'entityManagerFactory': org.hibernate.exception.JDBCConnectionException: Unable to release JDBC Connection used for DDL execution
2020-11-25 20:17:25,887 TRACE  [SpringContextShutdownHook] TypeConfiguration$Scope: Handling #sessionFactoryClosed from [org.hibernate.internal.SessionFactoryImpl@4fe8f2ae] for TypeConfiguration
2020-11-25 20:17:25,888 DEBUG  [SpringContextShutdownHook] TypeConfiguration$Scope: Un-scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration$Scope@5f5e7994] from SessionFactory [org.hibernate.internal.SessionFactoryImpl@4fe8f2ae]
2020-11-25 20:17:25,895 TRACE  [SpringContextShutdownHook] TypeConfiguration$Scope: Handling #sessionFactoryClosed from [org.hibernate.internal.SessionFactoryImpl@ce0bbd5] for TypeConfiguration
2020-11-25 20:17:25,895 DEBUG  [SpringContextShutdownHook] TypeConfiguration$Scope: Un-scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration$Scope@3d613cf7] from SessionFactory [org.hibernate.internal.SessionFactoryImpl@ce0bbd5]
2020-11-25 20:18:15,786 WARN   [main] dev-updater: Use the './' prefix for files in JAR files: 'flow-component-renderer.js', please update your component.
2020-11-25 20:18:31,788 ERROR  [main] HikariPool: HikariPool-1 - Exception during pool initialization.
com.mysql.cj.jdbc.exceptions.CommunicationsException: Communications link failure

The last packet sent successfully to the server was 0 milliseconds ago. The driver has not received any packets from the server.
	at com.mysql.cj.jdbc.exceptions.SQLError.createCommunicationsException(SQLError.java:174)
	at com.mysql.cj.jdbc.exceptions.SQLExceptionsMapping.translateException(SQLExceptionsMapping.java:64)
	at com.mysql.cj.jdbc.ConnectionImpl.createNewIO(ConnectionImpl.java:836)
	at com.mysql.cj.jdbc.ConnectionImpl.<init>(ConnectionImpl.java:456)
	at com.mysql.cj.jdbc.ConnectionImpl.getInstance(ConnectionImpl.java:246)
	at com.mysql.cj.jdbc.NonRegisteringDriver.connect(NonRegisteringDriver.java:199)
	at com.zaxxer.hikari.util.DriverDataSource.getConnection(DriverDataSource.java:138)
	at com.zaxxer.hikari.pool.PoolBase.newConnection(PoolBase.java:353)
	at com.zaxxer.hikari.pool.PoolBase.newPoolEntry(PoolBase.java:201)
	at com.zaxxer.hikari.pool.HikariPool.createPoolEntry(HikariPool.java:473)
	at com.zaxxer.hikari.pool.HikariPool.checkFailFast(HikariPool.java:562)
	at com.zaxxer.hikari.pool.HikariPool.<init>(HikariPool.java:115)
	at com.zaxxer.hikari.HikariDataSource.getConnection(HikariDataSource.java:112)
	at org.hibernate.engine.jdbc.connections.internal.DatasourceConnectionProviderImpl.getConnection(DatasourceConnectionProviderImpl.java:122)
	at org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator$ConnectionProviderJdbcConnectionAccess.obtainConnection(JdbcEnvironmentInitiator.java:180)
	at org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator.initiateService(JdbcEnvironmentInitiator.java:68)
	at org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator.initiateService(JdbcEnvironmentInitiator.java:35)
	at org.hibernate.boot.registry.internal.StandardServiceRegistryImpl.initiateService(StandardServiceRegistryImpl.java:101)
	at org.hibernate.service.internal.AbstractServiceRegistryImpl.createService(AbstractServiceRegistryImpl.java:263)
	at org.hibernate.service.internal.AbstractServiceRegistryImpl.initializeService(AbstractServiceRegistryImpl.java:237)
	at org.hibernate.service.internal.AbstractServiceRegistryImpl.getService(AbstractServiceRegistryImpl.java:214)
	at org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory.injectServices(DefaultIdentifierGeneratorFactory.java:152)
	at org.hibernate.service.internal.AbstractServiceRegistryImpl.injectDependencies(AbstractServiceRegistryImpl.java:286)
	at org.hibernate.service.internal.AbstractServiceRegistryImpl.initializeService(AbstractServiceRegistryImpl.java:243)
	at org.hibernate.service.internal.AbstractServiceRegistryImpl.getService(AbstractServiceRegistryImpl.java:214)
	at org.hibernate.boot.internal.InFlightMetadataCollectorImpl.<init>(InFlightMetadataCollectorImpl.java:175)
	at org.hibernate.boot.model.process.spi.MetadataBuildingProcess.complete(MetadataBuildingProcess.java:118)
	at org.hibernate.jpa.boot.internal.EntityManagerFactoryBuilderImpl.metadata(EntityManagerFactoryBuilderImpl.java:1214)
	at org.hibernate.jpa.boot.internal.EntityManagerFactoryBuilderImpl.build(EntityManagerFactoryBuilderImpl.java:1245)
	at org.springframework.orm.jpa.vendor.SpringHibernateJpaPersistenceProvider.createContainerEntityManagerFactory(SpringHibernateJpaPersistenceProvider.java:58)
	at org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean.createNativeEntityManagerFactory(LocalContainerEntityManagerFactoryBean.java:365)
	at org.springframework.orm.jpa.AbstractEntityManagerFactoryBean.buildNativeEntityManagerFactory(AbstractEntityManagerFactoryBean.java:391)
	at org.springframework.orm.jpa.AbstractEntityManagerFactoryBean.afterPropertiesSet(AbstractEntityManagerFactoryBean.java:378)
	at org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean.afterPropertiesSet(LocalContainerEntityManagerFactoryBean.java:341)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1862)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1799)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:595)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:517)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:323)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:222)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:321)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:202)
	at org.springframework.context.support.AbstractApplicationContext.getBean(AbstractApplicationContext.java:1108)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:868)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:550)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.refresh(ServletWebServerApplicationContext.java:141)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:747)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:397)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:315)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1226)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1215)
	at com.sf.VaadinMathSolverApplication.main(VaadinMathSolverApplication.java:23)
Caused by: com.mysql.cj.exceptions.CJCommunicationsException: Communications link failure

The last packet sent successfully to the server was 0 milliseconds ago. The driver has not received any packets from the server.
	at sun.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)
	at sun.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:62)
	at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
	at java.lang.reflect.Constructor.newInstance(Constructor.java:423)
	at com.mysql.cj.exceptions.ExceptionFactory.createException(ExceptionFactory.java:61)
	at com.mysql.cj.exceptions.ExceptionFactory.createException(ExceptionFactory.java:105)
	at com.mysql.cj.exceptions.ExceptionFactory.createException(ExceptionFactory.java:151)
	at com.mysql.cj.exceptions.ExceptionFactory.createCommunicationsException(ExceptionFactory.java:167)
	at com.mysql.cj.protocol.a.NativeSocketConnection.connect(NativeSocketConnection.java:91)
	at com.mysql.cj.NativeSession.connect(NativeSession.java:144)
	at com.mysql.cj.jdbc.ConnectionImpl.connectOneTryOnly(ConnectionImpl.java:956)
	at com.mysql.cj.jdbc.ConnectionImpl.createNewIO(ConnectionImpl.java:826)
	... 49 common frames omitted
Caused by: java.net.ConnectException: Connection refused: connect
	at java.net.DualStackPlainSocketImpl.waitForConnect(Native Method)
	at java.net.DualStackPlainSocketImpl.socketConnect(DualStackPlainSocketImpl.java:85)
	at java.net.AbstractPlainSocketImpl.doConnect(AbstractPlainSocketImpl.java:350)
	at java.net.AbstractPlainSocketImpl.connectToAddress(AbstractPlainSocketImpl.java:206)
	at java.net.AbstractPlainSocketImpl.connect(AbstractPlainSocketImpl.java:188)
	at java.net.PlainSocketImpl.connect(PlainSocketImpl.java:172)
	at java.net.SocksSocketImpl.connect(SocksSocketImpl.java:392)
	at java.net.Socket.connect(Socket.java:606)
	at com.mysql.cj.protocol.StandardSocketFactory.connect(StandardSocketFactory.java:155)
	at com.mysql.cj.protocol.a.NativeSocketConnection.connect(NativeSocketConnection.java:65)
	... 52 common frames omitted
2020-11-25 20:18:31,790 WARN   [main] JdbcEnvironmentInitiator: HHH000342: Could not obtain connection to query metadata : Communications link failure

The last packet sent successfully to the server was 0 milliseconds ago. The driver has not received any packets from the server.
2020-11-25 20:18:31,794 WARN   [main] AnnotationConfigServletWebServerApplicationContext: Exception encountered during context initialization - cancelling refresh attempt: org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'entityManagerFactory' defined in class path resource [org/springframework/boot/autoconfigure/orm/jpa/HibernateJpaConfiguration.class]: Invocation of init method failed; nested exception is org.hibernate.service.spi.ServiceException: Unable to create requested service [org.hibernate.engine.jdbc.env.spi.JdbcEnvironment]
2020-11-25 20:18:31,808 WARN   [main] WebappClassLoaderBase: The web application [ROOT] appears to have started a thread named [Thread-4] but has failed to stop it. This is very likely to create a memory leak. Stack trace of thread:
 java.net.DualStackPlainSocketImpl.accept0(Native Method)
 java.net.DualStackPlainSocketImpl.socketAccept(DualStackPlainSocketImpl.java:131)
 java.net.AbstractPlainSocketImpl.accept(AbstractPlainSocketImpl.java:409)
 java.net.PlainSocketImpl.accept(PlainSocketImpl.java:199)
 java.net.ServerSocket.implAccept(ServerSocket.java:545)
 java.net.ServerSocket.accept(ServerSocket.java:513)
 com.vaadin.flow.server.DevServerWatchDog$WatchDogServer.run(DevServerWatchDog.java:58)
 java.lang.Thread.run(Thread.java:748)
2020-11-25 20:18:31,809 WARN   [main] WebappClassLoaderBase: The web application [ROOT] appears to have started a thread named [webpack] but has failed to stop it. This is very likely to create a memory leak. Stack trace of thread:
 java.io.FileInputStream.readBytes(Native Method)
 java.io.FileInputStream.read(FileInputStream.java:255)
 java.io.BufferedInputStream.read1(BufferedInputStream.java:284)
 java.io.BufferedInputStream.read(BufferedInputStream.java:345)
 sun.nio.cs.StreamDecoder.readBytes(StreamDecoder.java:284)
 sun.nio.cs.StreamDecoder.implRead(StreamDecoder.java:326)
 sun.nio.cs.StreamDecoder.read(StreamDecoder.java:178)
 java.io.InputStreamReader.read(InputStreamReader.java:184)
 java.io.BufferedReader.fill(BufferedReader.java:161)
 java.io.BufferedReader.readLine(BufferedReader.java:324)
 java.io.BufferedReader.readLine(BufferedReader.java:389)
 com.vaadin.flow.server.DevModeHandler.readLinesLoop(DevModeHandler.java:450)
 com.vaadin.flow.server.DevModeHandler.lambda$logStream$1(DevModeHandler.java:429)
 com.vaadin.flow.server.DevModeHandler$$Lambda$534/944735317.run(Unknown Source)
 java.lang.Thread.run(Thread.java:748)
2020-11-25 20:18:31,820 ERROR  [main] SpringApplication: Application run failed
org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'entityManagerFactory' defined in class path resource [org/springframework/boot/autoconfigure/orm/jpa/HibernateJpaConfiguration.class]: Invocation of init method failed; nested exception is org.hibernate.service.spi.ServiceException: Unable to create requested service [org.hibernate.engine.jdbc.env.spi.JdbcEnvironment]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1803)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:595)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:517)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:323)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:222)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:321)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:202)
	at org.springframework.context.support.AbstractApplicationContext.getBean(AbstractApplicationContext.java:1108)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:868)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:550)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.refresh(ServletWebServerApplicationContext.java:141)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:747)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:397)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:315)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1226)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1215)
	at com.sf.VaadinMathSolverApplication.main(VaadinMathSolverApplication.java:23)
Caused by: org.hibernate.service.spi.ServiceException: Unable to create requested service [org.hibernate.engine.jdbc.env.spi.JdbcEnvironment]
	at org.hibernate.service.internal.AbstractServiceRegistryImpl.createService(AbstractServiceRegistryImpl.java:275)
	at org.hibernate.service.internal.AbstractServiceRegistryImpl.initializeService(AbstractServiceRegistryImpl.java:237)
	at org.hibernate.service.internal.AbstractServiceRegistryImpl.getService(AbstractServiceRegistryImpl.java:214)
	at org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory.injectServices(DefaultIdentifierGeneratorFactory.java:152)
	at org.hibernate.service.internal.AbstractServiceRegistryImpl.injectDependencies(AbstractServiceRegistryImpl.java:286)
	at org.hibernate.service.internal.AbstractServiceRegistryImpl.initializeService(AbstractServiceRegistryImpl.java:243)
	at org.hibernate.service.internal.AbstractServiceRegistryImpl.getService(AbstractServiceRegistryImpl.java:214)
	at org.hibernate.boot.internal.InFlightMetadataCollectorImpl.<init>(InFlightMetadataCollectorImpl.java:175)
	at org.hibernate.boot.model.process.spi.MetadataBuildingProcess.complete(MetadataBuildingProcess.java:118)
	at org.hibernate.jpa.boot.internal.EntityManagerFactoryBuilderImpl.metadata(EntityManagerFactoryBuilderImpl.java:1214)
	at org.hibernate.jpa.boot.internal.EntityManagerFactoryBuilderImpl.build(EntityManagerFactoryBuilderImpl.java:1245)
	at org.springframework.orm.jpa.vendor.SpringHibernateJpaPersistenceProvider.createContainerEntityManagerFactory(SpringHibernateJpaPersistenceProvider.java:58)
	at org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean.createNativeEntityManagerFactory(LocalContainerEntityManagerFactoryBean.java:365)
	at org.springframework.orm.jpa.AbstractEntityManagerFactoryBean.buildNativeEntityManagerFactory(AbstractEntityManagerFactoryBean.java:391)
	at org.springframework.orm.jpa.AbstractEntityManagerFactoryBean.afterPropertiesSet(AbstractEntityManagerFactoryBean.java:378)
	at org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean.afterPropertiesSet(LocalContainerEntityManagerFactoryBean.java:341)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1862)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1799)
	... 16 common frames omitted
Caused by: org.hibernate.HibernateException: Access to DialectResolutionInfo cannot be null when 'hibernate.dialect' not set
	at org.hibernate.engine.jdbc.dialect.internal.DialectFactoryImpl.determineDialect(DialectFactoryImpl.java:100)
	at org.hibernate.engine.jdbc.dialect.internal.DialectFactoryImpl.buildDialect(DialectFactoryImpl.java:54)
	at org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator.initiateService(JdbcEnvironmentInitiator.java:137)
	at org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator.initiateService(JdbcEnvironmentInitiator.java:35)
	at org.hibernate.boot.registry.internal.StandardServiceRegistryImpl.initiateService(StandardServiceRegistryImpl.java:101)
	at org.hibernate.service.internal.AbstractServiceRegistryImpl.createService(AbstractServiceRegistryImpl.java:263)
	... 33 common frames omitted
2020-11-25 20:21:32,423 WARN   [main] dev-updater: Use the './' prefix for files in JAR files: 'flow-component-renderer.js', please update your component.
2020-11-25 20:21:45,039 ERROR  [main] HikariPool: HikariPool-1 - Exception during pool initialization.
com.mysql.cj.jdbc.exceptions.CommunicationsException: Communications link failure

The last packet sent successfully to the server was 0 milliseconds ago. The driver has not received any packets from the server.
	at com.mysql.cj.jdbc.exceptions.SQLError.createCommunicationsException(SQLError.java:174)
	at com.mysql.cj.jdbc.exceptions.SQLExceptionsMapping.translateException(SQLExceptionsMapping.java:64)
	at com.mysql.cj.jdbc.ConnectionImpl.createNewIO(ConnectionImpl.java:836)
	at com.mysql.cj.jdbc.ConnectionImpl.<init>(ConnectionImpl.java:456)
	at com.mysql.cj.jdbc.ConnectionImpl.getInstance(ConnectionImpl.java:246)
	at com.mysql.cj.jdbc.NonRegisteringDriver.connect(NonRegisteringDriver.java:199)
	at com.zaxxer.hikari.util.DriverDataSource.getConnection(DriverDataSource.java:138)
	at com.zaxxer.hikari.pool.PoolBase.newConnection(PoolBase.java:353)
	at com.zaxxer.hikari.pool.PoolBase.newPoolEntry(PoolBase.java:201)
	at com.zaxxer.hikari.pool.HikariPool.createPoolEntry(HikariPool.java:473)
	at com.zaxxer.hikari.pool.HikariPool.checkFailFast(HikariPool.java:562)
	at com.zaxxer.hikari.pool.HikariPool.<init>(HikariPool.java:115)
	at com.zaxxer.hikari.HikariDataSource.getConnection(HikariDataSource.java:112)
	at org.hibernate.engine.jdbc.connections.internal.DatasourceConnectionProviderImpl.getConnection(DatasourceConnectionProviderImpl.java:122)
	at org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator$ConnectionProviderJdbcConnectionAccess.obtainConnection(JdbcEnvironmentInitiator.java:180)
	at org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator.initiateService(JdbcEnvironmentInitiator.java:68)
	at org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator.initiateService(JdbcEnvironmentInitiator.java:35)
	at org.hibernate.boot.registry.internal.StandardServiceRegistryImpl.initiateService(StandardServiceRegistryImpl.java:101)
	at org.hibernate.service.internal.AbstractServiceRegistryImpl.createService(AbstractServiceRegistryImpl.java:263)
	at org.hibernate.service.internal.AbstractServiceRegistryImpl.initializeService(AbstractServiceRegistryImpl.java:237)
	at org.hibernate.service.internal.AbstractServiceRegistryImpl.getService(AbstractServiceRegistryImpl.java:214)
	at org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory.injectServices(DefaultIdentifierGeneratorFactory.java:152)
	at org.hibernate.service.internal.AbstractServiceRegistryImpl.injectDependencies(AbstractServiceRegistryImpl.java:286)
	at org.hibernate.service.internal.AbstractServiceRegistryImpl.initializeService(AbstractServiceRegistryImpl.java:243)
	at org.hibernate.service.internal.AbstractServiceRegistryImpl.getService(AbstractServiceRegistryImpl.java:214)
	at org.hibernate.boot.internal.InFlightMetadataCollectorImpl.<init>(InFlightMetadataCollectorImpl.java:175)
	at org.hibernate.boot.model.process.spi.MetadataBuildingProcess.complete(MetadataBuildingProcess.java:118)
	at org.hibernate.jpa.boot.internal.EntityManagerFactoryBuilderImpl.metadata(EntityManagerFactoryBuilderImpl.java:1214)
	at org.hibernate.jpa.boot.internal.EntityManagerFactoryBuilderImpl.build(EntityManagerFactoryBuilderImpl.java:1245)
	at org.springframework.orm.jpa.vendor.SpringHibernateJpaPersistenceProvider.createContainerEntityManagerFactory(SpringHibernateJpaPersistenceProvider.java:58)
	at org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean.createNativeEntityManagerFactory(LocalContainerEntityManagerFactoryBean.java:365)
	at org.springframework.orm.jpa.AbstractEntityManagerFactoryBean.buildNativeEntityManagerFactory(AbstractEntityManagerFactoryBean.java:391)
	at org.springframework.orm.jpa.AbstractEntityManagerFactoryBean.afterPropertiesSet(AbstractEntityManagerFactoryBean.java:378)
	at org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean.afterPropertiesSet(LocalContainerEntityManagerFactoryBean.java:341)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1862)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1799)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:595)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:517)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:323)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:222)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:321)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:202)
	at org.springframework.context.support.AbstractApplicationContext.getBean(AbstractApplicationContext.java:1108)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:868)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:550)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.refresh(ServletWebServerApplicationContext.java:141)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:747)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:397)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:315)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1226)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1215)
	at com.sf.VaadinMathSolverApplication.main(VaadinMathSolverApplication.java:23)
Caused by: com.mysql.cj.exceptions.CJCommunicationsException: Communications link failure

The last packet sent successfully to the server was 0 milliseconds ago. The driver has not received any packets from the server.
	at sun.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)
	at sun.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:62)
	at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
	at java.lang.reflect.Constructor.newInstance(Constructor.java:423)
	at com.mysql.cj.exceptions.ExceptionFactory.createException(ExceptionFactory.java:61)
	at com.mysql.cj.exceptions.ExceptionFactory.createException(ExceptionFactory.java:105)
	at com.mysql.cj.exceptions.ExceptionFactory.createException(ExceptionFactory.java:151)
	at com.mysql.cj.exceptions.ExceptionFactory.createCommunicationsException(ExceptionFactory.java:167)
	at com.mysql.cj.protocol.a.NativeSocketConnection.connect(NativeSocketConnection.java:91)
	at com.mysql.cj.NativeSession.connect(NativeSession.java:144)
	at com.mysql.cj.jdbc.ConnectionImpl.connectOneTryOnly(ConnectionImpl.java:956)
	at com.mysql.cj.jdbc.ConnectionImpl.createNewIO(ConnectionImpl.java:826)
	... 49 common frames omitted
Caused by: java.net.ConnectException: Connection refused: connect
	at java.net.DualStackPlainSocketImpl.waitForConnect(Native Method)
	at java.net.DualStackPlainSocketImpl.socketConnect(DualStackPlainSocketImpl.java:85)
	at java.net.AbstractPlainSocketImpl.doConnect(AbstractPlainSocketImpl.java:350)
	at java.net.AbstractPlainSocketImpl.connectToAddress(AbstractPlainSocketImpl.java:206)
	at java.net.AbstractPlainSocketImpl.connect(AbstractPlainSocketImpl.java:188)
	at java.net.PlainSocketImpl.connect(PlainSocketImpl.java:172)
	at java.net.SocksSocketImpl.connect(SocksSocketImpl.java:392)
	at java.net.Socket.connect(Socket.java:606)
	at com.mysql.cj.protocol.StandardSocketFactory.connect(StandardSocketFactory.java:155)
	at com.mysql.cj.protocol.a.NativeSocketConnection.connect(NativeSocketConnection.java:65)
	... 52 common frames omitted
2020-11-25 20:21:45,042 WARN   [main] JdbcEnvironmentInitiator: HHH000342: Could not obtain connection to query metadata : Communications link failure

The last packet sent successfully to the server was 0 milliseconds ago. The driver has not received any packets from the server.
2020-11-25 20:21:45,047 WARN   [main] AnnotationConfigServletWebServerApplicationContext: Exception encountered during context initialization - cancelling refresh attempt: org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'entityManagerFactory' defined in class path resource [org/springframework/boot/autoconfigure/orm/jpa/HibernateJpaConfiguration.class]: Invocation of init method failed; nested exception is org.hibernate.service.spi.ServiceException: Unable to create requested service [org.hibernate.engine.jdbc.env.spi.JdbcEnvironment]
2020-11-25 20:21:45,054 WARN   [main] WebappClassLoaderBase: The web application [ROOT] appears to have started a thread named [Thread-4] but has failed to stop it. This is very likely to create a memory leak. Stack trace of thread:
 java.net.DualStackPlainSocketImpl.accept0(Native Method)
 java.net.DualStackPlainSocketImpl.socketAccept(DualStackPlainSocketImpl.java:131)
 java.net.AbstractPlainSocketImpl.accept(AbstractPlainSocketImpl.java:409)
 java.net.PlainSocketImpl.accept(PlainSocketImpl.java:199)
 java.net.ServerSocket.implAccept(ServerSocket.java:545)
 java.net.ServerSocket.accept(ServerSocket.java:513)
 com.vaadin.flow.server.DevServerWatchDog$WatchDogServer.run(DevServerWatchDog.java:58)
 java.lang.Thread.run(Thread.java:748)
2020-11-25 20:21:45,055 WARN   [main] WebappClassLoaderBase: The web application [ROOT] appears to have started a thread named [webpack] but has failed to stop it. This is very likely to create a memory leak. Stack trace of thread:
 java.io.FileInputStream.readBytes(Native Method)
 java.io.FileInputStream.read(FileInputStream.java:255)
 java.io.BufferedInputStream.read1(BufferedInputStream.java:284)
 java.io.BufferedInputStream.read(BufferedInputStream.java:345)
 sun.nio.cs.StreamDecoder.readBytes(StreamDecoder.java:284)
 sun.nio.cs.StreamDecoder.implRead(StreamDecoder.java:326)
 sun.nio.cs.StreamDecoder.read(StreamDecoder.java:178)
 java.io.InputStreamReader.read(InputStreamReader.java:184)
 java.io.BufferedReader.fill(BufferedReader.java:161)
 java.io.BufferedReader.readLine(BufferedReader.java:324)
 java.io.BufferedReader.readLine(BufferedReader.java:389)
 com.vaadin.flow.server.DevModeHandler.readLinesLoop(DevModeHandler.java:450)
 com.vaadin.flow.server.DevModeHandler.lambda$logStream$1(DevModeHandler.java:429)
 com.vaadin.flow.server.DevModeHandler$$Lambda$533/1420934890.run(Unknown Source)
 java.lang.Thread.run(Thread.java:748)
2020-11-25 20:21:45,078 ERROR  [main] SpringApplication: Application run failed
org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'entityManagerFactory' defined in class path resource [org/springframework/boot/autoconfigure/orm/jpa/HibernateJpaConfiguration.class]: Invocation of init method failed; nested exception is org.hibernate.service.spi.ServiceException: Unable to create requested service [org.hibernate.engine.jdbc.env.spi.JdbcEnvironment]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1803)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:595)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:517)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:323)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:222)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:321)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:202)
	at org.springframework.context.support.AbstractApplicationContext.getBean(AbstractApplicationContext.java:1108)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:868)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:550)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.refresh(ServletWebServerApplicationContext.java:141)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:747)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:397)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:315)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1226)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1215)
	at com.sf.VaadinMathSolverApplication.main(VaadinMathSolverApplication.java:23)
Caused by: org.hibernate.service.spi.ServiceException: Unable to create requested service [org.hibernate.engine.jdbc.env.spi.JdbcEnvironment]
	at org.hibernate.service.internal.AbstractServiceRegistryImpl.createService(AbstractServiceRegistryImpl.java:275)
	at org.hibernate.service.internal.AbstractServiceRegistryImpl.initializeService(AbstractServiceRegistryImpl.java:237)
	at org.hibernate.service.internal.AbstractServiceRegistryImpl.getService(AbstractServiceRegistryImpl.java:214)
	at org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory.injectServices(DefaultIdentifierGeneratorFactory.java:152)
	at org.hibernate.service.internal.AbstractServiceRegistryImpl.injectDependencies(AbstractServiceRegistryImpl.java:286)
	at org.hibernate.service.internal.AbstractServiceRegistryImpl.initializeService(AbstractServiceRegistryImpl.java:243)
	at org.hibernate.service.internal.AbstractServiceRegistryImpl.getService(AbstractServiceRegistryImpl.java:214)
	at org.hibernate.boot.internal.InFlightMetadataCollectorImpl.<init>(InFlightMetadataCollectorImpl.java:175)
	at org.hibernate.boot.model.process.spi.MetadataBuildingProcess.complete(MetadataBuildingProcess.java:118)
	at org.hibernate.jpa.boot.internal.EntityManagerFactoryBuilderImpl.metadata(EntityManagerFactoryBuilderImpl.java:1214)
	at org.hibernate.jpa.boot.internal.EntityManagerFactoryBuilderImpl.build(EntityManagerFactoryBuilderImpl.java:1245)
	at org.springframework.orm.jpa.vendor.SpringHibernateJpaPersistenceProvider.createContainerEntityManagerFactory(SpringHibernateJpaPersistenceProvider.java:58)
	at org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean.createNativeEntityManagerFactory(LocalContainerEntityManagerFactoryBean.java:365)
	at org.springframework.orm.jpa.AbstractEntityManagerFactoryBean.buildNativeEntityManagerFactory(AbstractEntityManagerFactoryBean.java:391)
	at org.springframework.orm.jpa.AbstractEntityManagerFactoryBean.afterPropertiesSet(AbstractEntityManagerFactoryBean.java:378)
	at org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean.afterPropertiesSet(LocalContainerEntityManagerFactoryBean.java:341)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1862)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1799)
	... 16 common frames omitted
Caused by: org.hibernate.HibernateException: Access to DialectResolutionInfo cannot be null when 'hibernate.dialect' not set
	at org.hibernate.engine.jdbc.dialect.internal.DialectFactoryImpl.determineDialect(DialectFactoryImpl.java:100)
	at org.hibernate.engine.jdbc.dialect.internal.DialectFactoryImpl.buildDialect(DialectFactoryImpl.java:54)
	at org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator.initiateService(JdbcEnvironmentInitiator.java:137)
	at org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator.initiateService(JdbcEnvironmentInitiator.java:35)
	at org.hibernate.boot.registry.internal.StandardServiceRegistryImpl.initiateService(StandardServiceRegistryImpl.java:101)
	at org.hibernate.service.internal.AbstractServiceRegistryImpl.createService(AbstractServiceRegistryImpl.java:263)
	... 33 common frames omitted
2020-11-25 20:36:10,961 WARN   [main] dev-updater: Use the './' prefix for files in JAR files: 'flow-component-renderer.js', please update your component.
2020-11-25 20:36:23,075 WARN   [main] AnnotationConfigServletWebServerApplicationContext: Exception encountered during context initialization - cancelling refresh attempt: org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'entityManagerFactory' defined in class path resource [org/springframework/boot/autoconfigure/orm/jpa/HibernateJpaConfiguration.class]: Invocation of init method failed; nested exception is org.hibernate.AnnotationException: No identifier specified for entity: com.sf.back.entities.Matrix
2020-11-25 20:36:23,119 WARN   [main] WebappClassLoaderBase: The web application [ROOT] appears to have started a thread named [Thread-4] but has failed to stop it. This is very likely to create a memory leak. Stack trace of thread:
 java.net.DualStackPlainSocketImpl.accept0(Native Method)
 java.net.DualStackPlainSocketImpl.socketAccept(DualStackPlainSocketImpl.java:131)
 java.net.AbstractPlainSocketImpl.accept(AbstractPlainSocketImpl.java:409)
 java.net.PlainSocketImpl.accept(PlainSocketImpl.java:199)
 java.net.ServerSocket.implAccept(ServerSocket.java:545)
 java.net.ServerSocket.accept(ServerSocket.java:513)
 com.vaadin.flow.server.DevServerWatchDog$WatchDogServer.run(DevServerWatchDog.java:58)
 java.lang.Thread.run(Thread.java:748)
2020-11-25 20:36:23,121 WARN   [main] WebappClassLoaderBase: The web application [ROOT] appears to have started a thread named [webpack] but has failed to stop it. This is very likely to create a memory leak. Stack trace of thread:
 java.io.FileInputStream.readBytes(Native Method)
 java.io.FileInputStream.read(FileInputStream.java:255)
 java.io.BufferedInputStream.read1(BufferedInputStream.java:284)
 java.io.BufferedInputStream.read(BufferedInputStream.java:345)
 sun.nio.cs.StreamDecoder.readBytes(StreamDecoder.java:284)
 sun.nio.cs.StreamDecoder.implRead(StreamDecoder.java:326)
 sun.nio.cs.StreamDecoder.read(StreamDecoder.java:178)
 java.io.InputStreamReader.read(InputStreamReader.java:184)
 java.io.BufferedReader.fill(BufferedReader.java:161)
 java.io.BufferedReader.readLine(BufferedReader.java:324)
 java.io.BufferedReader.readLine(BufferedReader.java:389)
 com.vaadin.flow.server.DevModeHandler.readLinesLoop(DevModeHandler.java:450)
 com.vaadin.flow.server.DevModeHandler.lambda$logStream$1(DevModeHandler.java:429)
 com.vaadin.flow.server.DevModeHandler$$Lambda$533/1420934890.run(Unknown Source)
 java.lang.Thread.run(Thread.java:748)
2020-11-25 20:36:23,145 ERROR  [main] SpringApplication: Application run failed
org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'entityManagerFactory' defined in class path resource [org/springframework/boot/autoconfigure/orm/jpa/HibernateJpaConfiguration.class]: Invocation of init method failed; nested exception is org.hibernate.AnnotationException: No identifier specified for entity: com.sf.back.entities.Matrix
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1803)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:595)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:517)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:323)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:222)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:321)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:202)
	at org.springframework.context.support.AbstractApplicationContext.getBean(AbstractApplicationContext.java:1108)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:868)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:550)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.refresh(ServletWebServerApplicationContext.java:141)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:747)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:397)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:315)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1226)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1215)
	at com.sf.VaadinMathSolverApplication.main(VaadinMathSolverApplication.java:23)
Caused by: org.hibernate.AnnotationException: No identifier specified for entity: com.sf.back.entities.Matrix
	at org.hibernate.cfg.InheritanceState.determineDefaultAccessType(InheritanceState.java:266)
	at org.hibernate.cfg.InheritanceState.getElementsToProcess(InheritanceState.java:211)
	at org.hibernate.cfg.AnnotationBinder.bindClass(AnnotationBinder.java:781)
	at org.hibernate.boot.model.source.internal.annotations.AnnotationMetadataSourceProcessorImpl.processEntityHierarchies(AnnotationMetadataSourceProcessorImpl.java:254)
	at org.hibernate.boot.model.process.spi.MetadataBuildingProcess$1.processEntityHierarchies(MetadataBuildingProcess.java:230)
	at org.hibernate.boot.model.process.spi.MetadataBuildingProcess.complete(MetadataBuildingProcess.java:273)
	at org.hibernate.jpa.boot.internal.EntityManagerFactoryBuilderImpl.metadata(EntityManagerFactoryBuilderImpl.java:1214)
	at org.hibernate.jpa.boot.internal.EntityManagerFactoryBuilderImpl.build(EntityManagerFactoryBuilderImpl.java:1245)
	at org.springframework.orm.jpa.vendor.SpringHibernateJpaPersistenceProvider.createContainerEntityManagerFactory(SpringHibernateJpaPersistenceProvider.java:58)
	at org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean.createNativeEntityManagerFactory(LocalContainerEntityManagerFactoryBean.java:365)
	at org.springframework.orm.jpa.AbstractEntityManagerFactoryBean.buildNativeEntityManagerFactory(AbstractEntityManagerFactoryBean.java:391)
	at org.springframework.orm.jpa.AbstractEntityManagerFactoryBean.afterPropertiesSet(AbstractEntityManagerFactoryBean.java:378)
	at org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean.afterPropertiesSet(LocalContainerEntityManagerFactoryBean.java:341)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1862)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1799)
	... 16 common frames omitted
2020-11-25 20:38:46,550 WARN   [main] dev-updater: Use the './' prefix for files in JAR files: 'flow-component-renderer.js', please update your component.
2020-11-25 20:38:55,819 WARN   [main] AnnotationConfigServletWebServerApplicationContext: Exception encountered during context initialization - cancelling refresh attempt: org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'entityManagerFactory' defined in class path resource [org/springframework/boot/autoconfigure/orm/jpa/HibernateJpaConfiguration.class]: Invocation of init method failed; nested exception is org.hibernate.AnnotationException: No identifier specified for entity: com.sf.back.entities.Matrix
2020-11-25 20:38:55,840 WARN   [main] WebappClassLoaderBase: The web application [ROOT] appears to have started a thread named [Thread-4] but has failed to stop it. This is very likely to create a memory leak. Stack trace of thread:
 java.net.DualStackPlainSocketImpl.accept0(Native Method)
 java.net.DualStackPlainSocketImpl.socketAccept(DualStackPlainSocketImpl.java:131)
 java.net.AbstractPlainSocketImpl.accept(AbstractPlainSocketImpl.java:409)
 java.net.PlainSocketImpl.accept(PlainSocketImpl.java:199)
 java.net.ServerSocket.implAccept(ServerSocket.java:545)
 java.net.ServerSocket.accept(ServerSocket.java:513)
 com.vaadin.flow.server.DevServerWatchDog$WatchDogServer.run(DevServerWatchDog.java:58)
 java.lang.Thread.run(Thread.java:748)
2020-11-25 20:38:55,841 WARN   [main] WebappClassLoaderBase: The web application [ROOT] appears to have started a thread named [webpack] but has failed to stop it. This is very likely to create a memory leak. Stack trace of thread:
 java.io.FileInputStream.readBytes(Native Method)
 java.io.FileInputStream.read(FileInputStream.java:255)
 java.io.BufferedInputStream.read1(BufferedInputStream.java:284)
 java.io.BufferedInputStream.read(BufferedInputStream.java:345)
 sun.nio.cs.StreamDecoder.readBytes(StreamDecoder.java:284)
 sun.nio.cs.StreamDecoder.implRead(StreamDecoder.java:326)
 sun.nio.cs.StreamDecoder.read(StreamDecoder.java:178)
 java.io.InputStreamReader.read(InputStreamReader.java:184)
 java.io.BufferedReader.fill(BufferedReader.java:161)
 java.io.BufferedReader.readLine(BufferedReader.java:324)
 java.io.BufferedReader.readLine(BufferedReader.java:389)
 com.vaadin.flow.server.DevModeHandler.readLinesLoop(DevModeHandler.java:450)
 com.vaadin.flow.server.DevModeHandler.lambda$logStream$1(DevModeHandler.java:429)
 com.vaadin.flow.server.DevModeHandler$$Lambda$533/267816427.run(Unknown Source)
 java.lang.Thread.run(Thread.java:748)
2020-11-25 20:38:55,857 ERROR  [main] SpringApplication: Application run failed
org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'entityManagerFactory' defined in class path resource [org/springframework/boot/autoconfigure/orm/jpa/HibernateJpaConfiguration.class]: Invocation of init method failed; nested exception is org.hibernate.AnnotationException: No identifier specified for entity: com.sf.back.entities.Matrix
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1803)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:595)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:517)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:323)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:222)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:321)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:202)
	at org.springframework.context.support.AbstractApplicationContext.getBean(AbstractApplicationContext.java:1108)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:868)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:550)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.refresh(ServletWebServerApplicationContext.java:141)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:747)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:397)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:315)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1226)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1215)
	at com.sf.VaadinMathSolverApplication.main(VaadinMathSolverApplication.java:23)
Caused by: org.hibernate.AnnotationException: No identifier specified for entity: com.sf.back.entities.Matrix
	at org.hibernate.cfg.InheritanceState.determineDefaultAccessType(InheritanceState.java:266)
	at org.hibernate.cfg.InheritanceState.getElementsToProcess(InheritanceState.java:211)
	at org.hibernate.cfg.AnnotationBinder.bindClass(AnnotationBinder.java:781)
	at org.hibernate.boot.model.source.internal.annotations.AnnotationMetadataSourceProcessorImpl.processEntityHierarchies(AnnotationMetadataSourceProcessorImpl.java:254)
	at org.hibernate.boot.model.process.spi.MetadataBuildingProcess$1.processEntityHierarchies(MetadataBuildingProcess.java:230)
	at org.hibernate.boot.model.process.spi.MetadataBuildingProcess.complete(MetadataBuildingProcess.java:273)
	at org.hibernate.jpa.boot.internal.EntityManagerFactoryBuilderImpl.metadata(EntityManagerFactoryBuilderImpl.java:1214)
	at org.hibernate.jpa.boot.internal.EntityManagerFactoryBuilderImpl.build(EntityManagerFactoryBuilderImpl.java:1245)
	at org.springframework.orm.jpa.vendor.SpringHibernateJpaPersistenceProvider.createContainerEntityManagerFactory(SpringHibernateJpaPersistenceProvider.java:58)
	at org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean.createNativeEntityManagerFactory(LocalContainerEntityManagerFactoryBean.java:365)
	at org.springframework.orm.jpa.AbstractEntityManagerFactoryBean.buildNativeEntityManagerFactory(AbstractEntityManagerFactoryBean.java:391)
	at org.springframework.orm.jpa.AbstractEntityManagerFactoryBean.afterPropertiesSet(AbstractEntityManagerFactoryBean.java:378)
	at org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean.afterPropertiesSet(LocalContainerEntityManagerFactoryBean.java:341)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1862)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1799)
	... 16 common frames omitted
2020-11-25 20:40:05,225 DEBUG  [main] BasicTypeRegistry: Adding type registration boolean -> org.hibernate.type.BooleanType@15fb4566
2020-11-25 20:40:05,253 DEBUG  [main] BasicTypeRegistry: Adding type registration boolean -> org.hibernate.type.BooleanType@15fb4566
2020-11-25 20:40:05,253 DEBUG  [main] BasicTypeRegistry: Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@15fb4566
2020-11-25 20:40:05,254 DEBUG  [main] BasicTypeRegistry: Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@11c713b7
2020-11-25 20:40:05,255 DEBUG  [main] BasicTypeRegistry: Adding type registration true_false -> org.hibernate.type.TrueFalseType@3c232051
2020-11-25 20:40:05,255 DEBUG  [main] BasicTypeRegistry: Adding type registration yes_no -> org.hibernate.type.YesNoType@7741d346
2020-11-25 20:40:05,256 DEBUG  [main] BasicTypeRegistry: Adding type registration byte -> org.hibernate.type.ByteType@6042d663
2020-11-25 20:40:05,257 DEBUG  [main] BasicTypeRegistry: Adding type registration byte -> org.hibernate.type.ByteType@6042d663
2020-11-25 20:40:05,257 DEBUG  [main] BasicTypeRegistry: Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@6042d663
2020-11-25 20:40:05,258 DEBUG  [main] BasicTypeRegistry: Adding type registration character -> org.hibernate.type.CharacterType@3f1a9a53
2020-11-25 20:40:05,258 DEBUG  [main] BasicTypeRegistry: Adding type registration char -> org.hibernate.type.CharacterType@3f1a9a53
2020-11-25 20:40:05,259 DEBUG  [main] BasicTypeRegistry: Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@3f1a9a53
2020-11-25 20:40:05,260 DEBUG  [main] BasicTypeRegistry: Adding type registration short -> org.hibernate.type.ShortType@3a4aadf8
2020-11-25 20:40:05,261 DEBUG  [main] BasicTypeRegistry: Adding type registration short -> org.hibernate.type.ShortType@3a4aadf8
2020-11-25 20:40:05,261 DEBUG  [main] BasicTypeRegistry: Adding type registration java.lang.Short -> org.hibernate.type.ShortType@3a4aadf8
2020-11-25 20:40:05,262 DEBUG  [main] BasicTypeRegistry: Adding type registration integer -> org.hibernate.type.IntegerType@64b70f41
2020-11-25 20:40:05,263 DEBUG  [main] BasicTypeRegistry: Adding type registration int -> org.hibernate.type.IntegerType@64b70f41
2020-11-25 20:40:05,263 DEBUG  [main] BasicTypeRegistry: Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@64b70f41
2020-11-25 20:40:05,265 DEBUG  [main] BasicTypeRegistry: Adding type registration long -> org.hibernate.type.LongType@da4cf09
2020-11-25 20:40:05,265 DEBUG  [main] BasicTypeRegistry: Adding type registration long -> org.hibernate.type.LongType@da4cf09
2020-11-25 20:40:05,265 DEBUG  [main] BasicTypeRegistry: Adding type registration java.lang.Long -> org.hibernate.type.LongType@da4cf09
2020-11-25 20:40:05,267 DEBUG  [main] BasicTypeRegistry: Adding type registration float -> org.hibernate.type.FloatType@39941489
2020-11-25 20:40:05,267 DEBUG  [main] BasicTypeRegistry: Adding type registration float -> org.hibernate.type.FloatType@39941489
2020-11-25 20:40:05,267 DEBUG  [main] BasicTypeRegistry: Adding type registration java.lang.Float -> org.hibernate.type.FloatType@39941489
2020-11-25 20:40:05,269 DEBUG  [main] BasicTypeRegistry: Adding type registration double -> org.hibernate.type.DoubleType@60cb1ed6
2020-11-25 20:40:05,269 DEBUG  [main] BasicTypeRegistry: Adding type registration double -> org.hibernate.type.DoubleType@60cb1ed6
2020-11-25 20:40:05,269 DEBUG  [main] BasicTypeRegistry: Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@60cb1ed6
2020-11-25 20:40:05,271 DEBUG  [main] BasicTypeRegistry: Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@1f9d4b0e
2020-11-25 20:40:05,271 DEBUG  [main] BasicTypeRegistry: Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@1f9d4b0e
2020-11-25 20:40:05,273 DEBUG  [main] BasicTypeRegistry: Adding type registration big_integer -> org.hibernate.type.BigIntegerType@1ca610a0
2020-11-25 20:40:05,273 DEBUG  [main] BasicTypeRegistry: Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@1ca610a0
2020-11-25 20:40:05,274 DEBUG  [main] BasicTypeRegistry: Adding type registration string -> org.hibernate.type.StringType@47829d6d
2020-11-25 20:40:05,275 DEBUG  [main] BasicTypeRegistry: Adding type registration java.lang.String -> org.hibernate.type.StringType@47829d6d
2020-11-25 20:40:05,276 DEBUG  [main] BasicTypeRegistry: Adding type registration nstring -> org.hibernate.type.StringNVarcharType@7a1b8a46
2020-11-25 20:40:05,276 DEBUG  [main] BasicTypeRegistry: Adding type registration ncharacter -> org.hibernate.type.CharacterNCharType@7f13811b
2020-11-25 20:40:05,278 DEBUG  [main] BasicTypeRegistry: Adding type registration url -> org.hibernate.type.UrlType@1983b48a
2020-11-25 20:40:05,278 DEBUG  [main] BasicTypeRegistry: Adding type registration java.net.URL -> org.hibernate.type.UrlType@1983b48a
2020-11-25 20:40:05,279 DEBUG  [main] BasicTypeRegistry: Adding type registration Duration -> org.hibernate.type.DurationType@71e7adbb
2020-11-25 20:40:05,280 DEBUG  [main] BasicTypeRegistry: Adding type registration java.time.Duration -> org.hibernate.type.DurationType@71e7adbb
2020-11-25 20:40:05,282 DEBUG  [main] BasicTypeRegistry: Adding type registration Instant -> org.hibernate.type.InstantType@1e3df614
2020-11-25 20:40:05,282 DEBUG  [main] BasicTypeRegistry: Adding type registration java.time.Instant -> org.hibernate.type.InstantType@1e3df614
2020-11-25 20:40:05,284 DEBUG  [main] BasicTypeRegistry: Adding type registration LocalDateTime -> org.hibernate.type.LocalDateTimeType@4451f60c
2020-11-25 20:40:05,285 DEBUG  [main] BasicTypeRegistry: Adding type registration java.time.LocalDateTime -> org.hibernate.type.LocalDateTimeType@4451f60c
2020-11-25 20:40:05,287 DEBUG  [main] BasicTypeRegistry: Adding type registration LocalDate -> org.hibernate.type.LocalDateType@7730ef88
2020-11-25 20:40:05,288 DEBUG  [main] BasicTypeRegistry: Adding type registration java.time.LocalDate -> org.hibernate.type.LocalDateType@7730ef88
2020-11-25 20:40:05,290 DEBUG  [main] BasicTypeRegistry: Adding type registration LocalTime -> org.hibernate.type.LocalTimeType@45843650
2020-11-25 20:40:05,290 DEBUG  [main] BasicTypeRegistry: Adding type registration java.time.LocalTime -> org.hibernate.type.LocalTimeType@45843650
2020-11-25 20:40:05,292 DEBUG  [main] BasicTypeRegistry: Adding type registration OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@52c9d3d0
2020-11-25 20:40:05,292 DEBUG  [main] BasicTypeRegistry: Adding type registration java.time.OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@52c9d3d0
2020-11-25 20:40:05,293 DEBUG  [main] BasicTypeRegistry: Adding type registration OffsetTime -> org.hibernate.type.OffsetTimeType@6fe595dc
2020-11-25 20:40:05,294 DEBUG  [main] BasicTypeRegistry: Adding type registration java.time.OffsetTime -> org.hibernate.type.OffsetTimeType@6fe595dc
2020-11-25 20:40:05,297 DEBUG  [main] BasicTypeRegistry: Adding type registration ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@337a6d30
2020-11-25 20:40:05,297 DEBUG  [main] BasicTypeRegistry: Adding type registration java.time.ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@337a6d30
2020-11-25 20:40:05,299 DEBUG  [main] BasicTypeRegistry: Adding type registration date -> org.hibernate.type.DateType@1bedc703
2020-11-25 20:40:05,299 DEBUG  [main] BasicTypeRegistry: Adding type registration java.sql.Date -> org.hibernate.type.DateType@1bedc703
2020-11-25 20:40:05,301 DEBUG  [main] BasicTypeRegistry: Adding type registration time -> org.hibernate.type.TimeType@384fda47
2020-11-25 20:40:05,301 DEBUG  [main] BasicTypeRegistry: Adding type registration java.sql.Time -> org.hibernate.type.TimeType@384fda47
2020-11-25 20:40:05,302 DEBUG  [main] BasicTypeRegistry: Adding type registration timestamp -> org.hibernate.type.TimestampType@2da81754
2020-11-25 20:40:05,303 DEBUG  [main] BasicTypeRegistry: Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@2da81754
2020-11-25 20:40:05,303 DEBUG  [main] BasicTypeRegistry: Adding type registration java.util.Date -> org.hibernate.type.TimestampType@2da81754
2020-11-25 20:40:05,305 DEBUG  [main] BasicTypeRegistry: Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@261bd7b
2020-11-25 20:40:05,307 DEBUG  [main] BasicTypeRegistry: Adding type registration calendar -> org.hibernate.type.CalendarType@6002e944
2020-11-25 20:40:05,307 DEBUG  [main] BasicTypeRegistry: Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@6002e944
2020-11-25 20:40:05,307 DEBUG  [main] BasicTypeRegistry: Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@6002e944
2020-11-25 20:40:05,308 DEBUG  [main] BasicTypeRegistry: Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@78a8978a
2020-11-25 20:40:05,310 DEBUG  [main] BasicTypeRegistry: Adding type registration locale -> org.hibernate.type.LocaleType@1e54a6b1
2020-11-25 20:40:05,310 DEBUG  [main] BasicTypeRegistry: Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@1e54a6b1
2020-11-25 20:40:05,311 DEBUG  [main] BasicTypeRegistry: Adding type registration currency -> org.hibernate.type.CurrencyType@5d66e944
2020-11-25 20:40:05,312 DEBUG  [main] BasicTypeRegistry: Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@5d66e944
2020-11-25 20:40:05,313 DEBUG  [main] BasicTypeRegistry: Adding type registration timezone -> org.hibernate.type.TimeZoneType@5042e3d0
2020-11-25 20:40:05,313 DEBUG  [main] BasicTypeRegistry: Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@5042e3d0
2020-11-25 20:40:05,314 DEBUG  [main] BasicTypeRegistry: Adding type registration class -> org.hibernate.type.ClassType@3b0c3951
2020-11-25 20:40:05,314 DEBUG  [main] BasicTypeRegistry: Adding type registration java.lang.Class -> org.hibernate.type.ClassType@3b0c3951
2020-11-25 20:40:05,315 DEBUG  [main] BasicTypeRegistry: Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@3fe512d2
2020-11-25 20:40:05,316 DEBUG  [main] BasicTypeRegistry: Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@3fe512d2
2020-11-25 20:40:05,316 DEBUG  [main] BasicTypeRegistry: Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@6dce59e
2020-11-25 20:40:05,318 DEBUG  [main] BasicTypeRegistry: Adding type registration binary -> org.hibernate.type.BinaryType@38d80d65
2020-11-25 20:40:05,318 DEBUG  [main] BasicTypeRegistry: Adding type registration byte[] -> org.hibernate.type.BinaryType@38d80d65
2020-11-25 20:40:05,318 DEBUG  [main] BasicTypeRegistry: Adding type registration [B -> org.hibernate.type.BinaryType@38d80d65
2020-11-25 20:40:05,319 DEBUG  [main] BasicTypeRegistry: Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@d13960e
2020-11-25 20:40:05,319 DEBUG  [main] BasicTypeRegistry: Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@d13960e
2020-11-25 20:40:05,319 DEBUG  [main] BasicTypeRegistry: Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@d13960e
2020-11-25 20:40:05,321 DEBUG  [main] BasicTypeRegistry: Adding type registration row_version -> org.hibernate.type.RowVersionType@2ac519dc
2020-11-25 20:40:05,321 DEBUG  [main] BasicTypeRegistry: Adding type registration image -> org.hibernate.type.ImageType@3ece79fe
2020-11-25 20:40:05,322 DEBUG  [main] BasicTypeRegistry: Adding type registration characters -> org.hibernate.type.CharArrayType@6b4125ed
2020-11-25 20:40:05,322 DEBUG  [main] BasicTypeRegistry: Adding type registration char[] -> org.hibernate.type.CharArrayType@6b4125ed
2020-11-25 20:40:05,323 DEBUG  [main] BasicTypeRegistry: Adding type registration [C -> org.hibernate.type.CharArrayType@6b4125ed
2020-11-25 20:40:05,324 DEBUG  [main] BasicTypeRegistry: Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@1fecfaea
2020-11-25 20:40:05,324 DEBUG  [main] BasicTypeRegistry: Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@1fecfaea
2020-11-25 20:40:05,324 DEBUG  [main] BasicTypeRegistry: Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@1fecfaea
2020-11-25 20:40:05,325 DEBUG  [main] BasicTypeRegistry: Adding type registration text -> org.hibernate.type.TextType@4bb147ec
2020-11-25 20:40:05,325 DEBUG  [main] BasicTypeRegistry: Adding type registration ntext -> org.hibernate.type.NTextType@59a2388e
2020-11-25 20:40:05,327 DEBUG  [main] BasicTypeRegistry: Adding type registration blob -> org.hibernate.type.BlobType@174721c4
2020-11-25 20:40:05,327 DEBUG  [main] BasicTypeRegistry: Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@174721c4
2020-11-25 20:40:05,328 DEBUG  [main] BasicTypeRegistry: Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@4aeb0e2b
2020-11-25 20:40:05,329 DEBUG  [main] BasicTypeRegistry: Adding type registration clob -> org.hibernate.type.ClobType@590765c4
2020-11-25 20:40:05,329 DEBUG  [main] BasicTypeRegistry: Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@590765c4
2020-11-25 20:40:05,331 DEBUG  [main] BasicTypeRegistry: Adding type registration nclob -> org.hibernate.type.NClobType@64b018f3
2020-11-25 20:40:05,331 DEBUG  [main] BasicTypeRegistry: Adding type registration java.sql.NClob -> org.hibernate.type.NClobType@64b018f3
2020-11-25 20:40:05,332 DEBUG  [main] BasicTypeRegistry: Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@1c240cf2
2020-11-25 20:40:05,334 DEBUG  [main] BasicTypeRegistry: Adding type registration materialized_nclob -> org.hibernate.type.MaterializedNClobType@5809fa26
2020-11-25 20:40:05,335 DEBUG  [main] BasicTypeRegistry: Adding type registration serializable -> org.hibernate.type.SerializableType@3e546734
2020-11-25 20:40:05,339 DEBUG  [main] BasicTypeRegistry: Adding type registration object -> org.hibernate.type.ObjectType@7f0b93b4
2020-11-25 20:40:05,339 DEBUG  [main] BasicTypeRegistry: Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@7f0b93b4
2020-11-25 20:40:05,342 DEBUG  [main] BasicTypeRegistry: Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@523a7801
2020-11-25 20:40:05,343 DEBUG  [main] BasicTypeRegistry: Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@718fd7c1
2020-11-25 20:40:05,344 DEBUG  [main] BasicTypeRegistry: Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@4bc6da03
2020-11-25 20:40:05,345 DEBUG  [main] BasicTypeRegistry: Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@4f59a516
2020-11-25 20:40:05,345 DEBUG  [main] BasicTypeRegistry: Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@4e22368c
2020-11-25 20:40:05,346 DEBUG  [main] BasicTypeRegistry: Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@411cd156
2020-11-25 20:40:05,347 DEBUG  [main] BasicTypeRegistry: Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@3c770db4
2020-11-25 20:40:05,347 DEBUG  [main] BasicTypeRegistry: Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@3e046e39
2020-11-25 20:40:05,981 DEBUG  [main] TypeConfiguration$Scope: Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@6f91fbda] to MetadataBuildingContext [org.hibernate.boot.internal.MetadataBuildingContextRootImpl@723e3c17]
2020-11-25 20:40:06,227 DEBUG  [main] EnumType: Using NAMED-based conversion for Enum com.sf.back.entities.Kind
2020-11-25 20:40:06,322 DEBUG  [main] EnumType: Using NAMED-based conversion for Enum com.sf.back.entities.Kind
2020-11-25 20:40:06,425 DEBUG  [main] TypeConfiguration$Scope: Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@6f91fbda] to SessionFactoryImpl [org.hibernate.internal.SessionFactoryImpl@7f1f60a0]
2020-11-25 20:40:06,506 DEBUG  [main] EnumType: Using NAMED-based conversion for Enum com.sf.back.entities.Kind
2020-11-25 20:40:06,507 DEBUG  [main] EnumType: Using NAMED-based conversion for Enum com.sf.back.entities.Kind
2020-11-25 20:40:06,904 DEBUG  [main] EnumType: Using NAMED-based conversion for Enum com.sf.back.entities.Kind
2020-11-25 20:40:06,904 DEBUG  [main] EnumType: Using NAMED-based conversion for Enum com.sf.back.entities.Kind
2020-11-25 20:40:07,056 DEBUG  [main] EnumType: Using NAMED-based conversion for Enum com.sf.back.entities.Kind
2020-11-25 20:40:07,056 DEBUG  [main] EnumType: Using NAMED-based conversion for Enum com.sf.back.entities.Kind
2020-11-25 20:40:07,100 DEBUG  [main] EnumType: Using NAMED-based conversion for Enum com.sf.back.entities.Kind
2020-11-25 20:40:07,133 TRACE  [main] TypeConfiguration$Scope: Handling #sessionFactoryCreated from [org.hibernate.internal.SessionFactoryImpl@7f1f60a0] for TypeConfiguration
2020-11-25 20:40:07,754 WARN   [main] GlobalSettings: Dozer configuration file not found: dozer.properties.  Using defaults for all Dozer global properties.
2020-11-25 20:40:08,281 WARN   [main] JpaBaseConfiguration$JpaWebConfiguration: spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2020-11-25 20:40:09,849 TRACE  [main] BasicBinder: binding parameter [1] as [BLOB] - [[70, 105, 110, 100, 32, 97, 108, 108, 32, 114, 111, 111, 116, 115, 32, 111, 102, 32, 103, 105, 118, 101, 110, 32, 112, 111, 108, 121, 110, 111, 109, 105, 97, 108]]
2020-11-25 20:40:09,865 TRACE  [main] BasicBinder: binding parameter [2] as [BOOLEAN] - [false]
2020-11-25 20:40:09,868 TRACE  [main] BasicBinder: binding parameter [3] as [VARCHAR] - [POLYNOMIAL]
2020-11-25 20:40:09,869 TRACE  [main] BasicBinder: binding parameter [4] as [INTEGER] - [1]
2020-11-25 20:40:09,871 TRACE  [main] BasicBinder: binding parameter [5] as [BIGINT] - [null]
2020-11-25 20:40:09,872 TRACE  [main] BasicBinder: binding parameter [6] as [INTEGER] - [6]
2020-11-25 20:40:09,895 TRACE  [main] BasicBinder: binding parameter [1] as [BLOB] - [null]
2020-11-25 20:40:09,898 TRACE  [main] BasicBinder: binding parameter [2] as [DOUBLE] - [1.0]
2020-11-25 20:40:09,898 TRACE  [main] BasicBinder: binding parameter [3] as [INTEGER] - [0]
2020-11-25 20:40:09,898 TRACE  [main] BasicBinder: binding parameter [4] as [BOOLEAN] - [true]
2020-11-25 20:40:09,899 TRACE  [main] BasicBinder: binding parameter [5] as [INTEGER] - [0]
2020-11-25 20:40:09,899 TRACE  [main] BasicBinder: binding parameter [6] as [BIGINT] - [1]
2020-11-25 20:40:09,901 TRACE  [main] BasicBinder: binding parameter [1] as [BLOB] - [null]
2020-11-25 20:40:09,902 TRACE  [main] BasicBinder: binding parameter [2] as [DOUBLE] - [2.0]
2020-11-25 20:40:09,902 TRACE  [main] BasicBinder: binding parameter [3] as [INTEGER] - [0]
2020-11-25 20:40:09,902 TRACE  [main] BasicBinder: binding parameter [4] as [BOOLEAN] - [true]
2020-11-25 20:40:09,902 TRACE  [main] BasicBinder: binding parameter [5] as [INTEGER] - [1]
2020-11-25 20:40:09,902 TRACE  [main] BasicBinder: binding parameter [6] as [BIGINT] - [1]
2020-11-25 20:40:09,903 TRACE  [main] BasicBinder: binding parameter [1] as [BLOB] - [null]
2020-11-25 20:40:09,904 TRACE  [main] BasicBinder: binding parameter [2] as [DOUBLE] - [1.0]
2020-11-25 20:40:09,904 TRACE  [main] BasicBinder: binding parameter [3] as [INTEGER] - [0]
2020-11-25 20:40:09,904 TRACE  [main] BasicBinder: binding parameter [4] as [BOOLEAN] - [true]
2020-11-25 20:40:09,904 TRACE  [main] BasicBinder: binding parameter [5] as [INTEGER] - [2]
2020-11-25 20:40:09,904 TRACE  [main] BasicBinder: binding parameter [6] as [BIGINT] - [1]
2020-11-25 20:40:09,908 TRACE  [main] BasicBinder: binding parameter [1] as [BLOB] - [null]
2020-11-25 20:40:09,909 TRACE  [main] BasicBinder: binding parameter [2] as [DOUBLE] - [1.0]
2020-11-25 20:40:09,909 TRACE  [main] BasicBinder: binding parameter [3] as [INTEGER] - [0]
2020-11-25 20:40:09,909 TRACE  [main] BasicBinder: binding parameter [4] as [BOOLEAN] - [false]
2020-11-25 20:40:09,909 TRACE  [main] BasicBinder: binding parameter [5] as [INTEGER] - [0]
2020-11-25 20:40:09,909 TRACE  [main] BasicBinder: binding parameter [6] as [BIGINT] - [1]
2020-11-25 20:40:09,910 TRACE  [main] BasicBinder: binding parameter [1] as [BLOB] - [null]
2020-11-25 20:40:09,910 TRACE  [main] BasicBinder: binding parameter [2] as [DOUBLE] - [1.0]
2020-11-25 20:40:09,911 TRACE  [main] BasicBinder: binding parameter [3] as [INTEGER] - [0]
2020-11-25 20:40:09,911 TRACE  [main] BasicBinder: binding parameter [4] as [BOOLEAN] - [false]
2020-11-25 20:40:09,911 TRACE  [main] BasicBinder: binding parameter [5] as [INTEGER] - [1]
2020-11-25 20:40:09,911 TRACE  [main] BasicBinder: binding parameter [6] as [BIGINT] - [1]
2020-11-25 20:40:14,792 DEBUG  [main] BasicTypeRegistry: Adding type registration boolean -> org.hibernate.type.BooleanType@15fb4566
2020-11-25 20:40:14,792 DEBUG  [main] BasicTypeRegistry: Adding type registration boolean -> org.hibernate.type.BooleanType@15fb4566
2020-11-25 20:40:14,792 DEBUG  [main] BasicTypeRegistry: Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@15fb4566
2020-11-25 20:40:14,792 DEBUG  [main] BasicTypeRegistry: Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@11c713b7
2020-11-25 20:40:14,793 DEBUG  [main] BasicTypeRegistry: Adding type registration true_false -> org.hibernate.type.TrueFalseType@3c232051
2020-11-25 20:40:14,793 DEBUG  [main] BasicTypeRegistry: Adding type registration yes_no -> org.hibernate.type.YesNoType@7741d346
2020-11-25 20:40:14,794 DEBUG  [main] BasicTypeRegistry: Adding type registration byte -> org.hibernate.type.ByteType@6042d663
2020-11-25 20:40:14,794 DEBUG  [main] BasicTypeRegistry: Adding type registration byte -> org.hibernate.type.ByteType@6042d663
2020-11-25 20:40:14,794 DEBUG  [main] BasicTypeRegistry: Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@6042d663
2020-11-25 20:40:14,795 DEBUG  [main] BasicTypeRegistry: Adding type registration character -> org.hibernate.type.CharacterType@3f1a9a53
2020-11-25 20:40:14,795 DEBUG  [main] BasicTypeRegistry: Adding type registration char -> org.hibernate.type.CharacterType@3f1a9a53
2020-11-25 20:40:14,795 DEBUG  [main] BasicTypeRegistry: Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@3f1a9a53
2020-11-25 20:40:14,795 DEBUG  [main] BasicTypeRegistry: Adding type registration short -> org.hibernate.type.ShortType@3a4aadf8
2020-11-25 20:40:14,795 DEBUG  [main] BasicTypeRegistry: Adding type registration short -> org.hibernate.type.ShortType@3a4aadf8
2020-11-25 20:40:14,796 DEBUG  [main] BasicTypeRegistry: Adding type registration java.lang.Short -> org.hibernate.type.ShortType@3a4aadf8
2020-11-25 20:40:14,796 DEBUG  [main] BasicTypeRegistry: Adding type registration integer -> org.hibernate.type.IntegerType@64b70f41
2020-11-25 20:40:14,796 DEBUG  [main] BasicTypeRegistry: Adding type registration int -> org.hibernate.type.IntegerType@64b70f41
2020-11-25 20:40:14,796 DEBUG  [main] BasicTypeRegistry: Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@64b70f41
2020-11-25 20:40:14,796 DEBUG  [main] BasicTypeRegistry: Adding type registration long -> org.hibernate.type.LongType@da4cf09
2020-11-25 20:40:14,799 DEBUG  [main] BasicTypeRegistry: Adding type registration long -> org.hibernate.type.LongType@da4cf09
2020-11-25 20:40:14,800 DEBUG  [main] BasicTypeRegistry: Adding type registration java.lang.Long -> org.hibernate.type.LongType@da4cf09
2020-11-25 20:40:14,801 DEBUG  [main] BasicTypeRegistry: Adding type registration float -> org.hibernate.type.FloatType@39941489
2020-11-25 20:40:14,801 DEBUG  [main] BasicTypeRegistry: Adding type registration float -> org.hibernate.type.FloatType@39941489
2020-11-25 20:40:14,802 DEBUG  [main] BasicTypeRegistry: Adding type registration java.lang.Float -> org.hibernate.type.FloatType@39941489
2020-11-25 20:40:14,802 DEBUG  [main] BasicTypeRegistry: Adding type registration double -> org.hibernate.type.DoubleType@60cb1ed6
2020-11-25 20:40:14,802 DEBUG  [main] BasicTypeRegistry: Adding type registration double -> org.hibernate.type.DoubleType@60cb1ed6
2020-11-25 20:40:14,802 DEBUG  [main] BasicTypeRegistry: Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@60cb1ed6
2020-11-25 20:40:14,802 DEBUG  [main] BasicTypeRegistry: Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@1f9d4b0e
2020-11-25 20:40:14,803 DEBUG  [main] BasicTypeRegistry: Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@1f9d4b0e
2020-11-25 20:40:14,803 DEBUG  [main] BasicTypeRegistry: Adding type registration big_integer -> org.hibernate.type.BigIntegerType@1ca610a0
2020-11-25 20:40:14,804 DEBUG  [main] BasicTypeRegistry: Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@1ca610a0
2020-11-25 20:40:14,804 DEBUG  [main] BasicTypeRegistry: Adding type registration string -> org.hibernate.type.StringType@47829d6d
2020-11-25 20:40:14,805 DEBUG  [main] BasicTypeRegistry: Adding type registration java.lang.String -> org.hibernate.type.StringType@47829d6d
2020-11-25 20:40:14,805 DEBUG  [main] BasicTypeRegistry: Adding type registration nstring -> org.hibernate.type.StringNVarcharType@7a1b8a46
2020-11-25 20:40:14,806 DEBUG  [main] BasicTypeRegistry: Adding type registration ncharacter -> org.hibernate.type.CharacterNCharType@7f13811b
2020-11-25 20:40:14,806 DEBUG  [main] BasicTypeRegistry: Adding type registration url -> org.hibernate.type.UrlType@1983b48a
2020-11-25 20:40:14,807 DEBUG  [main] BasicTypeRegistry: Adding type registration java.net.URL -> org.hibernate.type.UrlType@1983b48a
2020-11-25 20:40:14,808 DEBUG  [main] BasicTypeRegistry: Adding type registration Duration -> org.hibernate.type.DurationType@71e7adbb
2020-11-25 20:40:14,808 DEBUG  [main] BasicTypeRegistry: Adding type registration java.time.Duration -> org.hibernate.type.DurationType@71e7adbb
2020-11-25 20:40:14,809 DEBUG  [main] BasicTypeRegistry: Adding type registration Instant -> org.hibernate.type.InstantType@1e3df614
2020-11-25 20:40:14,809 DEBUG  [main] BasicTypeRegistry: Adding type registration java.time.Instant -> org.hibernate.type.InstantType@1e3df614
2020-11-25 20:40:14,810 DEBUG  [main] BasicTypeRegistry: Adding type registration LocalDateTime -> org.hibernate.type.LocalDateTimeType@4451f60c
2020-11-25 20:40:14,811 DEBUG  [main] BasicTypeRegistry: Adding type registration java.time.LocalDateTime -> org.hibernate.type.LocalDateTimeType@4451f60c
2020-11-25 20:40:14,811 DEBUG  [main] BasicTypeRegistry: Adding type registration LocalDate -> org.hibernate.type.LocalDateType@7730ef88
2020-11-25 20:40:14,811 DEBUG  [main] BasicTypeRegistry: Adding type registration java.time.LocalDate -> org.hibernate.type.LocalDateType@7730ef88
2020-11-25 20:40:14,811 DEBUG  [main] BasicTypeRegistry: Adding type registration LocalTime -> org.hibernate.type.LocalTimeType@45843650
2020-11-25 20:40:14,811 DEBUG  [main] BasicTypeRegistry: Adding type registration java.time.LocalTime -> org.hibernate.type.LocalTimeType@45843650
2020-11-25 20:40:14,812 DEBUG  [main] BasicTypeRegistry: Adding type registration OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@52c9d3d0
2020-11-25 20:40:14,812 DEBUG  [main] BasicTypeRegistry: Adding type registration java.time.OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@52c9d3d0
2020-11-25 20:40:14,812 DEBUG  [main] BasicTypeRegistry: Adding type registration OffsetTime -> org.hibernate.type.OffsetTimeType@6fe595dc
2020-11-25 20:40:14,812 DEBUG  [main] BasicTypeRegistry: Adding type registration java.time.OffsetTime -> org.hibernate.type.OffsetTimeType@6fe595dc
2020-11-25 20:40:14,813 DEBUG  [main] BasicTypeRegistry: Adding type registration ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@337a6d30
2020-11-25 20:40:14,813 DEBUG  [main] BasicTypeRegistry: Adding type registration java.time.ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@337a6d30
2020-11-25 20:40:14,813 DEBUG  [main] BasicTypeRegistry: Adding type registration date -> org.hibernate.type.DateType@1bedc703
2020-11-25 20:40:14,813 DEBUG  [main] BasicTypeRegistry: Adding type registration java.sql.Date -> org.hibernate.type.DateType@1bedc703
2020-11-25 20:40:14,813 DEBUG  [main] BasicTypeRegistry: Adding type registration time -> org.hibernate.type.TimeType@384fda47
2020-11-25 20:40:14,814 DEBUG  [main] BasicTypeRegistry: Adding type registration java.sql.Time -> org.hibernate.type.TimeType@384fda47
2020-11-25 20:40:14,814 DEBUG  [main] BasicTypeRegistry: Adding type registration timestamp -> org.hibernate.type.TimestampType@2da81754
2020-11-25 20:40:14,814 DEBUG  [main] BasicTypeRegistry: Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@2da81754
2020-11-25 20:40:14,814 DEBUG  [main] BasicTypeRegistry: Adding type registration java.util.Date -> org.hibernate.type.TimestampType@2da81754
2020-11-25 20:40:14,815 DEBUG  [main] BasicTypeRegistry: Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@261bd7b
2020-11-25 20:40:14,815 DEBUG  [main] BasicTypeRegistry: Adding type registration calendar -> org.hibernate.type.CalendarType@6002e944
2020-11-25 20:40:14,815 DEBUG  [main] BasicTypeRegistry: Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@6002e944
2020-11-25 20:40:14,815 DEBUG  [main] BasicTypeRegistry: Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@6002e944
2020-11-25 20:40:14,816 DEBUG  [main] BasicTypeRegistry: Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@78a8978a
2020-11-25 20:40:14,816 DEBUG  [main] BasicTypeRegistry: Adding type registration locale -> org.hibernate.type.LocaleType@1e54a6b1
2020-11-25 20:40:14,816 DEBUG  [main] BasicTypeRegistry: Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@1e54a6b1
2020-11-25 20:40:14,817 DEBUG  [main] BasicTypeRegistry: Adding type registration currency -> org.hibernate.type.CurrencyType@5d66e944
2020-11-25 20:40:14,817 DEBUG  [main] BasicTypeRegistry: Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@5d66e944
2020-11-25 20:40:14,818 DEBUG  [main] BasicTypeRegistry: Adding type registration timezone -> org.hibernate.type.TimeZoneType@5042e3d0
2020-11-25 20:40:14,818 DEBUG  [main] BasicTypeRegistry: Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@5042e3d0
2020-11-25 20:40:14,819 DEBUG  [main] BasicTypeRegistry: Adding type registration class -> org.hibernate.type.ClassType@3b0c3951
2020-11-25 20:40:14,819 DEBUG  [main] BasicTypeRegistry: Adding type registration java.lang.Class -> org.hibernate.type.ClassType@3b0c3951
2020-11-25 20:40:14,819 DEBUG  [main] BasicTypeRegistry: Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@3fe512d2
2020-11-25 20:40:14,819 DEBUG  [main] BasicTypeRegistry: Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@3fe512d2
2020-11-25 20:40:14,819 DEBUG  [main] BasicTypeRegistry: Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@6dce59e
2020-11-25 20:40:14,820 DEBUG  [main] BasicTypeRegistry: Adding type registration binary -> org.hibernate.type.BinaryType@38d80d65
2020-11-25 20:40:14,820 DEBUG  [main] BasicTypeRegistry: Adding type registration byte[] -> org.hibernate.type.BinaryType@38d80d65
2020-11-25 20:40:14,820 DEBUG  [main] BasicTypeRegistry: Adding type registration [B -> org.hibernate.type.BinaryType@38d80d65
2020-11-25 20:40:14,820 DEBUG  [main] BasicTypeRegistry: Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@d13960e
2020-11-25 20:40:14,820 DEBUG  [main] BasicTypeRegistry: Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@d13960e
2020-11-25 20:40:14,820 DEBUG  [main] BasicTypeRegistry: Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@d13960e
2020-11-25 20:40:14,821 DEBUG  [main] BasicTypeRegistry: Adding type registration row_version -> org.hibernate.type.RowVersionType@2ac519dc
2020-11-25 20:40:14,821 DEBUG  [main] BasicTypeRegistry: Adding type registration image -> org.hibernate.type.ImageType@3ece79fe
2020-11-25 20:40:14,821 DEBUG  [main] BasicTypeRegistry: Adding type registration characters -> org.hibernate.type.CharArrayType@6b4125ed
2020-11-25 20:40:14,821 DEBUG  [main] BasicTypeRegistry: Adding type registration char[] -> org.hibernate.type.CharArrayType@6b4125ed
2020-11-25 20:40:14,821 DEBUG  [main] BasicTypeRegistry: Adding type registration [C -> org.hibernate.type.CharArrayType@6b4125ed
2020-11-25 20:40:14,821 DEBUG  [main] BasicTypeRegistry: Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@1fecfaea
2020-11-25 20:40:14,822 DEBUG  [main] BasicTypeRegistry: Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@1fecfaea
2020-11-25 20:40:14,822 DEBUG  [main] BasicTypeRegistry: Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@1fecfaea
2020-11-25 20:40:14,822 DEBUG  [main] BasicTypeRegistry: Adding type registration text -> org.hibernate.type.TextType@4bb147ec
2020-11-25 20:40:14,823 DEBUG  [main] BasicTypeRegistry: Adding type registration ntext -> org.hibernate.type.NTextType@59a2388e
2020-11-25 20:40:14,823 DEBUG  [main] BasicTypeRegistry: Adding type registration blob -> org.hibernate.type.BlobType@174721c4
2020-11-25 20:40:14,823 DEBUG  [main] BasicTypeRegistry: Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@174721c4
2020-11-25 20:40:14,823 DEBUG  [main] BasicTypeRegistry: Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@4aeb0e2b
2020-11-25 20:40:14,823 DEBUG  [main] BasicTypeRegistry: Adding type registration clob -> org.hibernate.type.ClobType@590765c4
2020-11-25 20:40:14,823 DEBUG  [main] BasicTypeRegistry: Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@590765c4
2020-11-25 20:40:14,824 DEBUG  [main] BasicTypeRegistry: Adding type registration nclob -> org.hibernate.type.NClobType@64b018f3
2020-11-25 20:40:14,824 DEBUG  [main] BasicTypeRegistry: Adding type registration java.sql.NClob -> org.hibernate.type.NClobType@64b018f3
2020-11-25 20:40:14,824 DEBUG  [main] BasicTypeRegistry: Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@1c240cf2
2020-11-25 20:40:14,824 DEBUG  [main] BasicTypeRegistry: Adding type registration materialized_nclob -> org.hibernate.type.MaterializedNClobType@5809fa26
2020-11-25 20:40:14,824 DEBUG  [main] BasicTypeRegistry: Adding type registration serializable -> org.hibernate.type.SerializableType@3e546734
2020-11-25 20:40:14,824 DEBUG  [main] BasicTypeRegistry: Adding type registration object -> org.hibernate.type.ObjectType@7f0b93b4
2020-11-25 20:40:14,825 DEBUG  [main] BasicTypeRegistry: Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@7f0b93b4
2020-11-25 20:40:14,825 DEBUG  [main] BasicTypeRegistry: Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@1f0f92f5
2020-11-25 20:40:14,825 DEBUG  [main] BasicTypeRegistry: Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@7430ed93
2020-11-25 20:40:14,825 DEBUG  [main] BasicTypeRegistry: Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@2346f77a
2020-11-25 20:40:14,825 DEBUG  [main] BasicTypeRegistry: Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@5bcfdaf3
2020-11-25 20:40:14,825 DEBUG  [main] BasicTypeRegistry: Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@38347345
2020-11-25 20:40:14,826 DEBUG  [main] BasicTypeRegistry: Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@4b9b5da5
2020-11-25 20:40:14,826 DEBUG  [main] BasicTypeRegistry: Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@5ff29e8b
2020-11-25 20:40:14,826 DEBUG  [main] BasicTypeRegistry: Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@7acfcfc4
2020-11-25 20:40:14,841 DEBUG  [main] TypeConfiguration$Scope: Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@121dac1a] to MetadataBuildingContext [org.hibernate.boot.internal.MetadataBuildingContextRootImpl@6d946eee]
2020-11-25 20:40:14,852 DEBUG  [main] EnumType: Using NAMED-based conversion for Enum com.sf.back.entities.Kind
2020-11-25 20:40:14,854 DEBUG  [main] EnumType: Using NAMED-based conversion for Enum com.sf.back.entities.Kind
2020-11-25 20:40:14,875 DEBUG  [main] TypeConfiguration$Scope: Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@121dac1a] to SessionFactoryImpl [org.hibernate.internal.SessionFactoryImpl@75c589f2]
2020-11-25 20:40:14,876 DEBUG  [main] EnumType: Using NAMED-based conversion for Enum com.sf.back.entities.Kind
2020-11-25 20:40:14,876 DEBUG  [main] EnumType: Using NAMED-based conversion for Enum com.sf.back.entities.Kind
2020-11-25 20:40:14,878 DEBUG  [main] EnumType: Using NAMED-based conversion for Enum com.sf.back.entities.Kind
2020-11-25 20:40:14,878 DEBUG  [main] EnumType: Using NAMED-based conversion for Enum com.sf.back.entities.Kind
2020-11-25 20:40:14,888 DEBUG  [main] EnumType: Using NAMED-based conversion for Enum com.sf.back.entities.Kind
2020-11-25 20:40:14,890 DEBUG  [main] EnumType: Using NAMED-based conversion for Enum com.sf.back.entities.Kind
2020-11-25 20:40:14,915 DEBUG  [main] EnumType: Using NAMED-based conversion for Enum com.sf.back.entities.Kind
2020-11-25 20:40:14,930 TRACE  [main] TypeConfiguration$Scope: Handling #sessionFactoryCreated from [org.hibernate.internal.SessionFactoryImpl@75c589f2] for TypeConfiguration
2020-11-25 20:40:15,345 WARN   [main] JpaBaseConfiguration$JpaWebConfiguration: spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2020-11-25 20:40:15,706 TRACE  [main] BasicBinder: binding parameter [1] as [BLOB] - [[70, 105, 110, 100, 32, 97, 108, 108, 32, 114, 111, 111, 116, 115, 32, 111, 102, 32, 103, 105, 118, 101, 110, 32, 112, 111, 108, 121, 110, 111, 109, 105, 97, 108]]
2020-11-25 20:40:15,707 TRACE  [main] BasicBinder: binding parameter [2] as [BOOLEAN] - [false]
2020-11-25 20:40:15,708 TRACE  [main] BasicBinder: binding parameter [3] as [VARCHAR] - [POLYNOMIAL]
2020-11-25 20:40:15,709 TRACE  [main] BasicBinder: binding parameter [4] as [INTEGER] - [1]
2020-11-25 20:40:15,710 TRACE  [main] BasicBinder: binding parameter [5] as [BIGINT] - [null]
2020-11-25 20:40:15,710 TRACE  [main] BasicBinder: binding parameter [6] as [INTEGER] - [6]
2020-11-25 20:40:15,714 TRACE  [main] BasicBinder: binding parameter [1] as [BLOB] - [null]
2020-11-25 20:40:15,714 TRACE  [main] BasicBinder: binding parameter [2] as [DOUBLE] - [1.0]
2020-11-25 20:40:15,715 TRACE  [main] BasicBinder: binding parameter [3] as [INTEGER] - [0]
2020-11-25 20:40:15,715 TRACE  [main] BasicBinder: binding parameter [4] as [BOOLEAN] - [true]
2020-11-25 20:40:15,715 TRACE  [main] BasicBinder: binding parameter [5] as [INTEGER] - [0]
2020-11-25 20:40:15,715 TRACE  [main] BasicBinder: binding parameter [6] as [BIGINT] - [1]
2020-11-25 20:40:15,718 TRACE  [main] BasicBinder: binding parameter [1] as [BLOB] - [null]
2020-11-25 20:40:15,718 TRACE  [main] BasicBinder: binding parameter [2] as [DOUBLE] - [2.0]
2020-11-25 20:40:15,719 TRACE  [main] BasicBinder: binding parameter [3] as [INTEGER] - [0]
2020-11-25 20:40:15,719 TRACE  [main] BasicBinder: binding parameter [4] as [BOOLEAN] - [true]
2020-11-25 20:40:15,719 TRACE  [main] BasicBinder: binding parameter [5] as [INTEGER] - [1]
2020-11-25 20:40:15,720 TRACE  [main] BasicBinder: binding parameter [6] as [BIGINT] - [1]
2020-11-25 20:40:15,721 TRACE  [main] BasicBinder: binding parameter [1] as [BLOB] - [null]
2020-11-25 20:40:15,722 TRACE  [main] BasicBinder: binding parameter [2] as [DOUBLE] - [1.0]
2020-11-25 20:40:15,722 TRACE  [main] BasicBinder: binding parameter [3] as [INTEGER] - [0]
2020-11-25 20:40:15,722 TRACE  [main] BasicBinder: binding parameter [4] as [BOOLEAN] - [true]
2020-11-25 20:40:15,722 TRACE  [main] BasicBinder: binding parameter [5] as [INTEGER] - [2]
2020-11-25 20:40:15,723 TRACE  [main] BasicBinder: binding parameter [6] as [BIGINT] - [1]
2020-11-25 20:40:15,724 TRACE  [main] BasicBinder: binding parameter [1] as [BLOB] - [null]
2020-11-25 20:40:15,724 TRACE  [main] BasicBinder: binding parameter [2] as [DOUBLE] - [1.0]
2020-11-25 20:40:15,724 TRACE  [main] BasicBinder: binding parameter [3] as [INTEGER] - [0]
2020-11-25 20:40:15,724 TRACE  [main] BasicBinder: binding parameter [4] as [BOOLEAN] - [false]
2020-11-25 20:40:15,724 TRACE  [main] BasicBinder: binding parameter [5] as [INTEGER] - [0]
2020-11-25 20:40:15,725 TRACE  [main] BasicBinder: binding parameter [6] as [BIGINT] - [1]
2020-11-25 20:40:15,726 TRACE  [main] BasicBinder: binding parameter [1] as [BLOB] - [null]
2020-11-25 20:40:15,727 TRACE  [main] BasicBinder: binding parameter [2] as [DOUBLE] - [1.0]
2020-11-25 20:40:15,727 TRACE  [main] BasicBinder: binding parameter [3] as [INTEGER] - [0]
2020-11-25 20:40:15,728 TRACE  [main] BasicBinder: binding parameter [4] as [BOOLEAN] - [false]
2020-11-25 20:40:15,728 TRACE  [main] BasicBinder: binding parameter [5] as [INTEGER] - [1]
2020-11-25 20:40:15,728 TRACE  [main] BasicBinder: binding parameter [6] as [BIGINT] - [1]
2020-11-25 20:40:15,848 TRACE  [main] BasicBinder: binding parameter [1] as [BIGINT] - [2]
2020-11-25 20:40:15,855 TRACE  [main] BasicExtractor: extracted value ([id1_1_2_] : [BIGINT]) - [null]
2020-11-25 20:40:15,855 TRACE  [main] BasicExtractor: extracted value ([id1_0_4_] : [BIGINT]) - [null]
2020-11-25 20:40:15,865 TRACE  [main] BasicExtractor: extracted value ([descript2_1_0_] : [BLOB]) - [[112, 114, 111, 98, 108, 101, 109, 100, 101, 115, 99, 114, 105, 112, 116, 105, 111, 110]]
2020-11-25 20:40:15,867 TRACE  [main] BasicExtractor: extracted value ([is_solve3_1_0_] : [BOOLEAN]) - [null]
2020-11-25 20:40:15,867 TRACE  [main] BasicExtractor: extracted value ([kind4_1_0_] : [VARCHAR]) - [POLYNOMIAL]
2020-11-25 20:40:15,869 TRACE  [main] BasicExtractor: extracted value ([matrix_d5_1_0_] : [INTEGER]) - [1]
2020-11-25 20:40:15,870 TRACE  [main] BasicExtractor: extracted value ([parent_p7_1_0_] : [BIGINT]) - [null]
2020-11-25 20:40:15,870 TRACE  [main] BasicExtractor: extracted value ([problem_6_1_0_] : [INTEGER]) - [22]
2020-11-25 20:40:15,871 TRACE  [main] BasicExtractor: extracted value ([problem_7_0_3_] : [BIGINT]) - [null]
2020-11-25 20:40:15,873 TRACE  [main] BasicExtractor: extracted value ([parent_p7_1_1_] : [BIGINT]) - [null]
2020-11-25 20:40:15,883 TRACE  [main] CollectionType: Created collection wrapper: [com.sf.back.entities.Problem.matrixes#2]
2020-11-25 20:40:15,891 TRACE  [main] BasicBinder: binding parameter [1] as [BIGINT] - [2]
2020-11-25 20:40:15,893 TRACE  [main] BasicExtractor: extracted value ([id1_0_1_] : [BIGINT]) - [6]
2020-11-25 20:40:15,893 TRACE  [main] BasicExtractor: extracted value ([binary_v2_0_1_] : [BLOB]) - [null]
2020-11-25 20:40:15,895 TRACE  [main] BasicExtractor: extracted value ([float_va3_0_1_] : [DOUBLE]) - [1.0]
2020-11-25 20:40:15,896 TRACE  [main] BasicExtractor: extracted value ([i4_0_1_] : [INTEGER]) - [0]
2020-11-25 20:40:15,896 TRACE  [main] BasicExtractor: extracted value ([is_condi5_0_1_] : [BOOLEAN]) - [true]
2020-11-25 20:40:15,897 TRACE  [main] BasicExtractor: extracted value ([j6_0_1_] : [INTEGER]) - [0]
2020-11-25 20:40:15,897 TRACE  [main] BasicExtractor: extracted value ([problem_7_0_1_] : [BIGINT]) - [2]
2020-11-25 20:40:15,898 TRACE  [main] BasicExtractor: extracted value ([problem_7_0_0_] : [BIGINT]) - [2]
2020-11-25 20:40:15,898 TRACE  [main] BasicExtractor: extracted value ([id1_0_0_] : [BIGINT]) - [6]
2020-11-25 20:40:15,899 TRACE  [main] BasicExtractor: extracted value ([id1_0_1_] : [BIGINT]) - [7]
2020-11-25 20:40:15,900 TRACE  [main] BasicExtractor: extracted value ([binary_v2_0_1_] : [BLOB]) - [null]
2020-11-25 20:40:15,900 TRACE  [main] BasicExtractor: extracted value ([float_va3_0_1_] : [DOUBLE]) - [2.718281828459045]
2020-11-25 20:40:15,900 TRACE  [main] BasicExtractor: extracted value ([i4_0_1_] : [INTEGER]) - [0]
2020-11-25 20:40:15,901 TRACE  [main] BasicExtractor: extracted value ([is_condi5_0_1_] : [BOOLEAN]) - [true]
2020-11-25 20:40:15,901 TRACE  [main] BasicExtractor: extracted value ([j6_0_1_] : [INTEGER]) - [1]
2020-11-25 20:40:15,902 TRACE  [main] BasicExtractor: extracted value ([problem_7_0_1_] : [BIGINT]) - [2]
2020-11-25 20:40:15,902 TRACE  [main] BasicExtractor: extracted value ([problem_7_0_0_] : [BIGINT]) - [2]
2020-11-25 20:40:15,903 TRACE  [main] BasicExtractor: extracted value ([id1_0_0_] : [BIGINT]) - [7]
2020-11-25 20:40:15,903 TRACE  [main] BasicExtractor: extracted value ([id1_0_1_] : [BIGINT]) - [8]
2020-11-25 20:40:15,904 TRACE  [main] BasicExtractor: extracted value ([binary_v2_0_1_] : [BLOB]) - [null]
2020-11-25 20:40:15,904 TRACE  [main] BasicExtractor: extracted value ([float_va3_0_1_] : [DOUBLE]) - [7.38905609893065]
2020-11-25 20:40:15,907 TRACE  [main] BasicExtractor: extracted value ([i4_0_1_] : [INTEGER]) - [0]
2020-11-25 20:40:15,909 TRACE  [main] BasicExtractor: extracted value ([is_condi5_0_1_] : [BOOLEAN]) - [true]
2020-11-25 20:40:15,910 TRACE  [main] BasicExtractor: extracted value ([j6_0_1_] : [INTEGER]) - [2]
2020-11-25 20:40:15,910 TRACE  [main] BasicExtractor: extracted value ([problem_7_0_1_] : [BIGINT]) - [2]
2020-11-25 20:40:15,910 TRACE  [main] BasicExtractor: extracted value ([problem_7_0_0_] : [BIGINT]) - [2]
2020-11-25 20:40:15,910 TRACE  [main] BasicExtractor: extracted value ([id1_0_0_] : [BIGINT]) - [8]
2020-11-25 20:40:15,911 TRACE  [main] BasicExtractor: extracted value ([id1_0_1_] : [BIGINT]) - [9]
2020-11-25 20:40:15,912 TRACE  [main] BasicExtractor: extracted value ([binary_v2_0_1_] : [BLOB]) - [null]
2020-11-25 20:40:15,912 TRACE  [main] BasicExtractor: extracted value ([float_va3_0_1_] : [DOUBLE]) - [20.085536923187668]
2020-11-25 20:40:15,913 TRACE  [main] BasicExtractor: extracted value ([i4_0_1_] : [INTEGER]) - [0]
2020-11-25 20:40:15,913 TRACE  [main] BasicExtractor: extracted value ([is_condi5_0_1_] : [BOOLEAN]) - [true]
2020-11-25 20:40:15,913 TRACE  [main] BasicExtractor: extracted value ([j6_0_1_] : [INTEGER]) - [3]
2020-11-25 20:40:15,913 TRACE  [main] BasicExtractor: extracted value ([problem_7_0_1_] : [BIGINT]) - [2]
2020-11-25 20:40:15,913 TRACE  [main] BasicExtractor: extracted value ([problem_7_0_0_] : [BIGINT]) - [2]
2020-11-25 20:40:15,914 TRACE  [main] BasicExtractor: extracted value ([id1_0_0_] : [BIGINT]) - [9]
2020-11-25 20:40:15,914 TRACE  [main] BasicExtractor: extracted value ([id1_0_1_] : [BIGINT]) - [10]
2020-11-25 20:40:15,914 TRACE  [main] BasicExtractor: extracted value ([binary_v2_0_1_] : [BLOB]) - [null]
2020-11-25 20:40:15,914 TRACE  [main] BasicExtractor: extracted value ([float_va3_0_1_] : [DOUBLE]) - [54.598150033144236]
2020-11-25 20:40:15,929 TRACE  [main] BasicExtractor: extracted value ([i4_0_1_] : [INTEGER]) - [0]
2020-11-25 20:40:15,930 TRACE  [main] BasicExtractor: extracted value ([is_condi5_0_1_] : [BOOLEAN]) - [true]
2020-11-25 20:40:15,930 TRACE  [main] BasicExtractor: extracted value ([j6_0_1_] : [INTEGER]) - [4]
2020-11-25 20:40:15,931 TRACE  [main] BasicExtractor: extracted value ([problem_7_0_1_] : [BIGINT]) - [2]
2020-11-25 20:40:15,931 TRACE  [main] BasicExtractor: extracted value ([problem_7_0_0_] : [BIGINT]) - [2]
2020-11-25 20:40:15,932 TRACE  [main] BasicExtractor: extracted value ([id1_0_0_] : [BIGINT]) - [10]
2020-11-25 20:40:15,933 TRACE  [main] BasicExtractor: extracted value ([id1_0_1_] : [BIGINT]) - [11]
2020-11-25 20:40:15,934 TRACE  [main] BasicExtractor: extracted value ([binary_v2_0_1_] : [BLOB]) - [null]
2020-11-25 20:40:15,935 TRACE  [main] BasicExtractor: extracted value ([float_va3_0_1_] : [DOUBLE]) - [148.4131591025766]
2020-11-25 20:40:15,936 TRACE  [main] BasicExtractor: extracted value ([i4_0_1_] : [INTEGER]) - [0]
2020-11-25 20:40:15,937 TRACE  [main] BasicExtractor: extracted value ([is_condi5_0_1_] : [BOOLEAN]) - [true]
2020-11-25 20:40:15,937 TRACE  [main] BasicExtractor: extracted value ([j6_0_1_] : [INTEGER]) - [5]
2020-11-25 20:40:15,937 TRACE  [main] BasicExtractor: extracted value ([problem_7_0_1_] : [BIGINT]) - [2]
2020-11-25 20:40:15,937 TRACE  [main] BasicExtractor: extracted value ([problem_7_0_0_] : [BIGINT]) - [2]
2020-11-25 20:40:15,937 TRACE  [main] BasicExtractor: extracted value ([id1_0_0_] : [BIGINT]) - [11]
2020-11-25 20:40:16,093 TRACE  [main] BasicBinder: binding parameter [1] as [BIGINT] - [2]
2020-11-25 20:40:16,095 TRACE  [main] BasicExtractor: extracted value ([id1_1_2_] : [BIGINT]) - [null]
2020-11-25 20:40:16,096 TRACE  [main] BasicExtractor: extracted value ([id1_0_4_] : [BIGINT]) - [null]
2020-11-25 20:40:16,096 TRACE  [main] BasicExtractor: extracted value ([descript2_1_0_] : [BLOB]) - [[112, 114, 111, 98, 108, 101, 109, 100, 101, 115, 99, 114, 105, 112, 116, 105, 111, 110]]
2020-11-25 20:40:16,096 TRACE  [main] BasicExtractor: extracted value ([is_solve3_1_0_] : [BOOLEAN]) - [null]
2020-11-25 20:40:16,096 TRACE  [main] BasicExtractor: extracted value ([kind4_1_0_] : [VARCHAR]) - [POLYNOMIAL]
2020-11-25 20:40:16,097 TRACE  [main] BasicExtractor: extracted value ([matrix_d5_1_0_] : [INTEGER]) - [1]
2020-11-25 20:40:16,097 TRACE  [main] BasicExtractor: extracted value ([parent_p7_1_0_] : [BIGINT]) - [null]
2020-11-25 20:40:16,097 TRACE  [main] BasicExtractor: extracted value ([problem_6_1_0_] : [INTEGER]) - [22]
2020-11-25 20:40:16,097 TRACE  [main] BasicExtractor: extracted value ([problem_7_0_3_] : [BIGINT]) - [null]
2020-11-25 20:40:16,097 TRACE  [main] BasicExtractor: extracted value ([parent_p7_1_1_] : [BIGINT]) - [null]
2020-11-25 20:40:16,098 TRACE  [main] CollectionType: Created collection wrapper: [com.sf.back.entities.Problem.matrixes#2]
2020-11-25 20:40:16,099 TRACE  [main] BasicBinder: binding parameter [1] as [BIGINT] - [2]
2020-11-25 20:40:16,099 TRACE  [main] BasicExtractor: extracted value ([id1_0_1_] : [BIGINT]) - [6]
2020-11-25 20:40:16,100 TRACE  [main] BasicExtractor: extracted value ([binary_v2_0_1_] : [BLOB]) - [null]
2020-11-25 20:40:16,100 TRACE  [main] BasicExtractor: extracted value ([float_va3_0_1_] : [DOUBLE]) - [1.0]
2020-11-25 20:40:16,100 TRACE  [main] BasicExtractor: extracted value ([i4_0_1_] : [INTEGER]) - [0]
2020-11-25 20:40:16,100 TRACE  [main] BasicExtractor: extracted value ([is_condi5_0_1_] : [BOOLEAN]) - [true]
2020-11-25 20:40:16,101 TRACE  [main] BasicExtractor: extracted value ([j6_0_1_] : [INTEGER]) - [0]
2020-11-25 20:40:16,101 TRACE  [main] BasicExtractor: extracted value ([problem_7_0_1_] : [BIGINT]) - [2]
2020-11-25 20:40:16,101 TRACE  [main] BasicExtractor: extracted value ([problem_7_0_0_] : [BIGINT]) - [2]
2020-11-25 20:40:16,101 TRACE  [main] BasicExtractor: extracted value ([id1_0_0_] : [BIGINT]) - [6]
2020-11-25 20:40:16,101 TRACE  [main] BasicExtractor: extracted value ([id1_0_1_] : [BIGINT]) - [7]
2020-11-25 20:40:16,102 TRACE  [main] BasicExtractor: extracted value ([binary_v2_0_1_] : [BLOB]) - [null]
2020-11-25 20:40:16,102 TRACE  [main] BasicExtractor: extracted value ([float_va3_0_1_] : [DOUBLE]) - [2.718281828459045]
2020-11-25 20:40:16,102 TRACE  [main] BasicExtractor: extracted value ([i4_0_1_] : [INTEGER]) - [0]
2020-11-25 20:40:16,102 TRACE  [main] BasicExtractor: extracted value ([is_condi5_0_1_] : [BOOLEAN]) - [true]
2020-11-25 20:40:16,103 TRACE  [main] BasicExtractor: extracted value ([j6_0_1_] : [INTEGER]) - [1]
2020-11-25 20:40:16,103 TRACE  [main] BasicExtractor: extracted value ([problem_7_0_1_] : [BIGINT]) - [2]
2020-11-25 20:40:16,103 TRACE  [main] BasicExtractor: extracted value ([problem_7_0_0_] : [BIGINT]) - [2]
2020-11-25 20:40:16,103 TRACE  [main] BasicExtractor: extracted value ([id1_0_0_] : [BIGINT]) - [7]
2020-11-25 20:40:16,103 TRACE  [main] BasicExtractor: extracted value ([id1_0_1_] : [BIGINT]) - [8]
2020-11-25 20:40:16,104 TRACE  [main] BasicExtractor: extracted value ([binary_v2_0_1_] : [BLOB]) - [null]
2020-11-25 20:40:16,104 TRACE  [main] BasicExtractor: extracted value ([float_va3_0_1_] : [DOUBLE]) - [7.38905609893065]
2020-11-25 20:40:16,104 TRACE  [main] BasicExtractor: extracted value ([i4_0_1_] : [INTEGER]) - [0]
2020-11-25 20:40:16,104 TRACE  [main] BasicExtractor: extracted value ([is_condi5_0_1_] : [BOOLEAN]) - [true]
2020-11-25 20:40:16,104 TRACE  [main] BasicExtractor: extracted value ([j6_0_1_] : [INTEGER]) - [2]
2020-11-25 20:40:16,105 TRACE  [main] BasicExtractor: extracted value ([problem_7_0_1_] : [BIGINT]) - [2]
2020-11-25 20:40:16,105 TRACE  [main] BasicExtractor: extracted value ([problem_7_0_0_] : [BIGINT]) - [2]
2020-11-25 20:40:16,105 TRACE  [main] BasicExtractor: extracted value ([id1_0_0_] : [BIGINT]) - [8]
2020-11-25 20:40:16,105 TRACE  [main] BasicExtractor: extracted value ([id1_0_1_] : [BIGINT]) - [9]
2020-11-25 20:40:16,106 TRACE  [main] BasicExtractor: extracted value ([binary_v2_0_1_] : [BLOB]) - [null]
2020-11-25 20:40:16,106 TRACE  [main] BasicExtractor: extracted value ([float_va3_0_1_] : [DOUBLE]) - [20.085536923187668]
2020-11-25 20:40:16,106 TRACE  [main] BasicExtractor: extracted value ([i4_0_1_] : [INTEGER]) - [0]
2020-11-25 20:40:16,106 TRACE  [main] BasicExtractor: extracted value ([is_condi5_0_1_] : [BOOLEAN]) - [true]
2020-11-25 20:40:16,106 TRACE  [main] BasicExtractor: extracted value ([j6_0_1_] : [INTEGER]) - [3]
2020-11-25 20:40:16,106 TRACE  [main] BasicExtractor: extracted value ([problem_7_0_1_] : [BIGINT]) - [2]
2020-11-25 20:40:16,106 TRACE  [main] BasicExtractor: extracted value ([problem_7_0_0_] : [BIGINT]) - [2]
2020-11-25 20:40:16,107 TRACE  [main] BasicExtractor: extracted value ([id1_0_0_] : [BIGINT]) - [9]
2020-11-25 20:40:16,107 TRACE  [main] BasicExtractor: extracted value ([id1_0_1_] : [BIGINT]) - [10]
2020-11-25 20:40:16,107 TRACE  [main] BasicExtractor: extracted value ([binary_v2_0_1_] : [BLOB]) - [null]
2020-11-25 20:40:16,107 TRACE  [main] BasicExtractor: extracted value ([float_va3_0_1_] : [DOUBLE]) - [54.598150033144236]
2020-11-25 20:40:16,108 TRACE  [main] BasicExtractor: extracted value ([i4_0_1_] : [INTEGER]) - [0]
2020-11-25 20:40:16,108 TRACE  [main] BasicExtractor: extracted value ([is_condi5_0_1_] : [BOOLEAN]) - [true]
2020-11-25 20:40:16,108 TRACE  [main] BasicExtractor: extracted value ([j6_0_1_] : [INTEGER]) - [4]
2020-11-25 20:40:16,108 TRACE  [main] BasicExtractor: extracted value ([problem_7_0_1_] : [BIGINT]) - [2]
2020-11-25 20:40:16,108 TRACE  [main] BasicExtractor: extracted value ([problem_7_0_0_] : [BIGINT]) - [2]
2020-11-25 20:40:16,108 TRACE  [main] BasicExtractor: extracted value ([id1_0_0_] : [BIGINT]) - [10]
2020-11-25 20:40:16,109 TRACE  [main] BasicExtractor: extracted value ([id1_0_1_] : [BIGINT]) - [11]
2020-11-25 20:40:16,109 TRACE  [main] BasicExtractor: extracted value ([binary_v2_0_1_] : [BLOB]) - [null]
2020-11-25 20:40:16,109 TRACE  [main] BasicExtractor: extracted value ([float_va3_0_1_] : [DOUBLE]) - [148.4131591025766]
2020-11-25 20:40:16,109 TRACE  [main] BasicExtractor: extracted value ([i4_0_1_] : [INTEGER]) - [0]
2020-11-25 20:40:16,109 TRACE  [main] BasicExtractor: extracted value ([is_condi5_0_1_] : [BOOLEAN]) - [true]
2020-11-25 20:40:16,110 TRACE  [main] BasicExtractor: extracted value ([j6_0_1_] : [INTEGER]) - [5]
2020-11-25 20:40:16,110 TRACE  [main] BasicExtractor: extracted value ([problem_7_0_1_] : [BIGINT]) - [2]
2020-11-25 20:40:16,110 TRACE  [main] BasicExtractor: extracted value ([problem_7_0_0_] : [BIGINT]) - [2]
2020-11-25 20:40:16,111 TRACE  [main] BasicExtractor: extracted value ([id1_0_0_] : [BIGINT]) - [11]
2020-11-25 20:40:16,138 TRACE  [main] BasicBinder: binding parameter [1] as [BLOB] - [[100, 101, 115, 99, 114, 105, 112, 116, 105, 111, 110, 100, 101, 115, 99, 114, 105, 112, 116, 105, 111, 110]]
2020-11-25 20:40:16,139 TRACE  [main] BasicBinder: binding parameter [2] as [BOOLEAN] - [null]
2020-11-25 20:40:16,140 TRACE  [main] BasicBinder: binding parameter [3] as [VARCHAR] - [POLYNOMIAL]
2020-11-25 20:40:16,140 TRACE  [main] BasicBinder: binding parameter [4] as [INTEGER] - [1]
2020-11-25 20:40:16,141 TRACE  [main] BasicBinder: binding parameter [5] as [BIGINT] - [null]
2020-11-25 20:40:16,141 TRACE  [main] BasicBinder: binding parameter [6] as [INTEGER] - [22]
2020-11-25 20:40:16,142 TRACE  [main] BasicBinder: binding parameter [7] as [BIGINT] - [2]
2020-11-25 20:40:16,147 TRACE  [main] BasicBinder: binding parameter [1] as [BLOB] - [null]
2020-11-25 20:40:16,148 TRACE  [main] BasicBinder: binding parameter [2] as [DOUBLE] - [1.01]
2020-11-25 20:40:16,148 TRACE  [main] BasicBinder: binding parameter [3] as [INTEGER] - [0]
2020-11-25 20:40:16,149 TRACE  [main] BasicBinder: binding parameter [4] as [BOOLEAN] - [true]
2020-11-25 20:40:16,149 TRACE  [main] BasicBinder: binding parameter [5] as [INTEGER] - [0]
2020-11-25 20:40:16,149 TRACE  [main] BasicBinder: binding parameter [6] as [BIGINT] - [2]
2020-11-25 20:40:16,150 TRACE  [main] BasicBinder: binding parameter [7] as [BIGINT] - [6]
2020-11-25 20:40:16,153 TRACE  [main] BasicBinder: binding parameter [1] as [BIGINT] - [2]
2020-11-25 20:40:16,153 TRACE  [main] BasicExtractor: extracted value ([id1_1_2_] : [BIGINT]) - [null]
2020-11-25 20:40:16,153 TRACE  [main] BasicExtractor: extracted value ([id1_0_4_] : [BIGINT]) - [null]
2020-11-25 20:40:16,156 TRACE  [main] BasicExtractor: extracted value ([descript2_1_0_] : [BLOB]) - [[100, 101, 115, 99, 114, 105, 112, 116, 105, 111, 110, 100, 101, 115, 99, 114, 105, 112, 116, 105, 111, 110]]
2020-11-25 20:40:16,156 TRACE  [main] BasicExtractor: extracted value ([is_solve3_1_0_] : [BOOLEAN]) - [null]
2020-11-25 20:40:16,156 TRACE  [main] BasicExtractor: extracted value ([kind4_1_0_] : [VARCHAR]) - [POLYNOMIAL]
2020-11-25 20:40:16,157 TRACE  [main] BasicExtractor: extracted value ([matrix_d5_1_0_] : [INTEGER]) - [1]
2020-11-25 20:40:16,157 TRACE  [main] BasicExtractor: extracted value ([parent_p7_1_0_] : [BIGINT]) - [null]
2020-11-25 20:40:16,157 TRACE  [main] BasicExtractor: extracted value ([problem_6_1_0_] : [INTEGER]) - [22]
2020-11-25 20:40:16,157 TRACE  [main] BasicExtractor: extracted value ([problem_7_0_3_] : [BIGINT]) - [null]
2020-11-25 20:40:16,157 TRACE  [main] BasicExtractor: extracted value ([parent_p7_1_1_] : [BIGINT]) - [null]
2020-11-25 20:40:16,157 TRACE  [main] CollectionType: Created collection wrapper: [com.sf.back.entities.Problem.matrixes#2]
2020-11-25 20:40:16,158 TRACE  [main] BasicBinder: binding parameter [1] as [BIGINT] - [2]
2020-11-25 20:40:16,159 TRACE  [main] BasicExtractor: extracted value ([id1_0_1_] : [BIGINT]) - [6]
2020-11-25 20:40:16,159 TRACE  [main] BasicExtractor: extracted value ([binary_v2_0_1_] : [BLOB]) - [null]
2020-11-25 20:40:16,160 TRACE  [main] BasicExtractor: extracted value ([float_va3_0_1_] : [DOUBLE]) - [1.01]
2020-11-25 20:40:16,160 TRACE  [main] BasicExtractor: extracted value ([i4_0_1_] : [INTEGER]) - [0]
2020-11-25 20:40:16,160 TRACE  [main] BasicExtractor: extracted value ([is_condi5_0_1_] : [BOOLEAN]) - [true]
2020-11-25 20:40:16,160 TRACE  [main] BasicExtractor: extracted value ([j6_0_1_] : [INTEGER]) - [0]
2020-11-25 20:40:16,161 TRACE  [main] BasicExtractor: extracted value ([problem_7_0_1_] : [BIGINT]) - [2]
2020-11-25 20:40:16,162 TRACE  [main] BasicExtractor: extracted value ([problem_7_0_0_] : [BIGINT]) - [2]
2020-11-25 20:40:16,162 TRACE  [main] BasicExtractor: extracted value ([id1_0_0_] : [BIGINT]) - [6]
2020-11-25 20:40:16,162 TRACE  [main] BasicExtractor: extracted value ([id1_0_1_] : [BIGINT]) - [7]
2020-11-25 20:40:16,163 TRACE  [main] BasicExtractor: extracted value ([binary_v2_0_1_] : [BLOB]) - [null]
2020-11-25 20:40:16,163 TRACE  [main] BasicExtractor: extracted value ([float_va3_0_1_] : [DOUBLE]) - [2.718281828459045]
2020-11-25 20:40:16,163 TRACE  [main] BasicExtractor: extracted value ([i4_0_1_] : [INTEGER]) - [0]
2020-11-25 20:40:16,164 TRACE  [main] BasicExtractor: extracted value ([is_condi5_0_1_] : [BOOLEAN]) - [true]
2020-11-25 20:40:16,164 TRACE  [main] BasicExtractor: extracted value ([j6_0_1_] : [INTEGER]) - [1]
2020-11-25 20:40:16,164 TRACE  [main] BasicExtractor: extracted value ([problem_7_0_1_] : [BIGINT]) - [2]
2020-11-25 20:40:16,164 TRACE  [main] BasicExtractor: extracted value ([problem_7_0_0_] : [BIGINT]) - [2]
2020-11-25 20:40:16,164 TRACE  [main] BasicExtractor: extracted value ([id1_0_0_] : [BIGINT]) - [7]
2020-11-25 20:40:16,165 TRACE  [main] BasicExtractor: extracted value ([id1_0_1_] : [BIGINT]) - [8]
2020-11-25 20:40:16,166 TRACE  [main] BasicExtractor: extracted value ([binary_v2_0_1_] : [BLOB]) - [null]
2020-11-25 20:40:16,166 TRACE  [main] BasicExtractor: extracted value ([float_va3_0_1_] : [DOUBLE]) - [7.38905609893065]
2020-11-25 20:40:16,167 TRACE  [main] BasicExtractor: extracted value ([i4_0_1_] : [INTEGER]) - [0]
2020-11-25 20:40:16,168 TRACE  [main] BasicExtractor: extracted value ([is_condi5_0_1_] : [BOOLEAN]) - [true]
2020-11-25 20:40:16,168 TRACE  [main] BasicExtractor: extracted value ([j6_0_1_] : [INTEGER]) - [2]
2020-11-25 20:40:16,169 TRACE  [main] BasicExtractor: extracted value ([problem_7_0_1_] : [BIGINT]) - [2]
2020-11-25 20:40:16,170 TRACE  [main] BasicExtractor: extracted value ([problem_7_0_0_] : [BIGINT]) - [2]
2020-11-25 20:40:16,171 TRACE  [main] BasicExtractor: extracted value ([id1_0_0_] : [BIGINT]) - [8]
2020-11-25 20:40:16,172 TRACE  [main] BasicExtractor: extracted value ([id1_0_1_] : [BIGINT]) - [9]
2020-11-25 20:40:16,178 TRACE  [main] BasicExtractor: extracted value ([binary_v2_0_1_] : [BLOB]) - [null]
2020-11-25 20:40:16,179 TRACE  [main] BasicExtractor: extracted value ([float_va3_0_1_] : [DOUBLE]) - [20.085536923187668]
2020-11-25 20:40:16,180 TRACE  [main] BasicExtractor: extracted value ([i4_0_1_] : [INTEGER]) - [0]
2020-11-25 20:40:16,180 TRACE  [main] BasicExtractor: extracted value ([is_condi5_0_1_] : [BOOLEAN]) - [true]
2020-11-25 20:40:16,180 TRACE  [main] BasicExtractor: extracted value ([j6_0_1_] : [INTEGER]) - [3]
2020-11-25 20:40:16,180 TRACE  [main] BasicExtractor: extracted value ([problem_7_0_1_] : [BIGINT]) - [2]
2020-11-25 20:40:16,180 TRACE  [main] BasicExtractor: extracted value ([problem_7_0_0_] : [BIGINT]) - [2]
2020-11-25 20:40:16,181 TRACE  [main] BasicExtractor: extracted value ([id1_0_0_] : [BIGINT]) - [9]
2020-11-25 20:40:16,181 TRACE  [main] BasicExtractor: extracted value ([id1_0_1_] : [BIGINT]) - [10]
2020-11-25 20:40:16,181 TRACE  [main] BasicExtractor: extracted value ([binary_v2_0_1_] : [BLOB]) - [null]
2020-11-25 20:40:16,181 TRACE  [main] BasicExtractor: extracted value ([float_va3_0_1_] : [DOUBLE]) - [54.598150033144236]
2020-11-25 20:40:16,181 TRACE  [main] BasicExtractor: extracted value ([i4_0_1_] : [INTEGER]) - [0]
2020-11-25 20:40:16,181 TRACE  [main] BasicExtractor: extracted value ([is_condi5_0_1_] : [BOOLEAN]) - [true]
2020-11-25 20:40:16,182 TRACE  [main] BasicExtractor: extracted value ([j6_0_1_] : [INTEGER]) - [4]
2020-11-25 20:40:16,183 TRACE  [main] BasicExtractor: extracted value ([problem_7_0_1_] : [BIGINT]) - [2]
2020-11-25 20:40:16,183 TRACE  [main] BasicExtractor: extracted value ([problem_7_0_0_] : [BIGINT]) - [2]
2020-11-25 20:40:16,183 TRACE  [main] BasicExtractor: extracted value ([id1_0_0_] : [BIGINT]) - [10]
2020-11-25 20:40:16,184 TRACE  [main] BasicExtractor: extracted value ([id1_0_1_] : [BIGINT]) - [11]
2020-11-25 20:40:16,184 TRACE  [main] BasicExtractor: extracted value ([binary_v2_0_1_] : [BLOB]) - [null]
2020-11-25 20:40:16,184 TRACE  [main] BasicExtractor: extracted value ([float_va3_0_1_] : [DOUBLE]) - [148.4131591025766]
2020-11-25 20:40:16,185 TRACE  [main] BasicExtractor: extracted value ([i4_0_1_] : [INTEGER]) - [0]
2020-11-25 20:40:16,185 TRACE  [main] BasicExtractor: extracted value ([is_condi5_0_1_] : [BOOLEAN]) - [true]
2020-11-25 20:40:16,185 TRACE  [main] BasicExtractor: extracted value ([j6_0_1_] : [INTEGER]) - [5]
2020-11-25 20:40:16,185 TRACE  [main] BasicExtractor: extracted value ([problem_7_0_1_] : [BIGINT]) - [2]
2020-11-25 20:40:16,185 TRACE  [main] BasicExtractor: extracted value ([problem_7_0_0_] : [BIGINT]) - [2]
2020-11-25 20:40:16,185 TRACE  [main] BasicExtractor: extracted value ([id1_0_0_] : [BIGINT]) - [11]
2020-11-25 20:40:16,206 TRACE  [main] BasicBinder: binding parameter [1] as [BLOB] - [[100, 101, 115, 99, 114, 105, 112, 116, 105, 111, 110]]
2020-11-25 20:40:16,207 TRACE  [main] BasicBinder: binding parameter [2] as [BOOLEAN] - [false]
2020-11-25 20:40:16,207 TRACE  [main] BasicBinder: binding parameter [3] as [VARCHAR] - [POLYNOMIAL]
2020-11-25 20:40:16,207 TRACE  [main] BasicBinder: binding parameter [4] as [INTEGER] - [12]
2020-11-25 20:40:16,207 TRACE  [main] BasicBinder: binding parameter [5] as [BIGINT] - [null]
2020-11-25 20:40:16,207 TRACE  [main] BasicBinder: binding parameter [6] as [INTEGER] - [null]
2020-11-25 20:40:16,209 TRACE  [main] BasicBinder: binding parameter [1] as [BLOB] - [null]
2020-11-25 20:40:16,209 TRACE  [main] BasicBinder: binding parameter [2] as [DOUBLE] - [0.0]
2020-11-25 20:40:16,209 TRACE  [main] BasicBinder: binding parameter [3] as [INTEGER] - [0]
2020-11-25 20:40:16,209 TRACE  [main] BasicBinder: binding parameter [4] as [BOOLEAN] - [true]
2020-11-25 20:40:16,209 TRACE  [main] BasicBinder: binding parameter [5] as [INTEGER] - [0]
2020-11-25 20:40:16,210 TRACE  [main] BasicBinder: binding parameter [6] as [BIGINT] - [4]
2020-11-25 20:40:16,211 TRACE  [main] BasicBinder: binding parameter [1] as [BLOB] - [null]
2020-11-25 20:40:16,212 TRACE  [main] BasicBinder: binding parameter [2] as [DOUBLE] - [1.0]
2020-11-25 20:40:16,212 TRACE  [main] BasicBinder: binding parameter [3] as [INTEGER] - [0]
2020-11-25 20:40:16,212 TRACE  [main] BasicBinder: binding parameter [4] as [BOOLEAN] - [true]
2020-11-25 20:40:16,212 TRACE  [main] BasicBinder: binding parameter [5] as [INTEGER] - [1]
2020-11-25 20:40:16,212 TRACE  [main] BasicBinder: binding parameter [6] as [BIGINT] - [4]
2020-11-25 20:40:16,213 TRACE  [main] BasicBinder: binding parameter [1] as [BLOB] - [null]
2020-11-25 20:40:16,214 TRACE  [main] BasicBinder: binding parameter [2] as [DOUBLE] - [2.0]
2020-11-25 20:40:16,214 TRACE  [main] BasicBinder: binding parameter [3] as [INTEGER] - [0]
2020-11-25 20:40:16,214 TRACE  [main] BasicBinder: binding parameter [4] as [BOOLEAN] - [true]
2020-11-25 20:40:16,214 TRACE  [main] BasicBinder: binding parameter [5] as [INTEGER] - [2]
2020-11-25 20:40:16,214 TRACE  [main] BasicBinder: binding parameter [6] as [BIGINT] - [4]
2020-11-25 20:40:16,219 TRACE  [main] BasicBinder: binding parameter [1] as [BLOB] - [null]
2020-11-25 20:40:16,219 TRACE  [main] BasicBinder: binding parameter [2] as [DOUBLE] - [3.0]
2020-11-25 20:40:16,220 TRACE  [main] BasicBinder: binding parameter [3] as [INTEGER] - [0]
2020-11-25 20:40:16,220 TRACE  [main] BasicBinder: binding parameter [4] as [BOOLEAN] - [true]
2020-11-25 20:40:16,220 TRACE  [main] BasicBinder: binding parameter [5] as [INTEGER] - [3]
2020-11-25 20:40:16,221 TRACE  [main] BasicBinder: binding parameter [6] as [BIGINT] - [4]
2020-11-25 20:40:16,223 TRACE  [main] BasicBinder: binding parameter [1] as [BLOB] - [null]
2020-11-25 20:40:16,224 TRACE  [main] BasicBinder: binding parameter [2] as [DOUBLE] - [4.0]
2020-11-25 20:40:16,224 TRACE  [main] BasicBinder: binding parameter [3] as [INTEGER] - [0]
2020-11-25 20:40:16,225 TRACE  [main] BasicBinder: binding parameter [4] as [BOOLEAN] - [true]
2020-11-25 20:40:16,226 TRACE  [main] BasicBinder: binding parameter [5] as [INTEGER] - [4]
2020-11-25 20:40:16,226 TRACE  [main] BasicBinder: binding parameter [6] as [BIGINT] - [4]
2020-11-25 20:40:16,228 TRACE  [main] BasicBinder: binding parameter [1] as [BLOB] - [null]
2020-11-25 20:40:16,228 TRACE  [main] BasicBinder: binding parameter [2] as [DOUBLE] - [5.0]
2020-11-25 20:40:16,229 TRACE  [main] BasicBinder: binding parameter [3] as [INTEGER] - [0]
2020-11-25 20:40:16,229 TRACE  [main] BasicBinder: binding parameter [4] as [BOOLEAN] - [true]
2020-11-25 20:40:16,230 TRACE  [main] BasicBinder: binding parameter [5] as [INTEGER] - [5]
2020-11-25 20:40:16,230 TRACE  [main] BasicBinder: binding parameter [6] as [BIGINT] - [4]
2020-11-25 20:40:16,233 TRACE  [main] BasicBinder: binding parameter [1] as [BLOB] - [null]
2020-11-25 20:40:16,233 TRACE  [main] BasicBinder: binding parameter [2] as [DOUBLE] - [6.0]
2020-11-25 20:40:16,234 TRACE  [main] BasicBinder: binding parameter [3] as [INTEGER] - [0]
2020-11-25 20:40:16,234 TRACE  [main] BasicBinder: binding parameter [4] as [BOOLEAN] - [true]
2020-11-25 20:40:16,234 TRACE  [main] BasicBinder: binding parameter [5] as [INTEGER] - [6]
2020-11-25 20:40:16,234 TRACE  [main] BasicBinder: binding parameter [6] as [BIGINT] - [4]
2020-11-25 20:40:16,236 TRACE  [main] BasicBinder: binding parameter [1] as [BLOB] - [null]
2020-11-25 20:40:16,236 TRACE  [main] BasicBinder: binding parameter [2] as [DOUBLE] - [7.0]
2020-11-25 20:40:16,236 TRACE  [main] BasicBinder: binding parameter [3] as [INTEGER] - [0]
2020-11-25 20:40:16,236 TRACE  [main] BasicBinder: binding parameter [4] as [BOOLEAN] - [true]
2020-11-25 20:40:16,236 TRACE  [main] BasicBinder: binding parameter [5] as [INTEGER] - [7]
2020-11-25 20:40:16,237 TRACE  [main] BasicBinder: binding parameter [6] as [BIGINT] - [4]
2020-11-25 20:40:16,238 TRACE  [main] BasicBinder: binding parameter [1] as [BLOB] - [null]
2020-11-25 20:40:16,239 TRACE  [main] BasicBinder: binding parameter [2] as [DOUBLE] - [8.0]
2020-11-25 20:40:16,239 TRACE  [main] BasicBinder: binding parameter [3] as [INTEGER] - [0]
2020-11-25 20:40:16,240 TRACE  [main] BasicBinder: binding parameter [4] as [BOOLEAN] - [true]
2020-11-25 20:40:16,240 TRACE  [main] BasicBinder: binding parameter [5] as [INTEGER] - [8]
2020-11-25 20:40:16,240 TRACE  [main] BasicBinder: binding parameter [6] as [BIGINT] - [4]
2020-11-25 20:40:16,243 TRACE  [main] BasicBinder: binding parameter [1] as [BLOB] - [null]
2020-11-25 20:40:16,244 TRACE  [main] BasicBinder: binding parameter [2] as [DOUBLE] - [9.0]
2020-11-25 20:40:16,244 TRACE  [main] BasicBinder: binding parameter [3] as [INTEGER] - [0]
2020-11-25 20:40:16,245 TRACE  [main] BasicBinder: binding parameter [4] as [BOOLEAN] - [true]
2020-11-25 20:40:16,245 TRACE  [main] BasicBinder: binding parameter [5] as [INTEGER] - [9]
2020-11-25 20:40:16,245 TRACE  [main] BasicBinder: binding parameter [6] as [BIGINT] - [4]
2020-11-25 20:40:16,512 TRACE  [main] BasicExtractor: extracted value ([id1_1_] : [BIGINT]) - [1]
2020-11-25 20:40:16,513 TRACE  [main] BasicExtractor: extracted value ([descript2_1_] : [BLOB]) - [[70, 105, 110, 100, 32, 97, 108, 108, 32, 114, 111, 111, 116, 115, 32, 111, 102, 32, 103, 105, 118, 101, 110, 32, 112, 111, 108, 121, 110, 111, 109, 105, 97, 108]]
2020-11-25 20:40:16,513 TRACE  [main] BasicExtractor: extracted value ([is_solve3_1_] : [BOOLEAN]) - [false]
2020-11-25 20:40:16,513 TRACE  [main] BasicExtractor: extracted value ([kind4_1_] : [VARCHAR]) - [POLYNOMIAL]
2020-11-25 20:40:16,513 TRACE  [main] BasicExtractor: extracted value ([matrix_d5_1_] : [INTEGER]) - [1]
2020-11-25 20:40:16,513 TRACE  [main] BasicExtractor: extracted value ([parent_p7_1_] : [BIGINT]) - [null]
2020-11-25 20:40:16,514 TRACE  [main] BasicExtractor: extracted value ([problem_6_1_] : [INTEGER]) - [6]
2020-11-25 20:40:16,514 TRACE  [main] BasicExtractor: extracted value ([id1_1_] : [BIGINT]) - [2]
2020-11-25 20:40:16,514 TRACE  [main] BasicExtractor: extracted value ([descript2_1_] : [BLOB]) - [[100, 101, 115, 99, 114, 105, 112, 116, 105, 111, 110, 100, 101, 115, 99, 114, 105, 112, 116, 105, 111, 110]]
2020-11-25 20:40:16,515 TRACE  [main] BasicExtractor: extracted value ([is_solve3_1_] : [BOOLEAN]) - [null]
2020-11-25 20:40:16,515 TRACE  [main] BasicExtractor: extracted value ([kind4_1_] : [VARCHAR]) - [POLYNOMIAL]
2020-11-25 20:40:16,515 TRACE  [main] BasicExtractor: extracted value ([matrix_d5_1_] : [INTEGER]) - [1]
2020-11-25 20:40:16,515 TRACE  [main] BasicExtractor: extracted value ([parent_p7_1_] : [BIGINT]) - [null]
2020-11-25 20:40:16,515 TRACE  [main] BasicExtractor: extracted value ([problem_6_1_] : [INTEGER]) - [22]
2020-11-25 20:40:16,515 TRACE  [main] BasicExtractor: extracted value ([id1_1_] : [BIGINT]) - [3]
2020-11-25 20:40:16,516 TRACE  [main] BasicExtractor: extracted value ([descript2_1_] : [BLOB]) - [[112, 114, 111, 98, 108, 101, 109, 100, 101, 115, 99, 114, 105, 112, 116, 105, 111, 110]]
2020-11-25 20:40:16,516 TRACE  [main] BasicExtractor: extracted value ([is_solve3_1_] : [BOOLEAN]) - [null]
2020-11-25 20:40:16,516 TRACE  [main] BasicExtractor: extracted value ([kind4_1_] : [VARCHAR]) - [POLYNOMIAL]
2020-11-25 20:40:16,516 TRACE  [main] BasicExtractor: extracted value ([matrix_d5_1_] : [INTEGER]) - [1]
2020-11-25 20:40:16,516 TRACE  [main] BasicExtractor: extracted value ([parent_p7_1_] : [BIGINT]) - [null]
2020-11-25 20:40:16,517 TRACE  [main] BasicExtractor: extracted value ([problem_6_1_] : [INTEGER]) - [22]
2020-11-25 20:40:16,517 TRACE  [main] BasicExtractor: extracted value ([id1_1_] : [BIGINT]) - [4]
2020-11-25 20:40:16,517 TRACE  [main] BasicExtractor: extracted value ([descript2_1_] : [BLOB]) - [[100, 101, 115, 99, 114, 105, 112, 116, 105, 111, 110]]
2020-11-25 20:40:16,517 TRACE  [main] BasicExtractor: extracted value ([is_solve3_1_] : [BOOLEAN]) - [false]
2020-11-25 20:40:16,517 TRACE  [main] BasicExtractor: extracted value ([kind4_1_] : [VARCHAR]) - [POLYNOMIAL]
2020-11-25 20:40:16,518 TRACE  [main] BasicExtractor: extracted value ([matrix_d5_1_] : [INTEGER]) - [12]
2020-11-25 20:40:16,518 TRACE  [main] BasicExtractor: extracted value ([parent_p7_1_] : [BIGINT]) - [null]
2020-11-25 20:40:16,518 TRACE  [main] BasicExtractor: extracted value ([problem_6_1_] : [INTEGER]) - [null]
2020-11-25 20:40:16,519 TRACE  [main] BasicExtractor: extracted value ([id1_1_] : [BIGINT]) - [5]
2020-11-25 20:40:16,520 TRACE  [main] BasicExtractor: extracted value ([descript2_1_] : [BLOB]) - [[112, 114, 111, 98, 108, 101, 109, 100, 101, 115, 99, 114, 105, 112, 116, 105, 111, 110]]
2020-11-25 20:40:16,520 TRACE  [main] BasicExtractor: extracted value ([is_solve3_1_] : [BOOLEAN]) - [null]
2020-11-25 20:40:16,520 TRACE  [main] BasicExtractor: extracted value ([kind4_1_] : [VARCHAR]) - [POLYNOMIAL]
2020-11-25 20:40:16,520 TRACE  [main] BasicExtractor: extracted value ([matrix_d5_1_] : [INTEGER]) - [1]
2020-11-25 20:40:16,520 TRACE  [main] BasicExtractor: extracted value ([parent_p7_1_] : [BIGINT]) - [null]
2020-11-25 20:40:16,520 TRACE  [main] BasicExtractor: extracted value ([problem_6_1_] : [INTEGER]) - [22]
2020-11-25 20:40:16,521 TRACE  [main] CollectionType: Created collection wrapper: [com.sf.back.entities.Problem.children#1]
2020-11-25 20:40:16,521 TRACE  [main] CollectionType: Created collection wrapper: [com.sf.back.entities.Problem.matrixes#1]
2020-11-25 20:40:16,522 TRACE  [main] CollectionType: Created collection wrapper: [com.sf.back.entities.Problem.children#2]
2020-11-25 20:40:16,522 TRACE  [main] CollectionType: Created collection wrapper: [com.sf.back.entities.Problem.matrixes#2]
2020-11-25 20:40:16,522 TRACE  [main] CollectionType: Created collection wrapper: [com.sf.back.entities.Problem.children#3]
2020-11-25 20:40:16,523 TRACE  [main] CollectionType: Created collection wrapper: [com.sf.back.entities.Problem.matrixes#3]
2020-11-25 20:40:16,523 TRACE  [main] CollectionType: Created collection wrapper: [com.sf.back.entities.Problem.children#4]
2020-11-25 20:40:16,523 TRACE  [main] CollectionType: Created collection wrapper: [com.sf.back.entities.Problem.matrixes#4]
2020-11-25 20:40:16,523 TRACE  [main] CollectionType: Created collection wrapper: [com.sf.back.entities.Problem.children#5]
2020-11-25 20:40:16,523 TRACE  [main] CollectionType: Created collection wrapper: [com.sf.back.entities.Problem.matrixes#5]
2020-11-25 20:40:16,524 TRACE  [main] BasicBinder: binding parameter [1] as [BIGINT] - [5]
2020-11-25 20:40:16,524 TRACE  [main] BasicExtractor: extracted value ([id1_0_1_] : [BIGINT]) - [28]
2020-11-25 20:40:16,525 TRACE  [main] BasicExtractor: extracted value ([binary_v2_0_1_] : [BLOB]) - [null]
2020-11-25 20:40:16,525 TRACE  [main] BasicExtractor: extracted value ([float_va3_0_1_] : [DOUBLE]) - [1.0]
2020-11-25 20:40:16,525 TRACE  [main] BasicExtractor: extracted value ([i4_0_1_] : [INTEGER]) - [0]
2020-11-25 20:40:16,525 TRACE  [main] BasicExtractor: extracted value ([is_condi5_0_1_] : [BOOLEAN]) - [true]
2020-11-25 20:40:16,525 TRACE  [main] BasicExtractor: extracted value ([j6_0_1_] : [INTEGER]) - [0]
2020-11-25 20:40:16,525 TRACE  [main] BasicExtractor: extracted value ([problem_7_0_1_] : [BIGINT]) - [5]
2020-11-25 20:40:16,526 TRACE  [main] BasicExtractor: extracted value ([problem_7_0_0_] : [BIGINT]) - [5]
2020-11-25 20:40:16,526 TRACE  [main] BasicExtractor: extracted value ([id1_0_0_] : [BIGINT]) - [28]
2020-11-25 20:40:16,527 TRACE  [main] BasicExtractor: extracted value ([id1_0_1_] : [BIGINT]) - [29]
2020-11-25 20:40:16,528 TRACE  [main] BasicExtractor: extracted value ([binary_v2_0_1_] : [BLOB]) - [null]
2020-11-25 20:40:16,528 TRACE  [main] BasicExtractor: extracted value ([float_va3_0_1_] : [DOUBLE]) - [2.718281828459045]
2020-11-25 20:40:16,529 TRACE  [main] BasicExtractor: extracted value ([i4_0_1_] : [INTEGER]) - [0]
2020-11-25 20:40:16,529 TRACE  [main] BasicExtractor: extracted value ([is_condi5_0_1_] : [BOOLEAN]) - [true]
2020-11-25 20:40:16,529 TRACE  [main] BasicExtractor: extracted value ([j6_0_1_] : [INTEGER]) - [1]
2020-11-25 20:40:16,529 TRACE  [main] BasicExtractor: extracted value ([problem_7_0_1_] : [BIGINT]) - [5]
2020-11-25 20:40:16,530 TRACE  [main] BasicExtractor: extracted value ([problem_7_0_0_] : [BIGINT]) - [5]
2020-11-25 20:40:16,530 TRACE  [main] BasicExtractor: extracted value ([id1_0_0_] : [BIGINT]) - [29]
2020-11-25 20:40:16,530 TRACE  [main] BasicExtractor: extracted value ([id1_0_1_] : [BIGINT]) - [30]
2020-11-25 20:40:16,531 TRACE  [main] BasicExtractor: extracted value ([binary_v2_0_1_] : [BLOB]) - [null]
2020-11-25 20:40:16,531 TRACE  [main] BasicExtractor: extracted value ([float_va3_0_1_] : [DOUBLE]) - [7.38905609893065]
2020-11-25 20:40:16,531 TRACE  [main] BasicExtractor: extracted value ([i4_0_1_] : [INTEGER]) - [0]
2020-11-25 20:40:16,532 TRACE  [main] BasicExtractor: extracted value ([is_condi5_0_1_] : [BOOLEAN]) - [true]
2020-11-25 20:40:16,532 TRACE  [main] BasicExtractor: extracted value ([j6_0_1_] : [INTEGER]) - [2]
2020-11-25 20:40:16,532 TRACE  [main] BasicExtractor: extracted value ([problem_7_0_1_] : [BIGINT]) - [5]
2020-11-25 20:40:16,532 TRACE  [main] BasicExtractor: extracted value ([problem_7_0_0_] : [BIGINT]) - [5]
2020-11-25 20:40:16,532 TRACE  [main] BasicExtractor: extracted value ([id1_0_0_] : [BIGINT]) - [30]
2020-11-25 20:40:16,533 TRACE  [main] BasicExtractor: extracted value ([id1_0_1_] : [BIGINT]) - [31]
2020-11-25 20:40:16,535 TRACE  [main] BasicExtractor: extracted value ([binary_v2_0_1_] : [BLOB]) - [null]
2020-11-25 20:40:16,536 TRACE  [main] BasicExtractor: extracted value ([float_va3_0_1_] : [DOUBLE]) - [20.085536923187668]
2020-11-25 20:40:16,536 TRACE  [main] BasicExtractor: extracted value ([i4_0_1_] : [INTEGER]) - [0]
2020-11-25 20:40:16,536 TRACE  [main] BasicExtractor: extracted value ([is_condi5_0_1_] : [BOOLEAN]) - [true]
2020-11-25 20:40:16,536 TRACE  [main] BasicExtractor: extracted value ([j6_0_1_] : [INTEGER]) - [3]
2020-11-25 20:40:16,536 TRACE  [main] BasicExtractor: extracted value ([problem_7_0_1_] : [BIGINT]) - [5]
2020-11-25 20:40:16,536 TRACE  [main] BasicExtractor: extracted value ([problem_7_0_0_] : [BIGINT]) - [5]
2020-11-25 20:40:16,537 TRACE  [main] BasicExtractor: extracted value ([id1_0_0_] : [BIGINT]) - [31]
2020-11-25 20:40:16,538 TRACE  [main] BasicExtractor: extracted value ([id1_0_1_] : [BIGINT]) - [32]
2020-11-25 20:40:16,538 TRACE  [main] BasicExtractor: extracted value ([binary_v2_0_1_] : [BLOB]) - [null]
2020-11-25 20:40:16,538 TRACE  [main] BasicExtractor: extracted value ([float_va3_0_1_] : [DOUBLE]) - [54.598150033144236]
2020-11-25 20:40:16,539 TRACE  [main] BasicExtractor: extracted value ([i4_0_1_] : [INTEGER]) - [0]
2020-11-25 20:40:16,539 TRACE  [main] BasicExtractor: extracted value ([is_condi5_0_1_] : [BOOLEAN]) - [true]
2020-11-25 20:40:16,539 TRACE  [main] BasicExtractor: extracted value ([j6_0_1_] : [INTEGER]) - [4]
2020-11-25 20:40:16,539 TRACE  [main] BasicExtractor: extracted value ([problem_7_0_1_] : [BIGINT]) - [5]
2020-11-25 20:40:16,539 TRACE  [main] BasicExtractor: extracted value ([problem_7_0_0_] : [BIGINT]) - [5]
2020-11-25 20:40:16,540 TRACE  [main] BasicExtractor: extracted value ([id1_0_0_] : [BIGINT]) - [32]
2020-11-25 20:40:16,540 TRACE  [main] BasicExtractor: extracted value ([id1_0_1_] : [BIGINT]) - [33]
2020-11-25 20:40:16,540 TRACE  [main] BasicExtractor: extracted value ([binary_v2_0_1_] : [BLOB]) - [null]
2020-11-25 20:40:16,541 TRACE  [main] BasicExtractor: extracted value ([float_va3_0_1_] : [DOUBLE]) - [148.4131591025766]
2020-11-25 20:40:16,541 TRACE  [main] BasicExtractor: extracted value ([i4_0_1_] : [INTEGER]) - [0]
2020-11-25 20:40:16,541 TRACE  [main] BasicExtractor: extracted value ([is_condi5_0_1_] : [BOOLEAN]) - [true]
2020-11-25 20:40:16,542 TRACE  [main] BasicExtractor: extracted value ([j6_0_1_] : [INTEGER]) - [5]
2020-11-25 20:40:16,542 TRACE  [main] BasicExtractor: extracted value ([problem_7_0_1_] : [BIGINT]) - [5]
2020-11-25 20:40:16,542 TRACE  [main] BasicExtractor: extracted value ([problem_7_0_0_] : [BIGINT]) - [5]
2020-11-25 20:40:16,542 TRACE  [main] BasicExtractor: extracted value ([id1_0_0_] : [BIGINT]) - [33]
2020-11-25 20:40:16,546 TRACE  [main] BasicBinder: binding parameter [1] as [BIGINT] - [5]
2020-11-25 20:40:16,547 TRACE  [main] BasicBinder: binding parameter [1] as [BIGINT] - [4]
2020-11-25 20:40:16,560 TRACE  [main] BasicExtractor: extracted value ([id1_0_1_] : [BIGINT]) - [18]
2020-11-25 20:40:16,560 TRACE  [main] BasicExtractor: extracted value ([binary_v2_0_1_] : [BLOB]) - [null]
2020-11-25 20:40:16,561 TRACE  [main] BasicExtractor: extracted value ([float_va3_0_1_] : [DOUBLE]) - [0.0]
2020-11-25 20:40:16,562 TRACE  [main] BasicExtractor: extracted value ([i4_0_1_] : [INTEGER]) - [0]
2020-11-25 20:40:16,562 TRACE  [main] BasicExtractor: extracted value ([is_condi5_0_1_] : [BOOLEAN]) - [true]
2020-11-25 20:40:16,563 TRACE  [main] BasicExtractor: extracted value ([j6_0_1_] : [INTEGER]) - [0]
2020-11-25 20:40:16,563 TRACE  [main] BasicExtractor: extracted value ([problem_7_0_1_] : [BIGINT]) - [4]
2020-11-25 20:40:16,563 TRACE  [main] BasicExtractor: extracted value ([problem_7_0_0_] : [BIGINT]) - [4]
2020-11-25 20:40:16,564 TRACE  [main] BasicExtractor: extracted value ([id1_0_0_] : [BIGINT]) - [18]
2020-11-25 20:40:16,564 TRACE  [main] BasicExtractor: extracted value ([id1_0_1_] : [BIGINT]) - [19]
2020-11-25 20:40:16,565 TRACE  [main] BasicExtractor: extracted value ([binary_v2_0_1_] : [BLOB]) - [null]
2020-11-25 20:40:16,565 TRACE  [main] BasicExtractor: extracted value ([float_va3_0_1_] : [DOUBLE]) - [1.0]
2020-11-25 20:40:16,565 TRACE  [main] BasicExtractor: extracted value ([i4_0_1_] : [INTEGER]) - [0]
2020-11-25 20:40:16,566 TRACE  [main] BasicExtractor: extracted value ([is_condi5_0_1_] : [BOOLEAN]) - [true]
2020-11-25 20:40:16,566 TRACE  [main] BasicExtractor: extracted value ([j6_0_1_] : [INTEGER]) - [1]
2020-11-25 20:40:16,567 TRACE  [main] BasicExtractor: extracted value ([problem_7_0_1_] : [BIGINT]) - [4]
2020-11-25 20:40:16,567 TRACE  [main] BasicExtractor: extracted value ([problem_7_0_0_] : [BIGINT]) - [4]
2020-11-25 20:40:16,568 TRACE  [main] BasicExtractor: extracted value ([id1_0_0_] : [BIGINT]) - [19]
2020-11-25 20:40:16,568 TRACE  [main] BasicExtractor: extracted value ([id1_0_1_] : [BIGINT]) - [20]
2020-11-25 20:40:16,569 TRACE  [main] BasicExtractor: extracted value ([binary_v2_0_1_] : [BLOB]) - [null]
2020-11-25 20:40:16,569 TRACE  [main] BasicExtractor: extracted value ([float_va3_0_1_] : [DOUBLE]) - [2.0]
2020-11-25 20:40:16,570 TRACE  [main] BasicExtractor: extracted value ([i4_0_1_] : [INTEGER]) - [0]
2020-11-25 20:40:16,570 TRACE  [main] BasicExtractor: extracted value ([is_condi5_0_1_] : [BOOLEAN]) - [true]
2020-11-25 20:40:16,570 TRACE  [main] BasicExtractor: extracted value ([j6_0_1_] : [INTEGER]) - [2]
2020-11-25 20:40:16,571 TRACE  [main] BasicExtractor: extracted value ([problem_7_0_1_] : [BIGINT]) - [4]
2020-11-25 20:40:16,571 TRACE  [main] BasicExtractor: extracted value ([problem_7_0_0_] : [BIGINT]) - [4]
2020-11-25 20:40:16,571 TRACE  [main] BasicExtractor: extracted value ([id1_0_0_] : [BIGINT]) - [20]
2020-11-25 20:40:16,572 TRACE  [main] BasicExtractor: extracted value ([id1_0_1_] : [BIGINT]) - [21]
2020-11-25 20:40:16,572 TRACE  [main] BasicExtractor: extracted value ([binary_v2_0_1_] : [BLOB]) - [null]
2020-11-25 20:40:16,572 TRACE  [main] BasicExtractor: extracted value ([float_va3_0_1_] : [DOUBLE]) - [3.0]
2020-11-25 20:40:16,573 TRACE  [main] BasicExtractor: extracted value ([i4_0_1_] : [INTEGER]) - [0]
2020-11-25 20:40:16,573 TRACE  [main] BasicExtractor: extracted value ([is_condi5_0_1_] : [BOOLEAN]) - [true]
2020-11-25 20:40:16,574 TRACE  [main] BasicExtractor: extracted value ([j6_0_1_] : [INTEGER]) - [3]
2020-11-25 20:40:16,574 TRACE  [main] BasicExtractor: extracted value ([problem_7_0_1_] : [BIGINT]) - [4]
2020-11-25 20:40:16,574 TRACE  [main] BasicExtractor: extracted value ([problem_7_0_0_] : [BIGINT]) - [4]
2020-11-25 20:40:16,575 TRACE  [main] BasicExtractor: extracted value ([id1_0_0_] : [BIGINT]) - [21]
2020-11-25 20:40:16,576 TRACE  [main] BasicExtractor: extracted value ([id1_0_1_] : [BIGINT]) - [22]
2020-11-25 20:40:16,576 TRACE  [main] BasicExtractor: extracted value ([binary_v2_0_1_] : [BLOB]) - [null]
2020-11-25 20:40:16,577 TRACE  [main] BasicExtractor: extracted value ([float_va3_0_1_] : [DOUBLE]) - [4.0]
2020-11-25 20:40:16,577 TRACE  [main] BasicExtractor: extracted value ([i4_0_1_] : [INTEGER]) - [0]
2020-11-25 20:40:16,578 TRACE  [main] BasicExtractor: extracted value ([is_condi5_0_1_] : [BOOLEAN]) - [true]
2020-11-25 20:40:16,579 TRACE  [main] BasicExtractor: extracted value ([j6_0_1_] : [INTEGER]) - [4]
2020-11-25 20:40:16,579 TRACE  [main] BasicExtractor: extracted value ([problem_7_0_1_] : [BIGINT]) - [4]
2020-11-25 20:40:16,579 TRACE  [main] BasicExtractor: extracted value ([problem_7_0_0_] : [BIGINT]) - [4]
2020-11-25 20:40:16,580 TRACE  [main] BasicExtractor: extracted value ([id1_0_0_] : [BIGINT]) - [22]
2020-11-25 20:40:16,581 TRACE  [main] BasicExtractor: extracted value ([id1_0_1_] : [BIGINT]) - [23]
2020-11-25 20:40:16,581 TRACE  [main] BasicExtractor: extracted value ([binary_v2_0_1_] : [BLOB]) - [null]
2020-11-25 20:40:16,582 TRACE  [main] BasicExtractor: extracted value ([float_va3_0_1_] : [DOUBLE]) - [5.0]
2020-11-25 20:40:16,582 TRACE  [main] BasicExtractor: extracted value ([i4_0_1_] : [INTEGER]) - [0]
2020-11-25 20:40:16,582 TRACE  [main] BasicExtractor: extracted value ([is_condi5_0_1_] : [BOOLEAN]) - [true]
2020-11-25 20:40:16,583 TRACE  [main] BasicExtractor: extracted value ([j6_0_1_] : [INTEGER]) - [5]
2020-11-25 20:40:16,583 TRACE  [main] BasicExtractor: extracted value ([problem_7_0_1_] : [BIGINT]) - [4]
2020-11-25 20:40:16,584 TRACE  [main] BasicExtractor: extracted value ([problem_7_0_0_] : [BIGINT]) - [4]
2020-11-25 20:40:16,585 TRACE  [main] BasicExtractor: extracted value ([id1_0_0_] : [BIGINT]) - [23]
2020-11-25 20:40:16,585 TRACE  [main] BasicExtractor: extracted value ([id1_0_1_] : [BIGINT]) - [24]
2020-11-25 20:40:16,586 TRACE  [main] BasicExtractor: extracted value ([binary_v2_0_1_] : [BLOB]) - [null]
2020-11-25 20:40:16,586 TRACE  [main] BasicExtractor: extracted value ([float_va3_0_1_] : [DOUBLE]) - [6.0]
2020-11-25 20:40:16,587 TRACE  [main] BasicExtractor: extracted value ([i4_0_1_] : [INTEGER]) - [0]
2020-11-25 20:40:16,587 TRACE  [main] BasicExtractor: extracted value ([is_condi5_0_1_] : [BOOLEAN]) - [true]
2020-11-25 20:40:16,588 TRACE  [main] BasicExtractor: extracted value ([j6_0_1_] : [INTEGER]) - [6]
2020-11-25 20:40:16,588 TRACE  [main] BasicExtractor: extracted value ([problem_7_0_1_] : [BIGINT]) - [4]
2020-11-25 20:40:16,588 TRACE  [main] BasicExtractor: extracted value ([problem_7_0_0_] : [BIGINT]) - [4]
2020-11-25 20:40:16,589 TRACE  [main] BasicExtractor: extracted value ([id1_0_0_] : [BIGINT]) - [24]
2020-11-25 20:40:16,589 TRACE  [main] BasicExtractor: extracted value ([id1_0_1_] : [BIGINT]) - [25]
2020-11-25 20:40:16,590 TRACE  [main] BasicExtractor: extracted value ([binary_v2_0_1_] : [BLOB]) - [null]
2020-11-25 20:40:16,590 TRACE  [main] BasicExtractor: extracted value ([float_va3_0_1_] : [DOUBLE]) - [7.0]
2020-11-25 20:40:16,591 TRACE  [main] BasicExtractor: extracted value ([i4_0_1_] : [INTEGER]) - [0]
2020-11-25 20:40:16,591 TRACE  [main] BasicExtractor: extracted value ([is_condi5_0_1_] : [BOOLEAN]) - [true]
2020-11-25 20:40:16,592 TRACE  [main] BasicExtractor: extracted value ([j6_0_1_] : [INTEGER]) - [7]
2020-11-25 20:40:16,592 TRACE  [main] BasicExtractor: extracted value ([problem_7_0_1_] : [BIGINT]) - [4]
2020-11-25 20:40:16,593 TRACE  [main] BasicExtractor: extracted value ([problem_7_0_0_] : [BIGINT]) - [4]
2020-11-25 20:40:16,593 TRACE  [main] BasicExtractor: extracted value ([id1_0_0_] : [BIGINT]) - [25]
2020-11-25 20:40:16,594 TRACE  [main] BasicExtractor: extracted value ([id1_0_1_] : [BIGINT]) - [26]
2020-11-25 20:40:16,595 TRACE  [main] BasicExtractor: extracted value ([binary_v2_0_1_] : [BLOB]) - [null]
2020-11-25 20:40:16,595 TRACE  [main] BasicExtractor: extracted value ([float_va3_0_1_] : [DOUBLE]) - [8.0]
2020-11-25 20:40:16,596 TRACE  [main] BasicExtractor: extracted value ([i4_0_1_] : [INTEGER]) - [0]
2020-11-25 20:40:16,596 TRACE  [main] BasicExtractor: extracted value ([is_condi5_0_1_] : [BOOLEAN]) - [true]
2020-11-25 20:40:16,596 TRACE  [main] BasicExtractor: extracted value ([j6_0_1_] : [INTEGER]) - [8]
2020-11-25 20:40:16,597 TRACE  [main] BasicExtractor: extracted value ([problem_7_0_1_] : [BIGINT]) - [4]
2020-11-25 20:40:16,598 TRACE  [main] BasicExtractor: extracted value ([problem_7_0_0_] : [BIGINT]) - [4]
2020-11-25 20:40:16,598 TRACE  [main] BasicExtractor: extracted value ([id1_0_0_] : [BIGINT]) - [26]
2020-11-25 20:40:16,599 TRACE  [main] BasicExtractor: extracted value ([id1_0_1_] : [BIGINT]) - [27]
2020-11-25 20:40:16,600 TRACE  [main] BasicExtractor: extracted value ([binary_v2_0_1_] : [BLOB]) - [null]
2020-11-25 20:40:16,600 TRACE  [main] BasicExtractor: extracted value ([float_va3_0_1_] : [DOUBLE]) - [9.0]
2020-11-25 20:40:16,601 TRACE  [main] BasicExtractor: extracted value ([i4_0_1_] : [INTEGER]) - [0]
2020-11-25 20:40:16,601 TRACE  [main] BasicExtractor: extracted value ([is_condi5_0_1_] : [BOOLEAN]) - [true]
2020-11-25 20:40:16,601 TRACE  [main] BasicExtractor: extracted value ([j6_0_1_] : [INTEGER]) - [9]
2020-11-25 20:40:16,602 TRACE  [main] BasicExtractor: extracted value ([problem_7_0_1_] : [BIGINT]) - [4]
2020-11-25 20:40:16,602 TRACE  [main] BasicExtractor: extracted value ([problem_7_0_0_] : [BIGINT]) - [4]
2020-11-25 20:40:16,602 TRACE  [main] BasicExtractor: extracted value ([id1_0_0_] : [BIGINT]) - [27]
2020-11-25 20:40:16,608 TRACE  [main] BasicBinder: binding parameter [1] as [BIGINT] - [4]
2020-11-25 20:40:16,610 TRACE  [main] BasicBinder: binding parameter [1] as [BIGINT] - [3]
2020-11-25 20:40:16,611 TRACE  [main] BasicExtractor: extracted value ([id1_0_1_] : [BIGINT]) - [12]
2020-11-25 20:40:16,612 TRACE  [main] BasicExtractor: extracted value ([binary_v2_0_1_] : [BLOB]) - [null]
2020-11-25 20:40:16,613 TRACE  [main] BasicExtractor: extracted value ([float_va3_0_1_] : [DOUBLE]) - [1.0]
2020-11-25 20:40:16,613 TRACE  [main] BasicExtractor: extracted value ([i4_0_1_] : [INTEGER]) - [0]
2020-11-25 20:40:16,613 TRACE  [main] BasicExtractor: extracted value ([is_condi5_0_1_] : [BOOLEAN]) - [true]
2020-11-25 20:40:16,614 TRACE  [main] BasicExtractor: extracted value ([j6_0_1_] : [INTEGER]) - [0]
2020-11-25 20:40:16,614 TRACE  [main] BasicExtractor: extracted value ([problem_7_0_1_] : [BIGINT]) - [3]
2020-11-25 20:40:16,614 TRACE  [main] BasicExtractor: extracted value ([problem_7_0_0_] : [BIGINT]) - [3]
2020-11-25 20:40:16,615 TRACE  [main] BasicExtractor: extracted value ([id1_0_0_] : [BIGINT]) - [12]
2020-11-25 20:40:16,616 TRACE  [main] BasicExtractor: extracted value ([id1_0_1_] : [BIGINT]) - [13]
2020-11-25 20:40:16,616 TRACE  [main] BasicExtractor: extracted value ([binary_v2_0_1_] : [BLOB]) - [null]
2020-11-25 20:40:16,616 TRACE  [main] BasicExtractor: extracted value ([float_va3_0_1_] : [DOUBLE]) - [2.718281828459045]
2020-11-25 20:40:16,617 TRACE  [main] BasicExtractor: extracted value ([i4_0_1_] : [INTEGER]) - [0]
2020-11-25 20:40:16,617 TRACE  [main] BasicExtractor: extracted value ([is_condi5_0_1_] : [BOOLEAN]) - [true]
2020-11-25 20:40:16,617 TRACE  [main] BasicExtractor: extracted value ([j6_0_1_] : [INTEGER]) - [1]
2020-11-25 20:40:16,618 TRACE  [main] BasicExtractor: extracted value ([problem_7_0_1_] : [BIGINT]) - [3]
2020-11-25 20:40:16,618 TRACE  [main] BasicExtractor: extracted value ([problem_7_0_0_] : [BIGINT]) - [3]
2020-11-25 20:40:16,618 TRACE  [main] BasicExtractor: extracted value ([id1_0_0_] : [BIGINT]) - [13]
2020-11-25 20:40:16,619 TRACE  [main] BasicExtractor: extracted value ([id1_0_1_] : [BIGINT]) - [14]
2020-11-25 20:40:16,619 TRACE  [main] BasicExtractor: extracted value ([binary_v2_0_1_] : [BLOB]) - [null]
2020-11-25 20:40:16,620 TRACE  [main] BasicExtractor: extracted value ([float_va3_0_1_] : [DOUBLE]) - [7.38905609893065]
2020-11-25 20:40:16,620 TRACE  [main] BasicExtractor: extracted value ([i4_0_1_] : [INTEGER]) - [0]
2020-11-25 20:40:16,620 TRACE  [main] BasicExtractor: extracted value ([is_condi5_0_1_] : [BOOLEAN]) - [true]
2020-11-25 20:40:16,621 TRACE  [main] BasicExtractor: extracted value ([j6_0_1_] : [INTEGER]) - [2]
2020-11-25 20:40:16,621 TRACE  [main] BasicExtractor: extracted value ([problem_7_0_1_] : [BIGINT]) - [3]
2020-11-25 20:40:16,621 TRACE  [main] BasicExtractor: extracted value ([problem_7_0_0_] : [BIGINT]) - [3]
2020-11-25 20:40:16,622 TRACE  [main] BasicExtractor: extracted value ([id1_0_0_] : [BIGINT]) - [14]
2020-11-25 20:40:16,623 TRACE  [main] BasicExtractor: extracted value ([id1_0_1_] : [BIGINT]) - [15]
2020-11-25 20:40:16,623 TRACE  [main] BasicExtractor: extracted value ([binary_v2_0_1_] : [BLOB]) - [null]
2020-11-25 20:40:16,624 TRACE  [main] BasicExtractor: extracted value ([float_va3_0_1_] : [DOUBLE]) - [20.085536923187668]
2020-11-25 20:40:16,624 TRACE  [main] BasicExtractor: extracted value ([i4_0_1_] : [INTEGER]) - [0]
2020-11-25 20:40:16,624 TRACE  [main] BasicExtractor: extracted value ([is_condi5_0_1_] : [BOOLEAN]) - [true]
2020-11-25 20:40:16,625 TRACE  [main] BasicExtractor: extracted value ([j6_0_1_] : [INTEGER]) - [3]
2020-11-25 20:40:16,625 TRACE  [main] BasicExtractor: extracted value ([problem_7_0_1_] : [BIGINT]) - [3]
2020-11-25 20:40:16,625 TRACE  [main] BasicExtractor: extracted value ([problem_7_0_0_] : [BIGINT]) - [3]
2020-11-25 20:40:16,626 TRACE  [main] BasicExtractor: extracted value ([id1_0_0_] : [BIGINT]) - [15]
2020-11-25 20:40:16,627 TRACE  [main] BasicExtractor: extracted value ([id1_0_1_] : [BIGINT]) - [16]
2020-11-25 20:40:16,627 TRACE  [main] BasicExtractor: extracted value ([binary_v2_0_1_] : [BLOB]) - [null]
2020-11-25 20:40:16,628 TRACE  [main] BasicExtractor: extracted value ([float_va3_0_1_] : [DOUBLE]) - [54.598150033144236]
2020-11-25 20:40:16,629 TRACE  [main] BasicExtractor: extracted value ([i4_0_1_] : [INTEGER]) - [0]
2020-11-25 20:40:16,629 TRACE  [main] BasicExtractor: extracted value ([is_condi5_0_1_] : [BOOLEAN]) - [true]
2020-11-25 20:40:16,629 TRACE  [main] BasicExtractor: extracted value ([j6_0_1_] : [INTEGER]) - [4]
2020-11-25 20:40:16,630 TRACE  [main] BasicExtractor: extracted value ([problem_7_0_1_] : [BIGINT]) - [3]
2020-11-25 20:40:16,630 TRACE  [main] BasicExtractor: extracted value ([problem_7_0_0_] : [BIGINT]) - [3]
2020-11-25 20:40:16,630 TRACE  [main] BasicExtractor: extracted value ([id1_0_0_] : [BIGINT]) - [16]
2020-11-25 20:40:16,631 TRACE  [main] BasicExtractor: extracted value ([id1_0_1_] : [BIGINT]) - [17]
2020-11-25 20:40:16,631 TRACE  [main] BasicExtractor: extracted value ([binary_v2_0_1_] : [BLOB]) - [null]
2020-11-25 20:40:16,632 TRACE  [main] BasicExtractor: extracted value ([float_va3_0_1_] : [DOUBLE]) - [148.4131591025766]
2020-11-25 20:40:16,632 TRACE  [main] BasicExtractor: extracted value ([i4_0_1_] : [INTEGER]) - [0]
2020-11-25 20:40:16,633 TRACE  [main] BasicExtractor: extracted value ([is_condi5_0_1_] : [BOOLEAN]) - [true]
2020-11-25 20:40:16,633 TRACE  [main] BasicExtractor: extracted value ([j6_0_1_] : [INTEGER]) - [5]
2020-11-25 20:40:16,633 TRACE  [main] BasicExtractor: extracted value ([problem_7_0_1_] : [BIGINT]) - [3]
2020-11-25 20:40:16,634 TRACE  [main] BasicExtractor: extracted value ([problem_7_0_0_] : [BIGINT]) - [3]
2020-11-25 20:40:16,634 TRACE  [main] BasicExtractor: extracted value ([id1_0_0_] : [BIGINT]) - [17]
2020-11-25 20:40:16,636 TRACE  [main] BasicBinder: binding parameter [1] as [BIGINT] - [3]
2020-11-25 20:40:16,639 TRACE  [main] BasicBinder: binding parameter [1] as [BIGINT] - [2]
2020-11-25 20:40:16,640 TRACE  [main] BasicExtractor: extracted value ([id1_0_1_] : [BIGINT]) - [6]
2020-11-25 20:40:16,641 TRACE  [main] BasicExtractor: extracted value ([binary_v2_0_1_] : [BLOB]) - [null]
2020-11-25 20:40:16,641 TRACE  [main] BasicExtractor: extracted value ([float_va3_0_1_] : [DOUBLE]) - [1.01]
2020-11-25 20:40:16,641 TRACE  [main] BasicExtractor: extracted value ([i4_0_1_] : [INTEGER]) - [0]
2020-11-25 20:40:16,642 TRACE  [main] BasicExtractor: extracted value ([is_condi5_0_1_] : [BOOLEAN]) - [true]
2020-11-25 20:40:16,643 TRACE  [main] BasicExtractor: extracted value ([j6_0_1_] : [INTEGER]) - [0]
2020-11-25 20:40:16,643 TRACE  [main] BasicExtractor: extracted value ([problem_7_0_1_] : [BIGINT]) - [2]
2020-11-25 20:40:16,643 TRACE  [main] BasicExtractor: extracted value ([problem_7_0_0_] : [BIGINT]) - [2]
2020-11-25 20:40:16,643 TRACE  [main] BasicExtractor: extracted value ([id1_0_0_] : [BIGINT]) - [6]
2020-11-25 20:40:16,644 TRACE  [main] BasicExtractor: extracted value ([id1_0_1_] : [BIGINT]) - [7]
2020-11-25 20:40:16,644 TRACE  [main] BasicExtractor: extracted value ([binary_v2_0_1_] : [BLOB]) - [null]
2020-11-25 20:40:16,645 TRACE  [main] BasicExtractor: extracted value ([float_va3_0_1_] : [DOUBLE]) - [2.718281828459045]
2020-11-25 20:40:16,646 TRACE  [main] BasicExtractor: extracted value ([i4_0_1_] : [INTEGER]) - [0]
2020-11-25 20:40:16,646 TRACE  [main] BasicExtractor: extracted value ([is_condi5_0_1_] : [BOOLEAN]) - [true]
2020-11-25 20:40:16,647 TRACE  [main] BasicExtractor: extracted value ([j6_0_1_] : [INTEGER]) - [1]
2020-11-25 20:40:16,647 TRACE  [main] BasicExtractor: extracted value ([problem_7_0_1_] : [BIGINT]) - [2]
2020-11-25 20:40:16,648 TRACE  [main] BasicExtractor: extracted value ([problem_7_0_0_] : [BIGINT]) - [2]
2020-11-25 20:40:16,648 TRACE  [main] BasicExtractor: extracted value ([id1_0_0_] : [BIGINT]) - [7]
2020-11-25 20:40:16,649 TRACE  [main] BasicExtractor: extracted value ([id1_0_1_] : [BIGINT]) - [8]
2020-11-25 20:40:16,649 TRACE  [main] BasicExtractor: extracted value ([binary_v2_0_1_] : [BLOB]) - [null]
2020-11-25 20:40:16,649 TRACE  [main] BasicExtractor: extracted value ([float_va3_0_1_] : [DOUBLE]) - [7.38905609893065]
2020-11-25 20:40:16,650 TRACE  [main] BasicExtractor: extracted value ([i4_0_1_] : [INTEGER]) - [0]
2020-11-25 20:40:16,651 TRACE  [main] BasicExtractor: extracted value ([is_condi5_0_1_] : [BOOLEAN]) - [true]
2020-11-25 20:40:16,651 TRACE  [main] BasicExtractor: extracted value ([j6_0_1_] : [INTEGER]) - [2]
2020-11-25 20:40:16,651 TRACE  [main] BasicExtractor: extracted value ([problem_7_0_1_] : [BIGINT]) - [2]
2020-11-25 20:40:16,652 TRACE  [main] BasicExtractor: extracted value ([problem_7_0_0_] : [BIGINT]) - [2]
2020-11-25 20:40:16,652 TRACE  [main] BasicExtractor: extracted value ([id1_0_0_] : [BIGINT]) - [8]
2020-11-25 20:40:16,653 TRACE  [main] BasicExtractor: extracted value ([id1_0_1_] : [BIGINT]) - [9]
2020-11-25 20:40:16,654 TRACE  [main] BasicExtractor: extracted value ([binary_v2_0_1_] : [BLOB]) - [null]
2020-11-25 20:40:16,654 TRACE  [main] BasicExtractor: extracted value ([float_va3_0_1_] : [DOUBLE]) - [20.085536923187668]
2020-11-25 20:40:16,654 TRACE  [main] BasicExtractor: extracted value ([i4_0_1_] : [INTEGER]) - [0]
2020-11-25 20:40:16,655 TRACE  [main] BasicExtractor: extracted value ([is_condi5_0_1_] : [BOOLEAN]) - [true]
2020-11-25 20:40:16,655 TRACE  [main] BasicExtractor: extracted value ([j6_0_1_] : [INTEGER]) - [3]
2020-11-25 20:40:16,656 TRACE  [main] BasicExtractor: extracted value ([problem_7_0_1_] : [BIGINT]) - [2]
2020-11-25 20:40:16,656 TRACE  [main] BasicExtractor: extracted value ([problem_7_0_0_] : [BIGINT]) - [2]
2020-11-25 20:40:16,662 TRACE  [main] BasicExtractor: extracted value ([id1_0_0_] : [BIGINT]) - [9]
2020-11-25 20:40:16,662 TRACE  [main] BasicExtractor: extracted value ([id1_0_1_] : [BIGINT]) - [10]
2020-11-25 20:40:16,662 TRACE  [main] BasicExtractor: extracted value ([binary_v2_0_1_] : [BLOB]) - [null]
2020-11-25 20:40:16,662 TRACE  [main] BasicExtractor: extracted value ([float_va3_0_1_] : [DOUBLE]) - [54.598150033144236]
2020-11-25 20:40:16,663 TRACE  [main] BasicExtractor: extracted value ([i4_0_1_] : [INTEGER]) - [0]
2020-11-25 20:40:16,663 TRACE  [main] BasicExtractor: extracted value ([is_condi5_0_1_] : [BOOLEAN]) - [true]
2020-11-25 20:40:16,663 TRACE  [main] BasicExtractor: extracted value ([j6_0_1_] : [INTEGER]) - [4]
2020-11-25 20:40:16,663 TRACE  [main] BasicExtractor: extracted value ([problem_7_0_1_] : [BIGINT]) - [2]
2020-11-25 20:40:16,663 TRACE  [main] BasicExtractor: extracted value ([problem_7_0_0_] : [BIGINT]) - [2]
2020-11-25 20:40:16,663 TRACE  [main] BasicExtractor: extracted value ([id1_0_0_] : [BIGINT]) - [10]
2020-11-25 20:40:16,663 TRACE  [main] BasicExtractor: extracted value ([id1_0_1_] : [BIGINT]) - [11]
2020-11-25 20:40:16,663 TRACE  [main] BasicExtractor: extracted value ([binary_v2_0_1_] : [BLOB]) - [null]
2020-11-25 20:40:16,663 TRACE  [main] BasicExtractor: extracted value ([float_va3_0_1_] : [DOUBLE]) - [148.4131591025766]
2020-11-25 20:40:16,664 TRACE  [main] BasicExtractor: extracted value ([i4_0_1_] : [INTEGER]) - [0]
2020-11-25 20:40:16,664 TRACE  [main] BasicExtractor: extracted value ([is_condi5_0_1_] : [BOOLEAN]) - [true]
2020-11-25 20:40:16,664 TRACE  [main] BasicExtractor: extracted value ([j6_0_1_] : [INTEGER]) - [5]
2020-11-25 20:40:16,664 TRACE  [main] BasicExtractor: extracted value ([problem_7_0_1_] : [BIGINT]) - [2]
2020-11-25 20:40:16,664 TRACE  [main] BasicExtractor: extracted value ([problem_7_0_0_] : [BIGINT]) - [2]
2020-11-25 20:40:16,664 TRACE  [main] BasicExtractor: extracted value ([id1_0_0_] : [BIGINT]) - [11]
2020-11-25 20:40:16,666 TRACE  [main] BasicBinder: binding parameter [1] as [BIGINT] - [2]
2020-11-25 20:40:16,667 TRACE  [main] BasicBinder: binding parameter [1] as [BIGINT] - [1]
2020-11-25 20:40:16,668 TRACE  [main] BasicExtractor: extracted value ([id1_0_1_] : [BIGINT]) - [1]
2020-11-25 20:40:16,668 TRACE  [main] BasicExtractor: extracted value ([binary_v2_0_1_] : [BLOB]) - [null]
2020-11-25 20:40:16,669 TRACE  [main] BasicExtractor: extracted value ([float_va3_0_1_] : [DOUBLE]) - [1.0]
2020-11-25 20:40:16,669 TRACE  [main] BasicExtractor: extracted value ([i4_0_1_] : [INTEGER]) - [0]
2020-11-25 20:40:16,669 TRACE  [main] BasicExtractor: extracted value ([is_condi5_0_1_] : [BOOLEAN]) - [true]
2020-11-25 20:40:16,669 TRACE  [main] BasicExtractor: extracted value ([j6_0_1_] : [INTEGER]) - [0]
2020-11-25 20:40:16,669 TRACE  [main] BasicExtractor: extracted value ([problem_7_0_1_] : [BIGINT]) - [1]
2020-11-25 20:40:16,669 TRACE  [main] BasicExtractor: extracted value ([problem_7_0_0_] : [BIGINT]) - [1]
2020-11-25 20:40:16,670 TRACE  [main] BasicExtractor: extracted value ([id1_0_0_] : [BIGINT]) - [1]
2020-11-25 20:40:16,670 TRACE  [main] BasicExtractor: extracted value ([id1_0_1_] : [BIGINT]) - [2]
2020-11-25 20:40:16,670 TRACE  [main] BasicExtractor: extracted value ([binary_v2_0_1_] : [BLOB]) - [null]
2020-11-25 20:40:16,670 TRACE  [main] BasicExtractor: extracted value ([float_va3_0_1_] : [DOUBLE]) - [2.0]
2020-11-25 20:40:16,671 TRACE  [main] BasicExtractor: extracted value ([i4_0_1_] : [INTEGER]) - [0]
2020-11-25 20:40:16,671 TRACE  [main] BasicExtractor: extracted value ([is_condi5_0_1_] : [BOOLEAN]) - [true]
2020-11-25 20:40:16,671 TRACE  [main] BasicExtractor: extracted value ([j6_0_1_] : [INTEGER]) - [1]
2020-11-25 20:40:16,671 TRACE  [main] BasicExtractor: extracted value ([problem_7_0_1_] : [BIGINT]) - [1]
2020-11-25 20:40:16,671 TRACE  [main] BasicExtractor: extracted value ([problem_7_0_0_] : [BIGINT]) - [1]
2020-11-25 20:40:16,672 TRACE  [main] BasicExtractor: extracted value ([id1_0_0_] : [BIGINT]) - [2]
2020-11-25 20:40:16,672 TRACE  [main] BasicExtractor: extracted value ([id1_0_1_] : [BIGINT]) - [3]
2020-11-25 20:40:16,672 TRACE  [main] BasicExtractor: extracted value ([binary_v2_0_1_] : [BLOB]) - [null]
2020-11-25 20:40:16,672 TRACE  [main] BasicExtractor: extracted value ([float_va3_0_1_] : [DOUBLE]) - [1.0]
2020-11-25 20:40:16,673 TRACE  [main] BasicExtractor: extracted value ([i4_0_1_] : [INTEGER]) - [0]
2020-11-25 20:40:16,673 TRACE  [main] BasicExtractor: extracted value ([is_condi5_0_1_] : [BOOLEAN]) - [true]
2020-11-25 20:40:16,673 TRACE  [main] BasicExtractor: extracted value ([j6_0_1_] : [INTEGER]) - [2]
2020-11-25 20:40:16,673 TRACE  [main] BasicExtractor: extracted value ([problem_7_0_1_] : [BIGINT]) - [1]
2020-11-25 20:40:16,673 TRACE  [main] BasicExtractor: extracted value ([problem_7_0_0_] : [BIGINT]) - [1]
2020-11-25 20:40:16,674 TRACE  [main] BasicExtractor: extracted value ([id1_0_0_] : [BIGINT]) - [3]
2020-11-25 20:40:16,674 TRACE  [main] BasicExtractor: extracted value ([id1_0_1_] : [BIGINT]) - [4]
2020-11-25 20:40:16,674 TRACE  [main] BasicExtractor: extracted value ([binary_v2_0_1_] : [BLOB]) - [null]
2020-11-25 20:40:16,674 TRACE  [main] BasicExtractor: extracted value ([float_va3_0_1_] : [DOUBLE]) - [1.0]
2020-11-25 20:40:16,674 TRACE  [main] BasicExtractor: extracted value ([i4_0_1_] : [INTEGER]) - [0]
2020-11-25 20:40:16,675 TRACE  [main] BasicExtractor: extracted value ([is_condi5_0_1_] : [BOOLEAN]) - [false]
2020-11-25 20:40:16,675 TRACE  [main] BasicExtractor: extracted value ([j6_0_1_] : [INTEGER]) - [0]
2020-11-25 20:40:16,675 TRACE  [main] BasicExtractor: extracted value ([problem_7_0_1_] : [BIGINT]) - [1]
2020-11-25 20:40:16,675 TRACE  [main] BasicExtractor: extracted value ([problem_7_0_0_] : [BIGINT]) - [1]
2020-11-25 20:40:16,675 TRACE  [main] BasicExtractor: extracted value ([id1_0_0_] : [BIGINT]) - [4]
2020-11-25 20:40:16,676 TRACE  [main] BasicExtractor: extracted value ([id1_0_1_] : [BIGINT]) - [5]
2020-11-25 20:40:16,676 TRACE  [main] BasicExtractor: extracted value ([binary_v2_0_1_] : [BLOB]) - [null]
2020-11-25 20:40:16,676 TRACE  [main] BasicExtractor: extracted value ([float_va3_0_1_] : [DOUBLE]) - [1.0]
2020-11-25 20:40:16,677 TRACE  [main] BasicExtractor: extracted value ([i4_0_1_] : [INTEGER]) - [0]
2020-11-25 20:40:16,677 TRACE  [main] BasicExtractor: extracted value ([is_condi5_0_1_] : [BOOLEAN]) - [false]
2020-11-25 20:40:16,677 TRACE  [main] BasicExtractor: extracted value ([j6_0_1_] : [INTEGER]) - [1]
2020-11-25 20:40:16,678 TRACE  [main] BasicExtractor: extracted value ([problem_7_0_1_] : [BIGINT]) - [1]
2020-11-25 20:40:16,678 TRACE  [main] BasicExtractor: extracted value ([problem_7_0_0_] : [BIGINT]) - [1]
2020-11-25 20:40:16,678 TRACE  [main] BasicExtractor: extracted value ([id1_0_0_] : [BIGINT]) - [5]
2020-11-25 20:40:16,679 TRACE  [main] BasicBinder: binding parameter [1] as [BIGINT] - [1]
2020-11-25 20:40:16,705 TRACE  [main] BasicBinder: binding parameter [1] as [BIGINT] - [7]
2020-11-25 20:40:16,705 TRACE  [main] BasicExtractor: extracted value ([id1_1_2_] : [BIGINT]) - [null]
2020-11-25 20:40:16,706 TRACE  [main] BasicExtractor: extracted value ([id1_0_4_] : [BIGINT]) - [null]
2020-11-25 20:40:16,706 TRACE  [main] BasicExtractor: extracted value ([descript2_1_0_] : [BLOB]) - [[112, 114, 111, 98, 108, 101, 109, 100, 101, 115, 99, 114, 105, 112, 116, 105, 111, 110]]
2020-11-25 20:40:16,706 TRACE  [main] BasicExtractor: extracted value ([is_solve3_1_0_] : [BOOLEAN]) - [true]
2020-11-25 20:40:16,706 TRACE  [main] BasicExtractor: extracted value ([kind4_1_0_] : [VARCHAR]) - [POLYNOMIAL]
2020-11-25 20:40:16,707 TRACE  [main] BasicExtractor: extracted value ([matrix_d5_1_0_] : [INTEGER]) - [1]
2020-11-25 20:40:16,707 TRACE  [main] BasicExtractor: extracted value ([parent_p7_1_0_] : [BIGINT]) - [null]
2020-11-25 20:40:16,707 TRACE  [main] BasicExtractor: extracted value ([problem_6_1_0_] : [INTEGER]) - [0]
2020-11-25 20:40:16,707 TRACE  [main] BasicExtractor: extracted value ([problem_7_0_3_] : [BIGINT]) - [null]
2020-11-25 20:40:16,707 TRACE  [main] BasicExtractor: extracted value ([parent_p7_1_1_] : [BIGINT]) - [null]
2020-11-25 20:40:16,707 TRACE  [main] CollectionType: Created collection wrapper: [com.sf.back.entities.Problem.matrixes#7]
2020-11-25 20:40:16,708 TRACE  [main] BasicBinder: binding parameter [1] as [BIGINT] - [7]
2020-11-25 20:40:16,709 TRACE  [main] BasicExtractor: extracted value ([id1_0_1_] : [BIGINT]) - [40]
2020-11-25 20:40:16,709 TRACE  [main] BasicExtractor: extracted value ([binary_v2_0_1_] : [BLOB]) - [null]
2020-11-25 20:40:16,709 TRACE  [main] BasicExtractor: extracted value ([float_va3_0_1_] : [DOUBLE]) - [1.0]
2020-11-25 20:40:16,709 TRACE  [main] BasicExtractor: extracted value ([i4_0_1_] : [INTEGER]) - [0]
2020-11-25 20:40:16,709 TRACE  [main] BasicExtractor: extracted value ([is_condi5_0_1_] : [BOOLEAN]) - [true]
2020-11-25 20:40:16,709 TRACE  [main] BasicExtractor: extracted value ([j6_0_1_] : [INTEGER]) - [0]
2020-11-25 20:40:16,709 TRACE  [main] BasicExtractor: extracted value ([problem_7_0_1_] : [BIGINT]) - [7]
2020-11-25 20:40:16,709 TRACE  [main] BasicExtractor: extracted value ([problem_7_0_0_] : [BIGINT]) - [7]
2020-11-25 20:40:16,709 TRACE  [main] BasicExtractor: extracted value ([id1_0_0_] : [BIGINT]) - [40]
2020-11-25 20:40:16,710 TRACE  [main] BasicExtractor: extracted value ([id1_0_1_] : [BIGINT]) - [41]
2020-11-25 20:40:16,710 TRACE  [main] BasicExtractor: extracted value ([binary_v2_0_1_] : [BLOB]) - [null]
2020-11-25 20:40:16,711 TRACE  [main] BasicExtractor: extracted value ([float_va3_0_1_] : [DOUBLE]) - [-3.0]
2020-11-25 20:40:16,711 TRACE  [main] BasicExtractor: extracted value ([i4_0_1_] : [INTEGER]) - [0]
2020-11-25 20:40:16,711 TRACE  [main] BasicExtractor: extracted value ([is_condi5_0_1_] : [BOOLEAN]) - [true]
2020-11-25 20:40:16,711 TRACE  [main] BasicExtractor: extracted value ([j6_0_1_] : [INTEGER]) - [1]
2020-11-25 20:40:16,711 TRACE  [main] BasicExtractor: extracted value ([problem_7_0_1_] : [BIGINT]) - [7]
2020-11-25 20:40:16,711 TRACE  [main] BasicExtractor: extracted value ([problem_7_0_0_] : [BIGINT]) - [7]
2020-11-25 20:40:16,712 TRACE  [main] BasicExtractor: extracted value ([id1_0_0_] : [BIGINT]) - [41]
2020-11-25 20:40:16,712 TRACE  [main] BasicExtractor: extracted value ([id1_0_1_] : [BIGINT]) - [42]
2020-11-25 20:40:16,712 TRACE  [main] BasicExtractor: extracted value ([binary_v2_0_1_] : [BLOB]) - [null]
2020-11-25 20:40:16,712 TRACE  [main] BasicExtractor: extracted value ([float_va3_0_1_] : [DOUBLE]) - [2.0]
2020-11-25 20:40:16,713 TRACE  [main] BasicExtractor: extracted value ([i4_0_1_] : [INTEGER]) - [0]
2020-11-25 20:40:16,713 TRACE  [main] BasicExtractor: extracted value ([is_condi5_0_1_] : [BOOLEAN]) - [true]
2020-11-25 20:40:16,713 TRACE  [main] BasicExtractor: extracted value ([j6_0_1_] : [INTEGER]) - [2]
2020-11-25 20:40:16,713 TRACE  [main] BasicExtractor: extracted value ([problem_7_0_1_] : [BIGINT]) - [7]
2020-11-25 20:40:16,713 TRACE  [main] BasicExtractor: extracted value ([problem_7_0_0_] : [BIGINT]) - [7]
2020-11-25 20:40:16,713 TRACE  [main] BasicExtractor: extracted value ([id1_0_0_] : [BIGINT]) - [42]
2020-11-25 20:40:16,713 TRACE  [main] BasicExtractor: extracted value ([id1_0_1_] : [BIGINT]) - [43]
2020-11-25 20:40:16,713 TRACE  [main] BasicExtractor: extracted value ([binary_v2_0_1_] : [BLOB]) - [null]
2020-11-25 20:40:16,714 TRACE  [main] BasicExtractor: extracted value ([float_va3_0_1_] : [DOUBLE]) - [1.0]
2020-11-25 20:40:16,714 TRACE  [main] BasicExtractor: extracted value ([i4_0_1_] : [INTEGER]) - [0]
2020-11-25 20:40:16,714 TRACE  [main] BasicExtractor: extracted value ([is_condi5_0_1_] : [BOOLEAN]) - [false]
2020-11-25 20:40:16,714 TRACE  [main] BasicExtractor: extracted value ([j6_0_1_] : [INTEGER]) - [0]
2020-11-25 20:40:16,714 TRACE  [main] BasicExtractor: extracted value ([problem_7_0_1_] : [BIGINT]) - [7]
2020-11-25 20:40:16,715 TRACE  [main] BasicExtractor: extracted value ([problem_7_0_0_] : [BIGINT]) - [7]
2020-11-25 20:40:16,716 TRACE  [main] BasicExtractor: extracted value ([id1_0_0_] : [BIGINT]) - [43]
2020-11-25 20:40:16,716 TRACE  [main] BasicExtractor: extracted value ([id1_0_1_] : [BIGINT]) - [44]
2020-11-25 20:40:16,717 TRACE  [main] BasicExtractor: extracted value ([binary_v2_0_1_] : [BLOB]) - [null]
2020-11-25 20:40:16,717 TRACE  [main] BasicExtractor: extracted value ([float_va3_0_1_] : [DOUBLE]) - [2.0]
2020-11-25 20:40:16,717 TRACE  [main] BasicExtractor: extracted value ([i4_0_1_] : [INTEGER]) - [0]
2020-11-25 20:40:16,717 TRACE  [main] BasicExtractor: extracted value ([is_condi5_0_1_] : [BOOLEAN]) - [false]
2020-11-25 20:40:16,717 TRACE  [main] BasicExtractor: extracted value ([j6_0_1_] : [INTEGER]) - [1]
2020-11-25 20:40:16,717 TRACE  [main] BasicExtractor: extracted value ([problem_7_0_1_] : [BIGINT]) - [7]
2020-11-25 20:40:16,717 TRACE  [main] BasicExtractor: extracted value ([problem_7_0_0_] : [BIGINT]) - [7]
2020-11-25 20:40:16,718 TRACE  [main] BasicExtractor: extracted value ([id1_0_0_] : [BIGINT]) - [44]
2020-11-25 20:40:16,787 TRACE  [main] BasicBinder: binding parameter [1] as [BOOLEAN] - [false]
2020-11-25 20:40:16,788 TRACE  [main] BasicBinder: binding parameter [2] as [BIGINT] - [7]
2020-11-25 20:40:16,788 TRACE  [main] BasicExtractor: extracted value ([id1_0_] : [BIGINT]) - [43]
2020-11-25 20:40:16,788 TRACE  [main] BasicExtractor: extracted value ([binary_v2_0_] : [BLOB]) - [null]
2020-11-25 20:40:16,789 TRACE  [main] BasicExtractor: extracted value ([float_va3_0_] : [DOUBLE]) - [1.0]
2020-11-25 20:40:16,789 TRACE  [main] BasicExtractor: extracted value ([i4_0_] : [INTEGER]) - [0]
2020-11-25 20:40:16,789 TRACE  [main] BasicExtractor: extracted value ([is_condi5_0_] : [BOOLEAN]) - [false]
2020-11-25 20:40:16,789 TRACE  [main] BasicExtractor: extracted value ([j6_0_] : [INTEGER]) - [0]
2020-11-25 20:40:16,790 TRACE  [main] BasicExtractor: extracted value ([problem_7_0_] : [BIGINT]) - [7]
2020-11-25 20:40:16,790 TRACE  [main] BasicExtractor: extracted value ([id1_0_] : [BIGINT]) - [44]
2020-11-25 20:40:16,790 TRACE  [main] BasicExtractor: extracted value ([binary_v2_0_] : [BLOB]) - [null]
2020-11-25 20:40:16,791 TRACE  [main] BasicExtractor: extracted value ([float_va3_0_] : [DOUBLE]) - [2.0]
2020-11-25 20:40:16,791 TRACE  [main] BasicExtractor: extracted value ([i4_0_] : [INTEGER]) - [0]
2020-11-25 20:40:16,791 TRACE  [main] BasicExtractor: extracted value ([is_condi5_0_] : [BOOLEAN]) - [false]
2020-11-25 20:40:16,791 TRACE  [main] BasicExtractor: extracted value ([j6_0_] : [INTEGER]) - [1]
2020-11-25 20:40:16,791 TRACE  [main] BasicExtractor: extracted value ([problem_7_0_] : [BIGINT]) - [7]
2020-11-25 20:40:16,792 TRACE  [main] BasicBinder: binding parameter [1] as [BIGINT] - [7]
2020-11-25 20:40:16,793 TRACE  [main] BasicExtractor: extracted value ([id1_1_2_] : [BIGINT]) - [null]
2020-11-25 20:40:16,794 TRACE  [main] BasicExtractor: extracted value ([id1_0_4_] : [BIGINT]) - [null]
2020-11-25 20:40:16,795 TRACE  [main] BasicExtractor: extracted value ([descript2_1_0_] : [BLOB]) - [[112, 114, 111, 98, 108, 101, 109, 100, 101, 115, 99, 114, 105, 112, 116, 105, 111, 110]]
2020-11-25 20:40:16,795 TRACE  [main] BasicExtractor: extracted value ([is_solve3_1_0_] : [BOOLEAN]) - [true]
2020-11-25 20:40:16,795 TRACE  [main] BasicExtractor: extracted value ([kind4_1_0_] : [VARCHAR]) - [POLYNOMIAL]
2020-11-25 20:40:16,795 TRACE  [main] BasicExtractor: extracted value ([matrix_d5_1_0_] : [INTEGER]) - [1]
2020-11-25 20:40:16,795 TRACE  [main] BasicExtractor: extracted value ([parent_p7_1_0_] : [BIGINT]) - [null]
2020-11-25 20:40:16,795 TRACE  [main] BasicExtractor: extracted value ([problem_6_1_0_] : [INTEGER]) - [0]
2020-11-25 20:40:16,796 TRACE  [main] BasicExtractor: extracted value ([problem_7_0_3_] : [BIGINT]) - [null]
2020-11-25 20:40:16,796 TRACE  [main] BasicExtractor: extracted value ([parent_p7_1_1_] : [BIGINT]) - [null]
2020-11-25 20:40:16,796 TRACE  [main] CollectionType: Created collection wrapper: [com.sf.back.entities.Problem.matrixes#7]
2020-11-25 20:40:16,797 TRACE  [main] BasicBinder: binding parameter [1] as [BIGINT] - [7]
2020-11-25 20:40:16,798 TRACE  [main] BasicExtractor: extracted value ([id1_0_1_] : [BIGINT]) - [40]
2020-11-25 20:40:16,799 TRACE  [main] BasicExtractor: extracted value ([binary_v2_0_1_] : [BLOB]) - [null]
2020-11-25 20:40:16,799 TRACE  [main] BasicExtractor: extracted value ([float_va3_0_1_] : [DOUBLE]) - [1.0]
2020-11-25 20:40:16,799 TRACE  [main] BasicExtractor: extracted value ([i4_0_1_] : [INTEGER]) - [0]
2020-11-25 20:40:16,799 TRACE  [main] BasicExtractor: extracted value ([is_condi5_0_1_] : [BOOLEAN]) - [true]
2020-11-25 20:40:16,800 TRACE  [main] BasicExtractor: extracted value ([j6_0_1_] : [INTEGER]) - [0]
2020-11-25 20:40:16,800 TRACE  [main] BasicExtractor: extracted value ([problem_7_0_1_] : [BIGINT]) - [7]
2020-11-25 20:40:16,800 TRACE  [main] BasicExtractor: extracted value ([problem_7_0_0_] : [BIGINT]) - [7]
2020-11-25 20:40:16,800 TRACE  [main] BasicExtractor: extracted value ([id1_0_0_] : [BIGINT]) - [40]
2020-11-25 20:40:16,800 TRACE  [main] BasicExtractor: extracted value ([id1_0_1_] : [BIGINT]) - [41]
2020-11-25 20:40:16,800 TRACE  [main] BasicExtractor: extracted value ([binary_v2_0_1_] : [BLOB]) - [null]
2020-11-25 20:40:16,801 TRACE  [main] BasicExtractor: extracted value ([float_va3_0_1_] : [DOUBLE]) - [-3.0]
2020-11-25 20:40:16,801 TRACE  [main] BasicExtractor: extracted value ([i4_0_1_] : [INTEGER]) - [0]
2020-11-25 20:40:16,801 TRACE  [main] BasicExtractor: extracted value ([is_condi5_0_1_] : [BOOLEAN]) - [true]
2020-11-25 20:40:16,801 TRACE  [main] BasicExtractor: extracted value ([j6_0_1_] : [INTEGER]) - [1]
2020-11-25 20:40:16,801 TRACE  [main] BasicExtractor: extracted value ([problem_7_0_1_] : [BIGINT]) - [7]
2020-11-25 20:40:16,801 TRACE  [main] BasicExtractor: extracted value ([problem_7_0_0_] : [BIGINT]) - [7]
2020-11-25 20:40:16,801 TRACE  [main] BasicExtractor: extracted value ([id1_0_0_] : [BIGINT]) - [41]
2020-11-25 20:40:16,802 TRACE  [main] BasicExtractor: extracted value ([id1_0_1_] : [BIGINT]) - [42]
2020-11-25 20:40:16,802 TRACE  [main] BasicExtractor: extracted value ([binary_v2_0_1_] : [BLOB]) - [null]
2020-11-25 20:40:16,802 TRACE  [main] BasicExtractor: extracted value ([float_va3_0_1_] : [DOUBLE]) - [2.0]
2020-11-25 20:40:16,802 TRACE  [main] BasicExtractor: extracted value ([i4_0_1_] : [INTEGER]) - [0]
2020-11-25 20:40:16,802 TRACE  [main] BasicExtractor: extracted value ([is_condi5_0_1_] : [BOOLEAN]) - [true]
2020-11-25 20:40:16,803 TRACE  [main] BasicExtractor: extracted value ([j6_0_1_] : [INTEGER]) - [2]
2020-11-25 20:40:16,803 TRACE  [main] BasicExtractor: extracted value ([problem_7_0_1_] : [BIGINT]) - [7]
2020-11-25 20:40:16,803 TRACE  [main] BasicExtractor: extracted value ([problem_7_0_0_] : [BIGINT]) - [7]
2020-11-25 20:40:16,803 TRACE  [main] BasicExtractor: extracted value ([id1_0_0_] : [BIGINT]) - [42]
2020-11-25 20:40:16,803 TRACE  [main] BasicExtractor: extracted value ([id1_0_1_] : [BIGINT]) - [43]
2020-11-25 20:40:16,804 TRACE  [main] BasicExtractor: extracted value ([problem_7_0_0_] : [BIGINT]) - [7]
2020-11-25 20:40:16,804 TRACE  [main] BasicExtractor: extracted value ([id1_0_0_] : [BIGINT]) - [43]
2020-11-25 20:40:16,804 TRACE  [main] BasicExtractor: extracted value ([id1_0_1_] : [BIGINT]) - [44]
2020-11-25 20:40:16,804 TRACE  [main] BasicExtractor: extracted value ([problem_7_0_0_] : [BIGINT]) - [7]
2020-11-25 20:40:16,804 TRACE  [main] BasicExtractor: extracted value ([id1_0_0_] : [BIGINT]) - [44]
2020-11-25 20:40:16,821 TRACE  [main] BasicBinder: binding parameter [1] as [BIGINT] - [8]
2020-11-25 20:40:16,821 TRACE  [main] BasicExtractor: extracted value ([id1_1_2_] : [BIGINT]) - [null]
2020-11-25 20:40:16,822 TRACE  [main] BasicExtractor: extracted value ([id1_0_4_] : [BIGINT]) - [null]
2020-11-25 20:40:16,822 TRACE  [main] BasicExtractor: extracted value ([descript2_1_0_] : [BLOB]) - [[112, 114, 111, 98, 108, 101, 109, 100, 101, 115, 99, 114, 105, 112, 116, 105, 111, 110]]
2020-11-25 20:40:16,822 TRACE  [main] BasicExtractor: extracted value ([is_solve3_1_0_] : [BOOLEAN]) - [null]
2020-11-25 20:40:16,822 TRACE  [main] BasicExtractor: extracted value ([kind4_1_0_] : [VARCHAR]) - [POLYNOMIAL]
2020-11-25 20:40:16,823 TRACE  [main] BasicExtractor: extracted value ([matrix_d5_1_0_] : [INTEGER]) - [1]
2020-11-25 20:40:16,823 TRACE  [main] BasicExtractor: extracted value ([parent_p7_1_0_] : [BIGINT]) - [null]
2020-11-25 20:40:16,823 TRACE  [main] BasicExtractor: extracted value ([problem_6_1_0_] : [INTEGER]) - [22]
2020-11-25 20:40:16,823 TRACE  [main] BasicExtractor: extracted value ([problem_7_0_3_] : [BIGINT]) - [null]
2020-11-25 20:40:16,823 TRACE  [main] BasicExtractor: extracted value ([parent_p7_1_1_] : [BIGINT]) - [null]
2020-11-25 20:40:16,823 TRACE  [main] CollectionType: Created collection wrapper: [com.sf.back.entities.Problem.matrixes#8]
2020-11-25 20:40:16,824 TRACE  [main] BasicBinder: binding parameter [1] as [BIGINT] - [8]
2020-11-25 20:40:16,825 TRACE  [main] BasicExtractor: extracted value ([id1_0_1_] : [BIGINT]) - [45]
2020-11-25 20:40:16,825 TRACE  [main] BasicExtractor: extracted value ([binary_v2_0_1_] : [BLOB]) - [null]
2020-11-25 20:40:16,825 TRACE  [main] BasicExtractor: extracted value ([float_va3_0_1_] : [DOUBLE]) - [1.0]
2020-11-25 20:40:16,825 TRACE  [main] BasicExtractor: extracted value ([i4_0_1_] : [INTEGER]) - [0]
2020-11-25 20:40:16,826 TRACE  [main] BasicExtractor: extracted value ([is_condi5_0_1_] : [BOOLEAN]) - [true]
2020-11-25 20:40:16,826 TRACE  [main] BasicExtractor: extracted value ([j6_0_1_] : [INTEGER]) - [0]
2020-11-25 20:40:16,826 TRACE  [main] BasicExtractor: extracted value ([problem_7_0_1_] : [BIGINT]) - [8]
2020-11-25 20:40:16,826 TRACE  [main] BasicExtractor: extracted value ([problem_7_0_0_] : [BIGINT]) - [8]
2020-11-25 20:40:16,826 TRACE  [main] BasicExtractor: extracted value ([id1_0_0_] : [BIGINT]) - [45]
2020-11-25 20:40:16,827 TRACE  [main] BasicExtractor: extracted value ([id1_0_1_] : [BIGINT]) - [46]
2020-11-25 20:40:16,827 TRACE  [main] BasicExtractor: extracted value ([binary_v2_0_1_] : [BLOB]) - [null]
2020-11-25 20:40:16,827 TRACE  [main] BasicExtractor: extracted value ([float_va3_0_1_] : [DOUBLE]) - [2.718281828459045]
2020-11-25 20:40:16,827 TRACE  [main] BasicExtractor: extracted value ([i4_0_1_] : [INTEGER]) - [0]
2020-11-25 20:40:16,827 TRACE  [main] BasicExtractor: extracted value ([is_condi5_0_1_] : [BOOLEAN]) - [true]
2020-11-25 20:40:16,828 TRACE  [main] BasicExtractor: extracted value ([j6_0_1_] : [INTEGER]) - [1]
2020-11-25 20:40:16,828 TRACE  [main] BasicExtractor: extracted value ([problem_7_0_1_] : [BIGINT]) - [8]
2020-11-25 20:40:16,828 TRACE  [main] BasicExtractor: extracted value ([problem_7_0_0_] : [BIGINT]) - [8]
2020-11-25 20:40:16,828 TRACE  [main] BasicExtractor: extracted value ([id1_0_0_] : [BIGINT]) - [46]
2020-11-25 20:40:16,828 TRACE  [main] BasicExtractor: extracted value ([id1_0_1_] : [BIGINT]) - [47]
2020-11-25 20:40:16,829 TRACE  [main] BasicExtractor: extracted value ([binary_v2_0_1_] : [BLOB]) - [null]
2020-11-25 20:40:16,829 TRACE  [main] BasicExtractor: extracted value ([float_va3_0_1_] : [DOUBLE]) - [7.38905609893065]
2020-11-25 20:40:16,829 TRACE  [main] BasicExtractor: extracted value ([i4_0_1_] : [INTEGER]) - [0]
2020-11-25 20:40:16,829 TRACE  [main] BasicExtractor: extracted value ([is_condi5_0_1_] : [BOOLEAN]) - [true]
2020-11-25 20:40:16,829 TRACE  [main] BasicExtractor: extracted value ([j6_0_1_] : [INTEGER]) - [2]
2020-11-25 20:40:16,829 TRACE  [main] BasicExtractor: extracted value ([problem_7_0_1_] : [BIGINT]) - [8]
2020-11-25 20:40:16,829 TRACE  [main] BasicExtractor: extracted value ([problem_7_0_0_] : [BIGINT]) - [8]
2020-11-25 20:40:16,830 TRACE  [main] BasicExtractor: extracted value ([id1_0_0_] : [BIGINT]) - [47]
2020-11-25 20:40:16,830 TRACE  [main] BasicExtractor: extracted value ([id1_0_1_] : [BIGINT]) - [48]
2020-11-25 20:40:16,830 TRACE  [main] BasicExtractor: extracted value ([binary_v2_0_1_] : [BLOB]) - [null]
2020-11-25 20:40:16,830 TRACE  [main] BasicExtractor: extracted value ([float_va3_0_1_] : [DOUBLE]) - [20.085536923187668]
2020-11-25 20:40:16,831 TRACE  [main] BasicExtractor: extracted value ([i4_0_1_] : [INTEGER]) - [0]
2020-11-25 20:40:16,831 TRACE  [main] BasicExtractor: extracted value ([is_condi5_0_1_] : [BOOLEAN]) - [true]
2020-11-25 20:40:16,831 TRACE  [main] BasicExtractor: extracted value ([j6_0_1_] : [INTEGER]) - [3]
2020-11-25 20:40:16,831 TRACE  [main] BasicExtractor: extracted value ([problem_7_0_1_] : [BIGINT]) - [8]
2020-11-25 20:40:16,831 TRACE  [main] BasicExtractor: extracted value ([problem_7_0_0_] : [BIGINT]) - [8]
2020-11-25 20:40:16,831 TRACE  [main] BasicExtractor: extracted value ([id1_0_0_] : [BIGINT]) - [48]
2020-11-25 20:40:16,832 TRACE  [main] BasicExtractor: extracted value ([id1_0_1_] : [BIGINT]) - [49]
2020-11-25 20:40:16,832 TRACE  [main] BasicExtractor: extracted value ([binary_v2_0_1_] : [BLOB]) - [null]
2020-11-25 20:40:16,832 TRACE  [main] BasicExtractor: extracted value ([float_va3_0_1_] : [DOUBLE]) - [54.598150033144236]
2020-11-25 20:40:16,832 TRACE  [main] BasicExtractor: extracted value ([i4_0_1_] : [INTEGER]) - [0]
2020-11-25 20:40:16,832 TRACE  [main] BasicExtractor: extracted value ([is_condi5_0_1_] : [BOOLEAN]) - [true]
2020-11-25 20:40:16,832 TRACE  [main] BasicExtractor: extracted value ([j6_0_1_] : [INTEGER]) - [4]
2020-11-25 20:40:16,832 TRACE  [main] BasicExtractor: extracted value ([problem_7_0_1_] : [BIGINT]) - [8]
2020-11-25 20:40:16,833 TRACE  [main] BasicExtractor: extracted value ([problem_7_0_0_] : [BIGINT]) - [8]
2020-11-25 20:40:16,833 TRACE  [main] BasicExtractor: extracted value ([id1_0_0_] : [BIGINT]) - [49]
2020-11-25 20:40:16,833 TRACE  [main] BasicExtractor: extracted value ([id1_0_1_] : [BIGINT]) - [50]
2020-11-25 20:40:16,833 TRACE  [main] BasicExtractor: extracted value ([binary_v2_0_1_] : [BLOB]) - [null]
2020-11-25 20:40:16,834 TRACE  [main] BasicExtractor: extracted value ([float_va3_0_1_] : [DOUBLE]) - [148.4131591025766]
2020-11-25 20:40:16,834 TRACE  [main] BasicExtractor: extracted value ([i4_0_1_] : [INTEGER]) - [0]
2020-11-25 20:40:16,835 TRACE  [main] BasicExtractor: extracted value ([is_condi5_0_1_] : [BOOLEAN]) - [true]
2020-11-25 20:40:16,835 TRACE  [main] BasicExtractor: extracted value ([j6_0_1_] : [INTEGER]) - [5]
2020-11-25 20:40:16,835 TRACE  [main] BasicExtractor: extracted value ([problem_7_0_1_] : [BIGINT]) - [8]
2020-11-25 20:40:16,835 TRACE  [main] BasicExtractor: extracted value ([problem_7_0_0_] : [BIGINT]) - [8]
2020-11-25 20:40:16,835 TRACE  [main] BasicExtractor: extracted value ([id1_0_0_] : [BIGINT]) - [50]
2020-11-25 20:40:16,850 TRACE  [main] BasicBinder: binding parameter [1] as [BLOB] - [[100, 101, 115, 99, 114, 105, 112, 116, 105, 111, 110]]
2020-11-25 20:40:16,851 TRACE  [main] BasicBinder: binding parameter [2] as [BOOLEAN] - [null]
2020-11-25 20:40:16,851 TRACE  [main] BasicBinder: binding parameter [3] as [VARCHAR] - [POLYNOMIAL]
2020-11-25 20:40:16,851 TRACE  [main] BasicBinder: binding parameter [4] as [INTEGER] - [null]
2020-11-25 20:40:16,851 TRACE  [main] BasicBinder: binding parameter [5] as [BIGINT] - [null]
2020-11-25 20:40:16,851 TRACE  [main] BasicBinder: binding parameter [6] as [INTEGER] - [24]
2020-11-25 20:40:16,852 TRACE  [main] BasicBinder: binding parameter [1] as [BLOB] - [null]
2020-11-25 20:40:16,853 TRACE  [main] BasicBinder: binding parameter [2] as [DOUBLE] - [1.0]
2020-11-25 20:40:16,853 TRACE  [main] BasicBinder: binding parameter [3] as [INTEGER] - [0]
2020-11-25 20:40:16,853 TRACE  [main] BasicBinder: binding parameter [4] as [BOOLEAN] - [true]
2020-11-25 20:40:16,854 TRACE  [main] BasicBinder: binding parameter [5] as [INTEGER] - [0]
2020-11-25 20:40:16,854 TRACE  [main] BasicBinder: binding parameter [6] as [BIGINT] - [10]
2020-11-25 20:40:16,855 TRACE  [main] BasicBinder: binding parameter [1] as [BLOB] - [null]
2020-11-25 20:40:16,855 TRACE  [main] BasicBinder: binding parameter [2] as [DOUBLE] - [2.0]
2020-11-25 20:40:16,855 TRACE  [main] BasicBinder: binding parameter [3] as [INTEGER] - [0]
2020-11-25 20:40:16,856 TRACE  [main] BasicBinder: binding parameter [4] as [BOOLEAN] - [true]
2020-11-25 20:40:16,856 TRACE  [main] BasicBinder: binding parameter [5] as [INTEGER] - [1]
2020-11-25 20:40:16,856 TRACE  [main] BasicBinder: binding parameter [6] as [BIGINT] - [10]
2020-11-25 20:40:16,857 TRACE  [main] BasicBinder: binding parameter [1] as [BLOB] - [null]
2020-11-25 20:40:16,857 TRACE  [main] BasicBinder: binding parameter [2] as [DOUBLE] - [3.0]
2020-11-25 20:40:16,858 TRACE  [main] BasicBinder: binding parameter [3] as [INTEGER] - [0]
2020-11-25 20:40:16,858 TRACE  [main] BasicBinder: binding parameter [4] as [BOOLEAN] - [true]
2020-11-25 20:40:16,858 TRACE  [main] BasicBinder: binding parameter [5] as [INTEGER] - [2]
2020-11-25 20:40:16,858 TRACE  [main] BasicBinder: binding parameter [6] as [BIGINT] - [10]
2020-11-25 20:40:16,859 TRACE  [main] BasicBinder: binding parameter [1] as [BLOB] - [null]
2020-11-25 20:40:16,859 TRACE  [main] BasicBinder: binding parameter [2] as [DOUBLE] - [4.0]
2020-11-25 20:40:16,860 TRACE  [main] BasicBinder: binding parameter [3] as [INTEGER] - [0]
2020-11-25 20:40:16,860 TRACE  [main] BasicBinder: binding parameter [4] as [BOOLEAN] - [true]
2020-11-25 20:40:16,860 TRACE  [main] BasicBinder: binding parameter [5] as [INTEGER] - [3]
2020-11-25 20:40:16,860 TRACE  [main] BasicBinder: binding parameter [6] as [BIGINT] - [10]
2020-11-25 20:40:16,884 TRACE  [main] BasicBinder: binding parameter [1] as [BIGINT] - [10]
2020-11-25 20:40:16,885 TRACE  [main] BasicExtractor: extracted value ([id1_1_2_] : [BIGINT]) - [null]
2020-11-25 20:40:16,885 TRACE  [main] BasicExtractor: extracted value ([id1_0_4_] : [BIGINT]) - [null]
2020-11-25 20:40:16,886 TRACE  [main] BasicExtractor: extracted value ([descript2_1_0_] : [BLOB]) - [[100, 101, 115, 99, 114, 105, 112, 116, 105, 111, 110]]
2020-11-25 20:40:16,886 TRACE  [main] BasicExtractor: extracted value ([is_solve3_1_0_] : [BOOLEAN]) - [null]
2020-11-25 20:40:16,886 TRACE  [main] BasicExtractor: extracted value ([kind4_1_0_] : [VARCHAR]) - [POLYNOMIAL]
2020-11-25 20:40:16,886 TRACE  [main] BasicExtractor: extracted value ([matrix_d5_1_0_] : [INTEGER]) - [null]
2020-11-25 20:40:16,887 TRACE  [main] BasicExtractor: extracted value ([parent_p7_1_0_] : [BIGINT]) - [null]
2020-11-25 20:40:16,887 TRACE  [main] BasicExtractor: extracted value ([problem_6_1_0_] : [INTEGER]) - [24]
2020-11-25 20:40:16,887 TRACE  [main] BasicExtractor: extracted value ([problem_7_0_3_] : [BIGINT]) - [null]
2020-11-25 20:40:16,887 TRACE  [main] BasicExtractor: extracted value ([parent_p7_1_1_] : [BIGINT]) - [null]
2020-11-25 20:40:16,888 TRACE  [main] CollectionType: Created collection wrapper: [com.sf.back.entities.Problem.matrixes#10]
2020-11-25 20:40:16,892 TRACE  [main] BasicBinder: binding parameter [1] as [BIGINT] - [10]
2020-11-25 20:40:16,897 TRACE  [main] BasicExtractor: extracted value ([id1_0_1_] : [BIGINT]) - [57]
2020-11-25 20:40:16,897 TRACE  [main] BasicExtractor: extracted value ([binary_v2_0_1_] : [BLOB]) - [null]
2020-11-25 20:40:16,898 TRACE  [main] BasicExtractor: extracted value ([float_va3_0_1_] : [DOUBLE]) - [1.0]
2020-11-25 20:40:16,898 TRACE  [main] BasicExtractor: extracted value ([i4_0_1_] : [INTEGER]) - [0]
2020-11-25 20:40:16,898 TRACE  [main] BasicExtractor: extracted value ([is_condi5_0_1_] : [BOOLEAN]) - [true]
2020-11-25 20:40:16,899 TRACE  [main] BasicExtractor: extracted value ([j6_0_1_] : [INTEGER]) - [0]
2020-11-25 20:40:16,899 TRACE  [main] BasicExtractor: extracted value ([problem_7_0_1_] : [BIGINT]) - [10]
2020-11-25 20:40:16,899 TRACE  [main] BasicExtractor: extracted value ([problem_7_0_0_] : [BIGINT]) - [10]
2020-11-25 20:40:16,899 TRACE  [main] BasicExtractor: extracted value ([id1_0_0_] : [BIGINT]) - [57]
2020-11-25 20:40:16,899 TRACE  [main] BasicExtractor: extracted value ([id1_0_1_] : [BIGINT]) - [58]
2020-11-25 20:40:16,899 TRACE  [main] BasicExtractor: extracted value ([binary_v2_0_1_] : [BLOB]) - [null]
2020-11-25 20:40:16,900 TRACE  [main] BasicExtractor: extracted value ([float_va3_0_1_] : [DOUBLE]) - [2.0]
2020-11-25 20:40:16,900 TRACE  [main] BasicExtractor: extracted value ([i4_0_1_] : [INTEGER]) - [0]
2020-11-25 20:40:16,900 TRACE  [main] BasicExtractor: extracted value ([is_condi5_0_1_] : [BOOLEAN]) - [true]
2020-11-25 20:40:16,900 TRACE  [main] BasicExtractor: extracted value ([j6_0_1_] : [INTEGER]) - [1]
2020-11-25 20:40:16,900 TRACE  [main] BasicExtractor: extracted value ([problem_7_0_1_] : [BIGINT]) - [10]
2020-11-25 20:40:16,900 TRACE  [main] BasicExtractor: extracted value ([problem_7_0_0_] : [BIGINT]) - [10]
2020-11-25 20:40:16,901 TRACE  [main] BasicExtractor: extracted value ([id1_0_0_] : [BIGINT]) - [58]
2020-11-25 20:40:16,901 TRACE  [main] BasicExtractor: extracted value ([id1_0_1_] : [BIGINT]) - [59]
2020-11-25 20:40:16,901 TRACE  [main] BasicExtractor: extracted value ([binary_v2_0_1_] : [BLOB]) - [null]
2020-11-25 20:40:16,901 TRACE  [main] BasicExtractor: extracted value ([float_va3_0_1_] : [DOUBLE]) - [3.0]
2020-11-25 20:40:16,902 TRACE  [main] BasicExtractor: extracted value ([i4_0_1_] : [INTEGER]) - [0]
2020-11-25 20:40:16,902 TRACE  [main] BasicExtractor: extracted value ([is_condi5_0_1_] : [BOOLEAN]) - [true]
2020-11-25 20:40:16,902 TRACE  [main] BasicExtractor: extracted value ([j6_0_1_] : [INTEGER]) - [2]
2020-11-25 20:40:16,903 TRACE  [main] BasicExtractor: extracted value ([problem_7_0_1_] : [BIGINT]) - [10]
2020-11-25 20:40:16,903 TRACE  [main] BasicExtractor: extracted value ([problem_7_0_0_] : [BIGINT]) - [10]
2020-11-25 20:40:16,903 TRACE  [main] BasicExtractor: extracted value ([id1_0_0_] : [BIGINT]) - [59]
2020-11-25 20:40:16,906 TRACE  [main] BasicExtractor: extracted value ([id1_0_1_] : [BIGINT]) - [60]
2020-11-25 20:40:16,906 TRACE  [main] BasicExtractor: extracted value ([binary_v2_0_1_] : [BLOB]) - [null]
2020-11-25 20:40:16,907 TRACE  [main] BasicExtractor: extracted value ([float_va3_0_1_] : [DOUBLE]) - [4.0]
2020-11-25 20:40:16,907 TRACE  [main] BasicExtractor: extracted value ([i4_0_1_] : [INTEGER]) - [0]
2020-11-25 20:40:16,907 TRACE  [main] BasicExtractor: extracted value ([is_condi5_0_1_] : [BOOLEAN]) - [true]
2020-11-25 20:40:16,908 TRACE  [main] BasicExtractor: extracted value ([j6_0_1_] : [INTEGER]) - [3]
2020-11-25 20:40:16,908 TRACE  [main] BasicExtractor: extracted value ([problem_7_0_1_] : [BIGINT]) - [10]
2020-11-25 20:40:16,908 TRACE  [main] BasicExtractor: extracted value ([problem_7_0_0_] : [BIGINT]) - [10]
2020-11-25 20:40:16,909 TRACE  [main] BasicExtractor: extracted value ([id1_0_0_] : [BIGINT]) - [60]
2020-11-25 20:40:16,932 TRACE  [main] BasicBinder: binding parameter [1] as [BIGINT] - [11]
2020-11-25 20:40:16,933 TRACE  [main] BasicExtractor: extracted value ([id1_1_2_] : [BIGINT]) - [null]
2020-11-25 20:40:16,933 TRACE  [main] BasicExtractor: extracted value ([id1_0_4_] : [BIGINT]) - [null]
2020-11-25 20:40:16,933 TRACE  [main] BasicExtractor: extracted value ([descript2_1_0_] : [BLOB]) - [[112, 114, 111, 98, 108, 101, 109, 100, 101, 115, 99, 114, 105, 112, 116, 105, 111, 110]]
2020-11-25 20:40:16,933 TRACE  [main] BasicExtractor: extracted value ([is_solve3_1_0_] : [BOOLEAN]) - [null]
2020-11-25 20:40:16,934 TRACE  [main] BasicExtractor: extracted value ([kind4_1_0_] : [VARCHAR]) - [POLYNOMIAL]
2020-11-25 20:40:16,934 TRACE  [main] BasicExtractor: extracted value ([matrix_d5_1_0_] : [INTEGER]) - [1]
2020-11-25 20:40:16,934 TRACE  [main] BasicExtractor: extracted value ([parent_p7_1_0_] : [BIGINT]) - [null]
2020-11-25 20:40:16,934 TRACE  [main] BasicExtractor: extracted value ([problem_6_1_0_] : [INTEGER]) - [22]
2020-11-25 20:40:16,934 TRACE  [main] BasicExtractor: extracted value ([problem_7_0_3_] : [BIGINT]) - [null]
2020-11-25 20:40:16,934 TRACE  [main] BasicExtractor: extracted value ([parent_p7_1_1_] : [BIGINT]) - [null]
2020-11-25 20:40:16,935 TRACE  [main] CollectionType: Created collection wrapper: [com.sf.back.entities.Problem.matrixes#11]
2020-11-25 20:40:16,935 TRACE  [main] BasicBinder: binding parameter [1] as [BIGINT] - [11]
2020-11-25 20:40:16,936 TRACE  [main] BasicExtractor: extracted value ([id1_0_1_] : [BIGINT]) - [61]
2020-11-25 20:40:16,936 TRACE  [main] BasicExtractor: extracted value ([binary_v2_0_1_] : [BLOB]) - [null]
2020-11-25 20:40:16,937 TRACE  [main] BasicExtractor: extracted value ([float_va3_0_1_] : [DOUBLE]) - [1.0]
2020-11-25 20:40:16,937 TRACE  [main] BasicExtractor: extracted value ([i4_0_1_] : [INTEGER]) - [0]
2020-11-25 20:40:16,937 TRACE  [main] BasicExtractor: extracted value ([is_condi5_0_1_] : [BOOLEAN]) - [true]
2020-11-25 20:40:16,937 TRACE  [main] BasicExtractor: extracted value ([j6_0_1_] : [INTEGER]) - [0]
2020-11-25 20:40:16,937 TRACE  [main] BasicExtractor: extracted value ([problem_7_0_1_] : [BIGINT]) - [11]
2020-11-25 20:40:16,937 TRACE  [main] BasicExtractor: extracted value ([problem_7_0_0_] : [BIGINT]) - [11]
2020-11-25 20:40:16,937 TRACE  [main] BasicExtractor: extracted value ([id1_0_0_] : [BIGINT]) - [61]
2020-11-25 20:40:16,938 TRACE  [main] BasicExtractor: extracted value ([id1_0_1_] : [BIGINT]) - [62]
2020-11-25 20:40:16,938 TRACE  [main] BasicExtractor: extracted value ([binary_v2_0_1_] : [BLOB]) - [null]
2020-11-25 20:40:16,938 TRACE  [main] BasicExtractor: extracted value ([float_va3_0_1_] : [DOUBLE]) - [2.718281828459045]
2020-11-25 20:40:16,939 TRACE  [main] BasicExtractor: extracted value ([i4_0_1_] : [INTEGER]) - [0]
2020-11-25 20:40:16,939 TRACE  [main] BasicExtractor: extracted value ([is_condi5_0_1_] : [BOOLEAN]) - [true]
2020-11-25 20:40:16,939 TRACE  [main] BasicExtractor: extracted value ([j6_0_1_] : [INTEGER]) - [1]
2020-11-25 20:40:16,939 TRACE  [main] BasicExtractor: extracted value ([problem_7_0_1_] : [BIGINT]) - [11]
2020-11-25 20:40:16,939 TRACE  [main] BasicExtractor: extracted value ([problem_7_0_0_] : [BIGINT]) - [11]
2020-11-25 20:40:16,939 TRACE  [main] BasicExtractor: extracted value ([id1_0_0_] : [BIGINT]) - [62]
2020-11-25 20:40:16,940 TRACE  [main] BasicExtractor: extracted value ([id1_0_1_] : [BIGINT]) - [63]
2020-11-25 20:40:16,940 TRACE  [main] BasicExtractor: extracted value ([binary_v2_0_1_] : [BLOB]) - [null]
2020-11-25 20:40:16,940 TRACE  [main] BasicExtractor: extracted value ([float_va3_0_1_] : [DOUBLE]) - [7.38905609893065]
2020-11-25 20:40:16,940 TRACE  [main] BasicExtractor: extracted value ([i4_0_1_] : [INTEGER]) - [0]
2020-11-25 20:40:16,940 TRACE  [main] BasicExtractor: extracted value ([is_condi5_0_1_] : [BOOLEAN]) - [true]
2020-11-25 20:40:16,941 TRACE  [main] BasicExtractor: extracted value ([j6_0_1_] : [INTEGER]) - [2]
2020-11-25 20:40:16,941 TRACE  [main] BasicExtractor: extracted value ([problem_7_0_1_] : [BIGINT]) - [11]
2020-11-25 20:40:16,941 TRACE  [main] BasicExtractor: extracted value ([problem_7_0_0_] : [BIGINT]) - [11]
2020-11-25 20:40:16,941 TRACE  [main] BasicExtractor: extracted value ([id1_0_0_] : [BIGINT]) - [63]
2020-11-25 20:40:16,941 TRACE  [main] BasicExtractor: extracted value ([id1_0_1_] : [BIGINT]) - [64]
2020-11-25 20:40:16,941 TRACE  [main] BasicExtractor: extracted value ([binary_v2_0_1_] : [BLOB]) - [null]
2020-11-25 20:40:16,941 TRACE  [main] BasicExtractor: extracted value ([float_va3_0_1_] : [DOUBLE]) - [20.085536923187668]
2020-11-25 20:40:16,941 TRACE  [main] BasicExtractor: extracted value ([i4_0_1_] : [INTEGER]) - [0]
2020-11-25 20:40:16,942 TRACE  [main] BasicExtractor: extracted value ([is_condi5_0_1_] : [BOOLEAN]) - [true]
2020-11-25 20:40:16,942 TRACE  [main] BasicExtractor: extracted value ([j6_0_1_] : [INTEGER]) - [3]
2020-11-25 20:40:16,942 TRACE  [main] BasicExtractor: extracted value ([problem_7_0_1_] : [BIGINT]) - [11]
2020-11-25 20:40:16,942 TRACE  [main] BasicExtractor: extracted value ([problem_7_0_0_] : [BIGINT]) - [11]
2020-11-25 20:40:16,942 TRACE  [main] BasicExtractor: extracted value ([id1_0_0_] : [BIGINT]) - [64]
2020-11-25 20:40:16,942 TRACE  [main] BasicExtractor: extracted value ([id1_0_1_] : [BIGINT]) - [65]
2020-11-25 20:40:16,943 TRACE  [main] BasicExtractor: extracted value ([binary_v2_0_1_] : [BLOB]) - [null]
2020-11-25 20:40:16,943 TRACE  [main] BasicExtractor: extracted value ([float_va3_0_1_] : [DOUBLE]) - [54.598150033144236]
2020-11-25 20:40:16,943 TRACE  [main] BasicExtractor: extracted value ([i4_0_1_] : [INTEGER]) - [0]
2020-11-25 20:40:16,944 TRACE  [main] BasicExtractor: extracted value ([is_condi5_0_1_] : [BOOLEAN]) - [true]
2020-11-25 20:40:16,945 TRACE  [main] BasicExtractor: extracted value ([j6_0_1_] : [INTEGER]) - [4]
2020-11-25 20:40:16,945 TRACE  [main] BasicExtractor: extracted value ([problem_7_0_1_] : [BIGINT]) - [11]
2020-11-25 20:40:16,945 TRACE  [main] BasicExtractor: extracted value ([problem_7_0_0_] : [BIGINT]) - [11]
2020-11-25 20:40:16,945 TRACE  [main] BasicExtractor: extracted value ([id1_0_0_] : [BIGINT]) - [65]
2020-11-25 20:40:16,945 TRACE  [main] BasicExtractor: extracted value ([id1_0_1_] : [BIGINT]) - [66]
2020-11-25 20:40:16,946 TRACE  [main] BasicExtractor: extracted value ([binary_v2_0_1_] : [BLOB]) - [null]
2020-11-25 20:40:16,946 TRACE  [main] BasicExtractor: extracted value ([float_va3_0_1_] : [DOUBLE]) - [148.4131591025766]
2020-11-25 20:40:16,946 TRACE  [main] BasicExtractor: extracted value ([i4_0_1_] : [INTEGER]) - [0]
2020-11-25 20:40:16,946 TRACE  [main] BasicExtractor: extracted value ([is_condi5_0_1_] : [BOOLEAN]) - [true]
2020-11-25 20:40:16,946 TRACE  [main] BasicExtractor: extracted value ([j6_0_1_] : [INTEGER]) - [5]
2020-11-25 20:40:16,946 TRACE  [main] BasicExtractor: extracted value ([problem_7_0_1_] : [BIGINT]) - [11]
2020-11-25 20:40:16,946 TRACE  [main] BasicExtractor: extracted value ([problem_7_0_0_] : [BIGINT]) - [11]
2020-11-25 20:40:16,947 TRACE  [main] BasicExtractor: extracted value ([id1_0_0_] : [BIGINT]) - [66]
2020-11-25 20:40:16,954 TRACE  [main] BasicBinder: binding parameter [1] as [BIGINT] - [11]
2020-11-25 20:40:16,955 TRACE  [main] BasicExtractor: extracted value ([id1_0_0_] : [BIGINT]) - [61]
2020-11-25 20:40:16,955 TRACE  [main] BasicExtractor: extracted value ([binary_v2_0_0_] : [BLOB]) - [null]
2020-11-25 20:40:16,958 TRACE  [main] BasicExtractor: extracted value ([float_va3_0_0_] : [DOUBLE]) - [1.0]
2020-11-25 20:40:16,958 TRACE  [main] BasicExtractor: extracted value ([i4_0_0_] : [INTEGER]) - [0]
2020-11-25 20:40:16,958 TRACE  [main] BasicExtractor: extracted value ([is_condi5_0_0_] : [BOOLEAN]) - [true]
2020-11-25 20:40:16,959 TRACE  [main] BasicExtractor: extracted value ([j6_0_0_] : [INTEGER]) - [0]
2020-11-25 20:40:16,959 TRACE  [main] BasicExtractor: extracted value ([problem_7_0_0_] : [BIGINT]) - [11]
2020-11-25 20:40:16,959 TRACE  [main] BasicExtractor: extracted value ([descript2_1_1_] : [BLOB]) - [[112, 114, 111, 98, 108, 101, 109, 100, 101, 115, 99, 114, 105, 112, 116, 105, 111, 110]]
2020-11-25 20:40:16,960 TRACE  [main] BasicExtractor: extracted value ([is_solve3_1_1_] : [BOOLEAN]) - [null]
2020-11-25 20:40:16,960 TRACE  [main] BasicExtractor: extracted value ([kind4_1_1_] : [VARCHAR]) - [POLYNOMIAL]
2020-11-25 20:40:16,962 TRACE  [main] BasicExtractor: extracted value ([matrix_d5_1_1_] : [INTEGER]) - [1]
2020-11-25 20:40:16,963 TRACE  [main] BasicExtractor: extracted value ([parent_p7_1_1_] : [BIGINT]) - [null]
2020-11-25 20:40:16,963 TRACE  [main] BasicExtractor: extracted value ([problem_6_1_1_] : [INTEGER]) - [22]
2020-11-25 20:40:16,963 TRACE  [main] BasicExtractor: extracted value ([problem_7_0_3_] : [BIGINT]) - [11]
2020-11-25 20:40:16,976 TRACE  [main] BasicExtractor: extracted value ([id1_0_3_] : [BIGINT]) - [61]
2020-11-25 20:40:16,976 TRACE  [main] BasicExtractor: extracted value ([id1_0_0_] : [BIGINT]) - [62]
2020-11-25 20:40:16,977 TRACE  [main] BasicExtractor: extracted value ([binary_v2_0_0_] : [BLOB]) - [null]
2020-11-25 20:40:16,977 TRACE  [main] BasicExtractor: extracted value ([float_va3_0_0_] : [DOUBLE]) - [2.718281828459045]
2020-11-25 20:40:16,977 TRACE  [main] BasicExtractor: extracted value ([i4_0_0_] : [INTEGER]) - [0]
2020-11-25 20:40:16,977 TRACE  [main] BasicExtractor: extracted value ([is_condi5_0_0_] : [BOOLEAN]) - [true]
2020-11-25 20:40:16,977 TRACE  [main] BasicExtractor: extracted value ([j6_0_0_] : [INTEGER]) - [1]
2020-11-25 20:40:16,978 TRACE  [main] BasicExtractor: extracted value ([problem_7_0_0_] : [BIGINT]) - [11]
2020-11-25 20:40:16,978 TRACE  [main] BasicExtractor: extracted value ([problem_7_0_3_] : [BIGINT]) - [11]
2020-11-25 20:40:16,979 TRACE  [main] BasicExtractor: extracted value ([id1_0_3_] : [BIGINT]) - [62]
2020-11-25 20:40:16,979 TRACE  [main] BasicExtractor: extracted value ([id1_0_0_] : [BIGINT]) - [63]
2020-11-25 20:40:16,979 TRACE  [main] BasicExtractor: extracted value ([binary_v2_0_0_] : [BLOB]) - [null]
2020-11-25 20:40:16,980 TRACE  [main] BasicExtractor: extracted value ([float_va3_0_0_] : [DOUBLE]) - [7.38905609893065]
2020-11-25 20:40:16,980 TRACE  [main] BasicExtractor: extracted value ([i4_0_0_] : [INTEGER]) - [0]
2020-11-25 20:40:16,980 TRACE  [main] BasicExtractor: extracted value ([is_condi5_0_0_] : [BOOLEAN]) - [true]
2020-11-25 20:40:16,980 TRACE  [main] BasicExtractor: extracted value ([j6_0_0_] : [INTEGER]) - [2]
2020-11-25 20:40:16,980 TRACE  [main] BasicExtractor: extracted value ([problem_7_0_0_] : [BIGINT]) - [11]
2020-11-25 20:40:16,981 TRACE  [main] BasicExtractor: extracted value ([problem_7_0_3_] : [BIGINT]) - [11]
2020-11-25 20:40:16,981 TRACE  [main] BasicExtractor: extracted value ([id1_0_3_] : [BIGINT]) - [63]
2020-11-25 20:40:16,982 TRACE  [main] BasicExtractor: extracted value ([id1_0_0_] : [BIGINT]) - [64]
2020-11-25 20:40:16,982 TRACE  [main] BasicExtractor: extracted value ([binary_v2_0_0_] : [BLOB]) - [null]
2020-11-25 20:40:16,982 TRACE  [main] BasicExtractor: extracted value ([float_va3_0_0_] : [DOUBLE]) - [20.085536923187668]
2020-11-25 20:40:16,982 TRACE  [main] BasicExtractor: extracted value ([i4_0_0_] : [INTEGER]) - [0]
2020-11-25 20:40:16,982 TRACE  [main] BasicExtractor: extracted value ([is_condi5_0_0_] : [BOOLEAN]) - [true]
2020-11-25 20:40:16,983 TRACE  [main] BasicExtractor: extracted value ([j6_0_0_] : [INTEGER]) - [3]
2020-11-25 20:40:16,983 TRACE  [main] BasicExtractor: extracted value ([problem_7_0_0_] : [BIGINT]) - [11]
2020-11-25 20:40:16,983 TRACE  [main] BasicExtractor: extracted value ([problem_7_0_3_] : [BIGINT]) - [11]
2020-11-25 20:40:16,983 TRACE  [main] BasicExtractor: extracted value ([id1_0_3_] : [BIGINT]) - [64]
2020-11-25 20:40:16,984 TRACE  [main] BasicExtractor: extracted value ([id1_0_0_] : [BIGINT]) - [65]
2020-11-25 20:40:16,984 TRACE  [main] BasicExtractor: extracted value ([binary_v2_0_0_] : [BLOB]) - [null]
2020-11-25 20:40:16,984 TRACE  [main] BasicExtractor: extracted value ([float_va3_0_0_] : [DOUBLE]) - [54.598150033144236]
2020-11-25 20:40:16,984 TRACE  [main] BasicExtractor: extracted value ([i4_0_0_] : [INTEGER]) - [0]
2020-11-25 20:40:16,985 TRACE  [main] BasicExtractor: extracted value ([is_condi5_0_0_] : [BOOLEAN]) - [true]
2020-11-25 20:40:16,985 TRACE  [main] BasicExtractor: extracted value ([j6_0_0_] : [INTEGER]) - [4]
2020-11-25 20:40:16,985 TRACE  [main] BasicExtractor: extracted value ([problem_7_0_0_] : [BIGINT]) - [11]
2020-11-25 20:40:16,985 TRACE  [main] BasicExtractor: extracted value ([problem_7_0_3_] : [BIGINT]) - [11]
2020-11-25 20:40:16,985 TRACE  [main] BasicExtractor: extracted value ([id1_0_3_] : [BIGINT]) - [65]
2020-11-25 20:40:16,985 TRACE  [main] BasicExtractor: extracted value ([id1_0_0_] : [BIGINT]) - [66]
2020-11-25 20:40:16,986 TRACE  [main] BasicExtractor: extracted value ([binary_v2_0_0_] : [BLOB]) - [null]
2020-11-25 20:40:16,986 TRACE  [main] BasicExtractor: extracted value ([float_va3_0_0_] : [DOUBLE]) - [148.4131591025766]
2020-11-25 20:40:16,986 TRACE  [main] BasicExtractor: extracted value ([i4_0_0_] : [INTEGER]) - [0]
2020-11-25 20:40:16,986 TRACE  [main] BasicExtractor: extracted value ([is_condi5_0_0_] : [BOOLEAN]) - [true]
2020-11-25 20:40:16,986 TRACE  [main] BasicExtractor: extracted value ([j6_0_0_] : [INTEGER]) - [5]
2020-11-25 20:40:16,986 TRACE  [main] BasicExtractor: extracted value ([problem_7_0_0_] : [BIGINT]) - [11]
2020-11-25 20:40:16,987 TRACE  [main] BasicExtractor: extracted value ([problem_7_0_3_] : [BIGINT]) - [11]
2020-11-25 20:40:16,987 TRACE  [main] BasicExtractor: extracted value ([id1_0_3_] : [BIGINT]) - [66]
2020-11-25 20:40:16,988 TRACE  [main] CollectionType: Created collection wrapper: [com.sf.back.entities.Problem.children#11]
2020-11-25 20:40:16,990 TRACE  [main] BasicBinder: binding parameter [1] as [BIGINT] - [11]
2020-11-25 20:40:16,993 TRACE  [main] BasicBinder: binding parameter [1] as [BLOB] - [null]
2020-11-25 20:40:16,993 TRACE  [main] BasicBinder: binding parameter [2] as [DOUBLE] - [2.0]
2020-11-25 20:40:16,993 TRACE  [main] BasicBinder: binding parameter [3] as [INTEGER] - [0]
2020-11-25 20:40:16,993 TRACE  [main] BasicBinder: binding parameter [4] as [BOOLEAN] - [true]
2020-11-25 20:40:16,994 TRACE  [main] BasicBinder: binding parameter [5] as [INTEGER] - [0]
2020-11-25 20:40:16,994 TRACE  [main] BasicBinder: binding parameter [6] as [BIGINT] - [11]
2020-11-25 20:40:16,994 TRACE  [main] BasicBinder: binding parameter [7] as [BIGINT] - [61]
2020-11-25 20:40:16,996 TRACE  [main] BasicBinder: binding parameter [1] as [BLOB] - [[100, 101, 115, 99, 114, 105, 112, 116, 105, 111, 110, 112, 114, 111, 98, 108, 101, 109]]
2020-11-25 20:40:16,996 TRACE  [main] BasicBinder: binding parameter [2] as [BOOLEAN] - [null]
2020-11-25 20:40:16,996 TRACE  [main] BasicBinder: binding parameter [3] as [VARCHAR] - [POLYNOMIAL]
2020-11-25 20:40:16,996 TRACE  [main] BasicBinder: binding parameter [4] as [INTEGER] - [1]
2020-11-25 20:40:16,997 TRACE  [main] BasicBinder: binding parameter [5] as [BIGINT] - [null]
2020-11-25 20:40:16,997 TRACE  [main] BasicBinder: binding parameter [6] as [INTEGER] - [22]
2020-11-25 20:40:16,997 TRACE  [main] BasicBinder: binding parameter [7] as [BIGINT] - [11]
2020-11-25 20:40:17,012 TRACE  [main] BasicBinder: binding parameter [1] as [BIGINT] - [12]
2020-11-25 20:40:17,013 TRACE  [main] BasicExtractor: extracted value ([id1_1_2_] : [BIGINT]) - [null]
2020-11-25 20:40:17,013 TRACE  [main] BasicExtractor: extracted value ([id1_0_4_] : [BIGINT]) - [null]
2020-11-25 20:40:17,013 TRACE  [main] BasicExtractor: extracted value ([descript2_1_0_] : [BLOB]) - [[112, 114, 111, 98, 108, 101, 109, 100, 101, 115, 99, 114, 105, 112, 116, 105, 111, 110]]
2020-11-25 20:40:17,013 TRACE  [main] BasicExtractor: extracted value ([is_solve3_1_0_] : [BOOLEAN]) - [null]
2020-11-25 20:40:17,014 TRACE  [main] BasicExtractor: extracted value ([kind4_1_0_] : [VARCHAR]) - [POLYNOMIAL]
2020-11-25 20:40:17,014 TRACE  [main] BasicExtractor: extracted value ([matrix_d5_1_0_] : [INTEGER]) - [1]
2020-11-25 20:40:17,014 TRACE  [main] BasicExtractor: extracted value ([parent_p7_1_0_] : [BIGINT]) - [null]
2020-11-25 20:40:17,014 TRACE  [main] BasicExtractor: extracted value ([problem_6_1_0_] : [INTEGER]) - [22]
2020-11-25 20:40:17,014 TRACE  [main] BasicExtractor: extracted value ([problem_7_0_3_] : [BIGINT]) - [null]
2020-11-25 20:40:17,015 TRACE  [main] BasicExtractor: extracted value ([parent_p7_1_1_] : [BIGINT]) - [null]
2020-11-25 20:40:17,015 TRACE  [main] CollectionType: Created collection wrapper: [com.sf.back.entities.Problem.matrixes#12]
2020-11-25 20:40:17,016 TRACE  [main] BasicBinder: binding parameter [1] as [BIGINT] - [12]
2020-11-25 20:40:17,018 TRACE  [main] BasicExtractor: extracted value ([id1_0_1_] : [BIGINT]) - [67]
2020-11-25 20:40:17,018 TRACE  [main] BasicExtractor: extracted value ([binary_v2_0_1_] : [BLOB]) - [null]
2020-11-25 20:40:17,018 TRACE  [main] BasicExtractor: extracted value ([float_va3_0_1_] : [DOUBLE]) - [1.0]
2020-11-25 20:40:17,019 TRACE  [main] BasicExtractor: extracted value ([i4_0_1_] : [INTEGER]) - [0]
2020-11-25 20:40:17,019 TRACE  [main] BasicExtractor: extracted value ([is_condi5_0_1_] : [BOOLEAN]) - [true]
2020-11-25 20:40:17,019 TRACE  [main] BasicExtractor: extracted value ([j6_0_1_] : [INTEGER]) - [0]
2020-11-25 20:40:17,020 TRACE  [main] BasicExtractor: extracted value ([problem_7_0_1_] : [BIGINT]) - [12]
2020-11-25 20:40:17,020 TRACE  [main] BasicExtractor: extracted value ([problem_7_0_0_] : [BIGINT]) - [12]
2020-11-25 20:40:17,020 TRACE  [main] BasicExtractor: extracted value ([id1_0_0_] : [BIGINT]) - [67]
2020-11-25 20:40:17,021 TRACE  [main] BasicExtractor: extracted value ([id1_0_1_] : [BIGINT]) - [68]
2020-11-25 20:40:17,025 TRACE  [main] BasicExtractor: extracted value ([binary_v2_0_1_] : [BLOB]) - [null]
2020-11-25 20:40:17,026 TRACE  [main] BasicExtractor: extracted value ([float_va3_0_1_] : [DOUBLE]) - [2.718281828459045]
2020-11-25 20:40:17,026 TRACE  [main] BasicExtractor: extracted value ([i4_0_1_] : [INTEGER]) - [0]
2020-11-25 20:40:17,027 TRACE  [main] BasicExtractor: extracted value ([is_condi5_0_1_] : [BOOLEAN]) - [true]
2020-11-25 20:40:17,027 TRACE  [main] BasicExtractor: extracted value ([j6_0_1_] : [INTEGER]) - [1]
2020-11-25 20:40:17,027 TRACE  [main] BasicExtractor: extracted value ([problem_7_0_1_] : [BIGINT]) - [12]
2020-11-25 20:40:17,029 TRACE  [main] BasicExtractor: extracted value ([problem_7_0_0_] : [BIGINT]) - [12]
2020-11-25 20:40:17,029 TRACE  [main] BasicExtractor: extracted value ([id1_0_0_] : [BIGINT]) - [68]
2020-11-25 20:40:17,030 TRACE  [main] BasicExtractor: extracted value ([id1_0_1_] : [BIGINT]) - [69]
2020-11-25 20:40:17,030 TRACE  [main] BasicExtractor: extracted value ([binary_v2_0_1_] : [BLOB]) - [null]
2020-11-25 20:40:17,031 TRACE  [main] BasicExtractor: extracted value ([float_va3_0_1_] : [DOUBLE]) - [7.38905609893065]
2020-11-25 20:40:17,031 TRACE  [main] BasicExtractor: extracted value ([i4_0_1_] : [INTEGER]) - [0]
2020-11-25 20:40:17,031 TRACE  [main] BasicExtractor: extracted value ([is_condi5_0_1_] : [BOOLEAN]) - [true]
2020-11-25 20:40:17,032 TRACE  [main] BasicExtractor: extracted value ([j6_0_1_] : [INTEGER]) - [2]
2020-11-25 20:40:17,032 TRACE  [main] BasicExtractor: extracted value ([problem_7_0_1_] : [BIGINT]) - [12]
2020-11-25 20:40:17,032 TRACE  [main] BasicExtractor: extracted value ([problem_7_0_0_] : [BIGINT]) - [12]
2020-11-25 20:40:17,032 TRACE  [main] BasicExtractor: extracted value ([id1_0_0_] : [BIGINT]) - [69]
2020-11-25 20:40:17,033 TRACE  [main] BasicExtractor: extracted value ([id1_0_1_] : [BIGINT]) - [70]
2020-11-25 20:40:17,034 TRACE  [main] BasicExtractor: extracted value ([binary_v2_0_1_] : [BLOB]) - [null]
2020-11-25 20:40:17,034 TRACE  [main] BasicExtractor: extracted value ([float_va3_0_1_] : [DOUBLE]) - [20.085536923187668]
2020-11-25 20:40:17,034 TRACE  [main] BasicExtractor: extracted value ([i4_0_1_] : [INTEGER]) - [0]
2020-11-25 20:40:17,035 TRACE  [main] BasicExtractor: extracted value ([is_condi5_0_1_] : [BOOLEAN]) - [true]
2020-11-25 20:40:17,035 TRACE  [main] BasicExtractor: extracted value ([j6_0_1_] : [INTEGER]) - [3]
2020-11-25 20:40:17,036 TRACE  [main] BasicExtractor: extracted value ([problem_7_0_1_] : [BIGINT]) - [12]
2020-11-25 20:40:17,036 TRACE  [main] BasicExtractor: extracted value ([problem_7_0_0_] : [BIGINT]) - [12]
2020-11-25 20:40:17,036 TRACE  [main] BasicExtractor: extracted value ([id1_0_0_] : [BIGINT]) - [70]
2020-11-25 20:40:17,037 TRACE  [main] BasicExtractor: extracted value ([id1_0_1_] : [BIGINT]) - [71]
2020-11-25 20:40:17,037 TRACE  [main] BasicExtractor: extracted value ([binary_v2_0_1_] : [BLOB]) - [null]
2020-11-25 20:40:17,037 TRACE  [main] BasicExtractor: extracted value ([float_va3_0_1_] : [DOUBLE]) - [54.598150033144236]
2020-11-25 20:40:17,037 TRACE  [main] BasicExtractor: extracted value ([i4_0_1_] : [INTEGER]) - [0]
2020-11-25 20:40:17,037 TRACE  [main] BasicExtractor: extracted value ([is_condi5_0_1_] : [BOOLEAN]) - [true]
2020-11-25 20:40:17,038 TRACE  [main] BasicExtractor: extracted value ([j6_0_1_] : [INTEGER]) - [4]
2020-11-25 20:40:17,038 TRACE  [main] BasicExtractor: extracted value ([problem_7_0_1_] : [BIGINT]) - [12]
2020-11-25 20:40:17,038 TRACE  [main] BasicExtractor: extracted value ([problem_7_0_0_] : [BIGINT]) - [12]
2020-11-25 20:40:17,040 TRACE  [main] BasicExtractor: extracted value ([id1_0_0_] : [BIGINT]) - [71]
2020-11-25 20:40:17,041 TRACE  [main] BasicExtractor: extracted value ([id1_0_1_] : [BIGINT]) - [72]
2020-11-25 20:40:17,041 TRACE  [main] BasicExtractor: extracted value ([binary_v2_0_1_] : [BLOB]) - [null]
2020-11-25 20:40:17,042 TRACE  [main] BasicExtractor: extracted value ([float_va3_0_1_] : [DOUBLE]) - [148.4131591025766]
2020-11-25 20:40:17,042 TRACE  [main] BasicExtractor: extracted value ([i4_0_1_] : [INTEGER]) - [0]
2020-11-25 20:40:17,042 TRACE  [main] BasicExtractor: extracted value ([is_condi5_0_1_] : [BOOLEAN]) - [true]
2020-11-25 20:40:17,043 TRACE  [main] BasicExtractor: extracted value ([j6_0_1_] : [INTEGER]) - [5]
2020-11-25 20:40:17,043 TRACE  [main] BasicExtractor: extracted value ([problem_7_0_1_] : [BIGINT]) - [12]
2020-11-25 20:40:17,044 TRACE  [main] BasicExtractor: extracted value ([problem_7_0_0_] : [BIGINT]) - [12]
2020-11-25 20:40:17,045 TRACE  [main] BasicExtractor: extracted value ([id1_0_0_] : [BIGINT]) - [72]
2020-11-25 20:40:17,049 TRACE  [main] BasicBinder: binding parameter [1] as [BIGINT] - [12]
2020-11-25 20:40:17,050 TRACE  [main] BasicExtractor: extracted value ([id1_1_2_] : [BIGINT]) - [null]
2020-11-25 20:40:17,050 TRACE  [main] BasicExtractor: extracted value ([id1_0_4_] : [BIGINT]) - [null]
2020-11-25 20:40:17,050 TRACE  [main] BasicExtractor: extracted value ([descript2_1_0_] : [BLOB]) - [[112, 114, 111, 98, 108, 101, 109, 100, 101, 115, 99, 114, 105, 112, 116, 105, 111, 110]]
2020-11-25 20:40:17,051 TRACE  [main] BasicExtractor: extracted value ([is_solve3_1_0_] : [BOOLEAN]) - [null]
2020-11-25 20:40:17,051 TRACE  [main] BasicExtractor: extracted value ([kind4_1_0_] : [VARCHAR]) - [POLYNOMIAL]
2020-11-25 20:40:17,051 TRACE  [main] BasicExtractor: extracted value ([matrix_d5_1_0_] : [INTEGER]) - [1]
2020-11-25 20:40:17,051 TRACE  [main] BasicExtractor: extracted value ([parent_p7_1_0_] : [BIGINT]) - [null]
2020-11-25 20:40:17,051 TRACE  [main] BasicExtractor: extracted value ([problem_6_1_0_] : [INTEGER]) - [22]
2020-11-25 20:40:17,052 TRACE  [main] BasicExtractor: extracted value ([problem_7_0_3_] : [BIGINT]) - [null]
2020-11-25 20:40:17,052 TRACE  [main] BasicExtractor: extracted value ([parent_p7_1_1_] : [BIGINT]) - [null]
2020-11-25 20:40:17,052 TRACE  [main] CollectionType: Created collection wrapper: [com.sf.back.entities.Problem.matrixes#12]
2020-11-25 20:40:17,053 TRACE  [main] BasicBinder: binding parameter [1] as [BIGINT] - [12]
2020-11-25 20:40:17,053 TRACE  [main] BasicExtractor: extracted value ([id1_0_1_] : [BIGINT]) - [67]
2020-11-25 20:40:17,053 TRACE  [main] BasicExtractor: extracted value ([binary_v2_0_1_] : [BLOB]) - [null]
2020-11-25 20:40:17,054 TRACE  [main] BasicExtractor: extracted value ([float_va3_0_1_] : [DOUBLE]) - [1.0]
2020-11-25 20:40:17,054 TRACE  [main] BasicExtractor: extracted value ([i4_0_1_] : [INTEGER]) - [0]
2020-11-25 20:40:17,054 TRACE  [main] BasicExtractor: extracted value ([is_condi5_0_1_] : [BOOLEAN]) - [true]
2020-11-25 20:40:17,054 TRACE  [main] BasicExtractor: extracted value ([j6_0_1_] : [INTEGER]) - [0]
2020-11-25 20:40:17,054 TRACE  [main] BasicExtractor: extracted value ([problem_7_0_1_] : [BIGINT]) - [12]
2020-11-25 20:40:17,055 TRACE  [main] BasicExtractor: extracted value ([problem_7_0_0_] : [BIGINT]) - [12]
2020-11-25 20:40:17,055 TRACE  [main] BasicExtractor: extracted value ([id1_0_0_] : [BIGINT]) - [67]
2020-11-25 20:40:17,055 TRACE  [main] BasicExtractor: extracted value ([id1_0_1_] : [BIGINT]) - [68]
2020-11-25 20:40:17,055 TRACE  [main] BasicExtractor: extracted value ([binary_v2_0_1_] : [BLOB]) - [null]
2020-11-25 20:40:17,055 TRACE  [main] BasicExtractor: extracted value ([float_va3_0_1_] : [DOUBLE]) - [2.718281828459045]
2020-11-25 20:40:17,056 TRACE  [main] BasicExtractor: extracted value ([i4_0_1_] : [INTEGER]) - [0]
2020-11-25 20:40:17,056 TRACE  [main] BasicExtractor: extracted value ([is_condi5_0_1_] : [BOOLEAN]) - [true]
2020-11-25 20:40:17,056 TRACE  [main] BasicExtractor: extracted value ([j6_0_1_] : [INTEGER]) - [1]
2020-11-25 20:40:17,056 TRACE  [main] BasicExtractor: extracted value ([problem_7_0_1_] : [BIGINT]) - [12]
2020-11-25 20:40:17,056 TRACE  [main] BasicExtractor: extracted value ([problem_7_0_0_] : [BIGINT]) - [12]
2020-11-25 20:40:17,056 TRACE  [main] BasicExtractor: extracted value ([id1_0_0_] : [BIGINT]) - [68]
2020-11-25 20:40:17,057 TRACE  [main] BasicExtractor: extracted value ([id1_0_1_] : [BIGINT]) - [69]
2020-11-25 20:40:17,057 TRACE  [main] BasicExtractor: extracted value ([binary_v2_0_1_] : [BLOB]) - [null]
2020-11-25 20:40:17,057 TRACE  [main] BasicExtractor: extracted value ([float_va3_0_1_] : [DOUBLE]) - [7.38905609893065]
2020-11-25 20:40:17,057 TRACE  [main] BasicExtractor: extracted value ([i4_0_1_] : [INTEGER]) - [0]
2020-11-25 20:40:17,057 TRACE  [main] BasicExtractor: extracted value ([is_condi5_0_1_] : [BOOLEAN]) - [true]
2020-11-25 20:40:17,058 TRACE  [main] BasicExtractor: extracted value ([j6_0_1_] : [INTEGER]) - [2]
2020-11-25 20:40:17,058 TRACE  [main] BasicExtractor: extracted value ([problem_7_0_1_] : [BIGINT]) - [12]
2020-11-25 20:40:17,058 TRACE  [main] BasicExtractor: extracted value ([problem_7_0_0_] : [BIGINT]) - [12]
2020-11-25 20:40:17,058 TRACE  [main] BasicExtractor: extracted value ([id1_0_0_] : [BIGINT]) - [69]
2020-11-25 20:40:17,058 TRACE  [main] BasicExtractor: extracted value ([id1_0_1_] : [BIGINT]) - [70]
2020-11-25 20:40:17,059 TRACE  [main] BasicExtractor: extracted value ([binary_v2_0_1_] : [BLOB]) - [null]
2020-11-25 20:40:17,059 TRACE  [main] BasicExtractor: extracted value ([float_va3_0_1_] : [DOUBLE]) - [20.085536923187668]
2020-11-25 20:40:17,059 TRACE  [main] BasicExtractor: extracted value ([i4_0_1_] : [INTEGER]) - [0]
2020-11-25 20:40:17,059 TRACE  [main] BasicExtractor: extracted value ([is_condi5_0_1_] : [BOOLEAN]) - [true]
2020-11-25 20:40:17,059 TRACE  [main] BasicExtractor: extracted value ([j6_0_1_] : [INTEGER]) - [3]
2020-11-25 20:40:17,059 TRACE  [main] BasicExtractor: extracted value ([problem_7_0_1_] : [BIGINT]) - [12]
2020-11-25 20:40:17,059 TRACE  [main] BasicExtractor: extracted value ([problem_7_0_0_] : [BIGINT]) - [12]
2020-11-25 20:40:17,060 TRACE  [main] BasicExtractor: extracted value ([id1_0_0_] : [BIGINT]) - [70]
2020-11-25 20:40:17,060 TRACE  [main] BasicExtractor: extracted value ([id1_0_1_] : [BIGINT]) - [71]
2020-11-25 20:40:17,060 TRACE  [main] BasicExtractor: extracted value ([binary_v2_0_1_] : [BLOB]) - [null]
2020-11-25 20:40:17,061 TRACE  [main] BasicExtractor: extracted value ([float_va3_0_1_] : [DOUBLE]) - [54.598150033144236]
2020-11-25 20:40:17,061 TRACE  [main] BasicExtractor: extracted value ([i4_0_1_] : [INTEGER]) - [0]
2020-11-25 20:40:17,061 TRACE  [main] BasicExtractor: extracted value ([is_condi5_0_1_] : [BOOLEAN]) - [true]
2020-11-25 20:40:17,061 TRACE  [main] BasicExtractor: extracted value ([j6_0_1_] : [INTEGER]) - [4]
2020-11-25 20:40:17,061 TRACE  [main] BasicExtractor: extracted value ([problem_7_0_1_] : [BIGINT]) - [12]
2020-11-25 20:40:17,061 TRACE  [main] BasicExtractor: extracted value ([problem_7_0_0_] : [BIGINT]) - [12]
2020-11-25 20:40:17,062 TRACE  [main] BasicExtractor: extracted value ([id1_0_0_] : [BIGINT]) - [71]
2020-11-25 20:40:17,062 TRACE  [main] BasicExtractor: extracted value ([id1_0_1_] : [BIGINT]) - [72]
2020-11-25 20:40:17,062 TRACE  [main] BasicExtractor: extracted value ([binary_v2_0_1_] : [BLOB]) - [null]
2020-11-25 20:40:17,062 TRACE  [main] BasicExtractor: extracted value ([float_va3_0_1_] : [DOUBLE]) - [148.4131591025766]
2020-11-25 20:40:17,062 TRACE  [main] BasicExtractor: extracted value ([i4_0_1_] : [INTEGER]) - [0]
2020-11-25 20:40:17,063 TRACE  [main] BasicExtractor: extracted value ([is_condi5_0_1_] : [BOOLEAN]) - [true]
2020-11-25 20:40:17,063 TRACE  [main] BasicExtractor: extracted value ([j6_0_1_] : [INTEGER]) - [5]
2020-11-25 20:40:17,063 TRACE  [main] BasicExtractor: extracted value ([problem_7_0_1_] : [BIGINT]) - [12]
2020-11-25 20:40:17,063 TRACE  [main] BasicExtractor: extracted value ([problem_7_0_0_] : [BIGINT]) - [12]
2020-11-25 20:40:17,063 TRACE  [main] BasicExtractor: extracted value ([id1_0_0_] : [BIGINT]) - [72]
2020-11-25 20:40:17,088 TRACE  [main] BasicBinder: binding parameter [1] as [BIGINT] - [67]
2020-11-25 20:40:17,094 TRACE  [main] BasicBinder: binding parameter [1] as [BIGINT] - [68]
2020-11-25 20:40:17,095 TRACE  [main] BasicBinder: binding parameter [1] as [BIGINT] - [69]
2020-11-25 20:40:17,097 TRACE  [main] BasicBinder: binding parameter [1] as [BIGINT] - [70]
2020-11-25 20:40:17,101 TRACE  [main] BasicBinder: binding parameter [1] as [BIGINT] - [71]
2020-11-25 20:40:17,103 TRACE  [main] BasicBinder: binding parameter [1] as [BIGINT] - [72]
2020-11-25 20:40:17,105 TRACE  [main] BasicBinder: binding parameter [1] as [BIGINT] - [12]
2020-11-25 20:40:17,109 TRACE  [main] BasicBinder: binding parameter [1] as [BIGINT] - [12]
2020-11-25 20:40:17,113 WARN   [main] ProblemService: Problem with 12 is not found
2020-11-25 20:40:18,217 DEBUG  [main] BasicTypeRegistry: Adding type registration boolean -> org.hibernate.type.BooleanType@15fb4566
2020-11-25 20:40:18,217 DEBUG  [main] BasicTypeRegistry: Adding type registration boolean -> org.hibernate.type.BooleanType@15fb4566
2020-11-25 20:40:18,218 DEBUG  [main] BasicTypeRegistry: Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@15fb4566
2020-11-25 20:40:18,218 DEBUG  [main] BasicTypeRegistry: Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@11c713b7
2020-11-25 20:40:18,218 DEBUG  [main] BasicTypeRegistry: Adding type registration true_false -> org.hibernate.type.TrueFalseType@3c232051
2020-11-25 20:40:18,218 DEBUG  [main] BasicTypeRegistry: Adding type registration yes_no -> org.hibernate.type.YesNoType@7741d346
2020-11-25 20:40:18,218 DEBUG  [main] BasicTypeRegistry: Adding type registration byte -> org.hibernate.type.ByteType@6042d663
2020-11-25 20:40:18,218 DEBUG  [main] BasicTypeRegistry: Adding type registration byte -> org.hibernate.type.ByteType@6042d663
2020-11-25 20:40:18,218 DEBUG  [main] BasicTypeRegistry: Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@6042d663
2020-11-25 20:40:18,218 DEBUG  [main] BasicTypeRegistry: Adding type registration character -> org.hibernate.type.CharacterType@3f1a9a53
2020-11-25 20:40:18,219 DEBUG  [main] BasicTypeRegistry: Adding type registration char -> org.hibernate.type.CharacterType@3f1a9a53
2020-11-25 20:40:18,219 DEBUG  [main] BasicTypeRegistry: Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@3f1a9a53
2020-11-25 20:40:18,219 DEBUG  [main] BasicTypeRegistry: Adding type registration short -> org.hibernate.type.ShortType@3a4aadf8
2020-11-25 20:40:18,219 DEBUG  [main] BasicTypeRegistry: Adding type registration short -> org.hibernate.type.ShortType@3a4aadf8
2020-11-25 20:40:18,219 DEBUG  [main] BasicTypeRegistry: Adding type registration java.lang.Short -> org.hibernate.type.ShortType@3a4aadf8
2020-11-25 20:40:18,219 DEBUG  [main] BasicTypeRegistry: Adding type registration integer -> org.hibernate.type.IntegerType@64b70f41
2020-11-25 20:40:18,219 DEBUG  [main] BasicTypeRegistry: Adding type registration int -> org.hibernate.type.IntegerType@64b70f41
2020-11-25 20:40:18,219 DEBUG  [main] BasicTypeRegistry: Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@64b70f41
2020-11-25 20:40:18,219 DEBUG  [main] BasicTypeRegistry: Adding type registration long -> org.hibernate.type.LongType@da4cf09
2020-11-25 20:40:18,220 DEBUG  [main] BasicTypeRegistry: Adding type registration long -> org.hibernate.type.LongType@da4cf09
2020-11-25 20:40:18,220 DEBUG  [main] BasicTypeRegistry: Adding type registration java.lang.Long -> org.hibernate.type.LongType@da4cf09
2020-11-25 20:40:18,220 DEBUG  [main] BasicTypeRegistry: Adding type registration float -> org.hibernate.type.FloatType@39941489
2020-11-25 20:40:18,220 DEBUG  [main] BasicTypeRegistry: Adding type registration float -> org.hibernate.type.FloatType@39941489
2020-11-25 20:40:18,220 DEBUG  [main] BasicTypeRegistry: Adding type registration java.lang.Float -> org.hibernate.type.FloatType@39941489
2020-11-25 20:40:18,225 DEBUG  [main] BasicTypeRegistry: Adding type registration double -> org.hibernate.type.DoubleType@60cb1ed6
2020-11-25 20:40:18,226 DEBUG  [main] BasicTypeRegistry: Adding type registration double -> org.hibernate.type.DoubleType@60cb1ed6
2020-11-25 20:40:18,226 DEBUG  [main] BasicTypeRegistry: Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@60cb1ed6
2020-11-25 20:40:18,226 DEBUG  [main] BasicTypeRegistry: Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@1f9d4b0e
2020-11-25 20:40:18,227 DEBUG  [main] BasicTypeRegistry: Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@1f9d4b0e
2020-11-25 20:40:18,227 DEBUG  [main] BasicTypeRegistry: Adding type registration big_integer -> org.hibernate.type.BigIntegerType@1ca610a0
2020-11-25 20:40:18,228 DEBUG  [main] BasicTypeRegistry: Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@1ca610a0
2020-11-25 20:40:18,228 DEBUG  [main] BasicTypeRegistry: Adding type registration string -> org.hibernate.type.StringType@47829d6d
2020-11-25 20:40:18,228 DEBUG  [main] BasicTypeRegistry: Adding type registration java.lang.String -> org.hibernate.type.StringType@47829d6d
2020-11-25 20:40:18,229 DEBUG  [main] BasicTypeRegistry: Adding type registration nstring -> org.hibernate.type.StringNVarcharType@7a1b8a46
2020-11-25 20:40:18,229 DEBUG  [main] BasicTypeRegistry: Adding type registration ncharacter -> org.hibernate.type.CharacterNCharType@7f13811b
2020-11-25 20:40:18,229 DEBUG  [main] BasicTypeRegistry: Adding type registration url -> org.hibernate.type.UrlType@1983b48a
2020-11-25 20:40:18,229 DEBUG  [main] BasicTypeRegistry: Adding type registration java.net.URL -> org.hibernate.type.UrlType@1983b48a
2020-11-25 20:40:18,229 DEBUG  [main] BasicTypeRegistry: Adding type registration Duration -> org.hibernate.type.DurationType@71e7adbb
2020-11-25 20:40:18,229 DEBUG  [main] BasicTypeRegistry: Adding type registration java.time.Duration -> org.hibernate.type.DurationType@71e7adbb
2020-11-25 20:40:18,230 DEBUG  [main] BasicTypeRegistry: Adding type registration Instant -> org.hibernate.type.InstantType@1e3df614
2020-11-25 20:40:18,230 DEBUG  [main] BasicTypeRegistry: Adding type registration java.time.Instant -> org.hibernate.type.InstantType@1e3df614
2020-11-25 20:40:18,230 DEBUG  [main] BasicTypeRegistry: Adding type registration LocalDateTime -> org.hibernate.type.LocalDateTimeType@4451f60c
2020-11-25 20:40:18,230 DEBUG  [main] BasicTypeRegistry: Adding type registration java.time.LocalDateTime -> org.hibernate.type.LocalDateTimeType@4451f60c
2020-11-25 20:40:18,230 DEBUG  [main] BasicTypeRegistry: Adding type registration LocalDate -> org.hibernate.type.LocalDateType@7730ef88
2020-11-25 20:40:18,230 DEBUG  [main] BasicTypeRegistry: Adding type registration java.time.LocalDate -> org.hibernate.type.LocalDateType@7730ef88
2020-11-25 20:40:18,231 DEBUG  [main] BasicTypeRegistry: Adding type registration LocalTime -> org.hibernate.type.LocalTimeType@45843650
2020-11-25 20:40:18,231 DEBUG  [main] BasicTypeRegistry: Adding type registration java.time.LocalTime -> org.hibernate.type.LocalTimeType@45843650
2020-11-25 20:40:18,232 DEBUG  [main] BasicTypeRegistry: Adding type registration OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@52c9d3d0
2020-11-25 20:40:18,232 DEBUG  [main] BasicTypeRegistry: Adding type registration java.time.OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@52c9d3d0
2020-11-25 20:40:18,232 DEBUG  [main] BasicTypeRegistry: Adding type registration OffsetTime -> org.hibernate.type.OffsetTimeType@6fe595dc
2020-11-25 20:40:18,232 DEBUG  [main] BasicTypeRegistry: Adding type registration java.time.OffsetTime -> org.hibernate.type.OffsetTimeType@6fe595dc
2020-11-25 20:40:18,232 DEBUG  [main] BasicTypeRegistry: Adding type registration ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@337a6d30
2020-11-25 20:40:18,232 DEBUG  [main] BasicTypeRegistry: Adding type registration java.time.ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@337a6d30
2020-11-25 20:40:18,232 DEBUG  [main] BasicTypeRegistry: Adding type registration date -> org.hibernate.type.DateType@1bedc703
2020-11-25 20:40:18,233 DEBUG  [main] BasicTypeRegistry: Adding type registration java.sql.Date -> org.hibernate.type.DateType@1bedc703
2020-11-25 20:40:18,233 DEBUG  [main] BasicTypeRegistry: Adding type registration time -> org.hibernate.type.TimeType@384fda47
2020-11-25 20:40:18,233 DEBUG  [main] BasicTypeRegistry: Adding type registration java.sql.Time -> org.hibernate.type.TimeType@384fda47
2020-11-25 20:40:18,233 DEBUG  [main] BasicTypeRegistry: Adding type registration timestamp -> org.hibernate.type.TimestampType@2da81754
2020-11-25 20:40:18,233 DEBUG  [main] BasicTypeRegistry: Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@2da81754
2020-11-25 20:40:18,233 DEBUG  [main] BasicTypeRegistry: Adding type registration java.util.Date -> org.hibernate.type.TimestampType@2da81754
2020-11-25 20:40:18,233 DEBUG  [main] BasicTypeRegistry: Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@261bd7b
2020-11-25 20:40:18,233 DEBUG  [main] BasicTypeRegistry: Adding type registration calendar -> org.hibernate.type.CalendarType@6002e944
2020-11-25 20:40:18,233 DEBUG  [main] BasicTypeRegistry: Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@6002e944
2020-11-25 20:40:18,234 DEBUG  [main] BasicTypeRegistry: Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@6002e944
2020-11-25 20:40:18,234 DEBUG  [main] BasicTypeRegistry: Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@78a8978a
2020-11-25 20:40:18,234 DEBUG  [main] BasicTypeRegistry: Adding type registration locale -> org.hibernate.type.LocaleType@1e54a6b1
2020-11-25 20:40:18,234 DEBUG  [main] BasicTypeRegistry: Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@1e54a6b1
2020-11-25 20:40:18,234 DEBUG  [main] BasicTypeRegistry: Adding type registration currency -> org.hibernate.type.CurrencyType@5d66e944
2020-11-25 20:40:18,234 DEBUG  [main] BasicTypeRegistry: Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@5d66e944
2020-11-25 20:40:18,234 DEBUG  [main] BasicTypeRegistry: Adding type registration timezone -> org.hibernate.type.TimeZoneType@5042e3d0
2020-11-25 20:40:18,234 DEBUG  [main] BasicTypeRegistry: Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@5042e3d0
2020-11-25 20:40:18,234 DEBUG  [main] BasicTypeRegistry: Adding type registration class -> org.hibernate.type.ClassType@3b0c3951
2020-11-25 20:40:18,234 DEBUG  [main] BasicTypeRegistry: Adding type registration java.lang.Class -> org.hibernate.type.ClassType@3b0c3951
2020-11-25 20:40:18,235 DEBUG  [main] BasicTypeRegistry: Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@3fe512d2
2020-11-25 20:40:18,235 DEBUG  [main] BasicTypeRegistry: Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@3fe512d2
2020-11-25 20:40:18,235 DEBUG  [main] BasicTypeRegistry: Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@6dce59e
2020-11-25 20:40:18,235 DEBUG  [main] BasicTypeRegistry: Adding type registration binary -> org.hibernate.type.BinaryType@38d80d65
2020-11-25 20:40:18,235 DEBUG  [main] BasicTypeRegistry: Adding type registration byte[] -> org.hibernate.type.BinaryType@38d80d65
2020-11-25 20:40:18,235 DEBUG  [main] BasicTypeRegistry: Adding type registration [B -> org.hibernate.type.BinaryType@38d80d65
2020-11-25 20:40:18,235 DEBUG  [main] BasicTypeRegistry: Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@d13960e
2020-11-25 20:40:18,235 DEBUG  [main] BasicTypeRegistry: Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@d13960e
2020-11-25 20:40:18,235 DEBUG  [main] BasicTypeRegistry: Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@d13960e
2020-11-25 20:40:18,235 DEBUG  [main] BasicTypeRegistry: Adding type registration row_version -> org.hibernate.type.RowVersionType@2ac519dc
2020-11-25 20:40:18,236 DEBUG  [main] BasicTypeRegistry: Adding type registration image -> org.hibernate.type.ImageType@3ece79fe
2020-11-25 20:40:18,236 DEBUG  [main] BasicTypeRegistry: Adding type registration characters -> org.hibernate.type.CharArrayType@6b4125ed
2020-11-25 20:40:18,236 DEBUG  [main] BasicTypeRegistry: Adding type registration char[] -> org.hibernate.type.CharArrayType@6b4125ed
2020-11-25 20:40:18,236 DEBUG  [main] BasicTypeRegistry: Adding type registration [C -> org.hibernate.type.CharArrayType@6b4125ed
2020-11-25 20:40:18,236 DEBUG  [main] BasicTypeRegistry: Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@1fecfaea
2020-11-25 20:40:18,236 DEBUG  [main] BasicTypeRegistry: Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@1fecfaea
2020-11-25 20:40:18,236 DEBUG  [main] BasicTypeRegistry: Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@1fecfaea
2020-11-25 20:40:18,236 DEBUG  [main] BasicTypeRegistry: Adding type registration text -> org.hibernate.type.TextType@4bb147ec
2020-11-25 20:40:18,236 DEBUG  [main] BasicTypeRegistry: Adding type registration ntext -> org.hibernate.type.NTextType@59a2388e
2020-11-25 20:40:18,237 DEBUG  [main] BasicTypeRegistry: Adding type registration blob -> org.hibernate.type.BlobType@174721c4
2020-11-25 20:40:18,237 DEBUG  [main] BasicTypeRegistry: Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@174721c4
2020-11-25 20:40:18,237 DEBUG  [main] BasicTypeRegistry: Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@4aeb0e2b
2020-11-25 20:40:18,237 DEBUG  [main] BasicTypeRegistry: Adding type registration clob -> org.hibernate.type.ClobType@590765c4
2020-11-25 20:40:18,237 DEBUG  [main] BasicTypeRegistry: Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@590765c4
2020-11-25 20:40:18,237 DEBUG  [main] BasicTypeRegistry: Adding type registration nclob -> org.hibernate.type.NClobType@64b018f3
2020-11-25 20:40:18,237 DEBUG  [main] BasicTypeRegistry: Adding type registration java.sql.NClob -> org.hibernate.type.NClobType@64b018f3
2020-11-25 20:40:18,237 DEBUG  [main] BasicTypeRegistry: Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@1c240cf2
2020-11-25 20:40:18,237 DEBUG  [main] BasicTypeRegistry: Adding type registration materialized_nclob -> org.hibernate.type.MaterializedNClobType@5809fa26
2020-11-25 20:40:18,237 DEBUG  [main] BasicTypeRegistry: Adding type registration serializable -> org.hibernate.type.SerializableType@3e546734
2020-11-25 20:40:18,237 DEBUG  [main] BasicTypeRegistry: Adding type registration object -> org.hibernate.type.ObjectType@7f0b93b4
2020-11-25 20:40:18,238 DEBUG  [main] BasicTypeRegistry: Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@7f0b93b4
2020-11-25 20:40:18,238 DEBUG  [main] BasicTypeRegistry: Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@3c62c81f
2020-11-25 20:40:18,238 DEBUG  [main] BasicTypeRegistry: Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@6a4d57b7
2020-11-25 20:40:18,238 DEBUG  [main] BasicTypeRegistry: Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@a36ff0b
2020-11-25 20:40:18,238 DEBUG  [main] BasicTypeRegistry: Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@1ecf784f
2020-11-25 20:40:18,238 DEBUG  [main] BasicTypeRegistry: Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@344769b9
2020-11-25 20:40:18,238 DEBUG  [main] BasicTypeRegistry: Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@34376069
2020-11-25 20:40:18,238 DEBUG  [main] BasicTypeRegistry: Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@9c40f43
2020-11-25 20:40:18,238 DEBUG  [main] BasicTypeRegistry: Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@6cac0334
2020-11-25 20:40:18,251 DEBUG  [main] TypeConfiguration$Scope: Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@8aafd70] to MetadataBuildingContext [org.hibernate.boot.internal.MetadataBuildingContextRootImpl@3c717ef2]
2020-11-25 20:40:18,259 DEBUG  [main] EnumType: Using NAMED-based conversion for Enum com.sf.back.entities.Kind
2020-11-25 20:40:18,261 DEBUG  [main] EnumType: Using NAMED-based conversion for Enum com.sf.back.entities.Kind
2020-11-25 20:40:18,314 DEBUG  [main] TypeConfiguration$Scope: Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@8aafd70] to SessionFactoryImpl [org.hibernate.internal.SessionFactoryImpl@643a73fa]
2020-11-25 20:40:18,316 DEBUG  [main] EnumType: Using NAMED-based conversion for Enum com.sf.back.entities.Kind
2020-11-25 20:40:18,316 DEBUG  [main] EnumType: Using NAMED-based conversion for Enum com.sf.back.entities.Kind
2020-11-25 20:40:18,317 DEBUG  [main] EnumType: Using NAMED-based conversion for Enum com.sf.back.entities.Kind
2020-11-25 20:40:18,318 DEBUG  [main] EnumType: Using NAMED-based conversion for Enum com.sf.back.entities.Kind
2020-11-25 20:40:18,329 DEBUG  [main] EnumType: Using NAMED-based conversion for Enum com.sf.back.entities.Kind
2020-11-25 20:40:18,329 DEBUG  [main] EnumType: Using NAMED-based conversion for Enum com.sf.back.entities.Kind
2020-11-25 20:40:18,338 DEBUG  [main] EnumType: Using NAMED-based conversion for Enum com.sf.back.entities.Kind
2020-11-25 20:40:18,349 TRACE  [main] TypeConfiguration$Scope: Handling #sessionFactoryCreated from [org.hibernate.internal.SessionFactoryImpl@643a73fa] for TypeConfiguration
2020-11-25 20:40:18,535 WARN   [main] JpaBaseConfiguration$JpaWebConfiguration: spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2020-11-25 20:40:18,758 TRACE  [main] BasicBinder: binding parameter [1] as [BLOB] - [[70, 105, 110, 100, 32, 97, 108, 108, 32, 114, 111, 111, 116, 115, 32, 111, 102, 32, 103, 105, 118, 101, 110, 32, 112, 111, 108, 121, 110, 111, 109, 105, 97, 108]]
2020-11-25 20:40:18,758 TRACE  [main] BasicBinder: binding parameter [2] as [BOOLEAN] - [false]
2020-11-25 20:40:18,758 TRACE  [main] BasicBinder: binding parameter [3] as [VARCHAR] - [POLYNOMIAL]
2020-11-25 20:40:18,759 TRACE  [main] BasicBinder: binding parameter [4] as [INTEGER] - [1]
2020-11-25 20:40:18,759 TRACE  [main] BasicBinder: binding parameter [5] as [BIGINT] - [null]
2020-11-25 20:40:18,760 TRACE  [main] BasicBinder: binding parameter [6] as [INTEGER] - [6]
2020-11-25 20:40:18,774 TRACE  [main] BasicBinder: binding parameter [1] as [BLOB] - [null]
2020-11-25 20:40:18,774 TRACE  [main] BasicBinder: binding parameter [2] as [DOUBLE] - [1.0]
2020-11-25 20:40:18,774 TRACE  [main] BasicBinder: binding parameter [3] as [INTEGER] - [0]
2020-11-25 20:40:18,774 TRACE  [main] BasicBinder: binding parameter [4] as [BOOLEAN] - [true]
2020-11-25 20:40:18,774 TRACE  [main] BasicBinder: binding parameter [5] as [INTEGER] - [0]
2020-11-25 20:40:18,774 TRACE  [main] BasicBinder: binding parameter [6] as [BIGINT] - [1]
2020-11-25 20:40:18,776 TRACE  [main] BasicBinder: binding parameter [1] as [BLOB] - [null]
2020-11-25 20:40:18,776 TRACE  [main] BasicBinder: binding parameter [2] as [DOUBLE] - [2.0]
2020-11-25 20:40:18,776 TRACE  [main] BasicBinder: binding parameter [3] as [INTEGER] - [0]
2020-11-25 20:40:18,776 TRACE  [main] BasicBinder: binding parameter [4] as [BOOLEAN] - [true]
2020-11-25 20:40:18,777 TRACE  [main] BasicBinder: binding parameter [5] as [INTEGER] - [1]
2020-11-25 20:40:18,777 TRACE  [main] BasicBinder: binding parameter [6] as [BIGINT] - [1]
2020-11-25 20:40:18,781 TRACE  [main] BasicBinder: binding parameter [1] as [BLOB] - [null]
2020-11-25 20:40:18,781 TRACE  [main] BasicBinder: binding parameter [2] as [DOUBLE] - [1.0]
2020-11-25 20:40:18,782 TRACE  [main] BasicBinder: binding parameter [3] as [INTEGER] - [0]
2020-11-25 20:40:18,782 TRACE  [main] BasicBinder: binding parameter [4] as [BOOLEAN] - [true]
2020-11-25 20:40:18,783 TRACE  [main] BasicBinder: binding parameter [5] as [INTEGER] - [2]
2020-11-25 20:40:18,784 TRACE  [main] BasicBinder: binding parameter [6] as [BIGINT] - [1]
2020-11-25 20:40:18,786 TRACE  [main] BasicBinder: binding parameter [1] as [BLOB] - [null]
2020-11-25 20:40:18,786 TRACE  [main] BasicBinder: binding parameter [2] as [DOUBLE] - [1.0]
2020-11-25 20:40:18,786 TRACE  [main] BasicBinder: binding parameter [3] as [INTEGER] - [0]
2020-11-25 20:40:18,787 TRACE  [main] BasicBinder: binding parameter [4] as [BOOLEAN] - [false]
2020-11-25 20:40:18,787 TRACE  [main] BasicBinder: binding parameter [5] as [INTEGER] - [0]
2020-11-25 20:40:18,787 TRACE  [main] BasicBinder: binding parameter [6] as [BIGINT] - [1]
2020-11-25 20:40:18,790 TRACE  [main] BasicBinder: binding parameter [1] as [BLOB] - [null]
2020-11-25 20:40:18,791 TRACE  [main] BasicBinder: binding parameter [2] as [DOUBLE] - [1.0]
2020-11-25 20:40:18,791 TRACE  [main] BasicBinder: binding parameter [3] as [INTEGER] - [0]
2020-11-25 20:40:18,792 TRACE  [main] BasicBinder: binding parameter [4] as [BOOLEAN] - [false]
2020-11-25 20:40:18,792 TRACE  [main] BasicBinder: binding parameter [5] as [INTEGER] - [1]
2020-11-25 20:40:18,792 TRACE  [main] BasicBinder: binding parameter [6] as [BIGINT] - [1]
2020-11-25 20:40:18,900 WARN   [SpringContextShutdownHook] SqlExceptionHelper: SQL Error: 90121, SQLState: 90121
2020-11-25 20:40:18,915 ERROR  [SpringContextShutdownHook] SqlExceptionHelper: Database is already closed (to disable automatic closing at VM shutdown, add ";DB_CLOSE_ON_EXIT=FALSE" to the db URL) [90121-200]
2020-11-25 20:40:18,916 WARN   [SpringContextShutdownHook] SqlExceptionHelper: SQL Error: 90121, SQLState: 90121
2020-11-25 20:40:18,916 ERROR  [SpringContextShutdownHook] SqlExceptionHelper: Database is already closed (to disable automatic closing at VM shutdown, add ";DB_CLOSE_ON_EXIT=FALSE" to the db URL) [90121-200]
2020-11-25 20:40:18,916 WARN   [SpringContextShutdownHook] DisposableBeanAdapter: Invocation of destroy method failed on bean with name 'entityManagerFactory': org.hibernate.exception.JDBCConnectionException: Unable to release JDBC Connection used for DDL execution
2020-11-25 20:40:19,068 TRACE  [SpringContextShutdownHook] TypeConfiguration$Scope: Handling #sessionFactoryClosed from [org.hibernate.internal.SessionFactoryImpl@75c589f2] for TypeConfiguration
2020-11-25 20:40:19,068 DEBUG  [SpringContextShutdownHook] TypeConfiguration$Scope: Un-scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration$Scope@7fe3d89e] from SessionFactory [org.hibernate.internal.SessionFactoryImpl@75c589f2]
2020-11-25 20:40:19,073 TRACE  [SpringContextShutdownHook] TypeConfiguration$Scope: Handling #sessionFactoryClosed from [org.hibernate.internal.SessionFactoryImpl@7f1f60a0] for TypeConfiguration
2020-11-25 20:40:19,073 DEBUG  [SpringContextShutdownHook] TypeConfiguration$Scope: Un-scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration$Scope@40aaf2f7] from SessionFactory [org.hibernate.internal.SessionFactoryImpl@7f1f60a0]
2020-11-25 20:41:12,836 WARN   [main] dev-updater: Use the './' prefix for files in JAR files: 'flow-component-renderer.js', please update your component.
2020-11-25 20:41:22,525 WARN   [main] AnnotationConfigServletWebServerApplicationContext: Exception encountered during context initialization - cancelling refresh attempt: org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'entityManagerFactory' defined in class path resource [org/springframework/boot/autoconfigure/orm/jpa/HibernateJpaConfiguration.class]: Invocation of init method failed; nested exception is org.hibernate.AnnotationException: No identifier specified for entity: com.sf.back.entities.Matrix
2020-11-25 20:41:22,547 WARN   [main] WebappClassLoaderBase: The web application [ROOT] appears to have started a thread named [Thread-4] but has failed to stop it. This is very likely to create a memory leak. Stack trace of thread:
 java.net.DualStackPlainSocketImpl.accept0(Native Method)
 java.net.DualStackPlainSocketImpl.socketAccept(DualStackPlainSocketImpl.java:131)
 java.net.AbstractPlainSocketImpl.accept(AbstractPlainSocketImpl.java:409)
 java.net.PlainSocketImpl.accept(PlainSocketImpl.java:199)
 java.net.ServerSocket.implAccept(ServerSocket.java:545)
 java.net.ServerSocket.accept(ServerSocket.java:513)
 com.vaadin.flow.server.DevServerWatchDog$WatchDogServer.run(DevServerWatchDog.java:58)
 java.lang.Thread.run(Thread.java:748)
2020-11-25 20:41:22,548 WARN   [main] WebappClassLoaderBase: The web application [ROOT] appears to have started a thread named [webpack] but has failed to stop it. This is very likely to create a memory leak. Stack trace of thread:
 java.io.FileInputStream.readBytes(Native Method)
 java.io.FileInputStream.read(FileInputStream.java:255)
 java.io.BufferedInputStream.read1(BufferedInputStream.java:284)
 java.io.BufferedInputStream.read(BufferedInputStream.java:345)
 sun.nio.cs.StreamDecoder.readBytes(StreamDecoder.java:284)
 sun.nio.cs.StreamDecoder.implRead(StreamDecoder.java:326)
 sun.nio.cs.StreamDecoder.read(StreamDecoder.java:178)
 java.io.InputStreamReader.read(InputStreamReader.java:184)
 java.io.BufferedReader.fill(BufferedReader.java:161)
 java.io.BufferedReader.readLine(BufferedReader.java:324)
 java.io.BufferedReader.readLine(BufferedReader.java:389)
 com.vaadin.flow.server.DevModeHandler.readLinesLoop(DevModeHandler.java:450)
 com.vaadin.flow.server.DevModeHandler.lambda$logStream$1(DevModeHandler.java:429)
 com.vaadin.flow.server.DevModeHandler$$Lambda$534/658914902.run(Unknown Source)
 java.lang.Thread.run(Thread.java:748)
2020-11-25 20:41:22,567 ERROR  [main] SpringApplication: Application run failed
org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'entityManagerFactory' defined in class path resource [org/springframework/boot/autoconfigure/orm/jpa/HibernateJpaConfiguration.class]: Invocation of init method failed; nested exception is org.hibernate.AnnotationException: No identifier specified for entity: com.sf.back.entities.Matrix
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1803)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:595)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:517)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:323)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:222)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:321)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:202)
	at org.springframework.context.support.AbstractApplicationContext.getBean(AbstractApplicationContext.java:1108)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:868)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:550)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.refresh(ServletWebServerApplicationContext.java:141)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:747)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:397)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:315)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1226)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1215)
	at com.sf.VaadinMathSolverApplication.main(VaadinMathSolverApplication.java:23)
Caused by: org.hibernate.AnnotationException: No identifier specified for entity: com.sf.back.entities.Matrix
	at org.hibernate.cfg.InheritanceState.determineDefaultAccessType(InheritanceState.java:266)
	at org.hibernate.cfg.InheritanceState.getElementsToProcess(InheritanceState.java:211)
	at org.hibernate.cfg.AnnotationBinder.bindClass(AnnotationBinder.java:781)
	at org.hibernate.boot.model.source.internal.annotations.AnnotationMetadataSourceProcessorImpl.processEntityHierarchies(AnnotationMetadataSourceProcessorImpl.java:254)
	at org.hibernate.boot.model.process.spi.MetadataBuildingProcess$1.processEntityHierarchies(MetadataBuildingProcess.java:230)
	at org.hibernate.boot.model.process.spi.MetadataBuildingProcess.complete(MetadataBuildingProcess.java:273)
	at org.hibernate.jpa.boot.internal.EntityManagerFactoryBuilderImpl.metadata(EntityManagerFactoryBuilderImpl.java:1214)
	at org.hibernate.jpa.boot.internal.EntityManagerFactoryBuilderImpl.build(EntityManagerFactoryBuilderImpl.java:1245)
	at org.springframework.orm.jpa.vendor.SpringHibernateJpaPersistenceProvider.createContainerEntityManagerFactory(SpringHibernateJpaPersistenceProvider.java:58)
	at org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean.createNativeEntityManagerFactory(LocalContainerEntityManagerFactoryBean.java:365)
	at org.springframework.orm.jpa.AbstractEntityManagerFactoryBean.buildNativeEntityManagerFactory(AbstractEntityManagerFactoryBean.java:391)
	at org.springframework.orm.jpa.AbstractEntityManagerFactoryBean.afterPropertiesSet(AbstractEntityManagerFactoryBean.java:378)
	at org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean.afterPropertiesSet(LocalContainerEntityManagerFactoryBean.java:341)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1862)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1799)
	... 16 common frames omitted
2020-11-25 20:44:34,506 DEBUG  [main] BasicTypeRegistry: Adding type registration boolean -> org.hibernate.type.BooleanType@671d03bb
2020-11-25 20:44:34,533 DEBUG  [main] BasicTypeRegistry: Adding type registration boolean -> org.hibernate.type.BooleanType@671d03bb
2020-11-25 20:44:34,534 DEBUG  [main] BasicTypeRegistry: Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@671d03bb
2020-11-25 20:44:34,534 DEBUG  [main] BasicTypeRegistry: Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@73894c5a
2020-11-25 20:44:34,535 DEBUG  [main] BasicTypeRegistry: Adding type registration true_false -> org.hibernate.type.TrueFalseType@28157173
2020-11-25 20:44:34,536 DEBUG  [main] BasicTypeRegistry: Adding type registration yes_no -> org.hibernate.type.YesNoType@3fbe503c
2020-11-25 20:44:34,537 DEBUG  [main] BasicTypeRegistry: Adding type registration byte -> org.hibernate.type.ByteType@52454457
2020-11-25 20:44:34,537 DEBUG  [main] BasicTypeRegistry: Adding type registration byte -> org.hibernate.type.ByteType@52454457
2020-11-25 20:44:34,537 DEBUG  [main] BasicTypeRegistry: Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@52454457
2020-11-25 20:44:34,538 DEBUG  [main] BasicTypeRegistry: Adding type registration character -> org.hibernate.type.CharacterType@24043ec5
2020-11-25 20:44:34,539 DEBUG  [main] BasicTypeRegistry: Adding type registration char -> org.hibernate.type.CharacterType@24043ec5
2020-11-25 20:44:34,539 DEBUG  [main] BasicTypeRegistry: Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@24043ec5
2020-11-25 20:44:34,540 DEBUG  [main] BasicTypeRegistry: Adding type registration short -> org.hibernate.type.ShortType@1ca3d25b
2020-11-25 20:44:34,541 DEBUG  [main] BasicTypeRegistry: Adding type registration short -> org.hibernate.type.ShortType@1ca3d25b
2020-11-25 20:44:34,541 DEBUG  [main] BasicTypeRegistry: Adding type registration java.lang.Short -> org.hibernate.type.ShortType@1ca3d25b
2020-11-25 20:44:34,542 DEBUG  [main] BasicTypeRegistry: Adding type registration integer -> org.hibernate.type.IntegerType@7bbfc5ff
2020-11-25 20:44:34,543 DEBUG  [main] BasicTypeRegistry: Adding type registration int -> org.hibernate.type.IntegerType@7bbfc5ff
2020-11-25 20:44:34,543 DEBUG  [main] BasicTypeRegistry: Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@7bbfc5ff
2020-11-25 20:44:34,544 DEBUG  [main] BasicTypeRegistry: Adding type registration long -> org.hibernate.type.LongType@5f8d9767
2020-11-25 20:44:34,545 DEBUG  [main] BasicTypeRegistry: Adding type registration long -> org.hibernate.type.LongType@5f8d9767
2020-11-25 20:44:34,545 DEBUG  [main] BasicTypeRegistry: Adding type registration java.lang.Long -> org.hibernate.type.LongType@5f8d9767
2020-11-25 20:44:34,546 DEBUG  [main] BasicTypeRegistry: Adding type registration float -> org.hibernate.type.FloatType@1980a3f
2020-11-25 20:44:34,546 DEBUG  [main] BasicTypeRegistry: Adding type registration float -> org.hibernate.type.FloatType@1980a3f
2020-11-25 20:44:34,547 DEBUG  [main] BasicTypeRegistry: Adding type registration java.lang.Float -> org.hibernate.type.FloatType@1980a3f
2020-11-25 20:44:34,548 DEBUG  [main] BasicTypeRegistry: Adding type registration double -> org.hibernate.type.DoubleType@6f5d0190
2020-11-25 20:44:34,548 DEBUG  [main] BasicTypeRegistry: Adding type registration double -> org.hibernate.type.DoubleType@6f5d0190
2020-11-25 20:44:34,549 DEBUG  [main] BasicTypeRegistry: Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@6f5d0190
2020-11-25 20:44:34,550 DEBUG  [main] BasicTypeRegistry: Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@1e5eb20a
2020-11-25 20:44:34,550 DEBUG  [main] BasicTypeRegistry: Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@1e5eb20a
2020-11-25 20:44:34,552 DEBUG  [main] BasicTypeRegistry: Adding type registration big_integer -> org.hibernate.type.BigIntegerType@1e8fb66f
2020-11-25 20:44:34,552 DEBUG  [main] BasicTypeRegistry: Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@1e8fb66f
2020-11-25 20:44:34,554 DEBUG  [main] BasicTypeRegistry: Adding type registration string -> org.hibernate.type.StringType@49433c98
2020-11-25 20:44:34,555 DEBUG  [main] BasicTypeRegistry: Adding type registration java.lang.String -> org.hibernate.type.StringType@49433c98
2020-11-25 20:44:34,556 DEBUG  [main] BasicTypeRegistry: Adding type registration nstring -> org.hibernate.type.StringNVarcharType@1775c4e7
2020-11-25 20:44:34,557 DEBUG  [main] BasicTypeRegistry: Adding type registration ncharacter -> org.hibernate.type.CharacterNCharType@43f03c23
2020-11-25 20:44:34,558 DEBUG  [main] BasicTypeRegistry: Adding type registration url -> org.hibernate.type.UrlType@59fc6d05
2020-11-25 20:44:34,559 DEBUG  [main] BasicTypeRegistry: Adding type registration java.net.URL -> org.hibernate.type.UrlType@59fc6d05
2020-11-25 20:44:34,561 DEBUG  [main] BasicTypeRegistry: Adding type registration Duration -> org.hibernate.type.DurationType@629a9f26
2020-11-25 20:44:34,561 DEBUG  [main] BasicTypeRegistry: Adding type registration java.time.Duration -> org.hibernate.type.DurationType@629a9f26
2020-11-25 20:44:34,563 DEBUG  [main] BasicTypeRegistry: Adding type registration Instant -> org.hibernate.type.InstantType@32091c14
2020-11-25 20:44:34,563 DEBUG  [main] BasicTypeRegistry: Adding type registration java.time.Instant -> org.hibernate.type.InstantType@32091c14
2020-11-25 20:44:34,565 DEBUG  [main] BasicTypeRegistry: Adding type registration LocalDateTime -> org.hibernate.type.LocalDateTimeType@6579cdbb
2020-11-25 20:44:34,565 DEBUG  [main] BasicTypeRegistry: Adding type registration java.time.LocalDateTime -> org.hibernate.type.LocalDateTimeType@6579cdbb
2020-11-25 20:44:34,566 DEBUG  [main] BasicTypeRegistry: Adding type registration LocalDate -> org.hibernate.type.LocalDateType@6b357eb6
2020-11-25 20:44:34,567 DEBUG  [main] BasicTypeRegistry: Adding type registration java.time.LocalDate -> org.hibernate.type.LocalDateType@6b357eb6
2020-11-25 20:44:34,569 DEBUG  [main] BasicTypeRegistry: Adding type registration LocalTime -> org.hibernate.type.LocalTimeType@66f5a02e
2020-11-25 20:44:34,570 DEBUG  [main] BasicTypeRegistry: Adding type registration java.time.LocalTime -> org.hibernate.type.LocalTimeType@66f5a02e
2020-11-25 20:44:34,571 DEBUG  [main] BasicTypeRegistry: Adding type registration OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@72443081
2020-11-25 20:44:34,572 DEBUG  [main] BasicTypeRegistry: Adding type registration java.time.OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@72443081
2020-11-25 20:44:34,574 DEBUG  [main] BasicTypeRegistry: Adding type registration OffsetTime -> org.hibernate.type.OffsetTimeType@17207f5b
2020-11-25 20:44:34,574 DEBUG  [main] BasicTypeRegistry: Adding type registration java.time.OffsetTime -> org.hibernate.type.OffsetTimeType@17207f5b
2020-11-25 20:44:34,576 DEBUG  [main] BasicTypeRegistry: Adding type registration ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@58fd1214
2020-11-25 20:44:34,577 DEBUG  [main] BasicTypeRegistry: Adding type registration java.time.ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@58fd1214
2020-11-25 20:44:34,578 DEBUG  [main] BasicTypeRegistry: Adding type registration date -> org.hibernate.type.DateType@157d3a45
2020-11-25 20:44:34,578 DEBUG  [main] BasicTypeRegistry: Adding type registration java.sql.Date -> org.hibernate.type.DateType@157d3a45
2020-11-25 20:44:34,580 DEBUG  [main] BasicTypeRegistry: Adding type registration time -> org.hibernate.type.TimeType@18d11527
2020-11-25 20:44:34,580 DEBUG  [main] BasicTypeRegistry: Adding type registration java.sql.Time -> org.hibernate.type.TimeType@18d11527
2020-11-25 20:44:34,582 DEBUG  [main] BasicTypeRegistry: Adding type registration timestamp -> org.hibernate.type.TimestampType@3663d0ba
2020-11-25 20:44:34,582 DEBUG  [main] BasicTypeRegistry: Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@3663d0ba
2020-11-25 20:44:34,582 DEBUG  [main] BasicTypeRegistry: Adding type registration java.util.Date -> org.hibernate.type.TimestampType@3663d0ba
2020-11-25 20:44:34,584 DEBUG  [main] BasicTypeRegistry: Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@566e142
2020-11-25 20:44:34,586 DEBUG  [main] BasicTypeRegistry: Adding type registration calendar -> org.hibernate.type.CalendarType@6f9e08d4
2020-11-25 20:44:34,586 DEBUG  [main] BasicTypeRegistry: Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@6f9e08d4
2020-11-25 20:44:34,586 DEBUG  [main] BasicTypeRegistry: Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@6f9e08d4
2020-11-25 20:44:34,587 DEBUG  [main] BasicTypeRegistry: Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@7f4596d0
2020-11-25 20:44:34,589 DEBUG  [main] BasicTypeRegistry: Adding type registration locale -> org.hibernate.type.LocaleType@f171912
2020-11-25 20:44:34,589 DEBUG  [main] BasicTypeRegistry: Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@f171912
2020-11-25 20:44:34,590 DEBUG  [main] BasicTypeRegistry: Adding type registration currency -> org.hibernate.type.CurrencyType@f238e4f
2020-11-25 20:44:34,591 DEBUG  [main] BasicTypeRegistry: Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@f238e4f
2020-11-25 20:44:34,592 DEBUG  [main] BasicTypeRegistry: Adding type registration timezone -> org.hibernate.type.TimeZoneType@469a7575
2020-11-25 20:44:34,592 DEBUG  [main] BasicTypeRegistry: Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@469a7575
2020-11-25 20:44:34,593 DEBUG  [main] BasicTypeRegistry: Adding type registration class -> org.hibernate.type.ClassType@1c34365c
2020-11-25 20:44:34,593 DEBUG  [main] BasicTypeRegistry: Adding type registration java.lang.Class -> org.hibernate.type.ClassType@1c34365c
2020-11-25 20:44:34,594 DEBUG  [main] BasicTypeRegistry: Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@60f77af
2020-11-25 20:44:34,595 DEBUG  [main] BasicTypeRegistry: Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@60f77af
2020-11-25 20:44:34,595 DEBUG  [main] BasicTypeRegistry: Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@422ab737
2020-11-25 20:44:34,597 DEBUG  [main] BasicTypeRegistry: Adding type registration binary -> org.hibernate.type.BinaryType@11381415
2020-11-25 20:44:34,598 DEBUG  [main] BasicTypeRegistry: Adding type registration byte[] -> org.hibernate.type.BinaryType@11381415
2020-11-25 20:44:34,598 DEBUG  [main] BasicTypeRegistry: Adding type registration [B -> org.hibernate.type.BinaryType@11381415
2020-11-25 20:44:34,599 DEBUG  [main] BasicTypeRegistry: Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@5403799b
2020-11-25 20:44:34,599 DEBUG  [main] BasicTypeRegistry: Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@5403799b
2020-11-25 20:44:34,599 DEBUG  [main] BasicTypeRegistry: Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@5403799b
2020-11-25 20:44:34,600 DEBUG  [main] BasicTypeRegistry: Adding type registration row_version -> org.hibernate.type.RowVersionType@27f3f512
2020-11-25 20:44:34,601 DEBUG  [main] BasicTypeRegistry: Adding type registration image -> org.hibernate.type.ImageType@122635ef
2020-11-25 20:44:34,602 DEBUG  [main] BasicTypeRegistry: Adding type registration characters -> org.hibernate.type.CharArrayType@3cc79c02
2020-11-25 20:44:34,602 DEBUG  [main] BasicTypeRegistry: Adding type registration char[] -> org.hibernate.type.CharArrayType@3cc79c02
2020-11-25 20:44:34,603 DEBUG  [main] BasicTypeRegistry: Adding type registration [C -> org.hibernate.type.CharArrayType@3cc79c02
2020-11-25 20:44:34,604 DEBUG  [main] BasicTypeRegistry: Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@78da899f
2020-11-25 20:44:34,604 DEBUG  [main] BasicTypeRegistry: Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@78da899f
2020-11-25 20:44:34,604 DEBUG  [main] BasicTypeRegistry: Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@78da899f
2020-11-25 20:44:34,605 DEBUG  [main] BasicTypeRegistry: Adding type registration text -> org.hibernate.type.TextType@33d60b7e
2020-11-25 20:44:34,606 DEBUG  [main] BasicTypeRegistry: Adding type registration ntext -> org.hibernate.type.NTextType@483f286e
2020-11-25 20:44:34,607 DEBUG  [main] BasicTypeRegistry: Adding type registration blob -> org.hibernate.type.BlobType@2db6d68d
2020-11-25 20:44:34,608 DEBUG  [main] BasicTypeRegistry: Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@2db6d68d
2020-11-25 20:44:34,608 DEBUG  [main] BasicTypeRegistry: Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@cde8c6c
2020-11-25 20:44:34,609 DEBUG  [main] BasicTypeRegistry: Adding type registration clob -> org.hibernate.type.ClobType@7126e26
2020-11-25 20:44:34,610 DEBUG  [main] BasicTypeRegistry: Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@7126e26
2020-11-25 20:44:34,611 DEBUG  [main] BasicTypeRegistry: Adding type registration nclob -> org.hibernate.type.NClobType@2d5a1588
2020-11-25 20:44:34,611 DEBUG  [main] BasicTypeRegistry: Adding type registration java.sql.NClob -> org.hibernate.type.NClobType@2d5a1588
2020-11-25 20:44:34,612 DEBUG  [main] BasicTypeRegistry: Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@193bb809
2020-11-25 20:44:34,613 DEBUG  [main] BasicTypeRegistry: Adding type registration materialized_nclob -> org.hibernate.type.MaterializedNClobType@581b1c08
2020-11-25 20:44:34,615 DEBUG  [main] BasicTypeRegistry: Adding type registration serializable -> org.hibernate.type.SerializableType@69cd7630
2020-11-25 20:44:34,618 DEBUG  [main] BasicTypeRegistry: Adding type registration object -> org.hibernate.type.ObjectType@5ae15
2020-11-25 20:44:34,618 DEBUG  [main] BasicTypeRegistry: Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@5ae15
2020-11-25 20:44:34,619 DEBUG  [main] BasicTypeRegistry: Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@52d3fafd
2020-11-25 20:44:34,619 DEBUG  [main] BasicTypeRegistry: Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@7f0b93b4
2020-11-25 20:44:34,619 DEBUG  [main] BasicTypeRegistry: Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@1376883
2020-11-25 20:44:34,620 DEBUG  [main] BasicTypeRegistry: Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@1f736d00
2020-11-25 20:44:34,620 DEBUG  [main] BasicTypeRegistry: Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@523a7801
2020-11-25 20:44:34,620 DEBUG  [main] BasicTypeRegistry: Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@718fd7c1
2020-11-25 20:44:34,620 DEBUG  [main] BasicTypeRegistry: Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@4bc6da03
2020-11-25 20:44:34,620 DEBUG  [main] BasicTypeRegistry: Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@4f59a516
2020-11-25 20:44:35,256 DEBUG  [main] TypeConfiguration$Scope: Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@37c7766e] to MetadataBuildingContext [org.hibernate.boot.internal.MetadataBuildingContextRootImpl@3fb450d7]
2020-11-25 20:44:35,741 DEBUG  [main] EnumType: Using NAMED-based conversion for Enum com.sf.back.entities.Kind
2020-11-25 20:44:35,872 DEBUG  [main] EnumType: Using NAMED-based conversion for Enum com.sf.back.entities.Kind
2020-11-25 20:44:36,075 DEBUG  [main] TypeConfiguration$Scope: Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@37c7766e] to SessionFactoryImpl [org.hibernate.internal.SessionFactoryImpl@1d283d1]
2020-11-25 20:44:36,195 DEBUG  [main] EnumType: Using NAMED-based conversion for Enum com.sf.back.entities.Kind
2020-11-25 20:44:36,196 DEBUG  [main] EnumType: Using NAMED-based conversion for Enum com.sf.back.entities.Kind
2020-11-25 20:44:36,818 DEBUG  [main] EnumType: Using NAMED-based conversion for Enum com.sf.back.entities.Kind
2020-11-25 20:44:36,818 DEBUG  [main] EnumType: Using NAMED-based conversion for Enum com.sf.back.entities.Kind
2020-11-25 20:44:36,972 DEBUG  [main] EnumType: Using NAMED-based conversion for Enum com.sf.back.entities.Kind
2020-11-25 20:44:36,972 DEBUG  [main] EnumType: Using NAMED-based conversion for Enum com.sf.back.entities.Kind
2020-11-25 20:44:37,007 DEBUG  [main] EnumType: Using NAMED-based conversion for Enum com.sf.back.entities.Kind
2020-11-25 20:44:37,033 TRACE  [main] TypeConfiguration$Scope: Handling #sessionFactoryCreated from [org.hibernate.internal.SessionFactoryImpl@1d283d1] for TypeConfiguration
2020-11-25 20:44:37,586 WARN   [main] GlobalSettings: Dozer configuration file not found: dozer.properties.  Using defaults for all Dozer global properties.
2020-11-25 20:44:38,351 WARN   [main] JpaBaseConfiguration$JpaWebConfiguration: spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2020-11-25 20:44:39,718 TRACE  [main] BasicBinder: binding parameter [1] as [BLOB] - [[70, 105, 110, 100, 32, 97, 108, 108, 32, 114, 111, 111, 116, 115, 32, 111, 102, 32, 103, 105, 118, 101, 110, 32, 112, 111, 108, 121, 110, 111, 109, 105, 97, 108]]
2020-11-25 20:44:39,720 TRACE  [main] BasicBinder: binding parameter [2] as [BOOLEAN] - [false]
2020-11-25 20:44:39,721 TRACE  [main] BasicBinder: binding parameter [3] as [VARCHAR] - [POLYNOMIAL]
2020-11-25 20:44:39,722 TRACE  [main] BasicBinder: binding parameter [4] as [INTEGER] - [1]
2020-11-25 20:44:39,724 TRACE  [main] BasicBinder: binding parameter [5] as [BIGINT] - [null]
2020-11-25 20:44:39,724 TRACE  [main] BasicBinder: binding parameter [6] as [INTEGER] - [6]
2020-11-25 20:44:39,724 TRACE  [main] BasicBinder: binding parameter [7] as [BIGINT] - [1]
2020-11-25 20:44:39,732 TRACE  [main] BasicBinder: binding parameter [1] as [BLOB] - [null]
2020-11-25 20:44:39,733 TRACE  [main] BasicBinder: binding parameter [2] as [DOUBLE] - [1.0]
2020-11-25 20:44:39,734 TRACE  [main] BasicBinder: binding parameter [3] as [INTEGER] - [0]
2020-11-25 20:44:39,735 TRACE  [main] BasicBinder: binding parameter [4] as [BOOLEAN] - [true]
2020-11-25 20:44:39,736 TRACE  [main] BasicBinder: binding parameter [5] as [INTEGER] - [0]
2020-11-25 20:44:39,736 TRACE  [main] BasicBinder: binding parameter [6] as [BIGINT] - [1]
2020-11-25 20:44:39,737 TRACE  [main] BasicBinder: binding parameter [7] as [BIGINT] - [2]
2020-11-25 20:44:39,738 TRACE  [main] BasicBinder: binding parameter [1] as [BLOB] - [null]
2020-11-25 20:44:39,739 TRACE  [main] BasicBinder: binding parameter [2] as [DOUBLE] - [2.0]
2020-11-25 20:44:39,740 TRACE  [main] BasicBinder: binding parameter [3] as [INTEGER] - [0]
2020-11-25 20:44:39,740 TRACE  [main] BasicBinder: binding parameter [4] as [BOOLEAN] - [true]
2020-11-25 20:44:39,741 TRACE  [main] BasicBinder: binding parameter [5] as [INTEGER] - [1]
2020-11-25 20:44:39,741 TRACE  [main] BasicBinder: binding parameter [6] as [BIGINT] - [1]
2020-11-25 20:44:39,741 TRACE  [main] BasicBinder: binding parameter [7] as [BIGINT] - [3]
2020-11-25 20:44:39,743 TRACE  [main] BasicBinder: binding parameter [1] as [BLOB] - [null]
2020-11-25 20:44:39,743 TRACE  [main] BasicBinder: binding parameter [2] as [DOUBLE] - [1.0]
2020-11-25 20:44:39,744 TRACE  [main] BasicBinder: binding parameter [3] as [INTEGER] - [0]
2020-11-25 20:44:39,744 TRACE  [main] BasicBinder: binding parameter [4] as [BOOLEAN] - [true]
2020-11-25 20:44:39,744 TRACE  [main] BasicBinder: binding parameter [5] as [INTEGER] - [2]
2020-11-25 20:44:39,745 TRACE  [main] BasicBinder: binding parameter [6] as [BIGINT] - [1]
2020-11-25 20:44:39,746 TRACE  [main] BasicBinder: binding parameter [7] as [BIGINT] - [4]
2020-11-25 20:44:39,748 TRACE  [main] BasicBinder: binding parameter [1] as [BLOB] - [null]
2020-11-25 20:44:39,749 TRACE  [main] BasicBinder: binding parameter [2] as [DOUBLE] - [1.0]
2020-11-25 20:44:39,749 TRACE  [main] BasicBinder: binding parameter [3] as [INTEGER] - [0]
2020-11-25 20:44:39,750 TRACE  [main] BasicBinder: binding parameter [4] as [BOOLEAN] - [false]
2020-11-25 20:44:39,750 TRACE  [main] BasicBinder: binding parameter [5] as [INTEGER] - [0]
2020-11-25 20:44:39,751 TRACE  [main] BasicBinder: binding parameter [6] as [BIGINT] - [1]
2020-11-25 20:44:39,751 TRACE  [main] BasicBinder: binding parameter [7] as [BIGINT] - [5]
2020-11-25 20:44:39,752 TRACE  [main] BasicBinder: binding parameter [1] as [BLOB] - [null]
2020-11-25 20:44:39,753 TRACE  [main] BasicBinder: binding parameter [2] as [DOUBLE] - [1.0]
2020-11-25 20:44:39,753 TRACE  [main] BasicBinder: binding parameter [3] as [INTEGER] - [0]
2020-11-25 20:44:39,753 TRACE  [main] BasicBinder: binding parameter [4] as [BOOLEAN] - [false]
2020-11-25 20:44:39,753 TRACE  [main] BasicBinder: binding parameter [5] as [INTEGER] - [1]
2020-11-25 20:44:39,754 TRACE  [main] BasicBinder: binding parameter [6] as [BIGINT] - [1]
2020-11-25 20:44:39,754 TRACE  [main] BasicBinder: binding parameter [7] as [BIGINT] - [6]
2020-11-25 20:44:45,248 DEBUG  [main] BasicTypeRegistry: Adding type registration boolean -> org.hibernate.type.BooleanType@671d03bb
2020-11-25 20:44:45,249 DEBUG  [main] BasicTypeRegistry: Adding type registration boolean -> org.hibernate.type.BooleanType@671d03bb
2020-11-25 20:44:45,249 DEBUG  [main] BasicTypeRegistry: Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@671d03bb
2020-11-25 20:44:45,250 DEBUG  [main] BasicTypeRegistry: Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@73894c5a
2020-11-25 20:44:45,250 DEBUG  [main] BasicTypeRegistry: Adding type registration true_false -> org.hibernate.type.TrueFalseType@28157173
2020-11-25 20:44:45,253 DEBUG  [main] BasicTypeRegistry: Adding type registration yes_no -> org.hibernate.type.YesNoType@3fbe503c
2020-11-25 20:44:45,254 DEBUG  [main] BasicTypeRegistry: Adding type registration byte -> org.hibernate.type.ByteType@52454457
2020-11-25 20:44:45,254 DEBUG  [main] BasicTypeRegistry: Adding type registration byte -> org.hibernate.type.ByteType@52454457
2020-11-25 20:44:45,255 DEBUG  [main] BasicTypeRegistry: Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@52454457
2020-11-25 20:44:45,255 DEBUG  [main] BasicTypeRegistry: Adding type registration character -> org.hibernate.type.CharacterType@24043ec5
2020-11-25 20:44:45,256 DEBUG  [main] BasicTypeRegistry: Adding type registration char -> org.hibernate.type.CharacterType@24043ec5
2020-11-25 20:44:45,256 DEBUG  [main] BasicTypeRegistry: Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@24043ec5
2020-11-25 20:44:45,256 DEBUG  [main] BasicTypeRegistry: Adding type registration short -> org.hibernate.type.ShortType@1ca3d25b
2020-11-25 20:44:45,257 DEBUG  [main] BasicTypeRegistry: Adding type registration short -> org.hibernate.type.ShortType@1ca3d25b
2020-11-25 20:44:45,258 DEBUG  [main] BasicTypeRegistry: Adding type registration java.lang.Short -> org.hibernate.type.ShortType@1ca3d25b
2020-11-25 20:44:45,258 DEBUG  [main] BasicTypeRegistry: Adding type registration integer -> org.hibernate.type.IntegerType@7bbfc5ff
2020-11-25 20:44:45,258 DEBUG  [main] BasicTypeRegistry: Adding type registration int -> org.hibernate.type.IntegerType@7bbfc5ff
2020-11-25 20:44:45,258 DEBUG  [main] BasicTypeRegistry: Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@7bbfc5ff
2020-11-25 20:44:45,258 DEBUG  [main] BasicTypeRegistry: Adding type registration long -> org.hibernate.type.LongType@5f8d9767
2020-11-25 20:44:45,259 DEBUG  [main] BasicTypeRegistry: Adding type registration long -> org.hibernate.type.LongType@5f8d9767
2020-11-25 20:44:45,260 DEBUG  [main] BasicTypeRegistry: Adding type registration java.lang.Long -> org.hibernate.type.LongType@5f8d9767
2020-11-25 20:44:45,261 DEBUG  [main] BasicTypeRegistry: Adding type registration float -> org.hibernate.type.FloatType@1980a3f
2020-11-25 20:44:45,261 DEBUG  [main] BasicTypeRegistry: Adding type registration float -> org.hibernate.type.FloatType@1980a3f
2020-11-25 20:44:45,262 DEBUG  [main] BasicTypeRegistry: Adding type registration java.lang.Float -> org.hibernate.type.FloatType@1980a3f
2020-11-25 20:44:45,263 DEBUG  [main] BasicTypeRegistry: Adding type registration double -> org.hibernate.type.DoubleType@6f5d0190
2020-11-25 20:44:45,263 DEBUG  [main] BasicTypeRegistry: Adding type registration double -> org.hibernate.type.DoubleType@6f5d0190
2020-11-25 20:44:45,264 DEBUG  [main] BasicTypeRegistry: Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@6f5d0190
2020-11-25 20:44:45,264 DEBUG  [main] BasicTypeRegistry: Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@1e5eb20a
2020-11-25 20:44:45,264 DEBUG  [main] BasicTypeRegistry: Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@1e5eb20a
2020-11-25 20:44:45,265 DEBUG  [main] BasicTypeRegistry: Adding type registration big_integer -> org.hibernate.type.BigIntegerType@1e8fb66f
2020-11-25 20:44:45,265 DEBUG  [main] BasicTypeRegistry: Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@1e8fb66f
2020-11-25 20:44:45,265 DEBUG  [main] BasicTypeRegistry: Adding type registration string -> org.hibernate.type.StringType@49433c98
2020-11-25 20:44:45,266 DEBUG  [main] BasicTypeRegistry: Adding type registration java.lang.String -> org.hibernate.type.StringType@49433c98
2020-11-25 20:44:45,266 DEBUG  [main] BasicTypeRegistry: Adding type registration nstring -> org.hibernate.type.StringNVarcharType@1775c4e7
2020-11-25 20:44:45,266 DEBUG  [main] BasicTypeRegistry: Adding type registration ncharacter -> org.hibernate.type.CharacterNCharType@43f03c23
2020-11-25 20:44:45,266 DEBUG  [main] BasicTypeRegistry: Adding type registration url -> org.hibernate.type.UrlType@59fc6d05
2020-11-25 20:44:45,267 DEBUG  [main] BasicTypeRegistry: Adding type registration java.net.URL -> org.hibernate.type.UrlType@59fc6d05
2020-11-25 20:44:45,267 DEBUG  [main] BasicTypeRegistry: Adding type registration Duration -> org.hibernate.type.DurationType@629a9f26
2020-11-25 20:44:45,267 DEBUG  [main] BasicTypeRegistry: Adding type registration java.time.Duration -> org.hibernate.type.DurationType@629a9f26
2020-11-25 20:44:45,268 DEBUG  [main] BasicTypeRegistry: Adding type registration Instant -> org.hibernate.type.InstantType@32091c14
2020-11-25 20:44:45,268 DEBUG  [main] BasicTypeRegistry: Adding type registration java.time.Instant -> org.hibernate.type.InstantType@32091c14
2020-11-25 20:44:45,269 DEBUG  [main] BasicTypeRegistry: Adding type registration LocalDateTime -> org.hibernate.type.LocalDateTimeType@6579cdbb
2020-11-25 20:44:45,269 DEBUG  [main] BasicTypeRegistry: Adding type registration java.time.LocalDateTime -> org.hibernate.type.LocalDateTimeType@6579cdbb
2020-11-25 20:44:45,270 DEBUG  [main] BasicTypeRegistry: Adding type registration LocalDate -> org.hibernate.type.LocalDateType@6b357eb6
2020-11-25 20:44:45,271 DEBUG  [main] BasicTypeRegistry: Adding type registration java.time.LocalDate -> org.hibernate.type.LocalDateType@6b357eb6
2020-11-25 20:44:45,271 DEBUG  [main] BasicTypeRegistry: Adding type registration LocalTime -> org.hibernate.type.LocalTimeType@66f5a02e
2020-11-25 20:44:45,272 DEBUG  [main] BasicTypeRegistry: Adding type registration java.time.LocalTime -> org.hibernate.type.LocalTimeType@66f5a02e
2020-11-25 20:44:45,272 DEBUG  [main] BasicTypeRegistry: Adding type registration OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@72443081
2020-11-25 20:44:45,272 DEBUG  [main] BasicTypeRegistry: Adding type registration java.time.OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@72443081
2020-11-25 20:44:45,273 DEBUG  [main] BasicTypeRegistry: Adding type registration OffsetTime -> org.hibernate.type.OffsetTimeType@17207f5b
2020-11-25 20:44:45,273 DEBUG  [main] BasicTypeRegistry: Adding type registration java.time.OffsetTime -> org.hibernate.type.OffsetTimeType@17207f5b
2020-11-25 20:44:45,274 DEBUG  [main] BasicTypeRegistry: Adding type registration ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@58fd1214
2020-11-25 20:44:45,274 DEBUG  [main] BasicTypeRegistry: Adding type registration java.time.ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@58fd1214
2020-11-25 20:44:45,274 DEBUG  [main] BasicTypeRegistry: Adding type registration date -> org.hibernate.type.DateType@157d3a45
2020-11-25 20:44:45,274 DEBUG  [main] BasicTypeRegistry: Adding type registration java.sql.Date -> org.hibernate.type.DateType@157d3a45
2020-11-25 20:44:45,275 DEBUG  [main] BasicTypeRegistry: Adding type registration time -> org.hibernate.type.TimeType@18d11527
2020-11-25 20:44:45,275 DEBUG  [main] BasicTypeRegistry: Adding type registration java.sql.Time -> org.hibernate.type.TimeType@18d11527
2020-11-25 20:44:45,275 DEBUG  [main] BasicTypeRegistry: Adding type registration timestamp -> org.hibernate.type.TimestampType@3663d0ba
2020-11-25 20:44:45,275 DEBUG  [main] BasicTypeRegistry: Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@3663d0ba
2020-11-25 20:44:45,276 DEBUG  [main] BasicTypeRegistry: Adding type registration java.util.Date -> org.hibernate.type.TimestampType@3663d0ba
2020-11-25 20:44:45,276 DEBUG  [main] BasicTypeRegistry: Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@566e142
2020-11-25 20:44:45,277 DEBUG  [main] BasicTypeRegistry: Adding type registration calendar -> org.hibernate.type.CalendarType@6f9e08d4
2020-11-25 20:44:45,277 DEBUG  [main] BasicTypeRegistry: Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@6f9e08d4
2020-11-25 20:44:45,277 DEBUG  [main] BasicTypeRegistry: Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@6f9e08d4
2020-11-25 20:44:45,278 DEBUG  [main] BasicTypeRegistry: Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@7f4596d0
2020-11-25 20:44:45,279 DEBUG  [main] BasicTypeRegistry: Adding type registration locale -> org.hibernate.type.LocaleType@f171912
2020-11-25 20:44:45,279 DEBUG  [main] BasicTypeRegistry: Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@f171912
2020-11-25 20:44:45,280 DEBUG  [main] BasicTypeRegistry: Adding type registration currency -> org.hibernate.type.CurrencyType@f238e4f
2020-11-25 20:44:45,281 DEBUG  [main] BasicTypeRegistry: Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@f238e4f
2020-11-25 20:44:45,281 DEBUG  [main] BasicTypeRegistry: Adding type registration timezone -> org.hibernate.type.TimeZoneType@469a7575
2020-11-25 20:44:45,282 DEBUG  [main] BasicTypeRegistry: Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@469a7575
2020-11-25 20:44:45,282 DEBUG  [main] BasicTypeRegistry: Adding type registration class -> org.hibernate.type.ClassType@1c34365c
2020-11-25 20:44:45,283 DEBUG  [main] BasicTypeRegistry: Adding type registration java.lang.Class -> org.hibernate.type.ClassType@1c34365c
2020-11-25 20:44:45,283 DEBUG  [main] BasicTypeRegistry: Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@60f77af
2020-11-25 20:44:45,284 DEBUG  [main] BasicTypeRegistry: Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@60f77af
2020-11-25 20:44:45,284 DEBUG  [main] BasicTypeRegistry: Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@422ab737
2020-11-25 20:44:45,285 DEBUG  [main] BasicTypeRegistry: Adding type registration binary -> org.hibernate.type.BinaryType@11381415
2020-11-25 20:44:45,285 DEBUG  [main] BasicTypeRegistry: Adding type registration byte[] -> org.hibernate.type.BinaryType@11381415
2020-11-25 20:44:45,285 DEBUG  [main] BasicTypeRegistry: Adding type registration [B -> org.hibernate.type.BinaryType@11381415
2020-11-25 20:44:45,285 DEBUG  [main] BasicTypeRegistry: Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@5403799b
2020-11-25 20:44:45,285 DEBUG  [main] BasicTypeRegistry: Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@5403799b
2020-11-25 20:44:45,286 DEBUG  [main] BasicTypeRegistry: Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@5403799b
2020-11-25 20:44:45,286 DEBUG  [main] BasicTypeRegistry: Adding type registration row_version -> org.hibernate.type.RowVersionType@27f3f512
2020-11-25 20:44:45,291 DEBUG  [main] BasicTypeRegistry: Adding type registration image -> org.hibernate.type.ImageType@122635ef
2020-11-25 20:44:45,293 DEBUG  [main] BasicTypeRegistry: Adding type registration characters -> org.hibernate.type.CharArrayType@3cc79c02
2020-11-25 20:44:45,294 DEBUG  [main] BasicTypeRegistry: Adding type registration char[] -> org.hibernate.type.CharArrayType@3cc79c02
2020-11-25 20:44:45,294 DEBUG  [main] BasicTypeRegistry: Adding type registration [C -> org.hibernate.type.CharArrayType@3cc79c02
2020-11-25 20:44:45,296 DEBUG  [main] BasicTypeRegistry: Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@78da899f
2020-11-25 20:44:45,305 DEBUG  [main] BasicTypeRegistry: Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@78da899f
2020-11-25 20:44:45,307 DEBUG  [main] BasicTypeRegistry: Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@78da899f
2020-11-25 20:44:45,308 DEBUG  [main] BasicTypeRegistry: Adding type registration text -> org.hibernate.type.TextType@33d60b7e
2020-11-25 20:44:45,308 DEBUG  [main] BasicTypeRegistry: Adding type registration ntext -> org.hibernate.type.NTextType@483f286e
2020-11-25 20:44:45,309 DEBUG  [main] BasicTypeRegistry: Adding type registration blob -> org.hibernate.type.BlobType@2db6d68d
2020-11-25 20:44:45,309 DEBUG  [main] BasicTypeRegistry: Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@2db6d68d
2020-11-25 20:44:45,309 DEBUG  [main] BasicTypeRegistry: Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@cde8c6c
2020-11-25 20:44:45,318 DEBUG  [main] BasicTypeRegistry: Adding type registration clob -> org.hibernate.type.ClobType@7126e26
2020-11-25 20:44:45,318 DEBUG  [main] BasicTypeRegistry: Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@7126e26
2020-11-25 20:44:45,319 DEBUG  [main] BasicTypeRegistry: Adding type registration nclob -> org.hibernate.type.NClobType@2d5a1588
2020-11-25 20:44:45,319 DEBUG  [main] BasicTypeRegistry: Adding type registration java.sql.NClob -> org.hibernate.type.NClobType@2d5a1588
2020-11-25 20:44:45,319 DEBUG  [main] BasicTypeRegistry: Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@193bb809
2020-11-25 20:44:45,320 DEBUG  [main] BasicTypeRegistry: Adding type registration materialized_nclob -> org.hibernate.type.MaterializedNClobType@581b1c08
2020-11-25 20:44:45,320 DEBUG  [main] BasicTypeRegistry: Adding type registration serializable -> org.hibernate.type.SerializableType@69cd7630
2020-11-25 20:44:45,320 DEBUG  [main] BasicTypeRegistry: Adding type registration object -> org.hibernate.type.ObjectType@5ae15
2020-11-25 20:44:45,321 DEBUG  [main] BasicTypeRegistry: Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@5ae15
2020-11-25 20:44:45,321 DEBUG  [main] BasicTypeRegistry: Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@6c4786af
2020-11-25 20:44:45,322 DEBUG  [main] BasicTypeRegistry: Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@65c689e7
2020-11-25 20:44:45,323 DEBUG  [main] BasicTypeRegistry: Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@a6a2c20
2020-11-25 20:44:45,323 DEBUG  [main] BasicTypeRegistry: Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@5d04fbb7
2020-11-25 20:44:45,325 DEBUG  [main] BasicTypeRegistry: Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@da67c46
2020-11-25 20:44:45,325 DEBUG  [main] BasicTypeRegistry: Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@5c7e55a4
2020-11-25 20:44:45,326 DEBUG  [main] BasicTypeRegistry: Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@7ae6927
2020-11-25 20:44:45,326 DEBUG  [main] BasicTypeRegistry: Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@7d0df326
2020-11-25 20:44:45,351 DEBUG  [main] TypeConfiguration$Scope: Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@630c3af3] to MetadataBuildingContext [org.hibernate.boot.internal.MetadataBuildingContextRootImpl@2e40ea48]
2020-11-25 20:44:45,370 DEBUG  [main] EnumType: Using NAMED-based conversion for Enum com.sf.back.entities.Kind
2020-11-25 20:44:45,376 DEBUG  [main] EnumType: Using NAMED-based conversion for Enum com.sf.back.entities.Kind
2020-11-25 20:44:45,407 DEBUG  [main] TypeConfiguration$Scope: Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@630c3af3] to SessionFactoryImpl [org.hibernate.internal.SessionFactoryImpl@49c4118b]
2020-11-25 20:44:45,408 DEBUG  [main] EnumType: Using NAMED-based conversion for Enum com.sf.back.entities.Kind
2020-11-25 20:44:45,408 DEBUG  [main] EnumType: Using NAMED-based conversion for Enum com.sf.back.entities.Kind
2020-11-25 20:44:45,413 DEBUG  [main] EnumType: Using NAMED-based conversion for Enum com.sf.back.entities.Kind
2020-11-25 20:44:45,413 DEBUG  [main] EnumType: Using NAMED-based conversion for Enum com.sf.back.entities.Kind
2020-11-25 20:44:45,434 DEBUG  [main] EnumType: Using NAMED-based conversion for Enum com.sf.back.entities.Kind
2020-11-25 20:44:45,434 DEBUG  [main] EnumType: Using NAMED-based conversion for Enum com.sf.back.entities.Kind
2020-11-25 20:44:45,449 DEBUG  [main] EnumType: Using NAMED-based conversion for Enum com.sf.back.entities.Kind
2020-11-25 20:44:45,460 TRACE  [main] TypeConfiguration$Scope: Handling #sessionFactoryCreated from [org.hibernate.internal.SessionFactoryImpl@49c4118b] for TypeConfiguration
2020-11-25 20:44:45,909 WARN   [main] JpaBaseConfiguration$JpaWebConfiguration: spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2020-11-25 20:44:46,222 TRACE  [main] BasicBinder: binding parameter [1] as [BLOB] - [[70, 105, 110, 100, 32, 97, 108, 108, 32, 114, 111, 111, 116, 115, 32, 111, 102, 32, 103, 105, 118, 101, 110, 32, 112, 111, 108, 121, 110, 111, 109, 105, 97, 108]]
2020-11-25 20:44:46,223 TRACE  [main] BasicBinder: binding parameter [2] as [BOOLEAN] - [false]
2020-11-25 20:44:46,224 TRACE  [main] BasicBinder: binding parameter [3] as [VARCHAR] - [POLYNOMIAL]
2020-11-25 20:44:46,224 TRACE  [main] BasicBinder: binding parameter [4] as [INTEGER] - [1]
2020-11-25 20:44:46,225 TRACE  [main] BasicBinder: binding parameter [5] as [BIGINT] - [null]
2020-11-25 20:44:46,225 TRACE  [main] BasicBinder: binding parameter [6] as [INTEGER] - [6]
2020-11-25 20:44:46,225 TRACE  [main] BasicBinder: binding parameter [7] as [BIGINT] - [1]
2020-11-25 20:44:46,228 TRACE  [main] BasicBinder: binding parameter [1] as [BLOB] - [null]
2020-11-25 20:44:46,228 TRACE  [main] BasicBinder: binding parameter [2] as [DOUBLE] - [1.0]
2020-11-25 20:44:46,229 TRACE  [main] BasicBinder: binding parameter [3] as [INTEGER] - [0]
2020-11-25 20:44:46,230 TRACE  [main] BasicBinder: binding parameter [4] as [BOOLEAN] - [true]
2020-11-25 20:44:46,230 TRACE  [main] BasicBinder: binding parameter [5] as [INTEGER] - [0]
2020-11-25 20:44:46,231 TRACE  [main] BasicBinder: binding parameter [6] as [BIGINT] - [1]
2020-11-25 20:44:46,231 TRACE  [main] BasicBinder: binding parameter [7] as [BIGINT] - [2]
2020-11-25 20:44:46,233 TRACE  [main] BasicBinder: binding parameter [1] as [BLOB] - [null]
2020-11-25 20:44:46,234 TRACE  [main] BasicBinder: binding parameter [2] as [DOUBLE] - [2.0]
2020-11-25 20:44:46,234 TRACE  [main] BasicBinder: binding parameter [3] as [INTEGER] - [0]
2020-11-25 20:44:46,234 TRACE  [main] BasicBinder: binding parameter [4] as [BOOLEAN] - [true]
2020-11-25 20:44:46,236 TRACE  [main] BasicBinder: binding parameter [5] as [INTEGER] - [1]
2020-11-25 20:44:46,236 TRACE  [main] BasicBinder: binding parameter [6] as [BIGINT] - [1]
2020-11-25 20:44:46,236 TRACE  [main] BasicBinder: binding parameter [7] as [BIGINT] - [3]
2020-11-25 20:44:46,240 TRACE  [main] BasicBinder: binding parameter [1] as [BLOB] - [null]
2020-11-25 20:44:46,241 TRACE  [main] BasicBinder: binding parameter [2] as [DOUBLE] - [1.0]
2020-11-25 20:44:46,241 TRACE  [main] BasicBinder: binding parameter [3] as [INTEGER] - [0]
2020-11-25 20:44:46,241 TRACE  [main] BasicBinder: binding parameter [4] as [BOOLEAN] - [true]
2020-11-25 20:44:46,242 TRACE  [main] BasicBinder: binding parameter [5] as [INTEGER] - [2]
2020-11-25 20:44:46,243 TRACE  [main] BasicBinder: binding parameter [6] as [BIGINT] - [1]
2020-11-25 20:44:46,243 TRACE  [main] BasicBinder: binding parameter [7] as [BIGINT] - [4]
2020-11-25 20:44:46,246 TRACE  [main] BasicBinder: binding parameter [1] as [BLOB] - [null]
2020-11-25 20:44:46,246 TRACE  [main] BasicBinder: binding parameter [2] as [DOUBLE] - [1.0]
2020-11-25 20:44:46,247 TRACE  [main] BasicBinder: binding parameter [3] as [INTEGER] - [0]
2020-11-25 20:44:46,247 TRACE  [main] BasicBinder: binding parameter [4] as [BOOLEAN] - [false]
2020-11-25 20:44:46,248 TRACE  [main] BasicBinder: binding parameter [5] as [INTEGER] - [0]
2020-11-25 20:44:46,248 TRACE  [main] BasicBinder: binding parameter [6] as [BIGINT] - [1]
2020-11-25 20:44:46,248 TRACE  [main] BasicBinder: binding parameter [7] as [BIGINT] - [5]
2020-11-25 20:44:46,250 TRACE  [main] BasicBinder: binding parameter [1] as [BLOB] - [null]
2020-11-25 20:44:46,251 TRACE  [main] BasicBinder: binding parameter [2] as [DOUBLE] - [1.0]
2020-11-25 20:44:46,257 TRACE  [main] BasicBinder: binding parameter [3] as [INTEGER] - [0]
2020-11-25 20:44:46,257 TRACE  [main] BasicBinder: binding parameter [4] as [BOOLEAN] - [false]
2020-11-25 20:44:46,258 TRACE  [main] BasicBinder: binding parameter [5] as [INTEGER] - [1]
2020-11-25 20:44:46,258 TRACE  [main] BasicBinder: binding parameter [6] as [BIGINT] - [1]
2020-11-25 20:44:46,258 TRACE  [main] BasicBinder: binding parameter [7] as [BIGINT] - [6]
2020-11-25 20:44:47,329 DEBUG  [main] BasicTypeRegistry: Adding type registration boolean -> org.hibernate.type.BooleanType@671d03bb
2020-11-25 20:44:47,330 DEBUG  [main] BasicTypeRegistry: Adding type registration boolean -> org.hibernate.type.BooleanType@671d03bb
2020-11-25 20:44:47,330 DEBUG  [main] BasicTypeRegistry: Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@671d03bb
2020-11-25 20:44:47,330 DEBUG  [main] BasicTypeRegistry: Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@73894c5a
2020-11-25 20:44:47,331 DEBUG  [main] BasicTypeRegistry: Adding type registration true_false -> org.hibernate.type.TrueFalseType@28157173
2020-11-25 20:44:47,331 DEBUG  [main] BasicTypeRegistry: Adding type registration yes_no -> org.hibernate.type.YesNoType@3fbe503c
2020-11-25 20:44:47,331 DEBUG  [main] BasicTypeRegistry: Adding type registration byte -> org.hibernate.type.ByteType@52454457
2020-11-25 20:44:47,332 DEBUG  [main] BasicTypeRegistry: Adding type registration byte -> org.hibernate.type.ByteType@52454457
2020-11-25 20:44:47,333 DEBUG  [main] BasicTypeRegistry: Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@52454457
2020-11-25 20:44:47,333 DEBUG  [main] BasicTypeRegistry: Adding type registration character -> org.hibernate.type.CharacterType@24043ec5
2020-11-25 20:44:47,333 DEBUG  [main] BasicTypeRegistry: Adding type registration char -> org.hibernate.type.CharacterType@24043ec5
2020-11-25 20:44:47,334 DEBUG  [main] BasicTypeRegistry: Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@24043ec5
2020-11-25 20:44:47,334 DEBUG  [main] BasicTypeRegistry: Adding type registration short -> org.hibernate.type.ShortType@1ca3d25b
2020-11-25 20:44:47,334 DEBUG  [main] BasicTypeRegistry: Adding type registration short -> org.hibernate.type.ShortType@1ca3d25b
2020-11-25 20:44:47,335 DEBUG  [main] BasicTypeRegistry: Adding type registration java.lang.Short -> org.hibernate.type.ShortType@1ca3d25b
2020-11-25 20:44:47,335 DEBUG  [main] BasicTypeRegistry: Adding type registration integer -> org.hibernate.type.IntegerType@7bbfc5ff
2020-11-25 20:44:47,335 DEBUG  [main] BasicTypeRegistry: Adding type registration int -> org.hibernate.type.IntegerType@7bbfc5ff
2020-11-25 20:44:47,335 DEBUG  [main] BasicTypeRegistry: Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@7bbfc5ff
2020-11-25 20:44:47,335 DEBUG  [main] BasicTypeRegistry: Adding type registration long -> org.hibernate.type.LongType@5f8d9767
2020-11-25 20:44:47,335 DEBUG  [main] BasicTypeRegistry: Adding type registration long -> org.hibernate.type.LongType@5f8d9767
2020-11-25 20:44:47,336 DEBUG  [main] BasicTypeRegistry: Adding type registration java.lang.Long -> org.hibernate.type.LongType@5f8d9767
2020-11-25 20:44:47,336 DEBUG  [main] BasicTypeRegistry: Adding type registration float -> org.hibernate.type.FloatType@1980a3f
2020-11-25 20:44:47,336 DEBUG  [main] BasicTypeRegistry: Adding type registration float -> org.hibernate.type.FloatType@1980a3f
2020-11-25 20:44:47,336 DEBUG  [main] BasicTypeRegistry: Adding type registration java.lang.Float -> org.hibernate.type.FloatType@1980a3f
2020-11-25 20:44:47,336 DEBUG  [main] BasicTypeRegistry: Adding type registration double -> org.hibernate.type.DoubleType@6f5d0190
2020-11-25 20:44:47,336 DEBUG  [main] BasicTypeRegistry: Adding type registration double -> org.hibernate.type.DoubleType@6f5d0190
2020-11-25 20:44:47,336 DEBUG  [main] BasicTypeRegistry: Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@6f5d0190
2020-11-25 20:44:47,337 DEBUG  [main] BasicTypeRegistry: Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@1e5eb20a
2020-11-25 20:44:47,337 DEBUG  [main] BasicTypeRegistry: Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@1e5eb20a
2020-11-25 20:44:47,337 DEBUG  [main] BasicTypeRegistry: Adding type registration big_integer -> org.hibernate.type.BigIntegerType@1e8fb66f
2020-11-25 20:44:47,337 DEBUG  [main] BasicTypeRegistry: Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@1e8fb66f
2020-11-25 20:44:47,337 DEBUG  [main] BasicTypeRegistry: Adding type registration string -> org.hibernate.type.StringType@49433c98
2020-11-25 20:44:47,337 DEBUG  [main] BasicTypeRegistry: Adding type registration java.lang.String -> org.hibernate.type.StringType@49433c98
2020-11-25 20:44:47,337 DEBUG  [main] BasicTypeRegistry: Adding type registration nstring -> org.hibernate.type.StringNVarcharType@1775c4e7
2020-11-25 20:44:47,337 DEBUG  [main] BasicTypeRegistry: Adding type registration ncharacter -> org.hibernate.type.CharacterNCharType@43f03c23
2020-11-25 20:44:47,338 DEBUG  [main] BasicTypeRegistry: Adding type registration url -> org.hibernate.type.UrlType@59fc6d05
2020-11-25 20:44:47,338 DEBUG  [main] BasicTypeRegistry: Adding type registration java.net.URL -> org.hibernate.type.UrlType@59fc6d05
2020-11-25 20:44:47,338 DEBUG  [main] BasicTypeRegistry: Adding type registration Duration -> org.hibernate.type.DurationType@629a9f26
2020-11-25 20:44:47,338 DEBUG  [main] BasicTypeRegistry: Adding type registration java.time.Duration -> org.hibernate.type.DurationType@629a9f26
2020-11-25 20:44:47,338 DEBUG  [main] BasicTypeRegistry: Adding type registration Instant -> org.hibernate.type.InstantType@32091c14
2020-11-25 20:44:47,338 DEBUG  [main] BasicTypeRegistry: Adding type registration java.time.Instant -> org.hibernate.type.InstantType@32091c14
2020-11-25 20:44:47,338 DEBUG  [main] BasicTypeRegistry: Adding type registration LocalDateTime -> org.hibernate.type.LocalDateTimeType@6579cdbb
2020-11-25 20:44:47,339 DEBUG  [main] BasicTypeRegistry: Adding type registration java.time.LocalDateTime -> org.hibernate.type.LocalDateTimeType@6579cdbb
2020-11-25 20:44:47,339 DEBUG  [main] BasicTypeRegistry: Adding type registration LocalDate -> org.hibernate.type.LocalDateType@6b357eb6
2020-11-25 20:44:47,339 DEBUG  [main] BasicTypeRegistry: Adding type registration java.time.LocalDate -> org.hibernate.type.LocalDateType@6b357eb6
2020-11-25 20:44:47,339 DEBUG  [main] BasicTypeRegistry: Adding type registration LocalTime -> org.hibernate.type.LocalTimeType@66f5a02e
2020-11-25 20:44:47,339 DEBUG  [main] BasicTypeRegistry: Adding type registration java.time.LocalTime -> org.hibernate.type.LocalTimeType@66f5a02e
2020-11-25 20:44:47,339 DEBUG  [main] BasicTypeRegistry: Adding type registration OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@72443081
2020-11-25 20:44:47,340 DEBUG  [main] BasicTypeRegistry: Adding type registration java.time.OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@72443081
2020-11-25 20:44:47,340 DEBUG  [main] BasicTypeRegistry: Adding type registration OffsetTime -> org.hibernate.type.OffsetTimeType@17207f5b
2020-11-25 20:44:47,340 DEBUG  [main] BasicTypeRegistry: Adding type registration java.time.OffsetTime -> org.hibernate.type.OffsetTimeType@17207f5b
2020-11-25 20:44:47,341 DEBUG  [main] BasicTypeRegistry: Adding type registration ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@58fd1214
2020-11-25 20:44:47,341 DEBUG  [main] BasicTypeRegistry: Adding type registration java.time.ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@58fd1214
2020-11-25 20:44:47,341 DEBUG  [main] BasicTypeRegistry: Adding type registration date -> org.hibernate.type.DateType@157d3a45
2020-11-25 20:44:47,341 DEBUG  [main] BasicTypeRegistry: Adding type registration java.sql.Date -> org.hibernate.type.DateType@157d3a45
2020-11-25 20:44:47,341 DEBUG  [main] BasicTypeRegistry: Adding type registration time -> org.hibernate.type.TimeType@18d11527
2020-11-25 20:44:47,342 DEBUG  [main] BasicTypeRegistry: Adding type registration java.sql.Time -> org.hibernate.type.TimeType@18d11527
2020-11-25 20:44:47,342 DEBUG  [main] BasicTypeRegistry: Adding type registration timestamp -> org.hibernate.type.TimestampType@3663d0ba
2020-11-25 20:44:47,342 DEBUG  [main] BasicTypeRegistry: Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@3663d0ba
2020-11-25 20:44:47,343 DEBUG  [main] BasicTypeRegistry: Adding type registration java.util.Date -> org.hibernate.type.TimestampType@3663d0ba
2020-11-25 20:44:47,343 DEBUG  [main] BasicTypeRegistry: Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@566e142
2020-11-25 20:44:47,343 DEBUG  [main] BasicTypeRegistry: Adding type registration calendar -> org.hibernate.type.CalendarType@6f9e08d4
2020-11-25 20:44:47,344 DEBUG  [main] BasicTypeRegistry: Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@6f9e08d4
2020-11-25 20:44:47,344 DEBUG  [main] BasicTypeRegistry: Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@6f9e08d4
2020-11-25 20:44:47,344 DEBUG  [main] BasicTypeRegistry: Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@7f4596d0
2020-11-25 20:44:47,345 DEBUG  [main] BasicTypeRegistry: Adding type registration locale -> org.hibernate.type.LocaleType@f171912
2020-11-25 20:44:47,345 DEBUG  [main] BasicTypeRegistry: Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@f171912
2020-11-25 20:44:47,346 DEBUG  [main] BasicTypeRegistry: Adding type registration currency -> org.hibernate.type.CurrencyType@f238e4f
2020-11-25 20:44:47,346 DEBUG  [main] BasicTypeRegistry: Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@f238e4f
2020-11-25 20:44:47,347 DEBUG  [main] BasicTypeRegistry: Adding type registration timezone -> org.hibernate.type.TimeZoneType@469a7575
2020-11-25 20:44:47,347 DEBUG  [main] BasicTypeRegistry: Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@469a7575
2020-11-25 20:44:47,347 DEBUG  [main] BasicTypeRegistry: Adding type registration class -> org.hibernate.type.ClassType@1c34365c
2020-11-25 20:44:47,348 DEBUG  [main] BasicTypeRegistry: Adding type registration java.lang.Class -> org.hibernate.type.ClassType@1c34365c
2020-11-25 20:44:47,348 DEBUG  [main] BasicTypeRegistry: Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@60f77af
2020-11-25 20:44:47,348 DEBUG  [main] BasicTypeRegistry: Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@60f77af
2020-11-25 20:44:47,349 DEBUG  [main] BasicTypeRegistry: Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@422ab737
2020-11-25 20:44:47,349 DEBUG  [main] BasicTypeRegistry: Adding type registration binary -> org.hibernate.type.BinaryType@11381415
2020-11-25 20:44:47,349 DEBUG  [main] BasicTypeRegistry: Adding type registration byte[] -> org.hibernate.type.BinaryType@11381415
2020-11-25 20:44:47,350 DEBUG  [main] BasicTypeRegistry: Adding type registration [B -> org.hibernate.type.BinaryType@11381415
2020-11-25 20:44:47,350 DEBUG  [main] BasicTypeRegistry: Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@5403799b
2020-11-25 20:44:47,350 DEBUG  [main] BasicTypeRegistry: Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@5403799b
2020-11-25 20:44:47,351 DEBUG  [main] BasicTypeRegistry: Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@5403799b
2020-11-25 20:44:47,351 DEBUG  [main] BasicTypeRegistry: Adding type registration row_version -> org.hibernate.type.RowVersionType@27f3f512
2020-11-25 20:44:47,351 DEBUG  [main] BasicTypeRegistry: Adding type registration image -> org.hibernate.type.ImageType@122635ef
2020-11-25 20:44:47,352 DEBUG  [main] BasicTypeRegistry: Adding type registration characters -> org.hibernate.type.CharArrayType@3cc79c02
2020-11-25 20:44:47,352 DEBUG  [main] BasicTypeRegistry: Adding type registration char[] -> org.hibernate.type.CharArrayType@3cc79c02
2020-11-25 20:44:47,352 DEBUG  [main] BasicTypeRegistry: Adding type registration [C -> org.hibernate.type.CharArrayType@3cc79c02
2020-11-25 20:44:47,353 DEBUG  [main] BasicTypeRegistry: Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@78da899f
2020-11-25 20:44:47,353 DEBUG  [main] BasicTypeRegistry: Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@78da899f
2020-11-25 20:44:47,354 DEBUG  [main] BasicTypeRegistry: Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@78da899f
2020-11-25 20:44:47,354 DEBUG  [main] BasicTypeRegistry: Adding type registration text -> org.hibernate.type.TextType@33d60b7e
2020-11-25 20:44:47,354 DEBUG  [main] BasicTypeRegistry: Adding type registration ntext -> org.hibernate.type.NTextType@483f286e
2020-11-25 20:44:47,355 DEBUG  [main] BasicTypeRegistry: Adding type registration blob -> org.hibernate.type.BlobType@2db6d68d
2020-11-25 20:44:47,355 DEBUG  [main] BasicTypeRegistry: Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@2db6d68d
2020-11-25 20:44:47,355 DEBUG  [main] BasicTypeRegistry: Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@cde8c6c
2020-11-25 20:44:47,355 DEBUG  [main] BasicTypeRegistry: Adding type registration clob -> org.hibernate.type.ClobType@7126e26
2020-11-25 20:44:47,355 DEBUG  [main] BasicTypeRegistry: Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@7126e26
2020-11-25 20:44:47,355 DEBUG  [main] BasicTypeRegistry: Adding type registration nclob -> org.hibernate.type.NClobType@2d5a1588
2020-11-25 20:44:47,356 DEBUG  [main] BasicTypeRegistry: Adding type registration java.sql.NClob -> org.hibernate.type.NClobType@2d5a1588
2020-11-25 20:44:47,356 DEBUG  [main] BasicTypeRegistry: Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@193bb809
2020-11-25 20:44:47,356 DEBUG  [main] BasicTypeRegistry: Adding type registration materialized_nclob -> org.hibernate.type.MaterializedNClobType@581b1c08
2020-11-25 20:44:47,357 DEBUG  [main] BasicTypeRegistry: Adding type registration serializable -> org.hibernate.type.SerializableType@69cd7630
2020-11-25 20:44:47,357 DEBUG  [main] BasicTypeRegistry: Adding type registration object -> org.hibernate.type.ObjectType@5ae15
2020-11-25 20:44:47,357 DEBUG  [main] BasicTypeRegistry: Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@5ae15
2020-11-25 20:44:47,357 DEBUG  [main] BasicTypeRegistry: Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@285ac40b
2020-11-25 20:44:47,358 DEBUG  [main] BasicTypeRegistry: Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@5b2ade46
2020-11-25 20:44:47,358 DEBUG  [main] BasicTypeRegistry: Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@2087c939
2020-11-25 20:44:47,359 DEBUG  [main] BasicTypeRegistry: Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@6c3a7b84
2020-11-25 20:44:47,359 DEBUG  [main] BasicTypeRegistry: Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@123e9094
2020-11-25 20:44:47,359 DEBUG  [main] BasicTypeRegistry: Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@1f6ba47b
2020-11-25 20:44:47,359 DEBUG  [main] BasicTypeRegistry: Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@1bb78ae
2020-11-25 20:44:47,360 DEBUG  [main] BasicTypeRegistry: Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@3ee2d546
2020-11-25 20:44:47,386 DEBUG  [main] TypeConfiguration$Scope: Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@1af6d656] to MetadataBuildingContext [org.hibernate.boot.internal.MetadataBuildingContextRootImpl@4acdf6e7]
2020-11-25 20:44:47,403 DEBUG  [main] EnumType: Using NAMED-based conversion for Enum com.sf.back.entities.Kind
2020-11-25 20:44:47,407 DEBUG  [main] EnumType: Using NAMED-based conversion for Enum com.sf.back.entities.Kind
2020-11-25 20:44:47,439 DEBUG  [main] TypeConfiguration$Scope: Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@1af6d656] to SessionFactoryImpl [org.hibernate.internal.SessionFactoryImpl@49392256]
2020-11-25 20:44:47,439 DEBUG  [main] EnumType: Using NAMED-based conversion for Enum com.sf.back.entities.Kind
2020-11-25 20:44:47,439 DEBUG  [main] EnumType: Using NAMED-based conversion for Enum com.sf.back.entities.Kind
2020-11-25 20:44:47,441 DEBUG  [main] EnumType: Using NAMED-based conversion for Enum com.sf.back.entities.Kind
2020-11-25 20:44:47,442 DEBUG  [main] EnumType: Using NAMED-based conversion for Enum com.sf.back.entities.Kind
2020-11-25 20:44:47,453 DEBUG  [main] EnumType: Using NAMED-based conversion for Enum com.sf.back.entities.Kind
2020-11-25 20:44:47,454 DEBUG  [main] EnumType: Using NAMED-based conversion for Enum com.sf.back.entities.Kind
2020-11-25 20:44:47,460 DEBUG  [main] EnumType: Using NAMED-based conversion for Enum com.sf.back.entities.Kind
2020-11-25 20:44:47,468 TRACE  [main] TypeConfiguration$Scope: Handling #sessionFactoryCreated from [org.hibernate.internal.SessionFactoryImpl@49392256] for TypeConfiguration
2020-11-25 20:44:47,610 WARN   [main] JpaBaseConfiguration$JpaWebConfiguration: spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2020-11-25 20:44:47,820 TRACE  [main] BasicBinder: binding parameter [1] as [BLOB] - [[70, 105, 110, 100, 32, 97, 108, 108, 32, 114, 111, 111, 116, 115, 32, 111, 102, 32, 103, 105, 118, 101, 110, 32, 112, 111, 108, 121, 110, 111, 109, 105, 97, 108]]
2020-11-25 20:44:47,821 TRACE  [main] BasicBinder: binding parameter [2] as [BOOLEAN] - [false]
2020-11-25 20:44:47,822 TRACE  [main] BasicBinder: binding parameter [3] as [VARCHAR] - [POLYNOMIAL]
2020-11-25 20:44:47,822 TRACE  [main] BasicBinder: binding parameter [4] as [INTEGER] - [1]
2020-11-25 20:44:47,823 TRACE  [main] BasicBinder: binding parameter [5] as [BIGINT] - [null]
2020-11-25 20:44:47,823 TRACE  [main] BasicBinder: binding parameter [6] as [INTEGER] - [6]
2020-11-25 20:44:47,824 TRACE  [main] BasicBinder: binding parameter [7] as [BIGINT] - [1]
2020-11-25 20:44:47,826 TRACE  [main] BasicBinder: binding parameter [1] as [BLOB] - [null]
2020-11-25 20:44:47,826 TRACE  [main] BasicBinder: binding parameter [2] as [DOUBLE] - [1.0]
2020-11-25 20:44:47,827 TRACE  [main] BasicBinder: binding parameter [3] as [INTEGER] - [0]
2020-11-25 20:44:47,827 TRACE  [main] BasicBinder: binding parameter [4] as [BOOLEAN] - [true]
2020-11-25 20:44:47,827 TRACE  [main] BasicBinder: binding parameter [5] as [INTEGER] - [0]
2020-11-25 20:44:47,828 TRACE  [main] BasicBinder: binding parameter [6] as [BIGINT] - [1]
2020-11-25 20:44:47,830 TRACE  [main] BasicBinder: binding parameter [7] as [BIGINT] - [2]
2020-11-25 20:44:47,831 TRACE  [main] BasicBinder: binding parameter [1] as [BLOB] - [null]
2020-11-25 20:44:47,831 TRACE  [main] BasicBinder: binding parameter [2] as [DOUBLE] - [2.0]
2020-11-25 20:44:47,832 TRACE  [main] BasicBinder: binding parameter [3] as [INTEGER] - [0]
2020-11-25 20:44:47,832 TRACE  [main] BasicBinder: binding parameter [4] as [BOOLEAN] - [true]
2020-11-25 20:44:47,832 TRACE  [main] BasicBinder: binding parameter [5] as [INTEGER] - [1]
2020-11-25 20:44:47,832 TRACE  [main] BasicBinder: binding parameter [6] as [BIGINT] - [1]
2020-11-25 20:44:47,832 TRACE  [main] BasicBinder: binding parameter [7] as [BIGINT] - [3]
2020-11-25 20:44:47,834 TRACE  [main] BasicBinder: binding parameter [1] as [BLOB] - [null]
2020-11-25 20:44:47,834 TRACE  [main] BasicBinder: binding parameter [2] as [DOUBLE] - [1.0]
2020-11-25 20:44:47,835 TRACE  [main] BasicBinder: binding parameter [3] as [INTEGER] - [0]
2020-11-25 20:44:47,835 TRACE  [main] BasicBinder: binding parameter [4] as [BOOLEAN] - [true]
2020-11-25 20:44:47,835 TRACE  [main] BasicBinder: binding parameter [5] as [INTEGER] - [2]
2020-11-25 20:44:47,836 TRACE  [main] BasicBinder: binding parameter [6] as [BIGINT] - [1]
2020-11-25 20:44:47,836 TRACE  [main] BasicBinder: binding parameter [7] as [BIGINT] - [4]
2020-11-25 20:44:47,837 TRACE  [main] BasicBinder: binding parameter [1] as [BLOB] - [null]
2020-11-25 20:44:47,837 TRACE  [main] BasicBinder: binding parameter [2] as [DOUBLE] - [1.0]
2020-11-25 20:44:47,837 TRACE  [main] BasicBinder: binding parameter [3] as [INTEGER] - [0]
2020-11-25 20:44:47,837 TRACE  [main] BasicBinder: binding parameter [4] as [BOOLEAN] - [false]
2020-11-25 20:44:47,839 TRACE  [main] BasicBinder: binding parameter [5] as [INTEGER] - [0]
2020-11-25 20:44:47,839 TRACE  [main] BasicBinder: binding parameter [6] as [BIGINT] - [1]
2020-11-25 20:44:47,839 TRACE  [main] BasicBinder: binding parameter [7] as [BIGINT] - [5]
2020-11-25 20:44:47,841 TRACE  [main] BasicBinder: binding parameter [1] as [BLOB] - [null]
2020-11-25 20:44:47,841 TRACE  [main] BasicBinder: binding parameter [2] as [DOUBLE] - [1.0]
2020-11-25 20:44:47,842 TRACE  [main] BasicBinder: binding parameter [3] as [INTEGER] - [0]
2020-11-25 20:44:47,842 TRACE  [main] BasicBinder: binding parameter [4] as [BOOLEAN] - [false]
2020-11-25 20:44:47,842 TRACE  [main] BasicBinder: binding parameter [5] as [INTEGER] - [1]
2020-11-25 20:44:47,842 TRACE  [main] BasicBinder: binding parameter [6] as [BIGINT] - [1]
2020-11-25 20:44:47,842 TRACE  [main] BasicBinder: binding parameter [7] as [BIGINT] - [6]
2020-11-25 20:44:47,888 WARN   [SpringContextShutdownHook] SqlExceptionHelper: SQL Error: 90121, SQLState: 90121
2020-11-25 20:44:47,894 ERROR  [SpringContextShutdownHook] SqlExceptionHelper: Database is already closed (to disable automatic closing at VM shutdown, add ";DB_CLOSE_ON_EXIT=FALSE" to the db URL) [90121-200]
2020-11-25 20:44:47,895 WARN   [SpringContextShutdownHook] SqlExceptionHelper: SQL Error: 90121, SQLState: 90121
2020-11-25 20:44:47,895 ERROR  [SpringContextShutdownHook] SqlExceptionHelper: Database is already closed (to disable automatic closing at VM shutdown, add ";DB_CLOSE_ON_EXIT=FALSE" to the db URL) [90121-200]
2020-11-25 20:44:47,896 WARN   [SpringContextShutdownHook] DisposableBeanAdapter: Invocation of destroy method failed on bean with name 'entityManagerFactory': org.hibernate.exception.JDBCConnectionException: Unable to release JDBC Connection used for DDL execution
2020-11-25 20:44:48,083 TRACE  [SpringContextShutdownHook] TypeConfiguration$Scope: Handling #sessionFactoryClosed from [org.hibernate.internal.SessionFactoryImpl@1d283d1] for TypeConfiguration
2020-11-25 20:44:48,083 DEBUG  [SpringContextShutdownHook] TypeConfiguration$Scope: Un-scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration$Scope@692c1b06] from SessionFactory [org.hibernate.internal.SessionFactoryImpl@1d283d1]
2020-11-25 20:44:48,085 TRACE  [SpringContextShutdownHook] TypeConfiguration$Scope: Handling #sessionFactoryClosed from [org.hibernate.internal.SessionFactoryImpl@49c4118b] for TypeConfiguration
2020-11-25 20:44:48,085 DEBUG  [SpringContextShutdownHook] TypeConfiguration$Scope: Un-scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration$Scope@20b7fb0a] from SessionFactory [org.hibernate.internal.SessionFactoryImpl@49c4118b]
2020-11-25 20:46:22,163 DEBUG  [main] BasicTypeRegistry: Adding type registration boolean -> org.hibernate.type.BooleanType@7f85217c
2020-11-25 20:46:22,242 DEBUG  [main] BasicTypeRegistry: Adding type registration boolean -> org.hibernate.type.BooleanType@7f85217c
2020-11-25 20:46:22,243 DEBUG  [main] BasicTypeRegistry: Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@7f85217c
2020-11-25 20:46:22,270 DEBUG  [main] BasicTypeRegistry: Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@5d7d8613
2020-11-25 20:46:22,274 DEBUG  [main] BasicTypeRegistry: Adding type registration true_false -> org.hibernate.type.TrueFalseType@3bc69ce9
2020-11-25 20:46:22,275 DEBUG  [main] BasicTypeRegistry: Adding type registration yes_no -> org.hibernate.type.YesNoType@42507640
2020-11-25 20:46:22,278 DEBUG  [main] BasicTypeRegistry: Adding type registration byte -> org.hibernate.type.ByteType@75aea2ba
2020-11-25 20:46:22,289 DEBUG  [main] BasicTypeRegistry: Adding type registration byte -> org.hibernate.type.ByteType@75aea2ba
2020-11-25 20:46:22,289 DEBUG  [main] BasicTypeRegistry: Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@75aea2ba
2020-11-25 20:46:22,292 DEBUG  [main] BasicTypeRegistry: Adding type registration character -> org.hibernate.type.CharacterType@7e64c1a9
2020-11-25 20:46:22,293 DEBUG  [main] BasicTypeRegistry: Adding type registration char -> org.hibernate.type.CharacterType@7e64c1a9
2020-11-25 20:46:22,294 DEBUG  [main] BasicTypeRegistry: Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@7e64c1a9
2020-11-25 20:46:22,299 DEBUG  [main] BasicTypeRegistry: Adding type registration short -> org.hibernate.type.ShortType@576b7c74
2020-11-25 20:46:22,302 DEBUG  [main] BasicTypeRegistry: Adding type registration short -> org.hibernate.type.ShortType@576b7c74
2020-11-25 20:46:22,303 DEBUG  [main] BasicTypeRegistry: Adding type registration java.lang.Short -> org.hibernate.type.ShortType@576b7c74
2020-11-25 20:46:22,306 DEBUG  [main] BasicTypeRegistry: Adding type registration integer -> org.hibernate.type.IntegerType@28157173
2020-11-25 20:46:22,306 DEBUG  [main] BasicTypeRegistry: Adding type registration int -> org.hibernate.type.IntegerType@28157173
2020-11-25 20:46:22,306 DEBUG  [main] BasicTypeRegistry: Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@28157173
2020-11-25 20:46:22,308 DEBUG  [main] BasicTypeRegistry: Adding type registration long -> org.hibernate.type.LongType@15d0d6c9
2020-11-25 20:46:22,309 DEBUG  [main] BasicTypeRegistry: Adding type registration long -> org.hibernate.type.LongType@15d0d6c9
2020-11-25 20:46:22,309 DEBUG  [main] BasicTypeRegistry: Adding type registration java.lang.Long -> org.hibernate.type.LongType@15d0d6c9
2020-11-25 20:46:22,311 DEBUG  [main] BasicTypeRegistry: Adding type registration float -> org.hibernate.type.FloatType@61ff6a49
2020-11-25 20:46:22,311 DEBUG  [main] BasicTypeRegistry: Adding type registration float -> org.hibernate.type.FloatType@61ff6a49
2020-11-25 20:46:22,312 DEBUG  [main] BasicTypeRegistry: Adding type registration java.lang.Float -> org.hibernate.type.FloatType@61ff6a49
2020-11-25 20:46:22,319 DEBUG  [main] BasicTypeRegistry: Adding type registration double -> org.hibernate.type.DoubleType@4c6a4ffd
2020-11-25 20:46:22,320 DEBUG  [main] BasicTypeRegistry: Adding type registration double -> org.hibernate.type.DoubleType@4c6a4ffd
2020-11-25 20:46:22,320 DEBUG  [main] BasicTypeRegistry: Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@4c6a4ffd
2020-11-25 20:46:22,334 DEBUG  [main] BasicTypeRegistry: Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@535a518c
2020-11-25 20:46:22,335 DEBUG  [main] BasicTypeRegistry: Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@535a518c
2020-11-25 20:46:22,337 DEBUG  [main] BasicTypeRegistry: Adding type registration big_integer -> org.hibernate.type.BigIntegerType@ee8e7ff
2020-11-25 20:46:22,338 DEBUG  [main] BasicTypeRegistry: Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@ee8e7ff
2020-11-25 20:46:22,343 DEBUG  [main] BasicTypeRegistry: Adding type registration string -> org.hibernate.type.StringType@62b09715
2020-11-25 20:46:22,344 DEBUG  [main] BasicTypeRegistry: Adding type registration java.lang.String -> org.hibernate.type.StringType@62b09715
2020-11-25 20:46:22,346 DEBUG  [main] BasicTypeRegistry: Adding type registration nstring -> org.hibernate.type.StringNVarcharType@1980a3f
2020-11-25 20:46:22,348 DEBUG  [main] BasicTypeRegistry: Adding type registration ncharacter -> org.hibernate.type.CharacterNCharType@789c3057
2020-11-25 20:46:22,351 DEBUG  [main] BasicTypeRegistry: Adding type registration url -> org.hibernate.type.UrlType@679dd234
2020-11-25 20:46:22,351 DEBUG  [main] BasicTypeRegistry: Adding type registration java.net.URL -> org.hibernate.type.UrlType@679dd234
2020-11-25 20:46:22,353 DEBUG  [main] BasicTypeRegistry: Adding type registration Duration -> org.hibernate.type.DurationType@74b86971
2020-11-25 20:46:22,353 DEBUG  [main] BasicTypeRegistry: Adding type registration java.time.Duration -> org.hibernate.type.DurationType@74b86971
2020-11-25 20:46:22,355 DEBUG  [main] BasicTypeRegistry: Adding type registration Instant -> org.hibernate.type.InstantType@7f79edee
2020-11-25 20:46:22,356 DEBUG  [main] BasicTypeRegistry: Adding type registration java.time.Instant -> org.hibernate.type.InstantType@7f79edee
2020-11-25 20:46:22,359 DEBUG  [main] BasicTypeRegistry: Adding type registration LocalDateTime -> org.hibernate.type.LocalDateTimeType@1775c4e7
2020-11-25 20:46:22,360 DEBUG  [main] BasicTypeRegistry: Adding type registration java.time.LocalDateTime -> org.hibernate.type.LocalDateTimeType@1775c4e7
2020-11-25 20:46:22,364 DEBUG  [main] BasicTypeRegistry: Adding type registration LocalDate -> org.hibernate.type.LocalDateType@2921199d
2020-11-25 20:46:22,365 DEBUG  [main] BasicTypeRegistry: Adding type registration java.time.LocalDate -> org.hibernate.type.LocalDateType@2921199d
2020-11-25 20:46:22,367 DEBUG  [main] BasicTypeRegistry: Adding type registration LocalTime -> org.hibernate.type.LocalTimeType@40d52be7
2020-11-25 20:46:22,367 DEBUG  [main] BasicTypeRegistry: Adding type registration java.time.LocalTime -> org.hibernate.type.LocalTimeType@40d52be7
2020-11-25 20:46:22,369 DEBUG  [main] BasicTypeRegistry: Adding type registration OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@4391a2d8
2020-11-25 20:46:22,369 DEBUG  [main] BasicTypeRegistry: Adding type registration java.time.OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@4391a2d8
2020-11-25 20:46:22,372 DEBUG  [main] BasicTypeRegistry: Adding type registration OffsetTime -> org.hibernate.type.OffsetTimeType@286855ea
2020-11-25 20:46:22,372 DEBUG  [main] BasicTypeRegistry: Adding type registration java.time.OffsetTime -> org.hibernate.type.OffsetTimeType@286855ea
2020-11-25 20:46:22,422 DEBUG  [main] BasicTypeRegistry: Adding type registration ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@e3b0369
2020-11-25 20:46:22,423 DEBUG  [main] BasicTypeRegistry: Adding type registration java.time.ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@e3b0369
2020-11-25 20:46:22,437 DEBUG  [main] BasicTypeRegistry: Adding type registration date -> org.hibernate.type.DateType@17207f5b
2020-11-25 20:46:22,438 DEBUG  [main] BasicTypeRegistry: Adding type registration java.sql.Date -> org.hibernate.type.DateType@17207f5b
2020-11-25 20:46:22,450 DEBUG  [main] BasicTypeRegistry: Adding type registration time -> org.hibernate.type.TimeType@5af5d76f
2020-11-25 20:46:22,451 DEBUG  [main] BasicTypeRegistry: Adding type registration java.sql.Time -> org.hibernate.type.TimeType@5af5d76f
2020-11-25 20:46:22,456 DEBUG  [main] BasicTypeRegistry: Adding type registration timestamp -> org.hibernate.type.TimestampType@740b6628
2020-11-25 20:46:22,457 DEBUG  [main] BasicTypeRegistry: Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@740b6628
2020-11-25 20:46:22,458 DEBUG  [main] BasicTypeRegistry: Adding type registration java.util.Date -> org.hibernate.type.TimestampType@740b6628
2020-11-25 20:46:22,461 DEBUG  [main] BasicTypeRegistry: Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@4342c13
2020-11-25 20:46:22,466 DEBUG  [main] BasicTypeRegistry: Adding type registration calendar -> org.hibernate.type.CalendarType@5f0bab7e
2020-11-25 20:46:22,467 DEBUG  [main] BasicTypeRegistry: Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@5f0bab7e
2020-11-25 20:46:22,467 DEBUG  [main] BasicTypeRegistry: Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@5f0bab7e
2020-11-25 20:46:22,469 DEBUG  [main] BasicTypeRegistry: Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@2921a36a
2020-11-25 20:46:22,470 DEBUG  [main] BasicTypeRegistry: Adding type registration locale -> org.hibernate.type.LocaleType@673e76b3
2020-11-25 20:46:22,471 DEBUG  [main] BasicTypeRegistry: Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@673e76b3
2020-11-25 20:46:22,472 DEBUG  [main] BasicTypeRegistry: Adding type registration currency -> org.hibernate.type.CurrencyType@28279a49
2020-11-25 20:46:22,473 DEBUG  [main] BasicTypeRegistry: Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@28279a49
2020-11-25 20:46:22,475 DEBUG  [main] BasicTypeRegistry: Adding type registration timezone -> org.hibernate.type.TimeZoneType@566e142
2020-11-25 20:46:22,475 DEBUG  [main] BasicTypeRegistry: Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@566e142
2020-11-25 20:46:22,476 DEBUG  [main] BasicTypeRegistry: Adding type registration class -> org.hibernate.type.ClassType@6f9e08d4
2020-11-25 20:46:22,476 DEBUG  [main] BasicTypeRegistry: Adding type registration java.lang.Class -> org.hibernate.type.ClassType@6f9e08d4
2020-11-25 20:46:22,509 DEBUG  [main] BasicTypeRegistry: Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@588545ac
2020-11-25 20:46:22,512 DEBUG  [main] BasicTypeRegistry: Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@588545ac
2020-11-25 20:46:22,521 DEBUG  [main] BasicTypeRegistry: Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@f171912
2020-11-25 20:46:22,528 DEBUG  [main] BasicTypeRegistry: Adding type registration binary -> org.hibernate.type.BinaryType@f238e4f
2020-11-25 20:46:22,528 DEBUG  [main] BasicTypeRegistry: Adding type registration byte[] -> org.hibernate.type.BinaryType@f238e4f
2020-11-25 20:46:22,528 DEBUG  [main] BasicTypeRegistry: Adding type registration [B -> org.hibernate.type.BinaryType@f238e4f
2020-11-25 20:46:22,533 DEBUG  [main] BasicTypeRegistry: Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@469a7575
2020-11-25 20:46:22,542 DEBUG  [main] BasicTypeRegistry: Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@469a7575
2020-11-25 20:46:22,542 DEBUG  [main] BasicTypeRegistry: Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@469a7575
2020-11-25 20:46:22,544 DEBUG  [main] BasicTypeRegistry: Adding type registration row_version -> org.hibernate.type.RowVersionType@1c34365c
2020-11-25 20:46:22,548 DEBUG  [main] BasicTypeRegistry: Adding type registration image -> org.hibernate.type.ImageType@637791d
2020-11-25 20:46:22,553 DEBUG  [main] BasicTypeRegistry: Adding type registration characters -> org.hibernate.type.CharArrayType@422ab737
2020-11-25 20:46:22,554 DEBUG  [main] BasicTypeRegistry: Adding type registration char[] -> org.hibernate.type.CharArrayType@422ab737
2020-11-25 20:46:22,554 DEBUG  [main] BasicTypeRegistry: Adding type registration [C -> org.hibernate.type.CharArrayType@422ab737
2020-11-25 20:46:22,556 DEBUG  [main] BasicTypeRegistry: Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@11381415
2020-11-25 20:46:22,556 DEBUG  [main] BasicTypeRegistry: Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@11381415
2020-11-25 20:46:22,557 DEBUG  [main] BasicTypeRegistry: Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@11381415
2020-11-25 20:46:22,558 DEBUG  [main] BasicTypeRegistry: Adding type registration text -> org.hibernate.type.TextType@691124ee
2020-11-25 20:46:22,559 DEBUG  [main] BasicTypeRegistry: Adding type registration ntext -> org.hibernate.type.NTextType@5a0e0886
2020-11-25 20:46:22,565 DEBUG  [main] BasicTypeRegistry: Adding type registration blob -> org.hibernate.type.BlobType@122635ef
2020-11-25 20:46:22,565 DEBUG  [main] BasicTypeRegistry: Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@122635ef
2020-11-25 20:46:22,568 DEBUG  [main] BasicTypeRegistry: Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@1de4bee0
2020-11-25 20:46:22,570 DEBUG  [main] BasicTypeRegistry: Adding type registration clob -> org.hibernate.type.ClobType@78da899f
2020-11-25 20:46:22,571 DEBUG  [main] BasicTypeRegistry: Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@78da899f
2020-11-25 20:46:22,609 DEBUG  [main] BasicTypeRegistry: Adding type registration nclob -> org.hibernate.type.NClobType@4bb147ec
2020-11-25 20:46:22,610 DEBUG  [main] BasicTypeRegistry: Adding type registration java.sql.NClob -> org.hibernate.type.NClobType@4bb147ec
2020-11-25 20:46:22,623 DEBUG  [main] BasicTypeRegistry: Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@59a2388e
2020-11-25 20:46:22,627 DEBUG  [main] BasicTypeRegistry: Adding type registration materialized_nclob -> org.hibernate.type.MaterializedNClobType@2db6d68d
2020-11-25 20:46:22,638 DEBUG  [main] BasicTypeRegistry: Adding type registration serializable -> org.hibernate.type.SerializableType@4aeb0e2b
2020-11-25 20:46:22,656 DEBUG  [main] BasicTypeRegistry: Adding type registration object -> org.hibernate.type.ObjectType@20801cbb
2020-11-25 20:46:22,657 DEBUG  [main] BasicTypeRegistry: Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@20801cbb
2020-11-25 20:46:22,658 DEBUG  [main] BasicTypeRegistry: Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@78b7f805
2020-11-25 20:46:22,659 DEBUG  [main] BasicTypeRegistry: Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@58f2466c
2020-11-25 20:46:22,666 DEBUG  [main] BasicTypeRegistry: Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@5809fa26
2020-11-25 20:46:22,667 DEBUG  [main] BasicTypeRegistry: Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@64763e49
2020-11-25 20:46:22,668 DEBUG  [main] BasicTypeRegistry: Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@23468512
2020-11-25 20:46:22,668 DEBUG  [main] BasicTypeRegistry: Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@69cd7630
2020-11-25 20:46:22,668 DEBUG  [main] BasicTypeRegistry: Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@7e8279e5
2020-11-25 20:46:22,668 DEBUG  [main] BasicTypeRegistry: Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@2b53840a
2020-11-25 20:46:24,303 DEBUG  [main] TypeConfiguration$Scope: Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@2fd9fb34] to MetadataBuildingContext [org.hibernate.boot.internal.MetadataBuildingContextRootImpl@1595d2b2]
2020-11-25 20:46:24,750 DEBUG  [main] EnumType: Using NAMED-based conversion for Enum com.sf.back.entities.Kind
2020-11-25 20:46:24,961 DEBUG  [main] EnumType: Using NAMED-based conversion for Enum com.sf.back.entities.Kind
2020-11-25 20:46:25,215 DEBUG  [main] TypeConfiguration$Scope: Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@2fd9fb34] to SessionFactoryImpl [org.hibernate.internal.SessionFactoryImpl@781c2497]
2020-11-25 20:46:25,393 DEBUG  [main] EnumType: Using NAMED-based conversion for Enum com.sf.back.entities.Kind
2020-11-25 20:46:25,393 DEBUG  [main] EnumType: Using NAMED-based conversion for Enum com.sf.back.entities.Kind
2020-11-25 20:46:27,061 DEBUG  [main] EnumType: Using NAMED-based conversion for Enum com.sf.back.entities.Kind
2020-11-25 20:46:27,062 DEBUG  [main] EnumType: Using NAMED-based conversion for Enum com.sf.back.entities.Kind
2020-11-25 20:46:27,719 DEBUG  [main] EnumType: Using NAMED-based conversion for Enum com.sf.back.entities.Kind
2020-11-25 20:46:27,720 DEBUG  [main] EnumType: Using NAMED-based conversion for Enum com.sf.back.entities.Kind
2020-11-25 20:46:27,907 DEBUG  [main] EnumType: Using NAMED-based conversion for Enum com.sf.back.entities.Kind
2020-11-25 20:46:27,953 TRACE  [main] TypeConfiguration$Scope: Handling #sessionFactoryCreated from [org.hibernate.internal.SessionFactoryImpl@781c2497] for TypeConfiguration
2020-11-25 20:46:30,297 WARN   [main] GlobalSettings: Dozer configuration file not found: dozer.properties.  Using defaults for all Dozer global properties.
2020-11-25 20:46:31,822 WARN   [main] JpaBaseConfiguration$JpaWebConfiguration: spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2020-11-25 20:46:33,849 TRACE  [main] BasicBinder: binding parameter [1] as [BLOB] - [[70, 105, 110, 100, 32, 97, 108, 108, 32, 114, 111, 111, 116, 115, 32, 111, 102, 32, 103, 105, 118, 101, 110, 32, 112, 111, 108, 121, 110, 111, 109, 105, 97, 108]]
2020-11-25 20:46:33,851 TRACE  [main] BasicBinder: binding parameter [2] as [BOOLEAN] - [false]
2020-11-25 20:46:33,852 TRACE  [main] BasicBinder: binding parameter [3] as [VARCHAR] - [POLYNOMIAL]
2020-11-25 20:46:33,854 TRACE  [main] BasicBinder: binding parameter [4] as [INTEGER] - [1]
2020-11-25 20:46:33,855 TRACE  [main] BasicBinder: binding parameter [5] as [BIGINT] - [null]
2020-11-25 20:46:33,856 TRACE  [main] BasicBinder: binding parameter [6] as [INTEGER] - [6]
2020-11-25 20:46:33,873 TRACE  [main] BasicBinder: binding parameter [1] as [BLOB] - [null]
2020-11-25 20:46:33,876 TRACE  [main] BasicBinder: binding parameter [2] as [DOUBLE] - [1.0]
2020-11-25 20:46:33,877 TRACE  [main] BasicBinder: binding parameter [3] as [INTEGER] - [0]
2020-11-25 20:46:33,881 TRACE  [main] BasicBinder: binding parameter [4] as [BOOLEAN] - [true]
2020-11-25 20:46:33,882 TRACE  [main] BasicBinder: binding parameter [5] as [INTEGER] - [0]
2020-11-25 20:46:33,882 TRACE  [main] BasicBinder: binding parameter [6] as [BIGINT] - [1]
2020-11-25 20:46:33,886 TRACE  [main] BasicBinder: binding parameter [1] as [BLOB] - [null]
2020-11-25 20:46:33,886 TRACE  [main] BasicBinder: binding parameter [2] as [DOUBLE] - [2.0]
2020-11-25 20:46:33,887 TRACE  [main] BasicBinder: binding parameter [3] as [INTEGER] - [0]
2020-11-25 20:46:33,887 TRACE  [main] BasicBinder: binding parameter [4] as [BOOLEAN] - [true]
2020-11-25 20:46:33,888 TRACE  [main] BasicBinder: binding parameter [5] as [INTEGER] - [1]
2020-11-25 20:46:33,888 TRACE  [main] BasicBinder: binding parameter [6] as [BIGINT] - [1]
2020-11-25 20:46:33,890 TRACE  [main] BasicBinder: binding parameter [1] as [BLOB] - [null]
2020-11-25 20:46:33,891 TRACE  [main] BasicBinder: binding parameter [2] as [DOUBLE] - [1.0]
2020-11-25 20:46:33,892 TRACE  [main] BasicBinder: binding parameter [3] as [INTEGER] - [0]
2020-11-25 20:46:33,893 TRACE  [main] BasicBinder: binding parameter [4] as [BOOLEAN] - [true]
2020-11-25 20:46:33,894 TRACE  [main] BasicBinder: binding parameter [5] as [INTEGER] - [2]
2020-11-25 20:46:33,896 TRACE  [main] BasicBinder: binding parameter [6] as [BIGINT] - [1]
2020-11-25 20:46:33,898 TRACE  [main] BasicBinder: binding parameter [1] as [BLOB] - [null]
2020-11-25 20:46:33,898 TRACE  [main] BasicBinder: binding parameter [2] as [DOUBLE] - [1.0]
2020-11-25 20:46:33,899 TRACE  [main] BasicBinder: binding parameter [3] as [INTEGER] - [0]
2020-11-25 20:46:33,899 TRACE  [main] BasicBinder: binding parameter [4] as [BOOLEAN] - [false]
2020-11-25 20:46:33,901 TRACE  [main] BasicBinder: binding parameter [5] as [INTEGER] - [0]
2020-11-25 20:46:33,902 TRACE  [main] BasicBinder: binding parameter [6] as [BIGINT] - [1]
2020-11-25 20:46:33,903 TRACE  [main] BasicBinder: binding parameter [1] as [BLOB] - [null]
2020-11-25 20:46:33,904 TRACE  [main] BasicBinder: binding parameter [2] as [DOUBLE] - [1.0]
2020-11-25 20:46:33,905 TRACE  [main] BasicBinder: binding parameter [3] as [INTEGER] - [0]
2020-11-25 20:46:33,905 TRACE  [main] BasicBinder: binding parameter [4] as [BOOLEAN] - [false]
2020-11-25 20:46:33,906 TRACE  [main] BasicBinder: binding parameter [5] as [INTEGER] - [1]
2020-11-25 20:46:33,906 TRACE  [main] BasicBinder: binding parameter [6] as [BIGINT] - [1]
2020-11-25 20:46:39,941 DEBUG  [main] BasicTypeRegistry: Adding type registration boolean -> org.hibernate.type.BooleanType@7f85217c
2020-11-25 20:46:39,942 DEBUG  [main] BasicTypeRegistry: Adding type registration boolean -> org.hibernate.type.BooleanType@7f85217c
2020-11-25 20:46:39,942 DEBUG  [main] BasicTypeRegistry: Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@7f85217c
2020-11-25 20:46:39,943 DEBUG  [main] BasicTypeRegistry: Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@5d7d8613
2020-11-25 20:46:39,944 DEBUG  [main] BasicTypeRegistry: Adding type registration true_false -> org.hibernate.type.TrueFalseType@3bc69ce9
2020-11-25 20:46:39,945 DEBUG  [main] BasicTypeRegistry: Adding type registration yes_no -> org.hibernate.type.YesNoType@42507640
2020-11-25 20:46:39,947 DEBUG  [main] BasicTypeRegistry: Adding type registration byte -> org.hibernate.type.ByteType@75aea2ba
2020-11-25 20:46:39,948 DEBUG  [main] BasicTypeRegistry: Adding type registration byte -> org.hibernate.type.ByteType@75aea2ba
2020-11-25 20:46:39,949 DEBUG  [main] BasicTypeRegistry: Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@75aea2ba
2020-11-25 20:46:39,949 DEBUG  [main] BasicTypeRegistry: Adding type registration character -> org.hibernate.type.CharacterType@7e64c1a9
2020-11-25 20:46:39,949 DEBUG  [main] BasicTypeRegistry: Adding type registration char -> org.hibernate.type.CharacterType@7e64c1a9
2020-11-25 20:46:39,950 DEBUG  [main] BasicTypeRegistry: Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@7e64c1a9
2020-11-25 20:46:39,951 DEBUG  [main] BasicTypeRegistry: Adding type registration short -> org.hibernate.type.ShortType@576b7c74
2020-11-25 20:46:39,952 DEBUG  [main] BasicTypeRegistry: Adding type registration short -> org.hibernate.type.ShortType@576b7c74
2020-11-25 20:46:39,953 DEBUG  [main] BasicTypeRegistry: Adding type registration java.lang.Short -> org.hibernate.type.ShortType@576b7c74
2020-11-25 20:46:39,953 DEBUG  [main] BasicTypeRegistry: Adding type registration integer -> org.hibernate.type.IntegerType@28157173
2020-11-25 20:46:39,954 DEBUG  [main] BasicTypeRegistry: Adding type registration int -> org.hibernate.type.IntegerType@28157173
2020-11-25 20:46:39,954 DEBUG  [main] BasicTypeRegistry: Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@28157173
2020-11-25 20:46:39,957 DEBUG  [main] BasicTypeRegistry: Adding type registration long -> org.hibernate.type.LongType@15d0d6c9
2020-11-25 20:46:39,960 DEBUG  [main] BasicTypeRegistry: Adding type registration long -> org.hibernate.type.LongType@15d0d6c9
2020-11-25 20:46:39,961 DEBUG  [main] BasicTypeRegistry: Adding type registration java.lang.Long -> org.hibernate.type.LongType@15d0d6c9
2020-11-25 20:46:39,962 DEBUG  [main] BasicTypeRegistry: Adding type registration float -> org.hibernate.type.FloatType@61ff6a49
2020-11-25 20:46:39,962 DEBUG  [main] BasicTypeRegistry: Adding type registration float -> org.hibernate.type.FloatType@61ff6a49
2020-11-25 20:46:39,963 DEBUG  [main] BasicTypeRegistry: Adding type registration java.lang.Float -> org.hibernate.type.FloatType@61ff6a49
2020-11-25 20:46:39,964 DEBUG  [main] BasicTypeRegistry: Adding type registration double -> org.hibernate.type.DoubleType@4c6a4ffd
2020-11-25 20:46:39,964 DEBUG  [main] BasicTypeRegistry: Adding type registration double -> org.hibernate.type.DoubleType@4c6a4ffd
2020-11-25 20:46:39,964 DEBUG  [main] BasicTypeRegistry: Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@4c6a4ffd
2020-11-25 20:46:39,964 DEBUG  [main] BasicTypeRegistry: Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@535a518c
2020-11-25 20:46:39,965 DEBUG  [main] BasicTypeRegistry: Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@535a518c
2020-11-25 20:46:39,965 DEBUG  [main] BasicTypeRegistry: Adding type registration big_integer -> org.hibernate.type.BigIntegerType@ee8e7ff
2020-11-25 20:46:39,965 DEBUG  [main] BasicTypeRegistry: Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@ee8e7ff
2020-11-25 20:46:39,966 DEBUG  [main] BasicTypeRegistry: Adding type registration string -> org.hibernate.type.StringType@62b09715
2020-11-25 20:46:39,966 DEBUG  [main] BasicTypeRegistry: Adding type registration java.lang.String -> org.hibernate.type.StringType@62b09715
2020-11-25 20:46:39,967 DEBUG  [main] BasicTypeRegistry: Adding type registration nstring -> org.hibernate.type.StringNVarcharType@1980a3f
2020-11-25 20:46:39,969 DEBUG  [main] BasicTypeRegistry: Adding type registration ncharacter -> org.hibernate.type.CharacterNCharType@789c3057
2020-11-25 20:46:39,969 DEBUG  [main] BasicTypeRegistry: Adding type registration url -> org.hibernate.type.UrlType@679dd234
2020-11-25 20:46:39,970 DEBUG  [main] BasicTypeRegistry: Adding type registration java.net.URL -> org.hibernate.type.UrlType@679dd234
2020-11-25 20:46:39,971 DEBUG  [main] BasicTypeRegistry: Adding type registration Duration -> org.hibernate.type.DurationType@74b86971
2020-11-25 20:46:39,971 DEBUG  [main] BasicTypeRegistry: Adding type registration java.time.Duration -> org.hibernate.type.DurationType@74b86971
2020-11-25 20:46:39,972 DEBUG  [main] BasicTypeRegistry: Adding type registration Instant -> org.hibernate.type.InstantType@7f79edee
2020-11-25 20:46:39,974 DEBUG  [main] BasicTypeRegistry: Adding type registration java.time.Instant -> org.hibernate.type.InstantType@7f79edee
2020-11-25 20:46:39,975 DEBUG  [main] BasicTypeRegistry: Adding type registration LocalDateTime -> org.hibernate.type.LocalDateTimeType@1775c4e7
2020-11-25 20:46:39,975 DEBUG  [main] BasicTypeRegistry: Adding type registration java.time.LocalDateTime -> org.hibernate.type.LocalDateTimeType@1775c4e7
2020-11-25 20:46:39,976 DEBUG  [main] BasicTypeRegistry: Adding type registration LocalDate -> org.hibernate.type.LocalDateType@2921199d
2020-11-25 20:46:39,976 DEBUG  [main] BasicTypeRegistry: Adding type registration java.time.LocalDate -> org.hibernate.type.LocalDateType@2921199d
2020-11-25 20:46:39,977 DEBUG  [main] BasicTypeRegistry: Adding type registration LocalTime -> org.hibernate.type.LocalTimeType@40d52be7
2020-11-25 20:46:39,977 DEBUG  [main] BasicTypeRegistry: Adding type registration java.time.LocalTime -> org.hibernate.type.LocalTimeType@40d52be7
2020-11-25 20:46:39,978 DEBUG  [main] BasicTypeRegistry: Adding type registration OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@4391a2d8
2020-11-25 20:46:39,978 DEBUG  [main] BasicTypeRegistry: Adding type registration java.time.OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@4391a2d8
2020-11-25 20:46:39,978 DEBUG  [main] BasicTypeRegistry: Adding type registration OffsetTime -> org.hibernate.type.OffsetTimeType@286855ea
2020-11-25 20:46:39,978 DEBUG  [main] BasicTypeRegistry: Adding type registration java.time.OffsetTime -> org.hibernate.type.OffsetTimeType@286855ea
2020-11-25 20:46:39,979 DEBUG  [main] BasicTypeRegistry: Adding type registration ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@e3b0369
2020-11-25 20:46:39,979 DEBUG  [main] BasicTypeRegistry: Adding type registration java.time.ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@e3b0369
2020-11-25 20:46:39,981 DEBUG  [main] BasicTypeRegistry: Adding type registration date -> org.hibernate.type.DateType@17207f5b
2020-11-25 20:46:39,982 DEBUG  [main] BasicTypeRegistry: Adding type registration java.sql.Date -> org.hibernate.type.DateType@17207f5b
2020-11-25 20:46:39,982 DEBUG  [main] BasicTypeRegistry: Adding type registration time -> org.hibernate.type.TimeType@5af5d76f
2020-11-25 20:46:39,983 DEBUG  [main] BasicTypeRegistry: Adding type registration java.sql.Time -> org.hibernate.type.TimeType@5af5d76f
2020-11-25 20:46:39,983 DEBUG  [main] BasicTypeRegistry: Adding type registration timestamp -> org.hibernate.type.TimestampType@740b6628
2020-11-25 20:46:39,983 DEBUG  [main] BasicTypeRegistry: Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@740b6628
2020-11-25 20:46:39,984 DEBUG  [main] BasicTypeRegistry: Adding type registration java.util.Date -> org.hibernate.type.TimestampType@740b6628
2020-11-25 20:46:39,984 DEBUG  [main] BasicTypeRegistry: Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@4342c13
2020-11-25 20:46:39,984 DEBUG  [main] BasicTypeRegistry: Adding type registration calendar -> org.hibernate.type.CalendarType@5f0bab7e
2020-11-25 20:46:39,984 DEBUG  [main] BasicTypeRegistry: Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@5f0bab7e
2020-11-25 20:46:39,984 DEBUG  [main] BasicTypeRegistry: Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@5f0bab7e
2020-11-25 20:46:39,985 DEBUG  [main] BasicTypeRegistry: Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@2921a36a
2020-11-25 20:46:39,985 DEBUG  [main] BasicTypeRegistry: Adding type registration locale -> org.hibernate.type.LocaleType@673e76b3
2020-11-25 20:46:39,985 DEBUG  [main] BasicTypeRegistry: Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@673e76b3
2020-11-25 20:46:39,985 DEBUG  [main] BasicTypeRegistry: Adding type registration currency -> org.hibernate.type.CurrencyType@28279a49
2020-11-25 20:46:39,985 DEBUG  [main] BasicTypeRegistry: Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@28279a49
2020-11-25 20:46:39,985 DEBUG  [main] BasicTypeRegistry: Adding type registration timezone -> org.hibernate.type.TimeZoneType@566e142
2020-11-25 20:46:39,986 DEBUG  [main] BasicTypeRegistry: Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@566e142
2020-11-25 20:46:39,986 DEBUG  [main] BasicTypeRegistry: Adding type registration class -> org.hibernate.type.ClassType@6f9e08d4
2020-11-25 20:46:39,987 DEBUG  [main] BasicTypeRegistry: Adding type registration java.lang.Class -> org.hibernate.type.ClassType@6f9e08d4
2020-11-25 20:46:39,987 DEBUG  [main] BasicTypeRegistry: Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@588545ac
2020-11-25 20:46:39,988 DEBUG  [main] BasicTypeRegistry: Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@588545ac
2020-11-25 20:46:39,988 DEBUG  [main] BasicTypeRegistry: Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@f171912
2020-11-25 20:46:39,988 DEBUG  [main] BasicTypeRegistry: Adding type registration binary -> org.hibernate.type.BinaryType@f238e4f
2020-11-25 20:46:39,988 DEBUG  [main] BasicTypeRegistry: Adding type registration byte[] -> org.hibernate.type.BinaryType@f238e4f
2020-11-25 20:46:39,988 DEBUG  [main] BasicTypeRegistry: Adding type registration [B -> org.hibernate.type.BinaryType@f238e4f
2020-11-25 20:46:39,989 DEBUG  [main] BasicTypeRegistry: Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@469a7575
2020-11-25 20:46:39,989 DEBUG  [main] BasicTypeRegistry: Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@469a7575
2020-11-25 20:46:39,989 DEBUG  [main] BasicTypeRegistry: Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@469a7575
2020-11-25 20:46:39,990 DEBUG  [main] BasicTypeRegistry: Adding type registration row_version -> org.hibernate.type.RowVersionType@1c34365c
2020-11-25 20:46:39,990 DEBUG  [main] BasicTypeRegistry: Adding type registration image -> org.hibernate.type.ImageType@637791d
2020-11-25 20:46:39,991 DEBUG  [main] BasicTypeRegistry: Adding type registration characters -> org.hibernate.type.CharArrayType@422ab737
2020-11-25 20:46:39,991 DEBUG  [main] BasicTypeRegistry: Adding type registration char[] -> org.hibernate.type.CharArrayType@422ab737
2020-11-25 20:46:39,992 DEBUG  [main] BasicTypeRegistry: Adding type registration [C -> org.hibernate.type.CharArrayType@422ab737
2020-11-25 20:46:39,992 DEBUG  [main] BasicTypeRegistry: Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@11381415
2020-11-25 20:46:39,993 DEBUG  [main] BasicTypeRegistry: Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@11381415
2020-11-25 20:46:39,993 DEBUG  [main] BasicTypeRegistry: Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@11381415
2020-11-25 20:46:39,993 DEBUG  [main] BasicTypeRegistry: Adding type registration text -> org.hibernate.type.TextType@691124ee
2020-11-25 20:46:39,994 DEBUG  [main] BasicTypeRegistry: Adding type registration ntext -> org.hibernate.type.NTextType@5a0e0886
2020-11-25 20:46:39,994 DEBUG  [main] BasicTypeRegistry: Adding type registration blob -> org.hibernate.type.BlobType@122635ef
2020-11-25 20:46:39,995 DEBUG  [main] BasicTypeRegistry: Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@122635ef
2020-11-25 20:46:39,997 DEBUG  [main] BasicTypeRegistry: Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@1de4bee0
2020-11-25 20:46:39,997 DEBUG  [main] BasicTypeRegistry: Adding type registration clob -> org.hibernate.type.ClobType@78da899f
2020-11-25 20:46:39,998 DEBUG  [main] BasicTypeRegistry: Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@78da899f
2020-11-25 20:46:39,998 DEBUG  [main] BasicTypeRegistry: Adding type registration nclob -> org.hibernate.type.NClobType@4bb147ec
2020-11-25 20:46:39,999 DEBUG  [main] BasicTypeRegistry: Adding type registration java.sql.NClob -> org.hibernate.type.NClobType@4bb147ec
2020-11-25 20:46:39,999 DEBUG  [main] BasicTypeRegistry: Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@59a2388e
2020-11-25 20:46:40,003 DEBUG  [main] BasicTypeRegistry: Adding type registration materialized_nclob -> org.hibernate.type.MaterializedNClobType@2db6d68d
2020-11-25 20:46:40,003 DEBUG  [main] BasicTypeRegistry: Adding type registration serializable -> org.hibernate.type.SerializableType@4aeb0e2b
2020-11-25 20:46:40,004 DEBUG  [main] BasicTypeRegistry: Adding type registration object -> org.hibernate.type.ObjectType@20801cbb
2020-11-25 20:46:40,004 DEBUG  [main] BasicTypeRegistry: Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@20801cbb
2020-11-25 20:46:40,005 DEBUG  [main] BasicTypeRegistry: Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@2c8f65da
2020-11-25 20:46:40,005 DEBUG  [main] BasicTypeRegistry: Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@587400a9
2020-11-25 20:46:40,005 DEBUG  [main] BasicTypeRegistry: Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@1f0f92f5
2020-11-25 20:46:40,006 DEBUG  [main] BasicTypeRegistry: Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@7430ed93
2020-11-25 20:46:40,006 DEBUG  [main] BasicTypeRegistry: Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@2346f77a
2020-11-25 20:46:40,008 DEBUG  [main] BasicTypeRegistry: Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@5bcfdaf3
2020-11-25 20:46:40,009 DEBUG  [main] BasicTypeRegistry: Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@38347345
2020-11-25 20:46:40,009 DEBUG  [main] BasicTypeRegistry: Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@4b9b5da5
2020-11-25 20:46:40,040 DEBUG  [main] TypeConfiguration$Scope: Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@3cae4518] to MetadataBuildingContext [org.hibernate.boot.internal.MetadataBuildingContextRootImpl@5a654e05]
2020-11-25 20:46:40,057 DEBUG  [main] EnumType: Using NAMED-based conversion for Enum com.sf.back.entities.Kind
2020-11-25 20:46:40,059 DEBUG  [main] EnumType: Using NAMED-based conversion for Enum com.sf.back.entities.Kind
2020-11-25 20:46:40,091 DEBUG  [main] TypeConfiguration$Scope: Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@3cae4518] to SessionFactoryImpl [org.hibernate.internal.SessionFactoryImpl@5516ee5]
2020-11-25 20:46:40,093 DEBUG  [main] EnumType: Using NAMED-based conversion for Enum com.sf.back.entities.Kind
2020-11-25 20:46:40,093 DEBUG  [main] EnumType: Using NAMED-based conversion for Enum com.sf.back.entities.Kind
2020-11-25 20:46:40,095 DEBUG  [main] EnumType: Using NAMED-based conversion for Enum com.sf.back.entities.Kind
2020-11-25 20:46:40,096 DEBUG  [main] EnumType: Using NAMED-based conversion for Enum com.sf.back.entities.Kind
2020-11-25 20:46:40,107 DEBUG  [main] EnumType: Using NAMED-based conversion for Enum com.sf.back.entities.Kind
2020-11-25 20:46:40,107 DEBUG  [main] EnumType: Using NAMED-based conversion for Enum com.sf.back.entities.Kind
2020-11-25 20:46:40,128 DEBUG  [main] EnumType: Using NAMED-based conversion for Enum com.sf.back.entities.Kind
2020-11-25 20:46:40,157 TRACE  [main] TypeConfiguration$Scope: Handling #sessionFactoryCreated from [org.hibernate.internal.SessionFactoryImpl@5516ee5] for TypeConfiguration
2020-11-25 20:46:40,578 WARN   [main] JpaBaseConfiguration$JpaWebConfiguration: spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2020-11-25 20:46:40,833 TRACE  [main] BasicBinder: binding parameter [1] as [BLOB] - [[70, 105, 110, 100, 32, 97, 108, 108, 32, 114, 111, 111, 116, 115, 32, 111, 102, 32, 103, 105, 118, 101, 110, 32, 112, 111, 108, 121, 110, 111, 109, 105, 97, 108]]
2020-11-25 20:46:40,834 TRACE  [main] BasicBinder: binding parameter [2] as [BOOLEAN] - [false]
2020-11-25 20:46:40,834 TRACE  [main] BasicBinder: binding parameter [3] as [VARCHAR] - [POLYNOMIAL]
2020-11-25 20:46:40,834 TRACE  [main] BasicBinder: binding parameter [4] as [INTEGER] - [1]
2020-11-25 20:46:40,834 TRACE  [main] BasicBinder: binding parameter [5] as [BIGINT] - [null]
2020-11-25 20:46:40,834 TRACE  [main] BasicBinder: binding parameter [6] as [INTEGER] - [6]
2020-11-25 20:46:40,837 TRACE  [main] BasicBinder: binding parameter [1] as [BLOB] - [null]
2020-11-25 20:46:40,837 TRACE  [main] BasicBinder: binding parameter [2] as [DOUBLE] - [1.0]
2020-11-25 20:46:40,838 TRACE  [main] BasicBinder: binding parameter [3] as [INTEGER] - [0]
2020-11-25 20:46:40,838 TRACE  [main] BasicBinder: binding parameter [4] as [BOOLEAN] - [true]
2020-11-25 20:46:40,838 TRACE  [main] BasicBinder: binding parameter [5] as [INTEGER] - [0]
2020-11-25 20:46:40,838 TRACE  [main] BasicBinder: binding parameter [6] as [BIGINT] - [1]
2020-11-25 20:46:40,840 TRACE  [main] BasicBinder: binding parameter [1] as [BLOB] - [null]
2020-11-25 20:46:40,840 TRACE  [main] BasicBinder: binding parameter [2] as [DOUBLE] - [2.0]
2020-11-25 20:46:40,840 TRACE  [main] BasicBinder: binding parameter [3] as [INTEGER] - [0]
2020-11-25 20:46:40,841 TRACE  [main] BasicBinder: binding parameter [4] as [BOOLEAN] - [true]
2020-11-25 20:46:40,841 TRACE  [main] BasicBinder: binding parameter [5] as [INTEGER] - [1]
2020-11-25 20:46:40,843 TRACE  [main] BasicBinder: binding parameter [6] as [BIGINT] - [1]
2020-11-25 20:46:40,847 TRACE  [main] BasicBinder: binding parameter [1] as [BLOB] - [null]
2020-11-25 20:46:40,848 TRACE  [main] BasicBinder: binding parameter [2] as [DOUBLE] - [1.0]
2020-11-25 20:46:40,848 TRACE  [main] BasicBinder: binding parameter [3] as [INTEGER] - [0]
2020-11-25 20:46:40,849 TRACE  [main] BasicBinder: binding parameter [4] as [BOOLEAN] - [true]
2020-11-25 20:46:40,849 TRACE  [main] BasicBinder: binding parameter [5] as [INTEGER] - [2]
2020-11-25 20:46:40,850 TRACE  [main] BasicBinder: binding parameter [6] as [BIGINT] - [1]
2020-11-25 20:46:40,851 TRACE  [main] BasicBinder: binding parameter [1] as [BLOB] - [null]
2020-11-25 20:46:40,851 TRACE  [main] BasicBinder: binding parameter [2] as [DOUBLE] - [1.0]
2020-11-25 20:46:40,851 TRACE  [main] BasicBinder: binding parameter [3] as [INTEGER] - [0]
2020-11-25 20:46:40,851 TRACE  [main] BasicBinder: binding parameter [4] as [BOOLEAN] - [false]
2020-11-25 20:46:40,852 TRACE  [main] BasicBinder: binding parameter [5] as [INTEGER] - [0]
2020-11-25 20:46:40,852 TRACE  [main] BasicBinder: binding parameter [6] as [BIGINT] - [1]
2020-11-25 20:46:40,854 TRACE  [main] BasicBinder: binding parameter [1] as [BLOB] - [null]
2020-11-25 20:46:40,854 TRACE  [main] BasicBinder: binding parameter [2] as [DOUBLE] - [1.0]
2020-11-25 20:46:40,854 TRACE  [main] BasicBinder: binding parameter [3] as [INTEGER] - [0]
2020-11-25 20:46:40,855 TRACE  [main] BasicBinder: binding parameter [4] as [BOOLEAN] - [false]
2020-11-25 20:46:40,855 TRACE  [main] BasicBinder: binding parameter [5] as [INTEGER] - [1]
2020-11-25 20:46:40,855 TRACE  [main] BasicBinder: binding parameter [6] as [BIGINT] - [1]
2020-11-25 20:46:40,958 TRACE  [main] BasicBinder: binding parameter [1] as [BIGINT] - [2]
2020-11-25 20:46:40,966 TRACE  [main] BasicExtractor: extracted value ([id1_1_2_] : [BIGINT]) - [null]
2020-11-25 20:46:40,968 TRACE  [main] BasicExtractor: extracted value ([id1_0_4_] : [BIGINT]) - [null]
2020-11-25 20:46:40,978 TRACE  [main] BasicExtractor: extracted value ([descript2_1_0_] : [BLOB]) - [[112, 114, 111, 98, 108, 101, 109, 100, 101, 115, 99, 114, 105, 112, 116, 105, 111, 110]]
2020-11-25 20:46:40,981 TRACE  [main] BasicExtractor: extracted value ([is_solve3_1_0_] : [BOOLEAN]) - [null]
2020-11-25 20:46:40,982 TRACE  [main] BasicExtractor: extracted value ([kind4_1_0_] : [VARCHAR]) - [POLYNOMIAL]
2020-11-25 20:46:40,983 TRACE  [main] BasicExtractor: extracted value ([matrix_d5_1_0_] : [INTEGER]) - [1]
2020-11-25 20:46:40,983 TRACE  [main] BasicExtractor: extracted value ([parent_p7_1_0_] : [BIGINT]) - [null]
2020-11-25 20:46:40,984 TRACE  [main] BasicExtractor: extracted value ([problem_6_1_0_] : [INTEGER]) - [22]
2020-11-25 20:46:40,985 TRACE  [main] BasicExtractor: extracted value ([problem_7_0_3_] : [BIGINT]) - [null]
2020-11-25 20:46:40,985 TRACE  [main] BasicExtractor: extracted value ([parent_p7_1_1_] : [BIGINT]) - [null]
2020-11-25 20:46:40,992 TRACE  [main] CollectionType: Created collection wrapper: [com.sf.back.entities.Problem.matrixes#2]
2020-11-25 20:46:40,999 TRACE  [main] BasicBinder: binding parameter [1] as [BIGINT] - [2]
2020-11-25 20:46:41,000 TRACE  [main] BasicExtractor: extracted value ([id1_0_1_] : [BIGINT]) - [6]
2020-11-25 20:46:41,001 TRACE  [main] BasicExtractor: extracted value ([binary_v2_0_1_] : [BLOB]) - [null]
2020-11-25 20:46:41,002 TRACE  [main] BasicExtractor: extracted value ([float_va3_0_1_] : [DOUBLE]) - [1.0]
2020-11-25 20:46:41,003 TRACE  [main] BasicExtractor: extracted value ([i4_0_1_] : [INTEGER]) - [0]
2020-11-25 20:46:41,003 TRACE  [main] BasicExtractor: extracted value ([is_condi5_0_1_] : [BOOLEAN]) - [true]
2020-11-25 20:46:41,004 TRACE  [main] BasicExtractor: extracted value ([j6_0_1_] : [INTEGER]) - [0]
2020-11-25 20:46:41,004 TRACE  [main] BasicExtractor: extracted value ([problem_7_0_1_] : [BIGINT]) - [2]
2020-11-25 20:46:41,005 TRACE  [main] BasicExtractor: extracted value ([problem_7_0_0_] : [BIGINT]) - [2]
2020-11-25 20:46:41,005 TRACE  [main] BasicExtractor: extracted value ([id1_0_0_] : [BIGINT]) - [6]
2020-11-25 20:46:41,006 TRACE  [main] BasicExtractor: extracted value ([id1_0_1_] : [BIGINT]) - [7]
2020-11-25 20:46:41,006 TRACE  [main] BasicExtractor: extracted value ([binary_v2_0_1_] : [BLOB]) - [null]
2020-11-25 20:46:41,008 TRACE  [main] BasicExtractor: extracted value ([float_va3_0_1_] : [DOUBLE]) - [2.718281828459045]
2020-11-25 20:46:41,008 TRACE  [main] BasicExtractor: extracted value ([i4_0_1_] : [INTEGER]) - [0]
2020-11-25 20:46:41,009 TRACE  [main] BasicExtractor: extracted value ([is_condi5_0_1_] : [BOOLEAN]) - [true]
2020-11-25 20:46:41,009 TRACE  [main] BasicExtractor: extracted value ([j6_0_1_] : [INTEGER]) - [1]
2020-11-25 20:46:41,009 TRACE  [main] BasicExtractor: extracted value ([problem_7_0_1_] : [BIGINT]) - [2]
2020-11-25 20:46:41,010 TRACE  [main] BasicExtractor: extracted value ([problem_7_0_0_] : [BIGINT]) - [2]
2020-11-25 20:46:41,010 TRACE  [main] BasicExtractor: extracted value ([id1_0_0_] : [BIGINT]) - [7]
2020-11-25 20:46:41,010 TRACE  [main] BasicExtractor: extracted value ([id1_0_1_] : [BIGINT]) - [8]
2020-11-25 20:46:41,011 TRACE  [main] BasicExtractor: extracted value ([binary_v2_0_1_] : [BLOB]) - [null]
2020-11-25 20:46:41,011 TRACE  [main] BasicExtractor: extracted value ([float_va3_0_1_] : [DOUBLE]) - [7.38905609893065]
2020-11-25 20:46:41,012 TRACE  [main] BasicExtractor: extracted value ([i4_0_1_] : [INTEGER]) - [0]
2020-11-25 20:46:41,012 TRACE  [main] BasicExtractor: extracted value ([is_condi5_0_1_] : [BOOLEAN]) - [true]
2020-11-25 20:46:41,013 TRACE  [main] BasicExtractor: extracted value ([j6_0_1_] : [INTEGER]) - [2]
2020-11-25 20:46:41,014 TRACE  [main] BasicExtractor: extracted value ([problem_7_0_1_] : [BIGINT]) - [2]
2020-11-25 20:46:41,014 TRACE  [main] BasicExtractor: extracted value ([problem_7_0_0_] : [BIGINT]) - [2]
2020-11-25 20:46:41,014 TRACE  [main] BasicExtractor: extracted value ([id1_0_0_] : [BIGINT]) - [8]
2020-11-25 20:46:41,015 TRACE  [main] BasicExtractor: extracted value ([id1_0_1_] : [BIGINT]) - [9]
2020-11-25 20:46:41,016 TRACE  [main] BasicExtractor: extracted value ([binary_v2_0_1_] : [BLOB]) - [null]
2020-11-25 20:46:41,016 TRACE  [main] BasicExtractor: extracted value ([float_va3_0_1_] : [DOUBLE]) - [20.085536923187668]
2020-11-25 20:46:41,016 TRACE  [main] BasicExtractor: extracted value ([i4_0_1_] : [INTEGER]) - [0]
2020-11-25 20:46:41,017 TRACE  [main] BasicExtractor: extracted value ([is_condi5_0_1_] : [BOOLEAN]) - [true]
2020-11-25 20:46:41,017 TRACE  [main] BasicExtractor: extracted value ([j6_0_1_] : [INTEGER]) - [3]
2020-11-25 20:46:41,017 TRACE  [main] BasicExtractor: extracted value ([problem_7_0_1_] : [BIGINT]) - [2]
2020-11-25 20:46:41,018 TRACE  [main] BasicExtractor: extracted value ([problem_7_0_0_] : [BIGINT]) - [2]
2020-11-25 20:46:41,018 TRACE  [main] BasicExtractor: extracted value ([id1_0_0_] : [BIGINT]) - [9]
2020-11-25 20:46:41,019 TRACE  [main] BasicExtractor: extracted value ([id1_0_1_] : [BIGINT]) - [10]
2020-11-25 20:46:41,019 TRACE  [main] BasicExtractor: extracted value ([binary_v2_0_1_] : [BLOB]) - [null]
2020-11-25 20:46:41,020 TRACE  [main] BasicExtractor: extracted value ([float_va3_0_1_] : [DOUBLE]) - [54.598150033144236]
2020-11-25 20:46:41,020 TRACE  [main] BasicExtractor: extracted value ([i4_0_1_] : [INTEGER]) - [0]
2020-11-25 20:46:41,021 TRACE  [main] BasicExtractor: extracted value ([is_condi5_0_1_] : [BOOLEAN]) - [true]
2020-11-25 20:46:41,021 TRACE  [main] BasicExtractor: extracted value ([j6_0_1_] : [INTEGER]) - [4]
2020-11-25 20:46:41,021 TRACE  [main] BasicExtractor: extracted value ([problem_7_0_1_] : [BIGINT]) - [2]
2020-11-25 20:46:41,022 TRACE  [main] BasicExtractor: extracted value ([problem_7_0_0_] : [BIGINT]) - [2]
2020-11-25 20:46:41,022 TRACE  [main] BasicExtractor: extracted value ([id1_0_0_] : [BIGINT]) - [10]
2020-11-25 20:46:41,023 TRACE  [main] BasicExtractor: extracted value ([id1_0_1_] : [BIGINT]) - [11]
2020-11-25 20:46:41,023 TRACE  [main] BasicExtractor: extracted value ([binary_v2_0_1_] : [BLOB]) - [null]
2020-11-25 20:46:41,024 TRACE  [main] BasicExtractor: extracted value ([float_va3_0_1_] : [DOUBLE]) - [148.4131591025766]
2020-11-25 20:46:41,025 TRACE  [main] BasicExtractor: extracted value ([i4_0_1_] : [INTEGER]) - [0]
2020-11-25 20:46:41,025 TRACE  [main] BasicExtractor: extracted value ([is_condi5_0_1_] : [BOOLEAN]) - [true]
2020-11-25 20:46:41,025 TRACE  [main] BasicExtractor: extracted value ([j6_0_1_] : [INTEGER]) - [5]
2020-11-25 20:46:41,025 TRACE  [main] BasicExtractor: extracted value ([problem_7_0_1_] : [BIGINT]) - [2]
2020-11-25 20:46:41,025 TRACE  [main] BasicExtractor: extracted value ([problem_7_0_0_] : [BIGINT]) - [2]
2020-11-25 20:46:41,026 TRACE  [main] BasicExtractor: extracted value ([id1_0_0_] : [BIGINT]) - [11]
2020-11-25 20:46:41,174 TRACE  [main] BasicBinder: binding parameter [1] as [BIGINT] - [2]
2020-11-25 20:46:41,175 TRACE  [main] BasicExtractor: extracted value ([id1_1_2_] : [BIGINT]) - [null]
2020-11-25 20:46:41,176 TRACE  [main] BasicExtractor: extracted value ([id1_0_4_] : [BIGINT]) - [null]
2020-11-25 20:46:41,176 TRACE  [main] BasicExtractor: extracted value ([descript2_1_0_] : [BLOB]) - [[112, 114, 111, 98, 108, 101, 109, 100, 101, 115, 99, 114, 105, 112, 116, 105, 111, 110]]
2020-11-25 20:46:41,177 TRACE  [main] BasicExtractor: extracted value ([is_solve3_1_0_] : [BOOLEAN]) - [null]
2020-11-25 20:46:41,177 TRACE  [main] BasicExtractor: extracted value ([kind4_1_0_] : [VARCHAR]) - [POLYNOMIAL]
2020-11-25 20:46:41,177 TRACE  [main] BasicExtractor: extracted value ([matrix_d5_1_0_] : [INTEGER]) - [1]
2020-11-25 20:46:41,178 TRACE  [main] BasicExtractor: extracted value ([parent_p7_1_0_] : [BIGINT]) - [null]
2020-11-25 20:46:41,181 TRACE  [main] BasicExtractor: extracted value ([problem_6_1_0_] : [INTEGER]) - [22]
2020-11-25 20:46:41,182 TRACE  [main] BasicExtractor: extracted value ([problem_7_0_3_] : [BIGINT]) - [null]
2020-11-25 20:46:41,182 TRACE  [main] BasicExtractor: extracted value ([parent_p7_1_1_] : [BIGINT]) - [null]
2020-11-25 20:46:41,182 TRACE  [main] CollectionType: Created collection wrapper: [com.sf.back.entities.Problem.matrixes#2]
2020-11-25 20:46:41,183 TRACE  [main] BasicBinder: binding parameter [1] as [BIGINT] - [2]
2020-11-25 20:46:41,184 TRACE  [main] BasicExtractor: extracted value ([id1_0_1_] : [BIGINT]) - [6]
2020-11-25 20:46:41,184 TRACE  [main] BasicExtractor: extracted value ([binary_v2_0_1_] : [BLOB]) - [null]
2020-11-25 20:46:41,184 TRACE  [main] BasicExtractor: extracted value ([float_va3_0_1_] : [DOUBLE]) - [1.0]
2020-11-25 20:46:41,185 TRACE  [main] BasicExtractor: extracted value ([i4_0_1_] : [INTEGER]) - [0]
2020-11-25 20:46:41,185 TRACE  [main] BasicExtractor: extracted value ([is_condi5_0_1_] : [BOOLEAN]) - [true]
2020-11-25 20:46:41,185 TRACE  [main] BasicExtractor: extracted value ([j6_0_1_] : [INTEGER]) - [0]
2020-11-25 20:46:41,186 TRACE  [main] BasicExtractor: extracted value ([problem_7_0_1_] : [BIGINT]) - [2]
2020-11-25 20:46:41,186 TRACE  [main] BasicExtractor: extracted value ([problem_7_0_0_] : [BIGINT]) - [2]
2020-11-25 20:46:41,186 TRACE  [main] BasicExtractor: extracted value ([id1_0_0_] : [BIGINT]) - [6]
2020-11-25 20:46:41,186 TRACE  [main] BasicExtractor: extracted value ([id1_0_1_] : [BIGINT]) - [7]
2020-11-25 20:46:41,186 TRACE  [main] BasicExtractor: extracted value ([binary_v2_0_1_] : [BLOB]) - [null]
2020-11-25 20:46:41,187 TRACE  [main] BasicExtractor: extracted value ([float_va3_0_1_] : [DOUBLE]) - [2.718281828459045]
2020-11-25 20:46:41,187 TRACE  [main] BasicExtractor: extracted value ([i4_0_1_] : [INTEGER]) - [0]
2020-11-25 20:46:41,187 TRACE  [main] BasicExtractor: extracted value ([is_condi5_0_1_] : [BOOLEAN]) - [true]
2020-11-25 20:46:41,187 TRACE  [main] BasicExtractor: extracted value ([j6_0_1_] : [INTEGER]) - [1]
2020-11-25 20:46:41,187 TRACE  [main] BasicExtractor: extracted value ([problem_7_0_1_] : [BIGINT]) - [2]
2020-11-25 20:46:41,188 TRACE  [main] BasicExtractor: extracted value ([problem_7_0_0_] : [BIGINT]) - [2]
2020-11-25 20:46:41,188 TRACE  [main] BasicExtractor: extracted value ([id1_0_0_] : [BIGINT]) - [7]
2020-11-25 20:46:41,188 TRACE  [main] BasicExtractor: extracted value ([id1_0_1_] : [BIGINT]) - [8]
2020-11-25 20:46:41,189 TRACE  [main] BasicExtractor: extracted value ([binary_v2_0_1_] : [BLOB]) - [null]
2020-11-25 20:46:41,189 TRACE  [main] BasicExtractor: extracted value ([float_va3_0_1_] : [DOUBLE]) - [7.38905609893065]
2020-11-25 20:46:41,189 TRACE  [main] BasicExtractor: extracted value ([i4_0_1_] : [INTEGER]) - [0]
2020-11-25 20:46:41,189 TRACE  [main] BasicExtractor: extracted value ([is_condi5_0_1_] : [BOOLEAN]) - [true]
2020-11-25 20:46:41,190 TRACE  [main] BasicExtractor: extracted value ([j6_0_1_] : [INTEGER]) - [2]
2020-11-25 20:46:41,190 TRACE  [main] BasicExtractor: extracted value ([problem_7_0_1_] : [BIGINT]) - [2]
2020-11-25 20:46:41,190 TRACE  [main] BasicExtractor: extracted value ([problem_7_0_0_] : [BIGINT]) - [2]
2020-11-25 20:46:41,190 TRACE  [main] BasicExtractor: extracted value ([id1_0_0_] : [BIGINT]) - [8]
2020-11-25 20:46:41,191 TRACE  [main] BasicExtractor: extracted value ([id1_0_1_] : [BIGINT]) - [9]
2020-11-25 20:46:41,191 TRACE  [main] BasicExtractor: extracted value ([binary_v2_0_1_] : [BLOB]) - [null]
2020-11-25 20:46:41,192 TRACE  [main] BasicExtractor: extracted value ([float_va3_0_1_] : [DOUBLE]) - [20.085536923187668]
2020-11-25 20:46:41,192 TRACE  [main] BasicExtractor: extracted value ([i4_0_1_] : [INTEGER]) - [0]
2020-11-25 20:46:41,192 TRACE  [main] BasicExtractor: extracted value ([is_condi5_0_1_] : [BOOLEAN]) - [true]
2020-11-25 20:46:41,192 TRACE  [main] BasicExtractor: extracted value ([j6_0_1_] : [INTEGER]) - [3]
2020-11-25 20:46:41,192 TRACE  [main] BasicExtractor: extracted value ([problem_7_0_1_] : [BIGINT]) - [2]
2020-11-25 20:46:41,193 TRACE  [main] BasicExtractor: extracted value ([problem_7_0_0_] : [BIGINT]) - [2]
2020-11-25 20:46:41,193 TRACE  [main] BasicExtractor: extracted value ([id1_0_0_] : [BIGINT]) - [9]
2020-11-25 20:46:41,194 TRACE  [main] BasicExtractor: extracted value ([id1_0_1_] : [BIGINT]) - [10]
2020-11-25 20:46:41,194 TRACE  [main] BasicExtractor: extracted value ([binary_v2_0_1_] : [BLOB]) - [null]
2020-11-25 20:46:41,194 TRACE  [main] BasicExtractor: extracted value ([float_va3_0_1_] : [DOUBLE]) - [54.598150033144236]
2020-11-25 20:46:41,194 TRACE  [main] BasicExtractor: extracted value ([i4_0_1_] : [INTEGER]) - [0]
2020-11-25 20:46:41,195 TRACE  [main] BasicExtractor: extracted value ([is_condi5_0_1_] : [BOOLEAN]) - [true]
2020-11-25 20:46:41,195 TRACE  [main] BasicExtractor: extracted value ([j6_0_1_] : [INTEGER]) - [4]
2020-11-25 20:46:41,196 TRACE  [main] BasicExtractor: extracted value ([problem_7_0_1_] : [BIGINT]) - [2]
2020-11-25 20:46:41,197 TRACE  [main] BasicExtractor: extracted value ([problem_7_0_0_] : [BIGINT]) - [2]
2020-11-25 20:46:41,197 TRACE  [main] BasicExtractor: extracted value ([id1_0_0_] : [BIGINT]) - [10]
2020-11-25 20:46:41,197 TRACE  [main] BasicExtractor: extracted value ([id1_0_1_] : [BIGINT]) - [11]
2020-11-25 20:46:41,198 TRACE  [main] BasicExtractor: extracted value ([binary_v2_0_1_] : [BLOB]) - [null]
2020-11-25 20:46:41,198 TRACE  [main] BasicExtractor: extracted value ([float_va3_0_1_] : [DOUBLE]) - [148.4131591025766]
2020-11-25 20:46:41,198 TRACE  [main] BasicExtractor: extracted value ([i4_0_1_] : [INTEGER]) - [0]
2020-11-25 20:46:41,198 TRACE  [main] BasicExtractor: extracted value ([is_condi5_0_1_] : [BOOLEAN]) - [true]
2020-11-25 20:46:41,198 TRACE  [main] BasicExtractor: extracted value ([j6_0_1_] : [INTEGER]) - [5]
2020-11-25 20:46:41,199 TRACE  [main] BasicExtractor: extracted value ([problem_7_0_1_] : [BIGINT]) - [2]
2020-11-25 20:46:41,199 TRACE  [main] BasicExtractor: extracted value ([problem_7_0_0_] : [BIGINT]) - [2]
2020-11-25 20:46:41,199 TRACE  [main] BasicExtractor: extracted value ([id1_0_0_] : [BIGINT]) - [11]
2020-11-25 20:46:41,244 TRACE  [main] BasicBinder: binding parameter [1] as [BLOB] - [[100, 101, 115, 99, 114, 105, 112, 116, 105, 111, 110, 100, 101, 115, 99, 114, 105, 112, 116, 105, 111, 110]]
2020-11-25 20:46:41,244 TRACE  [main] BasicBinder: binding parameter [2] as [BOOLEAN] - [null]
2020-11-25 20:46:41,244 TRACE  [main] BasicBinder: binding parameter [3] as [VARCHAR] - [POLYNOMIAL]
2020-11-25 20:46:41,245 TRACE  [main] BasicBinder: binding parameter [4] as [INTEGER] - [1]
2020-11-25 20:46:41,245 TRACE  [main] BasicBinder: binding parameter [5] as [BIGINT] - [null]
2020-11-25 20:46:41,245 TRACE  [main] BasicBinder: binding parameter [6] as [INTEGER] - [22]
2020-11-25 20:46:41,246 TRACE  [main] BasicBinder: binding parameter [7] as [BIGINT] - [2]
2020-11-25 20:46:41,252 TRACE  [main] BasicBinder: binding parameter [1] as [BLOB] - [null]
2020-11-25 20:46:41,253 TRACE  [main] BasicBinder: binding parameter [2] as [DOUBLE] - [1.01]
2020-11-25 20:46:41,253 TRACE  [main] BasicBinder: binding parameter [3] as [INTEGER] - [0]
2020-11-25 20:46:41,253 TRACE  [main] BasicBinder: binding parameter [4] as [BOOLEAN] - [true]
2020-11-25 20:46:41,254 TRACE  [main] BasicBinder: binding parameter [5] as [INTEGER] - [0]
2020-11-25 20:46:41,254 TRACE  [main] BasicBinder: binding parameter [6] as [BIGINT] - [2]
2020-11-25 20:46:41,255 TRACE  [main] BasicBinder: binding parameter [7] as [BIGINT] - [6]
2020-11-25 20:46:41,260 TRACE  [main] BasicBinder: binding parameter [1] as [BIGINT] - [2]
2020-11-25 20:46:41,261 TRACE  [main] BasicExtractor: extracted value ([id1_1_2_] : [BIGINT]) - [null]
2020-11-25 20:46:41,261 TRACE  [main] BasicExtractor: extracted value ([id1_0_4_] : [BIGINT]) - [null]
2020-11-25 20:46:41,263 TRACE  [main] BasicExtractor: extracted value ([descript2_1_0_] : [BLOB]) - [[100, 101, 115, 99, 114, 105, 112, 116, 105, 111, 110, 100, 101, 115, 99, 114, 105, 112, 116, 105, 111, 110]]
2020-11-25 20:46:41,263 TRACE  [main] BasicExtractor: extracted value ([is_solve3_1_0_] : [BOOLEAN]) - [null]
2020-11-25 20:46:41,264 TRACE  [main] BasicExtractor: extracted value ([kind4_1_0_] : [VARCHAR]) - [POLYNOMIAL]
2020-11-25 20:46:41,264 TRACE  [main] BasicExtractor: extracted value ([matrix_d5_1_0_] : [INTEGER]) - [1]
2020-11-25 20:46:41,264 TRACE  [main] BasicExtractor: extracted value ([parent_p7_1_0_] : [BIGINT]) - [null]
2020-11-25 20:46:41,264 TRACE  [main] BasicExtractor: extracted value ([problem_6_1_0_] : [INTEGER]) - [22]
2020-11-25 20:46:41,264 TRACE  [main] BasicExtractor: extracted value ([problem_7_0_3_] : [BIGINT]) - [null]
2020-11-25 20:46:41,265 TRACE  [main] BasicExtractor: extracted value ([parent_p7_1_1_] : [BIGINT]) - [null]
2020-11-25 20:46:41,265 TRACE  [main] CollectionType: Created collection wrapper: [com.sf.back.entities.Problem.matrixes#2]
2020-11-25 20:46:41,266 TRACE  [main] BasicBinder: binding parameter [1] as [BIGINT] - [2]
2020-11-25 20:46:41,266 TRACE  [main] BasicExtractor: extracted value ([id1_0_1_] : [BIGINT]) - [6]
2020-11-25 20:46:41,267 TRACE  [main] BasicExtractor: extracted value ([binary_v2_0_1_] : [BLOB]) - [null]
2020-11-25 20:46:41,267 TRACE  [main] BasicExtractor: extracted value ([float_va3_0_1_] : [DOUBLE]) - [1.01]
2020-11-25 20:46:41,267 TRACE  [main] BasicExtractor: extracted value ([i4_0_1_] : [INTEGER]) - [0]
2020-11-25 20:46:41,267 TRACE  [main] BasicExtractor: extracted value ([is_condi5_0_1_] : [BOOLEAN]) - [true]
2020-11-25 20:46:41,267 TRACE  [main] BasicExtractor: extracted value ([j6_0_1_] : [INTEGER]) - [0]
2020-11-25 20:46:41,267 TRACE  [main] BasicExtractor: extracted value ([problem_7_0_1_] : [BIGINT]) - [2]
2020-11-25 20:46:41,268 TRACE  [main] BasicExtractor: extracted value ([problem_7_0_0_] : [BIGINT]) - [2]
2020-11-25 20:46:41,268 TRACE  [main] BasicExtractor: extracted value ([id1_0_0_] : [BIGINT]) - [6]
2020-11-25 20:46:41,268 TRACE  [main] BasicExtractor: extracted value ([id1_0_1_] : [BIGINT]) - [7]
2020-11-25 20:46:41,269 TRACE  [main] BasicExtractor: extracted value ([binary_v2_0_1_] : [BLOB]) - [null]
2020-11-25 20:46:41,269 TRACE  [main] BasicExtractor: extracted value ([float_va3_0_1_] : [DOUBLE]) - [2.718281828459045]
2020-11-25 20:46:41,269 TRACE  [main] BasicExtractor: extracted value ([i4_0_1_] : [INTEGER]) - [0]
2020-11-25 20:46:41,269 TRACE  [main] BasicExtractor: extracted value ([is_condi5_0_1_] : [BOOLEAN]) - [true]
2020-11-25 20:46:41,270 TRACE  [main] BasicExtractor: extracted value ([j6_0_1_] : [INTEGER]) - [1]
2020-11-25 20:46:41,270 TRACE  [main] BasicExtractor: extracted value ([problem_7_0_1_] : [BIGINT]) - [2]
2020-11-25 20:46:41,270 TRACE  [main] BasicExtractor: extracted value ([problem_7_0_0_] : [BIGINT]) - [2]
2020-11-25 20:46:41,270 TRACE  [main] BasicExtractor: extracted value ([id1_0_0_] : [BIGINT]) - [7]
2020-11-25 20:46:41,271 TRACE  [main] BasicExtractor: extracted value ([id1_0_1_] : [BIGINT]) - [8]
2020-11-25 20:46:41,272 TRACE  [main] BasicExtractor: extracted value ([binary_v2_0_1_] : [BLOB]) - [null]
2020-11-25 20:46:41,273 TRACE  [main] BasicExtractor: extracted value ([float_va3_0_1_] : [DOUBLE]) - [7.38905609893065]
2020-11-25 20:46:41,273 TRACE  [main] BasicExtractor: extracted value ([i4_0_1_] : [INTEGER]) - [0]
2020-11-25 20:46:41,274 TRACE  [main] BasicExtractor: extracted value ([is_condi5_0_1_] : [BOOLEAN]) - [true]
2020-11-25 20:46:41,274 TRACE  [main] BasicExtractor: extracted value ([j6_0_1_] : [INTEGER]) - [2]
2020-11-25 20:46:41,274 TRACE  [main] BasicExtractor: extracted value ([problem_7_0_1_] : [BIGINT]) - [2]
2020-11-25 20:46:41,274 TRACE  [main] BasicExtractor: extracted value ([problem_7_0_0_] : [BIGINT]) - [2]
2020-11-25 20:46:41,275 TRACE  [main] BasicExtractor: extracted value ([id1_0_0_] : [BIGINT]) - [8]
2020-11-25 20:46:41,275 TRACE  [main] BasicExtractor: extracted value ([id1_0_1_] : [BIGINT]) - [9]
2020-11-25 20:46:41,276 TRACE  [main] BasicExtractor: extracted value ([binary_v2_0_1_] : [BLOB]) - [null]
2020-11-25 20:46:41,276 TRACE  [main] BasicExtractor: extracted value ([float_va3_0_1_] : [DOUBLE]) - [20.085536923187668]
2020-11-25 20:46:41,277 TRACE  [main] BasicExtractor: extracted value ([i4_0_1_] : [INTEGER]) - [0]
2020-11-25 20:46:41,277 TRACE  [main] BasicExtractor: extracted value ([is_condi5_0_1_] : [BOOLEAN]) - [true]
2020-11-25 20:46:41,277 TRACE  [main] BasicExtractor: extracted value ([j6_0_1_] : [INTEGER]) - [3]
2020-11-25 20:46:41,278 TRACE  [main] BasicExtractor: extracted value ([problem_7_0_1_] : [BIGINT]) - [2]
2020-11-25 20:46:41,278 TRACE  [main] BasicExtractor: extracted value ([problem_7_0_0_] : [BIGINT]) - [2]
2020-11-25 20:46:41,282 TRACE  [main] BasicExtractor: extracted value ([id1_0_0_] : [BIGINT]) - [9]
2020-11-25 20:46:41,283 TRACE  [main] BasicExtractor: extracted value ([id1_0_1_] : [BIGINT]) - [10]
2020-11-25 20:46:41,283 TRACE  [main] BasicExtractor: extracted value ([binary_v2_0_1_] : [BLOB]) - [null]
2020-11-25 20:46:41,284 TRACE  [main] BasicExtractor: extracted value ([float_va3_0_1_] : [DOUBLE]) - [54.598150033144236]
2020-11-25 20:46:41,284 TRACE  [main] BasicExtractor: extracted value ([i4_0_1_] : [INTEGER]) - [0]
2020-11-25 20:46:41,285 TRACE  [main] BasicExtractor: extracted value ([is_condi5_0_1_] : [BOOLEAN]) - [true]
2020-11-25 20:46:41,285 TRACE  [main] BasicExtractor: extracted value ([j6_0_1_] : [INTEGER]) - [4]
2020-11-25 20:46:41,286 TRACE  [main] BasicExtractor: extracted value ([problem_7_0_1_] : [BIGINT]) - [2]
2020-11-25 20:46:41,286 TRACE  [main] BasicExtractor: extracted value ([problem_7_0_0_] : [BIGINT]) - [2]
2020-11-25 20:46:41,286 TRACE  [main] BasicExtractor: extracted value ([id1_0_0_] : [BIGINT]) - [10]
2020-11-25 20:46:41,287 TRACE  [main] BasicExtractor: extracted value ([id1_0_1_] : [BIGINT]) - [11]
2020-11-25 20:46:41,287 TRACE  [main] BasicExtractor: extracted value ([binary_v2_0_1_] : [BLOB]) - [null]
2020-11-25 20:46:41,287 TRACE  [main] BasicExtractor: extracted value ([float_va3_0_1_] : [DOUBLE]) - [148.4131591025766]
2020-11-25 20:46:41,287 TRACE  [main] BasicExtractor: extracted value ([i4_0_1_] : [INTEGER]) - [0]
2020-11-25 20:46:41,287 TRACE  [main] BasicExtractor: extracted value ([is_condi5_0_1_] : [BOOLEAN]) - [true]
2020-11-25 20:46:41,288 TRACE  [main] BasicExtractor: extracted value ([j6_0_1_] : [INTEGER]) - [5]
2020-11-25 20:46:41,288 TRACE  [main] BasicExtractor: extracted value ([problem_7_0_1_] : [BIGINT]) - [2]
2020-11-25 20:46:41,288 TRACE  [main] BasicExtractor: extracted value ([problem_7_0_0_] : [BIGINT]) - [2]
2020-11-25 20:46:41,288 TRACE  [main] BasicExtractor: extracted value ([id1_0_0_] : [BIGINT]) - [11]
2020-11-25 20:46:41,307 TRACE  [main] BasicBinder: binding parameter [1] as [BLOB] - [[100, 101, 115, 99, 114, 105, 112, 116, 105, 111, 110]]
2020-11-25 20:46:41,308 TRACE  [main] BasicBinder: binding parameter [2] as [BOOLEAN] - [false]
2020-11-25 20:46:41,308 TRACE  [main] BasicBinder: binding parameter [3] as [VARCHAR] - [POLYNOMIAL]
2020-11-25 20:46:41,308 TRACE  [main] BasicBinder: binding parameter [4] as [INTEGER] - [12]
2020-11-25 20:46:41,308 TRACE  [main] BasicBinder: binding parameter [5] as [BIGINT] - [null]
2020-11-25 20:46:41,308 TRACE  [main] BasicBinder: binding parameter [6] as [INTEGER] - [null]
2020-11-25 20:46:41,310 TRACE  [main] BasicBinder: binding parameter [1] as [BLOB] - [null]
2020-11-25 20:46:41,310 TRACE  [main] BasicBinder: binding parameter [2] as [DOUBLE] - [0.0]
2020-11-25 20:46:41,310 TRACE  [main] BasicBinder: binding parameter [3] as [INTEGER] - [0]
2020-11-25 20:46:41,310 TRACE  [main] BasicBinder: binding parameter [4] as [BOOLEAN] - [true]
2020-11-25 20:46:41,311 TRACE  [main] BasicBinder: binding parameter [5] as [INTEGER] - [0]
2020-11-25 20:46:41,311 TRACE  [main] BasicBinder: binding parameter [6] as [BIGINT] - [4]
2020-11-25 20:46:41,312 TRACE  [main] BasicBinder: binding parameter [1] as [BLOB] - [null]
2020-11-25 20:46:41,313 TRACE  [main] BasicBinder: binding parameter [2] as [DOUBLE] - [1.0]
2020-11-25 20:46:41,313 TRACE  [main] BasicBinder: binding parameter [3] as [INTEGER] - [0]
2020-11-25 20:46:41,313 TRACE  [main] BasicBinder: binding parameter [4] as [BOOLEAN] - [true]
2020-11-25 20:46:41,314 TRACE  [main] BasicBinder: binding parameter [5] as [INTEGER] - [1]
2020-11-25 20:46:41,315 TRACE  [main] BasicBinder: binding parameter [6] as [BIGINT] - [4]
2020-11-25 20:46:41,317 TRACE  [main] BasicBinder: binding parameter [1] as [BLOB] - [null]
2020-11-25 20:46:41,317 TRACE  [main] BasicBinder: binding parameter [2] as [DOUBLE] - [2.0]
2020-11-25 20:46:41,317 TRACE  [main] BasicBinder: binding parameter [3] as [INTEGER] - [0]
2020-11-25 20:46:41,317 TRACE  [main] BasicBinder: binding parameter [4] as [BOOLEAN] - [true]
2020-11-25 20:46:41,317 TRACE  [main] BasicBinder: binding parameter [5] as [INTEGER] - [2]
2020-11-25 20:46:41,318 TRACE  [main] BasicBinder: binding parameter [6] as [BIGINT] - [4]
2020-11-25 20:46:41,319 TRACE  [main] BasicBinder: binding parameter [1] as [BLOB] - [null]
2020-11-25 20:46:41,319 TRACE  [main] BasicBinder: binding parameter [2] as [DOUBLE] - [3.0]
2020-11-25 20:46:41,319 TRACE  [main] BasicBinder: binding parameter [3] as [INTEGER] - [0]
2020-11-25 20:46:41,319 TRACE  [main] BasicBinder: binding parameter [4] as [BOOLEAN] - [true]
2020-11-25 20:46:41,320 TRACE  [main] BasicBinder: binding parameter [5] as [INTEGER] - [3]
2020-11-25 20:46:41,320 TRACE  [main] BasicBinder: binding parameter [6] as [BIGINT] - [4]
2020-11-25 20:46:41,321 TRACE  [main] BasicBinder: binding parameter [1] as [BLOB] - [null]
2020-11-25 20:46:41,321 TRACE  [main] BasicBinder: binding parameter [2] as [DOUBLE] - [4.0]
2020-11-25 20:46:41,321 TRACE  [main] BasicBinder: binding parameter [3] as [INTEGER] - [0]
2020-11-25 20:46:41,322 TRACE  [main] BasicBinder: binding parameter [4] as [BOOLEAN] - [true]
2020-11-25 20:46:41,322 TRACE  [main] BasicBinder: binding parameter [5] as [INTEGER] - [4]
2020-11-25 20:46:41,322 TRACE  [main] BasicBinder: binding parameter [6] as [BIGINT] - [4]
2020-11-25 20:46:41,323 TRACE  [main] BasicBinder: binding parameter [1] as [BLOB] - [null]
2020-11-25 20:46:41,323 TRACE  [main] BasicBinder: binding parameter [2] as [DOUBLE] - [5.0]
2020-11-25 20:46:41,323 TRACE  [main] BasicBinder: binding parameter [3] as [INTEGER] - [0]
2020-11-25 20:46:41,324 TRACE  [main] BasicBinder: binding parameter [4] as [BOOLEAN] - [true]
2020-11-25 20:46:41,324 TRACE  [main] BasicBinder: binding parameter [5] as [INTEGER] - [5]
2020-11-25 20:46:41,324 TRACE  [main] BasicBinder: binding parameter [6] as [BIGINT] - [4]
2020-11-25 20:46:41,327 TRACE  [main] BasicBinder: binding parameter [1] as [BLOB] - [null]
2020-11-25 20:46:41,327 TRACE  [main] BasicBinder: binding parameter [2] as [DOUBLE] - [6.0]
2020-11-25 20:46:41,328 TRACE  [main] BasicBinder: binding parameter [3] as [INTEGER] - [0]
2020-11-25 20:46:41,328 TRACE  [main] BasicBinder: binding parameter [4] as [BOOLEAN] - [true]
2020-11-25 20:46:41,328 TRACE  [main] BasicBinder: binding parameter [5] as [INTEGER] - [6]
2020-11-25 20:46:41,330 TRACE  [main] BasicBinder: binding parameter [6] as [BIGINT] - [4]
2020-11-25 20:46:41,337 TRACE  [main] BasicBinder: binding parameter [1] as [BLOB] - [null]
2020-11-25 20:46:41,337 TRACE  [main] BasicBinder: binding parameter [2] as [DOUBLE] - [7.0]
2020-11-25 20:46:41,337 TRACE  [main] BasicBinder: binding parameter [3] as [INTEGER] - [0]
2020-11-25 20:46:41,337 TRACE  [main] BasicBinder: binding parameter [4] as [BOOLEAN] - [true]
2020-11-25 20:46:41,337 TRACE  [main] BasicBinder: binding parameter [5] as [INTEGER] - [7]
2020-11-25 20:46:41,338 TRACE  [main] BasicBinder: binding parameter [6] as [BIGINT] - [4]
2020-11-25 20:46:41,339 TRACE  [main] BasicBinder: binding parameter [1] as [BLOB] - [null]
2020-11-25 20:46:41,339 TRACE  [main] BasicBinder: binding parameter [2] as [DOUBLE] - [8.0]
2020-11-25 20:46:41,339 TRACE  [main] BasicBinder: binding parameter [3] as [INTEGER] - [0]
2020-11-25 20:46:41,339 TRACE  [main] BasicBinder: binding parameter [4] as [BOOLEAN] - [true]
2020-11-25 20:46:41,340 TRACE  [main] BasicBinder: binding parameter [5] as [INTEGER] - [8]
2020-11-25 20:46:41,340 TRACE  [main] BasicBinder: binding parameter [6] as [BIGINT] - [4]
2020-11-25 20:46:41,341 TRACE  [main] BasicBinder: binding parameter [1] as [BLOB] - [null]
2020-11-25 20:46:41,341 TRACE  [main] BasicBinder: binding parameter [2] as [DOUBLE] - [9.0]
2020-11-25 20:46:41,341 TRACE  [main] BasicBinder: binding parameter [3] as [INTEGER] - [0]
2020-11-25 20:46:41,341 TRACE  [main] BasicBinder: binding parameter [4] as [BOOLEAN] - [true]
2020-11-25 20:46:41,341 TRACE  [main] BasicBinder: binding parameter [5] as [INTEGER] - [9]
2020-11-25 20:46:41,341 TRACE  [main] BasicBinder: binding parameter [6] as [BIGINT] - [4]
2020-11-25 20:46:41,628 TRACE  [main] BasicExtractor: extracted value ([id1_1_] : [BIGINT]) - [1]
2020-11-25 20:46:41,630 TRACE  [main] BasicExtractor: extracted value ([descript2_1_] : [BLOB]) - [[70, 105, 110, 100, 32, 97, 108, 108, 32, 114, 111, 111, 116, 115, 32, 111, 102, 32, 103, 105, 118, 101, 110, 32, 112, 111, 108, 121, 110, 111, 109, 105, 97, 108]]
2020-11-25 20:46:41,631 TRACE  [main] BasicExtractor: extracted value ([is_solve3_1_] : [BOOLEAN]) - [false]
2020-11-25 20:46:41,631 TRACE  [main] BasicExtractor: extracted value ([kind4_1_] : [VARCHAR]) - [POLYNOMIAL]
2020-11-25 20:46:41,631 TRACE  [main] BasicExtractor: extracted value ([matrix_d5_1_] : [INTEGER]) - [1]
2020-11-25 20:46:41,631 TRACE  [main] BasicExtractor: extracted value ([parent_p7_1_] : [BIGINT]) - [null]
2020-11-25 20:46:41,631 TRACE  [main] BasicExtractor: extracted value ([problem_6_1_] : [INTEGER]) - [6]
2020-11-25 20:46:41,632 TRACE  [main] BasicExtractor: extracted value ([id1_1_] : [BIGINT]) - [2]
2020-11-25 20:46:41,632 TRACE  [main] BasicExtractor: extracted value ([descript2_1_] : [BLOB]) - [[100, 101, 115, 99, 114, 105, 112, 116, 105, 111, 110, 100, 101, 115, 99, 114, 105, 112, 116, 105, 111, 110]]
2020-11-25 20:46:41,633 TRACE  [main] BasicExtractor: extracted value ([is_solve3_1_] : [BOOLEAN]) - [null]
2020-11-25 20:46:41,633 TRACE  [main] BasicExtractor: extracted value ([kind4_1_] : [VARCHAR]) - [POLYNOMIAL]
2020-11-25 20:46:41,633 TRACE  [main] BasicExtractor: extracted value ([matrix_d5_1_] : [INTEGER]) - [1]
2020-11-25 20:46:41,633 TRACE  [main] BasicExtractor: extracted value ([parent_p7_1_] : [BIGINT]) - [null]
2020-11-25 20:46:41,633 TRACE  [main] BasicExtractor: extracted value ([problem_6_1_] : [INTEGER]) - [22]
2020-11-25 20:46:41,633 TRACE  [main] BasicExtractor: extracted value ([id1_1_] : [BIGINT]) - [3]
2020-11-25 20:46:41,634 TRACE  [main] BasicExtractor: extracted value ([descript2_1_] : [BLOB]) - [[112, 114, 111, 98, 108, 101, 109, 100, 101, 115, 99, 114, 105, 112, 116, 105, 111, 110]]
2020-11-25 20:46:41,634 TRACE  [main] BasicExtractor: extracted value ([is_solve3_1_] : [BOOLEAN]) - [null]
2020-11-25 20:46:41,635 TRACE  [main] BasicExtractor: extracted value ([kind4_1_] : [VARCHAR]) - [POLYNOMIAL]
2020-11-25 20:46:41,635 TRACE  [main] BasicExtractor: extracted value ([matrix_d5_1_] : [INTEGER]) - [1]
2020-11-25 20:46:41,636 TRACE  [main] BasicExtractor: extracted value ([parent_p7_1_] : [BIGINT]) - [null]
2020-11-25 20:46:41,636 TRACE  [main] BasicExtractor: extracted value ([problem_6_1_] : [INTEGER]) - [22]
2020-11-25 20:46:41,636 TRACE  [main] BasicExtractor: extracted value ([id1_1_] : [BIGINT]) - [4]
2020-11-25 20:46:41,637 TRACE  [main] BasicExtractor: extracted value ([descript2_1_] : [BLOB]) - [[100, 101, 115, 99, 114, 105, 112, 116, 105, 111, 110]]
2020-11-25 20:46:41,637 TRACE  [main] BasicExtractor: extracted value ([is_solve3_1_] : [BOOLEAN]) - [false]
2020-11-25 20:46:41,637 TRACE  [main] BasicExtractor: extracted value ([kind4_1_] : [VARCHAR]) - [POLYNOMIAL]
2020-11-25 20:46:41,637 TRACE  [main] BasicExtractor: extracted value ([matrix_d5_1_] : [INTEGER]) - [12]
2020-11-25 20:46:41,638 TRACE  [main] BasicExtractor: extracted value ([parent_p7_1_] : [BIGINT]) - [null]
2020-11-25 20:46:41,638 TRACE  [main] BasicExtractor: extracted value ([problem_6_1_] : [INTEGER]) - [null]
2020-11-25 20:46:41,643 TRACE  [main] BasicExtractor: extracted value ([id1_1_] : [BIGINT]) - [5]
2020-11-25 20:46:41,644 TRACE  [main] BasicExtractor: extracted value ([descript2_1_] : [BLOB]) - [[112, 114, 111, 98, 108, 101, 109, 100, 101, 115, 99, 114, 105, 112, 116, 105, 111, 110]]
2020-11-25 20:46:41,644 TRACE  [main] BasicExtractor: extracted value ([is_solve3_1_] : [BOOLEAN]) - [null]
2020-11-25 20:46:41,645 TRACE  [main] BasicExtractor: extracted value ([kind4_1_] : [VARCHAR]) - [POLYNOMIAL]
2020-11-25 20:46:41,646 TRACE  [main] BasicExtractor: extracted value ([matrix_d5_1_] : [INTEGER]) - [1]
2020-11-25 20:46:41,646 TRACE  [main] BasicExtractor: extracted value ([parent_p7_1_] : [BIGINT]) - [null]
2020-11-25 20:46:41,647 TRACE  [main] BasicExtractor: extracted value ([problem_6_1_] : [INTEGER]) - [22]
2020-11-25 20:46:41,647 TRACE  [main] CollectionType: Created collection wrapper: [com.sf.back.entities.Problem.children#1]
2020-11-25 20:46:41,647 TRACE  [main] CollectionType: Created collection wrapper: [com.sf.back.entities.Problem.matrixes#1]
2020-11-25 20:46:41,648 TRACE  [main] CollectionType: Created collection wrapper: [com.sf.back.entities.Problem.children#2]
2020-11-25 20:46:41,648 TRACE  [main] CollectionType: Created collection wrapper: [com.sf.back.entities.Problem.matrixes#2]
2020-11-25 20:46:41,649 TRACE  [main] CollectionType: Created collection wrapper: [com.sf.back.entities.Problem.children#3]
2020-11-25 20:46:41,649 TRACE  [main] CollectionType: Created collection wrapper: [com.sf.back.entities.Problem.matrixes#3]
2020-11-25 20:46:41,649 TRACE  [main] CollectionType: Created collection wrapper: [com.sf.back.entities.Problem.children#4]
2020-11-25 20:46:41,650 TRACE  [main] CollectionType: Created collection wrapper: [com.sf.back.entities.Problem.matrixes#4]
2020-11-25 20:46:41,650 TRACE  [main] CollectionType: Created collection wrapper: [com.sf.back.entities.Problem.children#5]
2020-11-25 20:46:41,650 TRACE  [main] CollectionType: Created collection wrapper: [com.sf.back.entities.Problem.matrixes#5]
2020-11-25 20:46:41,651 TRACE  [main] BasicBinder: binding parameter [1] as [BIGINT] - [5]
2020-11-25 20:46:41,653 TRACE  [main] BasicExtractor: extracted value ([id1_0_1_] : [BIGINT]) - [28]
2020-11-25 20:46:41,653 TRACE  [main] BasicExtractor: extracted value ([binary_v2_0_1_] : [BLOB]) - [null]
2020-11-25 20:46:41,653 TRACE  [main] BasicExtractor: extracted value ([float_va3_0_1_] : [DOUBLE]) - [1.0]
2020-11-25 20:46:41,653 TRACE  [main] BasicExtractor: extracted value ([i4_0_1_] : [INTEGER]) - [0]
2020-11-25 20:46:41,653 TRACE  [main] BasicExtractor: extracted value ([is_condi5_0_1_] : [BOOLEAN]) - [true]
2020-11-25 20:46:41,654 TRACE  [main] BasicExtractor: extracted value ([j6_0_1_] : [INTEGER]) - [0]
2020-11-25 20:46:41,654 TRACE  [main] BasicExtractor: extracted value ([problem_7_0_1_] : [BIGINT]) - [5]
2020-11-25 20:46:41,655 TRACE  [main] BasicExtractor: extracted value ([problem_7_0_0_] : [BIGINT]) - [5]
2020-11-25 20:46:41,655 TRACE  [main] BasicExtractor: extracted value ([id1_0_0_] : [BIGINT]) - [28]
2020-11-25 20:46:41,655 TRACE  [main] BasicExtractor: extracted value ([id1_0_1_] : [BIGINT]) - [29]
2020-11-25 20:46:41,655 TRACE  [main] BasicExtractor: extracted value ([binary_v2_0_1_] : [BLOB]) - [null]
2020-11-25 20:46:41,655 TRACE  [main] BasicExtractor: extracted value ([float_va3_0_1_] : [DOUBLE]) - [2.718281828459045]
2020-11-25 20:46:41,655 TRACE  [main] BasicExtractor: extracted value ([i4_0_1_] : [INTEGER]) - [0]
2020-11-25 20:46:41,656 TRACE  [main] BasicExtractor: extracted value ([is_condi5_0_1_] : [BOOLEAN]) - [true]
2020-11-25 20:46:41,656 TRACE  [main] BasicExtractor: extracted value ([j6_0_1_] : [INTEGER]) - [1]
2020-11-25 20:46:41,656 TRACE  [main] BasicExtractor: extracted value ([problem_7_0_1_] : [BIGINT]) - [5]
2020-11-25 20:46:41,656 TRACE  [main] BasicExtractor: extracted value ([problem_7_0_0_] : [BIGINT]) - [5]
2020-11-25 20:46:41,656 TRACE  [main] BasicExtractor: extracted value ([id1_0_0_] : [BIGINT]) - [29]
2020-11-25 20:46:41,656 TRACE  [main] BasicExtractor: extracted value ([id1_0_1_] : [BIGINT]) - [30]
2020-11-25 20:46:41,657 TRACE  [main] BasicExtractor: extracted value ([binary_v2_0_1_] : [BLOB]) - [null]
2020-11-25 20:46:41,657 TRACE  [main] BasicExtractor: extracted value ([float_va3_0_1_] : [DOUBLE]) - [7.38905609893065]
2020-11-25 20:46:41,657 TRACE  [main] BasicExtractor: extracted value ([i4_0_1_] : [INTEGER]) - [0]
2020-11-25 20:46:41,657 TRACE  [main] BasicExtractor: extracted value ([is_condi5_0_1_] : [BOOLEAN]) - [true]
2020-11-25 20:46:41,657 TRACE  [main] BasicExtractor: extracted value ([j6_0_1_] : [INTEGER]) - [2]
2020-11-25 20:46:41,657 TRACE  [main] BasicExtractor: extracted value ([problem_7_0_1_] : [BIGINT]) - [5]
2020-11-25 20:46:41,658 TRACE  [main] BasicExtractor: extracted value ([problem_7_0_0_] : [BIGINT]) - [5]
2020-11-25 20:46:41,658 TRACE  [main] BasicExtractor: extracted value ([id1_0_0_] : [BIGINT]) - [30]
2020-11-25 20:46:41,658 TRACE  [main] BasicExtractor: extracted value ([id1_0_1_] : [BIGINT]) - [31]
2020-11-25 20:46:41,659 TRACE  [main] BasicExtractor: extracted value ([binary_v2_0_1_] : [BLOB]) - [null]
2020-11-25 20:46:41,659 TRACE  [main] BasicExtractor: extracted value ([float_va3_0_1_] : [DOUBLE]) - [20.085536923187668]
2020-11-25 20:46:41,659 TRACE  [main] BasicExtractor: extracted value ([i4_0_1_] : [INTEGER]) - [0]
2020-11-25 20:46:41,659 TRACE  [main] BasicExtractor: extracted value ([is_condi5_0_1_] : [BOOLEAN]) - [true]
2020-11-25 20:46:41,659 TRACE  [main] BasicExtractor: extracted value ([j6_0_1_] : [INTEGER]) - [3]
2020-11-25 20:46:41,659 TRACE  [main] BasicExtractor: extracted value ([problem_7_0_1_] : [BIGINT]) - [5]
2020-11-25 20:46:41,659 TRACE  [main] BasicExtractor: extracted value ([problem_7_0_0_] : [BIGINT]) - [5]
2020-11-25 20:46:41,660 TRACE  [main] BasicExtractor: extracted value ([id1_0_0_] : [BIGINT]) - [31]
2020-11-25 20:46:41,660 TRACE  [main] BasicExtractor: extracted value ([id1_0_1_] : [BIGINT]) - [32]
2020-11-25 20:46:41,660 TRACE  [main] BasicExtractor: extracted value ([binary_v2_0_1_] : [BLOB]) - [null]
2020-11-25 20:46:41,660 TRACE  [main] BasicExtractor: extracted value ([float_va3_0_1_] : [DOUBLE]) - [54.598150033144236]
2020-11-25 20:46:41,660 TRACE  [main] BasicExtractor: extracted value ([i4_0_1_] : [INTEGER]) - [0]
2020-11-25 20:46:41,660 TRACE  [main] BasicExtractor: extracted value ([is_condi5_0_1_] : [BOOLEAN]) - [true]
2020-11-25 20:46:41,660 TRACE  [main] BasicExtractor: extracted value ([j6_0_1_] : [INTEGER]) - [4]
2020-11-25 20:46:41,661 TRACE  [main] BasicExtractor: extracted value ([problem_7_0_1_] : [BIGINT]) - [5]
2020-11-25 20:46:41,661 TRACE  [main] BasicExtractor: extracted value ([problem_7_0_0_] : [BIGINT]) - [5]
2020-11-25 20:46:41,661 TRACE  [main] BasicExtractor: extracted value ([id1_0_0_] : [BIGINT]) - [32]
2020-11-25 20:46:41,661 TRACE  [main] BasicExtractor: extracted value ([id1_0_1_] : [BIGINT]) - [33]
2020-11-25 20:46:41,661 TRACE  [main] BasicExtractor: extracted value ([binary_v2_0_1_] : [BLOB]) - [null]
2020-11-25 20:46:41,663 TRACE  [main] BasicExtractor: extracted value ([float_va3_0_1_] : [DOUBLE]) - [148.4131591025766]
2020-11-25 20:46:41,664 TRACE  [main] BasicExtractor: extracted value ([i4_0_1_] : [INTEGER]) - [0]
2020-11-25 20:46:41,664 TRACE  [main] BasicExtractor: extracted value ([is_condi5_0_1_] : [BOOLEAN]) - [true]
2020-11-25 20:46:41,664 TRACE  [main] BasicExtractor: extracted value ([j6_0_1_] : [INTEGER]) - [5]
2020-11-25 20:46:41,664 TRACE  [main] BasicExtractor: extracted value ([problem_7_0_1_] : [BIGINT]) - [5]
2020-11-25 20:46:41,664 TRACE  [main] BasicExtractor: extracted value ([problem_7_0_0_] : [BIGINT]) - [5]
2020-11-25 20:46:41,664 TRACE  [main] BasicExtractor: extracted value ([id1_0_0_] : [BIGINT]) - [33]
2020-11-25 20:46:41,667 TRACE  [main] BasicBinder: binding parameter [1] as [BIGINT] - [5]
2020-11-25 20:46:41,668 TRACE  [main] BasicBinder: binding parameter [1] as [BIGINT] - [4]
2020-11-25 20:46:41,669 TRACE  [main] BasicExtractor: extracted value ([id1_0_1_] : [BIGINT]) - [18]
2020-11-25 20:46:41,670 TRACE  [main] BasicExtractor: extracted value ([binary_v2_0_1_] : [BLOB]) - [null]
2020-11-25 20:46:41,670 TRACE  [main] BasicExtractor: extracted value ([float_va3_0_1_] : [DOUBLE]) - [0.0]
2020-11-25 20:46:41,670 TRACE  [main] BasicExtractor: extracted value ([i4_0_1_] : [INTEGER]) - [0]
2020-11-25 20:46:41,670 TRACE  [main] BasicExtractor: extracted value ([is_condi5_0_1_] : [BOOLEAN]) - [true]
2020-11-25 20:46:41,671 TRACE  [main] BasicExtractor: extracted value ([j6_0_1_] : [INTEGER]) - [0]
2020-11-25 20:46:41,671 TRACE  [main] BasicExtractor: extracted value ([problem_7_0_1_] : [BIGINT]) - [4]
2020-11-25 20:46:41,671 TRACE  [main] BasicExtractor: extracted value ([problem_7_0_0_] : [BIGINT]) - [4]
2020-11-25 20:46:41,671 TRACE  [main] BasicExtractor: extracted value ([id1_0_0_] : [BIGINT]) - [18]
2020-11-25 20:46:41,671 TRACE  [main] BasicExtractor: extracted value ([id1_0_1_] : [BIGINT]) - [19]
2020-11-25 20:46:41,672 TRACE  [main] BasicExtractor: extracted value ([binary_v2_0_1_] : [BLOB]) - [null]
2020-11-25 20:46:41,672 TRACE  [main] BasicExtractor: extracted value ([float_va3_0_1_] : [DOUBLE]) - [1.0]
2020-11-25 20:46:41,672 TRACE  [main] BasicExtractor: extracted value ([i4_0_1_] : [INTEGER]) - [0]
2020-11-25 20:46:41,672 TRACE  [main] BasicExtractor: extracted value ([is_condi5_0_1_] : [BOOLEAN]) - [true]
2020-11-25 20:46:41,672 TRACE  [main] BasicExtractor: extracted value ([j6_0_1_] : [INTEGER]) - [1]
2020-11-25 20:46:41,672 TRACE  [main] BasicExtractor: extracted value ([problem_7_0_1_] : [BIGINT]) - [4]
2020-11-25 20:46:41,672 TRACE  [main] BasicExtractor: extracted value ([problem_7_0_0_] : [BIGINT]) - [4]
2020-11-25 20:46:41,673 TRACE  [main] BasicExtractor: extracted value ([id1_0_0_] : [BIGINT]) - [19]
2020-11-25 20:46:41,673 TRACE  [main] BasicExtractor: extracted value ([id1_0_1_] : [BIGINT]) - [20]
2020-11-25 20:46:41,673 TRACE  [main] BasicExtractor: extracted value ([binary_v2_0_1_] : [BLOB]) - [null]
2020-11-25 20:46:41,673 TRACE  [main] BasicExtractor: extracted value ([float_va3_0_1_] : [DOUBLE]) - [2.0]
2020-11-25 20:46:41,673 TRACE  [main] BasicExtractor: extracted value ([i4_0_1_] : [INTEGER]) - [0]
2020-11-25 20:46:41,674 TRACE  [main] BasicExtractor: extracted value ([is_condi5_0_1_] : [BOOLEAN]) - [true]
2020-11-25 20:46:41,674 TRACE  [main] BasicExtractor: extracted value ([j6_0_1_] : [INTEGER]) - [2]
2020-11-25 20:46:41,674 TRACE  [main] BasicExtractor: extracted value ([problem_7_0_1_] : [BIGINT]) - [4]
2020-11-25 20:46:41,674 TRACE  [main] BasicExtractor: extracted value ([problem_7_0_0_] : [BIGINT]) - [4]
2020-11-25 20:46:41,674 TRACE  [main] BasicExtractor: extracted value ([id1_0_0_] : [BIGINT]) - [20]
2020-11-25 20:46:41,674 TRACE  [main] BasicExtractor: extracted value ([id1_0_1_] : [BIGINT]) - [21]
2020-11-25 20:46:41,674 TRACE  [main] BasicExtractor: extracted value ([binary_v2_0_1_] : [BLOB]) - [null]
2020-11-25 20:46:41,675 TRACE  [main] BasicExtractor: extracted value ([float_va3_0_1_] : [DOUBLE]) - [3.0]
2020-11-25 20:46:41,675 TRACE  [main] BasicExtractor: extracted value ([i4_0_1_] : [INTEGER]) - [0]
2020-11-25 20:46:41,675 TRACE  [main] BasicExtractor: extracted value ([is_condi5_0_1_] : [BOOLEAN]) - [true]
2020-11-25 20:46:41,675 TRACE  [main] BasicExtractor: extracted value ([j6_0_1_] : [INTEGER]) - [3]
2020-11-25 20:46:41,675 TRACE  [main] BasicExtractor: extracted value ([problem_7_0_1_] : [BIGINT]) - [4]
2020-11-25 20:46:41,675 TRACE  [main] BasicExtractor: extracted value ([problem_7_0_0_] : [BIGINT]) - [4]
2020-11-25 20:46:41,676 TRACE  [main] BasicExtractor: extracted value ([id1_0_0_] : [BIGINT]) - [21]
2020-11-25 20:46:41,676 TRACE  [main] BasicExtractor: extracted value ([id1_0_1_] : [BIGINT]) - [22]
2020-11-25 20:46:41,676 TRACE  [main] BasicExtractor: extracted value ([binary_v2_0_1_] : [BLOB]) - [null]
2020-11-25 20:46:41,676 TRACE  [main] BasicExtractor: extracted value ([float_va3_0_1_] : [DOUBLE]) - [4.0]
2020-11-25 20:46:41,676 TRACE  [main] BasicExtractor: extracted value ([i4_0_1_] : [INTEGER]) - [0]
2020-11-25 20:46:41,676 TRACE  [main] BasicExtractor: extracted value ([is_condi5_0_1_] : [BOOLEAN]) - [true]
2020-11-25 20:46:41,676 TRACE  [main] BasicExtractor: extracted value ([j6_0_1_] : [INTEGER]) - [4]
2020-11-25 20:46:41,677 TRACE  [main] BasicExtractor: extracted value ([problem_7_0_1_] : [BIGINT]) - [4]
2020-11-25 20:46:41,677 TRACE  [main] BasicExtractor: extracted value ([problem_7_0_0_] : [BIGINT]) - [4]
2020-11-25 20:46:41,677 TRACE  [main] BasicExtractor: extracted value ([id1_0_0_] : [BIGINT]) - [22]
2020-11-25 20:46:41,678 TRACE  [main] BasicExtractor: extracted value ([id1_0_1_] : [BIGINT]) - [23]
2020-11-25 20:46:41,678 TRACE  [main] BasicExtractor: extracted value ([binary_v2_0_1_] : [BLOB]) - [null]
2020-11-25 20:46:41,678 TRACE  [main] BasicExtractor: extracted value ([float_va3_0_1_] : [DOUBLE]) - [5.0]
2020-11-25 20:46:41,678 TRACE  [main] BasicExtractor: extracted value ([i4_0_1_] : [INTEGER]) - [0]
2020-11-25 20:46:41,678 TRACE  [main] BasicExtractor: extracted value ([is_condi5_0_1_] : [BOOLEAN]) - [true]
2020-11-25 20:46:41,678 TRACE  [main] BasicExtractor: extracted value ([j6_0_1_] : [INTEGER]) - [5]
2020-11-25 20:46:41,679 TRACE  [main] BasicExtractor: extracted value ([problem_7_0_1_] : [BIGINT]) - [4]
2020-11-25 20:46:41,680 TRACE  [main] BasicExtractor: extracted value ([problem_7_0_0_] : [BIGINT]) - [4]
2020-11-25 20:46:41,680 TRACE  [main] BasicExtractor: extracted value ([id1_0_0_] : [BIGINT]) - [23]
2020-11-25 20:46:41,680 TRACE  [main] BasicExtractor: extracted value ([id1_0_1_] : [BIGINT]) - [24]
2020-11-25 20:46:41,680 TRACE  [main] BasicExtractor: extracted value ([binary_v2_0_1_] : [BLOB]) - [null]
2020-11-25 20:46:41,681 TRACE  [main] BasicExtractor: extracted value ([float_va3_0_1_] : [DOUBLE]) - [6.0]
2020-11-25 20:46:41,681 TRACE  [main] BasicExtractor: extracted value ([i4_0_1_] : [INTEGER]) - [0]
2020-11-25 20:46:41,682 TRACE  [main] BasicExtractor: extracted value ([is_condi5_0_1_] : [BOOLEAN]) - [true]
2020-11-25 20:46:41,682 TRACE  [main] BasicExtractor: extracted value ([j6_0_1_] : [INTEGER]) - [6]
2020-11-25 20:46:41,683 TRACE  [main] BasicExtractor: extracted value ([problem_7_0_1_] : [BIGINT]) - [4]
2020-11-25 20:46:41,683 TRACE  [main] BasicExtractor: extracted value ([problem_7_0_0_] : [BIGINT]) - [4]
2020-11-25 20:46:41,683 TRACE  [main] BasicExtractor: extracted value ([id1_0_0_] : [BIGINT]) - [24]
2020-11-25 20:46:41,684 TRACE  [main] BasicExtractor: extracted value ([id1_0_1_] : [BIGINT]) - [25]
2020-11-25 20:46:41,684 TRACE  [main] BasicExtractor: extracted value ([binary_v2_0_1_] : [BLOB]) - [null]
2020-11-25 20:46:41,684 TRACE  [main] BasicExtractor: extracted value ([float_va3_0_1_] : [DOUBLE]) - [7.0]
2020-11-25 20:46:41,684 TRACE  [main] BasicExtractor: extracted value ([i4_0_1_] : [INTEGER]) - [0]
2020-11-25 20:46:41,684 TRACE  [main] BasicExtractor: extracted value ([is_condi5_0_1_] : [BOOLEAN]) - [true]
2020-11-25 20:46:41,684 TRACE  [main] BasicExtractor: extracted value ([j6_0_1_] : [INTEGER]) - [7]
2020-11-25 20:46:41,685 TRACE  [main] BasicExtractor: extracted value ([problem_7_0_1_] : [BIGINT]) - [4]
2020-11-25 20:46:41,685 TRACE  [main] BasicExtractor: extracted value ([problem_7_0_0_] : [BIGINT]) - [4]
2020-11-25 20:46:41,685 TRACE  [main] BasicExtractor: extracted value ([id1_0_0_] : [BIGINT]) - [25]
2020-11-25 20:46:41,685 TRACE  [main] BasicExtractor: extracted value ([id1_0_1_] : [BIGINT]) - [26]
2020-11-25 20:46:41,699 TRACE  [main] BasicExtractor: extracted value ([binary_v2_0_1_] : [BLOB]) - [null]
2020-11-25 20:46:41,699 TRACE  [main] BasicExtractor: extracted value ([float_va3_0_1_] : [DOUBLE]) - [8.0]
2020-11-25 20:46:41,699 TRACE  [main] BasicExtractor: extracted value ([i4_0_1_] : [INTEGER]) - [0]
2020-11-25 20:46:41,700 TRACE  [main] BasicExtractor: extracted value ([is_condi5_0_1_] : [BOOLEAN]) - [true]
2020-11-25 20:46:41,704 TRACE  [main] BasicExtractor: extracted value ([j6_0_1_] : [INTEGER]) - [8]
2020-11-25 20:46:41,705 TRACE  [main] BasicExtractor: extracted value ([problem_7_0_1_] : [BIGINT]) - [4]
2020-11-25 20:46:41,705 TRACE  [main] BasicExtractor: extracted value ([problem_7_0_0_] : [BIGINT]) - [4]
2020-11-25 20:46:41,706 TRACE  [main] BasicExtractor: extracted value ([id1_0_0_] : [BIGINT]) - [26]
2020-11-25 20:46:41,706 TRACE  [main] BasicExtractor: extracted value ([id1_0_1_] : [BIGINT]) - [27]
2020-11-25 20:46:41,706 TRACE  [main] BasicExtractor: extracted value ([binary_v2_0_1_] : [BLOB]) - [null]
2020-11-25 20:46:41,707 TRACE  [main] BasicExtractor: extracted value ([float_va3_0_1_] : [DOUBLE]) - [9.0]
2020-11-25 20:46:41,707 TRACE  [main] BasicExtractor: extracted value ([i4_0_1_] : [INTEGER]) - [0]
2020-11-25 20:46:41,707 TRACE  [main] BasicExtractor: extracted value ([is_condi5_0_1_] : [BOOLEAN]) - [true]
2020-11-25 20:46:41,707 TRACE  [main] BasicExtractor: extracted value ([j6_0_1_] : [INTEGER]) - [9]
2020-11-25 20:46:41,707 TRACE  [main] BasicExtractor: extracted value ([problem_7_0_1_] : [BIGINT]) - [4]
2020-11-25 20:46:41,707 TRACE  [main] BasicExtractor: extracted value ([problem_7_0_0_] : [BIGINT]) - [4]
2020-11-25 20:46:41,707 TRACE  [main] BasicExtractor: extracted value ([id1_0_0_] : [BIGINT]) - [27]
2020-11-25 20:46:41,710 TRACE  [main] BasicBinder: binding parameter [1] as [BIGINT] - [4]
2020-11-25 20:46:41,711 TRACE  [main] BasicBinder: binding parameter [1] as [BIGINT] - [3]
2020-11-25 20:46:41,714 TRACE  [main] BasicExtractor: extracted value ([id1_0_1_] : [BIGINT]) - [12]
2020-11-25 20:46:41,714 TRACE  [main] BasicExtractor: extracted value ([binary_v2_0_1_] : [BLOB]) - [null]
2020-11-25 20:46:41,715 TRACE  [main] BasicExtractor: extracted value ([float_va3_0_1_] : [DOUBLE]) - [1.0]
2020-11-25 20:46:41,715 TRACE  [main] BasicExtractor: extracted value ([i4_0_1_] : [INTEGER]) - [0]
2020-11-25 20:46:41,715 TRACE  [main] BasicExtractor: extracted value ([is_condi5_0_1_] : [BOOLEAN]) - [true]
2020-11-25 20:46:41,715 TRACE  [main] BasicExtractor: extracted value ([j6_0_1_] : [INTEGER]) - [0]
2020-11-25 20:46:41,715 TRACE  [main] BasicExtractor: extracted value ([problem_7_0_1_] : [BIGINT]) - [3]
2020-11-25 20:46:41,715 TRACE  [main] BasicExtractor: extracted value ([problem_7_0_0_] : [BIGINT]) - [3]
2020-11-25 20:46:41,716 TRACE  [main] BasicExtractor: extracted value ([id1_0_0_] : [BIGINT]) - [12]
2020-11-25 20:46:41,716 TRACE  [main] BasicExtractor: extracted value ([id1_0_1_] : [BIGINT]) - [13]
2020-11-25 20:46:41,717 TRACE  [main] BasicExtractor: extracted value ([binary_v2_0_1_] : [BLOB]) - [null]
2020-11-25 20:46:41,717 TRACE  [main] BasicExtractor: extracted value ([float_va3_0_1_] : [DOUBLE]) - [2.718281828459045]
2020-11-25 20:46:41,717 TRACE  [main] BasicExtractor: extracted value ([i4_0_1_] : [INTEGER]) - [0]
2020-11-25 20:46:41,717 TRACE  [main] BasicExtractor: extracted value ([is_condi5_0_1_] : [BOOLEAN]) - [true]
2020-11-25 20:46:41,718 TRACE  [main] BasicExtractor: extracted value ([j6_0_1_] : [INTEGER]) - [1]
2020-11-25 20:46:41,718 TRACE  [main] BasicExtractor: extracted value ([problem_7_0_1_] : [BIGINT]) - [3]
2020-11-25 20:46:41,718 TRACE  [main] BasicExtractor: extracted value ([problem_7_0_0_] : [BIGINT]) - [3]
2020-11-25 20:46:41,718 TRACE  [main] BasicExtractor: extracted value ([id1_0_0_] : [BIGINT]) - [13]
2020-11-25 20:46:41,719 TRACE  [main] BasicExtractor: extracted value ([id1_0_1_] : [BIGINT]) - [14]
2020-11-25 20:46:41,719 TRACE  [main] BasicExtractor: extracted value ([binary_v2_0_1_] : [BLOB]) - [null]
2020-11-25 20:46:41,720 TRACE  [main] BasicExtractor: extracted value ([float_va3_0_1_] : [DOUBLE]) - [7.38905609893065]
2020-11-25 20:46:41,720 TRACE  [main] BasicExtractor: extracted value ([i4_0_1_] : [INTEGER]) - [0]
2020-11-25 20:46:41,720 TRACE  [main] BasicExtractor: extracted value ([is_condi5_0_1_] : [BOOLEAN]) - [true]
2020-11-25 20:46:41,721 TRACE  [main] BasicExtractor: extracted value ([j6_0_1_] : [INTEGER]) - [2]
2020-11-25 20:46:41,721 TRACE  [main] BasicExtractor: extracted value ([problem_7_0_1_] : [BIGINT]) - [3]
2020-11-25 20:46:41,721 TRACE  [main] BasicExtractor: extracted value ([problem_7_0_0_] : [BIGINT]) - [3]
2020-11-25 20:46:41,722 TRACE  [main] BasicExtractor: extracted value ([id1_0_0_] : [BIGINT]) - [14]
2020-11-25 20:46:41,722 TRACE  [main] BasicExtractor: extracted value ([id1_0_1_] : [BIGINT]) - [15]
2020-11-25 20:46:41,723 TRACE  [main] BasicExtractor: extracted value ([binary_v2_0_1_] : [BLOB]) - [null]
2020-11-25 20:46:41,723 TRACE  [main] BasicExtractor: extracted value ([float_va3_0_1_] : [DOUBLE]) - [20.085536923187668]
2020-11-25 20:46:41,724 TRACE  [main] BasicExtractor: extracted value ([i4_0_1_] : [INTEGER]) - [0]
2020-11-25 20:46:41,725 TRACE  [main] BasicExtractor: extracted value ([is_condi5_0_1_] : [BOOLEAN]) - [true]
2020-11-25 20:46:41,725 TRACE  [main] BasicExtractor: extracted value ([j6_0_1_] : [INTEGER]) - [3]
2020-11-25 20:46:41,725 TRACE  [main] BasicExtractor: extracted value ([problem_7_0_1_] : [BIGINT]) - [3]
2020-11-25 20:46:41,725 TRACE  [main] BasicExtractor: extracted value ([problem_7_0_0_] : [BIGINT]) - [3]
2020-11-25 20:46:41,726 TRACE  [main] BasicExtractor: extracted value ([id1_0_0_] : [BIGINT]) - [15]
2020-11-25 20:46:41,726 TRACE  [main] BasicExtractor: extracted value ([id1_0_1_] : [BIGINT]) - [16]
2020-11-25 20:46:41,726 TRACE  [main] BasicExtractor: extracted value ([binary_v2_0_1_] : [BLOB]) - [null]
2020-11-25 20:46:41,726 TRACE  [main] BasicExtractor: extracted value ([float_va3_0_1_] : [DOUBLE]) - [54.598150033144236]
2020-11-25 20:46:41,726 TRACE  [main] BasicExtractor: extracted value ([i4_0_1_] : [INTEGER]) - [0]
2020-11-25 20:46:41,726 TRACE  [main] BasicExtractor: extracted value ([is_condi5_0_1_] : [BOOLEAN]) - [true]
2020-11-25 20:46:41,727 TRACE  [main] BasicExtractor: extracted value ([j6_0_1_] : [INTEGER]) - [4]
2020-11-25 20:46:41,727 TRACE  [main] BasicExtractor: extracted value ([problem_7_0_1_] : [BIGINT]) - [3]
2020-11-25 20:46:41,727 TRACE  [main] BasicExtractor: extracted value ([problem_7_0_0_] : [BIGINT]) - [3]
2020-11-25 20:46:41,727 TRACE  [main] BasicExtractor: extracted value ([id1_0_0_] : [BIGINT]) - [16]
2020-11-25 20:46:41,727 TRACE  [main] BasicExtractor: extracted value ([id1_0_1_] : [BIGINT]) - [17]
2020-11-25 20:46:41,728 TRACE  [main] BasicExtractor: extracted value ([binary_v2_0_1_] : [BLOB]) - [null]
2020-11-25 20:46:41,728 TRACE  [main] BasicExtractor: extracted value ([float_va3_0_1_] : [DOUBLE]) - [148.4131591025766]
2020-11-25 20:46:41,728 TRACE  [main] BasicExtractor: extracted value ([i4_0_1_] : [INTEGER]) - [0]
2020-11-25 20:46:41,729 TRACE  [main] BasicExtractor: extracted value ([is_condi5_0_1_] : [BOOLEAN]) - [true]
2020-11-25 20:46:41,729 TRACE  [main] BasicExtractor: extracted value ([j6_0_1_] : [INTEGER]) - [5]
2020-11-25 20:46:41,729 TRACE  [main] BasicExtractor: extracted value ([problem_7_0_1_] : [BIGINT]) - [3]
2020-11-25 20:46:41,730 TRACE  [main] BasicExtractor: extracted value ([problem_7_0_0_] : [BIGINT]) - [3]
2020-11-25 20:46:41,730 TRACE  [main] BasicExtractor: extracted value ([id1_0_0_] : [BIGINT]) - [17]
2020-11-25 20:46:41,731 TRACE  [main] BasicBinder: binding parameter [1] as [BIGINT] - [3]
2020-11-25 20:46:41,734 TRACE  [main] BasicBinder: binding parameter [1] as [BIGINT] - [2]
2020-11-25 20:46:41,735 TRACE  [main] BasicExtractor: extracted value ([id1_0_1_] : [BIGINT]) - [6]
2020-11-25 20:46:41,736 TRACE  [main] BasicExtractor: extracted value ([binary_v2_0_1_] : [BLOB]) - [null]
2020-11-25 20:46:41,736 TRACE  [main] BasicExtractor: extracted value ([float_va3_0_1_] : [DOUBLE]) - [1.01]
2020-11-25 20:46:41,737 TRACE  [main] BasicExtractor: extracted value ([i4_0_1_] : [INTEGER]) - [0]
2020-11-25 20:46:41,737 TRACE  [main] BasicExtractor: extracted value ([is_condi5_0_1_] : [BOOLEAN]) - [true]
2020-11-25 20:46:41,737 TRACE  [main] BasicExtractor: extracted value ([j6_0_1_] : [INTEGER]) - [0]
2020-11-25 20:46:41,737 TRACE  [main] BasicExtractor: extracted value ([problem_7_0_1_] : [BIGINT]) - [2]
2020-11-25 20:46:41,738 TRACE  [main] BasicExtractor: extracted value ([problem_7_0_0_] : [BIGINT]) - [2]
2020-11-25 20:46:41,738 TRACE  [main] BasicExtractor: extracted value ([id1_0_0_] : [BIGINT]) - [6]
2020-11-25 20:46:41,738 TRACE  [main] BasicExtractor: extracted value ([id1_0_1_] : [BIGINT]) - [7]
2020-11-25 20:46:41,738 TRACE  [main] BasicExtractor: extracted value ([binary_v2_0_1_] : [BLOB]) - [null]
2020-11-25 20:46:41,738 TRACE  [main] BasicExtractor: extracted value ([float_va3_0_1_] : [DOUBLE]) - [2.718281828459045]
2020-11-25 20:46:41,739 TRACE  [main] BasicExtractor: extracted value ([i4_0_1_] : [INTEGER]) - [0]
2020-11-25 20:46:41,739 TRACE  [main] BasicExtractor: extracted value ([is_condi5_0_1_] : [BOOLEAN]) - [true]
2020-11-25 20:46:41,739 TRACE  [main] BasicExtractor: extracted value ([j6_0_1_] : [INTEGER]) - [1]
2020-11-25 20:46:41,739 TRACE  [main] BasicExtractor: extracted value ([problem_7_0_1_] : [BIGINT]) - [2]
2020-11-25 20:46:41,739 TRACE  [main] BasicExtractor: extracted value ([problem_7_0_0_] : [BIGINT]) - [2]
2020-11-25 20:46:41,739 TRACE  [main] BasicExtractor: extracted value ([id1_0_0_] : [BIGINT]) - [7]
2020-11-25 20:46:41,740 TRACE  [main] BasicExtractor: extracted value ([id1_0_1_] : [BIGINT]) - [8]
2020-11-25 20:46:41,740 TRACE  [main] BasicExtractor: extracted value ([binary_v2_0_1_] : [BLOB]) - [null]
2020-11-25 20:46:41,740 TRACE  [main] BasicExtractor: extracted value ([float_va3_0_1_] : [DOUBLE]) - [7.38905609893065]
2020-11-25 20:46:41,740 TRACE  [main] BasicExtractor: extracted value ([i4_0_1_] : [INTEGER]) - [0]
2020-11-25 20:46:41,740 TRACE  [main] BasicExtractor: extracted value ([is_condi5_0_1_] : [BOOLEAN]) - [true]
2020-11-25 20:46:41,740 TRACE  [main] BasicExtractor: extracted value ([j6_0_1_] : [INTEGER]) - [2]
2020-11-25 20:46:41,741 TRACE  [main] BasicExtractor: extracted value ([problem_7_0_1_] : [BIGINT]) - [2]
2020-11-25 20:46:41,741 TRACE  [main] BasicExtractor: extracted value ([problem_7_0_0_] : [BIGINT]) - [2]
2020-11-25 20:46:41,741 TRACE  [main] BasicExtractor: extracted value ([id1_0_0_] : [BIGINT]) - [8]
2020-11-25 20:46:41,741 TRACE  [main] BasicExtractor: extracted value ([id1_0_1_] : [BIGINT]) - [9]
2020-11-25 20:46:41,742 TRACE  [main] BasicExtractor: extracted value ([binary_v2_0_1_] : [BLOB]) - [null]
2020-11-25 20:46:41,742 TRACE  [main] BasicExtractor: extracted value ([float_va3_0_1_] : [DOUBLE]) - [20.085536923187668]
2020-11-25 20:46:41,742 TRACE  [main] BasicExtractor: extracted value ([i4_0_1_] : [INTEGER]) - [0]
2020-11-25 20:46:41,742 TRACE  [main] BasicExtractor: extracted value ([is_condi5_0_1_] : [BOOLEAN]) - [true]
2020-11-25 20:46:41,743 TRACE  [main] BasicExtractor: extracted value ([j6_0_1_] : [INTEGER]) - [3]
2020-11-25 20:46:41,743 TRACE  [main] BasicExtractor: extracted value ([problem_7_0_1_] : [BIGINT]) - [2]
2020-11-25 20:46:41,743 TRACE  [main] BasicExtractor: extracted value ([problem_7_0_0_] : [BIGINT]) - [2]
2020-11-25 20:46:41,743 TRACE  [main] BasicExtractor: extracted value ([id1_0_0_] : [BIGINT]) - [9]
2020-11-25 20:46:41,744 TRACE  [main] BasicExtractor: extracted value ([id1_0_1_] : [BIGINT]) - [10]
2020-11-25 20:46:41,744 TRACE  [main] BasicExtractor: extracted value ([binary_v2_0_1_] : [BLOB]) - [null]
2020-11-25 20:46:41,744 TRACE  [main] BasicExtractor: extracted value ([float_va3_0_1_] : [DOUBLE]) - [54.598150033144236]
2020-11-25 20:46:41,744 TRACE  [main] BasicExtractor: extracted value ([i4_0_1_] : [INTEGER]) - [0]
2020-11-25 20:46:41,744 TRACE  [main] BasicExtractor: extracted value ([is_condi5_0_1_] : [BOOLEAN]) - [true]
2020-11-25 20:46:41,745 TRACE  [main] BasicExtractor: extracted value ([j6_0_1_] : [INTEGER]) - [4]
2020-11-25 20:46:41,745 TRACE  [main] BasicExtractor: extracted value ([problem_7_0_1_] : [BIGINT]) - [2]
2020-11-25 20:46:41,745 TRACE  [main] BasicExtractor: extracted value ([problem_7_0_0_] : [BIGINT]) - [2]
2020-11-25 20:46:41,745 TRACE  [main] BasicExtractor: extracted value ([id1_0_0_] : [BIGINT]) - [10]
2020-11-25 20:46:41,745 TRACE  [main] BasicExtractor: extracted value ([id1_0_1_] : [BIGINT]) - [11]
2020-11-25 20:46:41,746 TRACE  [main] BasicExtractor: extracted value ([binary_v2_0_1_] : [BLOB]) - [null]
2020-11-25 20:46:41,748 TRACE  [main] BasicExtractor: extracted value ([float_va3_0_1_] : [DOUBLE]) - [148.4131591025766]
2020-11-25 20:46:41,748 TRACE  [main] BasicExtractor: extracted value ([i4_0_1_] : [INTEGER]) - [0]
2020-11-25 20:46:41,748 TRACE  [main] BasicExtractor: extracted value ([is_condi5_0_1_] : [BOOLEAN]) - [true]
2020-11-25 20:46:41,749 TRACE  [main] BasicExtractor: extracted value ([j6_0_1_] : [INTEGER]) - [5]
2020-11-25 20:46:41,749 TRACE  [main] BasicExtractor: extracted value ([problem_7_0_1_] : [BIGINT]) - [2]
2020-11-25 20:46:41,749 TRACE  [main] BasicExtractor: extracted value ([problem_7_0_0_] : [BIGINT]) - [2]
2020-11-25 20:46:41,749 TRACE  [main] BasicExtractor: extracted value ([id1_0_0_] : [BIGINT]) - [11]
2020-11-25 20:46:41,752 TRACE  [main] BasicBinder: binding parameter [1] as [BIGINT] - [2]
2020-11-25 20:46:41,754 TRACE  [main] BasicBinder: binding parameter [1] as [BIGINT] - [1]
2020-11-25 20:46:41,756 TRACE  [main] BasicExtractor: extracted value ([id1_0_1_] : [BIGINT]) - [1]
2020-11-25 20:46:41,756 TRACE  [main] BasicExtractor: extracted value ([binary_v2_0_1_] : [BLOB]) - [null]
2020-11-25 20:46:41,756 TRACE  [main] BasicExtractor: extracted value ([float_va3_0_1_] : [DOUBLE]) - [1.0]
2020-11-25 20:46:41,756 TRACE  [main] BasicExtractor: extracted value ([i4_0_1_] : [INTEGER]) - [0]
2020-11-25 20:46:41,756 TRACE  [main] BasicExtractor: extracted value ([is_condi5_0_1_] : [BOOLEAN]) - [true]
2020-11-25 20:46:41,757 TRACE  [main] BasicExtractor: extracted value ([j6_0_1_] : [INTEGER]) - [0]
2020-11-25 20:46:41,757 TRACE  [main] BasicExtractor: extracted value ([problem_7_0_1_] : [BIGINT]) - [1]
2020-11-25 20:46:41,757 TRACE  [main] BasicExtractor: extracted value ([problem_7_0_0_] : [BIGINT]) - [1]
2020-11-25 20:46:41,757 TRACE  [main] BasicExtractor: extracted value ([id1_0_0_] : [BIGINT]) - [1]
2020-11-25 20:46:41,757 TRACE  [main] BasicExtractor: extracted value ([id1_0_1_] : [BIGINT]) - [2]
2020-11-25 20:46:41,758 TRACE  [main] BasicExtractor: extracted value ([binary_v2_0_1_] : [BLOB]) - [null]
2020-11-25 20:46:41,758 TRACE  [main] BasicExtractor: extracted value ([float_va3_0_1_] : [DOUBLE]) - [2.0]
2020-11-25 20:46:41,758 TRACE  [main] BasicExtractor: extracted value ([i4_0_1_] : [INTEGER]) - [0]
2020-11-25 20:46:41,758 TRACE  [main] BasicExtractor: extracted value ([is_condi5_0_1_] : [BOOLEAN]) - [true]
2020-11-25 20:46:41,758 TRACE  [main] BasicExtractor: extracted value ([j6_0_1_] : [INTEGER]) - [1]
2020-11-25 20:46:41,758 TRACE  [main] BasicExtractor: extracted value ([problem_7_0_1_] : [BIGINT]) - [1]
2020-11-25 20:46:41,758 TRACE  [main] BasicExtractor: extracted value ([problem_7_0_0_] : [BIGINT]) - [1]
2020-11-25 20:46:41,759 TRACE  [main] BasicExtractor: extracted value ([id1_0_0_] : [BIGINT]) - [2]
2020-11-25 20:46:41,759 TRACE  [main] BasicExtractor: extracted value ([id1_0_1_] : [BIGINT]) - [3]
2020-11-25 20:46:41,759 TRACE  [main] BasicExtractor: extracted value ([binary_v2_0_1_] : [BLOB]) - [null]
2020-11-25 20:46:41,759 TRACE  [main] BasicExtractor: extracted value ([float_va3_0_1_] : [DOUBLE]) - [1.0]
2020-11-25 20:46:41,759 TRACE  [main] BasicExtractor: extracted value ([i4_0_1_] : [INTEGER]) - [0]
2020-11-25 20:46:41,760 TRACE  [main] BasicExtractor: extracted value ([is_condi5_0_1_] : [BOOLEAN]) - [true]
2020-11-25 20:46:41,760 TRACE  [main] BasicExtractor: extracted value ([j6_0_1_] : [INTEGER]) - [2]
2020-11-25 20:46:41,760 TRACE  [main] BasicExtractor: extracted value ([problem_7_0_1_] : [BIGINT]) - [1]
2020-11-25 20:46:41,760 TRACE  [main] BasicExtractor: extracted value ([problem_7_0_0_] : [BIGINT]) - [1]
2020-11-25 20:46:41,761 TRACE  [main] BasicExtractor: extracted value ([id1_0_0_] : [BIGINT]) - [3]
2020-11-25 20:46:41,761 TRACE  [main] BasicExtractor: extracted value ([id1_0_1_] : [BIGINT]) - [4]
2020-11-25 20:46:41,762 TRACE  [main] BasicExtractor: extracted value ([binary_v2_0_1_] : [BLOB]) - [null]
2020-11-25 20:46:41,762 TRACE  [main] BasicExtractor: extracted value ([float_va3_0_1_] : [DOUBLE]) - [1.0]
2020-11-25 20:46:41,762 TRACE  [main] BasicExtractor: extracted value ([i4_0_1_] : [INTEGER]) - [0]
2020-11-25 20:46:41,763 TRACE  [main] BasicExtractor: extracted value ([is_condi5_0_1_] : [BOOLEAN]) - [false]
2020-11-25 20:46:41,763 TRACE  [main] BasicExtractor: extracted value ([j6_0_1_] : [INTEGER]) - [0]
2020-11-25 20:46:41,766 TRACE  [main] BasicExtractor: extracted value ([problem_7_0_1_] : [BIGINT]) - [1]
2020-11-25 20:46:41,767 TRACE  [main] BasicExtractor: extracted value ([problem_7_0_0_] : [BIGINT]) - [1]
2020-11-25 20:46:41,768 TRACE  [main] BasicExtractor: extracted value ([id1_0_0_] : [BIGINT]) - [4]
2020-11-25 20:46:41,768 TRACE  [main] BasicExtractor: extracted value ([id1_0_1_] : [BIGINT]) - [5]
2020-11-25 20:46:41,768 TRACE  [main] BasicExtractor: extracted value ([binary_v2_0_1_] : [BLOB]) - [null]
2020-11-25 20:46:41,769 TRACE  [main] BasicExtractor: extracted value ([float_va3_0_1_] : [DOUBLE]) - [1.0]
2020-11-25 20:46:41,769 TRACE  [main] BasicExtractor: extracted value ([i4_0_1_] : [INTEGER]) - [0]
2020-11-25 20:46:41,769 TRACE  [main] BasicExtractor: extracted value ([is_condi5_0_1_] : [BOOLEAN]) - [false]
2020-11-25 20:46:41,770 TRACE  [main] BasicExtractor: extracted value ([j6_0_1_] : [INTEGER]) - [1]
2020-11-25 20:46:41,770 TRACE  [main] BasicExtractor: extracted value ([problem_7_0_1_] : [BIGINT]) - [1]
2020-11-25 20:46:41,770 TRACE  [main] BasicExtractor: extracted value ([problem_7_0_0_] : [BIGINT]) - [1]
2020-11-25 20:46:41,771 TRACE  [main] BasicExtractor: extracted value ([id1_0_0_] : [BIGINT]) - [5]
2020-11-25 20:46:41,773 TRACE  [main] BasicBinder: binding parameter [1] as [BIGINT] - [1]
2020-11-25 20:46:41,808 TRACE  [main] BasicBinder: binding parameter [1] as [BIGINT] - [7]
2020-11-25 20:46:41,809 TRACE  [main] BasicExtractor: extracted value ([id1_1_2_] : [BIGINT]) - [null]
2020-11-25 20:46:41,809 TRACE  [main] BasicExtractor: extracted value ([id1_0_4_] : [BIGINT]) - [null]
2020-11-25 20:46:41,810 TRACE  [main] BasicExtractor: extracted value ([descript2_1_0_] : [BLOB]) - [[112, 114, 111, 98, 108, 101, 109, 100, 101, 115, 99, 114, 105, 112, 116, 105, 111, 110]]
2020-11-25 20:46:41,810 TRACE  [main] BasicExtractor: extracted value ([is_solve3_1_0_] : [BOOLEAN]) - [true]
2020-11-25 20:46:41,810 TRACE  [main] BasicExtractor: extracted value ([kind4_1_0_] : [VARCHAR]) - [POLYNOMIAL]
2020-11-25 20:46:41,810 TRACE  [main] BasicExtractor: extracted value ([matrix_d5_1_0_] : [INTEGER]) - [1]
2020-11-25 20:46:41,810 TRACE  [main] BasicExtractor: extracted value ([parent_p7_1_0_] : [BIGINT]) - [null]
2020-11-25 20:46:41,810 TRACE  [main] BasicExtractor: extracted value ([problem_6_1_0_] : [INTEGER]) - [0]
2020-11-25 20:46:41,810 TRACE  [main] BasicExtractor: extracted value ([problem_7_0_3_] : [BIGINT]) - [null]
2020-11-25 20:46:41,811 TRACE  [main] BasicExtractor: extracted value ([parent_p7_1_1_] : [BIGINT]) - [null]
2020-11-25 20:46:41,811 TRACE  [main] CollectionType: Created collection wrapper: [com.sf.back.entities.Problem.matrixes#7]
2020-11-25 20:46:41,811 TRACE  [main] BasicBinder: binding parameter [1] as [BIGINT] - [7]
2020-11-25 20:46:41,812 TRACE  [main] BasicExtractor: extracted value ([id1_0_1_] : [BIGINT]) - [40]
2020-11-25 20:46:41,812 TRACE  [main] BasicExtractor: extracted value ([binary_v2_0_1_] : [BLOB]) - [null]
2020-11-25 20:46:41,812 TRACE  [main] BasicExtractor: extracted value ([float_va3_0_1_] : [DOUBLE]) - [1.0]
2020-11-25 20:46:41,812 TRACE  [main] BasicExtractor: extracted value ([i4_0_1_] : [INTEGER]) - [0]
2020-11-25 20:46:41,813 TRACE  [main] BasicExtractor: extracted value ([is_condi5_0_1_] : [BOOLEAN]) - [true]
2020-11-25 20:46:41,813 TRACE  [main] BasicExtractor: extracted value ([j6_0_1_] : [INTEGER]) - [0]
2020-11-25 20:46:41,813 TRACE  [main] BasicExtractor: extracted value ([problem_7_0_1_] : [BIGINT]) - [7]
2020-11-25 20:46:41,813 TRACE  [main] BasicExtractor: extracted value ([problem_7_0_0_] : [BIGINT]) - [7]
2020-11-25 20:46:41,814 TRACE  [main] BasicExtractor: extracted value ([id1_0_0_] : [BIGINT]) - [40]
2020-11-25 20:46:41,814 TRACE  [main] BasicExtractor: extracted value ([id1_0_1_] : [BIGINT]) - [41]
2020-11-25 20:46:41,814 TRACE  [main] BasicExtractor: extracted value ([binary_v2_0_1_] : [BLOB]) - [null]
2020-11-25 20:46:41,815 TRACE  [main] BasicExtractor: extracted value ([float_va3_0_1_] : [DOUBLE]) - [-3.0]
2020-11-25 20:46:41,815 TRACE  [main] BasicExtractor: extracted value ([i4_0_1_] : [INTEGER]) - [0]
2020-11-25 20:46:41,815 TRACE  [main] BasicExtractor: extracted value ([is_condi5_0_1_] : [BOOLEAN]) - [true]
2020-11-25 20:46:41,815 TRACE  [main] BasicExtractor: extracted value ([j6_0_1_] : [INTEGER]) - [1]
2020-11-25 20:46:41,815 TRACE  [main] BasicExtractor: extracted value ([problem_7_0_1_] : [BIGINT]) - [7]
2020-11-25 20:46:41,816 TRACE  [main] BasicExtractor: extracted value ([problem_7_0_0_] : [BIGINT]) - [7]
2020-11-25 20:46:41,816 TRACE  [main] BasicExtractor: extracted value ([id1_0_0_] : [BIGINT]) - [41]
2020-11-25 20:46:41,816 TRACE  [main] BasicExtractor: extracted value ([id1_0_1_] : [BIGINT]) - [42]
2020-11-25 20:46:41,816 TRACE  [main] BasicExtractor: extracted value ([binary_v2_0_1_] : [BLOB]) - [null]
2020-11-25 20:46:41,817 TRACE  [main] BasicExtractor: extracted value ([float_va3_0_1_] : [DOUBLE]) - [2.0]
2020-11-25 20:46:41,817 TRACE  [main] BasicExtractor: extracted value ([i4_0_1_] : [INTEGER]) - [0]
2020-11-25 20:46:41,817 TRACE  [main] BasicExtractor: extracted value ([is_condi5_0_1_] : [BOOLEAN]) - [true]
2020-11-25 20:46:41,817 TRACE  [main] BasicExtractor: extracted value ([j6_0_1_] : [INTEGER]) - [2]
2020-11-25 20:46:41,817 TRACE  [main] BasicExtractor: extracted value ([problem_7_0_1_] : [BIGINT]) - [7]
2020-11-25 20:46:41,817 TRACE  [main] BasicExtractor: extracted value ([problem_7_0_0_] : [BIGINT]) - [7]
2020-11-25 20:46:41,818 TRACE  [main] BasicExtractor: extracted value ([id1_0_0_] : [BIGINT]) - [42]
2020-11-25 20:46:41,818 TRACE  [main] BasicExtractor: extracted value ([id1_0_1_] : [BIGINT]) - [43]
2020-11-25 20:46:41,818 TRACE  [main] BasicExtractor: extracted value ([binary_v2_0_1_] : [BLOB]) - [null]
2020-11-25 20:46:41,818 TRACE  [main] BasicExtractor: extracted value ([float_va3_0_1_] : [DOUBLE]) - [1.0]
2020-11-25 20:46:41,818 TRACE  [main] BasicExtractor: extracted value ([i4_0_1_] : [INTEGER]) - [0]
2020-11-25 20:46:41,818 TRACE  [main] BasicExtractor: extracted value ([is_condi5_0_1_] : [BOOLEAN]) - [false]
2020-11-25 20:46:41,819 TRACE  [main] BasicExtractor: extracted value ([j6_0_1_] : [INTEGER]) - [0]
2020-11-25 20:46:41,819 TRACE  [main] BasicExtractor: extracted value ([problem_7_0_1_] : [BIGINT]) - [7]
2020-11-25 20:46:41,819 TRACE  [main] BasicExtractor: extracted value ([problem_7_0_0_] : [BIGINT]) - [7]
2020-11-25 20:46:41,820 TRACE  [main] BasicExtractor: extracted value ([id1_0_0_] : [BIGINT]) - [43]
2020-11-25 20:46:41,820 TRACE  [main] BasicExtractor: extracted value ([id1_0_1_] : [BIGINT]) - [44]
2020-11-25 20:46:41,820 TRACE  [main] BasicExtractor: extracted value ([binary_v2_0_1_] : [BLOB]) - [null]
2020-11-25 20:46:41,839 TRACE  [main] BasicExtractor: extracted value ([float_va3_0_1_] : [DOUBLE]) - [2.0]
2020-11-25 20:46:41,840 TRACE  [main] BasicExtractor: extracted value ([i4_0_1_] : [INTEGER]) - [0]
2020-11-25 20:46:41,840 TRACE  [main] BasicExtractor: extracted value ([is_condi5_0_1_] : [BOOLEAN]) - [false]
2020-11-25 20:46:41,841 TRACE  [main] BasicExtractor: extracted value ([j6_0_1_] : [INTEGER]) - [1]
2020-11-25 20:46:41,841 TRACE  [main] BasicExtractor: extracted value ([problem_7_0_1_] : [BIGINT]) - [7]
2020-11-25 20:46:41,841 TRACE  [main] BasicExtractor: extracted value ([problem_7_0_0_] : [BIGINT]) - [7]
2020-11-25 20:46:41,843 TRACE  [main] BasicExtractor: extracted value ([id1_0_0_] : [BIGINT]) - [44]
2020-11-25 20:46:41,920 TRACE  [main] BasicBinder: binding parameter [1] as [BOOLEAN] - [false]
2020-11-25 20:46:41,925 TRACE  [main] BasicBinder: binding parameter [2] as [BIGINT] - [7]
2020-11-25 20:46:41,927 TRACE  [main] BasicExtractor: extracted value ([id1_0_] : [BIGINT]) - [43]
2020-11-25 20:46:41,927 TRACE  [main] BasicExtractor: extracted value ([binary_v2_0_] : [BLOB]) - [null]
2020-11-25 20:46:41,928 TRACE  [main] BasicExtractor: extracted value ([float_va3_0_] : [DOUBLE]) - [1.0]
2020-11-25 20:46:41,928 TRACE  [main] BasicExtractor: extracted value ([i4_0_] : [INTEGER]) - [0]
2020-11-25 20:46:41,930 TRACE  [main] BasicExtractor: extracted value ([is_condi5_0_] : [BOOLEAN]) - [false]
2020-11-25 20:46:41,930 TRACE  [main] BasicExtractor: extracted value ([j6_0_] : [INTEGER]) - [0]
2020-11-25 20:46:41,931 TRACE  [main] BasicExtractor: extracted value ([problem_7_0_] : [BIGINT]) - [7]
2020-11-25 20:46:41,931 TRACE  [main] BasicExtractor: extracted value ([id1_0_] : [BIGINT]) - [44]
2020-11-25 20:46:41,932 TRACE  [main] BasicExtractor: extracted value ([binary_v2_0_] : [BLOB]) - [null]
2020-11-25 20:46:41,932 TRACE  [main] BasicExtractor: extracted value ([float_va3_0_] : [DOUBLE]) - [2.0]
2020-11-25 20:46:41,933 TRACE  [main] BasicExtractor: extracted value ([i4_0_] : [INTEGER]) - [0]
2020-11-25 20:46:41,933 TRACE  [main] BasicExtractor: extracted value ([is_condi5_0_] : [BOOLEAN]) - [false]
2020-11-25 20:46:41,934 TRACE  [main] BasicExtractor: extracted value ([j6_0_] : [INTEGER]) - [1]
2020-11-25 20:46:41,934 TRACE  [main] BasicExtractor: extracted value ([problem_7_0_] : [BIGINT]) - [7]
2020-11-25 20:46:41,936 TRACE  [main] BasicBinder: binding parameter [1] as [BIGINT] - [7]
2020-11-25 20:46:41,937 TRACE  [main] BasicExtractor: extracted value ([id1_1_2_] : [BIGINT]) - [null]
2020-11-25 20:46:41,937 TRACE  [main] BasicExtractor: extracted value ([id1_0_4_] : [BIGINT]) - [null]
2020-11-25 20:46:41,937 TRACE  [main] BasicExtractor: extracted value ([descript2_1_0_] : [BLOB]) - [[112, 114, 111, 98, 108, 101, 109, 100, 101, 115, 99, 114, 105, 112, 116, 105, 111, 110]]
2020-11-25 20:46:41,938 TRACE  [main] BasicExtractor: extracted value ([is_solve3_1_0_] : [BOOLEAN]) - [true]
2020-11-25 20:46:41,938 TRACE  [main] BasicExtractor: extracted value ([kind4_1_0_] : [VARCHAR]) - [POLYNOMIAL]
2020-11-25 20:46:41,938 TRACE  [main] BasicExtractor: extracted value ([matrix_d5_1_0_] : [INTEGER]) - [1]
2020-11-25 20:46:41,938 TRACE  [main] BasicExtractor: extracted value ([parent_p7_1_0_] : [BIGINT]) - [null]
2020-11-25 20:46:41,939 TRACE  [main] BasicExtractor: extracted value ([problem_6_1_0_] : [INTEGER]) - [0]
2020-11-25 20:46:41,939 TRACE  [main] BasicExtractor: extracted value ([problem_7_0_3_] : [BIGINT]) - [null]
2020-11-25 20:46:41,939 TRACE  [main] BasicExtractor: extracted value ([parent_p7_1_1_] : [BIGINT]) - [null]
2020-11-25 20:46:41,939 TRACE  [main] CollectionType: Created collection wrapper: [com.sf.back.entities.Problem.matrixes#7]
2020-11-25 20:46:41,941 TRACE  [main] BasicBinder: binding parameter [1] as [BIGINT] - [7]
2020-11-25 20:46:41,943 TRACE  [main] BasicExtractor: extracted value ([id1_0_1_] : [BIGINT]) - [40]
2020-11-25 20:46:41,943 TRACE  [main] BasicExtractor: extracted value ([binary_v2_0_1_] : [BLOB]) - [null]
2020-11-25 20:46:41,943 TRACE  [main] BasicExtractor: extracted value ([float_va3_0_1_] : [DOUBLE]) - [1.0]
2020-11-25 20:46:41,944 TRACE  [main] BasicExtractor: extracted value ([i4_0_1_] : [INTEGER]) - [0]
2020-11-25 20:46:41,944 TRACE  [main] BasicExtractor: extracted value ([is_condi5_0_1_] : [BOOLEAN]) - [true]
2020-11-25 20:46:41,944 TRACE  [main] BasicExtractor: extracted value ([j6_0_1_] : [INTEGER]) - [0]
2020-11-25 20:46:41,944 TRACE  [main] BasicExtractor: extracted value ([problem_7_0_1_] : [BIGINT]) - [7]
2020-11-25 20:46:41,944 TRACE  [main] BasicExtractor: extracted value ([problem_7_0_0_] : [BIGINT]) - [7]
2020-11-25 20:46:41,944 TRACE  [main] BasicExtractor: extracted value ([id1_0_0_] : [BIGINT]) - [40]
2020-11-25 20:46:41,945 TRACE  [main] BasicExtractor: extracted value ([id1_0_1_] : [BIGINT]) - [41]
2020-11-25 20:46:41,946 TRACE  [main] BasicExtractor: extracted value ([binary_v2_0_1_] : [BLOB]) - [null]
2020-11-25 20:46:41,946 TRACE  [main] BasicExtractor: extracted value ([float_va3_0_1_] : [DOUBLE]) - [-3.0]
2020-11-25 20:46:41,947 TRACE  [main] BasicExtractor: extracted value ([i4_0_1_] : [INTEGER]) - [0]
2020-11-25 20:46:41,947 TRACE  [main] BasicExtractor: extracted value ([is_condi5_0_1_] : [BOOLEAN]) - [true]
2020-11-25 20:46:41,947 TRACE  [main] BasicExtractor: extracted value ([j6_0_1_] : [INTEGER]) - [1]
2020-11-25 20:46:41,948 TRACE  [main] BasicExtractor: extracted value ([problem_7_0_1_] : [BIGINT]) - [7]
2020-11-25 20:46:41,948 TRACE  [main] BasicExtractor: extracted value ([problem_7_0_0_] : [BIGINT]) - [7]
2020-11-25 20:46:41,949 TRACE  [main] BasicExtractor: extracted value ([id1_0_0_] : [BIGINT]) - [41]
2020-11-25 20:46:41,949 TRACE  [main] BasicExtractor: extracted value ([id1_0_1_] : [BIGINT]) - [42]
2020-11-25 20:46:41,950 TRACE  [main] BasicExtractor: extracted value ([binary_v2_0_1_] : [BLOB]) - [null]
2020-11-25 20:46:41,950 TRACE  [main] BasicExtractor: extracted value ([float_va3_0_1_] : [DOUBLE]) - [2.0]
2020-11-25 20:46:41,951 TRACE  [main] BasicExtractor: extracted value ([i4_0_1_] : [INTEGER]) - [0]
2020-11-25 20:46:41,951 TRACE  [main] BasicExtractor: extracted value ([is_condi5_0_1_] : [BOOLEAN]) - [true]
2020-11-25 20:46:41,951 TRACE  [main] BasicExtractor: extracted value ([j6_0_1_] : [INTEGER]) - [2]
2020-11-25 20:46:41,951 TRACE  [main] BasicExtractor: extracted value ([problem_7_0_1_] : [BIGINT]) - [7]
2020-11-25 20:46:41,952 TRACE  [main] BasicExtractor: extracted value ([problem_7_0_0_] : [BIGINT]) - [7]
2020-11-25 20:46:41,952 TRACE  [main] BasicExtractor: extracted value ([id1_0_0_] : [BIGINT]) - [42]
2020-11-25 20:46:41,952 TRACE  [main] BasicExtractor: extracted value ([id1_0_1_] : [BIGINT]) - [43]
2020-11-25 20:46:41,952 TRACE  [main] BasicExtractor: extracted value ([problem_7_0_0_] : [BIGINT]) - [7]
2020-11-25 20:46:41,952 TRACE  [main] BasicExtractor: extracted value ([id1_0_0_] : [BIGINT]) - [43]
2020-11-25 20:46:41,953 TRACE  [main] BasicExtractor: extracted value ([id1_0_1_] : [BIGINT]) - [44]
2020-11-25 20:46:41,953 TRACE  [main] BasicExtractor: extracted value ([problem_7_0_0_] : [BIGINT]) - [7]
2020-11-25 20:46:41,953 TRACE  [main] BasicExtractor: extracted value ([id1_0_0_] : [BIGINT]) - [44]
2020-11-25 20:46:41,988 TRACE  [main] BasicBinder: binding parameter [1] as [BIGINT] - [8]
2020-11-25 20:46:41,990 TRACE  [main] BasicExtractor: extracted value ([id1_1_2_] : [BIGINT]) - [null]
2020-11-25 20:46:41,991 TRACE  [main] BasicExtractor: extracted value ([id1_0_4_] : [BIGINT]) - [null]
2020-11-25 20:46:41,991 TRACE  [main] BasicExtractor: extracted value ([descript2_1_0_] : [BLOB]) - [[112, 114, 111, 98, 108, 101, 109, 100, 101, 115, 99, 114, 105, 112, 116, 105, 111, 110]]
2020-11-25 20:46:41,992 TRACE  [main] BasicExtractor: extracted value ([is_solve3_1_0_] : [BOOLEAN]) - [null]
2020-11-25 20:46:41,993 TRACE  [main] BasicExtractor: extracted value ([kind4_1_0_] : [VARCHAR]) - [POLYNOMIAL]
2020-11-25 20:46:41,993 TRACE  [main] BasicExtractor: extracted value ([matrix_d5_1_0_] : [INTEGER]) - [1]
2020-11-25 20:46:41,993 TRACE  [main] BasicExtractor: extracted value ([parent_p7_1_0_] : [BIGINT]) - [null]
2020-11-25 20:46:41,994 TRACE  [main] BasicExtractor: extracted value ([problem_6_1_0_] : [INTEGER]) - [22]
2020-11-25 20:46:41,994 TRACE  [main] BasicExtractor: extracted value ([problem_7_0_3_] : [BIGINT]) - [null]
2020-11-25 20:46:41,994 TRACE  [main] BasicExtractor: extracted value ([parent_p7_1_1_] : [BIGINT]) - [null]
2020-11-25 20:46:41,995 TRACE  [main] CollectionType: Created collection wrapper: [com.sf.back.entities.Problem.matrixes#8]
2020-11-25 20:46:41,997 TRACE  [main] BasicBinder: binding parameter [1] as [BIGINT] - [8]
2020-11-25 20:46:41,998 TRACE  [main] BasicExtractor: extracted value ([id1_0_1_] : [BIGINT]) - [45]
2020-11-25 20:46:41,999 TRACE  [main] BasicExtractor: extracted value ([binary_v2_0_1_] : [BLOB]) - [null]
2020-11-25 20:46:41,999 TRACE  [main] BasicExtractor: extracted value ([float_va3_0_1_] : [DOUBLE]) - [1.0]
2020-11-25 20:46:41,999 TRACE  [main] BasicExtractor: extracted value ([i4_0_1_] : [INTEGER]) - [0]
2020-11-25 20:46:41,999 TRACE  [main] BasicExtractor: extracted value ([is_condi5_0_1_] : [BOOLEAN]) - [true]
2020-11-25 20:46:42,000 TRACE  [main] BasicExtractor: extracted value ([j6_0_1_] : [INTEGER]) - [0]
2020-11-25 20:46:42,000 TRACE  [main] BasicExtractor: extracted value ([problem_7_0_1_] : [BIGINT]) - [8]
2020-11-25 20:46:42,000 TRACE  [main] BasicExtractor: extracted value ([problem_7_0_0_] : [BIGINT]) - [8]
2020-11-25 20:46:42,000 TRACE  [main] BasicExtractor: extracted value ([id1_0_0_] : [BIGINT]) - [45]
2020-11-25 20:46:42,000 TRACE  [main] BasicExtractor: extracted value ([id1_0_1_] : [BIGINT]) - [46]
2020-11-25 20:46:42,001 TRACE  [main] BasicExtractor: extracted value ([binary_v2_0_1_] : [BLOB]) - [null]
2020-11-25 20:46:42,001 TRACE  [main] BasicExtractor: extracted value ([float_va3_0_1_] : [DOUBLE]) - [2.718281828459045]
2020-11-25 20:46:42,001 TRACE  [main] BasicExtractor: extracted value ([i4_0_1_] : [INTEGER]) - [0]
2020-11-25 20:46:42,001 TRACE  [main] BasicExtractor: extracted value ([is_condi5_0_1_] : [BOOLEAN]) - [true]
2020-11-25 20:46:42,001 TRACE  [main] BasicExtractor: extracted value ([j6_0_1_] : [INTEGER]) - [1]
2020-11-25 20:46:42,002 TRACE  [main] BasicExtractor: extracted value ([problem_7_0_1_] : [BIGINT]) - [8]
2020-11-25 20:46:42,002 TRACE  [main] BasicExtractor: extracted value ([problem_7_0_0_] : [BIGINT]) - [8]
2020-11-25 20:46:42,002 TRACE  [main] BasicExtractor: extracted value ([id1_0_0_] : [BIGINT]) - [46]
2020-11-25 20:46:42,002 TRACE  [main] BasicExtractor: extracted value ([id1_0_1_] : [BIGINT]) - [47]
2020-11-25 20:46:42,002 TRACE  [main] BasicExtractor: extracted value ([binary_v2_0_1_] : [BLOB]) - [null]
2020-11-25 20:46:42,003 TRACE  [main] BasicExtractor: extracted value ([float_va3_0_1_] : [DOUBLE]) - [7.38905609893065]
2020-11-25 20:46:42,003 TRACE  [main] BasicExtractor: extracted value ([i4_0_1_] : [INTEGER]) - [0]
2020-11-25 20:46:42,004 TRACE  [main] BasicExtractor: extracted value ([is_condi5_0_1_] : [BOOLEAN]) - [true]
2020-11-25 20:46:42,004 TRACE  [main] BasicExtractor: extracted value ([j6_0_1_] : [INTEGER]) - [2]
2020-11-25 20:46:42,004 TRACE  [main] BasicExtractor: extracted value ([problem_7_0_1_] : [BIGINT]) - [8]
2020-11-25 20:46:42,005 TRACE  [main] BasicExtractor: extracted value ([problem_7_0_0_] : [BIGINT]) - [8]
2020-11-25 20:46:42,005 TRACE  [main] BasicExtractor: extracted value ([id1_0_0_] : [BIGINT]) - [47]
2020-11-25 20:46:42,006 TRACE  [main] BasicExtractor: extracted value ([id1_0_1_] : [BIGINT]) - [48]
2020-11-25 20:46:42,006 TRACE  [main] BasicExtractor: extracted value ([binary_v2_0_1_] : [BLOB]) - [null]
2020-11-25 20:46:42,006 TRACE  [main] BasicExtractor: extracted value ([float_va3_0_1_] : [DOUBLE]) - [20.085536923187668]
2020-11-25 20:46:42,006 TRACE  [main] BasicExtractor: extracted value ([i4_0_1_] : [INTEGER]) - [0]
2020-11-25 20:46:42,007 TRACE  [main] BasicExtractor: extracted value ([is_condi5_0_1_] : [BOOLEAN]) - [true]
2020-11-25 20:46:42,007 TRACE  [main] BasicExtractor: extracted value ([j6_0_1_] : [INTEGER]) - [3]
2020-11-25 20:46:42,008 TRACE  [main] BasicExtractor: extracted value ([problem_7_0_1_] : [BIGINT]) - [8]
2020-11-25 20:46:42,008 TRACE  [main] BasicExtractor: extracted value ([problem_7_0_0_] : [BIGINT]) - [8]
2020-11-25 20:46:42,008 TRACE  [main] BasicExtractor: extracted value ([id1_0_0_] : [BIGINT]) - [48]
2020-11-25 20:46:42,009 TRACE  [main] BasicExtractor: extracted value ([id1_0_1_] : [BIGINT]) - [49]
2020-11-25 20:46:42,010 TRACE  [main] BasicExtractor: extracted value ([binary_v2_0_1_] : [BLOB]) - [null]
2020-11-25 20:46:42,010 TRACE  [main] BasicExtractor: extracted value ([float_va3_0_1_] : [DOUBLE]) - [54.598150033144236]
2020-11-25 20:46:42,010 TRACE  [main] BasicExtractor: extracted value ([i4_0_1_] : [INTEGER]) - [0]
2020-11-25 20:46:42,010 TRACE  [main] BasicExtractor: extracted value ([is_condi5_0_1_] : [BOOLEAN]) - [true]
2020-11-25 20:46:42,010 TRACE  [main] BasicExtractor: extracted value ([j6_0_1_] : [INTEGER]) - [4]
2020-11-25 20:46:42,011 TRACE  [main] BasicExtractor: extracted value ([problem_7_0_1_] : [BIGINT]) - [8]
2020-11-25 20:46:42,011 TRACE  [main] BasicExtractor: extracted value ([problem_7_0_0_] : [BIGINT]) - [8]
2020-11-25 20:46:42,011 TRACE  [main] BasicExtractor: extracted value ([id1_0_0_] : [BIGINT]) - [49]
2020-11-25 20:46:42,013 TRACE  [main] BasicExtractor: extracted value ([id1_0_1_] : [BIGINT]) - [50]
2020-11-25 20:46:42,014 TRACE  [main] BasicExtractor: extracted value ([binary_v2_0_1_] : [BLOB]) - [null]
2020-11-25 20:46:42,014 TRACE  [main] BasicExtractor: extracted value ([float_va3_0_1_] : [DOUBLE]) - [148.4131591025766]
2020-11-25 20:46:42,015 TRACE  [main] BasicExtractor: extracted value ([i4_0_1_] : [INTEGER]) - [0]
2020-11-25 20:46:42,015 TRACE  [main] BasicExtractor: extracted value ([is_condi5_0_1_] : [BOOLEAN]) - [true]
2020-11-25 20:46:42,015 TRACE  [main] BasicExtractor: extracted value ([j6_0_1_] : [INTEGER]) - [5]
2020-11-25 20:46:42,016 TRACE  [main] BasicExtractor: extracted value ([problem_7_0_1_] : [BIGINT]) - [8]
2020-11-25 20:46:42,016 TRACE  [main] BasicExtractor: extracted value ([problem_7_0_0_] : [BIGINT]) - [8]
2020-11-25 20:46:42,017 TRACE  [main] BasicExtractor: extracted value ([id1_0_0_] : [BIGINT]) - [50]
2020-11-25 20:46:42,034 TRACE  [main] BasicBinder: binding parameter [1] as [BLOB] - [[100, 101, 115, 99, 114, 105, 112, 116, 105, 111, 110]]
2020-11-25 20:46:42,034 TRACE  [main] BasicBinder: binding parameter [2] as [BOOLEAN] - [null]
2020-11-25 20:46:42,034 TRACE  [main] BasicBinder: binding parameter [3] as [VARCHAR] - [POLYNOMIAL]
2020-11-25 20:46:42,034 TRACE  [main] BasicBinder: binding parameter [4] as [INTEGER] - [null]
2020-11-25 20:46:42,034 TRACE  [main] BasicBinder: binding parameter [5] as [BIGINT] - [null]
2020-11-25 20:46:42,035 TRACE  [main] BasicBinder: binding parameter [6] as [INTEGER] - [24]
2020-11-25 20:46:42,036 TRACE  [main] BasicBinder: binding parameter [1] as [BLOB] - [null]
2020-11-25 20:46:42,036 TRACE  [main] BasicBinder: binding parameter [2] as [DOUBLE] - [1.0]
2020-11-25 20:46:42,036 TRACE  [main] BasicBinder: binding parameter [3] as [INTEGER] - [0]
2020-11-25 20:46:42,037 TRACE  [main] BasicBinder: binding parameter [4] as [BOOLEAN] - [true]
2020-11-25 20:46:42,037 TRACE  [main] BasicBinder: binding parameter [5] as [INTEGER] - [0]
2020-11-25 20:46:42,037 TRACE  [main] BasicBinder: binding parameter [6] as [BIGINT] - [10]
2020-11-25 20:46:42,038 TRACE  [main] BasicBinder: binding parameter [1] as [BLOB] - [null]
2020-11-25 20:46:42,038 TRACE  [main] BasicBinder: binding parameter [2] as [DOUBLE] - [2.0]
2020-11-25 20:46:42,039 TRACE  [main] BasicBinder: binding parameter [3] as [INTEGER] - [0]
2020-11-25 20:46:42,039 TRACE  [main] BasicBinder: binding parameter [4] as [BOOLEAN] - [true]
2020-11-25 20:46:42,039 TRACE  [main] BasicBinder: binding parameter [5] as [INTEGER] - [1]
2020-11-25 20:46:42,039 TRACE  [main] BasicBinder: binding parameter [6] as [BIGINT] - [10]
2020-11-25 20:46:42,040 TRACE  [main] BasicBinder: binding parameter [1] as [BLOB] - [null]
2020-11-25 20:46:42,041 TRACE  [main] BasicBinder: binding parameter [2] as [DOUBLE] - [3.0]
2020-11-25 20:46:42,041 TRACE  [main] BasicBinder: binding parameter [3] as [INTEGER] - [0]
2020-11-25 20:46:42,041 TRACE  [main] BasicBinder: binding parameter [4] as [BOOLEAN] - [true]
2020-11-25 20:46:42,041 TRACE  [main] BasicBinder: binding parameter [5] as [INTEGER] - [2]
2020-11-25 20:46:42,041 TRACE  [main] BasicBinder: binding parameter [6] as [BIGINT] - [10]
2020-11-25 20:46:42,043 TRACE  [main] BasicBinder: binding parameter [1] as [BLOB] - [null]
2020-11-25 20:46:42,043 TRACE  [main] BasicBinder: binding parameter [2] as [DOUBLE] - [4.0]
2020-11-25 20:46:42,044 TRACE  [main] BasicBinder: binding parameter [3] as [INTEGER] - [0]
2020-11-25 20:46:42,044 TRACE  [main] BasicBinder: binding parameter [4] as [BOOLEAN] - [true]
2020-11-25 20:46:42,044 TRACE  [main] BasicBinder: binding parameter [5] as [INTEGER] - [3]
2020-11-25 20:46:42,044 TRACE  [main] BasicBinder: binding parameter [6] as [BIGINT] - [10]
2020-11-25 20:46:42,089 TRACE  [main] BasicBinder: binding parameter [1] as [BIGINT] - [10]
2020-11-25 20:46:42,089 TRACE  [main] BasicExtractor: extracted value ([id1_1_2_] : [BIGINT]) - [null]
2020-11-25 20:46:42,090 TRACE  [main] BasicExtractor: extracted value ([id1_0_4_] : [BIGINT]) - [null]
2020-11-25 20:46:42,090 TRACE  [main] BasicExtractor: extracted value ([descript2_1_0_] : [BLOB]) - [[100, 101, 115, 99, 114, 105, 112, 116, 105, 111, 110]]
2020-11-25 20:46:42,090 TRACE  [main] BasicExtractor: extracted value ([is_solve3_1_0_] : [BOOLEAN]) - [null]
2020-11-25 20:46:42,090 TRACE  [main] BasicExtractor: extracted value ([kind4_1_0_] : [VARCHAR]) - [POLYNOMIAL]
2020-11-25 20:46:42,091 TRACE  [main] BasicExtractor: extracted value ([matrix_d5_1_0_] : [INTEGER]) - [null]
2020-11-25 20:46:42,091 TRACE  [main] BasicExtractor: extracted value ([parent_p7_1_0_] : [BIGINT]) - [null]
2020-11-25 20:46:42,091 TRACE  [main] BasicExtractor: extracted value ([problem_6_1_0_] : [INTEGER]) - [24]
2020-11-25 20:46:42,091 TRACE  [main] BasicExtractor: extracted value ([problem_7_0_3_] : [BIGINT]) - [null]
2020-11-25 20:46:42,091 TRACE  [main] BasicExtractor: extracted value ([parent_p7_1_1_] : [BIGINT]) - [null]
2020-11-25 20:46:42,091 TRACE  [main] CollectionType: Created collection wrapper: [com.sf.back.entities.Problem.matrixes#10]
2020-11-25 20:46:42,092 TRACE  [main] BasicBinder: binding parameter [1] as [BIGINT] - [10]
2020-11-25 20:46:42,094 TRACE  [main] BasicExtractor: extracted value ([id1_0_1_] : [BIGINT]) - [57]
2020-11-25 20:46:42,095 TRACE  [main] BasicExtractor: extracted value ([binary_v2_0_1_] : [BLOB]) - [null]
2020-11-25 20:46:42,095 TRACE  [main] BasicExtractor: extracted value ([float_va3_0_1_] : [DOUBLE]) - [1.0]
2020-11-25 20:46:42,095 TRACE  [main] BasicExtractor: extracted value ([i4_0_1_] : [INTEGER]) - [0]
2020-11-25 20:46:42,095 TRACE  [main] BasicExtractor: extracted value ([is_condi5_0_1_] : [BOOLEAN]) - [true]
2020-11-25 20:46:42,095 TRACE  [main] BasicExtractor: extracted value ([j6_0_1_] : [INTEGER]) - [0]
2020-11-25 20:46:42,095 TRACE  [main] BasicExtractor: extracted value ([problem_7_0_1_] : [BIGINT]) - [10]
2020-11-25 20:46:42,095 TRACE  [main] BasicExtractor: extracted value ([problem_7_0_0_] : [BIGINT]) - [10]
2020-11-25 20:46:42,097 TRACE  [main] BasicExtractor: extracted value ([id1_0_0_] : [BIGINT]) - [57]
2020-11-25 20:46:42,097 TRACE  [main] BasicExtractor: extracted value ([id1_0_1_] : [BIGINT]) - [58]
2020-11-25 20:46:42,097 TRACE  [main] BasicExtractor: extracted value ([binary_v2_0_1_] : [BLOB]) - [null]
2020-11-25 20:46:42,097 TRACE  [main] BasicExtractor: extracted value ([float_va3_0_1_] : [DOUBLE]) - [2.0]
2020-11-25 20:46:42,097 TRACE  [main] BasicExtractor: extracted value ([i4_0_1_] : [INTEGER]) - [0]
2020-11-25 20:46:42,098 TRACE  [main] BasicExtractor: extracted value ([is_condi5_0_1_] : [BOOLEAN]) - [true]
2020-11-25 20:46:42,098 TRACE  [main] BasicExtractor: extracted value ([j6_0_1_] : [INTEGER]) - [1]
2020-11-25 20:46:42,099 TRACE  [main] BasicExtractor: extracted value ([problem_7_0_1_] : [BIGINT]) - [10]
2020-11-25 20:46:42,099 TRACE  [main] BasicExtractor: extracted value ([problem_7_0_0_] : [BIGINT]) - [10]
2020-11-25 20:46:42,099 TRACE  [main] BasicExtractor: extracted value ([id1_0_0_] : [BIGINT]) - [58]
2020-11-25 20:46:42,099 TRACE  [main] BasicExtractor: extracted value ([id1_0_1_] : [BIGINT]) - [59]
2020-11-25 20:46:42,099 TRACE  [main] BasicExtractor: extracted value ([binary_v2_0_1_] : [BLOB]) - [null]
2020-11-25 20:46:42,099 TRACE  [main] BasicExtractor: extracted value ([float_va3_0_1_] : [DOUBLE]) - [3.0]
2020-11-25 20:46:42,100 TRACE  [main] BasicExtractor: extracted value ([i4_0_1_] : [INTEGER]) - [0]
2020-11-25 20:46:42,100 TRACE  [main] BasicExtractor: extracted value ([is_condi5_0_1_] : [BOOLEAN]) - [true]
2020-11-25 20:46:42,100 TRACE  [main] BasicExtractor: extracted value ([j6_0_1_] : [INTEGER]) - [2]
2020-11-25 20:46:42,100 TRACE  [main] BasicExtractor: extracted value ([problem_7_0_1_] : [BIGINT]) - [10]
2020-11-25 20:46:42,100 TRACE  [main] BasicExtractor: extracted value ([problem_7_0_0_] : [BIGINT]) - [10]
2020-11-25 20:46:42,100 TRACE  [main] BasicExtractor: extracted value ([id1_0_0_] : [BIGINT]) - [59]
2020-11-25 20:46:42,101 TRACE  [main] BasicExtractor: extracted value ([id1_0_1_] : [BIGINT]) - [60]
2020-11-25 20:46:42,102 TRACE  [main] BasicExtractor: extracted value ([binary_v2_0_1_] : [BLOB]) - [null]
2020-11-25 20:46:42,102 TRACE  [main] BasicExtractor: extracted value ([float_va3_0_1_] : [DOUBLE]) - [4.0]
2020-11-25 20:46:42,102 TRACE  [main] BasicExtractor: extracted value ([i4_0_1_] : [INTEGER]) - [0]
2020-11-25 20:46:42,102 TRACE  [main] BasicExtractor: extracted value ([is_condi5_0_1_] : [BOOLEAN]) - [true]
2020-11-25 20:46:42,102 TRACE  [main] BasicExtractor: extracted value ([j6_0_1_] : [INTEGER]) - [3]
2020-11-25 20:46:42,102 TRACE  [main] BasicExtractor: extracted value ([problem_7_0_1_] : [BIGINT]) - [10]
2020-11-25 20:46:42,103 TRACE  [main] BasicExtractor: extracted value ([problem_7_0_0_] : [BIGINT]) - [10]
2020-11-25 20:46:42,103 TRACE  [main] BasicExtractor: extracted value ([id1_0_0_] : [BIGINT]) - [60]
2020-11-25 20:46:42,129 TRACE  [main] BasicBinder: binding parameter [1] as [BIGINT] - [11]
2020-11-25 20:46:42,131 TRACE  [main] BasicExtractor: extracted value ([id1_1_2_] : [BIGINT]) - [null]
2020-11-25 20:46:42,131 TRACE  [main] BasicExtractor: extracted value ([id1_0_4_] : [BIGINT]) - [null]
2020-11-25 20:46:42,131 TRACE  [main] BasicExtractor: extracted value ([descript2_1_0_] : [BLOB]) - [[112, 114, 111, 98, 108, 101, 109, 100, 101, 115, 99, 114, 105, 112, 116, 105, 111, 110]]
2020-11-25 20:46:42,132 TRACE  [main] BasicExtractor: extracted value ([is_solve3_1_0_] : [BOOLEAN]) - [null]
2020-11-25 20:46:42,132 TRACE  [main] BasicExtractor: extracted value ([kind4_1_0_] : [VARCHAR]) - [POLYNOMIAL]
2020-11-25 20:46:42,132 TRACE  [main] BasicExtractor: extracted value ([matrix_d5_1_0_] : [INTEGER]) - [1]
2020-11-25 20:46:42,132 TRACE  [main] BasicExtractor: extracted value ([parent_p7_1_0_] : [BIGINT]) - [null]
2020-11-25 20:46:42,132 TRACE  [main] BasicExtractor: extracted value ([problem_6_1_0_] : [INTEGER]) - [22]
2020-11-25 20:46:42,132 TRACE  [main] BasicExtractor: extracted value ([problem_7_0_3_] : [BIGINT]) - [null]
2020-11-25 20:46:42,132 TRACE  [main] BasicExtractor: extracted value ([parent_p7_1_1_] : [BIGINT]) - [null]
2020-11-25 20:46:42,132 TRACE  [main] CollectionType: Created collection wrapper: [com.sf.back.entities.Problem.matrixes#11]
2020-11-25 20:46:42,133 TRACE  [main] BasicBinder: binding parameter [1] as [BIGINT] - [11]
2020-11-25 20:46:42,134 TRACE  [main] BasicExtractor: extracted value ([id1_0_1_] : [BIGINT]) - [61]
2020-11-25 20:46:42,134 TRACE  [main] BasicExtractor: extracted value ([binary_v2_0_1_] : [BLOB]) - [null]
2020-11-25 20:46:42,135 TRACE  [main] BasicExtractor: extracted value ([float_va3_0_1_] : [DOUBLE]) - [1.0]
2020-11-25 20:46:42,135 TRACE  [main] BasicExtractor: extracted value ([i4_0_1_] : [INTEGER]) - [0]
2020-11-25 20:46:42,135 TRACE  [main] BasicExtractor: extracted value ([is_condi5_0_1_] : [BOOLEAN]) - [true]
2020-11-25 20:46:42,135 TRACE  [main] BasicExtractor: extracted value ([j6_0_1_] : [INTEGER]) - [0]
2020-11-25 20:46:42,135 TRACE  [main] BasicExtractor: extracted value ([problem_7_0_1_] : [BIGINT]) - [11]
2020-11-25 20:46:42,135 TRACE  [main] BasicExtractor: extracted value ([problem_7_0_0_] : [BIGINT]) - [11]
2020-11-25 20:46:42,135 TRACE  [main] BasicExtractor: extracted value ([id1_0_0_] : [BIGINT]) - [61]
2020-11-25 20:46:42,136 TRACE  [main] BasicExtractor: extracted value ([id1_0_1_] : [BIGINT]) - [62]
2020-11-25 20:46:42,136 TRACE  [main] BasicExtractor: extracted value ([binary_v2_0_1_] : [BLOB]) - [null]
2020-11-25 20:46:42,137 TRACE  [main] BasicExtractor: extracted value ([float_va3_0_1_] : [DOUBLE]) - [2.718281828459045]
2020-11-25 20:46:42,137 TRACE  [main] BasicExtractor: extracted value ([i4_0_1_] : [INTEGER]) - [0]
2020-11-25 20:46:42,137 TRACE  [main] BasicExtractor: extracted value ([is_condi5_0_1_] : [BOOLEAN]) - [true]
2020-11-25 20:46:42,137 TRACE  [main] BasicExtractor: extracted value ([j6_0_1_] : [INTEGER]) - [1]
2020-11-25 20:46:42,137 TRACE  [main] BasicExtractor: extracted value ([problem_7_0_1_] : [BIGINT]) - [11]
2020-11-25 20:46:42,137 TRACE  [main] BasicExtractor: extracted value ([problem_7_0_0_] : [BIGINT]) - [11]
2020-11-25 20:46:42,137 TRACE  [main] BasicExtractor: extracted value ([id1_0_0_] : [BIGINT]) - [62]
2020-11-25 20:46:42,137 TRACE  [main] BasicExtractor: extracted value ([id1_0_1_] : [BIGINT]) - [63]
2020-11-25 20:46:42,137 TRACE  [main] BasicExtractor: extracted value ([binary_v2_0_1_] : [BLOB]) - [null]
2020-11-25 20:46:42,137 TRACE  [main] BasicExtractor: extracted value ([float_va3_0_1_] : [DOUBLE]) - [7.38905609893065]
2020-11-25 20:46:42,137 TRACE  [main] BasicExtractor: extracted value ([i4_0_1_] : [INTEGER]) - [0]
2020-11-25 20:46:42,137 TRACE  [main] BasicExtractor: extracted value ([is_condi5_0_1_] : [BOOLEAN]) - [true]
2020-11-25 20:46:42,138 TRACE  [main] BasicExtractor: extracted value ([j6_0_1_] : [INTEGER]) - [2]
2020-11-25 20:46:42,138 TRACE  [main] BasicExtractor: extracted value ([problem_7_0_1_] : [BIGINT]) - [11]
2020-11-25 20:46:42,138 TRACE  [main] BasicExtractor: extracted value ([problem_7_0_0_] : [BIGINT]) - [11]
2020-11-25 20:46:42,138 TRACE  [main] BasicExtractor: extracted value ([id1_0_0_] : [BIGINT]) - [63]
2020-11-25 20:46:42,138 TRACE  [main] BasicExtractor: extracted value ([id1_0_1_] : [BIGINT]) - [64]
2020-11-25 20:46:42,138 TRACE  [main] BasicExtractor: extracted value ([binary_v2_0_1_] : [BLOB]) - [null]
2020-11-25 20:46:42,138 TRACE  [main] BasicExtractor: extracted value ([float_va3_0_1_] : [DOUBLE]) - [20.085536923187668]
2020-11-25 20:46:42,138 TRACE  [main] BasicExtractor: extracted value ([i4_0_1_] : [INTEGER]) - [0]
2020-11-25 20:46:42,138 TRACE  [main] BasicExtractor: extracted value ([is_condi5_0_1_] : [BOOLEAN]) - [true]
2020-11-25 20:46:42,139 TRACE  [main] BasicExtractor: extracted value ([j6_0_1_] : [INTEGER]) - [3]
2020-11-25 20:46:42,139 TRACE  [main] BasicExtractor: extracted value ([problem_7_0_1_] : [BIGINT]) - [11]
2020-11-25 20:46:42,139 TRACE  [main] BasicExtractor: extracted value ([problem_7_0_0_] : [BIGINT]) - [11]
2020-11-25 20:46:42,139 TRACE  [main] BasicExtractor: extracted value ([id1_0_0_] : [BIGINT]) - [64]
2020-11-25 20:46:42,139 TRACE  [main] BasicExtractor: extracted value ([id1_0_1_] : [BIGINT]) - [65]
2020-11-25 20:46:42,139 TRACE  [main] BasicExtractor: extracted value ([binary_v2_0_1_] : [BLOB]) - [null]
2020-11-25 20:46:42,139 TRACE  [main] BasicExtractor: extracted value ([float_va3_0_1_] : [DOUBLE]) - [54.598150033144236]
2020-11-25 20:46:42,139 TRACE  [main] BasicExtractor: extracted value ([i4_0_1_] : [INTEGER]) - [0]
2020-11-25 20:46:42,139 TRACE  [main] BasicExtractor: extracted value ([is_condi5_0_1_] : [BOOLEAN]) - [true]
2020-11-25 20:46:42,139 TRACE  [main] BasicExtractor: extracted value ([j6_0_1_] : [INTEGER]) - [4]
2020-11-25 20:46:42,140 TRACE  [main] BasicExtractor: extracted value ([problem_7_0_1_] : [BIGINT]) - [11]
2020-11-25 20:46:42,140 TRACE  [main] BasicExtractor: extracted value ([problem_7_0_0_] : [BIGINT]) - [11]
2020-11-25 20:46:42,140 TRACE  [main] BasicExtractor: extracted value ([id1_0_0_] : [BIGINT]) - [65]
2020-11-25 20:46:42,140 TRACE  [main] BasicExtractor: extracted value ([id1_0_1_] : [BIGINT]) - [66]
2020-11-25 20:46:42,141 TRACE  [main] BasicExtractor: extracted value ([binary_v2_0_1_] : [BLOB]) - [null]
2020-11-25 20:46:42,141 TRACE  [main] BasicExtractor: extracted value ([float_va3_0_1_] : [DOUBLE]) - [148.4131591025766]
2020-11-25 20:46:42,142 TRACE  [main] BasicExtractor: extracted value ([i4_0_1_] : [INTEGER]) - [0]
2020-11-25 20:46:42,142 TRACE  [main] BasicExtractor: extracted value ([is_condi5_0_1_] : [BOOLEAN]) - [true]
2020-11-25 20:46:42,142 TRACE  [main] BasicExtractor: extracted value ([j6_0_1_] : [INTEGER]) - [5]
2020-11-25 20:46:42,142 TRACE  [main] BasicExtractor: extracted value ([problem_7_0_1_] : [BIGINT]) - [11]
2020-11-25 20:46:42,142 TRACE  [main] BasicExtractor: extracted value ([problem_7_0_0_] : [BIGINT]) - [11]
2020-11-25 20:46:42,142 TRACE  [main] BasicExtractor: extracted value ([id1_0_0_] : [BIGINT]) - [66]
2020-11-25 20:46:42,148 TRACE  [main] BasicBinder: binding parameter [1] as [BIGINT] - [11]
2020-11-25 20:46:42,148 TRACE  [main] BasicExtractor: extracted value ([id1_0_0_] : [BIGINT]) - [61]
2020-11-25 20:46:42,149 TRACE  [main] BasicExtractor: extracted value ([binary_v2_0_0_] : [BLOB]) - [null]
2020-11-25 20:46:42,149 TRACE  [main] BasicExtractor: extracted value ([float_va3_0_0_] : [DOUBLE]) - [1.0]
2020-11-25 20:46:42,149 TRACE  [main] BasicExtractor: extracted value ([i4_0_0_] : [INTEGER]) - [0]
2020-11-25 20:46:42,149 TRACE  [main] BasicExtractor: extracted value ([is_condi5_0_0_] : [BOOLEAN]) - [true]
2020-11-25 20:46:42,149 TRACE  [main] BasicExtractor: extracted value ([j6_0_0_] : [INTEGER]) - [0]
2020-11-25 20:46:42,149 TRACE  [main] BasicExtractor: extracted value ([problem_7_0_0_] : [BIGINT]) - [11]
2020-11-25 20:46:42,149 TRACE  [main] BasicExtractor: extracted value ([descript2_1_1_] : [BLOB]) - [[112, 114, 111, 98, 108, 101, 109, 100, 101, 115, 99, 114, 105, 112, 116, 105, 111, 110]]
2020-11-25 20:46:42,150 TRACE  [main] BasicExtractor: extracted value ([is_solve3_1_1_] : [BOOLEAN]) - [null]
2020-11-25 20:46:42,150 TRACE  [main] BasicExtractor: extracted value ([kind4_1_1_] : [VARCHAR]) - [POLYNOMIAL]
2020-11-25 20:46:42,150 TRACE  [main] BasicExtractor: extracted value ([matrix_d5_1_1_] : [INTEGER]) - [1]
2020-11-25 20:46:42,150 TRACE  [main] BasicExtractor: extracted value ([parent_p7_1_1_] : [BIGINT]) - [null]
2020-11-25 20:46:42,150 TRACE  [main] BasicExtractor: extracted value ([problem_6_1_1_] : [INTEGER]) - [22]
2020-11-25 20:46:42,150 TRACE  [main] BasicExtractor: extracted value ([problem_7_0_3_] : [BIGINT]) - [11]
2020-11-25 20:46:42,150 TRACE  [main] BasicExtractor: extracted value ([id1_0_3_] : [BIGINT]) - [61]
2020-11-25 20:46:42,151 TRACE  [main] BasicExtractor: extracted value ([id1_0_0_] : [BIGINT]) - [62]
2020-11-25 20:46:42,151 TRACE  [main] BasicExtractor: extracted value ([binary_v2_0_0_] : [BLOB]) - [null]
2020-11-25 20:46:42,151 TRACE  [main] BasicExtractor: extracted value ([float_va3_0_0_] : [DOUBLE]) - [2.718281828459045]
2020-11-25 20:46:42,151 TRACE  [main] BasicExtractor: extracted value ([i4_0_0_] : [INTEGER]) - [0]
2020-11-25 20:46:42,151 TRACE  [main] BasicExtractor: extracted value ([is_condi5_0_0_] : [BOOLEAN]) - [true]
2020-11-25 20:46:42,151 TRACE  [main] BasicExtractor: extracted value ([j6_0_0_] : [INTEGER]) - [1]
2020-11-25 20:46:42,151 TRACE  [main] BasicExtractor: extracted value ([problem_7_0_0_] : [BIGINT]) - [11]
2020-11-25 20:46:42,152 TRACE  [main] BasicExtractor: extracted value ([problem_7_0_3_] : [BIGINT]) - [11]
2020-11-25 20:46:42,152 TRACE  [main] BasicExtractor: extracted value ([id1_0_3_] : [BIGINT]) - [62]
2020-11-25 20:46:42,152 TRACE  [main] BasicExtractor: extracted value ([id1_0_0_] : [BIGINT]) - [63]
2020-11-25 20:46:42,152 TRACE  [main] BasicExtractor: extracted value ([binary_v2_0_0_] : [BLOB]) - [null]
2020-11-25 20:46:42,152 TRACE  [main] BasicExtractor: extracted value ([float_va3_0_0_] : [DOUBLE]) - [7.38905609893065]
2020-11-25 20:46:42,152 TRACE  [main] BasicExtractor: extracted value ([i4_0_0_] : [INTEGER]) - [0]
2020-11-25 20:46:42,152 TRACE  [main] BasicExtractor: extracted value ([is_condi5_0_0_] : [BOOLEAN]) - [true]
2020-11-25 20:46:42,152 TRACE  [main] BasicExtractor: extracted value ([j6_0_0_] : [INTEGER]) - [2]
2020-11-25 20:46:42,153 TRACE  [main] BasicExtractor: extracted value ([problem_7_0_0_] : [BIGINT]) - [11]
2020-11-25 20:46:42,153 TRACE  [main] BasicExtractor: extracted value ([problem_7_0_3_] : [BIGINT]) - [11]
2020-11-25 20:46:42,153 TRACE  [main] BasicExtractor: extracted value ([id1_0_3_] : [BIGINT]) - [63]
2020-11-25 20:46:42,153 TRACE  [main] BasicExtractor: extracted value ([id1_0_0_] : [BIGINT]) - [64]
2020-11-25 20:46:42,153 TRACE  [main] BasicExtractor: extracted value ([binary_v2_0_0_] : [BLOB]) - [null]
2020-11-25 20:46:42,153 TRACE  [main] BasicExtractor: extracted value ([float_va3_0_0_] : [DOUBLE]) - [20.085536923187668]
2020-11-25 20:46:42,153 TRACE  [main] BasicExtractor: extracted value ([i4_0_0_] : [INTEGER]) - [0]
2020-11-25 20:46:42,153 TRACE  [main] BasicExtractor: extracted value ([is_condi5_0_0_] : [BOOLEAN]) - [true]
2020-11-25 20:46:42,153 TRACE  [main] BasicExtractor: extracted value ([j6_0_0_] : [INTEGER]) - [3]
2020-11-25 20:46:42,154 TRACE  [main] BasicExtractor: extracted value ([problem_7_0_0_] : [BIGINT]) - [11]
2020-11-25 20:46:42,154 TRACE  [main] BasicExtractor: extracted value ([problem_7_0_3_] : [BIGINT]) - [11]
2020-11-25 20:46:42,154 TRACE  [main] BasicExtractor: extracted value ([id1_0_3_] : [BIGINT]) - [64]
2020-11-25 20:46:42,154 TRACE  [main] BasicExtractor: extracted value ([id1_0_0_] : [BIGINT]) - [65]
2020-11-25 20:46:42,154 TRACE  [main] BasicExtractor: extracted value ([binary_v2_0_0_] : [BLOB]) - [null]
2020-11-25 20:46:42,154 TRACE  [main] BasicExtractor: extracted value ([float_va3_0_0_] : [DOUBLE]) - [54.598150033144236]
2020-11-25 20:46:42,154 TRACE  [main] BasicExtractor: extracted value ([i4_0_0_] : [INTEGER]) - [0]
2020-11-25 20:46:42,154 TRACE  [main] BasicExtractor: extracted value ([is_condi5_0_0_] : [BOOLEAN]) - [true]
2020-11-25 20:46:42,154 TRACE  [main] BasicExtractor: extracted value ([j6_0_0_] : [INTEGER]) - [4]
2020-11-25 20:46:42,156 TRACE  [main] BasicExtractor: extracted value ([problem_7_0_0_] : [BIGINT]) - [11]
2020-11-25 20:46:42,156 TRACE  [main] BasicExtractor: extracted value ([problem_7_0_3_] : [BIGINT]) - [11]
2020-11-25 20:46:42,168 TRACE  [main] BasicExtractor: extracted value ([id1_0_3_] : [BIGINT]) - [65]
2020-11-25 20:46:42,168 TRACE  [main] BasicExtractor: extracted value ([id1_0_0_] : [BIGINT]) - [66]
2020-11-25 20:46:42,169 TRACE  [main] BasicExtractor: extracted value ([binary_v2_0_0_] : [BLOB]) - [null]
2020-11-25 20:46:42,169 TRACE  [main] BasicExtractor: extracted value ([float_va3_0_0_] : [DOUBLE]) - [148.4131591025766]
2020-11-25 20:46:42,170 TRACE  [main] BasicExtractor: extracted value ([i4_0_0_] : [INTEGER]) - [0]
2020-11-25 20:46:42,170 TRACE  [main] BasicExtractor: extracted value ([is_condi5_0_0_] : [BOOLEAN]) - [true]
2020-11-25 20:46:42,170 TRACE  [main] BasicExtractor: extracted value ([j6_0_0_] : [INTEGER]) - [5]
2020-11-25 20:46:42,171 TRACE  [main] BasicExtractor: extracted value ([problem_7_0_0_] : [BIGINT]) - [11]
2020-11-25 20:46:42,172 TRACE  [main] BasicExtractor: extracted value ([problem_7_0_3_] : [BIGINT]) - [11]
2020-11-25 20:46:42,172 TRACE  [main] BasicExtractor: extracted value ([id1_0_3_] : [BIGINT]) - [66]
2020-11-25 20:46:42,173 TRACE  [main] CollectionType: Created collection wrapper: [com.sf.back.entities.Problem.children#11]
2020-11-25 20:46:42,182 TRACE  [main] BasicBinder: binding parameter [1] as [BIGINT] - [11]
2020-11-25 20:46:42,187 TRACE  [main] BasicBinder: binding parameter [1] as [BLOB] - [null]
2020-11-25 20:46:42,187 TRACE  [main] BasicBinder: binding parameter [2] as [DOUBLE] - [2.0]
2020-11-25 20:46:42,188 TRACE  [main] BasicBinder: binding parameter [3] as [INTEGER] - [0]
2020-11-25 20:46:42,188 TRACE  [main] BasicBinder: binding parameter [4] as [BOOLEAN] - [true]
2020-11-25 20:46:42,188 TRACE  [main] BasicBinder: binding parameter [5] as [INTEGER] - [0]
2020-11-25 20:46:42,189 TRACE  [main] BasicBinder: binding parameter [6] as [BIGINT] - [11]
2020-11-25 20:46:42,189 TRACE  [main] BasicBinder: binding parameter [7] as [BIGINT] - [61]
2020-11-25 20:46:42,191 TRACE  [main] BasicBinder: binding parameter [1] as [BLOB] - [[100, 101, 115, 99, 114, 105, 112, 116, 105, 111, 110, 112, 114, 111, 98, 108, 101, 109]]
2020-11-25 20:46:42,192 TRACE  [main] BasicBinder: binding parameter [2] as [BOOLEAN] - [null]
2020-11-25 20:46:42,192 TRACE  [main] BasicBinder: binding parameter [3] as [VARCHAR] - [POLYNOMIAL]
2020-11-25 20:46:42,193 TRACE  [main] BasicBinder: binding parameter [4] as [INTEGER] - [1]
2020-11-25 20:46:42,193 TRACE  [main] BasicBinder: binding parameter [5] as [BIGINT] - [null]
2020-11-25 20:46:42,194 TRACE  [main] BasicBinder: binding parameter [6] as [INTEGER] - [22]
2020-11-25 20:46:42,194 TRACE  [main] BasicBinder: binding parameter [7] as [BIGINT] - [11]
2020-11-25 20:46:42,219 TRACE  [main] BasicBinder: binding parameter [1] as [BIGINT] - [12]
2020-11-25 20:46:42,220 TRACE  [main] BasicExtractor: extracted value ([id1_1_2_] : [BIGINT]) - [null]
2020-11-25 20:46:42,220 TRACE  [main] BasicExtractor: extracted value ([id1_0_4_] : [BIGINT]) - [null]
2020-11-25 20:46:42,220 TRACE  [main] BasicExtractor: extracted value ([descript2_1_0_] : [BLOB]) - [[112, 114, 111, 98, 108, 101, 109, 100, 101, 115, 99, 114, 105, 112, 116, 105, 111, 110]]
2020-11-25 20:46:42,220 TRACE  [main] BasicExtractor: extracted value ([is_solve3_1_0_] : [BOOLEAN]) - [null]
2020-11-25 20:46:42,221 TRACE  [main] BasicExtractor: extracted value ([kind4_1_0_] : [VARCHAR]) - [POLYNOMIAL]
2020-11-25 20:46:42,221 TRACE  [main] BasicExtractor: extracted value ([matrix_d5_1_0_] : [INTEGER]) - [1]
2020-11-25 20:46:42,221 TRACE  [main] BasicExtractor: extracted value ([parent_p7_1_0_] : [BIGINT]) - [null]
2020-11-25 20:46:42,221 TRACE  [main] BasicExtractor: extracted value ([problem_6_1_0_] : [INTEGER]) - [22]
2020-11-25 20:46:42,221 TRACE  [main] BasicExtractor: extracted value ([problem_7_0_3_] : [BIGINT]) - [null]
2020-11-25 20:46:42,221 TRACE  [main] BasicExtractor: extracted value ([parent_p7_1_1_] : [BIGINT]) - [null]
2020-11-25 20:46:42,222 TRACE  [main] CollectionType: Created collection wrapper: [com.sf.back.entities.Problem.matrixes#12]
2020-11-25 20:46:42,223 TRACE  [main] BasicBinder: binding parameter [1] as [BIGINT] - [12]
2020-11-25 20:46:42,225 TRACE  [main] BasicExtractor: extracted value ([id1_0_1_] : [BIGINT]) - [67]
2020-11-25 20:46:42,226 TRACE  [main] BasicExtractor: extracted value ([binary_v2_0_1_] : [BLOB]) - [null]
2020-11-25 20:46:42,226 TRACE  [main] BasicExtractor: extracted value ([float_va3_0_1_] : [DOUBLE]) - [1.0]
2020-11-25 20:46:42,226 TRACE  [main] BasicExtractor: extracted value ([i4_0_1_] : [INTEGER]) - [0]
2020-11-25 20:46:42,226 TRACE  [main] BasicExtractor: extracted value ([is_condi5_0_1_] : [BOOLEAN]) - [true]
2020-11-25 20:46:42,226 TRACE  [main] BasicExtractor: extracted value ([j6_0_1_] : [INTEGER]) - [0]
2020-11-25 20:46:42,226 TRACE  [main] BasicExtractor: extracted value ([problem_7_0_1_] : [BIGINT]) - [12]
2020-11-25 20:46:42,227 TRACE  [main] BasicExtractor: extracted value ([problem_7_0_0_] : [BIGINT]) - [12]
2020-11-25 20:46:42,227 TRACE  [main] BasicExtractor: extracted value ([id1_0_0_] : [BIGINT]) - [67]
2020-11-25 20:46:42,227 TRACE  [main] BasicExtractor: extracted value ([id1_0_1_] : [BIGINT]) - [68]
2020-11-25 20:46:42,227 TRACE  [main] BasicExtractor: extracted value ([binary_v2_0_1_] : [BLOB]) - [null]
2020-11-25 20:46:42,227 TRACE  [main] BasicExtractor: extracted value ([float_va3_0_1_] : [DOUBLE]) - [2.718281828459045]
2020-11-25 20:46:42,227 TRACE  [main] BasicExtractor: extracted value ([i4_0_1_] : [INTEGER]) - [0]
2020-11-25 20:46:42,228 TRACE  [main] BasicExtractor: extracted value ([is_condi5_0_1_] : [BOOLEAN]) - [true]
2020-11-25 20:46:42,228 TRACE  [main] BasicExtractor: extracted value ([j6_0_1_] : [INTEGER]) - [1]
2020-11-25 20:46:42,228 TRACE  [main] BasicExtractor: extracted value ([problem_7_0_1_] : [BIGINT]) - [12]
2020-11-25 20:46:42,228 TRACE  [main] BasicExtractor: extracted value ([problem_7_0_0_] : [BIGINT]) - [12]
2020-11-25 20:46:42,228 TRACE  [main] BasicExtractor: extracted value ([id1_0_0_] : [BIGINT]) - [68]
2020-11-25 20:46:42,229 TRACE  [main] BasicExtractor: extracted value ([id1_0_1_] : [BIGINT]) - [69]
2020-11-25 20:46:42,230 TRACE  [main] BasicExtractor: extracted value ([binary_v2_0_1_] : [BLOB]) - [null]
2020-11-25 20:46:42,230 TRACE  [main] BasicExtractor: extracted value ([float_va3_0_1_] : [DOUBLE]) - [7.38905609893065]
2020-11-25 20:46:42,230 TRACE  [main] BasicExtractor: extracted value ([i4_0_1_] : [INTEGER]) - [0]
2020-11-25 20:46:42,230 TRACE  [main] BasicExtractor: extracted value ([is_condi5_0_1_] : [BOOLEAN]) - [true]
2020-11-25 20:46:42,230 TRACE  [main] BasicExtractor: extracted value ([j6_0_1_] : [INTEGER]) - [2]
2020-11-25 20:46:42,230 TRACE  [main] BasicExtractor: extracted value ([problem_7_0_1_] : [BIGINT]) - [12]
2020-11-25 20:46:42,230 TRACE  [main] BasicExtractor: extracted value ([problem_7_0_0_] : [BIGINT]) - [12]
2020-11-25 20:46:42,230 TRACE  [main] BasicExtractor: extracted value ([id1_0_0_] : [BIGINT]) - [69]
2020-11-25 20:46:42,230 TRACE  [main] BasicExtractor: extracted value ([id1_0_1_] : [BIGINT]) - [70]
2020-11-25 20:46:42,231 TRACE  [main] BasicExtractor: extracted value ([binary_v2_0_1_] : [BLOB]) - [null]
2020-11-25 20:46:42,231 TRACE  [main] BasicExtractor: extracted value ([float_va3_0_1_] : [DOUBLE]) - [20.085536923187668]
2020-11-25 20:46:42,231 TRACE  [main] BasicExtractor: extracted value ([i4_0_1_] : [INTEGER]) - [0]
2020-11-25 20:46:42,231 TRACE  [main] BasicExtractor: extracted value ([is_condi5_0_1_] : [BOOLEAN]) - [true]
2020-11-25 20:46:42,232 TRACE  [main] BasicExtractor: extracted value ([j6_0_1_] : [INTEGER]) - [3]
2020-11-25 20:46:42,232 TRACE  [main] BasicExtractor: extracted value ([problem_7_0_1_] : [BIGINT]) - [12]
2020-11-25 20:46:42,232 TRACE  [main] BasicExtractor: extracted value ([problem_7_0_0_] : [BIGINT]) - [12]
2020-11-25 20:46:42,232 TRACE  [main] BasicExtractor: extracted value ([id1_0_0_] : [BIGINT]) - [70]
2020-11-25 20:46:42,233 TRACE  [main] BasicExtractor: extracted value ([id1_0_1_] : [BIGINT]) - [71]
2020-11-25 20:46:42,233 TRACE  [main] BasicExtractor: extracted value ([binary_v2_0_1_] : [BLOB]) - [null]
2020-11-25 20:46:42,234 TRACE  [main] BasicExtractor: extracted value ([float_va3_0_1_] : [DOUBLE]) - [54.598150033144236]
2020-11-25 20:46:42,234 TRACE  [main] BasicExtractor: extracted value ([i4_0_1_] : [INTEGER]) - [0]
2020-11-25 20:46:42,234 TRACE  [main] BasicExtractor: extracted value ([is_condi5_0_1_] : [BOOLEAN]) - [true]
2020-11-25 20:46:42,235 TRACE  [main] BasicExtractor: extracted value ([j6_0_1_] : [INTEGER]) - [4]
2020-11-25 20:46:42,235 TRACE  [main] BasicExtractor: extracted value ([problem_7_0_1_] : [BIGINT]) - [12]
2020-11-25 20:46:42,235 TRACE  [main] BasicExtractor: extracted value ([problem_7_0_0_] : [BIGINT]) - [12]
2020-11-25 20:46:42,235 TRACE  [main] BasicExtractor: extracted value ([id1_0_0_] : [BIGINT]) - [71]
2020-11-25 20:46:42,235 TRACE  [main] BasicExtractor: extracted value ([id1_0_1_] : [BIGINT]) - [72]
2020-11-25 20:46:42,235 TRACE  [main] BasicExtractor: extracted value ([binary_v2_0_1_] : [BLOB]) - [null]
2020-11-25 20:46:42,236 TRACE  [main] BasicExtractor: extracted value ([float_va3_0_1_] : [DOUBLE]) - [148.4131591025766]
2020-11-25 20:46:42,236 TRACE  [main] BasicExtractor: extracted value ([i4_0_1_] : [INTEGER]) - [0]
2020-11-25 20:46:42,236 TRACE  [main] BasicExtractor: extracted value ([is_condi5_0_1_] : [BOOLEAN]) - [true]
2020-11-25 20:46:42,236 TRACE  [main] BasicExtractor: extracted value ([j6_0_1_] : [INTEGER]) - [5]
2020-11-25 20:46:42,236 TRACE  [main] BasicExtractor: extracted value ([problem_7_0_1_] : [BIGINT]) - [12]
2020-11-25 20:46:42,236 TRACE  [main] BasicExtractor: extracted value ([problem_7_0_0_] : [BIGINT]) - [12]
2020-11-25 20:46:42,236 TRACE  [main] BasicExtractor: extracted value ([id1_0_0_] : [BIGINT]) - [72]
2020-11-25 20:46:42,241 TRACE  [main] BasicBinder: binding parameter [1] as [BIGINT] - [12]
2020-11-25 20:46:42,241 TRACE  [main] BasicExtractor: extracted value ([id1_1_2_] : [BIGINT]) - [null]
2020-11-25 20:46:42,242 TRACE  [main] BasicExtractor: extracted value ([id1_0_4_] : [BIGINT]) - [null]
2020-11-25 20:46:42,242 TRACE  [main] BasicExtractor: extracted value ([descript2_1_0_] : [BLOB]) - [[112, 114, 111, 98, 108, 101, 109, 100, 101, 115, 99, 114, 105, 112, 116, 105, 111, 110]]
2020-11-25 20:46:42,242 TRACE  [main] BasicExtractor: extracted value ([is_solve3_1_0_] : [BOOLEAN]) - [null]
2020-11-25 20:46:42,243 TRACE  [main] BasicExtractor: extracted value ([kind4_1_0_] : [VARCHAR]) - [POLYNOMIAL]
2020-11-25 20:46:42,243 TRACE  [main] BasicExtractor: extracted value ([matrix_d5_1_0_] : [INTEGER]) - [1]
2020-11-25 20:46:42,243 TRACE  [main] BasicExtractor: extracted value ([parent_p7_1_0_] : [BIGINT]) - [null]
2020-11-25 20:46:42,243 TRACE  [main] BasicExtractor: extracted value ([problem_6_1_0_] : [INTEGER]) - [22]
2020-11-25 20:46:42,244 TRACE  [main] BasicExtractor: extracted value ([problem_7_0_3_] : [BIGINT]) - [null]
2020-11-25 20:46:42,244 TRACE  [main] BasicExtractor: extracted value ([parent_p7_1_1_] : [BIGINT]) - [null]
2020-11-25 20:46:42,244 TRACE  [main] CollectionType: Created collection wrapper: [com.sf.back.entities.Problem.matrixes#12]
2020-11-25 20:46:42,245 TRACE  [main] BasicBinder: binding parameter [1] as [BIGINT] - [12]
2020-11-25 20:46:42,247 TRACE  [main] BasicExtractor: extracted value ([id1_0_1_] : [BIGINT]) - [67]
2020-11-25 20:46:42,247 TRACE  [main] BasicExtractor: extracted value ([binary_v2_0_1_] : [BLOB]) - [null]
2020-11-25 20:46:42,247 TRACE  [main] BasicExtractor: extracted value ([float_va3_0_1_] : [DOUBLE]) - [1.0]
2020-11-25 20:46:42,248 TRACE  [main] BasicExtractor: extracted value ([i4_0_1_] : [INTEGER]) - [0]
2020-11-25 20:46:42,248 TRACE  [main] BasicExtractor: extracted value ([is_condi5_0_1_] : [BOOLEAN]) - [true]
2020-11-25 20:46:42,249 TRACE  [main] BasicExtractor: extracted value ([j6_0_1_] : [INTEGER]) - [0]
2020-11-25 20:46:42,254 TRACE  [main] BasicExtractor: extracted value ([problem_7_0_1_] : [BIGINT]) - [12]
2020-11-25 20:46:42,255 TRACE  [main] BasicExtractor: extracted value ([problem_7_0_0_] : [BIGINT]) - [12]
2020-11-25 20:46:42,255 TRACE  [main] BasicExtractor: extracted value ([id1_0_0_] : [BIGINT]) - [67]
2020-11-25 20:46:42,255 TRACE  [main] BasicExtractor: extracted value ([id1_0_1_] : [BIGINT]) - [68]
2020-11-25 20:46:42,256 TRACE  [main] BasicExtractor: extracted value ([binary_v2_0_1_] : [BLOB]) - [null]
2020-11-25 20:46:42,256 TRACE  [main] BasicExtractor: extracted value ([float_va3_0_1_] : [DOUBLE]) - [2.718281828459045]
2020-11-25 20:46:42,257 TRACE  [main] BasicExtractor: extracted value ([i4_0_1_] : [INTEGER]) - [0]
2020-11-25 20:46:42,257 TRACE  [main] BasicExtractor: extracted value ([is_condi5_0_1_] : [BOOLEAN]) - [true]
2020-11-25 20:46:42,257 TRACE  [main] BasicExtractor: extracted value ([j6_0_1_] : [INTEGER]) - [1]
2020-11-25 20:46:42,258 TRACE  [main] BasicExtractor: extracted value ([problem_7_0_1_] : [BIGINT]) - [12]
2020-11-25 20:46:42,258 TRACE  [main] BasicExtractor: extracted value ([problem_7_0_0_] : [BIGINT]) - [12]
2020-11-25 20:46:42,258 TRACE  [main] BasicExtractor: extracted value ([id1_0_0_] : [BIGINT]) - [68]
2020-11-25 20:46:42,258 TRACE  [main] BasicExtractor: extracted value ([id1_0_1_] : [BIGINT]) - [69]
2020-11-25 20:46:42,259 TRACE  [main] BasicExtractor: extracted value ([binary_v2_0_1_] : [BLOB]) - [null]
2020-11-25 20:46:42,259 TRACE  [main] BasicExtractor: extracted value ([float_va3_0_1_] : [DOUBLE]) - [7.38905609893065]
2020-11-25 20:46:42,259 TRACE  [main] BasicExtractor: extracted value ([i4_0_1_] : [INTEGER]) - [0]
2020-11-25 20:46:42,260 TRACE  [main] BasicExtractor: extracted value ([is_condi5_0_1_] : [BOOLEAN]) - [true]
2020-11-25 20:46:42,260 TRACE  [main] BasicExtractor: extracted value ([j6_0_1_] : [INTEGER]) - [2]
2020-11-25 20:46:42,260 TRACE  [main] BasicExtractor: extracted value ([problem_7_0_1_] : [BIGINT]) - [12]
2020-11-25 20:46:42,260 TRACE  [main] BasicExtractor: extracted value ([problem_7_0_0_] : [BIGINT]) - [12]
2020-11-25 20:46:42,260 TRACE  [main] BasicExtractor: extracted value ([id1_0_0_] : [BIGINT]) - [69]
2020-11-25 20:46:42,261 TRACE  [main] BasicExtractor: extracted value ([id1_0_1_] : [BIGINT]) - [70]
2020-11-25 20:46:42,261 TRACE  [main] BasicExtractor: extracted value ([binary_v2_0_1_] : [BLOB]) - [null]
2020-11-25 20:46:42,261 TRACE  [main] BasicExtractor: extracted value ([float_va3_0_1_] : [DOUBLE]) - [20.085536923187668]
2020-11-25 20:46:42,261 TRACE  [main] BasicExtractor: extracted value ([i4_0_1_] : [INTEGER]) - [0]
2020-11-25 20:46:42,262 TRACE  [main] BasicExtractor: extracted value ([is_condi5_0_1_] : [BOOLEAN]) - [true]
2020-11-25 20:46:42,262 TRACE  [main] BasicExtractor: extracted value ([j6_0_1_] : [INTEGER]) - [3]
2020-11-25 20:46:42,263 TRACE  [main] BasicExtractor: extracted value ([problem_7_0_1_] : [BIGINT]) - [12]
2020-11-25 20:46:42,263 TRACE  [main] BasicExtractor: extracted value ([problem_7_0_0_] : [BIGINT]) - [12]
2020-11-25 20:46:42,264 TRACE  [main] BasicExtractor: extracted value ([id1_0_0_] : [BIGINT]) - [70]
2020-11-25 20:46:42,264 TRACE  [main] BasicExtractor: extracted value ([id1_0_1_] : [BIGINT]) - [71]
2020-11-25 20:46:42,264 TRACE  [main] BasicExtractor: extracted value ([binary_v2_0_1_] : [BLOB]) - [null]
2020-11-25 20:46:42,265 TRACE  [main] BasicExtractor: extracted value ([float_va3_0_1_] : [DOUBLE]) - [54.598150033144236]
2020-11-25 20:46:42,266 TRACE  [main] BasicExtractor: extracted value ([i4_0_1_] : [INTEGER]) - [0]
2020-11-25 20:46:42,271 TRACE  [main] BasicExtractor: extracted value ([is_condi5_0_1_] : [BOOLEAN]) - [true]
2020-11-25 20:46:42,272 TRACE  [main] BasicExtractor: extracted value ([j6_0_1_] : [INTEGER]) - [4]
2020-11-25 20:46:42,272 TRACE  [main] BasicExtractor: extracted value ([problem_7_0_1_] : [BIGINT]) - [12]
2020-11-25 20:46:42,273 TRACE  [main] BasicExtractor: extracted value ([problem_7_0_0_] : [BIGINT]) - [12]
2020-11-25 20:46:42,273 TRACE  [main] BasicExtractor: extracted value ([id1_0_0_] : [BIGINT]) - [71]
2020-11-25 20:46:42,274 TRACE  [main] BasicExtractor: extracted value ([id1_0_1_] : [BIGINT]) - [72]
2020-11-25 20:46:42,277 TRACE  [main] BasicExtractor: extracted value ([binary_v2_0_1_] : [BLOB]) - [null]
2020-11-25 20:46:42,277 TRACE  [main] BasicExtractor: extracted value ([float_va3_0_1_] : [DOUBLE]) - [148.4131591025766]
2020-11-25 20:46:42,278 TRACE  [main] BasicExtractor: extracted value ([i4_0_1_] : [INTEGER]) - [0]
2020-11-25 20:46:42,286 TRACE  [main] BasicExtractor: extracted value ([is_condi5_0_1_] : [BOOLEAN]) - [true]
2020-11-25 20:46:42,286 TRACE  [main] BasicExtractor: extracted value ([j6_0_1_] : [INTEGER]) - [5]
2020-11-25 20:46:42,287 TRACE  [main] BasicExtractor: extracted value ([problem_7_0_1_] : [BIGINT]) - [12]
2020-11-25 20:46:42,287 TRACE  [main] BasicExtractor: extracted value ([problem_7_0_0_] : [BIGINT]) - [12]
2020-11-25 20:46:42,288 TRACE  [main] BasicExtractor: extracted value ([id1_0_0_] : [BIGINT]) - [72]
2020-11-25 20:46:42,310 TRACE  [main] BasicBinder: binding parameter [1] as [BIGINT] - [67]
2020-11-25 20:46:42,321 TRACE  [main] BasicBinder: binding parameter [1] as [BIGINT] - [68]
2020-11-25 20:46:42,322 TRACE  [main] BasicBinder: binding parameter [1] as [BIGINT] - [69]
2020-11-25 20:46:42,323 TRACE  [main] BasicBinder: binding parameter [1] as [BIGINT] - [70]
2020-11-25 20:46:42,327 TRACE  [main] BasicBinder: binding parameter [1] as [BIGINT] - [71]
2020-11-25 20:46:42,328 TRACE  [main] BasicBinder: binding parameter [1] as [BIGINT] - [72]
2020-11-25 20:46:42,331 TRACE  [main] BasicBinder: binding parameter [1] as [BIGINT] - [12]
2020-11-25 20:46:42,338 TRACE  [main] BasicBinder: binding parameter [1] as [BIGINT] - [12]
2020-11-25 20:46:42,340 WARN   [main] ProblemService: Problem with 12 is not found
2020-11-25 20:46:43,087 DEBUG  [main] BasicTypeRegistry: Adding type registration boolean -> org.hibernate.type.BooleanType@7f85217c
2020-11-25 20:46:43,088 DEBUG  [main] BasicTypeRegistry: Adding type registration boolean -> org.hibernate.type.BooleanType@7f85217c
2020-11-25 20:46:43,088 DEBUG  [main] BasicTypeRegistry: Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@7f85217c
2020-11-25 20:46:43,088 DEBUG  [main] BasicTypeRegistry: Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@5d7d8613
2020-11-25 20:46:43,088 DEBUG  [main] BasicTypeRegistry: Adding type registration true_false -> org.hibernate.type.TrueFalseType@3bc69ce9
2020-11-25 20:46:43,088 DEBUG  [main] BasicTypeRegistry: Adding type registration yes_no -> org.hibernate.type.YesNoType@42507640
2020-11-25 20:46:43,088 DEBUG  [main] BasicTypeRegistry: Adding type registration byte -> org.hibernate.type.ByteType@75aea2ba
2020-11-25 20:46:43,088 DEBUG  [main] BasicTypeRegistry: Adding type registration byte -> org.hibernate.type.ByteType@75aea2ba
2020-11-25 20:46:43,089 DEBUG  [main] BasicTypeRegistry: Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@75aea2ba
2020-11-25 20:46:43,089 DEBUG  [main] BasicTypeRegistry: Adding type registration character -> org.hibernate.type.CharacterType@7e64c1a9
2020-11-25 20:46:43,089 DEBUG  [main] BasicTypeRegistry: Adding type registration char -> org.hibernate.type.CharacterType@7e64c1a9
2020-11-25 20:46:43,089 DEBUG  [main] BasicTypeRegistry: Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@7e64c1a9
2020-11-25 20:46:43,089 DEBUG  [main] BasicTypeRegistry: Adding type registration short -> org.hibernate.type.ShortType@576b7c74
2020-11-25 20:46:43,089 DEBUG  [main] BasicTypeRegistry: Adding type registration short -> org.hibernate.type.ShortType@576b7c74
2020-11-25 20:46:43,089 DEBUG  [main] BasicTypeRegistry: Adding type registration java.lang.Short -> org.hibernate.type.ShortType@576b7c74
2020-11-25 20:46:43,089 DEBUG  [main] BasicTypeRegistry: Adding type registration integer -> org.hibernate.type.IntegerType@28157173
2020-11-25 20:46:43,090 DEBUG  [main] BasicTypeRegistry: Adding type registration int -> org.hibernate.type.IntegerType@28157173
2020-11-25 20:46:43,090 DEBUG  [main] BasicTypeRegistry: Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@28157173
2020-11-25 20:46:43,090 DEBUG  [main] BasicTypeRegistry: Adding type registration long -> org.hibernate.type.LongType@15d0d6c9
2020-11-25 20:46:43,090 DEBUG  [main] BasicTypeRegistry: Adding type registration long -> org.hibernate.type.LongType@15d0d6c9
2020-11-25 20:46:43,090 DEBUG  [main] BasicTypeRegistry: Adding type registration java.lang.Long -> org.hibernate.type.LongType@15d0d6c9
2020-11-25 20:46:43,090 DEBUG  [main] BasicTypeRegistry: Adding type registration float -> org.hibernate.type.FloatType@61ff6a49
2020-11-25 20:46:43,090 DEBUG  [main] BasicTypeRegistry: Adding type registration float -> org.hibernate.type.FloatType@61ff6a49
2020-11-25 20:46:43,090 DEBUG  [main] BasicTypeRegistry: Adding type registration java.lang.Float -> org.hibernate.type.FloatType@61ff6a49
2020-11-25 20:46:43,091 DEBUG  [main] BasicTypeRegistry: Adding type registration double -> org.hibernate.type.DoubleType@4c6a4ffd
2020-11-25 20:46:43,091 DEBUG  [main] BasicTypeRegistry: Adding type registration double -> org.hibernate.type.DoubleType@4c6a4ffd
2020-11-25 20:46:43,091 DEBUG  [main] BasicTypeRegistry: Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@4c6a4ffd
2020-11-25 20:46:43,091 DEBUG  [main] BasicTypeRegistry: Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@535a518c
2020-11-25 20:46:43,091 DEBUG  [main] BasicTypeRegistry: Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@535a518c
2020-11-25 20:46:43,091 DEBUG  [main] BasicTypeRegistry: Adding type registration big_integer -> org.hibernate.type.BigIntegerType@ee8e7ff
2020-11-25 20:46:43,091 DEBUG  [main] BasicTypeRegistry: Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@ee8e7ff
2020-11-25 20:46:43,092 DEBUG  [main] BasicTypeRegistry: Adding type registration string -> org.hibernate.type.StringType@62b09715
2020-11-25 20:46:43,092 DEBUG  [main] BasicTypeRegistry: Adding type registration java.lang.String -> org.hibernate.type.StringType@62b09715
2020-11-25 20:46:43,092 DEBUG  [main] BasicTypeRegistry: Adding type registration nstring -> org.hibernate.type.StringNVarcharType@1980a3f
2020-11-25 20:46:43,092 DEBUG  [main] BasicTypeRegistry: Adding type registration ncharacter -> org.hibernate.type.CharacterNCharType@789c3057
2020-11-25 20:46:43,092 DEBUG  [main] BasicTypeRegistry: Adding type registration url -> org.hibernate.type.UrlType@679dd234
2020-11-25 20:46:43,093 DEBUG  [main] BasicTypeRegistry: Adding type registration java.net.URL -> org.hibernate.type.UrlType@679dd234
2020-11-25 20:46:43,093 DEBUG  [main] BasicTypeRegistry: Adding type registration Duration -> org.hibernate.type.DurationType@74b86971
2020-11-25 20:46:43,093 DEBUG  [main] BasicTypeRegistry: Adding type registration java.time.Duration -> org.hibernate.type.DurationType@74b86971
2020-11-25 20:46:43,093 DEBUG  [main] BasicTypeRegistry: Adding type registration Instant -> org.hibernate.type.InstantType@7f79edee
2020-11-25 20:46:43,093 DEBUG  [main] BasicTypeRegistry: Adding type registration java.time.Instant -> org.hibernate.type.InstantType@7f79edee
2020-11-25 20:46:43,093 DEBUG  [main] BasicTypeRegistry: Adding type registration LocalDateTime -> org.hibernate.type.LocalDateTimeType@1775c4e7
2020-11-25 20:46:43,093 DEBUG  [main] BasicTypeRegistry: Adding type registration java.time.LocalDateTime -> org.hibernate.type.LocalDateTimeType@1775c4e7
2020-11-25 20:46:43,094 DEBUG  [main] BasicTypeRegistry: Adding type registration LocalDate -> org.hibernate.type.LocalDateType@2921199d
2020-11-25 20:46:43,094 DEBUG  [main] BasicTypeRegistry: Adding type registration java.time.LocalDate -> org.hibernate.type.LocalDateType@2921199d
2020-11-25 20:46:43,094 DEBUG  [main] BasicTypeRegistry: Adding type registration LocalTime -> org.hibernate.type.LocalTimeType@40d52be7
2020-11-25 20:46:43,094 DEBUG  [main] BasicTypeRegistry: Adding type registration java.time.LocalTime -> org.hibernate.type.LocalTimeType@40d52be7
2020-11-25 20:46:43,094 DEBUG  [main] BasicTypeRegistry: Adding type registration OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@4391a2d8
2020-11-25 20:46:43,094 DEBUG  [main] BasicTypeRegistry: Adding type registration java.time.OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@4391a2d8
2020-11-25 20:46:43,094 DEBUG  [main] BasicTypeRegistry: Adding type registration OffsetTime -> org.hibernate.type.OffsetTimeType@286855ea
2020-11-25 20:46:43,095 DEBUG  [main] BasicTypeRegistry: Adding type registration java.time.OffsetTime -> org.hibernate.type.OffsetTimeType@286855ea
2020-11-25 20:46:43,095 DEBUG  [main] BasicTypeRegistry: Adding type registration ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@e3b0369
2020-11-25 20:46:43,095 DEBUG  [main] BasicTypeRegistry: Adding type registration java.time.ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@e3b0369
2020-11-25 20:46:43,096 DEBUG  [main] BasicTypeRegistry: Adding type registration date -> org.hibernate.type.DateType@17207f5b
2020-11-25 20:46:43,096 DEBUG  [main] BasicTypeRegistry: Adding type registration java.sql.Date -> org.hibernate.type.DateType@17207f5b
2020-11-25 20:46:43,096 DEBUG  [main] BasicTypeRegistry: Adding type registration time -> org.hibernate.type.TimeType@5af5d76f
2020-11-25 20:46:43,097 DEBUG  [main] BasicTypeRegistry: Adding type registration java.sql.Time -> org.hibernate.type.TimeType@5af5d76f
2020-11-25 20:46:43,097 DEBUG  [main] BasicTypeRegistry: Adding type registration timestamp -> org.hibernate.type.TimestampType@740b6628
2020-11-25 20:46:43,097 DEBUG  [main] BasicTypeRegistry: Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@740b6628
2020-11-25 20:46:43,097 DEBUG  [main] BasicTypeRegistry: Adding type registration java.util.Date -> org.hibernate.type.TimestampType@740b6628
2020-11-25 20:46:43,097 DEBUG  [main] BasicTypeRegistry: Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@4342c13
2020-11-25 20:46:43,097 DEBUG  [main] BasicTypeRegistry: Adding type registration calendar -> org.hibernate.type.CalendarType@5f0bab7e
2020-11-25 20:46:43,097 DEBUG  [main] BasicTypeRegistry: Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@5f0bab7e
2020-11-25 20:46:43,097 DEBUG  [main] BasicTypeRegistry: Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@5f0bab7e
2020-11-25 20:46:43,098 DEBUG  [main] BasicTypeRegistry: Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@2921a36a
2020-11-25 20:46:43,098 DEBUG  [main] BasicTypeRegistry: Adding type registration locale -> org.hibernate.type.LocaleType@673e76b3
2020-11-25 20:46:43,099 DEBUG  [main] BasicTypeRegistry: Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@673e76b3
2020-11-25 20:46:43,099 DEBUG  [main] BasicTypeRegistry: Adding type registration currency -> org.hibernate.type.CurrencyType@28279a49
2020-11-25 20:46:43,099 DEBUG  [main] BasicTypeRegistry: Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@28279a49
2020-11-25 20:46:43,099 DEBUG  [main] BasicTypeRegistry: Adding type registration timezone -> org.hibernate.type.TimeZoneType@566e142
2020-11-25 20:46:43,099 DEBUG  [main] BasicTypeRegistry: Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@566e142
2020-11-25 20:46:43,099 DEBUG  [main] BasicTypeRegistry: Adding type registration class -> org.hibernate.type.ClassType@6f9e08d4
2020-11-25 20:46:43,099 DEBUG  [main] BasicTypeRegistry: Adding type registration java.lang.Class -> org.hibernate.type.ClassType@6f9e08d4
2020-11-25 20:46:43,100 DEBUG  [main] BasicTypeRegistry: Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@588545ac
2020-11-25 20:46:43,100 DEBUG  [main] BasicTypeRegistry: Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@588545ac
2020-11-25 20:46:43,101 DEBUG  [main] BasicTypeRegistry: Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@f171912
2020-11-25 20:46:43,102 DEBUG  [main] BasicTypeRegistry: Adding type registration binary -> org.hibernate.type.BinaryType@f238e4f
2020-11-25 20:46:43,103 DEBUG  [main] BasicTypeRegistry: Adding type registration byte[] -> org.hibernate.type.BinaryType@f238e4f
2020-11-25 20:46:43,103 DEBUG  [main] BasicTypeRegistry: Adding type registration [B -> org.hibernate.type.BinaryType@f238e4f
2020-11-25 20:46:43,103 DEBUG  [main] BasicTypeRegistry: Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@469a7575
2020-11-25 20:46:43,103 DEBUG  [main] BasicTypeRegistry: Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@469a7575
2020-11-25 20:46:43,103 DEBUG  [main] BasicTypeRegistry: Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@469a7575
2020-11-25 20:46:43,103 DEBUG  [main] BasicTypeRegistry: Adding type registration row_version -> org.hibernate.type.RowVersionType@1c34365c
2020-11-25 20:46:43,103 DEBUG  [main] BasicTypeRegistry: Adding type registration image -> org.hibernate.type.ImageType@637791d
2020-11-25 20:46:43,104 DEBUG  [main] BasicTypeRegistry: Adding type registration characters -> org.hibernate.type.CharArrayType@422ab737
2020-11-25 20:46:43,104 DEBUG  [main] BasicTypeRegistry: Adding type registration char[] -> org.hibernate.type.CharArrayType@422ab737
2020-11-25 20:46:43,104 DEBUG  [main] BasicTypeRegistry: Adding type registration [C -> org.hibernate.type.CharArrayType@422ab737
2020-11-25 20:46:43,104 DEBUG  [main] BasicTypeRegistry: Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@11381415
2020-11-25 20:46:43,104 DEBUG  [main] BasicTypeRegistry: Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@11381415
2020-11-25 20:46:43,104 DEBUG  [main] BasicTypeRegistry: Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@11381415
2020-11-25 20:46:43,104 DEBUG  [main] BasicTypeRegistry: Adding type registration text -> org.hibernate.type.TextType@691124ee
2020-11-25 20:46:43,105 DEBUG  [main] BasicTypeRegistry: Adding type registration ntext -> org.hibernate.type.NTextType@5a0e0886
2020-11-25 20:46:43,105 DEBUG  [main] BasicTypeRegistry: Adding type registration blob -> org.hibernate.type.BlobType@122635ef
2020-11-25 20:46:43,105 DEBUG  [main] BasicTypeRegistry: Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@122635ef
2020-11-25 20:46:43,105 DEBUG  [main] BasicTypeRegistry: Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@1de4bee0
2020-11-25 20:46:43,105 DEBUG  [main] BasicTypeRegistry: Adding type registration clob -> org.hibernate.type.ClobType@78da899f
2020-11-25 20:46:43,105 DEBUG  [main] BasicTypeRegistry: Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@78da899f
2020-11-25 20:46:43,105 DEBUG  [main] BasicTypeRegistry: Adding type registration nclob -> org.hibernate.type.NClobType@4bb147ec
2020-11-25 20:46:43,105 DEBUG  [main] BasicTypeRegistry: Adding type registration java.sql.NClob -> org.hibernate.type.NClobType@4bb147ec
2020-11-25 20:46:43,106 DEBUG  [main] BasicTypeRegistry: Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@59a2388e
2020-11-25 20:46:43,106 DEBUG  [main] BasicTypeRegistry: Adding type registration materialized_nclob -> org.hibernate.type.MaterializedNClobType@2db6d68d
2020-11-25 20:46:43,106 DEBUG  [main] BasicTypeRegistry: Adding type registration serializable -> org.hibernate.type.SerializableType@4aeb0e2b
2020-11-25 20:46:43,106 DEBUG  [main] BasicTypeRegistry: Adding type registration object -> org.hibernate.type.ObjectType@20801cbb
2020-11-25 20:46:43,106 DEBUG  [main] BasicTypeRegistry: Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@20801cbb
2020-11-25 20:46:43,106 DEBUG  [main] BasicTypeRegistry: Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@3ce2c5f6
2020-11-25 20:46:43,106 DEBUG  [main] BasicTypeRegistry: Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@20a3321a
2020-11-25 20:46:43,106 DEBUG  [main] BasicTypeRegistry: Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@744673f3
2020-11-25 20:46:43,107 DEBUG  [main] BasicTypeRegistry: Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@7f5a25e2
2020-11-25 20:46:43,107 DEBUG  [main] BasicTypeRegistry: Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@553d828a
2020-11-25 20:46:43,107 DEBUG  [main] BasicTypeRegistry: Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@6cb759d5
2020-11-25 20:46:43,107 DEBUG  [main] BasicTypeRegistry: Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@2ba9765b
2020-11-25 20:46:43,107 DEBUG  [main] BasicTypeRegistry: Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@5f233f9
2020-11-25 20:46:43,123 DEBUG  [main] TypeConfiguration$Scope: Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@1c41931a] to MetadataBuildingContext [org.hibernate.boot.internal.MetadataBuildingContextRootImpl@62cb977a]
2020-11-25 20:46:43,137 DEBUG  [main] EnumType: Using NAMED-based conversion for Enum com.sf.back.entities.Kind
2020-11-25 20:46:43,139 DEBUG  [main] EnumType: Using NAMED-based conversion for Enum com.sf.back.entities.Kind
2020-11-25 20:46:43,172 DEBUG  [main] TypeConfiguration$Scope: Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@1c41931a] to SessionFactoryImpl [org.hibernate.internal.SessionFactoryImpl@504b4a97]
2020-11-25 20:46:43,174 DEBUG  [main] EnumType: Using NAMED-based conversion for Enum com.sf.back.entities.Kind
2020-11-25 20:46:43,174 DEBUG  [main] EnumType: Using NAMED-based conversion for Enum com.sf.back.entities.Kind
2020-11-25 20:46:43,176 DEBUG  [main] EnumType: Using NAMED-based conversion for Enum com.sf.back.entities.Kind
2020-11-25 20:46:43,176 DEBUG  [main] EnumType: Using NAMED-based conversion for Enum com.sf.back.entities.Kind
2020-11-25 20:46:43,186 DEBUG  [main] EnumType: Using NAMED-based conversion for Enum com.sf.back.entities.Kind
2020-11-25 20:46:43,187 DEBUG  [main] EnumType: Using NAMED-based conversion for Enum com.sf.back.entities.Kind
2020-11-25 20:46:43,196 DEBUG  [main] EnumType: Using NAMED-based conversion for Enum com.sf.back.entities.Kind
2020-11-25 20:46:43,205 TRACE  [main] TypeConfiguration$Scope: Handling #sessionFactoryCreated from [org.hibernate.internal.SessionFactoryImpl@504b4a97] for TypeConfiguration
2020-11-25 20:46:43,404 WARN   [main] JpaBaseConfiguration$JpaWebConfiguration: spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2020-11-25 20:46:43,625 TRACE  [main] BasicBinder: binding parameter [1] as [BLOB] - [[70, 105, 110, 100, 32, 97, 108, 108, 32, 114, 111, 111, 116, 115, 32, 111, 102, 32, 103, 105, 118, 101, 110, 32, 112, 111, 108, 121, 110, 111, 109, 105, 97, 108]]
2020-11-25 20:46:43,626 TRACE  [main] BasicBinder: binding parameter [2] as [BOOLEAN] - [false]
2020-11-25 20:46:43,626 TRACE  [main] BasicBinder: binding parameter [3] as [VARCHAR] - [POLYNOMIAL]
2020-11-25 20:46:43,626 TRACE  [main] BasicBinder: binding parameter [4] as [INTEGER] - [1]
2020-11-25 20:46:43,626 TRACE  [main] BasicBinder: binding parameter [5] as [BIGINT] - [null]
2020-11-25 20:46:43,626 TRACE  [main] BasicBinder: binding parameter [6] as [INTEGER] - [6]
2020-11-25 20:46:43,632 TRACE  [main] BasicBinder: binding parameter [1] as [BLOB] - [null]
2020-11-25 20:46:43,633 TRACE  [main] BasicBinder: binding parameter [2] as [DOUBLE] - [1.0]
2020-11-25 20:46:43,633 TRACE  [main] BasicBinder: binding parameter [3] as [INTEGER] - [0]
2020-11-25 20:46:43,634 TRACE  [main] BasicBinder: binding parameter [4] as [BOOLEAN] - [true]
2020-11-25 20:46:43,634 TRACE  [main] BasicBinder: binding parameter [5] as [INTEGER] - [0]
2020-11-25 20:46:43,636 TRACE  [main] BasicBinder: binding parameter [6] as [BIGINT] - [1]
2020-11-25 20:46:43,640 TRACE  [main] BasicBinder: binding parameter [1] as [BLOB] - [null]
2020-11-25 20:46:43,640 TRACE  [main] BasicBinder: binding parameter [2] as [DOUBLE] - [2.0]
2020-11-25 20:46:43,641 TRACE  [main] BasicBinder: binding parameter [3] as [INTEGER] - [0]
2020-11-25 20:46:43,642 TRACE  [main] BasicBinder: binding parameter [4] as [BOOLEAN] - [true]
2020-11-25 20:46:43,642 TRACE  [main] BasicBinder: binding parameter [5] as [INTEGER] - [1]
2020-11-25 20:46:43,647 TRACE  [main] BasicBinder: binding parameter [6] as [BIGINT] - [1]
2020-11-25 20:46:43,648 TRACE  [main] BasicBinder: binding parameter [1] as [BLOB] - [null]
2020-11-25 20:46:43,649 TRACE  [main] BasicBinder: binding parameter [2] as [DOUBLE] - [1.0]
2020-11-25 20:46:43,649 TRACE  [main] BasicBinder: binding parameter [3] as [INTEGER] - [0]
2020-11-25 20:46:43,649 TRACE  [main] BasicBinder: binding parameter [4] as [BOOLEAN] - [true]
2020-11-25 20:46:43,649 TRACE  [main] BasicBinder: binding parameter [5] as [INTEGER] - [2]
2020-11-25 20:46:43,649 TRACE  [main] BasicBinder: binding parameter [6] as [BIGINT] - [1]
2020-11-25 20:46:43,651 TRACE  [main] BasicBinder: binding parameter [1] as [BLOB] - [null]
2020-11-25 20:46:43,651 TRACE  [main] BasicBinder: binding parameter [2] as [DOUBLE] - [1.0]
2020-11-25 20:46:43,652 TRACE  [main] BasicBinder: binding parameter [3] as [INTEGER] - [0]
2020-11-25 20:46:43,652 TRACE  [main] BasicBinder: binding parameter [4] as [BOOLEAN] - [false]
2020-11-25 20:46:43,653 TRACE  [main] BasicBinder: binding parameter [5] as [INTEGER] - [0]
2020-11-25 20:46:43,653 TRACE  [main] BasicBinder: binding parameter [6] as [BIGINT] - [1]
2020-11-25 20:46:43,654 TRACE  [main] BasicBinder: binding parameter [1] as [BLOB] - [null]
2020-11-25 20:46:43,655 TRACE  [main] BasicBinder: binding parameter [2] as [DOUBLE] - [1.0]
2020-11-25 20:46:43,655 TRACE  [main] BasicBinder: binding parameter [3] as [INTEGER] - [0]
2020-11-25 20:46:43,655 TRACE  [main] BasicBinder: binding parameter [4] as [BOOLEAN] - [false]
2020-11-25 20:46:43,656 TRACE  [main] BasicBinder: binding parameter [5] as [INTEGER] - [1]
2020-11-25 20:46:43,656 TRACE  [main] BasicBinder: binding parameter [6] as [BIGINT] - [1]
2020-11-25 20:46:43,735 WARN   [SpringContextShutdownHook] SqlExceptionHelper: SQL Error: 90121, SQLState: 90121
2020-11-25 20:46:43,753 ERROR  [SpringContextShutdownHook] SqlExceptionHelper: Database is already closed (to disable automatic closing at VM shutdown, add ";DB_CLOSE_ON_EXIT=FALSE" to the db URL) [90121-200]
2020-11-25 20:46:43,755 WARN   [SpringContextShutdownHook] SqlExceptionHelper: SQL Error: 90121, SQLState: 90121
2020-11-25 20:46:43,756 ERROR  [SpringContextShutdownHook] SqlExceptionHelper: Database is already closed (to disable automatic closing at VM shutdown, add ";DB_CLOSE_ON_EXIT=FALSE" to the db URL) [90121-200]
2020-11-25 20:46:43,756 WARN   [SpringContextShutdownHook] DisposableBeanAdapter: Invocation of destroy method failed on bean with name 'entityManagerFactory': org.hibernate.exception.JDBCConnectionException: Unable to release JDBC Connection used for DDL execution
2020-11-25 20:46:43,923 TRACE  [SpringContextShutdownHook] TypeConfiguration$Scope: Handling #sessionFactoryClosed from [org.hibernate.internal.SessionFactoryImpl@5516ee5] for TypeConfiguration
2020-11-25 20:46:43,924 DEBUG  [SpringContextShutdownHook] TypeConfiguration$Scope: Un-scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration$Scope@5a443780] from SessionFactory [org.hibernate.internal.SessionFactoryImpl@5516ee5]
2020-11-25 20:46:43,924 TRACE  [SpringContextShutdownHook] TypeConfiguration$Scope: Handling #sessionFactoryClosed from [org.hibernate.internal.SessionFactoryImpl@781c2497] for TypeConfiguration
2020-11-25 20:46:43,924 DEBUG  [SpringContextShutdownHook] TypeConfiguration$Scope: Un-scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration$Scope@522bc569] from SessionFactory [org.hibernate.internal.SessionFactoryImpl@781c2497]
2020-11-25 20:48:16,128 WARN   [main] dev-updater: Use the './' prefix for files in JAR files: 'flow-component-renderer.js', please update your component.
2020-11-25 20:48:35,285 WARN   [main] ExceptionHandlerLoggedImpl: GenerationTarget encountered exception accepting command : Error executing DDL "alter table matrix drop foreign key FK4v7esavmq6kp58f4bnwaoc6sl" via JDBC Statement
org.hibernate.tool.schema.spi.CommandAcceptanceException: Error executing DDL "alter table matrix drop foreign key FK4v7esavmq6kp58f4bnwaoc6sl" via JDBC Statement
	at org.hibernate.tool.schema.internal.exec.GenerationTargetToDatabase.accept(GenerationTargetToDatabase.java:67)
	at org.hibernate.tool.schema.internal.SchemaDropperImpl.applySqlString(SchemaDropperImpl.java:375)
	at org.hibernate.tool.schema.internal.SchemaDropperImpl.applySqlStrings(SchemaDropperImpl.java:359)
	at org.hibernate.tool.schema.internal.SchemaDropperImpl.applyConstraintDropping(SchemaDropperImpl.java:331)
	at org.hibernate.tool.schema.internal.SchemaDropperImpl.dropFromMetadata(SchemaDropperImpl.java:230)
	at org.hibernate.tool.schema.internal.SchemaDropperImpl.performDrop(SchemaDropperImpl.java:154)
	at org.hibernate.tool.schema.internal.SchemaDropperImpl.doDrop(SchemaDropperImpl.java:126)
	at org.hibernate.tool.schema.internal.SchemaDropperImpl.doDrop(SchemaDropperImpl.java:112)
	at org.hibernate.tool.schema.spi.SchemaManagementToolCoordinator.performDatabaseAction(SchemaManagementToolCoordinator.java:145)
	at org.hibernate.tool.schema.spi.SchemaManagementToolCoordinator.process(SchemaManagementToolCoordinator.java:73)
	at org.hibernate.internal.SessionFactoryImpl.<init>(SessionFactoryImpl.java:320)
	at org.hibernate.boot.internal.SessionFactoryBuilderImpl.build(SessionFactoryBuilderImpl.java:462)
	at org.hibernate.jpa.boot.internal.EntityManagerFactoryBuilderImpl.build(EntityManagerFactoryBuilderImpl.java:1249)
	at org.springframework.orm.jpa.vendor.SpringHibernateJpaPersistenceProvider.createContainerEntityManagerFactory(SpringHibernateJpaPersistenceProvider.java:58)
	at org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean.createNativeEntityManagerFactory(LocalContainerEntityManagerFactoryBean.java:365)
	at org.springframework.orm.jpa.AbstractEntityManagerFactoryBean.buildNativeEntityManagerFactory(AbstractEntityManagerFactoryBean.java:391)
	at org.springframework.orm.jpa.AbstractEntityManagerFactoryBean.afterPropertiesSet(AbstractEntityManagerFactoryBean.java:378)
	at org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean.afterPropertiesSet(LocalContainerEntityManagerFactoryBean.java:341)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1862)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1799)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:595)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:517)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:323)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:222)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:321)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:202)
	at org.springframework.context.support.AbstractApplicationContext.getBean(AbstractApplicationContext.java:1108)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:868)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:550)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.refresh(ServletWebServerApplicationContext.java:141)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:747)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:397)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:315)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1226)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1215)
	at com.sf.VaadinMathSolverApplication.main(VaadinMathSolverApplication.java:23)
Caused by: java.sql.SQLSyntaxErrorException: Can't DROP 'FK4v7esavmq6kp58f4bnwaoc6sl'; check that column/key exists
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:120)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:97)
	at com.mysql.cj.jdbc.exceptions.SQLExceptionsMapping.translateException(SQLExceptionsMapping.java:122)
	at com.mysql.cj.jdbc.StatementImpl.executeInternal(StatementImpl.java:764)
	at com.mysql.cj.jdbc.StatementImpl.execute(StatementImpl.java:648)
	at com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:95)
	at com.zaxxer.hikari.pool.HikariProxyStatement.execute(HikariProxyStatement.java)
	at org.hibernate.tool.schema.internal.exec.GenerationTargetToDatabase.accept(GenerationTargetToDatabase.java:54)
	... 35 common frames omitted
2020-11-25 20:48:35,289 WARN   [main] ExceptionHandlerLoggedImpl: GenerationTarget encountered exception accepting command : Error executing DDL "alter table problem drop foreign key FKlpoejp6qrfwktetrrt2fuq87f" via JDBC Statement
org.hibernate.tool.schema.spi.CommandAcceptanceException: Error executing DDL "alter table problem drop foreign key FKlpoejp6qrfwktetrrt2fuq87f" via JDBC Statement
	at org.hibernate.tool.schema.internal.exec.GenerationTargetToDatabase.accept(GenerationTargetToDatabase.java:67)
	at org.hibernate.tool.schema.internal.SchemaDropperImpl.applySqlString(SchemaDropperImpl.java:375)
	at org.hibernate.tool.schema.internal.SchemaDropperImpl.applySqlStrings(SchemaDropperImpl.java:359)
	at org.hibernate.tool.schema.internal.SchemaDropperImpl.applyConstraintDropping(SchemaDropperImpl.java:331)
	at org.hibernate.tool.schema.internal.SchemaDropperImpl.dropFromMetadata(SchemaDropperImpl.java:230)
	at org.hibernate.tool.schema.internal.SchemaDropperImpl.performDrop(SchemaDropperImpl.java:154)
	at org.hibernate.tool.schema.internal.SchemaDropperImpl.doDrop(SchemaDropperImpl.java:126)
	at org.hibernate.tool.schema.internal.SchemaDropperImpl.doDrop(SchemaDropperImpl.java:112)
	at org.hibernate.tool.schema.spi.SchemaManagementToolCoordinator.performDatabaseAction(SchemaManagementToolCoordinator.java:145)
	at org.hibernate.tool.schema.spi.SchemaManagementToolCoordinator.process(SchemaManagementToolCoordinator.java:73)
	at org.hibernate.internal.SessionFactoryImpl.<init>(SessionFactoryImpl.java:320)
	at org.hibernate.boot.internal.SessionFactoryBuilderImpl.build(SessionFactoryBuilderImpl.java:462)
	at org.hibernate.jpa.boot.internal.EntityManagerFactoryBuilderImpl.build(EntityManagerFactoryBuilderImpl.java:1249)
	at org.springframework.orm.jpa.vendor.SpringHibernateJpaPersistenceProvider.createContainerEntityManagerFactory(SpringHibernateJpaPersistenceProvider.java:58)
	at org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean.createNativeEntityManagerFactory(LocalContainerEntityManagerFactoryBean.java:365)
	at org.springframework.orm.jpa.AbstractEntityManagerFactoryBean.buildNativeEntityManagerFactory(AbstractEntityManagerFactoryBean.java:391)
	at org.springframework.orm.jpa.AbstractEntityManagerFactoryBean.afterPropertiesSet(AbstractEntityManagerFactoryBean.java:378)
	at org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean.afterPropertiesSet(LocalContainerEntityManagerFactoryBean.java:341)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1862)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1799)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:595)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:517)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:323)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:222)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:321)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:202)
	at org.springframework.context.support.AbstractApplicationContext.getBean(AbstractApplicationContext.java:1108)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:868)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:550)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.refresh(ServletWebServerApplicationContext.java:141)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:747)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:397)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:315)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1226)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1215)
	at com.sf.VaadinMathSolverApplication.main(VaadinMathSolverApplication.java:23)
Caused by: java.sql.SQLSyntaxErrorException: Can't DROP 'FKlpoejp6qrfwktetrrt2fuq87f'; check that column/key exists
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:120)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:97)
	at com.mysql.cj.jdbc.exceptions.SQLExceptionsMapping.translateException(SQLExceptionsMapping.java:122)
	at com.mysql.cj.jdbc.StatementImpl.executeInternal(StatementImpl.java:764)
	at com.mysql.cj.jdbc.StatementImpl.execute(StatementImpl.java:648)
	at com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:95)
	at com.zaxxer.hikari.pool.HikariProxyStatement.execute(HikariProxyStatement.java)
	at org.hibernate.tool.schema.internal.exec.GenerationTargetToDatabase.accept(GenerationTargetToDatabase.java:54)
	... 35 common frames omitted
2020-11-25 20:48:36,676 WARN   [main] GlobalSettings: Dozer configuration file not found: dozer.properties.  Using defaults for all Dozer global properties.
2020-11-25 20:48:36,959 WARN   [main] JpaBaseConfiguration$JpaWebConfiguration: spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2020-11-25 20:49:25,479 WARN   [http-nio-8084-exec-1] DefaultDeploymentConfiguration: 
====================================================================
Vaadin is running in DEBUG MODE.
Add productionMode=true to web.xml to disable debug features.
====================================================================
2020-11-25 20:51:18,397 DEBUG  [main] BasicTypeRegistry: Adding type registration boolean -> org.hibernate.type.BooleanType@59127611
2020-11-25 20:51:18,434 DEBUG  [main] BasicTypeRegistry: Adding type registration boolean -> org.hibernate.type.BooleanType@59127611
2020-11-25 20:51:18,434 DEBUG  [main] BasicTypeRegistry: Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@59127611
2020-11-25 20:51:18,435 DEBUG  [main] BasicTypeRegistry: Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@18db3b3c
2020-11-25 20:51:18,437 DEBUG  [main] BasicTypeRegistry: Adding type registration true_false -> org.hibernate.type.TrueFalseType@5c1c9881
2020-11-25 20:51:18,438 DEBUG  [main] BasicTypeRegistry: Adding type registration yes_no -> org.hibernate.type.YesNoType@5d37aa0f
2020-11-25 20:51:18,440 DEBUG  [main] BasicTypeRegistry: Adding type registration byte -> org.hibernate.type.ByteType@3e4afd10
2020-11-25 20:51:18,440 DEBUG  [main] BasicTypeRegistry: Adding type registration byte -> org.hibernate.type.ByteType@3e4afd10
2020-11-25 20:51:18,440 DEBUG  [main] BasicTypeRegistry: Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@3e4afd10
2020-11-25 20:51:18,442 DEBUG  [main] BasicTypeRegistry: Adding type registration character -> org.hibernate.type.CharacterType@48d44b46
2020-11-25 20:51:18,442 DEBUG  [main] BasicTypeRegistry: Adding type registration char -> org.hibernate.type.CharacterType@48d44b46
2020-11-25 20:51:18,443 DEBUG  [main] BasicTypeRegistry: Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@48d44b46
2020-11-25 20:51:18,445 DEBUG  [main] BasicTypeRegistry: Adding type registration short -> org.hibernate.type.ShortType@dd20ebc
2020-11-25 20:51:18,445 DEBUG  [main] BasicTypeRegistry: Adding type registration short -> org.hibernate.type.ShortType@dd20ebc
2020-11-25 20:51:18,446 DEBUG  [main] BasicTypeRegistry: Adding type registration java.lang.Short -> org.hibernate.type.ShortType@dd20ebc
2020-11-25 20:51:18,447 DEBUG  [main] BasicTypeRegistry: Adding type registration integer -> org.hibernate.type.IntegerType@5f7cd50e
2020-11-25 20:51:18,448 DEBUG  [main] BasicTypeRegistry: Adding type registration int -> org.hibernate.type.IntegerType@5f7cd50e
2020-11-25 20:51:18,448 DEBUG  [main] BasicTypeRegistry: Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@5f7cd50e
2020-11-25 20:51:18,450 DEBUG  [main] BasicTypeRegistry: Adding type registration long -> org.hibernate.type.LongType@359e27d2
2020-11-25 20:51:18,450 DEBUG  [main] BasicTypeRegistry: Adding type registration long -> org.hibernate.type.LongType@359e27d2
2020-11-25 20:51:18,450 DEBUG  [main] BasicTypeRegistry: Adding type registration java.lang.Long -> org.hibernate.type.LongType@359e27d2
2020-11-25 20:51:18,453 DEBUG  [main] BasicTypeRegistry: Adding type registration float -> org.hibernate.type.FloatType@29b8df5
2020-11-25 20:51:18,454 DEBUG  [main] BasicTypeRegistry: Adding type registration float -> org.hibernate.type.FloatType@29b8df5
2020-11-25 20:51:18,454 DEBUG  [main] BasicTypeRegistry: Adding type registration java.lang.Float -> org.hibernate.type.FloatType@29b8df5
2020-11-25 20:51:18,456 DEBUG  [main] BasicTypeRegistry: Adding type registration double -> org.hibernate.type.DoubleType@36cfe107
2020-11-25 20:51:18,456 DEBUG  [main] BasicTypeRegistry: Adding type registration double -> org.hibernate.type.DoubleType@36cfe107
2020-11-25 20:51:18,457 DEBUG  [main] BasicTypeRegistry: Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@36cfe107
2020-11-25 20:51:18,458 DEBUG  [main] BasicTypeRegistry: Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@139089a4
2020-11-25 20:51:18,458 DEBUG  [main] BasicTypeRegistry: Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@139089a4
2020-11-25 20:51:18,460 DEBUG  [main] BasicTypeRegistry: Adding type registration big_integer -> org.hibernate.type.BigIntegerType@9f1ca74
2020-11-25 20:51:18,460 DEBUG  [main] BasicTypeRegistry: Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@9f1ca74
2020-11-25 20:51:18,462 DEBUG  [main] BasicTypeRegistry: Adding type registration string -> org.hibernate.type.StringType@393ae7a0
2020-11-25 20:51:18,462 DEBUG  [main] BasicTypeRegistry: Adding type registration java.lang.String -> org.hibernate.type.StringType@393ae7a0
2020-11-25 20:51:18,464 DEBUG  [main] BasicTypeRegistry: Adding type registration nstring -> org.hibernate.type.StringNVarcharType@7ee12d58
2020-11-25 20:51:18,465 DEBUG  [main] BasicTypeRegistry: Adding type registration ncharacter -> org.hibernate.type.CharacterNCharType@34e990cc
2020-11-25 20:51:18,468 DEBUG  [main] BasicTypeRegistry: Adding type registration url -> org.hibernate.type.UrlType@6de84336
2020-11-25 20:51:18,469 DEBUG  [main] BasicTypeRegistry: Adding type registration java.net.URL -> org.hibernate.type.UrlType@6de84336
2020-11-25 20:51:18,472 DEBUG  [main] BasicTypeRegistry: Adding type registration Duration -> org.hibernate.type.DurationType@69b37f5c
2020-11-25 20:51:18,473 DEBUG  [main] BasicTypeRegistry: Adding type registration java.time.Duration -> org.hibernate.type.DurationType@69b37f5c
2020-11-25 20:51:18,476 DEBUG  [main] BasicTypeRegistry: Adding type registration Instant -> org.hibernate.type.InstantType@580ffea
2020-11-25 20:51:18,476 DEBUG  [main] BasicTypeRegistry: Adding type registration java.time.Instant -> org.hibernate.type.InstantType@580ffea
2020-11-25 20:51:18,477 DEBUG  [main] BasicTypeRegistry: Adding type registration LocalDateTime -> org.hibernate.type.LocalDateTimeType@79d49790
2020-11-25 20:51:18,478 DEBUG  [main] BasicTypeRegistry: Adding type registration java.time.LocalDateTime -> org.hibernate.type.LocalDateTimeType@79d49790
2020-11-25 20:51:18,480 DEBUG  [main] BasicTypeRegistry: Adding type registration LocalDate -> org.hibernate.type.LocalDateType@3e9fb485
2020-11-25 20:51:18,480 DEBUG  [main] BasicTypeRegistry: Adding type registration java.time.LocalDate -> org.hibernate.type.LocalDateType@3e9fb485
2020-11-25 20:51:18,481 DEBUG  [main] BasicTypeRegistry: Adding type registration LocalTime -> org.hibernate.type.LocalTimeType@419f0ea
2020-11-25 20:51:18,482 DEBUG  [main] BasicTypeRegistry: Adding type registration java.time.LocalTime -> org.hibernate.type.LocalTimeType@419f0ea
2020-11-25 20:51:18,483 DEBUG  [main] BasicTypeRegistry: Adding type registration OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@87aec6a
2020-11-25 20:51:18,483 DEBUG  [main] BasicTypeRegistry: Adding type registration java.time.OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@87aec6a
2020-11-25 20:51:18,485 DEBUG  [main] BasicTypeRegistry: Adding type registration OffsetTime -> org.hibernate.type.OffsetTimeType@5529522f
2020-11-25 20:51:18,485 DEBUG  [main] BasicTypeRegistry: Adding type registration java.time.OffsetTime -> org.hibernate.type.OffsetTimeType@5529522f
2020-11-25 20:51:18,487 DEBUG  [main] BasicTypeRegistry: Adding type registration ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@152e7703
2020-11-25 20:51:18,487 DEBUG  [main] BasicTypeRegistry: Adding type registration java.time.ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@152e7703
2020-11-25 20:51:18,488 DEBUG  [main] BasicTypeRegistry: Adding type registration date -> org.hibernate.type.DateType@24fc2c80
2020-11-25 20:51:18,489 DEBUG  [main] BasicTypeRegistry: Adding type registration java.sql.Date -> org.hibernate.type.DateType@24fc2c80
2020-11-25 20:51:18,490 DEBUG  [main] BasicTypeRegistry: Adding type registration time -> org.hibernate.type.TimeType@48b3b1b8
2020-11-25 20:51:18,491 DEBUG  [main] BasicTypeRegistry: Adding type registration java.sql.Time -> org.hibernate.type.TimeType@48b3b1b8
2020-11-25 20:51:18,493 DEBUG  [main] BasicTypeRegistry: Adding type registration timestamp -> org.hibernate.type.TimestampType@686b1e2d
2020-11-25 20:51:18,493 DEBUG  [main] BasicTypeRegistry: Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@686b1e2d
2020-11-25 20:51:18,493 DEBUG  [main] BasicTypeRegistry: Adding type registration java.util.Date -> org.hibernate.type.TimestampType@686b1e2d
2020-11-25 20:51:18,495 DEBUG  [main] BasicTypeRegistry: Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@652b3733
2020-11-25 20:51:18,497 DEBUG  [main] BasicTypeRegistry: Adding type registration calendar -> org.hibernate.type.CalendarType@5be7b749
2020-11-25 20:51:18,498 DEBUG  [main] BasicTypeRegistry: Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@5be7b749
2020-11-25 20:51:18,498 DEBUG  [main] BasicTypeRegistry: Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@5be7b749
2020-11-25 20:51:18,499 DEBUG  [main] BasicTypeRegistry: Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@177ddd24
2020-11-25 20:51:18,501 DEBUG  [main] BasicTypeRegistry: Adding type registration locale -> org.hibernate.type.LocaleType@61ad30f6
2020-11-25 20:51:18,501 DEBUG  [main] BasicTypeRegistry: Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@61ad30f6
2020-11-25 20:51:18,503 DEBUG  [main] BasicTypeRegistry: Adding type registration currency -> org.hibernate.type.CurrencyType@574ebdaf
2020-11-25 20:51:18,504 DEBUG  [main] BasicTypeRegistry: Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@574ebdaf
2020-11-25 20:51:18,506 DEBUG  [main] BasicTypeRegistry: Adding type registration timezone -> org.hibernate.type.TimeZoneType@123ca460
2020-11-25 20:51:18,506 DEBUG  [main] BasicTypeRegistry: Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@123ca460
2020-11-25 20:51:18,507 DEBUG  [main] BasicTypeRegistry: Adding type registration class -> org.hibernate.type.ClassType@3c9f4376
2020-11-25 20:51:18,507 DEBUG  [main] BasicTypeRegistry: Adding type registration java.lang.Class -> org.hibernate.type.ClassType@3c9f4376
2020-11-25 20:51:18,509 DEBUG  [main] BasicTypeRegistry: Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@1958c0d9
2020-11-25 20:51:18,509 DEBUG  [main] BasicTypeRegistry: Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@1958c0d9
2020-11-25 20:51:18,510 DEBUG  [main] BasicTypeRegistry: Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@5fc7255c
2020-11-25 20:51:18,511 DEBUG  [main] BasicTypeRegistry: Adding type registration binary -> org.hibernate.type.BinaryType@79ba0285
2020-11-25 20:51:18,512 DEBUG  [main] BasicTypeRegistry: Adding type registration byte[] -> org.hibernate.type.BinaryType@79ba0285
2020-11-25 20:51:18,512 DEBUG  [main] BasicTypeRegistry: Adding type registration [B -> org.hibernate.type.BinaryType@79ba0285
2020-11-25 20:51:18,513 DEBUG  [main] BasicTypeRegistry: Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@598778cc
2020-11-25 20:51:18,514 DEBUG  [main] BasicTypeRegistry: Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@598778cc
2020-11-25 20:51:18,514 DEBUG  [main] BasicTypeRegistry: Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@598778cc
2020-11-25 20:51:18,515 DEBUG  [main] BasicTypeRegistry: Adding type registration row_version -> org.hibernate.type.RowVersionType@11cadb32
2020-11-25 20:51:18,516 DEBUG  [main] BasicTypeRegistry: Adding type registration image -> org.hibernate.type.ImageType@37986daf
2020-11-25 20:51:18,517 DEBUG  [main] BasicTypeRegistry: Adding type registration characters -> org.hibernate.type.CharArrayType@710afd47
2020-11-25 20:51:18,518 DEBUG  [main] BasicTypeRegistry: Adding type registration char[] -> org.hibernate.type.CharArrayType@710afd47
2020-11-25 20:51:18,518 DEBUG  [main] BasicTypeRegistry: Adding type registration [C -> org.hibernate.type.CharArrayType@710afd47
2020-11-25 20:51:18,520 DEBUG  [main] BasicTypeRegistry: Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@12670e55
2020-11-25 20:51:18,520 DEBUG  [main] BasicTypeRegistry: Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@12670e55
2020-11-25 20:51:18,521 DEBUG  [main] BasicTypeRegistry: Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@12670e55
2020-11-25 20:51:18,522 DEBUG  [main] BasicTypeRegistry: Adding type registration text -> org.hibernate.type.TextType@32ba5c65
2020-11-25 20:51:18,524 DEBUG  [main] BasicTypeRegistry: Adding type registration ntext -> org.hibernate.type.NTextType@10166230
2020-11-25 20:51:18,526 DEBUG  [main] BasicTypeRegistry: Adding type registration blob -> org.hibernate.type.BlobType@13dd7887
2020-11-25 20:51:18,527 DEBUG  [main] BasicTypeRegistry: Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@13dd7887
2020-11-25 20:51:18,529 DEBUG  [main] BasicTypeRegistry: Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@3cbfdf5c
2020-11-25 20:51:18,531 DEBUG  [main] BasicTypeRegistry: Adding type registration clob -> org.hibernate.type.ClobType@58636b50
2020-11-25 20:51:18,531 DEBUG  [main] BasicTypeRegistry: Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@58636b50
2020-11-25 20:51:18,536 DEBUG  [main] BasicTypeRegistry: Adding type registration nclob -> org.hibernate.type.NClobType@1e5aacd9
2020-11-25 20:51:18,536 DEBUG  [main] BasicTypeRegistry: Adding type registration java.sql.NClob -> org.hibernate.type.NClobType@1e5aacd9
2020-11-25 20:51:18,537 DEBUG  [main] BasicTypeRegistry: Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@120411ec
2020-11-25 20:51:18,538 DEBUG  [main] BasicTypeRegistry: Adding type registration materialized_nclob -> org.hibernate.type.MaterializedNClobType@1a34a51e
2020-11-25 20:51:18,539 DEBUG  [main] BasicTypeRegistry: Adding type registration serializable -> org.hibernate.type.SerializableType@6b091a92
2020-11-25 20:51:18,542 DEBUG  [main] BasicTypeRegistry: Adding type registration object -> org.hibernate.type.ObjectType@35329a05
2020-11-25 20:51:18,543 DEBUG  [main] BasicTypeRegistry: Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@35329a05
2020-11-25 20:51:18,543 DEBUG  [main] BasicTypeRegistry: Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@6f1d799
2020-11-25 20:51:18,543 DEBUG  [main] BasicTypeRegistry: Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@ca2cd5e
2020-11-25 20:51:18,544 DEBUG  [main] BasicTypeRegistry: Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@a120b9
2020-11-25 20:51:18,544 DEBUG  [main] BasicTypeRegistry: Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@333e5fb6
2020-11-25 20:51:18,544 DEBUG  [main] BasicTypeRegistry: Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@3b7b0b57
2020-11-25 20:51:18,545 DEBUG  [main] BasicTypeRegistry: Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@21a9f95b
2020-11-25 20:51:18,545 DEBUG  [main] BasicTypeRegistry: Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@2804b13f
2020-11-25 20:51:18,545 DEBUG  [main] BasicTypeRegistry: Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@69069866
2020-11-25 20:51:18,989 DEBUG  [main] TypeConfiguration$Scope: Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@7a34c1f6] to MetadataBuildingContext [org.hibernate.boot.internal.MetadataBuildingContextRootImpl@6e9f8160]
2020-11-25 20:51:19,251 DEBUG  [main] EnumType: Using NAMED-based conversion for Enum com.sf.back.entities.Kind
2020-11-25 20:51:19,342 DEBUG  [main] EnumType: Using NAMED-based conversion for Enum com.sf.back.entities.Kind
2020-11-25 20:51:19,489 DEBUG  [main] TypeConfiguration$Scope: Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@7a34c1f6] to SessionFactoryImpl [org.hibernate.internal.SessionFactoryImpl@609ad016]
2020-11-25 20:51:19,564 DEBUG  [main] EnumType: Using NAMED-based conversion for Enum com.sf.back.entities.Kind
2020-11-25 20:51:19,566 DEBUG  [main] EnumType: Using NAMED-based conversion for Enum com.sf.back.entities.Kind
2020-11-25 20:51:19,709 DEBUG  [main] EnumType: Using NAMED-based conversion for Enum com.sf.back.entities.Kind
2020-11-25 20:51:19,710 DEBUG  [main] EnumType: Using NAMED-based conversion for Enum com.sf.back.entities.Kind
2020-11-25 20:51:19,844 DEBUG  [main] EnumType: Using NAMED-based conversion for Enum com.sf.back.entities.Kind
2020-11-25 20:51:19,845 DEBUG  [main] EnumType: Using NAMED-based conversion for Enum com.sf.back.entities.Kind
2020-11-25 20:51:19,873 DEBUG  [main] EnumType: Using NAMED-based conversion for Enum com.sf.back.entities.Kind
2020-11-25 20:51:19,890 TRACE  [main] TypeConfiguration$Scope: Handling #sessionFactoryCreated from [org.hibernate.internal.SessionFactoryImpl@609ad016] for TypeConfiguration
2020-11-25 20:51:20,412 WARN   [main] GlobalSettings: Dozer configuration file not found: dozer.properties.  Using defaults for all Dozer global properties.
2020-11-25 20:51:21,102 WARN   [main] JpaBaseConfiguration$JpaWebConfiguration: spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2020-11-25 20:51:21,867 WARN   [main] GenericWebApplicationContext: Exception encountered during context initialization - cancelling refresh attempt: org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'groovyMarkupConfigurer' defined in class path resource [org/springframework/boot/autoconfigure/groovy/template/GroovyTemplateAutoConfiguration$GroovyMarkupConfiguration.class]: Invocation of init method failed; nested exception is java.lang.reflect.InaccessibleObjectException: Unable to make jdk.internal.loader.ClassLoaders$AppClassLoader(jdk.internal.loader.ClassLoaders$PlatformClassLoader,jdk.internal.loader.URLClassPath) accessible: module java.base does not "opens jdk.internal.loader" to unnamed module @5fcacc0
2020-11-25 20:51:21,876 TRACE  [main] TypeConfiguration$Scope: Handling #sessionFactoryClosed from [org.hibernate.internal.SessionFactoryImpl@609ad016] for TypeConfiguration
2020-11-25 20:51:21,877 DEBUG  [main] TypeConfiguration$Scope: Un-scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration$Scope@79827e71] from SessionFactory [org.hibernate.internal.SessionFactoryImpl@609ad016]
2020-11-25 20:51:21,897 ERROR  [main] SpringApplication: Application run failed
org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'groovyMarkupConfigurer' defined in class path resource [org/springframework/boot/autoconfigure/groovy/template/GroovyTemplateAutoConfiguration$GroovyMarkupConfiguration.class]: Invocation of init method failed; nested exception is java.lang.reflect.InaccessibleObjectException: Unable to make jdk.internal.loader.ClassLoaders$AppClassLoader(jdk.internal.loader.ClassLoaders$PlatformClassLoader,jdk.internal.loader.URLClassPath) accessible: module java.base does not "opens jdk.internal.loader" to unnamed module @5fcacc0
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1803)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:595)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:517)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:323)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:222)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:321)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:202)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(DefaultListableBeanFactory.java:879)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:878)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:550)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:747)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:397)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:315)
	at org.springframework.boot.test.context.SpringBootContextLoader.loadContext(SpringBootContextLoader.java:125)
	at org.springframework.test.context.cache.DefaultCacheAwareContextLoaderDelegate.loadContextInternal(DefaultCacheAwareContextLoaderDelegate.java:99)
	at org.springframework.test.context.cache.DefaultCacheAwareContextLoaderDelegate.loadContext(DefaultCacheAwareContextLoaderDelegate.java:124)
	at org.springframework.test.context.support.DefaultTestContext.getApplicationContext(DefaultTestContext.java:123)
	at org.springframework.test.context.web.ServletTestExecutionListener.setUpRequestContextIfNecessary(ServletTestExecutionListener.java:190)
	at org.springframework.test.context.web.ServletTestExecutionListener.prepareTestInstance(ServletTestExecutionListener.java:132)
	at org.springframework.test.context.TestContextManager.prepareTestInstance(TestContextManager.java:244)
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner.createTest(SpringJUnit4ClassRunner.java:227)
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner$1.runReflectiveCall(SpringJUnit4ClassRunner.java:289)
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner.methodBlock(SpringJUnit4ClassRunner.java:291)
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner.runChild(SpringJUnit4ClassRunner.java:246)
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner.runChild(SpringJUnit4ClassRunner.java:97)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:290)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:71)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:58)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268)
	at org.junit.internal.runners.statements.RunBefores.evaluate(RunBefores.java:26)
	at org.springframework.test.context.junit4.statements.RunBeforeTestClassCallbacks.evaluate(RunBeforeTestClassCallbacks.java:61)
	at org.junit.internal.runners.statements.RunAfters.evaluate(RunAfters.java:27)
	at org.springframework.test.context.junit4.statements.RunAfterTestClassCallbacks.evaluate(RunAfterTestClassCallbacks.java:70)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:363)
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner.run(SpringJUnit4ClassRunner.java:190)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:137)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:115)
	at org.junit.vintage.engine.execution.RunnerExecutor.execute(RunnerExecutor.java:40)
	at java.base/java.util.stream.ForEachOps$ForEachOp$OfRef.accept(ForEachOps.java:183)
	at java.base/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:195)
	at java.base/java.util.Iterator.forEachRemaining(Iterator.java:133)
	at java.base/java.util.Spliterators$IteratorSpliterator.forEachRemaining(Spliterators.java:1801)
	at java.base/java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:484)
	at java.base/java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:474)
	at java.base/java.util.stream.ForEachOps$ForEachOp.evaluateSequential(ForEachOps.java:150)
	at java.base/java.util.stream.ForEachOps$ForEachOp$OfRef.evaluateSequential(ForEachOps.java:173)
	at java.base/java.util.stream.AbstractPipeline.evaluate(AbstractPipeline.java:234)
	at java.base/java.util.stream.ReferencePipeline.forEach(ReferencePipeline.java:497)
	at org.junit.vintage.engine.VintageTestEngine.executeAllChildren(VintageTestEngine.java:80)
	at org.junit.vintage.engine.VintageTestEngine.execute(VintageTestEngine.java:71)
	at org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:220)
	at org.junit.platform.launcher.core.DefaultLauncher.lambda$execute$6(DefaultLauncher.java:188)
	at org.junit.platform.launcher.core.DefaultLauncher.withInterceptedStreams(DefaultLauncher.java:202)
	at org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:181)
	at org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:128)
	at org.apache.maven.surefire.junitplatform.JUnitPlatformProvider.invokeAllTests(JUnitPlatformProvider.java:150)
	at org.apache.maven.surefire.junitplatform.JUnitPlatformProvider.invoke(JUnitPlatformProvider.java:124)
	at org.apache.maven.surefire.booter.ForkedBooter.invokeProviderInSameClassLoader(ForkedBooter.java:384)
	at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:345)
	at org.apache.maven.surefire.booter.ForkedBooter.execute(ForkedBooter.java:126)
	at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:418)
Caused by: java.lang.reflect.InaccessibleObjectException: Unable to make jdk.internal.loader.ClassLoaders$AppClassLoader(jdk.internal.loader.ClassLoaders$PlatformClassLoader,jdk.internal.loader.URLClassPath) accessible: module java.base does not "opens jdk.internal.loader" to unnamed module @5fcacc0
	at java.base/java.lang.reflect.AccessibleObject.checkCanSetAccessible(AccessibleObject.java:361)
	at java.base/java.lang.reflect.AccessibleObject.checkCanSetAccessible(AccessibleObject.java:301)
	at java.base/java.lang.reflect.Constructor.checkCanSetAccessible(Constructor.java:189)
	at java.base/java.lang.reflect.Constructor.setAccessible(Constructor.java:182)
	at org.codehaus.groovy.reflection.CachedConstructor$1.run(CachedConstructor.java:44)
	at java.base/java.security.AccessController.doPrivileged(AccessController.java:312)
	at org.codehaus.groovy.reflection.CachedConstructor.<init>(CachedConstructor.java:42)
	at org.codehaus.groovy.reflection.CachedClass$2.initValue(CachedClass.java:79)
	at org.codehaus.groovy.reflection.CachedClass$2.initValue(CachedClass.java:69)
	at org.codehaus.groovy.util.LazyReference.getLocked(LazyReference.java:49)
	at org.codehaus.groovy.util.LazyReference.get(LazyReference.java:36)
	at org.codehaus.groovy.reflection.CachedClass.getConstructors(CachedClass.java:268)
	at groovy.lang.MetaClassImpl.<init>(MetaClassImpl.java:218)
	at groovy.lang.MetaClassImpl.<init>(MetaClassImpl.java:228)
	at groovy.lang.MetaClassRegistry$MetaClassCreationHandle.createNormalMetaClass(MetaClassRegistry.java:171)
	at groovy.lang.MetaClassRegistry$MetaClassCreationHandle.createWithCustomLookup(MetaClassRegistry.java:161)
	at groovy.lang.MetaClassRegistry$MetaClassCreationHandle.create(MetaClassRegistry.java:144)
	at org.codehaus.groovy.reflection.ClassInfo.getMetaClassUnderLock(ClassInfo.java:253)
	at org.codehaus.groovy.reflection.ClassInfo.getMetaClass(ClassInfo.java:285)
	at org.codehaus.groovy.reflection.ClassInfo.getMetaClass(ClassInfo.java:295)
	at org.codehaus.groovy.runtime.metaclass.MetaClassRegistryImpl.getMetaClass(MetaClassRegistryImpl.java:261)
	at org.codehaus.groovy.runtime.InvokerHelper.getMetaClass(InvokerHelper.java:873)
	at org.codehaus.groovy.runtime.InvokerHelper.invokePojoMethod(InvokerHelper.java:906)
	at org.codehaus.groovy.runtime.InvokerHelper.invokeMethod(InvokerHelper.java:898)
	at org.codehaus.groovy.runtime.typehandling.DefaultTypeTransformation.castToBoolean(DefaultTypeTransformation.java:185)
	at org.codehaus.groovy.runtime.typehandling.DefaultTypeTransformation.booleanUnbox(DefaultTypeTransformation.java:74)
	at org.codehaus.groovy.control.customizers.ASTTransformationCustomizer.findASTTranformationClass(ASTTransformationCustomizer.groovy:209)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:64)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:564)
	at org.codehaus.groovy.reflection.CachedMethod.invoke(CachedMethod.java:93)
	at org.codehaus.groovy.runtime.callsite.StaticMetaMethodSite$StaticMetaMethodSiteNoUnwrapNoCoerce.invoke(StaticMetaMethodSite.java:151)
	at org.codehaus.groovy.runtime.callsite.StaticMetaMethodSite.callStatic(StaticMetaMethodSite.java:102)
	at org.codehaus.groovy.runtime.callsite.CallSiteArray.defaultCallStatic(CallSiteArray.java:56)
	at org.codehaus.groovy.runtime.callsite.AbstractCallSite.callStatic(AbstractCallSite.java:194)
	at org.codehaus.groovy.runtime.callsite.AbstractCallSite.callStatic(AbstractCallSite.java:214)
	at org.codehaus.groovy.control.customizers.ASTTransformationCustomizer.findPhase(ASTTransformationCustomizer.groovy:226)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:64)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:564)
	at org.codehaus.groovy.reflection.CachedMethod.invoke(CachedMethod.java:93)
	at org.codehaus.groovy.runtime.callsite.StaticMetaMethodSite$StaticMetaMethodSiteNoUnwrapNoCoerce.invoke(StaticMetaMethodSite.java:151)
	at org.codehaus.groovy.runtime.callsite.StaticMetaMethodSite.callStatic(StaticMetaMethodSite.java:102)
	at org.codehaus.groovy.runtime.callsite.CallSiteArray.defaultCallStatic(CallSiteArray.java:56)
	at org.codehaus.groovy.runtime.callsite.AbstractCallSite.callStatic(AbstractCallSite.java:194)
	at org.codehaus.groovy.runtime.callsite.AbstractCallSite.callStatic(AbstractCallSite.java:214)
	at org.codehaus.groovy.control.customizers.ASTTransformationCustomizer.<init>(ASTTransformationCustomizer.groovy:180)
	at org.codehaus.groovy.control.customizers.ASTTransformationCustomizer.<init>(ASTTransformationCustomizer.groovy:188)
	at groovy.text.markup.MarkupTemplateEngine.<init>(MarkupTemplateEngine.java:94)
	at org.springframework.web.servlet.view.groovy.GroovyMarkupConfigurer.createTemplateEngine(GroovyMarkupConfigurer.java:160)
	at org.springframework.web.servlet.view.groovy.GroovyMarkupConfigurer.afterPropertiesSet(GroovyMarkupConfigurer.java:153)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1862)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1799)
	... 62 common frames omitted
2020-11-25 20:51:21,904 ERROR  [main] TestContextManager: Caught exception while allowing TestExecutionListener [org.springframework.test.context.web.ServletTestExecutionListener@46c093b4] to prepare test instance [com.sf.math.algebra.solvers.PolynomialSolverIntervalTest@4ff00844]
java.lang.IllegalStateException: Failed to load ApplicationContext
	at org.springframework.test.context.cache.DefaultCacheAwareContextLoaderDelegate.loadContext(DefaultCacheAwareContextLoaderDelegate.java:132)
	at org.springframework.test.context.support.DefaultTestContext.getApplicationContext(DefaultTestContext.java:123)
	at org.springframework.test.context.web.ServletTestExecutionListener.setUpRequestContextIfNecessary(ServletTestExecutionListener.java:190)
	at org.springframework.test.context.web.ServletTestExecutionListener.prepareTestInstance(ServletTestExecutionListener.java:132)
	at org.springframework.test.context.TestContextManager.prepareTestInstance(TestContextManager.java:244)
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner.createTest(SpringJUnit4ClassRunner.java:227)
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner$1.runReflectiveCall(SpringJUnit4ClassRunner.java:289)
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner.methodBlock(SpringJUnit4ClassRunner.java:291)
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner.runChild(SpringJUnit4ClassRunner.java:246)
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner.runChild(SpringJUnit4ClassRunner.java:97)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:290)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:71)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:58)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268)
	at org.junit.internal.runners.statements.RunBefores.evaluate(RunBefores.java:26)
	at org.springframework.test.context.junit4.statements.RunBeforeTestClassCallbacks.evaluate(RunBeforeTestClassCallbacks.java:61)
	at org.junit.internal.runners.statements.RunAfters.evaluate(RunAfters.java:27)
	at org.springframework.test.context.junit4.statements.RunAfterTestClassCallbacks.evaluate(RunAfterTestClassCallbacks.java:70)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:363)
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner.run(SpringJUnit4ClassRunner.java:190)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:137)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:115)
	at org.junit.vintage.engine.execution.RunnerExecutor.execute(RunnerExecutor.java:40)
	at java.base/java.util.stream.ForEachOps$ForEachOp$OfRef.accept(ForEachOps.java:183)
	at java.base/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:195)
	at java.base/java.util.Iterator.forEachRemaining(Iterator.java:133)
	at java.base/java.util.Spliterators$IteratorSpliterator.forEachRemaining(Spliterators.java:1801)
	at java.base/java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:484)
	at java.base/java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:474)
	at java.base/java.util.stream.ForEachOps$ForEachOp.evaluateSequential(ForEachOps.java:150)
	at java.base/java.util.stream.ForEachOps$ForEachOp$OfRef.evaluateSequential(ForEachOps.java:173)
	at java.base/java.util.stream.AbstractPipeline.evaluate(AbstractPipeline.java:234)
	at java.base/java.util.stream.ReferencePipeline.forEach(ReferencePipeline.java:497)
	at org.junit.vintage.engine.VintageTestEngine.executeAllChildren(VintageTestEngine.java:80)
	at org.junit.vintage.engine.VintageTestEngine.execute(VintageTestEngine.java:71)
	at org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:220)
	at org.junit.platform.launcher.core.DefaultLauncher.lambda$execute$6(DefaultLauncher.java:188)
	at org.junit.platform.launcher.core.DefaultLauncher.withInterceptedStreams(DefaultLauncher.java:202)
	at org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:181)
	at org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:128)
	at org.apache.maven.surefire.junitplatform.JUnitPlatformProvider.invokeAllTests(JUnitPlatformProvider.java:150)
	at org.apache.maven.surefire.junitplatform.JUnitPlatformProvider.invoke(JUnitPlatformProvider.java:124)
	at org.apache.maven.surefire.booter.ForkedBooter.invokeProviderInSameClassLoader(ForkedBooter.java:384)
	at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:345)
	at org.apache.maven.surefire.booter.ForkedBooter.execute(ForkedBooter.java:126)
	at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:418)
Caused by: org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'groovyMarkupConfigurer' defined in class path resource [org/springframework/boot/autoconfigure/groovy/template/GroovyTemplateAutoConfiguration$GroovyMarkupConfiguration.class]: Invocation of init method failed; nested exception is java.lang.reflect.InaccessibleObjectException: Unable to make jdk.internal.loader.ClassLoaders$AppClassLoader(jdk.internal.loader.ClassLoaders$PlatformClassLoader,jdk.internal.loader.URLClassPath) accessible: module java.base does not "opens jdk.internal.loader" to unnamed module @5fcacc0
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1803)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:595)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:517)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:323)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:222)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:321)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:202)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(DefaultListableBeanFactory.java:879)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:878)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:550)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:747)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:397)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:315)
	at org.springframework.boot.test.context.SpringBootContextLoader.loadContext(SpringBootContextLoader.java:125)
	at org.springframework.test.context.cache.DefaultCacheAwareContextLoaderDelegate.loadContextInternal(DefaultCacheAwareContextLoaderDelegate.java:99)
	at org.springframework.test.context.cache.DefaultCacheAwareContextLoaderDelegate.loadContext(DefaultCacheAwareContextLoaderDelegate.java:124)
	... 47 common frames omitted
Caused by: java.lang.reflect.InaccessibleObjectException: Unable to make jdk.internal.loader.ClassLoaders$AppClassLoader(jdk.internal.loader.ClassLoaders$PlatformClassLoader,jdk.internal.loader.URLClassPath) accessible: module java.base does not "opens jdk.internal.loader" to unnamed module @5fcacc0
	at java.base/java.lang.reflect.AccessibleObject.checkCanSetAccessible(AccessibleObject.java:361)
	at java.base/java.lang.reflect.AccessibleObject.checkCanSetAccessible(AccessibleObject.java:301)
	at java.base/java.lang.reflect.Constructor.checkCanSetAccessible(Constructor.java:189)
	at java.base/java.lang.reflect.Constructor.setAccessible(Constructor.java:182)
	at org.codehaus.groovy.reflection.CachedConstructor$1.run(CachedConstructor.java:44)
	at java.base/java.security.AccessController.doPrivileged(AccessController.java:312)
	at org.codehaus.groovy.reflection.CachedConstructor.<init>(CachedConstructor.java:42)
	at org.codehaus.groovy.reflection.CachedClass$2.initValue(CachedClass.java:79)
	at org.codehaus.groovy.reflection.CachedClass$2.initValue(CachedClass.java:69)
	at org.codehaus.groovy.util.LazyReference.getLocked(LazyReference.java:49)
	at org.codehaus.groovy.util.LazyReference.get(LazyReference.java:36)
	at org.codehaus.groovy.reflection.CachedClass.getConstructors(CachedClass.java:268)
	at groovy.lang.MetaClassImpl.<init>(MetaClassImpl.java:218)
	at groovy.lang.MetaClassImpl.<init>(MetaClassImpl.java:228)
	at groovy.lang.MetaClassRegistry$MetaClassCreationHandle.createNormalMetaClass(MetaClassRegistry.java:171)
	at groovy.lang.MetaClassRegistry$MetaClassCreationHandle.createWithCustomLookup(MetaClassRegistry.java:161)
	at groovy.lang.MetaClassRegistry$MetaClassCreationHandle.create(MetaClassRegistry.java:144)
	at org.codehaus.groovy.reflection.ClassInfo.getMetaClassUnderLock(ClassInfo.java:253)
	at org.codehaus.groovy.reflection.ClassInfo.getMetaClass(ClassInfo.java:285)
	at org.codehaus.groovy.reflection.ClassInfo.getMetaClass(ClassInfo.java:295)
	at org.codehaus.groovy.runtime.metaclass.MetaClassRegistryImpl.getMetaClass(MetaClassRegistryImpl.java:261)
	at org.codehaus.groovy.runtime.InvokerHelper.getMetaClass(InvokerHelper.java:873)
	at org.codehaus.groovy.runtime.InvokerHelper.invokePojoMethod(InvokerHelper.java:906)
	at org.codehaus.groovy.runtime.InvokerHelper.invokeMethod(InvokerHelper.java:898)
	at org.codehaus.groovy.runtime.typehandling.DefaultTypeTransformation.castToBoolean(DefaultTypeTransformation.java:185)
	at org.codehaus.groovy.runtime.typehandling.DefaultTypeTransformation.booleanUnbox(DefaultTypeTransformation.java:74)
	at org.codehaus.groovy.control.customizers.ASTTransformationCustomizer.findASTTranformationClass(ASTTransformationCustomizer.groovy:209)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:64)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:564)
	at org.codehaus.groovy.reflection.CachedMethod.invoke(CachedMethod.java:93)
	at org.codehaus.groovy.runtime.callsite.StaticMetaMethodSite$StaticMetaMethodSiteNoUnwrapNoCoerce.invoke(StaticMetaMethodSite.java:151)
	at org.codehaus.groovy.runtime.callsite.StaticMetaMethodSite.callStatic(StaticMetaMethodSite.java:102)
	at org.codehaus.groovy.runtime.callsite.CallSiteArray.defaultCallStatic(CallSiteArray.java:56)
	at org.codehaus.groovy.runtime.callsite.AbstractCallSite.callStatic(AbstractCallSite.java:194)
	at org.codehaus.groovy.runtime.callsite.AbstractCallSite.callStatic(AbstractCallSite.java:214)
	at org.codehaus.groovy.control.customizers.ASTTransformationCustomizer.findPhase(ASTTransformationCustomizer.groovy:226)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:64)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:564)
	at org.codehaus.groovy.reflection.CachedMethod.invoke(CachedMethod.java:93)
	at org.codehaus.groovy.runtime.callsite.StaticMetaMethodSite$StaticMetaMethodSiteNoUnwrapNoCoerce.invoke(StaticMetaMethodSite.java:151)
	at org.codehaus.groovy.runtime.callsite.StaticMetaMethodSite.callStatic(StaticMetaMethodSite.java:102)
	at org.codehaus.groovy.runtime.callsite.CallSiteArray.defaultCallStatic(CallSiteArray.java:56)
	at org.codehaus.groovy.runtime.callsite.AbstractCallSite.callStatic(AbstractCallSite.java:194)
	at org.codehaus.groovy.runtime.callsite.AbstractCallSite.callStatic(AbstractCallSite.java:214)
	at org.codehaus.groovy.control.customizers.ASTTransformationCustomizer.<init>(ASTTransformationCustomizer.groovy:180)
	at org.codehaus.groovy.control.customizers.ASTTransformationCustomizer.<init>(ASTTransformationCustomizer.groovy:188)
	at groovy.text.markup.MarkupTemplateEngine.<init>(MarkupTemplateEngine.java:94)
	at org.springframework.web.servlet.view.groovy.GroovyMarkupConfigurer.createTemplateEngine(GroovyMarkupConfigurer.java:160)
	at org.springframework.web.servlet.view.groovy.GroovyMarkupConfigurer.afterPropertiesSet(GroovyMarkupConfigurer.java:153)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1862)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1799)
	... 62 common frames omitted
2020-11-25 20:51:23,007 DEBUG  [main] BasicTypeRegistry: Adding type registration boolean -> org.hibernate.type.BooleanType@59127611
2020-11-25 20:51:23,015 DEBUG  [main] BasicTypeRegistry: Adding type registration boolean -> org.hibernate.type.BooleanType@59127611
2020-11-25 20:51:23,017 DEBUG  [main] BasicTypeRegistry: Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@59127611
2020-11-25 20:51:23,017 DEBUG  [main] BasicTypeRegistry: Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@18db3b3c
2020-11-25 20:51:23,018 DEBUG  [main] BasicTypeRegistry: Adding type registration true_false -> org.hibernate.type.TrueFalseType@5c1c9881
2020-11-25 20:51:23,019 DEBUG  [main] BasicTypeRegistry: Adding type registration yes_no -> org.hibernate.type.YesNoType@5d37aa0f
2020-11-25 20:51:23,019 DEBUG  [main] BasicTypeRegistry: Adding type registration byte -> org.hibernate.type.ByteType@3e4afd10
2020-11-25 20:51:23,019 DEBUG  [main] BasicTypeRegistry: Adding type registration byte -> org.hibernate.type.ByteType@3e4afd10
2020-11-25 20:51:23,019 DEBUG  [main] BasicTypeRegistry: Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@3e4afd10
2020-11-25 20:51:23,019 DEBUG  [main] BasicTypeRegistry: Adding type registration character -> org.hibernate.type.CharacterType@48d44b46
2020-11-25 20:51:23,020 DEBUG  [main] BasicTypeRegistry: Adding type registration char -> org.hibernate.type.CharacterType@48d44b46
2020-11-25 20:51:23,020 DEBUG  [main] BasicTypeRegistry: Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@48d44b46
2020-11-25 20:51:23,020 DEBUG  [main] BasicTypeRegistry: Adding type registration short -> org.hibernate.type.ShortType@dd20ebc
2020-11-25 20:51:23,021 DEBUG  [main] BasicTypeRegistry: Adding type registration short -> org.hibernate.type.ShortType@dd20ebc
2020-11-25 20:51:23,021 DEBUG  [main] BasicTypeRegistry: Adding type registration java.lang.Short -> org.hibernate.type.ShortType@dd20ebc
2020-11-25 20:51:23,021 DEBUG  [main] BasicTypeRegistry: Adding type registration integer -> org.hibernate.type.IntegerType@5f7cd50e
2020-11-25 20:51:23,021 DEBUG  [main] BasicTypeRegistry: Adding type registration int -> org.hibernate.type.IntegerType@5f7cd50e
2020-11-25 20:51:23,022 DEBUG  [main] BasicTypeRegistry: Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@5f7cd50e
2020-11-25 20:51:23,022 DEBUG  [main] BasicTypeRegistry: Adding type registration long -> org.hibernate.type.LongType@359e27d2
2020-11-25 20:51:23,022 DEBUG  [main] BasicTypeRegistry: Adding type registration long -> org.hibernate.type.LongType@359e27d2
2020-11-25 20:51:23,022 DEBUG  [main] BasicTypeRegistry: Adding type registration java.lang.Long -> org.hibernate.type.LongType@359e27d2
2020-11-25 20:51:23,022 DEBUG  [main] BasicTypeRegistry: Adding type registration float -> org.hibernate.type.FloatType@29b8df5
2020-11-25 20:51:23,023 DEBUG  [main] BasicTypeRegistry: Adding type registration float -> org.hibernate.type.FloatType@29b8df5
2020-11-25 20:51:23,023 DEBUG  [main] BasicTypeRegistry: Adding type registration java.lang.Float -> org.hibernate.type.FloatType@29b8df5
2020-11-25 20:51:23,023 DEBUG  [main] BasicTypeRegistry: Adding type registration double -> org.hibernate.type.DoubleType@36cfe107
2020-11-25 20:51:23,023 DEBUG  [main] BasicTypeRegistry: Adding type registration double -> org.hibernate.type.DoubleType@36cfe107
2020-11-25 20:51:23,024 DEBUG  [main] BasicTypeRegistry: Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@36cfe107
2020-11-25 20:51:23,024 DEBUG  [main] BasicTypeRegistry: Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@139089a4
2020-11-25 20:51:23,024 DEBUG  [main] BasicTypeRegistry: Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@139089a4
2020-11-25 20:51:23,024 DEBUG  [main] BasicTypeRegistry: Adding type registration big_integer -> org.hibernate.type.BigIntegerType@9f1ca74
2020-11-25 20:51:23,025 DEBUG  [main] BasicTypeRegistry: Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@9f1ca74
2020-11-25 20:51:23,025 DEBUG  [main] BasicTypeRegistry: Adding type registration string -> org.hibernate.type.StringType@393ae7a0
2020-11-25 20:51:23,025 DEBUG  [main] BasicTypeRegistry: Adding type registration java.lang.String -> org.hibernate.type.StringType@393ae7a0
2020-11-25 20:51:23,025 DEBUG  [main] BasicTypeRegistry: Adding type registration nstring -> org.hibernate.type.StringNVarcharType@7ee12d58
2020-11-25 20:51:23,026 DEBUG  [main] BasicTypeRegistry: Adding type registration ncharacter -> org.hibernate.type.CharacterNCharType@34e990cc
2020-11-25 20:51:23,026 DEBUG  [main] BasicTypeRegistry: Adding type registration url -> org.hibernate.type.UrlType@6de84336
2020-11-25 20:51:23,026 DEBUG  [main] BasicTypeRegistry: Adding type registration java.net.URL -> org.hibernate.type.UrlType@6de84336
2020-11-25 20:51:23,026 DEBUG  [main] BasicTypeRegistry: Adding type registration Duration -> org.hibernate.type.DurationType@69b37f5c
2020-11-25 20:51:23,027 DEBUG  [main] BasicTypeRegistry: Adding type registration java.time.Duration -> org.hibernate.type.DurationType@69b37f5c
2020-11-25 20:51:23,035 DEBUG  [main] BasicTypeRegistry: Adding type registration Instant -> org.hibernate.type.InstantType@580ffea
2020-11-25 20:51:23,035 DEBUG  [main] BasicTypeRegistry: Adding type registration java.time.Instant -> org.hibernate.type.InstantType@580ffea
2020-11-25 20:51:23,036 DEBUG  [main] BasicTypeRegistry: Adding type registration LocalDateTime -> org.hibernate.type.LocalDateTimeType@79d49790
2020-11-25 20:51:23,036 DEBUG  [main] BasicTypeRegistry: Adding type registration java.time.LocalDateTime -> org.hibernate.type.LocalDateTimeType@79d49790
2020-11-25 20:51:23,038 DEBUG  [main] BasicTypeRegistry: Adding type registration LocalDate -> org.hibernate.type.LocalDateType@3e9fb485
2020-11-25 20:51:23,039 DEBUG  [main] BasicTypeRegistry: Adding type registration java.time.LocalDate -> org.hibernate.type.LocalDateType@3e9fb485
2020-11-25 20:51:23,039 DEBUG  [main] BasicTypeRegistry: Adding type registration LocalTime -> org.hibernate.type.LocalTimeType@419f0ea
2020-11-25 20:51:23,039 DEBUG  [main] BasicTypeRegistry: Adding type registration java.time.LocalTime -> org.hibernate.type.LocalTimeType@419f0ea
2020-11-25 20:51:23,039 DEBUG  [main] BasicTypeRegistry: Adding type registration OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@87aec6a
2020-11-25 20:51:23,040 DEBUG  [main] BasicTypeRegistry: Adding type registration java.time.OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@87aec6a
2020-11-25 20:51:23,041 DEBUG  [main] BasicTypeRegistry: Adding type registration OffsetTime -> org.hibernate.type.OffsetTimeType@5529522f
2020-11-25 20:51:23,045 DEBUG  [main] BasicTypeRegistry: Adding type registration java.time.OffsetTime -> org.hibernate.type.OffsetTimeType@5529522f
2020-11-25 20:51:23,045 DEBUG  [main] BasicTypeRegistry: Adding type registration ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@152e7703
2020-11-25 20:51:23,045 DEBUG  [main] BasicTypeRegistry: Adding type registration java.time.ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@152e7703
2020-11-25 20:51:23,045 DEBUG  [main] BasicTypeRegistry: Adding type registration date -> org.hibernate.type.DateType@24fc2c80
2020-11-25 20:51:23,046 DEBUG  [main] BasicTypeRegistry: Adding type registration java.sql.Date -> org.hibernate.type.DateType@24fc2c80
2020-11-25 20:51:23,046 DEBUG  [main] BasicTypeRegistry: Adding type registration time -> org.hibernate.type.TimeType@48b3b1b8
2020-11-25 20:51:23,047 DEBUG  [main] BasicTypeRegistry: Adding type registration java.sql.Time -> org.hibernate.type.TimeType@48b3b1b8
2020-11-25 20:51:23,047 DEBUG  [main] BasicTypeRegistry: Adding type registration timestamp -> org.hibernate.type.TimestampType@686b1e2d
2020-11-25 20:51:23,048 DEBUG  [main] BasicTypeRegistry: Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@686b1e2d
2020-11-25 20:51:23,048 DEBUG  [main] BasicTypeRegistry: Adding type registration java.util.Date -> org.hibernate.type.TimestampType@686b1e2d
2020-11-25 20:51:23,048 DEBUG  [main] BasicTypeRegistry: Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@652b3733
2020-11-25 20:51:23,051 DEBUG  [main] BasicTypeRegistry: Adding type registration calendar -> org.hibernate.type.CalendarType@5be7b749
2020-11-25 20:51:23,052 DEBUG  [main] BasicTypeRegistry: Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@5be7b749
2020-11-25 20:51:23,052 DEBUG  [main] BasicTypeRegistry: Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@5be7b749
2020-11-25 20:51:23,052 DEBUG  [main] BasicTypeRegistry: Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@177ddd24
2020-11-25 20:51:23,053 DEBUG  [main] BasicTypeRegistry: Adding type registration locale -> org.hibernate.type.LocaleType@61ad30f6
2020-11-25 20:51:23,053 DEBUG  [main] BasicTypeRegistry: Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@61ad30f6
2020-11-25 20:51:23,053 DEBUG  [main] BasicTypeRegistry: Adding type registration currency -> org.hibernate.type.CurrencyType@574ebdaf
2020-11-25 20:51:23,053 DEBUG  [main] BasicTypeRegistry: Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@574ebdaf
2020-11-25 20:51:23,053 DEBUG  [main] BasicTypeRegistry: Adding type registration timezone -> org.hibernate.type.TimeZoneType@123ca460
2020-11-25 20:51:23,056 DEBUG  [main] BasicTypeRegistry: Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@123ca460
2020-11-25 20:51:23,057 DEBUG  [main] BasicTypeRegistry: Adding type registration class -> org.hibernate.type.ClassType@3c9f4376
2020-11-25 20:51:23,057 DEBUG  [main] BasicTypeRegistry: Adding type registration java.lang.Class -> org.hibernate.type.ClassType@3c9f4376
2020-11-25 20:51:23,057 DEBUG  [main] BasicTypeRegistry: Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@1958c0d9
2020-11-25 20:51:23,058 DEBUG  [main] BasicTypeRegistry: Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@1958c0d9
2020-11-25 20:51:23,058 DEBUG  [main] BasicTypeRegistry: Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@5fc7255c
2020-11-25 20:51:23,058 DEBUG  [main] BasicTypeRegistry: Adding type registration binary -> org.hibernate.type.BinaryType@79ba0285
2020-11-25 20:51:23,058 DEBUG  [main] BasicTypeRegistry: Adding type registration byte[] -> org.hibernate.type.BinaryType@79ba0285
2020-11-25 20:51:23,059 DEBUG  [main] BasicTypeRegistry: Adding type registration [B -> org.hibernate.type.BinaryType@79ba0285
2020-11-25 20:51:23,059 DEBUG  [main] BasicTypeRegistry: Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@598778cc
2020-11-25 20:51:23,061 DEBUG  [main] BasicTypeRegistry: Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@598778cc
2020-11-25 20:51:23,062 DEBUG  [main] BasicTypeRegistry: Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@598778cc
2020-11-25 20:51:23,062 DEBUG  [main] BasicTypeRegistry: Adding type registration row_version -> org.hibernate.type.RowVersionType@11cadb32
2020-11-25 20:51:23,062 DEBUG  [main] BasicTypeRegistry: Adding type registration image -> org.hibernate.type.ImageType@37986daf
2020-11-25 20:51:23,063 DEBUG  [main] BasicTypeRegistry: Adding type registration characters -> org.hibernate.type.CharArrayType@710afd47
2020-11-25 20:51:23,063 DEBUG  [main] BasicTypeRegistry: Adding type registration char[] -> org.hibernate.type.CharArrayType@710afd47
2020-11-25 20:51:23,063 DEBUG  [main] BasicTypeRegistry: Adding type registration [C -> org.hibernate.type.CharArrayType@710afd47
2020-11-25 20:51:23,064 DEBUG  [main] BasicTypeRegistry: Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@12670e55
2020-11-25 20:51:23,065 DEBUG  [main] BasicTypeRegistry: Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@12670e55
2020-11-25 20:51:23,065 DEBUG  [main] BasicTypeRegistry: Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@12670e55
2020-11-25 20:51:23,065 DEBUG  [main] BasicTypeRegistry: Adding type registration text -> org.hibernate.type.TextType@32ba5c65
2020-11-25 20:51:23,065 DEBUG  [main] BasicTypeRegistry: Adding type registration ntext -> org.hibernate.type.NTextType@10166230
2020-11-25 20:51:23,066 DEBUG  [main] BasicTypeRegistry: Adding type registration blob -> org.hibernate.type.BlobType@13dd7887
2020-11-25 20:51:23,066 DEBUG  [main] BasicTypeRegistry: Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@13dd7887
2020-11-25 20:51:23,066 DEBUG  [main] BasicTypeRegistry: Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@3cbfdf5c
2020-11-25 20:51:23,066 DEBUG  [main] BasicTypeRegistry: Adding type registration clob -> org.hibernate.type.ClobType@58636b50
2020-11-25 20:51:23,067 DEBUG  [main] BasicTypeRegistry: Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@58636b50
2020-11-25 20:51:23,067 DEBUG  [main] BasicTypeRegistry: Adding type registration nclob -> org.hibernate.type.NClobType@1e5aacd9
2020-11-25 20:51:23,067 DEBUG  [main] BasicTypeRegistry: Adding type registration java.sql.NClob -> org.hibernate.type.NClobType@1e5aacd9
2020-11-25 20:51:23,068 DEBUG  [main] BasicTypeRegistry: Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@120411ec
2020-11-25 20:51:23,069 DEBUG  [main] BasicTypeRegistry: Adding type registration materialized_nclob -> org.hibernate.type.MaterializedNClobType@1a34a51e
2020-11-25 20:51:23,069 DEBUG  [main] BasicTypeRegistry: Adding type registration serializable -> org.hibernate.type.SerializableType@6b091a92
2020-11-25 20:51:23,069 DEBUG  [main] BasicTypeRegistry: Adding type registration object -> org.hibernate.type.ObjectType@35329a05
2020-11-25 20:51:23,069 DEBUG  [main] BasicTypeRegistry: Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@35329a05
2020-11-25 20:51:23,070 DEBUG  [main] BasicTypeRegistry: Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@37d50217
2020-11-25 20:51:23,073 DEBUG  [main] BasicTypeRegistry: Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@3e9e7a70
2020-11-25 20:51:23,074 DEBUG  [main] BasicTypeRegistry: Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@360ccb68
2020-11-25 20:51:23,074 DEBUG  [main] BasicTypeRegistry: Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@78762e87
2020-11-25 20:51:23,074 DEBUG  [main] BasicTypeRegistry: Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@672c4e24
2020-11-25 20:51:23,075 DEBUG  [main] BasicTypeRegistry: Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@2aacf54b
2020-11-25 20:51:23,075 DEBUG  [main] BasicTypeRegistry: Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@7a2b3cfd
2020-11-25 20:51:23,076 DEBUG  [main] BasicTypeRegistry: Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@33602729
2020-11-25 20:51:23,115 DEBUG  [main] TypeConfiguration$Scope: Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@7a59780b] to MetadataBuildingContext [org.hibernate.boot.internal.MetadataBuildingContextRootImpl@5205b3e2]
2020-11-25 20:51:23,151 DEBUG  [main] EnumType: Using NAMED-based conversion for Enum com.sf.back.entities.Kind
2020-11-25 20:51:23,154 DEBUG  [main] EnumType: Using NAMED-based conversion for Enum com.sf.back.entities.Kind
2020-11-25 20:51:23,200 DEBUG  [main] TypeConfiguration$Scope: Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@7a59780b] to SessionFactoryImpl [org.hibernate.internal.SessionFactoryImpl@6f7e5e11]
2020-11-25 20:51:23,201 DEBUG  [main] EnumType: Using NAMED-based conversion for Enum com.sf.back.entities.Kind
2020-11-25 20:51:23,201 DEBUG  [main] EnumType: Using NAMED-based conversion for Enum com.sf.back.entities.Kind
2020-11-25 20:51:23,268 DEBUG  [main] EnumType: Using NAMED-based conversion for Enum com.sf.back.entities.Kind
2020-11-25 20:51:23,268 DEBUG  [main] EnumType: Using NAMED-based conversion for Enum com.sf.back.entities.Kind
2020-11-25 20:51:23,323 DEBUG  [main] EnumType: Using NAMED-based conversion for Enum com.sf.back.entities.Kind
2020-11-25 20:51:23,324 DEBUG  [main] EnumType: Using NAMED-based conversion for Enum com.sf.back.entities.Kind
2020-11-25 20:51:23,329 DEBUG  [main] EnumType: Using NAMED-based conversion for Enum com.sf.back.entities.Kind
2020-11-25 20:51:23,346 TRACE  [main] TypeConfiguration$Scope: Handling #sessionFactoryCreated from [org.hibernate.internal.SessionFactoryImpl@6f7e5e11] for TypeConfiguration
2020-11-25 20:51:23,638 WARN   [main] JpaBaseConfiguration$JpaWebConfiguration: spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2020-11-25 20:51:23,922 WARN   [main] GenericWebApplicationContext: Exception encountered during context initialization - cancelling refresh attempt: org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'groovyMarkupConfigurer' defined in class path resource [org/springframework/boot/autoconfigure/groovy/template/GroovyTemplateAutoConfiguration$GroovyMarkupConfiguration.class]: Invocation of init method failed; nested exception is java.lang.reflect.InaccessibleObjectException: Unable to make jdk.internal.loader.ClassLoaders$AppClassLoader(jdk.internal.loader.ClassLoaders$PlatformClassLoader,jdk.internal.loader.URLClassPath) accessible: module java.base does not "opens jdk.internal.loader" to unnamed module @5fcacc0
2020-11-25 20:51:23,933 TRACE  [main] TypeConfiguration$Scope: Handling #sessionFactoryClosed from [org.hibernate.internal.SessionFactoryImpl@6f7e5e11] for TypeConfiguration
2020-11-25 20:51:23,933 DEBUG  [main] TypeConfiguration$Scope: Un-scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration$Scope@7bfedff3] from SessionFactory [org.hibernate.internal.SessionFactoryImpl@6f7e5e11]
2020-11-25 20:51:23,961 ERROR  [main] SpringApplication: Application run failed
org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'groovyMarkupConfigurer' defined in class path resource [org/springframework/boot/autoconfigure/groovy/template/GroovyTemplateAutoConfiguration$GroovyMarkupConfiguration.class]: Invocation of init method failed; nested exception is java.lang.reflect.InaccessibleObjectException: Unable to make jdk.internal.loader.ClassLoaders$AppClassLoader(jdk.internal.loader.ClassLoaders$PlatformClassLoader,jdk.internal.loader.URLClassPath) accessible: module java.base does not "opens jdk.internal.loader" to unnamed module @5fcacc0
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1803)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:595)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:517)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:323)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:222)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:321)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:202)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(DefaultListableBeanFactory.java:879)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:878)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:550)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:747)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:397)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:315)
	at org.springframework.boot.test.context.SpringBootContextLoader.loadContext(SpringBootContextLoader.java:125)
	at org.springframework.test.context.cache.DefaultCacheAwareContextLoaderDelegate.loadContextInternal(DefaultCacheAwareContextLoaderDelegate.java:99)
	at org.springframework.test.context.cache.DefaultCacheAwareContextLoaderDelegate.loadContext(DefaultCacheAwareContextLoaderDelegate.java:124)
	at org.springframework.test.context.support.DefaultTestContext.getApplicationContext(DefaultTestContext.java:123)
	at org.springframework.test.context.web.ServletTestExecutionListener.setUpRequestContextIfNecessary(ServletTestExecutionListener.java:190)
	at org.springframework.test.context.web.ServletTestExecutionListener.prepareTestInstance(ServletTestExecutionListener.java:132)
	at org.springframework.test.context.TestContextManager.prepareTestInstance(TestContextManager.java:244)
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner.createTest(SpringJUnit4ClassRunner.java:227)
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner$1.runReflectiveCall(SpringJUnit4ClassRunner.java:289)
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner.methodBlock(SpringJUnit4ClassRunner.java:291)
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner.runChild(SpringJUnit4ClassRunner.java:246)
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner.runChild(SpringJUnit4ClassRunner.java:97)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:290)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:71)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:58)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268)
	at org.junit.internal.runners.statements.RunBefores.evaluate(RunBefores.java:26)
	at org.springframework.test.context.junit4.statements.RunBeforeTestClassCallbacks.evaluate(RunBeforeTestClassCallbacks.java:61)
	at org.junit.internal.runners.statements.RunAfters.evaluate(RunAfters.java:27)
	at org.springframework.test.context.junit4.statements.RunAfterTestClassCallbacks.evaluate(RunAfterTestClassCallbacks.java:70)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:363)
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner.run(SpringJUnit4ClassRunner.java:190)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:137)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:115)
	at org.junit.vintage.engine.execution.RunnerExecutor.execute(RunnerExecutor.java:40)
	at java.base/java.util.stream.ForEachOps$ForEachOp$OfRef.accept(ForEachOps.java:183)
	at java.base/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:195)
	at java.base/java.util.Iterator.forEachRemaining(Iterator.java:133)
	at java.base/java.util.Spliterators$IteratorSpliterator.forEachRemaining(Spliterators.java:1801)
	at java.base/java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:484)
	at java.base/java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:474)
	at java.base/java.util.stream.ForEachOps$ForEachOp.evaluateSequential(ForEachOps.java:150)
	at java.base/java.util.stream.ForEachOps$ForEachOp$OfRef.evaluateSequential(ForEachOps.java:173)
	at java.base/java.util.stream.AbstractPipeline.evaluate(AbstractPipeline.java:234)
	at java.base/java.util.stream.ReferencePipeline.forEach(ReferencePipeline.java:497)
	at org.junit.vintage.engine.VintageTestEngine.executeAllChildren(VintageTestEngine.java:80)
	at org.junit.vintage.engine.VintageTestEngine.execute(VintageTestEngine.java:71)
	at org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:220)
	at org.junit.platform.launcher.core.DefaultLauncher.lambda$execute$6(DefaultLauncher.java:188)
	at org.junit.platform.launcher.core.DefaultLauncher.withInterceptedStreams(DefaultLauncher.java:202)
	at org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:181)
	at org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:128)
	at org.apache.maven.surefire.junitplatform.JUnitPlatformProvider.invokeAllTests(JUnitPlatformProvider.java:150)
	at org.apache.maven.surefire.junitplatform.JUnitPlatformProvider.invoke(JUnitPlatformProvider.java:124)
	at org.apache.maven.surefire.booter.ForkedBooter.invokeProviderInSameClassLoader(ForkedBooter.java:384)
	at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:345)
	at org.apache.maven.surefire.booter.ForkedBooter.execute(ForkedBooter.java:126)
	at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:418)
Caused by: java.lang.reflect.InaccessibleObjectException: Unable to make jdk.internal.loader.ClassLoaders$AppClassLoader(jdk.internal.loader.ClassLoaders$PlatformClassLoader,jdk.internal.loader.URLClassPath) accessible: module java.base does not "opens jdk.internal.loader" to unnamed module @5fcacc0
	at java.base/java.lang.reflect.AccessibleObject.checkCanSetAccessible(AccessibleObject.java:361)
	at java.base/java.lang.reflect.AccessibleObject.checkCanSetAccessible(AccessibleObject.java:301)
	at java.base/java.lang.reflect.Constructor.checkCanSetAccessible(Constructor.java:189)
	at java.base/java.lang.reflect.Constructor.setAccessible(Constructor.java:182)
	at org.codehaus.groovy.reflection.CachedConstructor$1.run(CachedConstructor.java:44)
	at java.base/java.security.AccessController.doPrivileged(AccessController.java:312)
	at org.codehaus.groovy.reflection.CachedConstructor.<init>(CachedConstructor.java:42)
	at org.codehaus.groovy.reflection.CachedClass$2.initValue(CachedClass.java:79)
	at org.codehaus.groovy.reflection.CachedClass$2.initValue(CachedClass.java:69)
	at org.codehaus.groovy.util.LazyReference.getLocked(LazyReference.java:49)
	at org.codehaus.groovy.util.LazyReference.get(LazyReference.java:36)
	at org.codehaus.groovy.reflection.CachedClass.getConstructors(CachedClass.java:268)
	at groovy.lang.MetaClassImpl.<init>(MetaClassImpl.java:218)
	at groovy.lang.MetaClassImpl.<init>(MetaClassImpl.java:228)
	at groovy.lang.MetaClassRegistry$MetaClassCreationHandle.createNormalMetaClass(MetaClassRegistry.java:171)
	at groovy.lang.MetaClassRegistry$MetaClassCreationHandle.createWithCustomLookup(MetaClassRegistry.java:161)
	at groovy.lang.MetaClassRegistry$MetaClassCreationHandle.create(MetaClassRegistry.java:144)
	at org.codehaus.groovy.reflection.ClassInfo.getMetaClassUnderLock(ClassInfo.java:253)
	at org.codehaus.groovy.reflection.ClassInfo.getMetaClass(ClassInfo.java:285)
	at org.codehaus.groovy.reflection.ClassInfo.getMetaClass(ClassInfo.java:295)
	at org.codehaus.groovy.runtime.metaclass.MetaClassRegistryImpl.getMetaClass(MetaClassRegistryImpl.java:261)
	at org.codehaus.groovy.runtime.InvokerHelper.getMetaClass(InvokerHelper.java:873)
	at org.codehaus.groovy.runtime.InvokerHelper.invokePojoMethod(InvokerHelper.java:906)
	at org.codehaus.groovy.runtime.InvokerHelper.invokeMethod(InvokerHelper.java:898)
	at org.codehaus.groovy.runtime.typehandling.DefaultTypeTransformation.castToBoolean(DefaultTypeTransformation.java:185)
	at org.codehaus.groovy.runtime.typehandling.DefaultTypeTransformation.booleanUnbox(DefaultTypeTransformation.java:74)
	at org.codehaus.groovy.control.customizers.ASTTransformationCustomizer.findASTTranformationClass(ASTTransformationCustomizer.groovy:209)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:64)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:564)
	at org.codehaus.groovy.reflection.CachedMethod.invoke(CachedMethod.java:93)
	at org.codehaus.groovy.runtime.callsite.StaticMetaMethodSite$StaticMetaMethodSiteNoUnwrapNoCoerce.invoke(StaticMetaMethodSite.java:151)
	at org.codehaus.groovy.runtime.callsite.StaticMetaMethodSite.callStatic(StaticMetaMethodSite.java:102)
	at org.codehaus.groovy.runtime.callsite.AbstractCallSite.callStatic(AbstractCallSite.java:214)
	at org.codehaus.groovy.control.customizers.ASTTransformationCustomizer.findPhase(ASTTransformationCustomizer.groovy:226)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:64)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:564)
	at org.codehaus.groovy.reflection.CachedMethod.invoke(CachedMethod.java:93)
	at org.codehaus.groovy.runtime.callsite.StaticMetaMethodSite$StaticMetaMethodSiteNoUnwrapNoCoerce.invoke(StaticMetaMethodSite.java:151)
	at org.codehaus.groovy.runtime.callsite.StaticMetaMethodSite.callStatic(StaticMetaMethodSite.java:102)
	at org.codehaus.groovy.runtime.callsite.AbstractCallSite.callStatic(AbstractCallSite.java:214)
	at org.codehaus.groovy.control.customizers.ASTTransformationCustomizer.<init>(ASTTransformationCustomizer.groovy:180)
	at org.codehaus.groovy.control.customizers.ASTTransformationCustomizer.<init>(ASTTransformationCustomizer.groovy:188)
	at groovy.text.markup.MarkupTemplateEngine.<init>(MarkupTemplateEngine.java:94)
	at org.springframework.web.servlet.view.groovy.GroovyMarkupConfigurer.createTemplateEngine(GroovyMarkupConfigurer.java:160)
	at org.springframework.web.servlet.view.groovy.GroovyMarkupConfigurer.afterPropertiesSet(GroovyMarkupConfigurer.java:153)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1862)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1799)
	... 62 common frames omitted
2020-11-25 20:51:23,963 ERROR  [main] TestContextManager: Caught exception while allowing TestExecutionListener [org.springframework.test.context.web.ServletTestExecutionListener@46c093b4] to prepare test instance [com.sf.math.algebra.solvers.PolynomialSolverIntervalTest@1adc38a0]
java.lang.IllegalStateException: Failed to load ApplicationContext
	at org.springframework.test.context.cache.DefaultCacheAwareContextLoaderDelegate.loadContext(DefaultCacheAwareContextLoaderDelegate.java:132)
	at org.springframework.test.context.support.DefaultTestContext.getApplicationContext(DefaultTestContext.java:123)
	at org.springframework.test.context.web.ServletTestExecutionListener.setUpRequestContextIfNecessary(ServletTestExecutionListener.java:190)
	at org.springframework.test.context.web.ServletTestExecutionListener.prepareTestInstance(ServletTestExecutionListener.java:132)
	at org.springframework.test.context.TestContextManager.prepareTestInstance(TestContextManager.java:244)
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner.createTest(SpringJUnit4ClassRunner.java:227)
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner$1.runReflectiveCall(SpringJUnit4ClassRunner.java:289)
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner.methodBlock(SpringJUnit4ClassRunner.java:291)
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner.runChild(SpringJUnit4ClassRunner.java:246)
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner.runChild(SpringJUnit4ClassRunner.java:97)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:290)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:71)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:58)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268)
	at org.junit.internal.runners.statements.RunBefores.evaluate(RunBefores.java:26)
	at org.springframework.test.context.junit4.statements.RunBeforeTestClassCallbacks.evaluate(RunBeforeTestClassCallbacks.java:61)
	at org.junit.internal.runners.statements.RunAfters.evaluate(RunAfters.java:27)
	at org.springframework.test.context.junit4.statements.RunAfterTestClassCallbacks.evaluate(RunAfterTestClassCallbacks.java:70)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:363)
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner.run(SpringJUnit4ClassRunner.java:190)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:137)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:115)
	at org.junit.vintage.engine.execution.RunnerExecutor.execute(RunnerExecutor.java:40)
	at java.base/java.util.stream.ForEachOps$ForEachOp$OfRef.accept(ForEachOps.java:183)
	at java.base/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:195)
	at java.base/java.util.Iterator.forEachRemaining(Iterator.java:133)
	at java.base/java.util.Spliterators$IteratorSpliterator.forEachRemaining(Spliterators.java:1801)
	at java.base/java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:484)
	at java.base/java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:474)
	at java.base/java.util.stream.ForEachOps$ForEachOp.evaluateSequential(ForEachOps.java:150)
	at java.base/java.util.stream.ForEachOps$ForEachOp$OfRef.evaluateSequential(ForEachOps.java:173)
	at java.base/java.util.stream.AbstractPipeline.evaluate(AbstractPipeline.java:234)
	at java.base/java.util.stream.ReferencePipeline.forEach(ReferencePipeline.java:497)
	at org.junit.vintage.engine.VintageTestEngine.executeAllChildren(VintageTestEngine.java:80)
	at org.junit.vintage.engine.VintageTestEngine.execute(VintageTestEngine.java:71)
	at org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:220)
	at org.junit.platform.launcher.core.DefaultLauncher.lambda$execute$6(DefaultLauncher.java:188)
	at org.junit.platform.launcher.core.DefaultLauncher.withInterceptedStreams(DefaultLauncher.java:202)
	at org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:181)
	at org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:128)
	at org.apache.maven.surefire.junitplatform.JUnitPlatformProvider.invokeAllTests(JUnitPlatformProvider.java:150)
	at org.apache.maven.surefire.junitplatform.JUnitPlatformProvider.invoke(JUnitPlatformProvider.java:124)
	at org.apache.maven.surefire.booter.ForkedBooter.invokeProviderInSameClassLoader(ForkedBooter.java:384)
	at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:345)
	at org.apache.maven.surefire.booter.ForkedBooter.execute(ForkedBooter.java:126)
	at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:418)
Caused by: org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'groovyMarkupConfigurer' defined in class path resource [org/springframework/boot/autoconfigure/groovy/template/GroovyTemplateAutoConfiguration$GroovyMarkupConfiguration.class]: Invocation of init method failed; nested exception is java.lang.reflect.InaccessibleObjectException: Unable to make jdk.internal.loader.ClassLoaders$AppClassLoader(jdk.internal.loader.ClassLoaders$PlatformClassLoader,jdk.internal.loader.URLClassPath) accessible: module java.base does not "opens jdk.internal.loader" to unnamed module @5fcacc0
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1803)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:595)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:517)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:323)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:222)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:321)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:202)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(DefaultListableBeanFactory.java:879)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:878)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:550)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:747)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:397)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:315)
	at org.springframework.boot.test.context.SpringBootContextLoader.loadContext(SpringBootContextLoader.java:125)
	at org.springframework.test.context.cache.DefaultCacheAwareContextLoaderDelegate.loadContextInternal(DefaultCacheAwareContextLoaderDelegate.java:99)
	at org.springframework.test.context.cache.DefaultCacheAwareContextLoaderDelegate.loadContext(DefaultCacheAwareContextLoaderDelegate.java:124)
	... 47 common frames omitted
Caused by: java.lang.reflect.InaccessibleObjectException: Unable to make jdk.internal.loader.ClassLoaders$AppClassLoader(jdk.internal.loader.ClassLoaders$PlatformClassLoader,jdk.internal.loader.URLClassPath) accessible: module java.base does not "opens jdk.internal.loader" to unnamed module @5fcacc0
	at java.base/java.lang.reflect.AccessibleObject.checkCanSetAccessible(AccessibleObject.java:361)
	at java.base/java.lang.reflect.AccessibleObject.checkCanSetAccessible(AccessibleObject.java:301)
	at java.base/java.lang.reflect.Constructor.checkCanSetAccessible(Constructor.java:189)
	at java.base/java.lang.reflect.Constructor.setAccessible(Constructor.java:182)
	at org.codehaus.groovy.reflection.CachedConstructor$1.run(CachedConstructor.java:44)
	at java.base/java.security.AccessController.doPrivileged(AccessController.java:312)
	at org.codehaus.groovy.reflection.CachedConstructor.<init>(CachedConstructor.java:42)
	at org.codehaus.groovy.reflection.CachedClass$2.initValue(CachedClass.java:79)
	at org.codehaus.groovy.reflection.CachedClass$2.initValue(CachedClass.java:69)
	at org.codehaus.groovy.util.LazyReference.getLocked(LazyReference.java:49)
	at org.codehaus.groovy.util.LazyReference.get(LazyReference.java:36)
	at org.codehaus.groovy.reflection.CachedClass.getConstructors(CachedClass.java:268)
	at groovy.lang.MetaClassImpl.<init>(MetaClassImpl.java:218)
	at groovy.lang.MetaClassImpl.<init>(MetaClassImpl.java:228)
	at groovy.lang.MetaClassRegistry$MetaClassCreationHandle.createNormalMetaClass(MetaClassRegistry.java:171)
	at groovy.lang.MetaClassRegistry$MetaClassCreationHandle.createWithCustomLookup(MetaClassRegistry.java:161)
	at groovy.lang.MetaClassRegistry$MetaClassCreationHandle.create(MetaClassRegistry.java:144)
	at org.codehaus.groovy.reflection.ClassInfo.getMetaClassUnderLock(ClassInfo.java:253)
	at org.codehaus.groovy.reflection.ClassInfo.getMetaClass(ClassInfo.java:285)
	at org.codehaus.groovy.reflection.ClassInfo.getMetaClass(ClassInfo.java:295)
	at org.codehaus.groovy.runtime.metaclass.MetaClassRegistryImpl.getMetaClass(MetaClassRegistryImpl.java:261)
	at org.codehaus.groovy.runtime.InvokerHelper.getMetaClass(InvokerHelper.java:873)
	at org.codehaus.groovy.runtime.InvokerHelper.invokePojoMethod(InvokerHelper.java:906)
	at org.codehaus.groovy.runtime.InvokerHelper.invokeMethod(InvokerHelper.java:898)
	at org.codehaus.groovy.runtime.typehandling.DefaultTypeTransformation.castToBoolean(DefaultTypeTransformation.java:185)
	at org.codehaus.groovy.runtime.typehandling.DefaultTypeTransformation.booleanUnbox(DefaultTypeTransformation.java:74)
	at org.codehaus.groovy.control.customizers.ASTTransformationCustomizer.findASTTranformationClass(ASTTransformationCustomizer.groovy:209)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:64)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:564)
	at org.codehaus.groovy.reflection.CachedMethod.invoke(CachedMethod.java:93)
	at org.codehaus.groovy.runtime.callsite.StaticMetaMethodSite$StaticMetaMethodSiteNoUnwrapNoCoerce.invoke(StaticMetaMethodSite.java:151)
	at org.codehaus.groovy.runtime.callsite.StaticMetaMethodSite.callStatic(StaticMetaMethodSite.java:102)
	at org.codehaus.groovy.runtime.callsite.AbstractCallSite.callStatic(AbstractCallSite.java:214)
	at org.codehaus.groovy.control.customizers.ASTTransformationCustomizer.findPhase(ASTTransformationCustomizer.groovy:226)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:64)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:564)
	at org.codehaus.groovy.reflection.CachedMethod.invoke(CachedMethod.java:93)
	at org.codehaus.groovy.runtime.callsite.StaticMetaMethodSite$StaticMetaMethodSiteNoUnwrapNoCoerce.invoke(StaticMetaMethodSite.java:151)
	at org.codehaus.groovy.runtime.callsite.StaticMetaMethodSite.callStatic(StaticMetaMethodSite.java:102)
	at org.codehaus.groovy.runtime.callsite.AbstractCallSite.callStatic(AbstractCallSite.java:214)
	at org.codehaus.groovy.control.customizers.ASTTransformationCustomizer.<init>(ASTTransformationCustomizer.groovy:180)
	at org.codehaus.groovy.control.customizers.ASTTransformationCustomizer.<init>(ASTTransformationCustomizer.groovy:188)
	at groovy.text.markup.MarkupTemplateEngine.<init>(MarkupTemplateEngine.java:94)
	at org.springframework.web.servlet.view.groovy.GroovyMarkupConfigurer.createTemplateEngine(GroovyMarkupConfigurer.java:160)
	at org.springframework.web.servlet.view.groovy.GroovyMarkupConfigurer.afterPropertiesSet(GroovyMarkupConfigurer.java:153)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1862)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1799)
	... 62 common frames omitted
2020-11-25 20:51:24,812 DEBUG  [main] BasicTypeRegistry: Adding type registration boolean -> org.hibernate.type.BooleanType@59127611
2020-11-25 20:51:24,817 DEBUG  [main] BasicTypeRegistry: Adding type registration boolean -> org.hibernate.type.BooleanType@59127611
2020-11-25 20:51:24,817 DEBUG  [main] BasicTypeRegistry: Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@59127611
2020-11-25 20:51:24,818 DEBUG  [main] BasicTypeRegistry: Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@18db3b3c
2020-11-25 20:51:24,818 DEBUG  [main] BasicTypeRegistry: Adding type registration true_false -> org.hibernate.type.TrueFalseType@5c1c9881
2020-11-25 20:51:24,819 DEBUG  [main] BasicTypeRegistry: Adding type registration yes_no -> org.hibernate.type.YesNoType@5d37aa0f
2020-11-25 20:51:24,819 DEBUG  [main] BasicTypeRegistry: Adding type registration byte -> org.hibernate.type.ByteType@3e4afd10
2020-11-25 20:51:24,819 DEBUG  [main] BasicTypeRegistry: Adding type registration byte -> org.hibernate.type.ByteType@3e4afd10
2020-11-25 20:51:24,820 DEBUG  [main] BasicTypeRegistry: Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@3e4afd10
2020-11-25 20:51:24,820 DEBUG  [main] BasicTypeRegistry: Adding type registration character -> org.hibernate.type.CharacterType@48d44b46
2020-11-25 20:51:24,820 DEBUG  [main] BasicTypeRegistry: Adding type registration char -> org.hibernate.type.CharacterType@48d44b46
2020-11-25 20:51:24,820 DEBUG  [main] BasicTypeRegistry: Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@48d44b46
2020-11-25 20:51:24,821 DEBUG  [main] BasicTypeRegistry: Adding type registration short -> org.hibernate.type.ShortType@dd20ebc
2020-11-25 20:51:24,821 DEBUG  [main] BasicTypeRegistry: Adding type registration short -> org.hibernate.type.ShortType@dd20ebc
2020-11-25 20:51:24,821 DEBUG  [main] BasicTypeRegistry: Adding type registration java.lang.Short -> org.hibernate.type.ShortType@dd20ebc
2020-11-25 20:51:24,821 DEBUG  [main] BasicTypeRegistry: Adding type registration integer -> org.hibernate.type.IntegerType@5f7cd50e
2020-11-25 20:51:24,821 DEBUG  [main] BasicTypeRegistry: Adding type registration int -> org.hibernate.type.IntegerType@5f7cd50e
2020-11-25 20:51:24,822 DEBUG  [main] BasicTypeRegistry: Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@5f7cd50e
2020-11-25 20:51:24,822 DEBUG  [main] BasicTypeRegistry: Adding type registration long -> org.hibernate.type.LongType@359e27d2
2020-11-25 20:51:24,822 DEBUG  [main] BasicTypeRegistry: Adding type registration long -> org.hibernate.type.LongType@359e27d2
2020-11-25 20:51:24,822 DEBUG  [main] BasicTypeRegistry: Adding type registration java.lang.Long -> org.hibernate.type.LongType@359e27d2
2020-11-25 20:51:24,822 DEBUG  [main] BasicTypeRegistry: Adding type registration float -> org.hibernate.type.FloatType@29b8df5
2020-11-25 20:51:24,823 DEBUG  [main] BasicTypeRegistry: Adding type registration float -> org.hibernate.type.FloatType@29b8df5
2020-11-25 20:51:24,823 DEBUG  [main] BasicTypeRegistry: Adding type registration java.lang.Float -> org.hibernate.type.FloatType@29b8df5
2020-11-25 20:51:24,823 DEBUG  [main] BasicTypeRegistry: Adding type registration double -> org.hibernate.type.DoubleType@36cfe107
2020-11-25 20:51:24,823 DEBUG  [main] BasicTypeRegistry: Adding type registration double -> org.hibernate.type.DoubleType@36cfe107
2020-11-25 20:51:24,824 DEBUG  [main] BasicTypeRegistry: Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@36cfe107
2020-11-25 20:51:24,824 DEBUG  [main] BasicTypeRegistry: Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@139089a4
2020-11-25 20:51:24,824 DEBUG  [main] BasicTypeRegistry: Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@139089a4
2020-11-25 20:51:24,824 DEBUG  [main] BasicTypeRegistry: Adding type registration big_integer -> org.hibernate.type.BigIntegerType@9f1ca74
2020-11-25 20:51:24,824 DEBUG  [main] BasicTypeRegistry: Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@9f1ca74
2020-11-25 20:51:24,825 DEBUG  [main] BasicTypeRegistry: Adding type registration string -> org.hibernate.type.StringType@393ae7a0
2020-11-25 20:51:24,825 DEBUG  [main] BasicTypeRegistry: Adding type registration java.lang.String -> org.hibernate.type.StringType@393ae7a0
2020-11-25 20:51:24,825 DEBUG  [main] BasicTypeRegistry: Adding type registration nstring -> org.hibernate.type.StringNVarcharType@7ee12d58
2020-11-25 20:51:24,826 DEBUG  [main] BasicTypeRegistry: Adding type registration ncharacter -> org.hibernate.type.CharacterNCharType@34e990cc
2020-11-25 20:51:24,826 DEBUG  [main] BasicTypeRegistry: Adding type registration url -> org.hibernate.type.UrlType@6de84336
2020-11-25 20:51:24,827 DEBUG  [main] BasicTypeRegistry: Adding type registration java.net.URL -> org.hibernate.type.UrlType@6de84336
2020-11-25 20:51:24,827 DEBUG  [main] BasicTypeRegistry: Adding type registration Duration -> org.hibernate.type.DurationType@69b37f5c
2020-11-25 20:51:24,828 DEBUG  [main] BasicTypeRegistry: Adding type registration java.time.Duration -> org.hibernate.type.DurationType@69b37f5c
2020-11-25 20:51:24,828 DEBUG  [main] BasicTypeRegistry: Adding type registration Instant -> org.hibernate.type.InstantType@580ffea
2020-11-25 20:51:24,828 DEBUG  [main] BasicTypeRegistry: Adding type registration java.time.Instant -> org.hibernate.type.InstantType@580ffea
2020-11-25 20:51:24,828 DEBUG  [main] BasicTypeRegistry: Adding type registration LocalDateTime -> org.hibernate.type.LocalDateTimeType@79d49790
2020-11-25 20:51:24,828 DEBUG  [main] BasicTypeRegistry: Adding type registration java.time.LocalDateTime -> org.hibernate.type.LocalDateTimeType@79d49790
2020-11-25 20:51:24,829 DEBUG  [main] BasicTypeRegistry: Adding type registration LocalDate -> org.hibernate.type.LocalDateType@3e9fb485
2020-11-25 20:51:24,829 DEBUG  [main] BasicTypeRegistry: Adding type registration java.time.LocalDate -> org.hibernate.type.LocalDateType@3e9fb485
2020-11-25 20:51:24,829 DEBUG  [main] BasicTypeRegistry: Adding type registration LocalTime -> org.hibernate.type.LocalTimeType@419f0ea
2020-11-25 20:51:24,829 DEBUG  [main] BasicTypeRegistry: Adding type registration java.time.LocalTime -> org.hibernate.type.LocalTimeType@419f0ea
2020-11-25 20:51:24,830 DEBUG  [main] BasicTypeRegistry: Adding type registration OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@87aec6a
2020-11-25 20:51:24,830 DEBUG  [main] BasicTypeRegistry: Adding type registration java.time.OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@87aec6a
2020-11-25 20:51:24,831 DEBUG  [main] BasicTypeRegistry: Adding type registration OffsetTime -> org.hibernate.type.OffsetTimeType@5529522f
2020-11-25 20:51:24,831 DEBUG  [main] BasicTypeRegistry: Adding type registration java.time.OffsetTime -> org.hibernate.type.OffsetTimeType@5529522f
2020-11-25 20:51:24,831 DEBUG  [main] BasicTypeRegistry: Adding type registration ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@152e7703
2020-11-25 20:51:24,831 DEBUG  [main] BasicTypeRegistry: Adding type registration java.time.ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@152e7703
2020-11-25 20:51:24,831 DEBUG  [main] BasicTypeRegistry: Adding type registration date -> org.hibernate.type.DateType@24fc2c80
2020-11-25 20:51:24,832 DEBUG  [main] BasicTypeRegistry: Adding type registration java.sql.Date -> org.hibernate.type.DateType@24fc2c80
2020-11-25 20:51:24,832 DEBUG  [main] BasicTypeRegistry: Adding type registration time -> org.hibernate.type.TimeType@48b3b1b8
2020-11-25 20:51:24,832 DEBUG  [main] BasicTypeRegistry: Adding type registration java.sql.Time -> org.hibernate.type.TimeType@48b3b1b8
2020-11-25 20:51:24,832 DEBUG  [main] BasicTypeRegistry: Adding type registration timestamp -> org.hibernate.type.TimestampType@686b1e2d
2020-11-25 20:51:24,833 DEBUG  [main] BasicTypeRegistry: Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@686b1e2d
2020-11-25 20:51:24,833 DEBUG  [main] BasicTypeRegistry: Adding type registration java.util.Date -> org.hibernate.type.TimestampType@686b1e2d
2020-11-25 20:51:24,833 DEBUG  [main] BasicTypeRegistry: Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@652b3733
2020-11-25 20:51:24,833 DEBUG  [main] BasicTypeRegistry: Adding type registration calendar -> org.hibernate.type.CalendarType@5be7b749
2020-11-25 20:51:24,834 DEBUG  [main] BasicTypeRegistry: Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@5be7b749
2020-11-25 20:51:24,834 DEBUG  [main] BasicTypeRegistry: Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@5be7b749
2020-11-25 20:51:24,834 DEBUG  [main] BasicTypeRegistry: Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@177ddd24
2020-11-25 20:51:24,834 DEBUG  [main] BasicTypeRegistry: Adding type registration locale -> org.hibernate.type.LocaleType@61ad30f6
2020-11-25 20:51:24,834 DEBUG  [main] BasicTypeRegistry: Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@61ad30f6
2020-11-25 20:51:24,834 DEBUG  [main] BasicTypeRegistry: Adding type registration currency -> org.hibernate.type.CurrencyType@574ebdaf
2020-11-25 20:51:24,835 DEBUG  [main] BasicTypeRegistry: Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@574ebdaf
2020-11-25 20:51:24,835 DEBUG  [main] BasicTypeRegistry: Adding type registration timezone -> org.hibernate.type.TimeZoneType@123ca460
2020-11-25 20:51:24,835 DEBUG  [main] BasicTypeRegistry: Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@123ca460
2020-11-25 20:51:24,835 DEBUG  [main] BasicTypeRegistry: Adding type registration class -> org.hibernate.type.ClassType@3c9f4376
2020-11-25 20:51:24,842 DEBUG  [main] BasicTypeRegistry: Adding type registration java.lang.Class -> org.hibernate.type.ClassType@3c9f4376
2020-11-25 20:51:24,843 DEBUG  [main] BasicTypeRegistry: Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@1958c0d9
2020-11-25 20:51:24,844 DEBUG  [main] BasicTypeRegistry: Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@1958c0d9
2020-11-25 20:51:24,844 DEBUG  [main] BasicTypeRegistry: Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@5fc7255c
2020-11-25 20:51:24,845 DEBUG  [main] BasicTypeRegistry: Adding type registration binary -> org.hibernate.type.BinaryType@79ba0285
2020-11-25 20:51:24,845 DEBUG  [main] BasicTypeRegistry: Adding type registration byte[] -> org.hibernate.type.BinaryType@79ba0285
2020-11-25 20:51:24,846 DEBUG  [main] BasicTypeRegistry: Adding type registration [B -> org.hibernate.type.BinaryType@79ba0285
2020-11-25 20:51:24,846 DEBUG  [main] BasicTypeRegistry: Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@598778cc
2020-11-25 20:51:24,846 DEBUG  [main] BasicTypeRegistry: Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@598778cc
2020-11-25 20:51:24,847 DEBUG  [main] BasicTypeRegistry: Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@598778cc
2020-11-25 20:51:24,847 DEBUG  [main] BasicTypeRegistry: Adding type registration row_version -> org.hibernate.type.RowVersionType@11cadb32
2020-11-25 20:51:24,847 DEBUG  [main] BasicTypeRegistry: Adding type registration image -> org.hibernate.type.ImageType@37986daf
2020-11-25 20:51:24,847 DEBUG  [main] BasicTypeRegistry: Adding type registration characters -> org.hibernate.type.CharArrayType@710afd47
2020-11-25 20:51:24,847 DEBUG  [main] BasicTypeRegistry: Adding type registration char[] -> org.hibernate.type.CharArrayType@710afd47
2020-11-25 20:51:24,848 DEBUG  [main] BasicTypeRegistry: Adding type registration [C -> org.hibernate.type.CharArrayType@710afd47
2020-11-25 20:51:24,848 DEBUG  [main] BasicTypeRegistry: Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@12670e55
2020-11-25 20:51:24,848 DEBUG  [main] BasicTypeRegistry: Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@12670e55
2020-11-25 20:51:24,848 DEBUG  [main] BasicTypeRegistry: Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@12670e55
2020-11-25 20:51:24,849 DEBUG  [main] BasicTypeRegistry: Adding type registration text -> org.hibernate.type.TextType@32ba5c65
2020-11-25 20:51:24,849 DEBUG  [main] BasicTypeRegistry: Adding type registration ntext -> org.hibernate.type.NTextType@10166230
2020-11-25 20:51:24,849 DEBUG  [main] BasicTypeRegistry: Adding type registration blob -> org.hibernate.type.BlobType@13dd7887
2020-11-25 20:51:24,849 DEBUG  [main] BasicTypeRegistry: Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@13dd7887
2020-11-25 20:51:24,849 DEBUG  [main] BasicTypeRegistry: Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@3cbfdf5c
2020-11-25 20:51:24,849 DEBUG  [main] BasicTypeRegistry: Adding type registration clob -> org.hibernate.type.ClobType@58636b50
2020-11-25 20:51:24,850 DEBUG  [main] BasicTypeRegistry: Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@58636b50
2020-11-25 20:51:24,850 DEBUG  [main] BasicTypeRegistry: Adding type registration nclob -> org.hibernate.type.NClobType@1e5aacd9
2020-11-25 20:51:24,850 DEBUG  [main] BasicTypeRegistry: Adding type registration java.sql.NClob -> org.hibernate.type.NClobType@1e5aacd9
2020-11-25 20:51:24,850 DEBUG  [main] BasicTypeRegistry: Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@120411ec
2020-11-25 20:51:24,853 DEBUG  [main] BasicTypeRegistry: Adding type registration materialized_nclob -> org.hibernate.type.MaterializedNClobType@1a34a51e
2020-11-25 20:51:24,853 DEBUG  [main] BasicTypeRegistry: Adding type registration serializable -> org.hibernate.type.SerializableType@6b091a92
2020-11-25 20:51:24,854 DEBUG  [main] BasicTypeRegistry: Adding type registration object -> org.hibernate.type.ObjectType@35329a05
2020-11-25 20:51:24,854 DEBUG  [main] BasicTypeRegistry: Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@35329a05
2020-11-25 20:51:24,854 DEBUG  [main] BasicTypeRegistry: Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@c53c04e
2020-11-25 20:51:24,854 DEBUG  [main] BasicTypeRegistry: Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@18f493d7
2020-11-25 20:51:24,854 DEBUG  [main] BasicTypeRegistry: Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@2d036335
2020-11-25 20:51:24,855 DEBUG  [main] BasicTypeRegistry: Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@4a3e1b5d
2020-11-25 20:51:24,855 DEBUG  [main] BasicTypeRegistry: Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@587df3e4
2020-11-25 20:51:24,855 DEBUG  [main] BasicTypeRegistry: Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@64abb917
2020-11-25 20:51:24,855 DEBUG  [main] BasicTypeRegistry: Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@5207747c
2020-11-25 20:51:24,856 DEBUG  [main] BasicTypeRegistry: Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@68596992
2020-11-25 20:51:24,874 DEBUG  [main] TypeConfiguration$Scope: Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@5295779] to MetadataBuildingContext [org.hibernate.boot.internal.MetadataBuildingContextRootImpl@5ed6a36a]
2020-11-25 20:51:24,885 DEBUG  [main] EnumType: Using NAMED-based conversion for Enum com.sf.back.entities.Kind
2020-11-25 20:51:24,887 DEBUG  [main] EnumType: Using NAMED-based conversion for Enum com.sf.back.entities.Kind
2020-11-25 20:51:24,907 DEBUG  [main] TypeConfiguration$Scope: Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@5295779] to SessionFactoryImpl [org.hibernate.internal.SessionFactoryImpl@76ac3ad0]
2020-11-25 20:51:24,907 DEBUG  [main] EnumType: Using NAMED-based conversion for Enum com.sf.back.entities.Kind
2020-11-25 20:51:24,908 DEBUG  [main] EnumType: Using NAMED-based conversion for Enum com.sf.back.entities.Kind
2020-11-25 20:51:24,932 DEBUG  [main] EnumType: Using NAMED-based conversion for Enum com.sf.back.entities.Kind
2020-11-25 20:51:24,934 DEBUG  [main] EnumType: Using NAMED-based conversion for Enum com.sf.back.entities.Kind
2020-11-25 20:51:24,961 DEBUG  [main] EnumType: Using NAMED-based conversion for Enum com.sf.back.entities.Kind
2020-11-25 20:51:24,962 DEBUG  [main] EnumType: Using NAMED-based conversion for Enum com.sf.back.entities.Kind
2020-11-25 20:51:24,969 DEBUG  [main] EnumType: Using NAMED-based conversion for Enum com.sf.back.entities.Kind
2020-11-25 20:51:24,978 TRACE  [main] TypeConfiguration$Scope: Handling #sessionFactoryCreated from [org.hibernate.internal.SessionFactoryImpl@76ac3ad0] for TypeConfiguration
2020-11-25 20:51:25,111 WARN   [main] JpaBaseConfiguration$JpaWebConfiguration: spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2020-11-25 20:51:25,227 WARN   [main] GenericWebApplicationContext: Exception encountered during context initialization - cancelling refresh attempt: org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'groovyMarkupConfigurer' defined in class path resource [org/springframework/boot/autoconfigure/groovy/template/GroovyTemplateAutoConfiguration$GroovyMarkupConfiguration.class]: Invocation of init method failed; nested exception is java.lang.reflect.InaccessibleObjectException: Unable to make jdk.internal.loader.ClassLoaders$AppClassLoader(jdk.internal.loader.ClassLoaders$PlatformClassLoader,jdk.internal.loader.URLClassPath) accessible: module java.base does not "opens jdk.internal.loader" to unnamed module @5fcacc0
2020-11-25 20:51:25,232 TRACE  [main] TypeConfiguration$Scope: Handling #sessionFactoryClosed from [org.hibernate.internal.SessionFactoryImpl@76ac3ad0] for TypeConfiguration
2020-11-25 20:51:25,232 DEBUG  [main] TypeConfiguration$Scope: Un-scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration$Scope@40bac624] from SessionFactory [org.hibernate.internal.SessionFactoryImpl@76ac3ad0]
2020-11-25 20:51:25,239 ERROR  [main] SpringApplication: Application run failed
org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'groovyMarkupConfigurer' defined in class path resource [org/springframework/boot/autoconfigure/groovy/template/GroovyTemplateAutoConfiguration$GroovyMarkupConfiguration.class]: Invocation of init method failed; nested exception is java.lang.reflect.InaccessibleObjectException: Unable to make jdk.internal.loader.ClassLoaders$AppClassLoader(jdk.internal.loader.ClassLoaders$PlatformClassLoader,jdk.internal.loader.URLClassPath) accessible: module java.base does not "opens jdk.internal.loader" to unnamed module @5fcacc0
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1803)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:595)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:517)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:323)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:222)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:321)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:202)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(DefaultListableBeanFactory.java:879)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:878)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:550)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:747)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:397)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:315)
	at org.springframework.boot.test.context.SpringBootContextLoader.loadContext(SpringBootContextLoader.java:125)
	at org.springframework.test.context.cache.DefaultCacheAwareContextLoaderDelegate.loadContextInternal(DefaultCacheAwareContextLoaderDelegate.java:99)
	at org.springframework.test.context.cache.DefaultCacheAwareContextLoaderDelegate.loadContext(DefaultCacheAwareContextLoaderDelegate.java:124)
	at org.springframework.test.context.support.DefaultTestContext.getApplicationContext(DefaultTestContext.java:123)
	at org.springframework.test.context.web.ServletTestExecutionListener.setUpRequestContextIfNecessary(ServletTestExecutionListener.java:190)
	at org.springframework.test.context.web.ServletTestExecutionListener.prepareTestInstance(ServletTestExecutionListener.java:132)
	at org.springframework.test.context.TestContextManager.prepareTestInstance(TestContextManager.java:244)
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner.createTest(SpringJUnit4ClassRunner.java:227)
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner$1.runReflectiveCall(SpringJUnit4ClassRunner.java:289)
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner.methodBlock(SpringJUnit4ClassRunner.java:291)
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner.runChild(SpringJUnit4ClassRunner.java:246)
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner.runChild(SpringJUnit4ClassRunner.java:97)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:290)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:71)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:58)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268)
	at org.junit.internal.runners.statements.RunBefores.evaluate(RunBefores.java:26)
	at org.springframework.test.context.junit4.statements.RunBeforeTestClassCallbacks.evaluate(RunBeforeTestClassCallbacks.java:61)
	at org.junit.internal.runners.statements.RunAfters.evaluate(RunAfters.java:27)
	at org.springframework.test.context.junit4.statements.RunAfterTestClassCallbacks.evaluate(RunAfterTestClassCallbacks.java:70)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:363)
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner.run(SpringJUnit4ClassRunner.java:190)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:137)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:115)
	at org.junit.vintage.engine.execution.RunnerExecutor.execute(RunnerExecutor.java:40)
	at java.base/java.util.stream.ForEachOps$ForEachOp$OfRef.accept(ForEachOps.java:183)
	at java.base/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:195)
	at java.base/java.util.Iterator.forEachRemaining(Iterator.java:133)
	at java.base/java.util.Spliterators$IteratorSpliterator.forEachRemaining(Spliterators.java:1801)
	at java.base/java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:484)
	at java.base/java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:474)
	at java.base/java.util.stream.ForEachOps$ForEachOp.evaluateSequential(ForEachOps.java:150)
	at java.base/java.util.stream.ForEachOps$ForEachOp$OfRef.evaluateSequential(ForEachOps.java:173)
	at java.base/java.util.stream.AbstractPipeline.evaluate(AbstractPipeline.java:234)
	at java.base/java.util.stream.ReferencePipeline.forEach(ReferencePipeline.java:497)
	at org.junit.vintage.engine.VintageTestEngine.executeAllChildren(VintageTestEngine.java:80)
	at org.junit.vintage.engine.VintageTestEngine.execute(VintageTestEngine.java:71)
	at org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:220)
	at org.junit.platform.launcher.core.DefaultLauncher.lambda$execute$6(DefaultLauncher.java:188)
	at org.junit.platform.launcher.core.DefaultLauncher.withInterceptedStreams(DefaultLauncher.java:202)
	at org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:181)
	at org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:128)
	at org.apache.maven.surefire.junitplatform.JUnitPlatformProvider.invokeAllTests(JUnitPlatformProvider.java:150)
	at org.apache.maven.surefire.junitplatform.JUnitPlatformProvider.invoke(JUnitPlatformProvider.java:124)
	at org.apache.maven.surefire.booter.ForkedBooter.invokeProviderInSameClassLoader(ForkedBooter.java:384)
	at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:345)
	at org.apache.maven.surefire.booter.ForkedBooter.execute(ForkedBooter.java:126)
	at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:418)
Caused by: java.lang.reflect.InaccessibleObjectException: Unable to make jdk.internal.loader.ClassLoaders$AppClassLoader(jdk.internal.loader.ClassLoaders$PlatformClassLoader,jdk.internal.loader.URLClassPath) accessible: module java.base does not "opens jdk.internal.loader" to unnamed module @5fcacc0
	at java.base/java.lang.reflect.AccessibleObject.checkCanSetAccessible(AccessibleObject.java:361)
	at java.base/java.lang.reflect.AccessibleObject.checkCanSetAccessible(AccessibleObject.java:301)
	at java.base/java.lang.reflect.Constructor.checkCanSetAccessible(Constructor.java:189)
	at java.base/java.lang.reflect.Constructor.setAccessible(Constructor.java:182)
	at org.codehaus.groovy.reflection.CachedConstructor$1.run(CachedConstructor.java:44)
	at java.base/java.security.AccessController.doPrivileged(AccessController.java:312)
	at org.codehaus.groovy.reflection.CachedConstructor.<init>(CachedConstructor.java:42)
	at org.codehaus.groovy.reflection.CachedClass$2.initValue(CachedClass.java:79)
	at org.codehaus.groovy.reflection.CachedClass$2.initValue(CachedClass.java:69)
	at org.codehaus.groovy.util.LazyReference.getLocked(LazyReference.java:49)
	at org.codehaus.groovy.util.LazyReference.get(LazyReference.java:36)
	at org.codehaus.groovy.reflection.CachedClass.getConstructors(CachedClass.java:268)
	at groovy.lang.MetaClassImpl.<init>(MetaClassImpl.java:218)
	at groovy.lang.MetaClassImpl.<init>(MetaClassImpl.java:228)
	at groovy.lang.MetaClassRegistry$MetaClassCreationHandle.createNormalMetaClass(MetaClassRegistry.java:171)
	at groovy.lang.MetaClassRegistry$MetaClassCreationHandle.createWithCustomLookup(MetaClassRegistry.java:161)
	at groovy.lang.MetaClassRegistry$MetaClassCreationHandle.create(MetaClassRegistry.java:144)
	at org.codehaus.groovy.reflection.ClassInfo.getMetaClassUnderLock(ClassInfo.java:253)
	at org.codehaus.groovy.reflection.ClassInfo.getMetaClass(ClassInfo.java:285)
	at org.codehaus.groovy.reflection.ClassInfo.getMetaClass(ClassInfo.java:295)
	at org.codehaus.groovy.runtime.metaclass.MetaClassRegistryImpl.getMetaClass(MetaClassRegistryImpl.java:261)
	at org.codehaus.groovy.runtime.InvokerHelper.getMetaClass(InvokerHelper.java:873)
	at org.codehaus.groovy.runtime.InvokerHelper.invokePojoMethod(InvokerHelper.java:906)
	at org.codehaus.groovy.runtime.InvokerHelper.invokeMethod(InvokerHelper.java:898)
	at org.codehaus.groovy.runtime.typehandling.DefaultTypeTransformation.castToBoolean(DefaultTypeTransformation.java:185)
	at org.codehaus.groovy.runtime.typehandling.DefaultTypeTransformation.booleanUnbox(DefaultTypeTransformation.java:74)
	at org.codehaus.groovy.control.customizers.ASTTransformationCustomizer.findASTTranformationClass(ASTTransformationCustomizer.groovy:209)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:64)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:564)
	at org.codehaus.groovy.reflection.CachedMethod.invoke(CachedMethod.java:93)
	at org.codehaus.groovy.runtime.callsite.StaticMetaMethodSite$StaticMetaMethodSiteNoUnwrapNoCoerce.invoke(StaticMetaMethodSite.java:151)
	at org.codehaus.groovy.runtime.callsite.StaticMetaMethodSite.callStatic(StaticMetaMethodSite.java:102)
	at org.codehaus.groovy.runtime.callsite.AbstractCallSite.callStatic(AbstractCallSite.java:214)
	at org.codehaus.groovy.control.customizers.ASTTransformationCustomizer.findPhase(ASTTransformationCustomizer.groovy:226)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:64)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:564)
	at org.codehaus.groovy.reflection.CachedMethod.invoke(CachedMethod.java:93)
	at org.codehaus.groovy.runtime.callsite.StaticMetaMethodSite$StaticMetaMethodSiteNoUnwrapNoCoerce.invoke(StaticMetaMethodSite.java:151)
	at org.codehaus.groovy.runtime.callsite.StaticMetaMethodSite.callStatic(StaticMetaMethodSite.java:102)
	at org.codehaus.groovy.runtime.callsite.AbstractCallSite.callStatic(AbstractCallSite.java:214)
	at org.codehaus.groovy.control.customizers.ASTTransformationCustomizer.<init>(ASTTransformationCustomizer.groovy:180)
	at org.codehaus.groovy.control.customizers.ASTTransformationCustomizer.<init>(ASTTransformationCustomizer.groovy:188)
	at groovy.text.markup.MarkupTemplateEngine.<init>(MarkupTemplateEngine.java:94)
	at org.springframework.web.servlet.view.groovy.GroovyMarkupConfigurer.createTemplateEngine(GroovyMarkupConfigurer.java:160)
	at org.springframework.web.servlet.view.groovy.GroovyMarkupConfigurer.afterPropertiesSet(GroovyMarkupConfigurer.java:153)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1862)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1799)
	... 62 common frames omitted
2020-11-25 20:51:25,240 ERROR  [main] TestContextManager: Caught exception while allowing TestExecutionListener [org.springframework.test.context.web.ServletTestExecutionListener@46c093b4] to prepare test instance [com.sf.math.algebra.solvers.PolynomialSolverIntervalTest@1c8746a0]
java.lang.IllegalStateException: Failed to load ApplicationContext
	at org.springframework.test.context.cache.DefaultCacheAwareContextLoaderDelegate.loadContext(DefaultCacheAwareContextLoaderDelegate.java:132)
	at org.springframework.test.context.support.DefaultTestContext.getApplicationContext(DefaultTestContext.java:123)
	at org.springframework.test.context.web.ServletTestExecutionListener.setUpRequestContextIfNecessary(ServletTestExecutionListener.java:190)
	at org.springframework.test.context.web.ServletTestExecutionListener.prepareTestInstance(ServletTestExecutionListener.java:132)
	at org.springframework.test.context.TestContextManager.prepareTestInstance(TestContextManager.java:244)
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner.createTest(SpringJUnit4ClassRunner.java:227)
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner$1.runReflectiveCall(SpringJUnit4ClassRunner.java:289)
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner.methodBlock(SpringJUnit4ClassRunner.java:291)
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner.runChild(SpringJUnit4ClassRunner.java:246)
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner.runChild(SpringJUnit4ClassRunner.java:97)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:290)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:71)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:58)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268)
	at org.junit.internal.runners.statements.RunBefores.evaluate(RunBefores.java:26)
	at org.springframework.test.context.junit4.statements.RunBeforeTestClassCallbacks.evaluate(RunBeforeTestClassCallbacks.java:61)
	at org.junit.internal.runners.statements.RunAfters.evaluate(RunAfters.java:27)
	at org.springframework.test.context.junit4.statements.RunAfterTestClassCallbacks.evaluate(RunAfterTestClassCallbacks.java:70)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:363)
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner.run(SpringJUnit4ClassRunner.java:190)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:137)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:115)
	at org.junit.vintage.engine.execution.RunnerExecutor.execute(RunnerExecutor.java:40)
	at java.base/java.util.stream.ForEachOps$ForEachOp$OfRef.accept(ForEachOps.java:183)
	at java.base/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:195)
	at java.base/java.util.Iterator.forEachRemaining(Iterator.java:133)
	at java.base/java.util.Spliterators$IteratorSpliterator.forEachRemaining(Spliterators.java:1801)
	at java.base/java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:484)
	at java.base/java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:474)
	at java.base/java.util.stream.ForEachOps$ForEachOp.evaluateSequential(ForEachOps.java:150)
	at java.base/java.util.stream.ForEachOps$ForEachOp$OfRef.evaluateSequential(ForEachOps.java:173)
	at java.base/java.util.stream.AbstractPipeline.evaluate(AbstractPipeline.java:234)
	at java.base/java.util.stream.ReferencePipeline.forEach(ReferencePipeline.java:497)
	at org.junit.vintage.engine.VintageTestEngine.executeAllChildren(VintageTestEngine.java:80)
	at org.junit.vintage.engine.VintageTestEngine.execute(VintageTestEngine.java:71)
	at org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:220)
	at org.junit.platform.launcher.core.DefaultLauncher.lambda$execute$6(DefaultLauncher.java:188)
	at org.junit.platform.launcher.core.DefaultLauncher.withInterceptedStreams(DefaultLauncher.java:202)
	at org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:181)
	at org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:128)
	at org.apache.maven.surefire.junitplatform.JUnitPlatformProvider.invokeAllTests(JUnitPlatformProvider.java:150)
	at org.apache.maven.surefire.junitplatform.JUnitPlatformProvider.invoke(JUnitPlatformProvider.java:124)
	at org.apache.maven.surefire.booter.ForkedBooter.invokeProviderInSameClassLoader(ForkedBooter.java:384)
	at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:345)
	at org.apache.maven.surefire.booter.ForkedBooter.execute(ForkedBooter.java:126)
	at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:418)
Caused by: org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'groovyMarkupConfigurer' defined in class path resource [org/springframework/boot/autoconfigure/groovy/template/GroovyTemplateAutoConfiguration$GroovyMarkupConfiguration.class]: Invocation of init method failed; nested exception is java.lang.reflect.InaccessibleObjectException: Unable to make jdk.internal.loader.ClassLoaders$AppClassLoader(jdk.internal.loader.ClassLoaders$PlatformClassLoader,jdk.internal.loader.URLClassPath) accessible: module java.base does not "opens jdk.internal.loader" to unnamed module @5fcacc0
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1803)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:595)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:517)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:323)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:222)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:321)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:202)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(DefaultListableBeanFactory.java:879)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:878)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:550)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:747)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:397)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:315)
	at org.springframework.boot.test.context.SpringBootContextLoader.loadContext(SpringBootContextLoader.java:125)
	at org.springframework.test.context.cache.DefaultCacheAwareContextLoaderDelegate.loadContextInternal(DefaultCacheAwareContextLoaderDelegate.java:99)
	at org.springframework.test.context.cache.DefaultCacheAwareContextLoaderDelegate.loadContext(DefaultCacheAwareContextLoaderDelegate.java:124)
	... 47 common frames omitted
Caused by: java.lang.reflect.InaccessibleObjectException: Unable to make jdk.internal.loader.ClassLoaders$AppClassLoader(jdk.internal.loader.ClassLoaders$PlatformClassLoader,jdk.internal.loader.URLClassPath) accessible: module java.base does not "opens jdk.internal.loader" to unnamed module @5fcacc0
	at java.base/java.lang.reflect.AccessibleObject.checkCanSetAccessible(AccessibleObject.java:361)
	at java.base/java.lang.reflect.AccessibleObject.checkCanSetAccessible(AccessibleObject.java:301)
	at java.base/java.lang.reflect.Constructor.checkCanSetAccessible(Constructor.java:189)
	at java.base/java.lang.reflect.Constructor.setAccessible(Constructor.java:182)
	at org.codehaus.groovy.reflection.CachedConstructor$1.run(CachedConstructor.java:44)
	at java.base/java.security.AccessController.doPrivileged(AccessController.java:312)
	at org.codehaus.groovy.reflection.CachedConstructor.<init>(CachedConstructor.java:42)
	at org.codehaus.groovy.reflection.CachedClass$2.initValue(CachedClass.java:79)
	at org.codehaus.groovy.reflection.CachedClass$2.initValue(CachedClass.java:69)
	at org.codehaus.groovy.util.LazyReference.getLocked(LazyReference.java:49)
	at org.codehaus.groovy.util.LazyReference.get(LazyReference.java:36)
	at org.codehaus.groovy.reflection.CachedClass.getConstructors(CachedClass.java:268)
	at groovy.lang.MetaClassImpl.<init>(MetaClassImpl.java:218)
	at groovy.lang.MetaClassImpl.<init>(MetaClassImpl.java:228)
	at groovy.lang.MetaClassRegistry$MetaClassCreationHandle.createNormalMetaClass(MetaClassRegistry.java:171)
	at groovy.lang.MetaClassRegistry$MetaClassCreationHandle.createWithCustomLookup(MetaClassRegistry.java:161)
	at groovy.lang.MetaClassRegistry$MetaClassCreationHandle.create(MetaClassRegistry.java:144)
	at org.codehaus.groovy.reflection.ClassInfo.getMetaClassUnderLock(ClassInfo.java:253)
	at org.codehaus.groovy.reflection.ClassInfo.getMetaClass(ClassInfo.java:285)
	at org.codehaus.groovy.reflection.ClassInfo.getMetaClass(ClassInfo.java:295)
	at org.codehaus.groovy.runtime.metaclass.MetaClassRegistryImpl.getMetaClass(MetaClassRegistryImpl.java:261)
	at org.codehaus.groovy.runtime.InvokerHelper.getMetaClass(InvokerHelper.java:873)
	at org.codehaus.groovy.runtime.InvokerHelper.invokePojoMethod(InvokerHelper.java:906)
	at org.codehaus.groovy.runtime.InvokerHelper.invokeMethod(InvokerHelper.java:898)
	at org.codehaus.groovy.runtime.typehandling.DefaultTypeTransformation.castToBoolean(DefaultTypeTransformation.java:185)
	at org.codehaus.groovy.runtime.typehandling.DefaultTypeTransformation.booleanUnbox(DefaultTypeTransformation.java:74)
	at org.codehaus.groovy.control.customizers.ASTTransformationCustomizer.findASTTranformationClass(ASTTransformationCustomizer.groovy:209)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:64)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:564)
	at org.codehaus.groovy.reflection.CachedMethod.invoke(CachedMethod.java:93)
	at org.codehaus.groovy.runtime.callsite.StaticMetaMethodSite$StaticMetaMethodSiteNoUnwrapNoCoerce.invoke(StaticMetaMethodSite.java:151)
	at org.codehaus.groovy.runtime.callsite.StaticMetaMethodSite.callStatic(StaticMetaMethodSite.java:102)
	at org.codehaus.groovy.runtime.callsite.AbstractCallSite.callStatic(AbstractCallSite.java:214)
	at org.codehaus.groovy.control.customizers.ASTTransformationCustomizer.findPhase(ASTTransformationCustomizer.groovy:226)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:64)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:564)
	at org.codehaus.groovy.reflection.CachedMethod.invoke(CachedMethod.java:93)
	at org.codehaus.groovy.runtime.callsite.StaticMetaMethodSite$StaticMetaMethodSiteNoUnwrapNoCoerce.invoke(StaticMetaMethodSite.java:151)
	at org.codehaus.groovy.runtime.callsite.StaticMetaMethodSite.callStatic(StaticMetaMethodSite.java:102)
	at org.codehaus.groovy.runtime.callsite.AbstractCallSite.callStatic(AbstractCallSite.java:214)
	at org.codehaus.groovy.control.customizers.ASTTransformationCustomizer.<init>(ASTTransformationCustomizer.groovy:180)
	at org.codehaus.groovy.control.customizers.ASTTransformationCustomizer.<init>(ASTTransformationCustomizer.groovy:188)
	at groovy.text.markup.MarkupTemplateEngine.<init>(MarkupTemplateEngine.java:94)
	at org.springframework.web.servlet.view.groovy.GroovyMarkupConfigurer.createTemplateEngine(GroovyMarkupConfigurer.java:160)
	at org.springframework.web.servlet.view.groovy.GroovyMarkupConfigurer.afterPropertiesSet(GroovyMarkupConfigurer.java:153)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1862)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1799)
	... 62 common frames omitted
2020-11-25 20:51:25,792 DEBUG  [main] BasicTypeRegistry: Adding type registration boolean -> org.hibernate.type.BooleanType@59127611
2020-11-25 20:51:25,796 DEBUG  [main] BasicTypeRegistry: Adding type registration boolean -> org.hibernate.type.BooleanType@59127611
2020-11-25 20:51:25,804 DEBUG  [main] BasicTypeRegistry: Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@59127611
2020-11-25 20:51:25,804 DEBUG  [main] BasicTypeRegistry: Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@18db3b3c
2020-11-25 20:51:25,806 DEBUG  [main] BasicTypeRegistry: Adding type registration true_false -> org.hibernate.type.TrueFalseType@5c1c9881
2020-11-25 20:51:25,807 DEBUG  [main] BasicTypeRegistry: Adding type registration yes_no -> org.hibernate.type.YesNoType@5d37aa0f
2020-11-25 20:51:25,809 DEBUG  [main] BasicTypeRegistry: Adding type registration byte -> org.hibernate.type.ByteType@3e4afd10
2020-11-25 20:51:25,809 DEBUG  [main] BasicTypeRegistry: Adding type registration byte -> org.hibernate.type.ByteType@3e4afd10
2020-11-25 20:51:25,810 DEBUG  [main] BasicTypeRegistry: Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@3e4afd10
2020-11-25 20:51:25,810 DEBUG  [main] BasicTypeRegistry: Adding type registration character -> org.hibernate.type.CharacterType@48d44b46
2020-11-25 20:51:25,811 DEBUG  [main] BasicTypeRegistry: Adding type registration char -> org.hibernate.type.CharacterType@48d44b46
2020-11-25 20:51:25,812 DEBUG  [main] BasicTypeRegistry: Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@48d44b46
2020-11-25 20:51:25,812 DEBUG  [main] BasicTypeRegistry: Adding type registration short -> org.hibernate.type.ShortType@dd20ebc
2020-11-25 20:51:25,813 DEBUG  [main] BasicTypeRegistry: Adding type registration short -> org.hibernate.type.ShortType@dd20ebc
2020-11-25 20:51:25,813 DEBUG  [main] BasicTypeRegistry: Adding type registration java.lang.Short -> org.hibernate.type.ShortType@dd20ebc
2020-11-25 20:51:25,813 DEBUG  [main] BasicTypeRegistry: Adding type registration integer -> org.hibernate.type.IntegerType@5f7cd50e
2020-11-25 20:51:25,813 DEBUG  [main] BasicTypeRegistry: Adding type registration int -> org.hibernate.type.IntegerType@5f7cd50e
2020-11-25 20:51:25,813 DEBUG  [main] BasicTypeRegistry: Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@5f7cd50e
2020-11-25 20:51:25,814 DEBUG  [main] BasicTypeRegistry: Adding type registration long -> org.hibernate.type.LongType@359e27d2
2020-11-25 20:51:25,814 DEBUG  [main] BasicTypeRegistry: Adding type registration long -> org.hibernate.type.LongType@359e27d2
2020-11-25 20:51:25,814 DEBUG  [main] BasicTypeRegistry: Adding type registration java.lang.Long -> org.hibernate.type.LongType@359e27d2
2020-11-25 20:51:25,814 DEBUG  [main] BasicTypeRegistry: Adding type registration float -> org.hibernate.type.FloatType@29b8df5
2020-11-25 20:51:25,814 DEBUG  [main] BasicTypeRegistry: Adding type registration float -> org.hibernate.type.FloatType@29b8df5
2020-11-25 20:51:25,815 DEBUG  [main] BasicTypeRegistry: Adding type registration java.lang.Float -> org.hibernate.type.FloatType@29b8df5
2020-11-25 20:51:25,815 DEBUG  [main] BasicTypeRegistry: Adding type registration double -> org.hibernate.type.DoubleType@36cfe107
2020-11-25 20:51:25,815 DEBUG  [main] BasicTypeRegistry: Adding type registration double -> org.hibernate.type.DoubleType@36cfe107
2020-11-25 20:51:25,815 DEBUG  [main] BasicTypeRegistry: Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@36cfe107
2020-11-25 20:51:25,815 DEBUG  [main] BasicTypeRegistry: Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@139089a4
2020-11-25 20:51:25,815 DEBUG  [main] BasicTypeRegistry: Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@139089a4
2020-11-25 20:51:25,816 DEBUG  [main] BasicTypeRegistry: Adding type registration big_integer -> org.hibernate.type.BigIntegerType@9f1ca74
2020-11-25 20:51:25,816 DEBUG  [main] BasicTypeRegistry: Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@9f1ca74
2020-11-25 20:51:25,816 DEBUG  [main] BasicTypeRegistry: Adding type registration string -> org.hibernate.type.StringType@393ae7a0
2020-11-25 20:51:25,816 DEBUG  [main] BasicTypeRegistry: Adding type registration java.lang.String -> org.hibernate.type.StringType@393ae7a0
2020-11-25 20:51:25,816 DEBUG  [main] BasicTypeRegistry: Adding type registration nstring -> org.hibernate.type.StringNVarcharType@7ee12d58
2020-11-25 20:51:25,816 DEBUG  [main] BasicTypeRegistry: Adding type registration ncharacter -> org.hibernate.type.CharacterNCharType@34e990cc
2020-11-25 20:51:25,816 DEBUG  [main] BasicTypeRegistry: Adding type registration url -> org.hibernate.type.UrlType@6de84336
2020-11-25 20:51:25,817 DEBUG  [main] BasicTypeRegistry: Adding type registration java.net.URL -> org.hibernate.type.UrlType@6de84336
2020-11-25 20:51:25,817 DEBUG  [main] BasicTypeRegistry: Adding type registration Duration -> org.hibernate.type.DurationType@69b37f5c
2020-11-25 20:51:25,817 DEBUG  [main] BasicTypeRegistry: Adding type registration java.time.Duration -> org.hibernate.type.DurationType@69b37f5c
2020-11-25 20:51:25,817 DEBUG  [main] BasicTypeRegistry: Adding type registration Instant -> org.hibernate.type.InstantType@580ffea
2020-11-25 20:51:25,818 DEBUG  [main] BasicTypeRegistry: Adding type registration java.time.Instant -> org.hibernate.type.InstantType@580ffea
2020-11-25 20:51:25,818 DEBUG  [main] BasicTypeRegistry: Adding type registration LocalDateTime -> org.hibernate.type.LocalDateTimeType@79d49790
2020-11-25 20:51:25,818 DEBUG  [main] BasicTypeRegistry: Adding type registration java.time.LocalDateTime -> org.hibernate.type.LocalDateTimeType@79d49790
2020-11-25 20:51:25,819 DEBUG  [main] BasicTypeRegistry: Adding type registration LocalDate -> org.hibernate.type.LocalDateType@3e9fb485
2020-11-25 20:51:25,819 DEBUG  [main] BasicTypeRegistry: Adding type registration java.time.LocalDate -> org.hibernate.type.LocalDateType@3e9fb485
2020-11-25 20:51:25,819 DEBUG  [main] BasicTypeRegistry: Adding type registration LocalTime -> org.hibernate.type.LocalTimeType@419f0ea
2020-11-25 20:51:25,819 DEBUG  [main] BasicTypeRegistry: Adding type registration java.time.LocalTime -> org.hibernate.type.LocalTimeType@419f0ea
2020-11-25 20:51:25,819 DEBUG  [main] BasicTypeRegistry: Adding type registration OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@87aec6a
2020-11-25 20:51:25,819 DEBUG  [main] BasicTypeRegistry: Adding type registration java.time.OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@87aec6a
2020-11-25 20:51:25,820 DEBUG  [main] BasicTypeRegistry: Adding type registration OffsetTime -> org.hibernate.type.OffsetTimeType@5529522f
2020-11-25 20:51:25,820 DEBUG  [main] BasicTypeRegistry: Adding type registration java.time.OffsetTime -> org.hibernate.type.OffsetTimeType@5529522f
2020-11-25 20:51:25,822 DEBUG  [main] BasicTypeRegistry: Adding type registration ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@152e7703
2020-11-25 20:51:25,822 DEBUG  [main] BasicTypeRegistry: Adding type registration java.time.ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@152e7703
2020-11-25 20:51:25,822 DEBUG  [main] BasicTypeRegistry: Adding type registration date -> org.hibernate.type.DateType@24fc2c80
2020-11-25 20:51:25,823 DEBUG  [main] BasicTypeRegistry: Adding type registration java.sql.Date -> org.hibernate.type.DateType@24fc2c80
2020-11-25 20:51:25,823 DEBUG  [main] BasicTypeRegistry: Adding type registration time -> org.hibernate.type.TimeType@48b3b1b8
2020-11-25 20:51:25,823 DEBUG  [main] BasicTypeRegistry: Adding type registration java.sql.Time -> org.hibernate.type.TimeType@48b3b1b8
2020-11-25 20:51:25,823 DEBUG  [main] BasicTypeRegistry: Adding type registration timestamp -> org.hibernate.type.TimestampType@686b1e2d
2020-11-25 20:51:25,823 DEBUG  [main] BasicTypeRegistry: Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@686b1e2d
2020-11-25 20:51:25,823 DEBUG  [main] BasicTypeRegistry: Adding type registration java.util.Date -> org.hibernate.type.TimestampType@686b1e2d
2020-11-25 20:51:25,823 DEBUG  [main] BasicTypeRegistry: Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@652b3733
2020-11-25 20:51:25,823 DEBUG  [main] BasicTypeRegistry: Adding type registration calendar -> org.hibernate.type.CalendarType@5be7b749
2020-11-25 20:51:25,824 DEBUG  [main] BasicTypeRegistry: Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@5be7b749
2020-11-25 20:51:25,824 DEBUG  [main] BasicTypeRegistry: Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@5be7b749
2020-11-25 20:51:25,824 DEBUG  [main] BasicTypeRegistry: Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@177ddd24
2020-11-25 20:51:25,824 DEBUG  [main] BasicTypeRegistry: Adding type registration locale -> org.hibernate.type.LocaleType@61ad30f6
2020-11-25 20:51:25,824 DEBUG  [main] BasicTypeRegistry: Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@61ad30f6
2020-11-25 20:51:25,824 DEBUG  [main] BasicTypeRegistry: Adding type registration currency -> org.hibernate.type.CurrencyType@574ebdaf
2020-11-25 20:51:25,824 DEBUG  [main] BasicTypeRegistry: Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@574ebdaf
2020-11-25 20:51:25,824 DEBUG  [main] BasicTypeRegistry: Adding type registration timezone -> org.hibernate.type.TimeZoneType@123ca460
2020-11-25 20:51:25,824 DEBUG  [main] BasicTypeRegistry: Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@123ca460
2020-11-25 20:51:25,824 DEBUG  [main] BasicTypeRegistry: Adding type registration class -> org.hibernate.type.ClassType@3c9f4376
2020-11-25 20:51:25,825 DEBUG  [main] BasicTypeRegistry: Adding type registration java.lang.Class -> org.hibernate.type.ClassType@3c9f4376
2020-11-25 20:51:25,825 DEBUG  [main] BasicTypeRegistry: Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@1958c0d9
2020-11-25 20:51:25,825 DEBUG  [main] BasicTypeRegistry: Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@1958c0d9
2020-11-25 20:51:25,825 DEBUG  [main] BasicTypeRegistry: Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@5fc7255c
2020-11-25 20:51:25,825 DEBUG  [main] BasicTypeRegistry: Adding type registration binary -> org.hibernate.type.BinaryType@79ba0285
2020-11-25 20:51:25,825 DEBUG  [main] BasicTypeRegistry: Adding type registration byte[] -> org.hibernate.type.BinaryType@79ba0285
2020-11-25 20:51:25,825 DEBUG  [main] BasicTypeRegistry: Adding type registration [B -> org.hibernate.type.BinaryType@79ba0285
2020-11-25 20:51:25,825 DEBUG  [main] BasicTypeRegistry: Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@598778cc
2020-11-25 20:51:25,826 DEBUG  [main] BasicTypeRegistry: Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@598778cc
2020-11-25 20:51:25,826 DEBUG  [main] BasicTypeRegistry: Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@598778cc
2020-11-25 20:51:25,826 DEBUG  [main] BasicTypeRegistry: Adding type registration row_version -> org.hibernate.type.RowVersionType@11cadb32
2020-11-25 20:51:25,826 DEBUG  [main] BasicTypeRegistry: Adding type registration image -> org.hibernate.type.ImageType@37986daf
2020-11-25 20:51:25,826 DEBUG  [main] BasicTypeRegistry: Adding type registration characters -> org.hibernate.type.CharArrayType@710afd47
2020-11-25 20:51:25,826 DEBUG  [main] BasicTypeRegistry: Adding type registration char[] -> org.hibernate.type.CharArrayType@710afd47
2020-11-25 20:51:25,826 DEBUG  [main] BasicTypeRegistry: Adding type registration [C -> org.hibernate.type.CharArrayType@710afd47
2020-11-25 20:51:25,826 DEBUG  [main] BasicTypeRegistry: Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@12670e55
2020-11-25 20:51:25,826 DEBUG  [main] BasicTypeRegistry: Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@12670e55
2020-11-25 20:51:25,826 DEBUG  [main] BasicTypeRegistry: Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@12670e55
2020-11-25 20:51:25,827 DEBUG  [main] BasicTypeRegistry: Adding type registration text -> org.hibernate.type.TextType@32ba5c65
2020-11-25 20:51:25,830 DEBUG  [main] BasicTypeRegistry: Adding type registration ntext -> org.hibernate.type.NTextType@10166230
2020-11-25 20:51:25,831 DEBUG  [main] BasicTypeRegistry: Adding type registration blob -> org.hibernate.type.BlobType@13dd7887
2020-11-25 20:51:25,831 DEBUG  [main] BasicTypeRegistry: Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@13dd7887
2020-11-25 20:51:25,831 DEBUG  [main] BasicTypeRegistry: Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@3cbfdf5c
2020-11-25 20:51:25,831 DEBUG  [main] BasicTypeRegistry: Adding type registration clob -> org.hibernate.type.ClobType@58636b50
2020-11-25 20:51:25,831 DEBUG  [main] BasicTypeRegistry: Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@58636b50
2020-11-25 20:51:25,831 DEBUG  [main] BasicTypeRegistry: Adding type registration nclob -> org.hibernate.type.NClobType@1e5aacd9
2020-11-25 20:51:25,831 DEBUG  [main] BasicTypeRegistry: Adding type registration java.sql.NClob -> org.hibernate.type.NClobType@1e5aacd9
2020-11-25 20:51:25,831 DEBUG  [main] BasicTypeRegistry: Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@120411ec
2020-11-25 20:51:25,831 DEBUG  [main] BasicTypeRegistry: Adding type registration materialized_nclob -> org.hibernate.type.MaterializedNClobType@1a34a51e
2020-11-25 20:51:25,831 DEBUG  [main] BasicTypeRegistry: Adding type registration serializable -> org.hibernate.type.SerializableType@6b091a92
2020-11-25 20:51:25,831 DEBUG  [main] BasicTypeRegistry: Adding type registration object -> org.hibernate.type.ObjectType@35329a05
2020-11-25 20:51:25,831 DEBUG  [main] BasicTypeRegistry: Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@35329a05
2020-11-25 20:51:25,831 DEBUG  [main] BasicTypeRegistry: Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@5c96cbe7
2020-11-25 20:51:25,831 DEBUG  [main] BasicTypeRegistry: Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@6f2bb798
2020-11-25 20:51:25,831 DEBUG  [main] BasicTypeRegistry: Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@3a5e591b
2020-11-25 20:51:25,831 DEBUG  [main] BasicTypeRegistry: Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@43076326
2020-11-25 20:51:25,831 DEBUG  [main] BasicTypeRegistry: Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@29244152
2020-11-25 20:51:25,831 DEBUG  [main] BasicTypeRegistry: Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@1b81a499
2020-11-25 20:51:25,831 DEBUG  [main] BasicTypeRegistry: Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@53dfb073
2020-11-25 20:51:25,832 DEBUG  [main] BasicTypeRegistry: Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@2b39e77d
2020-11-25 20:51:25,863 DEBUG  [main] TypeConfiguration$Scope: Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@55c75b72] to MetadataBuildingContext [org.hibernate.boot.internal.MetadataBuildingContextRootImpl@567412db]
2020-11-25 20:51:25,873 DEBUG  [main] EnumType: Using NAMED-based conversion for Enum com.sf.back.entities.Kind
2020-11-25 20:51:25,875 DEBUG  [main] EnumType: Using NAMED-based conversion for Enum com.sf.back.entities.Kind
2020-11-25 20:51:25,905 DEBUG  [main] TypeConfiguration$Scope: Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@55c75b72] to SessionFactoryImpl [org.hibernate.internal.SessionFactoryImpl@7f0b32c0]
2020-11-25 20:51:25,906 DEBUG  [main] EnumType: Using NAMED-based conversion for Enum com.sf.back.entities.Kind
2020-11-25 20:51:25,906 DEBUG  [main] EnumType: Using NAMED-based conversion for Enum com.sf.back.entities.Kind
2020-11-25 20:51:25,939 DEBUG  [main] EnumType: Using NAMED-based conversion for Enum com.sf.back.entities.Kind
2020-11-25 20:51:25,939 DEBUG  [main] EnumType: Using NAMED-based conversion for Enum com.sf.back.entities.Kind
2020-11-25 20:51:25,989 DEBUG  [main] EnumType: Using NAMED-based conversion for Enum com.sf.back.entities.Kind
2020-11-25 20:51:25,990 DEBUG  [main] EnumType: Using NAMED-based conversion for Enum com.sf.back.entities.Kind
2020-11-25 20:51:26,086 DEBUG  [main] EnumType: Using NAMED-based conversion for Enum com.sf.back.entities.Kind
2020-11-25 20:51:26,105 TRACE  [main] TypeConfiguration$Scope: Handling #sessionFactoryCreated from [org.hibernate.internal.SessionFactoryImpl@7f0b32c0] for TypeConfiguration
2020-11-25 20:51:26,285 WARN   [main] JpaBaseConfiguration$JpaWebConfiguration: spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2020-11-25 20:51:26,391 WARN   [main] GenericWebApplicationContext: Exception encountered during context initialization - cancelling refresh attempt: org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'groovyMarkupConfigurer' defined in class path resource [org/springframework/boot/autoconfigure/groovy/template/GroovyTemplateAutoConfiguration$GroovyMarkupConfiguration.class]: Invocation of init method failed; nested exception is java.lang.reflect.InaccessibleObjectException: Unable to make jdk.internal.loader.ClassLoaders$AppClassLoader(jdk.internal.loader.ClassLoaders$PlatformClassLoader,jdk.internal.loader.URLClassPath) accessible: module java.base does not "opens jdk.internal.loader" to unnamed module @5fcacc0
2020-11-25 20:51:26,394 TRACE  [main] TypeConfiguration$Scope: Handling #sessionFactoryClosed from [org.hibernate.internal.SessionFactoryImpl@7f0b32c0] for TypeConfiguration
2020-11-25 20:51:26,394 DEBUG  [main] TypeConfiguration$Scope: Un-scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration$Scope@3f9e38d4] from SessionFactory [org.hibernate.internal.SessionFactoryImpl@7f0b32c0]
2020-11-25 20:51:26,415 ERROR  [main] SpringApplication: Application run failed
org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'groovyMarkupConfigurer' defined in class path resource [org/springframework/boot/autoconfigure/groovy/template/GroovyTemplateAutoConfiguration$GroovyMarkupConfiguration.class]: Invocation of init method failed; nested exception is java.lang.reflect.InaccessibleObjectException: Unable to make jdk.internal.loader.ClassLoaders$AppClassLoader(jdk.internal.loader.ClassLoaders$PlatformClassLoader,jdk.internal.loader.URLClassPath) accessible: module java.base does not "opens jdk.internal.loader" to unnamed module @5fcacc0
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1803)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:595)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:517)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:323)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:222)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:321)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:202)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(DefaultListableBeanFactory.java:879)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:878)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:550)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:747)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:397)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:315)
	at org.springframework.boot.test.context.SpringBootContextLoader.loadContext(SpringBootContextLoader.java:125)
	at org.springframework.test.context.cache.DefaultCacheAwareContextLoaderDelegate.loadContextInternal(DefaultCacheAwareContextLoaderDelegate.java:99)
	at org.springframework.test.context.cache.DefaultCacheAwareContextLoaderDelegate.loadContext(DefaultCacheAwareContextLoaderDelegate.java:124)
	at org.springframework.test.context.support.DefaultTestContext.getApplicationContext(DefaultTestContext.java:123)
	at org.springframework.test.context.web.ServletTestExecutionListener.setUpRequestContextIfNecessary(ServletTestExecutionListener.java:190)
	at org.springframework.test.context.web.ServletTestExecutionListener.prepareTestInstance(ServletTestExecutionListener.java:132)
	at org.springframework.test.context.TestContextManager.prepareTestInstance(TestContextManager.java:244)
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner.createTest(SpringJUnit4ClassRunner.java:227)
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner$1.runReflectiveCall(SpringJUnit4ClassRunner.java:289)
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner.methodBlock(SpringJUnit4ClassRunner.java:291)
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner.runChild(SpringJUnit4ClassRunner.java:246)
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner.runChild(SpringJUnit4ClassRunner.java:97)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:290)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:71)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:58)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268)
	at org.junit.internal.runners.statements.RunBefores.evaluate(RunBefores.java:26)
	at org.springframework.test.context.junit4.statements.RunBeforeTestClassCallbacks.evaluate(RunBeforeTestClassCallbacks.java:61)
	at org.junit.internal.runners.statements.RunAfters.evaluate(RunAfters.java:27)
	at org.springframework.test.context.junit4.statements.RunAfterTestClassCallbacks.evaluate(RunAfterTestClassCallbacks.java:70)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:363)
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner.run(SpringJUnit4ClassRunner.java:190)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:137)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:115)
	at org.junit.vintage.engine.execution.RunnerExecutor.execute(RunnerExecutor.java:40)
	at java.base/java.util.stream.ForEachOps$ForEachOp$OfRef.accept(ForEachOps.java:183)
	at java.base/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:195)
	at java.base/java.util.Iterator.forEachRemaining(Iterator.java:133)
	at java.base/java.util.Spliterators$IteratorSpliterator.forEachRemaining(Spliterators.java:1801)
	at java.base/java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:484)
	at java.base/java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:474)
	at java.base/java.util.stream.ForEachOps$ForEachOp.evaluateSequential(ForEachOps.java:150)
	at java.base/java.util.stream.ForEachOps$ForEachOp$OfRef.evaluateSequential(ForEachOps.java:173)
	at java.base/java.util.stream.AbstractPipeline.evaluate(AbstractPipeline.java:234)
	at java.base/java.util.stream.ReferencePipeline.forEach(ReferencePipeline.java:497)
	at org.junit.vintage.engine.VintageTestEngine.executeAllChildren(VintageTestEngine.java:80)
	at org.junit.vintage.engine.VintageTestEngine.execute(VintageTestEngine.java:71)
	at org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:220)
	at org.junit.platform.launcher.core.DefaultLauncher.lambda$execute$6(DefaultLauncher.java:188)
	at org.junit.platform.launcher.core.DefaultLauncher.withInterceptedStreams(DefaultLauncher.java:202)
	at org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:181)
	at org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:128)
	at org.apache.maven.surefire.junitplatform.JUnitPlatformProvider.invokeAllTests(JUnitPlatformProvider.java:150)
	at org.apache.maven.surefire.junitplatform.JUnitPlatformProvider.invoke(JUnitPlatformProvider.java:124)
	at org.apache.maven.surefire.booter.ForkedBooter.invokeProviderInSameClassLoader(ForkedBooter.java:384)
	at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:345)
	at org.apache.maven.surefire.booter.ForkedBooter.execute(ForkedBooter.java:126)
	at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:418)
Caused by: java.lang.reflect.InaccessibleObjectException: Unable to make jdk.internal.loader.ClassLoaders$AppClassLoader(jdk.internal.loader.ClassLoaders$PlatformClassLoader,jdk.internal.loader.URLClassPath) accessible: module java.base does not "opens jdk.internal.loader" to unnamed module @5fcacc0
	at java.base/java.lang.reflect.AccessibleObject.checkCanSetAccessible(AccessibleObject.java:361)
	at java.base/java.lang.reflect.AccessibleObject.checkCanSetAccessible(AccessibleObject.java:301)
	at java.base/java.lang.reflect.Constructor.checkCanSetAccessible(Constructor.java:189)
	at java.base/java.lang.reflect.Constructor.setAccessible(Constructor.java:182)
	at org.codehaus.groovy.reflection.CachedConstructor$1.run(CachedConstructor.java:44)
	at java.base/java.security.AccessController.doPrivileged(AccessController.java:312)
	at org.codehaus.groovy.reflection.CachedConstructor.<init>(CachedConstructor.java:42)
	at org.codehaus.groovy.reflection.CachedClass$2.initValue(CachedClass.java:79)
	at org.codehaus.groovy.reflection.CachedClass$2.initValue(CachedClass.java:69)
	at org.codehaus.groovy.util.LazyReference.getLocked(LazyReference.java:49)
	at org.codehaus.groovy.util.LazyReference.get(LazyReference.java:36)
	at org.codehaus.groovy.reflection.CachedClass.getConstructors(CachedClass.java:268)
	at groovy.lang.MetaClassImpl.<init>(MetaClassImpl.java:218)
	at groovy.lang.MetaClassImpl.<init>(MetaClassImpl.java:228)
	at groovy.lang.MetaClassRegistry$MetaClassCreationHandle.createNormalMetaClass(MetaClassRegistry.java:171)
	at groovy.lang.MetaClassRegistry$MetaClassCreationHandle.createWithCustomLookup(MetaClassRegistry.java:161)
	at groovy.lang.MetaClassRegistry$MetaClassCreationHandle.create(MetaClassRegistry.java:144)
	at org.codehaus.groovy.reflection.ClassInfo.getMetaClassUnderLock(ClassInfo.java:253)
	at org.codehaus.groovy.reflection.ClassInfo.getMetaClass(ClassInfo.java:285)
	at org.codehaus.groovy.reflection.ClassInfo.getMetaClass(ClassInfo.java:295)
	at org.codehaus.groovy.runtime.metaclass.MetaClassRegistryImpl.getMetaClass(MetaClassRegistryImpl.java:261)
	at org.codehaus.groovy.runtime.InvokerHelper.getMetaClass(InvokerHelper.java:873)
	at org.codehaus.groovy.runtime.InvokerHelper.invokePojoMethod(InvokerHelper.java:906)
	at org.codehaus.groovy.runtime.InvokerHelper.invokeMethod(InvokerHelper.java:898)
	at org.codehaus.groovy.runtime.typehandling.DefaultTypeTransformation.castToBoolean(DefaultTypeTransformation.java:185)
	at org.codehaus.groovy.runtime.typehandling.DefaultTypeTransformation.booleanUnbox(DefaultTypeTransformation.java:74)
	at org.codehaus.groovy.control.customizers.ASTTransformationCustomizer.findASTTranformationClass(ASTTransformationCustomizer.groovy:209)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:64)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:564)
	at org.codehaus.groovy.reflection.CachedMethod.invoke(CachedMethod.java:93)
	at org.codehaus.groovy.runtime.callsite.StaticMetaMethodSite$StaticMetaMethodSiteNoUnwrapNoCoerce.invoke(StaticMetaMethodSite.java:151)
	at org.codehaus.groovy.runtime.callsite.StaticMetaMethodSite.callStatic(StaticMetaMethodSite.java:102)
	at org.codehaus.groovy.runtime.callsite.AbstractCallSite.callStatic(AbstractCallSite.java:214)
	at org.codehaus.groovy.control.customizers.ASTTransformationCustomizer.findPhase(ASTTransformationCustomizer.groovy:226)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:64)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:564)
	at org.codehaus.groovy.reflection.CachedMethod.invoke(CachedMethod.java:93)
	at org.codehaus.groovy.runtime.callsite.StaticMetaMethodSite$StaticMetaMethodSiteNoUnwrapNoCoerce.invoke(StaticMetaMethodSite.java:151)
	at org.codehaus.groovy.runtime.callsite.StaticMetaMethodSite.callStatic(StaticMetaMethodSite.java:102)
	at org.codehaus.groovy.runtime.callsite.AbstractCallSite.callStatic(AbstractCallSite.java:214)
	at org.codehaus.groovy.control.customizers.ASTTransformationCustomizer.<init>(ASTTransformationCustomizer.groovy:180)
	at org.codehaus.groovy.control.customizers.ASTTransformationCustomizer.<init>(ASTTransformationCustomizer.groovy:188)
	at groovy.text.markup.MarkupTemplateEngine.<init>(MarkupTemplateEngine.java:94)
	at org.springframework.web.servlet.view.groovy.GroovyMarkupConfigurer.createTemplateEngine(GroovyMarkupConfigurer.java:160)
	at org.springframework.web.servlet.view.groovy.GroovyMarkupConfigurer.afterPropertiesSet(GroovyMarkupConfigurer.java:153)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1862)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1799)
	... 62 common frames omitted
2020-11-25 20:51:26,416 ERROR  [main] TestContextManager: Caught exception while allowing TestExecutionListener [org.springframework.test.context.web.ServletTestExecutionListener@46c093b4] to prepare test instance [com.sf.math.algebra.solvers.PolynomialSolverIntervalTest@5632bed3]
java.lang.IllegalStateException: Failed to load ApplicationContext
	at org.springframework.test.context.cache.DefaultCacheAwareContextLoaderDelegate.loadContext(DefaultCacheAwareContextLoaderDelegate.java:132)
	at org.springframework.test.context.support.DefaultTestContext.getApplicationContext(DefaultTestContext.java:123)
	at org.springframework.test.context.web.ServletTestExecutionListener.setUpRequestContextIfNecessary(ServletTestExecutionListener.java:190)
	at org.springframework.test.context.web.ServletTestExecutionListener.prepareTestInstance(ServletTestExecutionListener.java:132)
	at org.springframework.test.context.TestContextManager.prepareTestInstance(TestContextManager.java:244)
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner.createTest(SpringJUnit4ClassRunner.java:227)
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner$1.runReflectiveCall(SpringJUnit4ClassRunner.java:289)
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner.methodBlock(SpringJUnit4ClassRunner.java:291)
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner.runChild(SpringJUnit4ClassRunner.java:246)
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner.runChild(SpringJUnit4ClassRunner.java:97)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:290)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:71)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:58)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268)
	at org.junit.internal.runners.statements.RunBefores.evaluate(RunBefores.java:26)
	at org.springframework.test.context.junit4.statements.RunBeforeTestClassCallbacks.evaluate(RunBeforeTestClassCallbacks.java:61)
	at org.junit.internal.runners.statements.RunAfters.evaluate(RunAfters.java:27)
	at org.springframework.test.context.junit4.statements.RunAfterTestClassCallbacks.evaluate(RunAfterTestClassCallbacks.java:70)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:363)
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner.run(SpringJUnit4ClassRunner.java:190)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:137)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:115)
	at org.junit.vintage.engine.execution.RunnerExecutor.execute(RunnerExecutor.java:40)
	at java.base/java.util.stream.ForEachOps$ForEachOp$OfRef.accept(ForEachOps.java:183)
	at java.base/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:195)
	at java.base/java.util.Iterator.forEachRemaining(Iterator.java:133)
	at java.base/java.util.Spliterators$IteratorSpliterator.forEachRemaining(Spliterators.java:1801)
	at java.base/java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:484)
	at java.base/java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:474)
	at java.base/java.util.stream.ForEachOps$ForEachOp.evaluateSequential(ForEachOps.java:150)
	at java.base/java.util.stream.ForEachOps$ForEachOp$OfRef.evaluateSequential(ForEachOps.java:173)
	at java.base/java.util.stream.AbstractPipeline.evaluate(AbstractPipeline.java:234)
	at java.base/java.util.stream.ReferencePipeline.forEach(ReferencePipeline.java:497)
	at org.junit.vintage.engine.VintageTestEngine.executeAllChildren(VintageTestEngine.java:80)
	at org.junit.vintage.engine.VintageTestEngine.execute(VintageTestEngine.java:71)
	at org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:220)
	at org.junit.platform.launcher.core.DefaultLauncher.lambda$execute$6(DefaultLauncher.java:188)
	at org.junit.platform.launcher.core.DefaultLauncher.withInterceptedStreams(DefaultLauncher.java:202)
	at org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:181)
	at org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:128)
	at org.apache.maven.surefire.junitplatform.JUnitPlatformProvider.invokeAllTests(JUnitPlatformProvider.java:150)
	at org.apache.maven.surefire.junitplatform.JUnitPlatformProvider.invoke(JUnitPlatformProvider.java:124)
	at org.apache.maven.surefire.booter.ForkedBooter.invokeProviderInSameClassLoader(ForkedBooter.java:384)
	at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:345)
	at org.apache.maven.surefire.booter.ForkedBooter.execute(ForkedBooter.java:126)
	at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:418)
Caused by: org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'groovyMarkupConfigurer' defined in class path resource [org/springframework/boot/autoconfigure/groovy/template/GroovyTemplateAutoConfiguration$GroovyMarkupConfiguration.class]: Invocation of init method failed; nested exception is java.lang.reflect.InaccessibleObjectException: Unable to make jdk.internal.loader.ClassLoaders$AppClassLoader(jdk.internal.loader.ClassLoaders$PlatformClassLoader,jdk.internal.loader.URLClassPath) accessible: module java.base does not "opens jdk.internal.loader" to unnamed module @5fcacc0
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1803)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:595)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:517)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:323)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:222)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:321)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:202)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(DefaultListableBeanFactory.java:879)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:878)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:550)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:747)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:397)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:315)
	at org.springframework.boot.test.context.SpringBootContextLoader.loadContext(SpringBootContextLoader.java:125)
	at org.springframework.test.context.cache.DefaultCacheAwareContextLoaderDelegate.loadContextInternal(DefaultCacheAwareContextLoaderDelegate.java:99)
	at org.springframework.test.context.cache.DefaultCacheAwareContextLoaderDelegate.loadContext(DefaultCacheAwareContextLoaderDelegate.java:124)
	... 47 common frames omitted
Caused by: java.lang.reflect.InaccessibleObjectException: Unable to make jdk.internal.loader.ClassLoaders$AppClassLoader(jdk.internal.loader.ClassLoaders$PlatformClassLoader,jdk.internal.loader.URLClassPath) accessible: module java.base does not "opens jdk.internal.loader" to unnamed module @5fcacc0
	at java.base/java.lang.reflect.AccessibleObject.checkCanSetAccessible(AccessibleObject.java:361)
	at java.base/java.lang.reflect.AccessibleObject.checkCanSetAccessible(AccessibleObject.java:301)
	at java.base/java.lang.reflect.Constructor.checkCanSetAccessible(Constructor.java:189)
	at java.base/java.lang.reflect.Constructor.setAccessible(Constructor.java:182)
	at org.codehaus.groovy.reflection.CachedConstructor$1.run(CachedConstructor.java:44)
	at java.base/java.security.AccessController.doPrivileged(AccessController.java:312)
	at org.codehaus.groovy.reflection.CachedConstructor.<init>(CachedConstructor.java:42)
	at org.codehaus.groovy.reflection.CachedClass$2.initValue(CachedClass.java:79)
	at org.codehaus.groovy.reflection.CachedClass$2.initValue(CachedClass.java:69)
	at org.codehaus.groovy.util.LazyReference.getLocked(LazyReference.java:49)
	at org.codehaus.groovy.util.LazyReference.get(LazyReference.java:36)
	at org.codehaus.groovy.reflection.CachedClass.getConstructors(CachedClass.java:268)
	at groovy.lang.MetaClassImpl.<init>(MetaClassImpl.java:218)
	at groovy.lang.MetaClassImpl.<init>(MetaClassImpl.java:228)
	at groovy.lang.MetaClassRegistry$MetaClassCreationHandle.createNormalMetaClass(MetaClassRegistry.java:171)
	at groovy.lang.MetaClassRegistry$MetaClassCreationHandle.createWithCustomLookup(MetaClassRegistry.java:161)
	at groovy.lang.MetaClassRegistry$MetaClassCreationHandle.create(MetaClassRegistry.java:144)
	at org.codehaus.groovy.reflection.ClassInfo.getMetaClassUnderLock(ClassInfo.java:253)
	at org.codehaus.groovy.reflection.ClassInfo.getMetaClass(ClassInfo.java:285)
	at org.codehaus.groovy.reflection.ClassInfo.getMetaClass(ClassInfo.java:295)
	at org.codehaus.groovy.runtime.metaclass.MetaClassRegistryImpl.getMetaClass(MetaClassRegistryImpl.java:261)
	at org.codehaus.groovy.runtime.InvokerHelper.getMetaClass(InvokerHelper.java:873)
	at org.codehaus.groovy.runtime.InvokerHelper.invokePojoMethod(InvokerHelper.java:906)
	at org.codehaus.groovy.runtime.InvokerHelper.invokeMethod(InvokerHelper.java:898)
	at org.codehaus.groovy.runtime.typehandling.DefaultTypeTransformation.castToBoolean(DefaultTypeTransformation.java:185)
	at org.codehaus.groovy.runtime.typehandling.DefaultTypeTransformation.booleanUnbox(DefaultTypeTransformation.java:74)
	at org.codehaus.groovy.control.customizers.ASTTransformationCustomizer.findASTTranformationClass(ASTTransformationCustomizer.groovy:209)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:64)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:564)
	at org.codehaus.groovy.reflection.CachedMethod.invoke(CachedMethod.java:93)
	at org.codehaus.groovy.runtime.callsite.StaticMetaMethodSite$StaticMetaMethodSiteNoUnwrapNoCoerce.invoke(StaticMetaMethodSite.java:151)
	at org.codehaus.groovy.runtime.callsite.StaticMetaMethodSite.callStatic(StaticMetaMethodSite.java:102)
	at org.codehaus.groovy.runtime.callsite.AbstractCallSite.callStatic(AbstractCallSite.java:214)
	at org.codehaus.groovy.control.customizers.ASTTransformationCustomizer.findPhase(ASTTransformationCustomizer.groovy:226)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:64)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:564)
	at org.codehaus.groovy.reflection.CachedMethod.invoke(CachedMethod.java:93)
	at org.codehaus.groovy.runtime.callsite.StaticMetaMethodSite$StaticMetaMethodSiteNoUnwrapNoCoerce.invoke(StaticMetaMethodSite.java:151)
	at org.codehaus.groovy.runtime.callsite.StaticMetaMethodSite.callStatic(StaticMetaMethodSite.java:102)
	at org.codehaus.groovy.runtime.callsite.AbstractCallSite.callStatic(AbstractCallSite.java:214)
	at org.codehaus.groovy.control.customizers.ASTTransformationCustomizer.<init>(ASTTransformationCustomizer.groovy:180)
	at org.codehaus.groovy.control.customizers.ASTTransformationCustomizer.<init>(ASTTransformationCustomizer.groovy:188)
	at groovy.text.markup.MarkupTemplateEngine.<init>(MarkupTemplateEngine.java:94)
	at org.springframework.web.servlet.view.groovy.GroovyMarkupConfigurer.createTemplateEngine(GroovyMarkupConfigurer.java:160)
	at org.springframework.web.servlet.view.groovy.GroovyMarkupConfigurer.afterPropertiesSet(GroovyMarkupConfigurer.java:153)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1862)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1799)
	... 62 common frames omitted
2020-11-25 20:51:26,862 DEBUG  [main] BasicTypeRegistry: Adding type registration boolean -> org.hibernate.type.BooleanType@59127611
2020-11-25 20:51:26,866 DEBUG  [main] BasicTypeRegistry: Adding type registration boolean -> org.hibernate.type.BooleanType@59127611
2020-11-25 20:51:26,866 DEBUG  [main] BasicTypeRegistry: Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@59127611
2020-11-25 20:51:26,866 DEBUG  [main] BasicTypeRegistry: Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@18db3b3c
2020-11-25 20:51:26,867 DEBUG  [main] BasicTypeRegistry: Adding type registration true_false -> org.hibernate.type.TrueFalseType@5c1c9881
2020-11-25 20:51:26,867 DEBUG  [main] BasicTypeRegistry: Adding type registration yes_no -> org.hibernate.type.YesNoType@5d37aa0f
2020-11-25 20:51:26,867 DEBUG  [main] BasicTypeRegistry: Adding type registration byte -> org.hibernate.type.ByteType@3e4afd10
2020-11-25 20:51:26,867 DEBUG  [main] BasicTypeRegistry: Adding type registration byte -> org.hibernate.type.ByteType@3e4afd10
2020-11-25 20:51:26,868 DEBUG  [main] BasicTypeRegistry: Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@3e4afd10
2020-11-25 20:51:26,868 DEBUG  [main] BasicTypeRegistry: Adding type registration character -> org.hibernate.type.CharacterType@48d44b46
2020-11-25 20:51:26,868 DEBUG  [main] BasicTypeRegistry: Adding type registration char -> org.hibernate.type.CharacterType@48d44b46
2020-11-25 20:51:26,868 DEBUG  [main] BasicTypeRegistry: Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@48d44b46
2020-11-25 20:51:26,868 DEBUG  [main] BasicTypeRegistry: Adding type registration short -> org.hibernate.type.ShortType@dd20ebc
2020-11-25 20:51:26,868 DEBUG  [main] BasicTypeRegistry: Adding type registration short -> org.hibernate.type.ShortType@dd20ebc
2020-11-25 20:51:26,869 DEBUG  [main] BasicTypeRegistry: Adding type registration java.lang.Short -> org.hibernate.type.ShortType@dd20ebc
2020-11-25 20:51:26,869 DEBUG  [main] BasicTypeRegistry: Adding type registration integer -> org.hibernate.type.IntegerType@5f7cd50e
2020-11-25 20:51:26,870 DEBUG  [main] BasicTypeRegistry: Adding type registration int -> org.hibernate.type.IntegerType@5f7cd50e
2020-11-25 20:51:26,870 DEBUG  [main] BasicTypeRegistry: Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@5f7cd50e
2020-11-25 20:51:26,870 DEBUG  [main] BasicTypeRegistry: Adding type registration long -> org.hibernate.type.LongType@359e27d2
2020-11-25 20:51:26,871 DEBUG  [main] BasicTypeRegistry: Adding type registration long -> org.hibernate.type.LongType@359e27d2
2020-11-25 20:51:26,871 DEBUG  [main] BasicTypeRegistry: Adding type registration java.lang.Long -> org.hibernate.type.LongType@359e27d2
2020-11-25 20:51:26,871 DEBUG  [main] BasicTypeRegistry: Adding type registration float -> org.hibernate.type.FloatType@29b8df5
2020-11-25 20:51:26,871 DEBUG  [main] BasicTypeRegistry: Adding type registration float -> org.hibernate.type.FloatType@29b8df5
2020-11-25 20:51:26,872 DEBUG  [main] BasicTypeRegistry: Adding type registration java.lang.Float -> org.hibernate.type.FloatType@29b8df5
2020-11-25 20:51:26,872 DEBUG  [main] BasicTypeRegistry: Adding type registration double -> org.hibernate.type.DoubleType@36cfe107
2020-11-25 20:51:26,872 DEBUG  [main] BasicTypeRegistry: Adding type registration double -> org.hibernate.type.DoubleType@36cfe107
2020-11-25 20:51:26,872 DEBUG  [main] BasicTypeRegistry: Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@36cfe107
2020-11-25 20:51:26,873 DEBUG  [main] BasicTypeRegistry: Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@139089a4
2020-11-25 20:51:26,873 DEBUG  [main] BasicTypeRegistry: Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@139089a4
2020-11-25 20:51:26,873 DEBUG  [main] BasicTypeRegistry: Adding type registration big_integer -> org.hibernate.type.BigIntegerType@9f1ca74
2020-11-25 20:51:26,873 DEBUG  [main] BasicTypeRegistry: Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@9f1ca74
2020-11-25 20:51:26,874 DEBUG  [main] BasicTypeRegistry: Adding type registration string -> org.hibernate.type.StringType@393ae7a0
2020-11-25 20:51:26,874 DEBUG  [main] BasicTypeRegistry: Adding type registration java.lang.String -> org.hibernate.type.StringType@393ae7a0
2020-11-25 20:51:26,874 DEBUG  [main] BasicTypeRegistry: Adding type registration nstring -> org.hibernate.type.StringNVarcharType@7ee12d58
2020-11-25 20:51:26,874 DEBUG  [main] BasicTypeRegistry: Adding type registration ncharacter -> org.hibernate.type.CharacterNCharType@34e990cc
2020-11-25 20:51:26,874 DEBUG  [main] BasicTypeRegistry: Adding type registration url -> org.hibernate.type.UrlType@6de84336
2020-11-25 20:51:26,874 DEBUG  [main] BasicTypeRegistry: Adding type registration java.net.URL -> org.hibernate.type.UrlType@6de84336
2020-11-25 20:51:26,875 DEBUG  [main] BasicTypeRegistry: Adding type registration Duration -> org.hibernate.type.DurationType@69b37f5c
2020-11-25 20:51:26,875 DEBUG  [main] BasicTypeRegistry: Adding type registration java.time.Duration -> org.hibernate.type.DurationType@69b37f5c
2020-11-25 20:51:26,875 DEBUG  [main] BasicTypeRegistry: Adding type registration Instant -> org.hibernate.type.InstantType@580ffea
2020-11-25 20:51:26,875 DEBUG  [main] BasicTypeRegistry: Adding type registration java.time.Instant -> org.hibernate.type.InstantType@580ffea
2020-11-25 20:51:26,875 DEBUG  [main] BasicTypeRegistry: Adding type registration LocalDateTime -> org.hibernate.type.LocalDateTimeType@79d49790
2020-11-25 20:51:26,876 DEBUG  [main] BasicTypeRegistry: Adding type registration java.time.LocalDateTime -> org.hibernate.type.LocalDateTimeType@79d49790
2020-11-25 20:51:26,876 DEBUG  [main] BasicTypeRegistry: Adding type registration LocalDate -> org.hibernate.type.LocalDateType@3e9fb485
2020-11-25 20:51:26,876 DEBUG  [main] BasicTypeRegistry: Adding type registration java.time.LocalDate -> org.hibernate.type.LocalDateType@3e9fb485
2020-11-25 20:51:26,876 DEBUG  [main] BasicTypeRegistry: Adding type registration LocalTime -> org.hibernate.type.LocalTimeType@419f0ea
2020-11-25 20:51:26,876 DEBUG  [main] BasicTypeRegistry: Adding type registration java.time.LocalTime -> org.hibernate.type.LocalTimeType@419f0ea
2020-11-25 20:51:26,876 DEBUG  [main] BasicTypeRegistry: Adding type registration OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@87aec6a
2020-11-25 20:51:26,877 DEBUG  [main] BasicTypeRegistry: Adding type registration java.time.OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@87aec6a
2020-11-25 20:51:26,877 DEBUG  [main] BasicTypeRegistry: Adding type registration OffsetTime -> org.hibernate.type.OffsetTimeType@5529522f
2020-11-25 20:51:26,877 DEBUG  [main] BasicTypeRegistry: Adding type registration java.time.OffsetTime -> org.hibernate.type.OffsetTimeType@5529522f
2020-11-25 20:51:26,877 DEBUG  [main] BasicTypeRegistry: Adding type registration ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@152e7703
2020-11-25 20:51:26,877 DEBUG  [main] BasicTypeRegistry: Adding type registration java.time.ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@152e7703
2020-11-25 20:51:26,878 DEBUG  [main] BasicTypeRegistry: Adding type registration date -> org.hibernate.type.DateType@24fc2c80
2020-11-25 20:51:26,878 DEBUG  [main] BasicTypeRegistry: Adding type registration java.sql.Date -> org.hibernate.type.DateType@24fc2c80
2020-11-25 20:51:26,878 DEBUG  [main] BasicTypeRegistry: Adding type registration time -> org.hibernate.type.TimeType@48b3b1b8
2020-11-25 20:51:26,878 DEBUG  [main] BasicTypeRegistry: Adding type registration java.sql.Time -> org.hibernate.type.TimeType@48b3b1b8
2020-11-25 20:51:26,878 DEBUG  [main] BasicTypeRegistry: Adding type registration timestamp -> org.hibernate.type.TimestampType@686b1e2d
2020-11-25 20:51:26,879 DEBUG  [main] BasicTypeRegistry: Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@686b1e2d
2020-11-25 20:51:26,879 DEBUG  [main] BasicTypeRegistry: Adding type registration java.util.Date -> org.hibernate.type.TimestampType@686b1e2d
2020-11-25 20:51:26,879 DEBUG  [main] BasicTypeRegistry: Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@652b3733
2020-11-25 20:51:26,879 DEBUG  [main] BasicTypeRegistry: Adding type registration calendar -> org.hibernate.type.CalendarType@5be7b749
2020-11-25 20:51:26,879 DEBUG  [main] BasicTypeRegistry: Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@5be7b749
2020-11-25 20:51:26,880 DEBUG  [main] BasicTypeRegistry: Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@5be7b749
2020-11-25 20:51:26,880 DEBUG  [main] BasicTypeRegistry: Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@177ddd24
2020-11-25 20:51:26,880 DEBUG  [main] BasicTypeRegistry: Adding type registration locale -> org.hibernate.type.LocaleType@61ad30f6
2020-11-25 20:51:26,880 DEBUG  [main] BasicTypeRegistry: Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@61ad30f6
2020-11-25 20:51:26,880 DEBUG  [main] BasicTypeRegistry: Adding type registration currency -> org.hibernate.type.CurrencyType@574ebdaf
2020-11-25 20:51:26,880 DEBUG  [main] BasicTypeRegistry: Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@574ebdaf
2020-11-25 20:51:26,881 DEBUG  [main] BasicTypeRegistry: Adding type registration timezone -> org.hibernate.type.TimeZoneType@123ca460
2020-11-25 20:51:26,881 DEBUG  [main] BasicTypeRegistry: Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@123ca460
2020-11-25 20:51:26,881 DEBUG  [main] BasicTypeRegistry: Adding type registration class -> org.hibernate.type.ClassType@3c9f4376
2020-11-25 20:51:26,881 DEBUG  [main] BasicTypeRegistry: Adding type registration java.lang.Class -> org.hibernate.type.ClassType@3c9f4376
2020-11-25 20:51:26,881 DEBUG  [main] BasicTypeRegistry: Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@1958c0d9
2020-11-25 20:51:26,881 DEBUG  [main] BasicTypeRegistry: Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@1958c0d9
2020-11-25 20:51:26,882 DEBUG  [main] BasicTypeRegistry: Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@5fc7255c
2020-11-25 20:51:26,882 DEBUG  [main] BasicTypeRegistry: Adding type registration binary -> org.hibernate.type.BinaryType@79ba0285
2020-11-25 20:51:26,882 DEBUG  [main] BasicTypeRegistry: Adding type registration byte[] -> org.hibernate.type.BinaryType@79ba0285
2020-11-25 20:51:26,882 DEBUG  [main] BasicTypeRegistry: Adding type registration [B -> org.hibernate.type.BinaryType@79ba0285
2020-11-25 20:51:26,882 DEBUG  [main] BasicTypeRegistry: Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@598778cc
2020-11-25 20:51:26,882 DEBUG  [main] BasicTypeRegistry: Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@598778cc
2020-11-25 20:51:26,883 DEBUG  [main] BasicTypeRegistry: Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@598778cc
2020-11-25 20:51:26,883 DEBUG  [main] BasicTypeRegistry: Adding type registration row_version -> org.hibernate.type.RowVersionType@11cadb32
2020-11-25 20:51:26,883 DEBUG  [main] BasicTypeRegistry: Adding type registration image -> org.hibernate.type.ImageType@37986daf
2020-11-25 20:51:26,883 DEBUG  [main] BasicTypeRegistry: Adding type registration characters -> org.hibernate.type.CharArrayType@710afd47
2020-11-25 20:51:26,883 DEBUG  [main] BasicTypeRegistry: Adding type registration char[] -> org.hibernate.type.CharArrayType@710afd47
2020-11-25 20:51:26,884 DEBUG  [main] BasicTypeRegistry: Adding type registration [C -> org.hibernate.type.CharArrayType@710afd47
2020-11-25 20:51:26,884 DEBUG  [main] BasicTypeRegistry: Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@12670e55
2020-11-25 20:51:26,884 DEBUG  [main] BasicTypeRegistry: Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@12670e55
2020-11-25 20:51:26,884 DEBUG  [main] BasicTypeRegistry: Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@12670e55
2020-11-25 20:51:26,884 DEBUG  [main] BasicTypeRegistry: Adding type registration text -> org.hibernate.type.TextType@32ba5c65
2020-11-25 20:51:26,884 DEBUG  [main] BasicTypeRegistry: Adding type registration ntext -> org.hibernate.type.NTextType@10166230
2020-11-25 20:51:26,885 DEBUG  [main] BasicTypeRegistry: Adding type registration blob -> org.hibernate.type.BlobType@13dd7887
2020-11-25 20:51:26,885 DEBUG  [main] BasicTypeRegistry: Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@13dd7887
2020-11-25 20:51:26,885 DEBUG  [main] BasicTypeRegistry: Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@3cbfdf5c
2020-11-25 20:51:26,885 DEBUG  [main] BasicTypeRegistry: Adding type registration clob -> org.hibernate.type.ClobType@58636b50
2020-11-25 20:51:26,885 DEBUG  [main] BasicTypeRegistry: Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@58636b50
2020-11-25 20:51:26,885 DEBUG  [main] BasicTypeRegistry: Adding type registration nclob -> org.hibernate.type.NClobType@1e5aacd9
2020-11-25 20:51:26,886 DEBUG  [main] BasicTypeRegistry: Adding type registration java.sql.NClob -> org.hibernate.type.NClobType@1e5aacd9
2020-11-25 20:51:26,886 DEBUG  [main] BasicTypeRegistry: Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@120411ec
2020-11-25 20:51:26,886 DEBUG  [main] BasicTypeRegistry: Adding type registration materialized_nclob -> org.hibernate.type.MaterializedNClobType@1a34a51e
2020-11-25 20:51:26,886 DEBUG  [main] BasicTypeRegistry: Adding type registration serializable -> org.hibernate.type.SerializableType@6b091a92
2020-11-25 20:51:26,886 DEBUG  [main] BasicTypeRegistry: Adding type registration object -> org.hibernate.type.ObjectType@35329a05
2020-11-25 20:51:26,887 DEBUG  [main] BasicTypeRegistry: Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@35329a05
2020-11-25 20:51:26,887 DEBUG  [main] BasicTypeRegistry: Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@52364a6e
2020-11-25 20:51:26,887 DEBUG  [main] BasicTypeRegistry: Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@5935ade6
2020-11-25 20:51:26,887 DEBUG  [main] BasicTypeRegistry: Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@72187492
2020-11-25 20:51:26,887 DEBUG  [main] BasicTypeRegistry: Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@3ba55a6b
2020-11-25 20:51:26,887 DEBUG  [main] BasicTypeRegistry: Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@5b20024b
2020-11-25 20:51:26,888 DEBUG  [main] BasicTypeRegistry: Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@2f8ede54
2020-11-25 20:51:26,888 DEBUG  [main] BasicTypeRegistry: Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@1e0383d3
2020-11-25 20:51:26,888 DEBUG  [main] BasicTypeRegistry: Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@f64f47a
2020-11-25 20:51:26,898 DEBUG  [main] TypeConfiguration$Scope: Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@26652743] to MetadataBuildingContext [org.hibernate.boot.internal.MetadataBuildingContextRootImpl@8d56ddd]
2020-11-25 20:51:26,908 DEBUG  [main] EnumType: Using NAMED-based conversion for Enum com.sf.back.entities.Kind
2020-11-25 20:51:26,911 DEBUG  [main] EnumType: Using NAMED-based conversion for Enum com.sf.back.entities.Kind
2020-11-25 20:51:26,929 DEBUG  [main] TypeConfiguration$Scope: Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@26652743] to SessionFactoryImpl [org.hibernate.internal.SessionFactoryImpl@65a86de0]
2020-11-25 20:51:26,930 DEBUG  [main] EnumType: Using NAMED-based conversion for Enum com.sf.back.entities.Kind
2020-11-25 20:51:26,931 DEBUG  [main] EnumType: Using NAMED-based conversion for Enum com.sf.back.entities.Kind
2020-11-25 20:51:26,953 DEBUG  [main] EnumType: Using NAMED-based conversion for Enum com.sf.back.entities.Kind
2020-11-25 20:51:26,954 DEBUG  [main] EnumType: Using NAMED-based conversion for Enum com.sf.back.entities.Kind
2020-11-25 20:51:26,978 DEBUG  [main] EnumType: Using NAMED-based conversion for Enum com.sf.back.entities.Kind
2020-11-25 20:51:26,979 DEBUG  [main] EnumType: Using NAMED-based conversion for Enum com.sf.back.entities.Kind
2020-11-25 20:51:26,984 DEBUG  [main] EnumType: Using NAMED-based conversion for Enum com.sf.back.entities.Kind
2020-11-25 20:51:26,992 TRACE  [main] TypeConfiguration$Scope: Handling #sessionFactoryCreated from [org.hibernate.internal.SessionFactoryImpl@65a86de0] for TypeConfiguration
2020-11-25 20:51:27,132 WARN   [main] JpaBaseConfiguration$JpaWebConfiguration: spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2020-11-25 20:51:27,264 WARN   [main] GenericWebApplicationContext: Exception encountered during context initialization - cancelling refresh attempt: org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'groovyMarkupConfigurer' defined in class path resource [org/springframework/boot/autoconfigure/groovy/template/GroovyTemplateAutoConfiguration$GroovyMarkupConfiguration.class]: Invocation of init method failed; nested exception is java.lang.reflect.InaccessibleObjectException: Unable to make jdk.internal.loader.ClassLoaders$AppClassLoader(jdk.internal.loader.ClassLoaders$PlatformClassLoader,jdk.internal.loader.URLClassPath) accessible: module java.base does not "opens jdk.internal.loader" to unnamed module @5fcacc0
2020-11-25 20:51:27,270 TRACE  [main] TypeConfiguration$Scope: Handling #sessionFactoryClosed from [org.hibernate.internal.SessionFactoryImpl@65a86de0] for TypeConfiguration
2020-11-25 20:51:27,270 DEBUG  [main] TypeConfiguration$Scope: Un-scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration$Scope@54cb2cee] from SessionFactory [org.hibernate.internal.SessionFactoryImpl@65a86de0]
2020-11-25 20:51:27,283 ERROR  [main] SpringApplication: Application run failed
org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'groovyMarkupConfigurer' defined in class path resource [org/springframework/boot/autoconfigure/groovy/template/GroovyTemplateAutoConfiguration$GroovyMarkupConfiguration.class]: Invocation of init method failed; nested exception is java.lang.reflect.InaccessibleObjectException: Unable to make jdk.internal.loader.ClassLoaders$AppClassLoader(jdk.internal.loader.ClassLoaders$PlatformClassLoader,jdk.internal.loader.URLClassPath) accessible: module java.base does not "opens jdk.internal.loader" to unnamed module @5fcacc0
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1803)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:595)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:517)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:323)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:222)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:321)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:202)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(DefaultListableBeanFactory.java:879)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:878)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:550)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:747)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:397)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:315)
	at org.springframework.boot.test.context.SpringBootContextLoader.loadContext(SpringBootContextLoader.java:125)
	at org.springframework.test.context.cache.DefaultCacheAwareContextLoaderDelegate.loadContextInternal(DefaultCacheAwareContextLoaderDelegate.java:99)
	at org.springframework.test.context.cache.DefaultCacheAwareContextLoaderDelegate.loadContext(DefaultCacheAwareContextLoaderDelegate.java:124)
	at org.springframework.test.context.support.DefaultTestContext.getApplicationContext(DefaultTestContext.java:123)
	at org.springframework.test.context.web.ServletTestExecutionListener.setUpRequestContextIfNecessary(ServletTestExecutionListener.java:190)
	at org.springframework.test.context.web.ServletTestExecutionListener.prepareTestInstance(ServletTestExecutionListener.java:132)
	at org.springframework.test.context.TestContextManager.prepareTestInstance(TestContextManager.java:244)
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner.createTest(SpringJUnit4ClassRunner.java:227)
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner$1.runReflectiveCall(SpringJUnit4ClassRunner.java:289)
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner.methodBlock(SpringJUnit4ClassRunner.java:291)
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner.runChild(SpringJUnit4ClassRunner.java:246)
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner.runChild(SpringJUnit4ClassRunner.java:97)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:290)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:71)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:58)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268)
	at org.junit.internal.runners.statements.RunBefores.evaluate(RunBefores.java:26)
	at org.springframework.test.context.junit4.statements.RunBeforeTestClassCallbacks.evaluate(RunBeforeTestClassCallbacks.java:61)
	at org.junit.internal.runners.statements.RunAfters.evaluate(RunAfters.java:27)
	at org.springframework.test.context.junit4.statements.RunAfterTestClassCallbacks.evaluate(RunAfterTestClassCallbacks.java:70)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:363)
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner.run(SpringJUnit4ClassRunner.java:190)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:137)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:115)
	at org.junit.vintage.engine.execution.RunnerExecutor.execute(RunnerExecutor.java:40)
	at java.base/java.util.stream.ForEachOps$ForEachOp$OfRef.accept(ForEachOps.java:183)
	at java.base/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:195)
	at java.base/java.util.Iterator.forEachRemaining(Iterator.java:133)
	at java.base/java.util.Spliterators$IteratorSpliterator.forEachRemaining(Spliterators.java:1801)
	at java.base/java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:484)
	at java.base/java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:474)
	at java.base/java.util.stream.ForEachOps$ForEachOp.evaluateSequential(ForEachOps.java:150)
	at java.base/java.util.stream.ForEachOps$ForEachOp$OfRef.evaluateSequential(ForEachOps.java:173)
	at java.base/java.util.stream.AbstractPipeline.evaluate(AbstractPipeline.java:234)
	at java.base/java.util.stream.ReferencePipeline.forEach(ReferencePipeline.java:497)
	at org.junit.vintage.engine.VintageTestEngine.executeAllChildren(VintageTestEngine.java:80)
	at org.junit.vintage.engine.VintageTestEngine.execute(VintageTestEngine.java:71)
	at org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:220)
	at org.junit.platform.launcher.core.DefaultLauncher.lambda$execute$6(DefaultLauncher.java:188)
	at org.junit.platform.launcher.core.DefaultLauncher.withInterceptedStreams(DefaultLauncher.java:202)
	at org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:181)
	at org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:128)
	at org.apache.maven.surefire.junitplatform.JUnitPlatformProvider.invokeAllTests(JUnitPlatformProvider.java:150)
	at org.apache.maven.surefire.junitplatform.JUnitPlatformProvider.invoke(JUnitPlatformProvider.java:124)
	at org.apache.maven.surefire.booter.ForkedBooter.invokeProviderInSameClassLoader(ForkedBooter.java:384)
	at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:345)
	at org.apache.maven.surefire.booter.ForkedBooter.execute(ForkedBooter.java:126)
	at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:418)
Caused by: java.lang.reflect.InaccessibleObjectException: Unable to make jdk.internal.loader.ClassLoaders$AppClassLoader(jdk.internal.loader.ClassLoaders$PlatformClassLoader,jdk.internal.loader.URLClassPath) accessible: module java.base does not "opens jdk.internal.loader" to unnamed module @5fcacc0
	at java.base/java.lang.reflect.AccessibleObject.checkCanSetAccessible(AccessibleObject.java:361)
	at java.base/java.lang.reflect.AccessibleObject.checkCanSetAccessible(AccessibleObject.java:301)
	at java.base/java.lang.reflect.Constructor.checkCanSetAccessible(Constructor.java:189)
	at java.base/java.lang.reflect.Constructor.setAccessible(Constructor.java:182)
	at org.codehaus.groovy.reflection.CachedConstructor$1.run(CachedConstructor.java:44)
	at java.base/java.security.AccessController.doPrivileged(AccessController.java:312)
	at org.codehaus.groovy.reflection.CachedConstructor.<init>(CachedConstructor.java:42)
	at org.codehaus.groovy.reflection.CachedClass$2.initValue(CachedClass.java:79)
	at org.codehaus.groovy.reflection.CachedClass$2.initValue(CachedClass.java:69)
	at org.codehaus.groovy.util.LazyReference.getLocked(LazyReference.java:49)
	at org.codehaus.groovy.util.LazyReference.get(LazyReference.java:36)
	at org.codehaus.groovy.reflection.CachedClass.getConstructors(CachedClass.java:268)
	at groovy.lang.MetaClassImpl.<init>(MetaClassImpl.java:218)
	at groovy.lang.MetaClassImpl.<init>(MetaClassImpl.java:228)
	at groovy.lang.MetaClassRegistry$MetaClassCreationHandle.createNormalMetaClass(MetaClassRegistry.java:171)
	at groovy.lang.MetaClassRegistry$MetaClassCreationHandle.createWithCustomLookup(MetaClassRegistry.java:161)
	at groovy.lang.MetaClassRegistry$MetaClassCreationHandle.create(MetaClassRegistry.java:144)
	at org.codehaus.groovy.reflection.ClassInfo.getMetaClassUnderLock(ClassInfo.java:253)
	at org.codehaus.groovy.reflection.ClassInfo.getMetaClass(ClassInfo.java:285)
	at org.codehaus.groovy.reflection.ClassInfo.getMetaClass(ClassInfo.java:295)
	at org.codehaus.groovy.runtime.metaclass.MetaClassRegistryImpl.getMetaClass(MetaClassRegistryImpl.java:261)
	at org.codehaus.groovy.runtime.InvokerHelper.getMetaClass(InvokerHelper.java:873)
	at org.codehaus.groovy.runtime.InvokerHelper.invokePojoMethod(InvokerHelper.java:906)
	at org.codehaus.groovy.runtime.InvokerHelper.invokeMethod(InvokerHelper.java:898)
	at org.codehaus.groovy.runtime.typehandling.DefaultTypeTransformation.castToBoolean(DefaultTypeTransformation.java:185)
	at org.codehaus.groovy.runtime.typehandling.DefaultTypeTransformation.booleanUnbox(DefaultTypeTransformation.java:74)
	at org.codehaus.groovy.control.customizers.ASTTransformationCustomizer.findASTTranformationClass(ASTTransformationCustomizer.groovy:209)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:64)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:564)
	at org.codehaus.groovy.reflection.CachedMethod.invoke(CachedMethod.java:93)
	at org.codehaus.groovy.runtime.callsite.StaticMetaMethodSite$StaticMetaMethodSiteNoUnwrapNoCoerce.invoke(StaticMetaMethodSite.java:151)
	at org.codehaus.groovy.runtime.callsite.StaticMetaMethodSite.callStatic(StaticMetaMethodSite.java:102)
	at org.codehaus.groovy.runtime.callsite.AbstractCallSite.callStatic(AbstractCallSite.java:214)
	at org.codehaus.groovy.control.customizers.ASTTransformationCustomizer.findPhase(ASTTransformationCustomizer.groovy:226)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:64)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:564)
	at org.codehaus.groovy.reflection.CachedMethod.invoke(CachedMethod.java:93)
	at org.codehaus.groovy.runtime.callsite.StaticMetaMethodSite$StaticMetaMethodSiteNoUnwrapNoCoerce.invoke(StaticMetaMethodSite.java:151)
	at org.codehaus.groovy.runtime.callsite.StaticMetaMethodSite.callStatic(StaticMetaMethodSite.java:102)
	at org.codehaus.groovy.runtime.callsite.AbstractCallSite.callStatic(AbstractCallSite.java:214)
	at org.codehaus.groovy.control.customizers.ASTTransformationCustomizer.<init>(ASTTransformationCustomizer.groovy:180)
	at org.codehaus.groovy.control.customizers.ASTTransformationCustomizer.<init>(ASTTransformationCustomizer.groovy:188)
	at groovy.text.markup.MarkupTemplateEngine.<init>(MarkupTemplateEngine.java:94)
	at org.springframework.web.servlet.view.groovy.GroovyMarkupConfigurer.createTemplateEngine(GroovyMarkupConfigurer.java:160)
	at org.springframework.web.servlet.view.groovy.GroovyMarkupConfigurer.afterPropertiesSet(GroovyMarkupConfigurer.java:153)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1862)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1799)
	... 62 common frames omitted
2020-11-25 20:51:27,284 ERROR  [main] TestContextManager: Caught exception while allowing TestExecutionListener [org.springframework.test.context.web.ServletTestExecutionListener@46c093b4] to prepare test instance [com.sf.math.algebra.solvers.PolynomialSolverIntervalTest@731819a0]
java.lang.IllegalStateException: Failed to load ApplicationContext
	at org.springframework.test.context.cache.DefaultCacheAwareContextLoaderDelegate.loadContext(DefaultCacheAwareContextLoaderDelegate.java:132)
	at org.springframework.test.context.support.DefaultTestContext.getApplicationContext(DefaultTestContext.java:123)
	at org.springframework.test.context.web.ServletTestExecutionListener.setUpRequestContextIfNecessary(ServletTestExecutionListener.java:190)
	at org.springframework.test.context.web.ServletTestExecutionListener.prepareTestInstance(ServletTestExecutionListener.java:132)
	at org.springframework.test.context.TestContextManager.prepareTestInstance(TestContextManager.java:244)
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner.createTest(SpringJUnit4ClassRunner.java:227)
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner$1.runReflectiveCall(SpringJUnit4ClassRunner.java:289)
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner.methodBlock(SpringJUnit4ClassRunner.java:291)
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner.runChild(SpringJUnit4ClassRunner.java:246)
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner.runChild(SpringJUnit4ClassRunner.java:97)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:290)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:71)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:58)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268)
	at org.junit.internal.runners.statements.RunBefores.evaluate(RunBefores.java:26)
	at org.springframework.test.context.junit4.statements.RunBeforeTestClassCallbacks.evaluate(RunBeforeTestClassCallbacks.java:61)
	at org.junit.internal.runners.statements.RunAfters.evaluate(RunAfters.java:27)
	at org.springframework.test.context.junit4.statements.RunAfterTestClassCallbacks.evaluate(RunAfterTestClassCallbacks.java:70)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:363)
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner.run(SpringJUnit4ClassRunner.java:190)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:137)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:115)
	at org.junit.vintage.engine.execution.RunnerExecutor.execute(RunnerExecutor.java:40)
	at java.base/java.util.stream.ForEachOps$ForEachOp$OfRef.accept(ForEachOps.java:183)
	at java.base/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:195)
	at java.base/java.util.Iterator.forEachRemaining(Iterator.java:133)
	at java.base/java.util.Spliterators$IteratorSpliterator.forEachRemaining(Spliterators.java:1801)
	at java.base/java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:484)
	at java.base/java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:474)
	at java.base/java.util.stream.ForEachOps$ForEachOp.evaluateSequential(ForEachOps.java:150)
	at java.base/java.util.stream.ForEachOps$ForEachOp$OfRef.evaluateSequential(ForEachOps.java:173)
	at java.base/java.util.stream.AbstractPipeline.evaluate(AbstractPipeline.java:234)
	at java.base/java.util.stream.ReferencePipeline.forEach(ReferencePipeline.java:497)
	at org.junit.vintage.engine.VintageTestEngine.executeAllChildren(VintageTestEngine.java:80)
	at org.junit.vintage.engine.VintageTestEngine.execute(VintageTestEngine.java:71)
	at org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:220)
	at org.junit.platform.launcher.core.DefaultLauncher.lambda$execute$6(DefaultLauncher.java:188)
	at org.junit.platform.launcher.core.DefaultLauncher.withInterceptedStreams(DefaultLauncher.java:202)
	at org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:181)
	at org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:128)
	at org.apache.maven.surefire.junitplatform.JUnitPlatformProvider.invokeAllTests(JUnitPlatformProvider.java:150)
	at org.apache.maven.surefire.junitplatform.JUnitPlatformProvider.invoke(JUnitPlatformProvider.java:124)
	at org.apache.maven.surefire.booter.ForkedBooter.invokeProviderInSameClassLoader(ForkedBooter.java:384)
	at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:345)
	at org.apache.maven.surefire.booter.ForkedBooter.execute(ForkedBooter.java:126)
	at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:418)
Caused by: org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'groovyMarkupConfigurer' defined in class path resource [org/springframework/boot/autoconfigure/groovy/template/GroovyTemplateAutoConfiguration$GroovyMarkupConfiguration.class]: Invocation of init method failed; nested exception is java.lang.reflect.InaccessibleObjectException: Unable to make jdk.internal.loader.ClassLoaders$AppClassLoader(jdk.internal.loader.ClassLoaders$PlatformClassLoader,jdk.internal.loader.URLClassPath) accessible: module java.base does not "opens jdk.internal.loader" to unnamed module @5fcacc0
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1803)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:595)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:517)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:323)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:222)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:321)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:202)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(DefaultListableBeanFactory.java:879)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:878)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:550)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:747)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:397)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:315)
	at org.springframework.boot.test.context.SpringBootContextLoader.loadContext(SpringBootContextLoader.java:125)
	at org.springframework.test.context.cache.DefaultCacheAwareContextLoaderDelegate.loadContextInternal(DefaultCacheAwareContextLoaderDelegate.java:99)
	at org.springframework.test.context.cache.DefaultCacheAwareContextLoaderDelegate.loadContext(DefaultCacheAwareContextLoaderDelegate.java:124)
	... 47 common frames omitted
Caused by: java.lang.reflect.InaccessibleObjectException: Unable to make jdk.internal.loader.ClassLoaders$AppClassLoader(jdk.internal.loader.ClassLoaders$PlatformClassLoader,jdk.internal.loader.URLClassPath) accessible: module java.base does not "opens jdk.internal.loader" to unnamed module @5fcacc0
	at java.base/java.lang.reflect.AccessibleObject.checkCanSetAccessible(AccessibleObject.java:361)
	at java.base/java.lang.reflect.AccessibleObject.checkCanSetAccessible(AccessibleObject.java:301)
	at java.base/java.lang.reflect.Constructor.checkCanSetAccessible(Constructor.java:189)
	at java.base/java.lang.reflect.Constructor.setAccessible(Constructor.java:182)
	at org.codehaus.groovy.reflection.CachedConstructor$1.run(CachedConstructor.java:44)
	at java.base/java.security.AccessController.doPrivileged(AccessController.java:312)
	at org.codehaus.groovy.reflection.CachedConstructor.<init>(CachedConstructor.java:42)
	at org.codehaus.groovy.reflection.CachedClass$2.initValue(CachedClass.java:79)
	at org.codehaus.groovy.reflection.CachedClass$2.initValue(CachedClass.java:69)
	at org.codehaus.groovy.util.LazyReference.getLocked(LazyReference.java:49)
	at org.codehaus.groovy.util.LazyReference.get(LazyReference.java:36)
	at org.codehaus.groovy.reflection.CachedClass.getConstructors(CachedClass.java:268)
	at groovy.lang.MetaClassImpl.<init>(MetaClassImpl.java:218)
	at groovy.lang.MetaClassImpl.<init>(MetaClassImpl.java:228)
	at groovy.lang.MetaClassRegistry$MetaClassCreationHandle.createNormalMetaClass(MetaClassRegistry.java:171)
	at groovy.lang.MetaClassRegistry$MetaClassCreationHandle.createWithCustomLookup(MetaClassRegistry.java:161)
	at groovy.lang.MetaClassRegistry$MetaClassCreationHandle.create(MetaClassRegistry.java:144)
	at org.codehaus.groovy.reflection.ClassInfo.getMetaClassUnderLock(ClassInfo.java:253)
	at org.codehaus.groovy.reflection.ClassInfo.getMetaClass(ClassInfo.java:285)
	at org.codehaus.groovy.reflection.ClassInfo.getMetaClass(ClassInfo.java:295)
	at org.codehaus.groovy.runtime.metaclass.MetaClassRegistryImpl.getMetaClass(MetaClassRegistryImpl.java:261)
	at org.codehaus.groovy.runtime.InvokerHelper.getMetaClass(InvokerHelper.java:873)
	at org.codehaus.groovy.runtime.InvokerHelper.invokePojoMethod(InvokerHelper.java:906)
	at org.codehaus.groovy.runtime.InvokerHelper.invokeMethod(InvokerHelper.java:898)
	at org.codehaus.groovy.runtime.typehandling.DefaultTypeTransformation.castToBoolean(DefaultTypeTransformation.java:185)
	at org.codehaus.groovy.runtime.typehandling.DefaultTypeTransformation.booleanUnbox(DefaultTypeTransformation.java:74)
	at org.codehaus.groovy.control.customizers.ASTTransformationCustomizer.findASTTranformationClass(ASTTransformationCustomizer.groovy:209)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:64)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:564)
	at org.codehaus.groovy.reflection.CachedMethod.invoke(CachedMethod.java:93)
	at org.codehaus.groovy.runtime.callsite.StaticMetaMethodSite$StaticMetaMethodSiteNoUnwrapNoCoerce.invoke(StaticMetaMethodSite.java:151)
	at org.codehaus.groovy.runtime.callsite.StaticMetaMethodSite.callStatic(StaticMetaMethodSite.java:102)
	at org.codehaus.groovy.runtime.callsite.AbstractCallSite.callStatic(AbstractCallSite.java:214)
	at org.codehaus.groovy.control.customizers.ASTTransformationCustomizer.findPhase(ASTTransformationCustomizer.groovy:226)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:64)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:564)
	at org.codehaus.groovy.reflection.CachedMethod.invoke(CachedMethod.java:93)
	at org.codehaus.groovy.runtime.callsite.StaticMetaMethodSite$StaticMetaMethodSiteNoUnwrapNoCoerce.invoke(StaticMetaMethodSite.java:151)
	at org.codehaus.groovy.runtime.callsite.StaticMetaMethodSite.callStatic(StaticMetaMethodSite.java:102)
	at org.codehaus.groovy.runtime.callsite.AbstractCallSite.callStatic(AbstractCallSite.java:214)
	at org.codehaus.groovy.control.customizers.ASTTransformationCustomizer.<init>(ASTTransformationCustomizer.groovy:180)
	at org.codehaus.groovy.control.customizers.ASTTransformationCustomizer.<init>(ASTTransformationCustomizer.groovy:188)
	at groovy.text.markup.MarkupTemplateEngine.<init>(MarkupTemplateEngine.java:94)
	at org.springframework.web.servlet.view.groovy.GroovyMarkupConfigurer.createTemplateEngine(GroovyMarkupConfigurer.java:160)
	at org.springframework.web.servlet.view.groovy.GroovyMarkupConfigurer.afterPropertiesSet(GroovyMarkupConfigurer.java:153)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1862)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1799)
	... 62 common frames omitted
2020-11-25 20:51:27,870 DEBUG  [main] BasicTypeRegistry: Adding type registration boolean -> org.hibernate.type.BooleanType@59127611
2020-11-25 20:51:27,874 DEBUG  [main] BasicTypeRegistry: Adding type registration boolean -> org.hibernate.type.BooleanType@59127611
2020-11-25 20:51:27,874 DEBUG  [main] BasicTypeRegistry: Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@59127611
2020-11-25 20:51:27,874 DEBUG  [main] BasicTypeRegistry: Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@18db3b3c
2020-11-25 20:51:27,875 DEBUG  [main] BasicTypeRegistry: Adding type registration true_false -> org.hibernate.type.TrueFalseType@5c1c9881
2020-11-25 20:51:27,875 DEBUG  [main] BasicTypeRegistry: Adding type registration yes_no -> org.hibernate.type.YesNoType@5d37aa0f
2020-11-25 20:51:27,875 DEBUG  [main] BasicTypeRegistry: Adding type registration byte -> org.hibernate.type.ByteType@3e4afd10
2020-11-25 20:51:27,875 DEBUG  [main] BasicTypeRegistry: Adding type registration byte -> org.hibernate.type.ByteType@3e4afd10
2020-11-25 20:51:27,875 DEBUG  [main] BasicTypeRegistry: Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@3e4afd10
2020-11-25 20:51:27,876 DEBUG  [main] BasicTypeRegistry: Adding type registration character -> org.hibernate.type.CharacterType@48d44b46
2020-11-25 20:51:27,876 DEBUG  [main] BasicTypeRegistry: Adding type registration char -> org.hibernate.type.CharacterType@48d44b46
2020-11-25 20:51:27,876 DEBUG  [main] BasicTypeRegistry: Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@48d44b46
2020-11-25 20:51:27,876 DEBUG  [main] BasicTypeRegistry: Adding type registration short -> org.hibernate.type.ShortType@dd20ebc
2020-11-25 20:51:27,876 DEBUG  [main] BasicTypeRegistry: Adding type registration short -> org.hibernate.type.ShortType@dd20ebc
2020-11-25 20:51:27,877 DEBUG  [main] BasicTypeRegistry: Adding type registration java.lang.Short -> org.hibernate.type.ShortType@dd20ebc
2020-11-25 20:51:27,877 DEBUG  [main] BasicTypeRegistry: Adding type registration integer -> org.hibernate.type.IntegerType@5f7cd50e
2020-11-25 20:51:27,878 DEBUG  [main] BasicTypeRegistry: Adding type registration int -> org.hibernate.type.IntegerType@5f7cd50e
2020-11-25 20:51:27,878 DEBUG  [main] BasicTypeRegistry: Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@5f7cd50e
2020-11-25 20:51:27,878 DEBUG  [main] BasicTypeRegistry: Adding type registration long -> org.hibernate.type.LongType@359e27d2
2020-11-25 20:51:27,878 DEBUG  [main] BasicTypeRegistry: Adding type registration long -> org.hibernate.type.LongType@359e27d2
2020-11-25 20:51:27,878 DEBUG  [main] BasicTypeRegistry: Adding type registration java.lang.Long -> org.hibernate.type.LongType@359e27d2
2020-11-25 20:51:27,879 DEBUG  [main] BasicTypeRegistry: Adding type registration float -> org.hibernate.type.FloatType@29b8df5
2020-11-25 20:51:27,879 DEBUG  [main] BasicTypeRegistry: Adding type registration float -> org.hibernate.type.FloatType@29b8df5
2020-11-25 20:51:27,879 DEBUG  [main] BasicTypeRegistry: Adding type registration java.lang.Float -> org.hibernate.type.FloatType@29b8df5
2020-11-25 20:51:27,879 DEBUG  [main] BasicTypeRegistry: Adding type registration double -> org.hibernate.type.DoubleType@36cfe107
2020-11-25 20:51:27,879 DEBUG  [main] BasicTypeRegistry: Adding type registration double -> org.hibernate.type.DoubleType@36cfe107
2020-11-25 20:51:27,879 DEBUG  [main] BasicTypeRegistry: Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@36cfe107
2020-11-25 20:51:27,880 DEBUG  [main] BasicTypeRegistry: Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@139089a4
2020-11-25 20:51:27,880 DEBUG  [main] BasicTypeRegistry: Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@139089a4
2020-11-25 20:51:27,881 DEBUG  [main] BasicTypeRegistry: Adding type registration big_integer -> org.hibernate.type.BigIntegerType@9f1ca74
2020-11-25 20:51:27,881 DEBUG  [main] BasicTypeRegistry: Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@9f1ca74
2020-11-25 20:51:27,881 DEBUG  [main] BasicTypeRegistry: Adding type registration string -> org.hibernate.type.StringType@393ae7a0
2020-11-25 20:51:27,881 DEBUG  [main] BasicTypeRegistry: Adding type registration java.lang.String -> org.hibernate.type.StringType@393ae7a0
2020-11-25 20:51:27,881 DEBUG  [main] BasicTypeRegistry: Adding type registration nstring -> org.hibernate.type.StringNVarcharType@7ee12d58
2020-11-25 20:51:27,882 DEBUG  [main] BasicTypeRegistry: Adding type registration ncharacter -> org.hibernate.type.CharacterNCharType@34e990cc
2020-11-25 20:51:27,882 DEBUG  [main] BasicTypeRegistry: Adding type registration url -> org.hibernate.type.UrlType@6de84336
2020-11-25 20:51:27,882 DEBUG  [main] BasicTypeRegistry: Adding type registration java.net.URL -> org.hibernate.type.UrlType@6de84336
2020-11-25 20:51:27,882 DEBUG  [main] BasicTypeRegistry: Adding type registration Duration -> org.hibernate.type.DurationType@69b37f5c
2020-11-25 20:51:27,882 DEBUG  [main] BasicTypeRegistry: Adding type registration java.time.Duration -> org.hibernate.type.DurationType@69b37f5c
2020-11-25 20:51:27,882 DEBUG  [main] BasicTypeRegistry: Adding type registration Instant -> org.hibernate.type.InstantType@580ffea
2020-11-25 20:51:27,883 DEBUG  [main] BasicTypeRegistry: Adding type registration java.time.Instant -> org.hibernate.type.InstantType@580ffea
2020-11-25 20:51:27,883 DEBUG  [main] BasicTypeRegistry: Adding type registration LocalDateTime -> org.hibernate.type.LocalDateTimeType@79d49790
2020-11-25 20:51:27,883 DEBUG  [main] BasicTypeRegistry: Adding type registration java.time.LocalDateTime -> org.hibernate.type.LocalDateTimeType@79d49790
2020-11-25 20:51:27,883 DEBUG  [main] BasicTypeRegistry: Adding type registration LocalDate -> org.hibernate.type.LocalDateType@3e9fb485
2020-11-25 20:51:27,883 DEBUG  [main] BasicTypeRegistry: Adding type registration java.time.LocalDate -> org.hibernate.type.LocalDateType@3e9fb485
2020-11-25 20:51:27,883 DEBUG  [main] BasicTypeRegistry: Adding type registration LocalTime -> org.hibernate.type.LocalTimeType@419f0ea
2020-11-25 20:51:27,883 DEBUG  [main] BasicTypeRegistry: Adding type registration java.time.LocalTime -> org.hibernate.type.LocalTimeType@419f0ea
2020-11-25 20:51:27,883 DEBUG  [main] BasicTypeRegistry: Adding type registration OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@87aec6a
2020-11-25 20:51:27,884 DEBUG  [main] BasicTypeRegistry: Adding type registration java.time.OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@87aec6a
2020-11-25 20:51:27,884 DEBUG  [main] BasicTypeRegistry: Adding type registration OffsetTime -> org.hibernate.type.OffsetTimeType@5529522f
2020-11-25 20:51:27,884 DEBUG  [main] BasicTypeRegistry: Adding type registration java.time.OffsetTime -> org.hibernate.type.OffsetTimeType@5529522f
2020-11-25 20:51:27,884 DEBUG  [main] BasicTypeRegistry: Adding type registration ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@152e7703
2020-11-25 20:51:27,884 DEBUG  [main] BasicTypeRegistry: Adding type registration java.time.ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@152e7703
2020-11-25 20:51:27,884 DEBUG  [main] BasicTypeRegistry: Adding type registration date -> org.hibernate.type.DateType@24fc2c80
2020-11-25 20:51:27,884 DEBUG  [main] BasicTypeRegistry: Adding type registration java.sql.Date -> org.hibernate.type.DateType@24fc2c80
2020-11-25 20:51:27,884 DEBUG  [main] BasicTypeRegistry: Adding type registration time -> org.hibernate.type.TimeType@48b3b1b8
2020-11-25 20:51:27,884 DEBUG  [main] BasicTypeRegistry: Adding type registration java.sql.Time -> org.hibernate.type.TimeType@48b3b1b8
2020-11-25 20:51:27,884 DEBUG  [main] BasicTypeRegistry: Adding type registration timestamp -> org.hibernate.type.TimestampType@686b1e2d
2020-11-25 20:51:27,884 DEBUG  [main] BasicTypeRegistry: Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@686b1e2d
2020-11-25 20:51:27,885 DEBUG  [main] BasicTypeRegistry: Adding type registration java.util.Date -> org.hibernate.type.TimestampType@686b1e2d
2020-11-25 20:51:27,885 DEBUG  [main] BasicTypeRegistry: Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@652b3733
2020-11-25 20:51:27,885 DEBUG  [main] BasicTypeRegistry: Adding type registration calendar -> org.hibernate.type.CalendarType@5be7b749
2020-11-25 20:51:27,885 DEBUG  [main] BasicTypeRegistry: Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@5be7b749
2020-11-25 20:51:27,885 DEBUG  [main] BasicTypeRegistry: Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@5be7b749
2020-11-25 20:51:27,885 DEBUG  [main] BasicTypeRegistry: Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@177ddd24
2020-11-25 20:51:27,885 DEBUG  [main] BasicTypeRegistry: Adding type registration locale -> org.hibernate.type.LocaleType@61ad30f6
2020-11-25 20:51:27,885 DEBUG  [main] BasicTypeRegistry: Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@61ad30f6
2020-11-25 20:51:27,885 DEBUG  [main] BasicTypeRegistry: Adding type registration currency -> org.hibernate.type.CurrencyType@574ebdaf
2020-11-25 20:51:27,885 DEBUG  [main] BasicTypeRegistry: Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@574ebdaf
2020-11-25 20:51:27,885 DEBUG  [main] BasicTypeRegistry: Adding type registration timezone -> org.hibernate.type.TimeZoneType@123ca460
2020-11-25 20:51:27,885 DEBUG  [main] BasicTypeRegistry: Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@123ca460
2020-11-25 20:51:27,885 DEBUG  [main] BasicTypeRegistry: Adding type registration class -> org.hibernate.type.ClassType@3c9f4376
2020-11-25 20:51:27,886 DEBUG  [main] BasicTypeRegistry: Adding type registration java.lang.Class -> org.hibernate.type.ClassType@3c9f4376
2020-11-25 20:51:27,886 DEBUG  [main] BasicTypeRegistry: Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@1958c0d9
2020-11-25 20:51:27,886 DEBUG  [main] BasicTypeRegistry: Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@1958c0d9
2020-11-25 20:51:27,886 DEBUG  [main] BasicTypeRegistry: Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@5fc7255c
2020-11-25 20:51:27,886 DEBUG  [main] BasicTypeRegistry: Adding type registration binary -> org.hibernate.type.BinaryType@79ba0285
2020-11-25 20:51:27,886 DEBUG  [main] BasicTypeRegistry: Adding type registration byte[] -> org.hibernate.type.BinaryType@79ba0285
2020-11-25 20:51:27,886 DEBUG  [main] BasicTypeRegistry: Adding type registration [B -> org.hibernate.type.BinaryType@79ba0285
2020-11-25 20:51:27,886 DEBUG  [main] BasicTypeRegistry: Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@598778cc
2020-11-25 20:51:27,887 DEBUG  [main] BasicTypeRegistry: Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@598778cc
2020-11-25 20:51:27,887 DEBUG  [main] BasicTypeRegistry: Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@598778cc
2020-11-25 20:51:27,887 DEBUG  [main] BasicTypeRegistry: Adding type registration row_version -> org.hibernate.type.RowVersionType@11cadb32
2020-11-25 20:51:27,887 DEBUG  [main] BasicTypeRegistry: Adding type registration image -> org.hibernate.type.ImageType@37986daf
2020-11-25 20:51:27,887 DEBUG  [main] BasicTypeRegistry: Adding type registration characters -> org.hibernate.type.CharArrayType@710afd47
2020-11-25 20:51:27,887 DEBUG  [main] BasicTypeRegistry: Adding type registration char[] -> org.hibernate.type.CharArrayType@710afd47
2020-11-25 20:51:27,887 DEBUG  [main] BasicTypeRegistry: Adding type registration [C -> org.hibernate.type.CharArrayType@710afd47
2020-11-25 20:51:27,887 DEBUG  [main] BasicTypeRegistry: Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@12670e55
2020-11-25 20:51:27,887 DEBUG  [main] BasicTypeRegistry: Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@12670e55
2020-11-25 20:51:27,887 DEBUG  [main] BasicTypeRegistry: Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@12670e55
2020-11-25 20:51:27,887 DEBUG  [main] BasicTypeRegistry: Adding type registration text -> org.hibernate.type.TextType@32ba5c65
2020-11-25 20:51:27,888 DEBUG  [main] BasicTypeRegistry: Adding type registration ntext -> org.hibernate.type.NTextType@10166230
2020-11-25 20:51:27,888 DEBUG  [main] BasicTypeRegistry: Adding type registration blob -> org.hibernate.type.BlobType@13dd7887
2020-11-25 20:51:27,888 DEBUG  [main] BasicTypeRegistry: Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@13dd7887
2020-11-25 20:51:27,888 DEBUG  [main] BasicTypeRegistry: Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@3cbfdf5c
2020-11-25 20:51:27,888 DEBUG  [main] BasicTypeRegistry: Adding type registration clob -> org.hibernate.type.ClobType@58636b50
2020-11-25 20:51:27,888 DEBUG  [main] BasicTypeRegistry: Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@58636b50
2020-11-25 20:51:27,888 DEBUG  [main] BasicTypeRegistry: Adding type registration nclob -> org.hibernate.type.NClobType@1e5aacd9
2020-11-25 20:51:27,888 DEBUG  [main] BasicTypeRegistry: Adding type registration java.sql.NClob -> org.hibernate.type.NClobType@1e5aacd9
2020-11-25 20:51:27,888 DEBUG  [main] BasicTypeRegistry: Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@120411ec
2020-11-25 20:51:27,888 DEBUG  [main] BasicTypeRegistry: Adding type registration materialized_nclob -> org.hibernate.type.MaterializedNClobType@1a34a51e
2020-11-25 20:51:27,888 DEBUG  [main] BasicTypeRegistry: Adding type registration serializable -> org.hibernate.type.SerializableType@6b091a92
2020-11-25 20:51:27,888 DEBUG  [main] BasicTypeRegistry: Adding type registration object -> org.hibernate.type.ObjectType@35329a05
2020-11-25 20:51:27,889 DEBUG  [main] BasicTypeRegistry: Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@35329a05
2020-11-25 20:51:27,889 DEBUG  [main] BasicTypeRegistry: Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@6eb506d0
2020-11-25 20:51:27,889 DEBUG  [main] BasicTypeRegistry: Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@79b3f1c6
2020-11-25 20:51:27,889 DEBUG  [main] BasicTypeRegistry: Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@3cc148d
2020-11-25 20:51:27,889 DEBUG  [main] BasicTypeRegistry: Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@172f88b1
2020-11-25 20:51:27,889 DEBUG  [main] BasicTypeRegistry: Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@51ea9f02
2020-11-25 20:51:27,889 DEBUG  [main] BasicTypeRegistry: Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@37b17938
2020-11-25 20:51:27,890 DEBUG  [main] BasicTypeRegistry: Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@54ba7b3f
2020-11-25 20:51:27,890 DEBUG  [main] BasicTypeRegistry: Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@3f3b0b19
2020-11-25 20:51:27,901 DEBUG  [main] TypeConfiguration$Scope: Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@1a26eecb] to MetadataBuildingContext [org.hibernate.boot.internal.MetadataBuildingContextRootImpl@6382bc3f]
2020-11-25 20:51:27,910 DEBUG  [main] EnumType: Using NAMED-based conversion for Enum com.sf.back.entities.Kind
2020-11-25 20:51:27,912 DEBUG  [main] EnumType: Using NAMED-based conversion for Enum com.sf.back.entities.Kind
2020-11-25 20:51:27,928 DEBUG  [main] TypeConfiguration$Scope: Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@1a26eecb] to SessionFactoryImpl [org.hibernate.internal.SessionFactoryImpl@2132629e]
2020-11-25 20:51:27,929 DEBUG  [main] EnumType: Using NAMED-based conversion for Enum com.sf.back.entities.Kind
2020-11-25 20:51:27,929 DEBUG  [main] EnumType: Using NAMED-based conversion for Enum com.sf.back.entities.Kind
2020-11-25 20:51:27,951 DEBUG  [main] EnumType: Using NAMED-based conversion for Enum com.sf.back.entities.Kind
2020-11-25 20:51:27,951 DEBUG  [main] EnumType: Using NAMED-based conversion for Enum com.sf.back.entities.Kind
2020-11-25 20:51:27,978 DEBUG  [main] EnumType: Using NAMED-based conversion for Enum com.sf.back.entities.Kind
2020-11-25 20:51:27,978 DEBUG  [main] EnumType: Using NAMED-based conversion for Enum com.sf.back.entities.Kind
2020-11-25 20:51:27,982 DEBUG  [main] EnumType: Using NAMED-based conversion for Enum com.sf.back.entities.Kind
2020-11-25 20:51:27,991 TRACE  [main] TypeConfiguration$Scope: Handling #sessionFactoryCreated from [org.hibernate.internal.SessionFactoryImpl@2132629e] for TypeConfiguration
2020-11-25 20:51:28,103 WARN   [main] JpaBaseConfiguration$JpaWebConfiguration: spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2020-11-25 20:51:28,197 WARN   [main] GenericWebApplicationContext: Exception encountered during context initialization - cancelling refresh attempt: org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'groovyMarkupConfigurer' defined in class path resource [org/springframework/boot/autoconfigure/groovy/template/GroovyTemplateAutoConfiguration$GroovyMarkupConfiguration.class]: Invocation of init method failed; nested exception is java.lang.reflect.InaccessibleObjectException: Unable to make jdk.internal.loader.ClassLoaders$AppClassLoader(jdk.internal.loader.ClassLoaders$PlatformClassLoader,jdk.internal.loader.URLClassPath) accessible: module java.base does not "opens jdk.internal.loader" to unnamed module @5fcacc0
2020-11-25 20:51:28,201 TRACE  [main] TypeConfiguration$Scope: Handling #sessionFactoryClosed from [org.hibernate.internal.SessionFactoryImpl@2132629e] for TypeConfiguration
2020-11-25 20:51:28,201 DEBUG  [main] TypeConfiguration$Scope: Un-scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration$Scope@52c4bf29] from SessionFactory [org.hibernate.internal.SessionFactoryImpl@2132629e]
2020-11-25 20:51:28,207 ERROR  [main] SpringApplication: Application run failed
org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'groovyMarkupConfigurer' defined in class path resource [org/springframework/boot/autoconfigure/groovy/template/GroovyTemplateAutoConfiguration$GroovyMarkupConfiguration.class]: Invocation of init method failed; nested exception is java.lang.reflect.InaccessibleObjectException: Unable to make jdk.internal.loader.ClassLoaders$AppClassLoader(jdk.internal.loader.ClassLoaders$PlatformClassLoader,jdk.internal.loader.URLClassPath) accessible: module java.base does not "opens jdk.internal.loader" to unnamed module @5fcacc0
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1803)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:595)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:517)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:323)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:222)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:321)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:202)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(DefaultListableBeanFactory.java:879)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:878)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:550)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:747)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:397)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:315)
	at org.springframework.boot.test.context.SpringBootContextLoader.loadContext(SpringBootContextLoader.java:125)
	at org.springframework.test.context.cache.DefaultCacheAwareContextLoaderDelegate.loadContextInternal(DefaultCacheAwareContextLoaderDelegate.java:99)
	at org.springframework.test.context.cache.DefaultCacheAwareContextLoaderDelegate.loadContext(DefaultCacheAwareContextLoaderDelegate.java:124)
	at org.springframework.test.context.support.DefaultTestContext.getApplicationContext(DefaultTestContext.java:123)
	at org.springframework.test.context.web.ServletTestExecutionListener.setUpRequestContextIfNecessary(ServletTestExecutionListener.java:190)
	at org.springframework.test.context.web.ServletTestExecutionListener.prepareTestInstance(ServletTestExecutionListener.java:132)
	at org.springframework.test.context.TestContextManager.prepareTestInstance(TestContextManager.java:244)
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner.createTest(SpringJUnit4ClassRunner.java:227)
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner$1.runReflectiveCall(SpringJUnit4ClassRunner.java:289)
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner.methodBlock(SpringJUnit4ClassRunner.java:291)
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner.runChild(SpringJUnit4ClassRunner.java:246)
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner.runChild(SpringJUnit4ClassRunner.java:97)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:290)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:71)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:58)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268)
	at org.junit.internal.runners.statements.RunBefores.evaluate(RunBefores.java:26)
	at org.springframework.test.context.junit4.statements.RunBeforeTestClassCallbacks.evaluate(RunBeforeTestClassCallbacks.java:61)
	at org.junit.internal.runners.statements.RunAfters.evaluate(RunAfters.java:27)
	at org.springframework.test.context.junit4.statements.RunAfterTestClassCallbacks.evaluate(RunAfterTestClassCallbacks.java:70)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:363)
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner.run(SpringJUnit4ClassRunner.java:190)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:137)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:115)
	at org.junit.vintage.engine.execution.RunnerExecutor.execute(RunnerExecutor.java:40)
	at java.base/java.util.stream.ForEachOps$ForEachOp$OfRef.accept(ForEachOps.java:183)
	at java.base/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:195)
	at java.base/java.util.Iterator.forEachRemaining(Iterator.java:133)
	at java.base/java.util.Spliterators$IteratorSpliterator.forEachRemaining(Spliterators.java:1801)
	at java.base/java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:484)
	at java.base/java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:474)
	at java.base/java.util.stream.ForEachOps$ForEachOp.evaluateSequential(ForEachOps.java:150)
	at java.base/java.util.stream.ForEachOps$ForEachOp$OfRef.evaluateSequential(ForEachOps.java:173)
	at java.base/java.util.stream.AbstractPipeline.evaluate(AbstractPipeline.java:234)
	at java.base/java.util.stream.ReferencePipeline.forEach(ReferencePipeline.java:497)
	at org.junit.vintage.engine.VintageTestEngine.executeAllChildren(VintageTestEngine.java:80)
	at org.junit.vintage.engine.VintageTestEngine.execute(VintageTestEngine.java:71)
	at org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:220)
	at org.junit.platform.launcher.core.DefaultLauncher.lambda$execute$6(DefaultLauncher.java:188)
	at org.junit.platform.launcher.core.DefaultLauncher.withInterceptedStreams(DefaultLauncher.java:202)
	at org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:181)
	at org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:128)
	at org.apache.maven.surefire.junitplatform.JUnitPlatformProvider.invokeAllTests(JUnitPlatformProvider.java:150)
	at org.apache.maven.surefire.junitplatform.JUnitPlatformProvider.invoke(JUnitPlatformProvider.java:124)
	at org.apache.maven.surefire.booter.ForkedBooter.invokeProviderInSameClassLoader(ForkedBooter.java:384)
	at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:345)
	at org.apache.maven.surefire.booter.ForkedBooter.execute(ForkedBooter.java:126)
	at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:418)
Caused by: java.lang.reflect.InaccessibleObjectException: Unable to make jdk.internal.loader.ClassLoaders$AppClassLoader(jdk.internal.loader.ClassLoaders$PlatformClassLoader,jdk.internal.loader.URLClassPath) accessible: module java.base does not "opens jdk.internal.loader" to unnamed module @5fcacc0
	at java.base/java.lang.reflect.AccessibleObject.checkCanSetAccessible(AccessibleObject.java:361)
	at java.base/java.lang.reflect.AccessibleObject.checkCanSetAccessible(AccessibleObject.java:301)
	at java.base/java.lang.reflect.Constructor.checkCanSetAccessible(Constructor.java:189)
	at java.base/java.lang.reflect.Constructor.setAccessible(Constructor.java:182)
	at org.codehaus.groovy.reflection.CachedConstructor$1.run(CachedConstructor.java:44)
	at java.base/java.security.AccessController.doPrivileged(AccessController.java:312)
	at org.codehaus.groovy.reflection.CachedConstructor.<init>(CachedConstructor.java:42)
	at org.codehaus.groovy.reflection.CachedClass$2.initValue(CachedClass.java:79)
	at org.codehaus.groovy.reflection.CachedClass$2.initValue(CachedClass.java:69)
	at org.codehaus.groovy.util.LazyReference.getLocked(LazyReference.java:49)
	at org.codehaus.groovy.util.LazyReference.get(LazyReference.java:36)
	at org.codehaus.groovy.reflection.CachedClass.getConstructors(CachedClass.java:268)
	at groovy.lang.MetaClassImpl.<init>(MetaClassImpl.java:218)
	at groovy.lang.MetaClassImpl.<init>(MetaClassImpl.java:228)
	at groovy.lang.MetaClassRegistry$MetaClassCreationHandle.createNormalMetaClass(MetaClassRegistry.java:171)
	at groovy.lang.MetaClassRegistry$MetaClassCreationHandle.createWithCustomLookup(MetaClassRegistry.java:161)
	at groovy.lang.MetaClassRegistry$MetaClassCreationHandle.create(MetaClassRegistry.java:144)
	at org.codehaus.groovy.reflection.ClassInfo.getMetaClassUnderLock(ClassInfo.java:253)
	at org.codehaus.groovy.reflection.ClassInfo.getMetaClass(ClassInfo.java:285)
	at org.codehaus.groovy.reflection.ClassInfo.getMetaClass(ClassInfo.java:295)
	at org.codehaus.groovy.runtime.metaclass.MetaClassRegistryImpl.getMetaClass(MetaClassRegistryImpl.java:261)
	at org.codehaus.groovy.runtime.InvokerHelper.getMetaClass(InvokerHelper.java:873)
	at org.codehaus.groovy.runtime.InvokerHelper.invokePojoMethod(InvokerHelper.java:906)
	at org.codehaus.groovy.runtime.InvokerHelper.invokeMethod(InvokerHelper.java:898)
	at org.codehaus.groovy.runtime.typehandling.DefaultTypeTransformation.castToBoolean(DefaultTypeTransformation.java:185)
	at org.codehaus.groovy.runtime.typehandling.DefaultTypeTransformation.booleanUnbox(DefaultTypeTransformation.java:74)
	at org.codehaus.groovy.control.customizers.ASTTransformationCustomizer.findASTTranformationClass(ASTTransformationCustomizer.groovy:209)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:64)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:564)
	at org.codehaus.groovy.reflection.CachedMethod.invoke(CachedMethod.java:93)
	at org.codehaus.groovy.runtime.callsite.StaticMetaMethodSite$StaticMetaMethodSiteNoUnwrapNoCoerce.invoke(StaticMetaMethodSite.java:151)
	at org.codehaus.groovy.runtime.callsite.StaticMetaMethodSite.callStatic(StaticMetaMethodSite.java:102)
	at org.codehaus.groovy.runtime.callsite.AbstractCallSite.callStatic(AbstractCallSite.java:214)
	at org.codehaus.groovy.control.customizers.ASTTransformationCustomizer.findPhase(ASTTransformationCustomizer.groovy:226)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:64)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:564)
	at org.codehaus.groovy.reflection.CachedMethod.invoke(CachedMethod.java:93)
	at org.codehaus.groovy.runtime.callsite.StaticMetaMethodSite$StaticMetaMethodSiteNoUnwrapNoCoerce.invoke(StaticMetaMethodSite.java:151)
	at org.codehaus.groovy.runtime.callsite.StaticMetaMethodSite.callStatic(StaticMetaMethodSite.java:102)
	at org.codehaus.groovy.runtime.callsite.AbstractCallSite.callStatic(AbstractCallSite.java:214)
	at org.codehaus.groovy.control.customizers.ASTTransformationCustomizer.<init>(ASTTransformationCustomizer.groovy:180)
	at org.codehaus.groovy.control.customizers.ASTTransformationCustomizer.<init>(ASTTransformationCustomizer.groovy:188)
	at groovy.text.markup.MarkupTemplateEngine.<init>(MarkupTemplateEngine.java:94)
	at org.springframework.web.servlet.view.groovy.GroovyMarkupConfigurer.createTemplateEngine(GroovyMarkupConfigurer.java:160)
	at org.springframework.web.servlet.view.groovy.GroovyMarkupConfigurer.afterPropertiesSet(GroovyMarkupConfigurer.java:153)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1862)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1799)
	... 62 common frames omitted
2020-11-25 20:51:28,208 ERROR  [main] TestContextManager: Caught exception while allowing TestExecutionListener [org.springframework.test.context.web.ServletTestExecutionListener@46c093b4] to prepare test instance [com.sf.math.algebra.solvers.PolynomialSolverIntervalTest@765611c9]
java.lang.IllegalStateException: Failed to load ApplicationContext
	at org.springframework.test.context.cache.DefaultCacheAwareContextLoaderDelegate.loadContext(DefaultCacheAwareContextLoaderDelegate.java:132)
	at org.springframework.test.context.support.DefaultTestContext.getApplicationContext(DefaultTestContext.java:123)
	at org.springframework.test.context.web.ServletTestExecutionListener.setUpRequestContextIfNecessary(ServletTestExecutionListener.java:190)
	at org.springframework.test.context.web.ServletTestExecutionListener.prepareTestInstance(ServletTestExecutionListener.java:132)
	at org.springframework.test.context.TestContextManager.prepareTestInstance(TestContextManager.java:244)
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner.createTest(SpringJUnit4ClassRunner.java:227)
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner$1.runReflectiveCall(SpringJUnit4ClassRunner.java:289)
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner.methodBlock(SpringJUnit4ClassRunner.java:291)
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner.runChild(SpringJUnit4ClassRunner.java:246)
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner.runChild(SpringJUnit4ClassRunner.java:97)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:290)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:71)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:58)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268)
	at org.junit.internal.runners.statements.RunBefores.evaluate(RunBefores.java:26)
	at org.springframework.test.context.junit4.statements.RunBeforeTestClassCallbacks.evaluate(RunBeforeTestClassCallbacks.java:61)
	at org.junit.internal.runners.statements.RunAfters.evaluate(RunAfters.java:27)
	at org.springframework.test.context.junit4.statements.RunAfterTestClassCallbacks.evaluate(RunAfterTestClassCallbacks.java:70)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:363)
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner.run(SpringJUnit4ClassRunner.java:190)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:137)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:115)
	at org.junit.vintage.engine.execution.RunnerExecutor.execute(RunnerExecutor.java:40)
	at java.base/java.util.stream.ForEachOps$ForEachOp$OfRef.accept(ForEachOps.java:183)
	at java.base/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:195)
	at java.base/java.util.Iterator.forEachRemaining(Iterator.java:133)
	at java.base/java.util.Spliterators$IteratorSpliterator.forEachRemaining(Spliterators.java:1801)
	at java.base/java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:484)
	at java.base/java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:474)
	at java.base/java.util.stream.ForEachOps$ForEachOp.evaluateSequential(ForEachOps.java:150)
	at java.base/java.util.stream.ForEachOps$ForEachOp$OfRef.evaluateSequential(ForEachOps.java:173)
	at java.base/java.util.stream.AbstractPipeline.evaluate(AbstractPipeline.java:234)
	at java.base/java.util.stream.ReferencePipeline.forEach(ReferencePipeline.java:497)
	at org.junit.vintage.engine.VintageTestEngine.executeAllChildren(VintageTestEngine.java:80)
	at org.junit.vintage.engine.VintageTestEngine.execute(VintageTestEngine.java:71)
	at org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:220)
	at org.junit.platform.launcher.core.DefaultLauncher.lambda$execute$6(DefaultLauncher.java:188)
	at org.junit.platform.launcher.core.DefaultLauncher.withInterceptedStreams(DefaultLauncher.java:202)
	at org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:181)
	at org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:128)
	at org.apache.maven.surefire.junitplatform.JUnitPlatformProvider.invokeAllTests(JUnitPlatformProvider.java:150)
	at org.apache.maven.surefire.junitplatform.JUnitPlatformProvider.invoke(JUnitPlatformProvider.java:124)
	at org.apache.maven.surefire.booter.ForkedBooter.invokeProviderInSameClassLoader(ForkedBooter.java:384)
	at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:345)
	at org.apache.maven.surefire.booter.ForkedBooter.execute(ForkedBooter.java:126)
	at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:418)
Caused by: org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'groovyMarkupConfigurer' defined in class path resource [org/springframework/boot/autoconfigure/groovy/template/GroovyTemplateAutoConfiguration$GroovyMarkupConfiguration.class]: Invocation of init method failed; nested exception is java.lang.reflect.InaccessibleObjectException: Unable to make jdk.internal.loader.ClassLoaders$AppClassLoader(jdk.internal.loader.ClassLoaders$PlatformClassLoader,jdk.internal.loader.URLClassPath) accessible: module java.base does not "opens jdk.internal.loader" to unnamed module @5fcacc0
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1803)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:595)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:517)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:323)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:222)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:321)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:202)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(DefaultListableBeanFactory.java:879)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:878)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:550)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:747)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:397)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:315)
	at org.springframework.boot.test.context.SpringBootContextLoader.loadContext(SpringBootContextLoader.java:125)
	at org.springframework.test.context.cache.DefaultCacheAwareContextLoaderDelegate.loadContextInternal(DefaultCacheAwareContextLoaderDelegate.java:99)
	at org.springframework.test.context.cache.DefaultCacheAwareContextLoaderDelegate.loadContext(DefaultCacheAwareContextLoaderDelegate.java:124)
	... 47 common frames omitted
Caused by: java.lang.reflect.InaccessibleObjectException: Unable to make jdk.internal.loader.ClassLoaders$AppClassLoader(jdk.internal.loader.ClassLoaders$PlatformClassLoader,jdk.internal.loader.URLClassPath) accessible: module java.base does not "opens jdk.internal.loader" to unnamed module @5fcacc0
	at java.base/java.lang.reflect.AccessibleObject.checkCanSetAccessible(AccessibleObject.java:361)
	at java.base/java.lang.reflect.AccessibleObject.checkCanSetAccessible(AccessibleObject.java:301)
	at java.base/java.lang.reflect.Constructor.checkCanSetAccessible(Constructor.java:189)
	at java.base/java.lang.reflect.Constructor.setAccessible(Constructor.java:182)
	at org.codehaus.groovy.reflection.CachedConstructor$1.run(CachedConstructor.java:44)
	at java.base/java.security.AccessController.doPrivileged(AccessController.java:312)
	at org.codehaus.groovy.reflection.CachedConstructor.<init>(CachedConstructor.java:42)
	at org.codehaus.groovy.reflection.CachedClass$2.initValue(CachedClass.java:79)
	at org.codehaus.groovy.reflection.CachedClass$2.initValue(CachedClass.java:69)
	at org.codehaus.groovy.util.LazyReference.getLocked(LazyReference.java:49)
	at org.codehaus.groovy.util.LazyReference.get(LazyReference.java:36)
	at org.codehaus.groovy.reflection.CachedClass.getConstructors(CachedClass.java:268)
	at groovy.lang.MetaClassImpl.<init>(MetaClassImpl.java:218)
	at groovy.lang.MetaClassImpl.<init>(MetaClassImpl.java:228)
	at groovy.lang.MetaClassRegistry$MetaClassCreationHandle.createNormalMetaClass(MetaClassRegistry.java:171)
	at groovy.lang.MetaClassRegistry$MetaClassCreationHandle.createWithCustomLookup(MetaClassRegistry.java:161)
	at groovy.lang.MetaClassRegistry$MetaClassCreationHandle.create(MetaClassRegistry.java:144)
	at org.codehaus.groovy.reflection.ClassInfo.getMetaClassUnderLock(ClassInfo.java:253)
	at org.codehaus.groovy.reflection.ClassInfo.getMetaClass(ClassInfo.java:285)
	at org.codehaus.groovy.reflection.ClassInfo.getMetaClass(ClassInfo.java:295)
	at org.codehaus.groovy.runtime.metaclass.MetaClassRegistryImpl.getMetaClass(MetaClassRegistryImpl.java:261)
	at org.codehaus.groovy.runtime.InvokerHelper.getMetaClass(InvokerHelper.java:873)
	at org.codehaus.groovy.runtime.InvokerHelper.invokePojoMethod(InvokerHelper.java:906)
	at org.codehaus.groovy.runtime.InvokerHelper.invokeMethod(InvokerHelper.java:898)
	at org.codehaus.groovy.runtime.typehandling.DefaultTypeTransformation.castToBoolean(DefaultTypeTransformation.java:185)
	at org.codehaus.groovy.runtime.typehandling.DefaultTypeTransformation.booleanUnbox(DefaultTypeTransformation.java:74)
	at org.codehaus.groovy.control.customizers.ASTTransformationCustomizer.findASTTranformationClass(ASTTransformationCustomizer.groovy:209)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:64)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:564)
	at org.codehaus.groovy.reflection.CachedMethod.invoke(CachedMethod.java:93)
	at org.codehaus.groovy.runtime.callsite.StaticMetaMethodSite$StaticMetaMethodSiteNoUnwrapNoCoerce.invoke(StaticMetaMethodSite.java:151)
	at org.codehaus.groovy.runtime.callsite.StaticMetaMethodSite.callStatic(StaticMetaMethodSite.java:102)
	at org.codehaus.groovy.runtime.callsite.AbstractCallSite.callStatic(AbstractCallSite.java:214)
	at org.codehaus.groovy.control.customizers.ASTTransformationCustomizer.findPhase(ASTTransformationCustomizer.groovy:226)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:64)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:564)
	at org.codehaus.groovy.reflection.CachedMethod.invoke(CachedMethod.java:93)
	at org.codehaus.groovy.runtime.callsite.StaticMetaMethodSite$StaticMetaMethodSiteNoUnwrapNoCoerce.invoke(StaticMetaMethodSite.java:151)
	at org.codehaus.groovy.runtime.callsite.StaticMetaMethodSite.callStatic(StaticMetaMethodSite.java:102)
	at org.codehaus.groovy.runtime.callsite.AbstractCallSite.callStatic(AbstractCallSite.java:214)
	at org.codehaus.groovy.control.customizers.ASTTransformationCustomizer.<init>(ASTTransformationCustomizer.groovy:180)
	at org.codehaus.groovy.control.customizers.ASTTransformationCustomizer.<init>(ASTTransformationCustomizer.groovy:188)
	at groovy.text.markup.MarkupTemplateEngine.<init>(MarkupTemplateEngine.java:94)
	at org.springframework.web.servlet.view.groovy.GroovyMarkupConfigurer.createTemplateEngine(GroovyMarkupConfigurer.java:160)
	at org.springframework.web.servlet.view.groovy.GroovyMarkupConfigurer.afterPropertiesSet(GroovyMarkupConfigurer.java:153)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1862)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1799)
	... 62 common frames omitted
2020-11-25 20:51:28,608 DEBUG  [main] BasicTypeRegistry: Adding type registration boolean -> org.hibernate.type.BooleanType@59127611
2020-11-25 20:51:28,612 DEBUG  [main] BasicTypeRegistry: Adding type registration boolean -> org.hibernate.type.BooleanType@59127611
2020-11-25 20:51:28,612 DEBUG  [main] BasicTypeRegistry: Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@59127611
2020-11-25 20:51:28,613 DEBUG  [main] BasicTypeRegistry: Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@18db3b3c
2020-11-25 20:51:28,614 DEBUG  [main] BasicTypeRegistry: Adding type registration true_false -> org.hibernate.type.TrueFalseType@5c1c9881
2020-11-25 20:51:28,614 DEBUG  [main] BasicTypeRegistry: Adding type registration yes_no -> org.hibernate.type.YesNoType@5d37aa0f
2020-11-25 20:51:28,614 DEBUG  [main] BasicTypeRegistry: Adding type registration byte -> org.hibernate.type.ByteType@3e4afd10
2020-11-25 20:51:28,614 DEBUG  [main] BasicTypeRegistry: Adding type registration byte -> org.hibernate.type.ByteType@3e4afd10
2020-11-25 20:51:28,614 DEBUG  [main] BasicTypeRegistry: Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@3e4afd10
2020-11-25 20:51:28,615 DEBUG  [main] BasicTypeRegistry: Adding type registration character -> org.hibernate.type.CharacterType@48d44b46
2020-11-25 20:51:28,615 DEBUG  [main] BasicTypeRegistry: Adding type registration char -> org.hibernate.type.CharacterType@48d44b46
2020-11-25 20:51:28,615 DEBUG  [main] BasicTypeRegistry: Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@48d44b46
2020-11-25 20:51:28,615 DEBUG  [main] BasicTypeRegistry: Adding type registration short -> org.hibernate.type.ShortType@dd20ebc
2020-11-25 20:51:28,615 DEBUG  [main] BasicTypeRegistry: Adding type registration short -> org.hibernate.type.ShortType@dd20ebc
2020-11-25 20:51:28,615 DEBUG  [main] BasicTypeRegistry: Adding type registration java.lang.Short -> org.hibernate.type.ShortType@dd20ebc
2020-11-25 20:51:28,616 DEBUG  [main] BasicTypeRegistry: Adding type registration integer -> org.hibernate.type.IntegerType@5f7cd50e
2020-11-25 20:51:28,616 DEBUG  [main] BasicTypeRegistry: Adding type registration int -> org.hibernate.type.IntegerType@5f7cd50e
2020-11-25 20:51:28,616 DEBUG  [main] BasicTypeRegistry: Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@5f7cd50e
2020-11-25 20:51:28,616 DEBUG  [main] BasicTypeRegistry: Adding type registration long -> org.hibernate.type.LongType@359e27d2
2020-11-25 20:51:28,616 DEBUG  [main] BasicTypeRegistry: Adding type registration long -> org.hibernate.type.LongType@359e27d2
2020-11-25 20:51:28,616 DEBUG  [main] BasicTypeRegistry: Adding type registration java.lang.Long -> org.hibernate.type.LongType@359e27d2
2020-11-25 20:51:28,616 DEBUG  [main] BasicTypeRegistry: Adding type registration float -> org.hibernate.type.FloatType@29b8df5
2020-11-25 20:51:28,617 DEBUG  [main] BasicTypeRegistry: Adding type registration float -> org.hibernate.type.FloatType@29b8df5
2020-11-25 20:51:28,617 DEBUG  [main] BasicTypeRegistry: Adding type registration java.lang.Float -> org.hibernate.type.FloatType@29b8df5
2020-11-25 20:51:28,617 DEBUG  [main] BasicTypeRegistry: Adding type registration double -> org.hibernate.type.DoubleType@36cfe107
2020-11-25 20:51:28,617 DEBUG  [main] BasicTypeRegistry: Adding type registration double -> org.hibernate.type.DoubleType@36cfe107
2020-11-25 20:51:28,617 DEBUG  [main] BasicTypeRegistry: Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@36cfe107
2020-11-25 20:51:28,617 DEBUG  [main] BasicTypeRegistry: Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@139089a4
2020-11-25 20:51:28,618 DEBUG  [main] BasicTypeRegistry: Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@139089a4
2020-11-25 20:51:28,618 DEBUG  [main] BasicTypeRegistry: Adding type registration big_integer -> org.hibernate.type.BigIntegerType@9f1ca74
2020-11-25 20:51:28,618 DEBUG  [main] BasicTypeRegistry: Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@9f1ca74
2020-11-25 20:51:28,619 DEBUG  [main] BasicTypeRegistry: Adding type registration string -> org.hibernate.type.StringType@393ae7a0
2020-11-25 20:51:28,619 DEBUG  [main] BasicTypeRegistry: Adding type registration java.lang.String -> org.hibernate.type.StringType@393ae7a0
2020-11-25 20:51:28,619 DEBUG  [main] BasicTypeRegistry: Adding type registration nstring -> org.hibernate.type.StringNVarcharType@7ee12d58
2020-11-25 20:51:28,619 DEBUG  [main] BasicTypeRegistry: Adding type registration ncharacter -> org.hibernate.type.CharacterNCharType@34e990cc
2020-11-25 20:51:28,619 DEBUG  [main] BasicTypeRegistry: Adding type registration url -> org.hibernate.type.UrlType@6de84336
2020-11-25 20:51:28,619 DEBUG  [main] BasicTypeRegistry: Adding type registration java.net.URL -> org.hibernate.type.UrlType@6de84336
2020-11-25 20:51:28,620 DEBUG  [main] BasicTypeRegistry: Adding type registration Duration -> org.hibernate.type.DurationType@69b37f5c
2020-11-25 20:51:28,620 DEBUG  [main] BasicTypeRegistry: Adding type registration java.time.Duration -> org.hibernate.type.DurationType@69b37f5c
2020-11-25 20:51:28,620 DEBUG  [main] BasicTypeRegistry: Adding type registration Instant -> org.hibernate.type.InstantType@580ffea
2020-11-25 20:51:28,620 DEBUG  [main] BasicTypeRegistry: Adding type registration java.time.Instant -> org.hibernate.type.InstantType@580ffea
2020-11-25 20:51:28,620 DEBUG  [main] BasicTypeRegistry: Adding type registration LocalDateTime -> org.hibernate.type.LocalDateTimeType@79d49790
2020-11-25 20:51:28,620 DEBUG  [main] BasicTypeRegistry: Adding type registration java.time.LocalDateTime -> org.hibernate.type.LocalDateTimeType@79d49790
2020-11-25 20:51:28,621 DEBUG  [main] BasicTypeRegistry: Adding type registration LocalDate -> org.hibernate.type.LocalDateType@3e9fb485
2020-11-25 20:51:28,621 DEBUG  [main] BasicTypeRegistry: Adding type registration java.time.LocalDate -> org.hibernate.type.LocalDateType@3e9fb485
2020-11-25 20:51:28,621 DEBUG  [main] BasicTypeRegistry: Adding type registration LocalTime -> org.hibernate.type.LocalTimeType@419f0ea
2020-11-25 20:51:28,621 DEBUG  [main] BasicTypeRegistry: Adding type registration java.time.LocalTime -> org.hibernate.type.LocalTimeType@419f0ea
2020-11-25 20:51:28,621 DEBUG  [main] BasicTypeRegistry: Adding type registration OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@87aec6a
2020-11-25 20:51:28,622 DEBUG  [main] BasicTypeRegistry: Adding type registration java.time.OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@87aec6a
2020-11-25 20:51:28,622 DEBUG  [main] BasicTypeRegistry: Adding type registration OffsetTime -> org.hibernate.type.OffsetTimeType@5529522f
2020-11-25 20:51:28,622 DEBUG  [main] BasicTypeRegistry: Adding type registration java.time.OffsetTime -> org.hibernate.type.OffsetTimeType@5529522f
2020-11-25 20:51:28,622 DEBUG  [main] BasicTypeRegistry: Adding type registration ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@152e7703
2020-11-25 20:51:28,622 DEBUG  [main] BasicTypeRegistry: Adding type registration java.time.ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@152e7703
2020-11-25 20:51:28,622 DEBUG  [main] BasicTypeRegistry: Adding type registration date -> org.hibernate.type.DateType@24fc2c80
2020-11-25 20:51:28,622 DEBUG  [main] BasicTypeRegistry: Adding type registration java.sql.Date -> org.hibernate.type.DateType@24fc2c80
2020-11-25 20:51:28,623 DEBUG  [main] BasicTypeRegistry: Adding type registration time -> org.hibernate.type.TimeType@48b3b1b8
2020-11-25 20:51:28,623 DEBUG  [main] BasicTypeRegistry: Adding type registration java.sql.Time -> org.hibernate.type.TimeType@48b3b1b8
2020-11-25 20:51:28,623 DEBUG  [main] BasicTypeRegistry: Adding type registration timestamp -> org.hibernate.type.TimestampType@686b1e2d
2020-11-25 20:51:28,623 DEBUG  [main] BasicTypeRegistry: Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@686b1e2d
2020-11-25 20:51:28,623 DEBUG  [main] BasicTypeRegistry: Adding type registration java.util.Date -> org.hibernate.type.TimestampType@686b1e2d
2020-11-25 20:51:28,623 DEBUG  [main] BasicTypeRegistry: Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@652b3733
2020-11-25 20:51:28,624 DEBUG  [main] BasicTypeRegistry: Adding type registration calendar -> org.hibernate.type.CalendarType@5be7b749
2020-11-25 20:51:28,624 DEBUG  [main] BasicTypeRegistry: Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@5be7b749
2020-11-25 20:51:28,624 DEBUG  [main] BasicTypeRegistry: Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@5be7b749
2020-11-25 20:51:28,624 DEBUG  [main] BasicTypeRegistry: Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@177ddd24
2020-11-25 20:51:28,624 DEBUG  [main] BasicTypeRegistry: Adding type registration locale -> org.hibernate.type.LocaleType@61ad30f6
2020-11-25 20:51:28,624 DEBUG  [main] BasicTypeRegistry: Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@61ad30f6
2020-11-25 20:51:28,625 DEBUG  [main] BasicTypeRegistry: Adding type registration currency -> org.hibernate.type.CurrencyType@574ebdaf
2020-11-25 20:51:28,625 DEBUG  [main] BasicTypeRegistry: Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@574ebdaf
2020-11-25 20:51:28,625 DEBUG  [main] BasicTypeRegistry: Adding type registration timezone -> org.hibernate.type.TimeZoneType@123ca460
2020-11-25 20:51:28,625 DEBUG  [main] BasicTypeRegistry: Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@123ca460
2020-11-25 20:51:28,626 DEBUG  [main] BasicTypeRegistry: Adding type registration class -> org.hibernate.type.ClassType@3c9f4376
2020-11-25 20:51:28,626 DEBUG  [main] BasicTypeRegistry: Adding type registration java.lang.Class -> org.hibernate.type.ClassType@3c9f4376
2020-11-25 20:51:28,626 DEBUG  [main] BasicTypeRegistry: Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@1958c0d9
2020-11-25 20:51:28,626 DEBUG  [main] BasicTypeRegistry: Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@1958c0d9
2020-11-25 20:51:28,626 DEBUG  [main] BasicTypeRegistry: Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@5fc7255c
2020-11-25 20:51:28,626 DEBUG  [main] BasicTypeRegistry: Adding type registration binary -> org.hibernate.type.BinaryType@79ba0285
2020-11-25 20:51:28,627 DEBUG  [main] BasicTypeRegistry: Adding type registration byte[] -> org.hibernate.type.BinaryType@79ba0285
2020-11-25 20:51:28,627 DEBUG  [main] BasicTypeRegistry: Adding type registration [B -> org.hibernate.type.BinaryType@79ba0285
2020-11-25 20:51:28,627 DEBUG  [main] BasicTypeRegistry: Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@598778cc
2020-11-25 20:51:28,627 DEBUG  [main] BasicTypeRegistry: Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@598778cc
2020-11-25 20:51:28,627 DEBUG  [main] BasicTypeRegistry: Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@598778cc
2020-11-25 20:51:28,627 DEBUG  [main] BasicTypeRegistry: Adding type registration row_version -> org.hibernate.type.RowVersionType@11cadb32
2020-11-25 20:51:28,628 DEBUG  [main] BasicTypeRegistry: Adding type registration image -> org.hibernate.type.ImageType@37986daf
2020-11-25 20:51:28,628 DEBUG  [main] BasicTypeRegistry: Adding type registration characters -> org.hibernate.type.CharArrayType@710afd47
2020-11-25 20:51:28,628 DEBUG  [main] BasicTypeRegistry: Adding type registration char[] -> org.hibernate.type.CharArrayType@710afd47
2020-11-25 20:51:28,628 DEBUG  [main] BasicTypeRegistry: Adding type registration [C -> org.hibernate.type.CharArrayType@710afd47
2020-11-25 20:51:28,628 DEBUG  [main] BasicTypeRegistry: Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@12670e55
2020-11-25 20:51:28,628 DEBUG  [main] BasicTypeRegistry: Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@12670e55
2020-11-25 20:51:28,629 DEBUG  [main] BasicTypeRegistry: Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@12670e55
2020-11-25 20:51:28,629 DEBUG  [main] BasicTypeRegistry: Adding type registration text -> org.hibernate.type.TextType@32ba5c65
2020-11-25 20:51:28,629 DEBUG  [main] BasicTypeRegistry: Adding type registration ntext -> org.hibernate.type.NTextType@10166230
2020-11-25 20:51:28,629 DEBUG  [main] BasicTypeRegistry: Adding type registration blob -> org.hibernate.type.BlobType@13dd7887
2020-11-25 20:51:28,629 DEBUG  [main] BasicTypeRegistry: Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@13dd7887
2020-11-25 20:51:28,629 DEBUG  [main] BasicTypeRegistry: Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@3cbfdf5c
2020-11-25 20:51:28,630 DEBUG  [main] BasicTypeRegistry: Adding type registration clob -> org.hibernate.type.ClobType@58636b50
2020-11-25 20:51:28,630 DEBUG  [main] BasicTypeRegistry: Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@58636b50
2020-11-25 20:51:28,630 DEBUG  [main] BasicTypeRegistry: Adding type registration nclob -> org.hibernate.type.NClobType@1e5aacd9
2020-11-25 20:51:28,630 DEBUG  [main] BasicTypeRegistry: Adding type registration java.sql.NClob -> org.hibernate.type.NClobType@1e5aacd9
2020-11-25 20:51:28,631 DEBUG  [main] BasicTypeRegistry: Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@120411ec
2020-11-25 20:51:28,631 DEBUG  [main] BasicTypeRegistry: Adding type registration materialized_nclob -> org.hibernate.type.MaterializedNClobType@1a34a51e
2020-11-25 20:51:28,631 DEBUG  [main] BasicTypeRegistry: Adding type registration serializable -> org.hibernate.type.SerializableType@6b091a92
2020-11-25 20:51:28,631 DEBUG  [main] BasicTypeRegistry: Adding type registration object -> org.hibernate.type.ObjectType@35329a05
2020-11-25 20:51:28,631 DEBUG  [main] BasicTypeRegistry: Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@35329a05
2020-11-25 20:51:28,631 DEBUG  [main] BasicTypeRegistry: Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@27e713d4
2020-11-25 20:51:28,632 DEBUG  [main] BasicTypeRegistry: Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@41e5038a
2020-11-25 20:51:28,632 DEBUG  [main] BasicTypeRegistry: Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@75630d9e
2020-11-25 20:51:28,632 DEBUG  [main] BasicTypeRegistry: Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@257ba195
2020-11-25 20:51:28,632 DEBUG  [main] BasicTypeRegistry: Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@3a9d6f5d
2020-11-25 20:51:28,633 DEBUG  [main] BasicTypeRegistry: Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@530dd2d7
2020-11-25 20:51:28,633 DEBUG  [main] BasicTypeRegistry: Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@3e6f3ad5
2020-11-25 20:51:28,633 DEBUG  [main] BasicTypeRegistry: Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@46e05384
2020-11-25 20:51:28,643 DEBUG  [main] TypeConfiguration$Scope: Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@60bc259a] to MetadataBuildingContext [org.hibernate.boot.internal.MetadataBuildingContextRootImpl@12e33c7b]
2020-11-25 20:51:28,651 DEBUG  [main] EnumType: Using NAMED-based conversion for Enum com.sf.back.entities.Kind
2020-11-25 20:51:28,652 DEBUG  [main] EnumType: Using NAMED-based conversion for Enum com.sf.back.entities.Kind
2020-11-25 20:51:28,671 DEBUG  [main] TypeConfiguration$Scope: Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@60bc259a] to SessionFactoryImpl [org.hibernate.internal.SessionFactoryImpl@67e42fd6]
2020-11-25 20:51:28,672 DEBUG  [main] EnumType: Using NAMED-based conversion for Enum com.sf.back.entities.Kind
2020-11-25 20:51:28,672 DEBUG  [main] EnumType: Using NAMED-based conversion for Enum com.sf.back.entities.Kind
2020-11-25 20:51:28,694 DEBUG  [main] EnumType: Using NAMED-based conversion for Enum com.sf.back.entities.Kind
2020-11-25 20:51:28,694 DEBUG  [main] EnumType: Using NAMED-based conversion for Enum com.sf.back.entities.Kind
2020-11-25 20:51:28,711 DEBUG  [main] EnumType: Using NAMED-based conversion for Enum com.sf.back.entities.Kind
2020-11-25 20:51:28,712 DEBUG  [main] EnumType: Using NAMED-based conversion for Enum com.sf.back.entities.Kind
2020-11-25 20:51:28,715 DEBUG  [main] EnumType: Using NAMED-based conversion for Enum com.sf.back.entities.Kind
2020-11-25 20:51:28,725 TRACE  [main] TypeConfiguration$Scope: Handling #sessionFactoryCreated from [org.hibernate.internal.SessionFactoryImpl@67e42fd6] for TypeConfiguration
2020-11-25 20:51:28,877 WARN   [main] JpaBaseConfiguration$JpaWebConfiguration: spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2020-11-25 20:51:28,995 WARN   [main] GenericWebApplicationContext: Exception encountered during context initialization - cancelling refresh attempt: org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'groovyMarkupConfigurer' defined in class path resource [org/springframework/boot/autoconfigure/groovy/template/GroovyTemplateAutoConfiguration$GroovyMarkupConfiguration.class]: Invocation of init method failed; nested exception is java.lang.reflect.InaccessibleObjectException: Unable to make jdk.internal.loader.ClassLoaders$AppClassLoader(jdk.internal.loader.ClassLoaders$PlatformClassLoader,jdk.internal.loader.URLClassPath) accessible: module java.base does not "opens jdk.internal.loader" to unnamed module @5fcacc0
2020-11-25 20:51:29,002 TRACE  [main] TypeConfiguration$Scope: Handling #sessionFactoryClosed from [org.hibernate.internal.SessionFactoryImpl@67e42fd6] for TypeConfiguration
2020-11-25 20:51:29,002 DEBUG  [main] TypeConfiguration$Scope: Un-scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration$Scope@56972302] from SessionFactory [org.hibernate.internal.SessionFactoryImpl@67e42fd6]
2020-11-25 20:51:29,025 ERROR  [main] SpringApplication: Application run failed
org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'groovyMarkupConfigurer' defined in class path resource [org/springframework/boot/autoconfigure/groovy/template/GroovyTemplateAutoConfiguration$GroovyMarkupConfiguration.class]: Invocation of init method failed; nested exception is java.lang.reflect.InaccessibleObjectException: Unable to make jdk.internal.loader.ClassLoaders$AppClassLoader(jdk.internal.loader.ClassLoaders$PlatformClassLoader,jdk.internal.loader.URLClassPath) accessible: module java.base does not "opens jdk.internal.loader" to unnamed module @5fcacc0
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1803)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:595)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:517)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:323)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:222)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:321)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:202)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(DefaultListableBeanFactory.java:879)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:878)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:550)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:747)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:397)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:315)
	at org.springframework.boot.test.context.SpringBootContextLoader.loadContext(SpringBootContextLoader.java:125)
	at org.springframework.test.context.cache.DefaultCacheAwareContextLoaderDelegate.loadContextInternal(DefaultCacheAwareContextLoaderDelegate.java:99)
	at org.springframework.test.context.cache.DefaultCacheAwareContextLoaderDelegate.loadContext(DefaultCacheAwareContextLoaderDelegate.java:124)
	at org.springframework.test.context.support.DefaultTestContext.getApplicationContext(DefaultTestContext.java:123)
	at org.springframework.test.context.web.ServletTestExecutionListener.setUpRequestContextIfNecessary(ServletTestExecutionListener.java:190)
	at org.springframework.test.context.web.ServletTestExecutionListener.prepareTestInstance(ServletTestExecutionListener.java:132)
	at org.springframework.test.context.TestContextManager.prepareTestInstance(TestContextManager.java:244)
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner.createTest(SpringJUnit4ClassRunner.java:227)
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner$1.runReflectiveCall(SpringJUnit4ClassRunner.java:289)
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner.methodBlock(SpringJUnit4ClassRunner.java:291)
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner.runChild(SpringJUnit4ClassRunner.java:246)
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner.runChild(SpringJUnit4ClassRunner.java:97)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:290)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:71)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:58)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268)
	at org.junit.internal.runners.statements.RunBefores.evaluate(RunBefores.java:26)
	at org.springframework.test.context.junit4.statements.RunBeforeTestClassCallbacks.evaluate(RunBeforeTestClassCallbacks.java:61)
	at org.junit.internal.runners.statements.RunAfters.evaluate(RunAfters.java:27)
	at org.springframework.test.context.junit4.statements.RunAfterTestClassCallbacks.evaluate(RunAfterTestClassCallbacks.java:70)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:363)
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner.run(SpringJUnit4ClassRunner.java:190)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:137)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:115)
	at org.junit.vintage.engine.execution.RunnerExecutor.execute(RunnerExecutor.java:40)
	at java.base/java.util.stream.ForEachOps$ForEachOp$OfRef.accept(ForEachOps.java:183)
	at java.base/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:195)
	at java.base/java.util.Iterator.forEachRemaining(Iterator.java:133)
	at java.base/java.util.Spliterators$IteratorSpliterator.forEachRemaining(Spliterators.java:1801)
	at java.base/java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:484)
	at java.base/java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:474)
	at java.base/java.util.stream.ForEachOps$ForEachOp.evaluateSequential(ForEachOps.java:150)
	at java.base/java.util.stream.ForEachOps$ForEachOp$OfRef.evaluateSequential(ForEachOps.java:173)
	at java.base/java.util.stream.AbstractPipeline.evaluate(AbstractPipeline.java:234)
	at java.base/java.util.stream.ReferencePipeline.forEach(ReferencePipeline.java:497)
	at org.junit.vintage.engine.VintageTestEngine.executeAllChildren(VintageTestEngine.java:80)
	at org.junit.vintage.engine.VintageTestEngine.execute(VintageTestEngine.java:71)
	at org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:220)
	at org.junit.platform.launcher.core.DefaultLauncher.lambda$execute$6(DefaultLauncher.java:188)
	at org.junit.platform.launcher.core.DefaultLauncher.withInterceptedStreams(DefaultLauncher.java:202)
	at org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:181)
	at org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:128)
	at org.apache.maven.surefire.junitplatform.JUnitPlatformProvider.invokeAllTests(JUnitPlatformProvider.java:150)
	at org.apache.maven.surefire.junitplatform.JUnitPlatformProvider.invoke(JUnitPlatformProvider.java:124)
	at org.apache.maven.surefire.booter.ForkedBooter.invokeProviderInSameClassLoader(ForkedBooter.java:384)
	at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:345)
	at org.apache.maven.surefire.booter.ForkedBooter.execute(ForkedBooter.java:126)
	at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:418)
Caused by: java.lang.reflect.InaccessibleObjectException: Unable to make jdk.internal.loader.ClassLoaders$AppClassLoader(jdk.internal.loader.ClassLoaders$PlatformClassLoader,jdk.internal.loader.URLClassPath) accessible: module java.base does not "opens jdk.internal.loader" to unnamed module @5fcacc0
	at java.base/java.lang.reflect.AccessibleObject.checkCanSetAccessible(AccessibleObject.java:361)
	at java.base/java.lang.reflect.AccessibleObject.checkCanSetAccessible(AccessibleObject.java:301)
	at java.base/java.lang.reflect.Constructor.checkCanSetAccessible(Constructor.java:189)
	at java.base/java.lang.reflect.Constructor.setAccessible(Constructor.java:182)
	at org.codehaus.groovy.reflection.CachedConstructor$1.run(CachedConstructor.java:44)
	at java.base/java.security.AccessController.doPrivileged(AccessController.java:312)
	at org.codehaus.groovy.reflection.CachedConstructor.<init>(CachedConstructor.java:42)
	at org.codehaus.groovy.reflection.CachedClass$2.initValue(CachedClass.java:79)
	at org.codehaus.groovy.reflection.CachedClass$2.initValue(CachedClass.java:69)
	at org.codehaus.groovy.util.LazyReference.getLocked(LazyReference.java:49)
	at org.codehaus.groovy.util.LazyReference.get(LazyReference.java:36)
	at org.codehaus.groovy.reflection.CachedClass.getConstructors(CachedClass.java:268)
	at groovy.lang.MetaClassImpl.<init>(MetaClassImpl.java:218)
	at groovy.lang.MetaClassImpl.<init>(MetaClassImpl.java:228)
	at groovy.lang.MetaClassRegistry$MetaClassCreationHandle.createNormalMetaClass(MetaClassRegistry.java:171)
	at groovy.lang.MetaClassRegistry$MetaClassCreationHandle.createWithCustomLookup(MetaClassRegistry.java:161)
	at groovy.lang.MetaClassRegistry$MetaClassCreationHandle.create(MetaClassRegistry.java:144)
	at org.codehaus.groovy.reflection.ClassInfo.getMetaClassUnderLock(ClassInfo.java:253)
	at org.codehaus.groovy.reflection.ClassInfo.getMetaClass(ClassInfo.java:285)
	at org.codehaus.groovy.reflection.ClassInfo.getMetaClass(ClassInfo.java:295)
	at org.codehaus.groovy.runtime.metaclass.MetaClassRegistryImpl.getMetaClass(MetaClassRegistryImpl.java:261)
	at org.codehaus.groovy.runtime.InvokerHelper.getMetaClass(InvokerHelper.java:873)
	at org.codehaus.groovy.runtime.InvokerHelper.invokePojoMethod(InvokerHelper.java:906)
	at org.codehaus.groovy.runtime.InvokerHelper.invokeMethod(InvokerHelper.java:898)
	at org.codehaus.groovy.runtime.typehandling.DefaultTypeTransformation.castToBoolean(DefaultTypeTransformation.java:185)
	at org.codehaus.groovy.runtime.typehandling.DefaultTypeTransformation.booleanUnbox(DefaultTypeTransformation.java:74)
	at org.codehaus.groovy.control.customizers.ASTTransformationCustomizer.findASTTranformationClass(ASTTransformationCustomizer.groovy:209)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:64)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:564)
	at org.codehaus.groovy.reflection.CachedMethod.invoke(CachedMethod.java:93)
	at org.codehaus.groovy.runtime.callsite.StaticMetaMethodSite$StaticMetaMethodSiteNoUnwrapNoCoerce.invoke(StaticMetaMethodSite.java:151)
	at org.codehaus.groovy.runtime.callsite.StaticMetaMethodSite.callStatic(StaticMetaMethodSite.java:102)
	at org.codehaus.groovy.runtime.callsite.AbstractCallSite.callStatic(AbstractCallSite.java:214)
	at org.codehaus.groovy.control.customizers.ASTTransformationCustomizer.findPhase(ASTTransformationCustomizer.groovy:226)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:64)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:564)
	at org.codehaus.groovy.reflection.CachedMethod.invoke(CachedMethod.java:93)
	at org.codehaus.groovy.runtime.callsite.StaticMetaMethodSite$StaticMetaMethodSiteNoUnwrapNoCoerce.invoke(StaticMetaMethodSite.java:151)
	at org.codehaus.groovy.runtime.callsite.StaticMetaMethodSite.callStatic(StaticMetaMethodSite.java:102)
	at org.codehaus.groovy.runtime.callsite.AbstractCallSite.callStatic(AbstractCallSite.java:214)
	at org.codehaus.groovy.control.customizers.ASTTransformationCustomizer.<init>(ASTTransformationCustomizer.groovy:180)
	at org.codehaus.groovy.control.customizers.ASTTransformationCustomizer.<init>(ASTTransformationCustomizer.groovy:188)
	at groovy.text.markup.MarkupTemplateEngine.<init>(MarkupTemplateEngine.java:94)
	at org.springframework.web.servlet.view.groovy.GroovyMarkupConfigurer.createTemplateEngine(GroovyMarkupConfigurer.java:160)
	at org.springframework.web.servlet.view.groovy.GroovyMarkupConfigurer.afterPropertiesSet(GroovyMarkupConfigurer.java:153)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1862)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1799)
	... 62 common frames omitted
2020-11-25 20:51:29,025 ERROR  [main] TestContextManager: Caught exception while allowing TestExecutionListener [org.springframework.test.context.web.ServletTestExecutionListener@46c093b4] to prepare test instance [com.sf.math.algebra.solvers.PolynomialSolverIntervalTest@3f491bd2]
java.lang.IllegalStateException: Failed to load ApplicationContext
	at org.springframework.test.context.cache.DefaultCacheAwareContextLoaderDelegate.loadContext(DefaultCacheAwareContextLoaderDelegate.java:132)
	at org.springframework.test.context.support.DefaultTestContext.getApplicationContext(DefaultTestContext.java:123)
	at org.springframework.test.context.web.ServletTestExecutionListener.setUpRequestContextIfNecessary(ServletTestExecutionListener.java:190)
	at org.springframework.test.context.web.ServletTestExecutionListener.prepareTestInstance(ServletTestExecutionListener.java:132)
	at org.springframework.test.context.TestContextManager.prepareTestInstance(TestContextManager.java:244)
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner.createTest(SpringJUnit4ClassRunner.java:227)
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner$1.runReflectiveCall(SpringJUnit4ClassRunner.java:289)
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner.methodBlock(SpringJUnit4ClassRunner.java:291)
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner.runChild(SpringJUnit4ClassRunner.java:246)
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner.runChild(SpringJUnit4ClassRunner.java:97)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:290)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:71)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:58)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268)
	at org.junit.internal.runners.statements.RunBefores.evaluate(RunBefores.java:26)
	at org.springframework.test.context.junit4.statements.RunBeforeTestClassCallbacks.evaluate(RunBeforeTestClassCallbacks.java:61)
	at org.junit.internal.runners.statements.RunAfters.evaluate(RunAfters.java:27)
	at org.springframework.test.context.junit4.statements.RunAfterTestClassCallbacks.evaluate(RunAfterTestClassCallbacks.java:70)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:363)
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner.run(SpringJUnit4ClassRunner.java:190)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:137)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:115)
	at org.junit.vintage.engine.execution.RunnerExecutor.execute(RunnerExecutor.java:40)
	at java.base/java.util.stream.ForEachOps$ForEachOp$OfRef.accept(ForEachOps.java:183)
	at java.base/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:195)
	at java.base/java.util.Iterator.forEachRemaining(Iterator.java:133)
	at java.base/java.util.Spliterators$IteratorSpliterator.forEachRemaining(Spliterators.java:1801)
	at java.base/java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:484)
	at java.base/java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:474)
	at java.base/java.util.stream.ForEachOps$ForEachOp.evaluateSequential(ForEachOps.java:150)
	at java.base/java.util.stream.ForEachOps$ForEachOp$OfRef.evaluateSequential(ForEachOps.java:173)
	at java.base/java.util.stream.AbstractPipeline.evaluate(AbstractPipeline.java:234)
	at java.base/java.util.stream.ReferencePipeline.forEach(ReferencePipeline.java:497)
	at org.junit.vintage.engine.VintageTestEngine.executeAllChildren(VintageTestEngine.java:80)
	at org.junit.vintage.engine.VintageTestEngine.execute(VintageTestEngine.java:71)
	at org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:220)
	at org.junit.platform.launcher.core.DefaultLauncher.lambda$execute$6(DefaultLauncher.java:188)
	at org.junit.platform.launcher.core.DefaultLauncher.withInterceptedStreams(DefaultLauncher.java:202)
	at org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:181)
	at org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:128)
	at org.apache.maven.surefire.junitplatform.JUnitPlatformProvider.invokeAllTests(JUnitPlatformProvider.java:150)
	at org.apache.maven.surefire.junitplatform.JUnitPlatformProvider.invoke(JUnitPlatformProvider.java:124)
	at org.apache.maven.surefire.booter.ForkedBooter.invokeProviderInSameClassLoader(ForkedBooter.java:384)
	at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:345)
	at org.apache.maven.surefire.booter.ForkedBooter.execute(ForkedBooter.java:126)
	at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:418)
Caused by: org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'groovyMarkupConfigurer' defined in class path resource [org/springframework/boot/autoconfigure/groovy/template/GroovyTemplateAutoConfiguration$GroovyMarkupConfiguration.class]: Invocation of init method failed; nested exception is java.lang.reflect.InaccessibleObjectException: Unable to make jdk.internal.loader.ClassLoaders$AppClassLoader(jdk.internal.loader.ClassLoaders$PlatformClassLoader,jdk.internal.loader.URLClassPath) accessible: module java.base does not "opens jdk.internal.loader" to unnamed module @5fcacc0
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1803)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:595)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:517)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:323)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:222)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:321)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:202)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(DefaultListableBeanFactory.java:879)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:878)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:550)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:747)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:397)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:315)
	at org.springframework.boot.test.context.SpringBootContextLoader.loadContext(SpringBootContextLoader.java:125)
	at org.springframework.test.context.cache.DefaultCacheAwareContextLoaderDelegate.loadContextInternal(DefaultCacheAwareContextLoaderDelegate.java:99)
	at org.springframework.test.context.cache.DefaultCacheAwareContextLoaderDelegate.loadContext(DefaultCacheAwareContextLoaderDelegate.java:124)
	... 47 common frames omitted
Caused by: java.lang.reflect.InaccessibleObjectException: Unable to make jdk.internal.loader.ClassLoaders$AppClassLoader(jdk.internal.loader.ClassLoaders$PlatformClassLoader,jdk.internal.loader.URLClassPath) accessible: module java.base does not "opens jdk.internal.loader" to unnamed module @5fcacc0
	at java.base/java.lang.reflect.AccessibleObject.checkCanSetAccessible(AccessibleObject.java:361)
	at java.base/java.lang.reflect.AccessibleObject.checkCanSetAccessible(AccessibleObject.java:301)
	at java.base/java.lang.reflect.Constructor.checkCanSetAccessible(Constructor.java:189)
	at java.base/java.lang.reflect.Constructor.setAccessible(Constructor.java:182)
	at org.codehaus.groovy.reflection.CachedConstructor$1.run(CachedConstructor.java:44)
	at java.base/java.security.AccessController.doPrivileged(AccessController.java:312)
	at org.codehaus.groovy.reflection.CachedConstructor.<init>(CachedConstructor.java:42)
	at org.codehaus.groovy.reflection.CachedClass$2.initValue(CachedClass.java:79)
	at org.codehaus.groovy.reflection.CachedClass$2.initValue(CachedClass.java:69)
	at org.codehaus.groovy.util.LazyReference.getLocked(LazyReference.java:49)
	at org.codehaus.groovy.util.LazyReference.get(LazyReference.java:36)
	at org.codehaus.groovy.reflection.CachedClass.getConstructors(CachedClass.java:268)
	at groovy.lang.MetaClassImpl.<init>(MetaClassImpl.java:218)
	at groovy.lang.MetaClassImpl.<init>(MetaClassImpl.java:228)
	at groovy.lang.MetaClassRegistry$MetaClassCreationHandle.createNormalMetaClass(MetaClassRegistry.java:171)
	at groovy.lang.MetaClassRegistry$MetaClassCreationHandle.createWithCustomLookup(MetaClassRegistry.java:161)
	at groovy.lang.MetaClassRegistry$MetaClassCreationHandle.create(MetaClassRegistry.java:144)
	at org.codehaus.groovy.reflection.ClassInfo.getMetaClassUnderLock(ClassInfo.java:253)
	at org.codehaus.groovy.reflection.ClassInfo.getMetaClass(ClassInfo.java:285)
	at org.codehaus.groovy.reflection.ClassInfo.getMetaClass(ClassInfo.java:295)
	at org.codehaus.groovy.runtime.metaclass.MetaClassRegistryImpl.getMetaClass(MetaClassRegistryImpl.java:261)
	at org.codehaus.groovy.runtime.InvokerHelper.getMetaClass(InvokerHelper.java:873)
	at org.codehaus.groovy.runtime.InvokerHelper.invokePojoMethod(InvokerHelper.java:906)
	at org.codehaus.groovy.runtime.InvokerHelper.invokeMethod(InvokerHelper.java:898)
	at org.codehaus.groovy.runtime.typehandling.DefaultTypeTransformation.castToBoolean(DefaultTypeTransformation.java:185)
	at org.codehaus.groovy.runtime.typehandling.DefaultTypeTransformation.booleanUnbox(DefaultTypeTransformation.java:74)
	at org.codehaus.groovy.control.customizers.ASTTransformationCustomizer.findASTTranformationClass(ASTTransformationCustomizer.groovy:209)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:64)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:564)
	at org.codehaus.groovy.reflection.CachedMethod.invoke(CachedMethod.java:93)
	at org.codehaus.groovy.runtime.callsite.StaticMetaMethodSite$StaticMetaMethodSiteNoUnwrapNoCoerce.invoke(StaticMetaMethodSite.java:151)
	at org.codehaus.groovy.runtime.callsite.StaticMetaMethodSite.callStatic(StaticMetaMethodSite.java:102)
	at org.codehaus.groovy.runtime.callsite.AbstractCallSite.callStatic(AbstractCallSite.java:214)
	at org.codehaus.groovy.control.customizers.ASTTransformationCustomizer.findPhase(ASTTransformationCustomizer.groovy:226)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:64)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:564)
	at org.codehaus.groovy.reflection.CachedMethod.invoke(CachedMethod.java:93)
	at org.codehaus.groovy.runtime.callsite.StaticMetaMethodSite$StaticMetaMethodSiteNoUnwrapNoCoerce.invoke(StaticMetaMethodSite.java:151)
	at org.codehaus.groovy.runtime.callsite.StaticMetaMethodSite.callStatic(StaticMetaMethodSite.java:102)
	at org.codehaus.groovy.runtime.callsite.AbstractCallSite.callStatic(AbstractCallSite.java:214)
	at org.codehaus.groovy.control.customizers.ASTTransformationCustomizer.<init>(ASTTransformationCustomizer.groovy:180)
	at org.codehaus.groovy.control.customizers.ASTTransformationCustomizer.<init>(ASTTransformationCustomizer.groovy:188)
	at groovy.text.markup.MarkupTemplateEngine.<init>(MarkupTemplateEngine.java:94)
	at org.springframework.web.servlet.view.groovy.GroovyMarkupConfigurer.createTemplateEngine(GroovyMarkupConfigurer.java:160)
	at org.springframework.web.servlet.view.groovy.GroovyMarkupConfigurer.afterPropertiesSet(GroovyMarkupConfigurer.java:153)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1862)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1799)
	... 62 common frames omitted
2020-11-25 20:51:29,670 DEBUG  [main] BasicTypeRegistry: Adding type registration boolean -> org.hibernate.type.BooleanType@59127611
2020-11-25 20:51:29,674 DEBUG  [main] BasicTypeRegistry: Adding type registration boolean -> org.hibernate.type.BooleanType@59127611
2020-11-25 20:51:29,674 DEBUG  [main] BasicTypeRegistry: Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@59127611
2020-11-25 20:51:29,675 DEBUG  [main] BasicTypeRegistry: Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@18db3b3c
2020-11-25 20:51:29,675 DEBUG  [main] BasicTypeRegistry: Adding type registration true_false -> org.hibernate.type.TrueFalseType@5c1c9881
2020-11-25 20:51:29,676 DEBUG  [main] BasicTypeRegistry: Adding type registration yes_no -> org.hibernate.type.YesNoType@5d37aa0f
2020-11-25 20:51:29,676 DEBUG  [main] BasicTypeRegistry: Adding type registration byte -> org.hibernate.type.ByteType@3e4afd10
2020-11-25 20:51:29,677 DEBUG  [main] BasicTypeRegistry: Adding type registration byte -> org.hibernate.type.ByteType@3e4afd10
2020-11-25 20:51:29,677 DEBUG  [main] BasicTypeRegistry: Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@3e4afd10
2020-11-25 20:51:29,678 DEBUG  [main] BasicTypeRegistry: Adding type registration character -> org.hibernate.type.CharacterType@48d44b46
2020-11-25 20:51:29,678 DEBUG  [main] BasicTypeRegistry: Adding type registration char -> org.hibernate.type.CharacterType@48d44b46
2020-11-25 20:51:29,679 DEBUG  [main] BasicTypeRegistry: Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@48d44b46
2020-11-25 20:51:29,679 DEBUG  [main] BasicTypeRegistry: Adding type registration short -> org.hibernate.type.ShortType@dd20ebc
2020-11-25 20:51:29,679 DEBUG  [main] BasicTypeRegistry: Adding type registration short -> org.hibernate.type.ShortType@dd20ebc
2020-11-25 20:51:29,679 DEBUG  [main] BasicTypeRegistry: Adding type registration java.lang.Short -> org.hibernate.type.ShortType@dd20ebc
2020-11-25 20:51:29,680 DEBUG  [main] BasicTypeRegistry: Adding type registration integer -> org.hibernate.type.IntegerType@5f7cd50e
2020-11-25 20:51:29,680 DEBUG  [main] BasicTypeRegistry: Adding type registration int -> org.hibernate.type.IntegerType@5f7cd50e
2020-11-25 20:51:29,680 DEBUG  [main] BasicTypeRegistry: Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@5f7cd50e
2020-11-25 20:51:29,681 DEBUG  [main] BasicTypeRegistry: Adding type registration long -> org.hibernate.type.LongType@359e27d2
2020-11-25 20:51:29,681 DEBUG  [main] BasicTypeRegistry: Adding type registration long -> org.hibernate.type.LongType@359e27d2
2020-11-25 20:51:29,681 DEBUG  [main] BasicTypeRegistry: Adding type registration java.lang.Long -> org.hibernate.type.LongType@359e27d2
2020-11-25 20:51:29,681 DEBUG  [main] BasicTypeRegistry: Adding type registration float -> org.hibernate.type.FloatType@29b8df5
2020-11-25 20:51:29,681 DEBUG  [main] BasicTypeRegistry: Adding type registration float -> org.hibernate.type.FloatType@29b8df5
2020-11-25 20:51:29,682 DEBUG  [main] BasicTypeRegistry: Adding type registration java.lang.Float -> org.hibernate.type.FloatType@29b8df5
2020-11-25 20:51:29,682 DEBUG  [main] BasicTypeRegistry: Adding type registration double -> org.hibernate.type.DoubleType@36cfe107
2020-11-25 20:51:29,683 DEBUG  [main] BasicTypeRegistry: Adding type registration double -> org.hibernate.type.DoubleType@36cfe107
2020-11-25 20:51:29,683 DEBUG  [main] BasicTypeRegistry: Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@36cfe107
2020-11-25 20:51:29,683 DEBUG  [main] BasicTypeRegistry: Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@139089a4
2020-11-25 20:51:29,684 DEBUG  [main] BasicTypeRegistry: Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@139089a4
2020-11-25 20:51:29,684 DEBUG  [main] BasicTypeRegistry: Adding type registration big_integer -> org.hibernate.type.BigIntegerType@9f1ca74
2020-11-25 20:51:29,685 DEBUG  [main] BasicTypeRegistry: Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@9f1ca74
2020-11-25 20:51:29,685 DEBUG  [main] BasicTypeRegistry: Adding type registration string -> org.hibernate.type.StringType@393ae7a0
2020-11-25 20:51:29,685 DEBUG  [main] BasicTypeRegistry: Adding type registration java.lang.String -> org.hibernate.type.StringType@393ae7a0
2020-11-25 20:51:29,686 DEBUG  [main] BasicTypeRegistry: Adding type registration nstring -> org.hibernate.type.StringNVarcharType@7ee12d58
2020-11-25 20:51:29,686 DEBUG  [main] BasicTypeRegistry: Adding type registration ncharacter -> org.hibernate.type.CharacterNCharType@34e990cc
2020-11-25 20:51:29,687 DEBUG  [main] BasicTypeRegistry: Adding type registration url -> org.hibernate.type.UrlType@6de84336
2020-11-25 20:51:29,687 DEBUG  [main] BasicTypeRegistry: Adding type registration java.net.URL -> org.hibernate.type.UrlType@6de84336
2020-11-25 20:51:29,688 DEBUG  [main] BasicTypeRegistry: Adding type registration Duration -> org.hibernate.type.DurationType@69b37f5c
2020-11-25 20:51:29,688 DEBUG  [main] BasicTypeRegistry: Adding type registration java.time.Duration -> org.hibernate.type.DurationType@69b37f5c
2020-11-25 20:51:29,688 DEBUG  [main] BasicTypeRegistry: Adding type registration Instant -> org.hibernate.type.InstantType@580ffea
2020-11-25 20:51:29,688 DEBUG  [main] BasicTypeRegistry: Adding type registration java.time.Instant -> org.hibernate.type.InstantType@580ffea
2020-11-25 20:51:29,688 DEBUG  [main] BasicTypeRegistry: Adding type registration LocalDateTime -> org.hibernate.type.LocalDateTimeType@79d49790
2020-11-25 20:51:29,688 DEBUG  [main] BasicTypeRegistry: Adding type registration java.time.LocalDateTime -> org.hibernate.type.LocalDateTimeType@79d49790
2020-11-25 20:51:29,688 DEBUG  [main] BasicTypeRegistry: Adding type registration LocalDate -> org.hibernate.type.LocalDateType@3e9fb485
2020-11-25 20:51:29,689 DEBUG  [main] BasicTypeRegistry: Adding type registration java.time.LocalDate -> org.hibernate.type.LocalDateType@3e9fb485
2020-11-25 20:51:29,689 DEBUG  [main] BasicTypeRegistry: Adding type registration LocalTime -> org.hibernate.type.LocalTimeType@419f0ea
2020-11-25 20:51:29,689 DEBUG  [main] BasicTypeRegistry: Adding type registration java.time.LocalTime -> org.hibernate.type.LocalTimeType@419f0ea
2020-11-25 20:51:29,689 DEBUG  [main] BasicTypeRegistry: Adding type registration OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@87aec6a
2020-11-25 20:51:29,689 DEBUG  [main] BasicTypeRegistry: Adding type registration java.time.OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@87aec6a
2020-11-25 20:51:29,689 DEBUG  [main] BasicTypeRegistry: Adding type registration OffsetTime -> org.hibernate.type.OffsetTimeType@5529522f
2020-11-25 20:51:29,690 DEBUG  [main] BasicTypeRegistry: Adding type registration java.time.OffsetTime -> org.hibernate.type.OffsetTimeType@5529522f
2020-11-25 20:51:29,690 DEBUG  [main] BasicTypeRegistry: Adding type registration ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@152e7703
2020-11-25 20:51:29,690 DEBUG  [main] BasicTypeRegistry: Adding type registration java.time.ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@152e7703
2020-11-25 20:51:29,690 DEBUG  [main] BasicTypeRegistry: Adding type registration date -> org.hibernate.type.DateType@24fc2c80
2020-11-25 20:51:29,690 DEBUG  [main] BasicTypeRegistry: Adding type registration java.sql.Date -> org.hibernate.type.DateType@24fc2c80
2020-11-25 20:51:29,690 DEBUG  [main] BasicTypeRegistry: Adding type registration time -> org.hibernate.type.TimeType@48b3b1b8
2020-11-25 20:51:29,691 DEBUG  [main] BasicTypeRegistry: Adding type registration java.sql.Time -> org.hibernate.type.TimeType@48b3b1b8
2020-11-25 20:51:29,691 DEBUG  [main] BasicTypeRegistry: Adding type registration timestamp -> org.hibernate.type.TimestampType@686b1e2d
2020-11-25 20:51:29,691 DEBUG  [main] BasicTypeRegistry: Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@686b1e2d
2020-11-25 20:51:29,691 DEBUG  [main] BasicTypeRegistry: Adding type registration java.util.Date -> org.hibernate.type.TimestampType@686b1e2d
2020-11-25 20:51:29,691 DEBUG  [main] BasicTypeRegistry: Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@652b3733
2020-11-25 20:51:29,691 DEBUG  [main] BasicTypeRegistry: Adding type registration calendar -> org.hibernate.type.CalendarType@5be7b749
2020-11-25 20:51:29,691 DEBUG  [main] BasicTypeRegistry: Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@5be7b749
2020-11-25 20:51:29,691 DEBUG  [main] BasicTypeRegistry: Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@5be7b749
2020-11-25 20:51:29,692 DEBUG  [main] BasicTypeRegistry: Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@177ddd24
2020-11-25 20:51:29,692 DEBUG  [main] BasicTypeRegistry: Adding type registration locale -> org.hibernate.type.LocaleType@61ad30f6
2020-11-25 20:51:29,692 DEBUG  [main] BasicTypeRegistry: Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@61ad30f6
2020-11-25 20:51:29,692 DEBUG  [main] BasicTypeRegistry: Adding type registration currency -> org.hibernate.type.CurrencyType@574ebdaf
2020-11-25 20:51:29,692 DEBUG  [main] BasicTypeRegistry: Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@574ebdaf
2020-11-25 20:51:29,692 DEBUG  [main] BasicTypeRegistry: Adding type registration timezone -> org.hibernate.type.TimeZoneType@123ca460
2020-11-25 20:51:29,692 DEBUG  [main] BasicTypeRegistry: Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@123ca460
2020-11-25 20:51:29,693 DEBUG  [main] BasicTypeRegistry: Adding type registration class -> org.hibernate.type.ClassType@3c9f4376
2020-11-25 20:51:29,693 DEBUG  [main] BasicTypeRegistry: Adding type registration java.lang.Class -> org.hibernate.type.ClassType@3c9f4376
2020-11-25 20:51:29,693 DEBUG  [main] BasicTypeRegistry: Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@1958c0d9
2020-11-25 20:51:29,694 DEBUG  [main] BasicTypeRegistry: Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@1958c0d9
2020-11-25 20:51:29,694 DEBUG  [main] BasicTypeRegistry: Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@5fc7255c
2020-11-25 20:51:29,695 DEBUG  [main] BasicTypeRegistry: Adding type registration binary -> org.hibernate.type.BinaryType@79ba0285
2020-11-25 20:51:29,696 DEBUG  [main] BasicTypeRegistry: Adding type registration byte[] -> org.hibernate.type.BinaryType@79ba0285
2020-11-25 20:51:29,696 DEBUG  [main] BasicTypeRegistry: Adding type registration [B -> org.hibernate.type.BinaryType@79ba0285
2020-11-25 20:51:29,696 DEBUG  [main] BasicTypeRegistry: Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@598778cc
2020-11-25 20:51:29,697 DEBUG  [main] BasicTypeRegistry: Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@598778cc
2020-11-25 20:51:29,697 DEBUG  [main] BasicTypeRegistry: Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@598778cc
2020-11-25 20:51:29,697 DEBUG  [main] BasicTypeRegistry: Adding type registration row_version -> org.hibernate.type.RowVersionType@11cadb32
2020-11-25 20:51:29,697 DEBUG  [main] BasicTypeRegistry: Adding type registration image -> org.hibernate.type.ImageType@37986daf
2020-11-25 20:51:29,697 DEBUG  [main] BasicTypeRegistry: Adding type registration characters -> org.hibernate.type.CharArrayType@710afd47
2020-11-25 20:51:29,697 DEBUG  [main] BasicTypeRegistry: Adding type registration char[] -> org.hibernate.type.CharArrayType@710afd47
2020-11-25 20:51:29,697 DEBUG  [main] BasicTypeRegistry: Adding type registration [C -> org.hibernate.type.CharArrayType@710afd47
2020-11-25 20:51:29,698 DEBUG  [main] BasicTypeRegistry: Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@12670e55
2020-11-25 20:51:29,698 DEBUG  [main] BasicTypeRegistry: Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@12670e55
2020-11-25 20:51:29,698 DEBUG  [main] BasicTypeRegistry: Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@12670e55
2020-11-25 20:51:29,698 DEBUG  [main] BasicTypeRegistry: Adding type registration text -> org.hibernate.type.TextType@32ba5c65
2020-11-25 20:51:29,698 DEBUG  [main] BasicTypeRegistry: Adding type registration ntext -> org.hibernate.type.NTextType@10166230
2020-11-25 20:51:29,699 DEBUG  [main] BasicTypeRegistry: Adding type registration blob -> org.hibernate.type.BlobType@13dd7887
2020-11-25 20:51:29,699 DEBUG  [main] BasicTypeRegistry: Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@13dd7887
2020-11-25 20:51:29,699 DEBUG  [main] BasicTypeRegistry: Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@3cbfdf5c
2020-11-25 20:51:29,699 DEBUG  [main] BasicTypeRegistry: Adding type registration clob -> org.hibernate.type.ClobType@58636b50
2020-11-25 20:51:29,699 DEBUG  [main] BasicTypeRegistry: Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@58636b50
2020-11-25 20:51:29,700 DEBUG  [main] BasicTypeRegistry: Adding type registration nclob -> org.hibernate.type.NClobType@1e5aacd9
2020-11-25 20:51:29,700 DEBUG  [main] BasicTypeRegistry: Adding type registration java.sql.NClob -> org.hibernate.type.NClobType@1e5aacd9
2020-11-25 20:51:29,700 DEBUG  [main] BasicTypeRegistry: Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@120411ec
2020-11-25 20:51:29,700 DEBUG  [main] BasicTypeRegistry: Adding type registration materialized_nclob -> org.hibernate.type.MaterializedNClobType@1a34a51e
2020-11-25 20:51:29,700 DEBUG  [main] BasicTypeRegistry: Adding type registration serializable -> org.hibernate.type.SerializableType@6b091a92
2020-11-25 20:51:29,700 DEBUG  [main] BasicTypeRegistry: Adding type registration object -> org.hibernate.type.ObjectType@35329a05
2020-11-25 20:51:29,700 DEBUG  [main] BasicTypeRegistry: Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@35329a05
2020-11-25 20:51:29,701 DEBUG  [main] BasicTypeRegistry: Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@18de84f0
2020-11-25 20:51:29,701 DEBUG  [main] BasicTypeRegistry: Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@34408f1b
2020-11-25 20:51:29,701 DEBUG  [main] BasicTypeRegistry: Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@4a729612
2020-11-25 20:51:29,701 DEBUG  [main] BasicTypeRegistry: Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@2e6fa551
2020-11-25 20:51:29,701 DEBUG  [main] BasicTypeRegistry: Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@427a4d68
2020-11-25 20:51:29,701 DEBUG  [main] BasicTypeRegistry: Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@72722a6b
2020-11-25 20:51:29,702 DEBUG  [main] BasicTypeRegistry: Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@2c6ee031
2020-11-25 20:51:29,702 DEBUG  [main] BasicTypeRegistry: Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@7ff89dc0
2020-11-25 20:51:29,712 DEBUG  [main] TypeConfiguration$Scope: Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@dcaa0e8] to MetadataBuildingContext [org.hibernate.boot.internal.MetadataBuildingContextRootImpl@4c66b3d9]
2020-11-25 20:51:29,733 DEBUG  [main] EnumType: Using NAMED-based conversion for Enum com.sf.back.entities.Kind
2020-11-25 20:51:29,737 DEBUG  [main] EnumType: Using NAMED-based conversion for Enum com.sf.back.entities.Kind
2020-11-25 20:51:29,787 DEBUG  [main] TypeConfiguration$Scope: Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@dcaa0e8] to SessionFactoryImpl [org.hibernate.internal.SessionFactoryImpl@146b3bc7]
2020-11-25 20:51:29,788 DEBUG  [main] EnumType: Using NAMED-based conversion for Enum com.sf.back.entities.Kind
2020-11-25 20:51:29,788 DEBUG  [main] EnumType: Using NAMED-based conversion for Enum com.sf.back.entities.Kind
2020-11-25 20:51:29,806 DEBUG  [main] EnumType: Using NAMED-based conversion for Enum com.sf.back.entities.Kind
2020-11-25 20:51:29,807 DEBUG  [main] EnumType: Using NAMED-based conversion for Enum com.sf.back.entities.Kind
2020-11-25 20:51:29,856 DEBUG  [main] EnumType: Using NAMED-based conversion for Enum com.sf.back.entities.Kind
2020-11-25 20:51:29,857 DEBUG  [main] EnumType: Using NAMED-based conversion for Enum com.sf.back.entities.Kind
2020-11-25 20:51:29,860 DEBUG  [main] EnumType: Using NAMED-based conversion for Enum com.sf.back.entities.Kind
2020-11-25 20:51:29,868 TRACE  [main] TypeConfiguration$Scope: Handling #sessionFactoryCreated from [org.hibernate.internal.SessionFactoryImpl@146b3bc7] for TypeConfiguration
2020-11-25 20:51:30,088 WARN   [main] JpaBaseConfiguration$JpaWebConfiguration: spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2020-11-25 20:51:30,313 WARN   [main] GenericWebApplicationContext: Exception encountered during context initialization - cancelling refresh attempt: org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'groovyMarkupConfigurer' defined in class path resource [org/springframework/boot/autoconfigure/groovy/template/GroovyTemplateAutoConfiguration$GroovyMarkupConfiguration.class]: Invocation of init method failed; nested exception is java.lang.reflect.InaccessibleObjectException: Unable to make jdk.internal.loader.ClassLoaders$AppClassLoader(jdk.internal.loader.ClassLoaders$PlatformClassLoader,jdk.internal.loader.URLClassPath) accessible: module java.base does not "opens jdk.internal.loader" to unnamed module @5fcacc0
2020-11-25 20:51:30,323 TRACE  [main] TypeConfiguration$Scope: Handling #sessionFactoryClosed from [org.hibernate.internal.SessionFactoryImpl@146b3bc7] for TypeConfiguration
2020-11-25 20:51:30,324 DEBUG  [main] TypeConfiguration$Scope: Un-scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration$Scope@7ee96c1c] from SessionFactory [org.hibernate.internal.SessionFactoryImpl@146b3bc7]
2020-11-25 20:51:30,398 ERROR  [main] SpringApplication: Application run failed
org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'groovyMarkupConfigurer' defined in class path resource [org/springframework/boot/autoconfigure/groovy/template/GroovyTemplateAutoConfiguration$GroovyMarkupConfiguration.class]: Invocation of init method failed; nested exception is java.lang.reflect.InaccessibleObjectException: Unable to make jdk.internal.loader.ClassLoaders$AppClassLoader(jdk.internal.loader.ClassLoaders$PlatformClassLoader,jdk.internal.loader.URLClassPath) accessible: module java.base does not "opens jdk.internal.loader" to unnamed module @5fcacc0
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1803)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:595)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:517)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:323)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:222)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:321)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:202)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(DefaultListableBeanFactory.java:879)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:878)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:550)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:747)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:397)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:315)
	at org.springframework.boot.test.context.SpringBootContextLoader.loadContext(SpringBootContextLoader.java:125)
	at org.springframework.test.context.cache.DefaultCacheAwareContextLoaderDelegate.loadContextInternal(DefaultCacheAwareContextLoaderDelegate.java:99)
	at org.springframework.test.context.cache.DefaultCacheAwareContextLoaderDelegate.loadContext(DefaultCacheAwareContextLoaderDelegate.java:124)
	at org.springframework.test.context.support.DefaultTestContext.getApplicationContext(DefaultTestContext.java:123)
	at org.springframework.test.context.web.ServletTestExecutionListener.setUpRequestContextIfNecessary(ServletTestExecutionListener.java:190)
	at org.springframework.test.context.web.ServletTestExecutionListener.prepareTestInstance(ServletTestExecutionListener.java:132)
	at org.springframework.test.context.TestContextManager.prepareTestInstance(TestContextManager.java:244)
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner.createTest(SpringJUnit4ClassRunner.java:227)
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner$1.runReflectiveCall(SpringJUnit4ClassRunner.java:289)
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner.methodBlock(SpringJUnit4ClassRunner.java:291)
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner.runChild(SpringJUnit4ClassRunner.java:246)
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner.runChild(SpringJUnit4ClassRunner.java:97)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:290)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:71)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:58)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268)
	at org.junit.internal.runners.statements.RunBefores.evaluate(RunBefores.java:26)
	at org.springframework.test.context.junit4.statements.RunBeforeTestClassCallbacks.evaluate(RunBeforeTestClassCallbacks.java:61)
	at org.junit.internal.runners.statements.RunAfters.evaluate(RunAfters.java:27)
	at org.springframework.test.context.junit4.statements.RunAfterTestClassCallbacks.evaluate(RunAfterTestClassCallbacks.java:70)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:363)
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner.run(SpringJUnit4ClassRunner.java:190)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:137)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:115)
	at org.junit.vintage.engine.execution.RunnerExecutor.execute(RunnerExecutor.java:40)
	at java.base/java.util.stream.ForEachOps$ForEachOp$OfRef.accept(ForEachOps.java:183)
	at java.base/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:195)
	at java.base/java.util.Iterator.forEachRemaining(Iterator.java:133)
	at java.base/java.util.Spliterators$IteratorSpliterator.forEachRemaining(Spliterators.java:1801)
	at java.base/java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:484)
	at java.base/java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:474)
	at java.base/java.util.stream.ForEachOps$ForEachOp.evaluateSequential(ForEachOps.java:150)
	at java.base/java.util.stream.ForEachOps$ForEachOp$OfRef.evaluateSequential(ForEachOps.java:173)
	at java.base/java.util.stream.AbstractPipeline.evaluate(AbstractPipeline.java:234)
	at java.base/java.util.stream.ReferencePipeline.forEach(ReferencePipeline.java:497)
	at org.junit.vintage.engine.VintageTestEngine.executeAllChildren(VintageTestEngine.java:80)
	at org.junit.vintage.engine.VintageTestEngine.execute(VintageTestEngine.java:71)
	at org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:220)
	at org.junit.platform.launcher.core.DefaultLauncher.lambda$execute$6(DefaultLauncher.java:188)
	at org.junit.platform.launcher.core.DefaultLauncher.withInterceptedStreams(DefaultLauncher.java:202)
	at org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:181)
	at org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:128)
	at org.apache.maven.surefire.junitplatform.JUnitPlatformProvider.invokeAllTests(JUnitPlatformProvider.java:150)
	at org.apache.maven.surefire.junitplatform.JUnitPlatformProvider.invoke(JUnitPlatformProvider.java:124)
	at org.apache.maven.surefire.booter.ForkedBooter.invokeProviderInSameClassLoader(ForkedBooter.java:384)
	at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:345)
	at org.apache.maven.surefire.booter.ForkedBooter.execute(ForkedBooter.java:126)
	at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:418)
Caused by: java.lang.reflect.InaccessibleObjectException: Unable to make jdk.internal.loader.ClassLoaders$AppClassLoader(jdk.internal.loader.ClassLoaders$PlatformClassLoader,jdk.internal.loader.URLClassPath) accessible: module java.base does not "opens jdk.internal.loader" to unnamed module @5fcacc0
	at java.base/java.lang.reflect.AccessibleObject.checkCanSetAccessible(AccessibleObject.java:361)
	at java.base/java.lang.reflect.AccessibleObject.checkCanSetAccessible(AccessibleObject.java:301)
	at java.base/java.lang.reflect.Constructor.checkCanSetAccessible(Constructor.java:189)
	at java.base/java.lang.reflect.Constructor.setAccessible(Constructor.java:182)
	at org.codehaus.groovy.reflection.CachedConstructor$1.run(CachedConstructor.java:44)
	at java.base/java.security.AccessController.doPrivileged(AccessController.java:312)
	at org.codehaus.groovy.reflection.CachedConstructor.<init>(CachedConstructor.java:42)
	at org.codehaus.groovy.reflection.CachedClass$2.initValue(CachedClass.java:79)
	at org.codehaus.groovy.reflection.CachedClass$2.initValue(CachedClass.java:69)
	at org.codehaus.groovy.util.LazyReference.getLocked(LazyReference.java:49)
	at org.codehaus.groovy.util.LazyReference.get(LazyReference.java:36)
	at org.codehaus.groovy.reflection.CachedClass.getConstructors(CachedClass.java:268)
	at groovy.lang.MetaClassImpl.<init>(MetaClassImpl.java:218)
	at groovy.lang.MetaClassImpl.<init>(MetaClassImpl.java:228)
	at groovy.lang.MetaClassRegistry$MetaClassCreationHandle.createNormalMetaClass(MetaClassRegistry.java:171)
	at groovy.lang.MetaClassRegistry$MetaClassCreationHandle.createWithCustomLookup(MetaClassRegistry.java:161)
	at groovy.lang.MetaClassRegistry$MetaClassCreationHandle.create(MetaClassRegistry.java:144)
	at org.codehaus.groovy.reflection.ClassInfo.getMetaClassUnderLock(ClassInfo.java:253)
	at org.codehaus.groovy.reflection.ClassInfo.getMetaClass(ClassInfo.java:285)
	at org.codehaus.groovy.reflection.ClassInfo.getMetaClass(ClassInfo.java:295)
	at org.codehaus.groovy.runtime.metaclass.MetaClassRegistryImpl.getMetaClass(MetaClassRegistryImpl.java:261)
	at org.codehaus.groovy.runtime.InvokerHelper.getMetaClass(InvokerHelper.java:873)
	at org.codehaus.groovy.runtime.InvokerHelper.invokePojoMethod(InvokerHelper.java:906)
	at org.codehaus.groovy.runtime.InvokerHelper.invokeMethod(InvokerHelper.java:898)
	at org.codehaus.groovy.runtime.typehandling.DefaultTypeTransformation.castToBoolean(DefaultTypeTransformation.java:185)
	at org.codehaus.groovy.runtime.typehandling.DefaultTypeTransformation.booleanUnbox(DefaultTypeTransformation.java:74)
	at org.codehaus.groovy.control.customizers.ASTTransformationCustomizer.findASTTranformationClass(ASTTransformationCustomizer.groovy:209)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:64)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:564)
	at org.codehaus.groovy.reflection.CachedMethod.invoke(CachedMethod.java:93)
	at org.codehaus.groovy.runtime.callsite.StaticMetaMethodSite$StaticMetaMethodSiteNoUnwrapNoCoerce.invoke(StaticMetaMethodSite.java:151)
	at org.codehaus.groovy.runtime.callsite.StaticMetaMethodSite.callStatic(StaticMetaMethodSite.java:102)
	at org.codehaus.groovy.runtime.callsite.AbstractCallSite.callStatic(AbstractCallSite.java:214)
	at org.codehaus.groovy.control.customizers.ASTTransformationCustomizer.findPhase(ASTTransformationCustomizer.groovy:226)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:64)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:564)
	at org.codehaus.groovy.reflection.CachedMethod.invoke(CachedMethod.java:93)
	at org.codehaus.groovy.runtime.callsite.StaticMetaMethodSite$StaticMetaMethodSiteNoUnwrapNoCoerce.invoke(StaticMetaMethodSite.java:151)
	at org.codehaus.groovy.runtime.callsite.StaticMetaMethodSite.callStatic(StaticMetaMethodSite.java:102)
	at org.codehaus.groovy.runtime.callsite.AbstractCallSite.callStatic(AbstractCallSite.java:214)
	at org.codehaus.groovy.control.customizers.ASTTransformationCustomizer.<init>(ASTTransformationCustomizer.groovy:180)
	at org.codehaus.groovy.control.customizers.ASTTransformationCustomizer.<init>(ASTTransformationCustomizer.groovy:188)
	at groovy.text.markup.MarkupTemplateEngine.<init>(MarkupTemplateEngine.java:94)
	at org.springframework.web.servlet.view.groovy.GroovyMarkupConfigurer.createTemplateEngine(GroovyMarkupConfigurer.java:160)
	at org.springframework.web.servlet.view.groovy.GroovyMarkupConfigurer.afterPropertiesSet(GroovyMarkupConfigurer.java:153)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1862)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1799)
	... 62 common frames omitted
2020-11-25 20:51:30,399 ERROR  [main] TestContextManager: Caught exception while allowing TestExecutionListener [org.springframework.test.context.web.ServletTestExecutionListener@46c093b4] to prepare test instance [com.sf.math.algebra.solvers.PolynomialSolverIntervalTest@df52b26]
java.lang.IllegalStateException: Failed to load ApplicationContext
	at org.springframework.test.context.cache.DefaultCacheAwareContextLoaderDelegate.loadContext(DefaultCacheAwareContextLoaderDelegate.java:132)
	at org.springframework.test.context.support.DefaultTestContext.getApplicationContext(DefaultTestContext.java:123)
	at org.springframework.test.context.web.ServletTestExecutionListener.setUpRequestContextIfNecessary(ServletTestExecutionListener.java:190)
	at org.springframework.test.context.web.ServletTestExecutionListener.prepareTestInstance(ServletTestExecutionListener.java:132)
	at org.springframework.test.context.TestContextManager.prepareTestInstance(TestContextManager.java:244)
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner.createTest(SpringJUnit4ClassRunner.java:227)
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner$1.runReflectiveCall(SpringJUnit4ClassRunner.java:289)
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner.methodBlock(SpringJUnit4ClassRunner.java:291)
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner.runChild(SpringJUnit4ClassRunner.java:246)
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner.runChild(SpringJUnit4ClassRunner.java:97)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:290)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:71)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:58)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268)
	at org.junit.internal.runners.statements.RunBefores.evaluate(RunBefores.java:26)
	at org.springframework.test.context.junit4.statements.RunBeforeTestClassCallbacks.evaluate(RunBeforeTestClassCallbacks.java:61)
	at org.junit.internal.runners.statements.RunAfters.evaluate(RunAfters.java:27)
	at org.springframework.test.context.junit4.statements.RunAfterTestClassCallbacks.evaluate(RunAfterTestClassCallbacks.java:70)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:363)
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner.run(SpringJUnit4ClassRunner.java:190)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:137)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:115)
	at org.junit.vintage.engine.execution.RunnerExecutor.execute(RunnerExecutor.java:40)
	at java.base/java.util.stream.ForEachOps$ForEachOp$OfRef.accept(ForEachOps.java:183)
	at java.base/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:195)
	at java.base/java.util.Iterator.forEachRemaining(Iterator.java:133)
	at java.base/java.util.Spliterators$IteratorSpliterator.forEachRemaining(Spliterators.java:1801)
	at java.base/java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:484)
	at java.base/java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:474)
	at java.base/java.util.stream.ForEachOps$ForEachOp.evaluateSequential(ForEachOps.java:150)
	at java.base/java.util.stream.ForEachOps$ForEachOp$OfRef.evaluateSequential(ForEachOps.java:173)
	at java.base/java.util.stream.AbstractPipeline.evaluate(AbstractPipeline.java:234)
	at java.base/java.util.stream.ReferencePipeline.forEach(ReferencePipeline.java:497)
	at org.junit.vintage.engine.VintageTestEngine.executeAllChildren(VintageTestEngine.java:80)
	at org.junit.vintage.engine.VintageTestEngine.execute(VintageTestEngine.java:71)
	at org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:220)
	at org.junit.platform.launcher.core.DefaultLauncher.lambda$execute$6(DefaultLauncher.java:188)
	at org.junit.platform.launcher.core.DefaultLauncher.withInterceptedStreams(DefaultLauncher.java:202)
	at org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:181)
	at org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:128)
	at org.apache.maven.surefire.junitplatform.JUnitPlatformProvider.invokeAllTests(JUnitPlatformProvider.java:150)
	at org.apache.maven.surefire.junitplatform.JUnitPlatformProvider.invoke(JUnitPlatformProvider.java:124)
	at org.apache.maven.surefire.booter.ForkedBooter.invokeProviderInSameClassLoader(ForkedBooter.java:384)
	at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:345)
	at org.apache.maven.surefire.booter.ForkedBooter.execute(ForkedBooter.java:126)
	at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:418)
Caused by: org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'groovyMarkupConfigurer' defined in class path resource [org/springframework/boot/autoconfigure/groovy/template/GroovyTemplateAutoConfiguration$GroovyMarkupConfiguration.class]: Invocation of init method failed; nested exception is java.lang.reflect.InaccessibleObjectException: Unable to make jdk.internal.loader.ClassLoaders$AppClassLoader(jdk.internal.loader.ClassLoaders$PlatformClassLoader,jdk.internal.loader.URLClassPath) accessible: module java.base does not "opens jdk.internal.loader" to unnamed module @5fcacc0
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1803)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:595)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:517)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:323)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:222)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:321)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:202)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(DefaultListableBeanFactory.java:879)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:878)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:550)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:747)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:397)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:315)
	at org.springframework.boot.test.context.SpringBootContextLoader.loadContext(SpringBootContextLoader.java:125)
	at org.springframework.test.context.cache.DefaultCacheAwareContextLoaderDelegate.loadContextInternal(DefaultCacheAwareContextLoaderDelegate.java:99)
	at org.springframework.test.context.cache.DefaultCacheAwareContextLoaderDelegate.loadContext(DefaultCacheAwareContextLoaderDelegate.java:124)
	... 47 common frames omitted
Caused by: java.lang.reflect.InaccessibleObjectException: Unable to make jdk.internal.loader.ClassLoaders$AppClassLoader(jdk.internal.loader.ClassLoaders$PlatformClassLoader,jdk.internal.loader.URLClassPath) accessible: module java.base does not "opens jdk.internal.loader" to unnamed module @5fcacc0
	at java.base/java.lang.reflect.AccessibleObject.checkCanSetAccessible(AccessibleObject.java:361)
	at java.base/java.lang.reflect.AccessibleObject.checkCanSetAccessible(AccessibleObject.java:301)
	at java.base/java.lang.reflect.Constructor.checkCanSetAccessible(Constructor.java:189)
	at java.base/java.lang.reflect.Constructor.setAccessible(Constructor.java:182)
	at org.codehaus.groovy.reflection.CachedConstructor$1.run(CachedConstructor.java:44)
	at java.base/java.security.AccessController.doPrivileged(AccessController.java:312)
	at org.codehaus.groovy.reflection.CachedConstructor.<init>(CachedConstructor.java:42)
	at org.codehaus.groovy.reflection.CachedClass$2.initValue(CachedClass.java:79)
	at org.codehaus.groovy.reflection.CachedClass$2.initValue(CachedClass.java:69)
	at org.codehaus.groovy.util.LazyReference.getLocked(LazyReference.java:49)
	at org.codehaus.groovy.util.LazyReference.get(LazyReference.java:36)
	at org.codehaus.groovy.reflection.CachedClass.getConstructors(CachedClass.java:268)
	at groovy.lang.MetaClassImpl.<init>(MetaClassImpl.java:218)
	at groovy.lang.MetaClassImpl.<init>(MetaClassImpl.java:228)
	at groovy.lang.MetaClassRegistry$MetaClassCreationHandle.createNormalMetaClass(MetaClassRegistry.java:171)
	at groovy.lang.MetaClassRegistry$MetaClassCreationHandle.createWithCustomLookup(MetaClassRegistry.java:161)
	at groovy.lang.MetaClassRegistry$MetaClassCreationHandle.create(MetaClassRegistry.java:144)
	at org.codehaus.groovy.reflection.ClassInfo.getMetaClassUnderLock(ClassInfo.java:253)
	at org.codehaus.groovy.reflection.ClassInfo.getMetaClass(ClassInfo.java:285)
	at org.codehaus.groovy.reflection.ClassInfo.getMetaClass(ClassInfo.java:295)
	at org.codehaus.groovy.runtime.metaclass.MetaClassRegistryImpl.getMetaClass(MetaClassRegistryImpl.java:261)
	at org.codehaus.groovy.runtime.InvokerHelper.getMetaClass(InvokerHelper.java:873)
	at org.codehaus.groovy.runtime.InvokerHelper.invokePojoMethod(InvokerHelper.java:906)
	at org.codehaus.groovy.runtime.InvokerHelper.invokeMethod(InvokerHelper.java:898)
	at org.codehaus.groovy.runtime.typehandling.DefaultTypeTransformation.castToBoolean(DefaultTypeTransformation.java:185)
	at org.codehaus.groovy.runtime.typehandling.DefaultTypeTransformation.booleanUnbox(DefaultTypeTransformation.java:74)
	at org.codehaus.groovy.control.customizers.ASTTransformationCustomizer.findASTTranformationClass(ASTTransformationCustomizer.groovy:209)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:64)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:564)
	at org.codehaus.groovy.reflection.CachedMethod.invoke(CachedMethod.java:93)
	at org.codehaus.groovy.runtime.callsite.StaticMetaMethodSite$StaticMetaMethodSiteNoUnwrapNoCoerce.invoke(StaticMetaMethodSite.java:151)
	at org.codehaus.groovy.runtime.callsite.StaticMetaMethodSite.callStatic(StaticMetaMethodSite.java:102)
	at org.codehaus.groovy.runtime.callsite.AbstractCallSite.callStatic(AbstractCallSite.java:214)
	at org.codehaus.groovy.control.customizers.ASTTransformationCustomizer.findPhase(ASTTransformationCustomizer.groovy:226)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:64)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:564)
	at org.codehaus.groovy.reflection.CachedMethod.invoke(CachedMethod.java:93)
	at org.codehaus.groovy.runtime.callsite.StaticMetaMethodSite$StaticMetaMethodSiteNoUnwrapNoCoerce.invoke(StaticMetaMethodSite.java:151)
	at org.codehaus.groovy.runtime.callsite.StaticMetaMethodSite.callStatic(StaticMetaMethodSite.java:102)
	at org.codehaus.groovy.runtime.callsite.AbstractCallSite.callStatic(AbstractCallSite.java:214)
	at org.codehaus.groovy.control.customizers.ASTTransformationCustomizer.<init>(ASTTransformationCustomizer.groovy:180)
	at org.codehaus.groovy.control.customizers.ASTTransformationCustomizer.<init>(ASTTransformationCustomizer.groovy:188)
	at groovy.text.markup.MarkupTemplateEngine.<init>(MarkupTemplateEngine.java:94)
	at org.springframework.web.servlet.view.groovy.GroovyMarkupConfigurer.createTemplateEngine(GroovyMarkupConfigurer.java:160)
	at org.springframework.web.servlet.view.groovy.GroovyMarkupConfigurer.afterPropertiesSet(GroovyMarkupConfigurer.java:153)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1862)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1799)
	... 62 common frames omitted
2020-11-25 20:51:31,093 DEBUG  [main] BasicTypeRegistry: Adding type registration boolean -> org.hibernate.type.BooleanType@59127611
2020-11-25 20:51:31,099 DEBUG  [main] BasicTypeRegistry: Adding type registration boolean -> org.hibernate.type.BooleanType@59127611
2020-11-25 20:51:31,100 DEBUG  [main] BasicTypeRegistry: Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@59127611
2020-11-25 20:51:31,100 DEBUG  [main] BasicTypeRegistry: Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@18db3b3c
2020-11-25 20:51:31,101 DEBUG  [main] BasicTypeRegistry: Adding type registration true_false -> org.hibernate.type.TrueFalseType@5c1c9881
2020-11-25 20:51:31,101 DEBUG  [main] BasicTypeRegistry: Adding type registration yes_no -> org.hibernate.type.YesNoType@5d37aa0f
2020-11-25 20:51:31,101 DEBUG  [main] BasicTypeRegistry: Adding type registration byte -> org.hibernate.type.ByteType@3e4afd10
2020-11-25 20:51:31,102 DEBUG  [main] BasicTypeRegistry: Adding type registration byte -> org.hibernate.type.ByteType@3e4afd10
2020-11-25 20:51:31,102 DEBUG  [main] BasicTypeRegistry: Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@3e4afd10
2020-11-25 20:51:31,103 DEBUG  [main] BasicTypeRegistry: Adding type registration character -> org.hibernate.type.CharacterType@48d44b46
2020-11-25 20:51:31,103 DEBUG  [main] BasicTypeRegistry: Adding type registration char -> org.hibernate.type.CharacterType@48d44b46
2020-11-25 20:51:31,103 DEBUG  [main] BasicTypeRegistry: Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@48d44b46
2020-11-25 20:51:31,104 DEBUG  [main] BasicTypeRegistry: Adding type registration short -> org.hibernate.type.ShortType@dd20ebc
2020-11-25 20:51:31,104 DEBUG  [main] BasicTypeRegistry: Adding type registration short -> org.hibernate.type.ShortType@dd20ebc
2020-11-25 20:51:31,104 DEBUG  [main] BasicTypeRegistry: Adding type registration java.lang.Short -> org.hibernate.type.ShortType@dd20ebc
2020-11-25 20:51:31,105 DEBUG  [main] BasicTypeRegistry: Adding type registration integer -> org.hibernate.type.IntegerType@5f7cd50e
2020-11-25 20:51:31,105 DEBUG  [main] BasicTypeRegistry: Adding type registration int -> org.hibernate.type.IntegerType@5f7cd50e
2020-11-25 20:51:31,106 DEBUG  [main] BasicTypeRegistry: Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@5f7cd50e
2020-11-25 20:51:31,106 DEBUG  [main] BasicTypeRegistry: Adding type registration long -> org.hibernate.type.LongType@359e27d2
2020-11-25 20:51:31,106 DEBUG  [main] BasicTypeRegistry: Adding type registration long -> org.hibernate.type.LongType@359e27d2
2020-11-25 20:51:31,107 DEBUG  [main] BasicTypeRegistry: Adding type registration java.lang.Long -> org.hibernate.type.LongType@359e27d2
2020-11-25 20:51:31,107 DEBUG  [main] BasicTypeRegistry: Adding type registration float -> org.hibernate.type.FloatType@29b8df5
2020-11-25 20:51:31,107 DEBUG  [main] BasicTypeRegistry: Adding type registration float -> org.hibernate.type.FloatType@29b8df5
2020-11-25 20:51:31,108 DEBUG  [main] BasicTypeRegistry: Adding type registration java.lang.Float -> org.hibernate.type.FloatType@29b8df5
2020-11-25 20:51:31,108 DEBUG  [main] BasicTypeRegistry: Adding type registration double -> org.hibernate.type.DoubleType@36cfe107
2020-11-25 20:51:31,108 DEBUG  [main] BasicTypeRegistry: Adding type registration double -> org.hibernate.type.DoubleType@36cfe107
2020-11-25 20:51:31,108 DEBUG  [main] BasicTypeRegistry: Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@36cfe107
2020-11-25 20:51:31,109 DEBUG  [main] BasicTypeRegistry: Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@139089a4
2020-11-25 20:51:31,109 DEBUG  [main] BasicTypeRegistry: Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@139089a4
2020-11-25 20:51:31,109 DEBUG  [main] BasicTypeRegistry: Adding type registration big_integer -> org.hibernate.type.BigIntegerType@9f1ca74
2020-11-25 20:51:31,109 DEBUG  [main] BasicTypeRegistry: Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@9f1ca74
2020-11-25 20:51:31,109 DEBUG  [main] BasicTypeRegistry: Adding type registration string -> org.hibernate.type.StringType@393ae7a0
2020-11-25 20:51:31,109 DEBUG  [main] BasicTypeRegistry: Adding type registration java.lang.String -> org.hibernate.type.StringType@393ae7a0
2020-11-25 20:51:31,110 DEBUG  [main] BasicTypeRegistry: Adding type registration nstring -> org.hibernate.type.StringNVarcharType@7ee12d58
2020-11-25 20:51:31,110 DEBUG  [main] BasicTypeRegistry: Adding type registration ncharacter -> org.hibernate.type.CharacterNCharType@34e990cc
2020-11-25 20:51:31,110 DEBUG  [main] BasicTypeRegistry: Adding type registration url -> org.hibernate.type.UrlType@6de84336
2020-11-25 20:51:31,110 DEBUG  [main] BasicTypeRegistry: Adding type registration java.net.URL -> org.hibernate.type.UrlType@6de84336
2020-11-25 20:51:31,110 DEBUG  [main] BasicTypeRegistry: Adding type registration Duration -> org.hibernate.type.DurationType@69b37f5c
2020-11-25 20:51:31,110 DEBUG  [main] BasicTypeRegistry: Adding type registration java.time.Duration -> org.hibernate.type.DurationType@69b37f5c
2020-11-25 20:51:31,110 DEBUG  [main] BasicTypeRegistry: Adding type registration Instant -> org.hibernate.type.InstantType@580ffea
2020-11-25 20:51:31,111 DEBUG  [main] BasicTypeRegistry: Adding type registration java.time.Instant -> org.hibernate.type.InstantType@580ffea
2020-11-25 20:51:31,111 DEBUG  [main] BasicTypeRegistry: Adding type registration LocalDateTime -> org.hibernate.type.LocalDateTimeType@79d49790
2020-11-25 20:51:31,112 DEBUG  [main] BasicTypeRegistry: Adding type registration java.time.LocalDateTime -> org.hibernate.type.LocalDateTimeType@79d49790
2020-11-25 20:51:31,112 DEBUG  [main] BasicTypeRegistry: Adding type registration LocalDate -> org.hibernate.type.LocalDateType@3e9fb485
2020-11-25 20:51:31,112 DEBUG  [main] BasicTypeRegistry: Adding type registration java.time.LocalDate -> org.hibernate.type.LocalDateType@3e9fb485
2020-11-25 20:51:31,112 DEBUG  [main] BasicTypeRegistry: Adding type registration LocalTime -> org.hibernate.type.LocalTimeType@419f0ea
2020-11-25 20:51:31,112 DEBUG  [main] BasicTypeRegistry: Adding type registration java.time.LocalTime -> org.hibernate.type.LocalTimeType@419f0ea
2020-11-25 20:51:31,112 DEBUG  [main] BasicTypeRegistry: Adding type registration OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@87aec6a
2020-11-25 20:51:31,113 DEBUG  [main] BasicTypeRegistry: Adding type registration java.time.OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@87aec6a
2020-11-25 20:51:31,114 DEBUG  [main] BasicTypeRegistry: Adding type registration OffsetTime -> org.hibernate.type.OffsetTimeType@5529522f
2020-11-25 20:51:31,114 DEBUG  [main] BasicTypeRegistry: Adding type registration java.time.OffsetTime -> org.hibernate.type.OffsetTimeType@5529522f
2020-11-25 20:51:31,114 DEBUG  [main] BasicTypeRegistry: Adding type registration ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@152e7703
2020-11-25 20:51:31,114 DEBUG  [main] BasicTypeRegistry: Adding type registration java.time.ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@152e7703
2020-11-25 20:51:31,114 DEBUG  [main] BasicTypeRegistry: Adding type registration date -> org.hibernate.type.DateType@24fc2c80
2020-11-25 20:51:31,114 DEBUG  [main] BasicTypeRegistry: Adding type registration java.sql.Date -> org.hibernate.type.DateType@24fc2c80
2020-11-25 20:51:31,115 DEBUG  [main] BasicTypeRegistry: Adding type registration time -> org.hibernate.type.TimeType@48b3b1b8
2020-11-25 20:51:31,115 DEBUG  [main] BasicTypeRegistry: Adding type registration java.sql.Time -> org.hibernate.type.TimeType@48b3b1b8
2020-11-25 20:51:31,115 DEBUG  [main] BasicTypeRegistry: Adding type registration timestamp -> org.hibernate.type.TimestampType@686b1e2d
2020-11-25 20:51:31,115 DEBUG  [main] BasicTypeRegistry: Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@686b1e2d
2020-11-25 20:51:31,115 DEBUG  [main] BasicTypeRegistry: Adding type registration java.util.Date -> org.hibernate.type.TimestampType@686b1e2d
2020-11-25 20:51:31,115 DEBUG  [main] BasicTypeRegistry: Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@652b3733
2020-11-25 20:51:31,115 DEBUG  [main] BasicTypeRegistry: Adding type registration calendar -> org.hibernate.type.CalendarType@5be7b749
2020-11-25 20:51:31,116 DEBUG  [main] BasicTypeRegistry: Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@5be7b749
2020-11-25 20:51:31,116 DEBUG  [main] BasicTypeRegistry: Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@5be7b749
2020-11-25 20:51:31,116 DEBUG  [main] BasicTypeRegistry: Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@177ddd24
2020-11-25 20:51:31,116 DEBUG  [main] BasicTypeRegistry: Adding type registration locale -> org.hibernate.type.LocaleType@61ad30f6
2020-11-25 20:51:31,116 DEBUG  [main] BasicTypeRegistry: Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@61ad30f6
2020-11-25 20:51:31,116 DEBUG  [main] BasicTypeRegistry: Adding type registration currency -> org.hibernate.type.CurrencyType@574ebdaf
2020-11-25 20:51:31,116 DEBUG  [main] BasicTypeRegistry: Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@574ebdaf
2020-11-25 20:51:31,117 DEBUG  [main] BasicTypeRegistry: Adding type registration timezone -> org.hibernate.type.TimeZoneType@123ca460
2020-11-25 20:51:31,117 DEBUG  [main] BasicTypeRegistry: Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@123ca460
2020-11-25 20:51:31,117 DEBUG  [main] BasicTypeRegistry: Adding type registration class -> org.hibernate.type.ClassType@3c9f4376
2020-11-25 20:51:31,117 DEBUG  [main] BasicTypeRegistry: Adding type registration java.lang.Class -> org.hibernate.type.ClassType@3c9f4376
2020-11-25 20:51:31,122 DEBUG  [main] BasicTypeRegistry: Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@1958c0d9
2020-11-25 20:51:31,123 DEBUG  [main] BasicTypeRegistry: Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@1958c0d9
2020-11-25 20:51:31,123 DEBUG  [main] BasicTypeRegistry: Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@5fc7255c
2020-11-25 20:51:31,123 DEBUG  [main] BasicTypeRegistry: Adding type registration binary -> org.hibernate.type.BinaryType@79ba0285
2020-11-25 20:51:31,123 DEBUG  [main] BasicTypeRegistry: Adding type registration byte[] -> org.hibernate.type.BinaryType@79ba0285
2020-11-25 20:51:31,123 DEBUG  [main] BasicTypeRegistry: Adding type registration [B -> org.hibernate.type.BinaryType@79ba0285
2020-11-25 20:51:31,123 DEBUG  [main] BasicTypeRegistry: Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@598778cc
2020-11-25 20:51:31,124 DEBUG  [main] BasicTypeRegistry: Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@598778cc
2020-11-25 20:51:31,124 DEBUG  [main] BasicTypeRegistry: Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@598778cc
2020-11-25 20:51:31,124 DEBUG  [main] BasicTypeRegistry: Adding type registration row_version -> org.hibernate.type.RowVersionType@11cadb32
2020-11-25 20:51:31,124 DEBUG  [main] BasicTypeRegistry: Adding type registration image -> org.hibernate.type.ImageType@37986daf
2020-11-25 20:51:31,124 DEBUG  [main] BasicTypeRegistry: Adding type registration characters -> org.hibernate.type.CharArrayType@710afd47
2020-11-25 20:51:31,124 DEBUG  [main] BasicTypeRegistry: Adding type registration char[] -> org.hibernate.type.CharArrayType@710afd47
2020-11-25 20:51:31,124 DEBUG  [main] BasicTypeRegistry: Adding type registration [C -> org.hibernate.type.CharArrayType@710afd47
2020-11-25 20:51:31,124 DEBUG  [main] BasicTypeRegistry: Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@12670e55
2020-11-25 20:51:31,124 DEBUG  [main] BasicTypeRegistry: Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@12670e55
2020-11-25 20:51:31,124 DEBUG  [main] BasicTypeRegistry: Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@12670e55
2020-11-25 20:51:31,125 DEBUG  [main] BasicTypeRegistry: Adding type registration text -> org.hibernate.type.TextType@32ba5c65
2020-11-25 20:51:31,125 DEBUG  [main] BasicTypeRegistry: Adding type registration ntext -> org.hibernate.type.NTextType@10166230
2020-11-25 20:51:31,125 DEBUG  [main] BasicTypeRegistry: Adding type registration blob -> org.hibernate.type.BlobType@13dd7887
2020-11-25 20:51:31,125 DEBUG  [main] BasicTypeRegistry: Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@13dd7887
2020-11-25 20:51:31,125 DEBUG  [main] BasicTypeRegistry: Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@3cbfdf5c
2020-11-25 20:51:31,125 DEBUG  [main] BasicTypeRegistry: Adding type registration clob -> org.hibernate.type.ClobType@58636b50
2020-11-25 20:51:31,125 DEBUG  [main] BasicTypeRegistry: Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@58636b50
2020-11-25 20:51:31,125 DEBUG  [main] BasicTypeRegistry: Adding type registration nclob -> org.hibernate.type.NClobType@1e5aacd9
2020-11-25 20:51:31,126 DEBUG  [main] BasicTypeRegistry: Adding type registration java.sql.NClob -> org.hibernate.type.NClobType@1e5aacd9
2020-11-25 20:51:31,126 DEBUG  [main] BasicTypeRegistry: Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@120411ec
2020-11-25 20:51:31,126 DEBUG  [main] BasicTypeRegistry: Adding type registration materialized_nclob -> org.hibernate.type.MaterializedNClobType@1a34a51e
2020-11-25 20:51:31,126 DEBUG  [main] BasicTypeRegistry: Adding type registration serializable -> org.hibernate.type.SerializableType@6b091a92
2020-11-25 20:51:31,126 DEBUG  [main] BasicTypeRegistry: Adding type registration object -> org.hibernate.type.ObjectType@35329a05
2020-11-25 20:51:31,126 DEBUG  [main] BasicTypeRegistry: Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@35329a05
2020-11-25 20:51:31,127 DEBUG  [main] BasicTypeRegistry: Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@697fb4b1
2020-11-25 20:51:31,127 DEBUG  [main] BasicTypeRegistry: Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@1b5593e6
2020-11-25 20:51:31,127 DEBUG  [main] BasicTypeRegistry: Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@3c75fb73
2020-11-25 20:51:31,127 DEBUG  [main] BasicTypeRegistry: Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@7ac47e87
2020-11-25 20:51:31,128 DEBUG  [main] BasicTypeRegistry: Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@6e0a9752
2020-11-25 20:51:31,128 DEBUG  [main] BasicTypeRegistry: Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@5977f3d6
2020-11-25 20:51:31,128 DEBUG  [main] BasicTypeRegistry: Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@4aca25e8
2020-11-25 20:51:31,128 DEBUG  [main] BasicTypeRegistry: Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@13a34a70
2020-11-25 20:51:31,153 DEBUG  [main] TypeConfiguration$Scope: Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@1f334ce0] to MetadataBuildingContext [org.hibernate.boot.internal.MetadataBuildingContextRootImpl@2b7e2212]
2020-11-25 20:51:31,179 DEBUG  [main] EnumType: Using NAMED-based conversion for Enum com.sf.back.entities.Kind
2020-11-25 20:51:31,181 DEBUG  [main] EnumType: Using NAMED-based conversion for Enum com.sf.back.entities.Kind
2020-11-25 20:51:31,210 DEBUG  [main] TypeConfiguration$Scope: Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@1f334ce0] to SessionFactoryImpl [org.hibernate.internal.SessionFactoryImpl@46a2eca6]
2020-11-25 20:51:31,211 DEBUG  [main] EnumType: Using NAMED-based conversion for Enum com.sf.back.entities.Kind
2020-11-25 20:51:31,212 DEBUG  [main] EnumType: Using NAMED-based conversion for Enum com.sf.back.entities.Kind
2020-11-25 20:51:31,239 DEBUG  [main] EnumType: Using NAMED-based conversion for Enum com.sf.back.entities.Kind
2020-11-25 20:51:31,240 DEBUG  [main] EnumType: Using NAMED-based conversion for Enum com.sf.back.entities.Kind
2020-11-25 20:51:31,286 DEBUG  [main] EnumType: Using NAMED-based conversion for Enum com.sf.back.entities.Kind
2020-11-25 20:51:31,287 DEBUG  [main] EnumType: Using NAMED-based conversion for Enum com.sf.back.entities.Kind
2020-11-25 20:51:31,292 DEBUG  [main] EnumType: Using NAMED-based conversion for Enum com.sf.back.entities.Kind
2020-11-25 20:51:31,316 TRACE  [main] TypeConfiguration$Scope: Handling #sessionFactoryCreated from [org.hibernate.internal.SessionFactoryImpl@46a2eca6] for TypeConfiguration
2020-11-25 20:51:31,497 WARN   [main] JpaBaseConfiguration$JpaWebConfiguration: spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2020-11-25 20:51:31,660 WARN   [main] GenericWebApplicationContext: Exception encountered during context initialization - cancelling refresh attempt: org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'groovyMarkupConfigurer' defined in class path resource [org/springframework/boot/autoconfigure/groovy/template/GroovyTemplateAutoConfiguration$GroovyMarkupConfiguration.class]: Invocation of init method failed; nested exception is java.lang.reflect.InaccessibleObjectException: Unable to make jdk.internal.loader.ClassLoaders$AppClassLoader(jdk.internal.loader.ClassLoaders$PlatformClassLoader,jdk.internal.loader.URLClassPath) accessible: module java.base does not "opens jdk.internal.loader" to unnamed module @5fcacc0
2020-11-25 20:51:31,664 TRACE  [main] TypeConfiguration$Scope: Handling #sessionFactoryClosed from [org.hibernate.internal.SessionFactoryImpl@46a2eca6] for TypeConfiguration
2020-11-25 20:51:31,664 DEBUG  [main] TypeConfiguration$Scope: Un-scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration$Scope@40b0c9be] from SessionFactory [org.hibernate.internal.SessionFactoryImpl@46a2eca6]
2020-11-25 20:51:31,686 ERROR  [main] SpringApplication: Application run failed
org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'groovyMarkupConfigurer' defined in class path resource [org/springframework/boot/autoconfigure/groovy/template/GroovyTemplateAutoConfiguration$GroovyMarkupConfiguration.class]: Invocation of init method failed; nested exception is java.lang.reflect.InaccessibleObjectException: Unable to make jdk.internal.loader.ClassLoaders$AppClassLoader(jdk.internal.loader.ClassLoaders$PlatformClassLoader,jdk.internal.loader.URLClassPath) accessible: module java.base does not "opens jdk.internal.loader" to unnamed module @5fcacc0
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1803)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:595)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:517)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:323)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:222)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:321)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:202)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(DefaultListableBeanFactory.java:879)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:878)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:550)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:747)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:397)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:315)
	at org.springframework.boot.test.context.SpringBootContextLoader.loadContext(SpringBootContextLoader.java:125)
	at org.springframework.test.context.cache.DefaultCacheAwareContextLoaderDelegate.loadContextInternal(DefaultCacheAwareContextLoaderDelegate.java:99)
	at org.springframework.test.context.cache.DefaultCacheAwareContextLoaderDelegate.loadContext(DefaultCacheAwareContextLoaderDelegate.java:124)
	at org.springframework.test.context.support.DefaultTestContext.getApplicationContext(DefaultTestContext.java:123)
	at org.springframework.test.context.web.ServletTestExecutionListener.setUpRequestContextIfNecessary(ServletTestExecutionListener.java:190)
	at org.springframework.test.context.web.ServletTestExecutionListener.prepareTestInstance(ServletTestExecutionListener.java:132)
	at org.springframework.test.context.TestContextManager.prepareTestInstance(TestContextManager.java:244)
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner.createTest(SpringJUnit4ClassRunner.java:227)
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner$1.runReflectiveCall(SpringJUnit4ClassRunner.java:289)
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner.methodBlock(SpringJUnit4ClassRunner.java:291)
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner.runChild(SpringJUnit4ClassRunner.java:246)
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner.runChild(SpringJUnit4ClassRunner.java:97)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:290)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:71)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:58)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268)
	at org.junit.internal.runners.statements.RunBefores.evaluate(RunBefores.java:26)
	at org.springframework.test.context.junit4.statements.RunBeforeTestClassCallbacks.evaluate(RunBeforeTestClassCallbacks.java:61)
	at org.junit.internal.runners.statements.RunAfters.evaluate(RunAfters.java:27)
	at org.springframework.test.context.junit4.statements.RunAfterTestClassCallbacks.evaluate(RunAfterTestClassCallbacks.java:70)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:363)
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner.run(SpringJUnit4ClassRunner.java:190)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:137)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:115)
	at org.junit.vintage.engine.execution.RunnerExecutor.execute(RunnerExecutor.java:40)
	at java.base/java.util.stream.ForEachOps$ForEachOp$OfRef.accept(ForEachOps.java:183)
	at java.base/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:195)
	at java.base/java.util.Iterator.forEachRemaining(Iterator.java:133)
	at java.base/java.util.Spliterators$IteratorSpliterator.forEachRemaining(Spliterators.java:1801)
	at java.base/java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:484)
	at java.base/java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:474)
	at java.base/java.util.stream.ForEachOps$ForEachOp.evaluateSequential(ForEachOps.java:150)
	at java.base/java.util.stream.ForEachOps$ForEachOp$OfRef.evaluateSequential(ForEachOps.java:173)
	at java.base/java.util.stream.AbstractPipeline.evaluate(AbstractPipeline.java:234)
	at java.base/java.util.stream.ReferencePipeline.forEach(ReferencePipeline.java:497)
	at org.junit.vintage.engine.VintageTestEngine.executeAllChildren(VintageTestEngine.java:80)
	at org.junit.vintage.engine.VintageTestEngine.execute(VintageTestEngine.java:71)
	at org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:220)
	at org.junit.platform.launcher.core.DefaultLauncher.lambda$execute$6(DefaultLauncher.java:188)
	at org.junit.platform.launcher.core.DefaultLauncher.withInterceptedStreams(DefaultLauncher.java:202)
	at org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:181)
	at org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:128)
	at org.apache.maven.surefire.junitplatform.JUnitPlatformProvider.invokeAllTests(JUnitPlatformProvider.java:150)
	at org.apache.maven.surefire.junitplatform.JUnitPlatformProvider.invoke(JUnitPlatformProvider.java:124)
	at org.apache.maven.surefire.booter.ForkedBooter.invokeProviderInSameClassLoader(ForkedBooter.java:384)
	at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:345)
	at org.apache.maven.surefire.booter.ForkedBooter.execute(ForkedBooter.java:126)
	at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:418)
Caused by: java.lang.reflect.InaccessibleObjectException: Unable to make jdk.internal.loader.ClassLoaders$AppClassLoader(jdk.internal.loader.ClassLoaders$PlatformClassLoader,jdk.internal.loader.URLClassPath) accessible: module java.base does not "opens jdk.internal.loader" to unnamed module @5fcacc0
	at java.base/java.lang.reflect.AccessibleObject.checkCanSetAccessible(AccessibleObject.java:361)
	at java.base/java.lang.reflect.AccessibleObject.checkCanSetAccessible(AccessibleObject.java:301)
	at java.base/java.lang.reflect.Constructor.checkCanSetAccessible(Constructor.java:189)
	at java.base/java.lang.reflect.Constructor.setAccessible(Constructor.java:182)
	at org.codehaus.groovy.reflection.CachedConstructor$1.run(CachedConstructor.java:44)
	at java.base/java.security.AccessController.doPrivileged(AccessController.java:312)
	at org.codehaus.groovy.reflection.CachedConstructor.<init>(CachedConstructor.java:42)
	at org.codehaus.groovy.reflection.CachedClass$2.initValue(CachedClass.java:79)
	at org.codehaus.groovy.reflection.CachedClass$2.initValue(CachedClass.java:69)
	at org.codehaus.groovy.util.LazyReference.getLocked(LazyReference.java:49)
	at org.codehaus.groovy.util.LazyReference.get(LazyReference.java:36)
	at org.codehaus.groovy.reflection.CachedClass.getConstructors(CachedClass.java:268)
	at groovy.lang.MetaClassImpl.<init>(MetaClassImpl.java:218)
	at groovy.lang.MetaClassImpl.<init>(MetaClassImpl.java:228)
	at groovy.lang.MetaClassRegistry$MetaClassCreationHandle.createNormalMetaClass(MetaClassRegistry.java:171)
	at groovy.lang.MetaClassRegistry$MetaClassCreationHandle.createWithCustomLookup(MetaClassRegistry.java:161)
	at groovy.lang.MetaClassRegistry$MetaClassCreationHandle.create(MetaClassRegistry.java:144)
	at org.codehaus.groovy.reflection.ClassInfo.getMetaClassUnderLock(ClassInfo.java:253)
	at org.codehaus.groovy.reflection.ClassInfo.getMetaClass(ClassInfo.java:285)
	at org.codehaus.groovy.reflection.ClassInfo.getMetaClass(ClassInfo.java:295)
	at org.codehaus.groovy.runtime.metaclass.MetaClassRegistryImpl.getMetaClass(MetaClassRegistryImpl.java:261)
	at org.codehaus.groovy.runtime.InvokerHelper.getMetaClass(InvokerHelper.java:873)
	at org.codehaus.groovy.runtime.InvokerHelper.invokePojoMethod(InvokerHelper.java:906)
	at org.codehaus.groovy.runtime.InvokerHelper.invokeMethod(InvokerHelper.java:898)
	at org.codehaus.groovy.runtime.typehandling.DefaultTypeTransformation.castToBoolean(DefaultTypeTransformation.java:185)
	at org.codehaus.groovy.runtime.typehandling.DefaultTypeTransformation.booleanUnbox(DefaultTypeTransformation.java:74)
	at org.codehaus.groovy.control.customizers.ASTTransformationCustomizer.findASTTranformationClass(ASTTransformationCustomizer.groovy:209)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:64)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:564)
	at org.codehaus.groovy.reflection.CachedMethod.invoke(CachedMethod.java:93)
	at org.codehaus.groovy.runtime.callsite.StaticMetaMethodSite$StaticMetaMethodSiteNoUnwrapNoCoerce.invoke(StaticMetaMethodSite.java:151)
	at org.codehaus.groovy.runtime.callsite.StaticMetaMethodSite.callStatic(StaticMetaMethodSite.java:102)
	at org.codehaus.groovy.runtime.callsite.AbstractCallSite.callStatic(AbstractCallSite.java:214)
	at org.codehaus.groovy.control.customizers.ASTTransformationCustomizer.findPhase(ASTTransformationCustomizer.groovy:226)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:64)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:564)
	at org.codehaus.groovy.reflection.CachedMethod.invoke(CachedMethod.java:93)
	at org.codehaus.groovy.runtime.callsite.StaticMetaMethodSite$StaticMetaMethodSiteNoUnwrapNoCoerce.invoke(StaticMetaMethodSite.java:151)
	at org.codehaus.groovy.runtime.callsite.StaticMetaMethodSite.callStatic(StaticMetaMethodSite.java:102)
	at org.codehaus.groovy.runtime.callsite.AbstractCallSite.callStatic(AbstractCallSite.java:214)
	at org.codehaus.groovy.control.customizers.ASTTransformationCustomizer.<init>(ASTTransformationCustomizer.groovy:180)
	at org.codehaus.groovy.control.customizers.ASTTransformationCustomizer.<init>(ASTTransformationCustomizer.groovy:188)
	at groovy.text.markup.MarkupTemplateEngine.<init>(MarkupTemplateEngine.java:94)
	at org.springframework.web.servlet.view.groovy.GroovyMarkupConfigurer.createTemplateEngine(GroovyMarkupConfigurer.java:160)
	at org.springframework.web.servlet.view.groovy.GroovyMarkupConfigurer.afterPropertiesSet(GroovyMarkupConfigurer.java:153)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1862)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1799)
	... 62 common frames omitted
2020-11-25 20:51:31,686 ERROR  [main] TestContextManager: Caught exception while allowing TestExecutionListener [org.springframework.test.context.web.ServletTestExecutionListener@46c093b4] to prepare test instance [com.sf.math.algebra.solvers.PolynomialSolverIntervalTest@1448e2b6]
java.lang.IllegalStateException: Failed to load ApplicationContext
	at org.springframework.test.context.cache.DefaultCacheAwareContextLoaderDelegate.loadContext(DefaultCacheAwareContextLoaderDelegate.java:132)
	at org.springframework.test.context.support.DefaultTestContext.getApplicationContext(DefaultTestContext.java:123)
	at org.springframework.test.context.web.ServletTestExecutionListener.setUpRequestContextIfNecessary(ServletTestExecutionListener.java:190)
	at org.springframework.test.context.web.ServletTestExecutionListener.prepareTestInstance(ServletTestExecutionListener.java:132)
	at org.springframework.test.context.TestContextManager.prepareTestInstance(TestContextManager.java:244)
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner.createTest(SpringJUnit4ClassRunner.java:227)
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner$1.runReflectiveCall(SpringJUnit4ClassRunner.java:289)
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner.methodBlock(SpringJUnit4ClassRunner.java:291)
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner.runChild(SpringJUnit4ClassRunner.java:246)
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner.runChild(SpringJUnit4ClassRunner.java:97)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:290)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:71)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:58)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268)
	at org.junit.internal.runners.statements.RunBefores.evaluate(RunBefores.java:26)
	at org.springframework.test.context.junit4.statements.RunBeforeTestClassCallbacks.evaluate(RunBeforeTestClassCallbacks.java:61)
	at org.junit.internal.runners.statements.RunAfters.evaluate(RunAfters.java:27)
	at org.springframework.test.context.junit4.statements.RunAfterTestClassCallbacks.evaluate(RunAfterTestClassCallbacks.java:70)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:363)
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner.run(SpringJUnit4ClassRunner.java:190)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:137)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:115)
	at org.junit.vintage.engine.execution.RunnerExecutor.execute(RunnerExecutor.java:40)
	at java.base/java.util.stream.ForEachOps$ForEachOp$OfRef.accept(ForEachOps.java:183)
	at java.base/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:195)
	at java.base/java.util.Iterator.forEachRemaining(Iterator.java:133)
	at java.base/java.util.Spliterators$IteratorSpliterator.forEachRemaining(Spliterators.java:1801)
	at java.base/java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:484)
	at java.base/java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:474)
	at java.base/java.util.stream.ForEachOps$ForEachOp.evaluateSequential(ForEachOps.java:150)
	at java.base/java.util.stream.ForEachOps$ForEachOp$OfRef.evaluateSequential(ForEachOps.java:173)
	at java.base/java.util.stream.AbstractPipeline.evaluate(AbstractPipeline.java:234)
	at java.base/java.util.stream.ReferencePipeline.forEach(ReferencePipeline.java:497)
	at org.junit.vintage.engine.VintageTestEngine.executeAllChildren(VintageTestEngine.java:80)
	at org.junit.vintage.engine.VintageTestEngine.execute(VintageTestEngine.java:71)
	at org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:220)
	at org.junit.platform.launcher.core.DefaultLauncher.lambda$execute$6(DefaultLauncher.java:188)
	at org.junit.platform.launcher.core.DefaultLauncher.withInterceptedStreams(DefaultLauncher.java:202)
	at org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:181)
	at org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:128)
	at org.apache.maven.surefire.junitplatform.JUnitPlatformProvider.invokeAllTests(JUnitPlatformProvider.java:150)
	at org.apache.maven.surefire.junitplatform.JUnitPlatformProvider.invoke(JUnitPlatformProvider.java:124)
	at org.apache.maven.surefire.booter.ForkedBooter.invokeProviderInSameClassLoader(ForkedBooter.java:384)
	at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:345)
	at org.apache.maven.surefire.booter.ForkedBooter.execute(ForkedBooter.java:126)
	at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:418)
Caused by: org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'groovyMarkupConfigurer' defined in class path resource [org/springframework/boot/autoconfigure/groovy/template/GroovyTemplateAutoConfiguration$GroovyMarkupConfiguration.class]: Invocation of init method failed; nested exception is java.lang.reflect.InaccessibleObjectException: Unable to make jdk.internal.loader.ClassLoaders$AppClassLoader(jdk.internal.loader.ClassLoaders$PlatformClassLoader,jdk.internal.loader.URLClassPath) accessible: module java.base does not "opens jdk.internal.loader" to unnamed module @5fcacc0
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1803)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:595)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:517)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:323)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:222)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:321)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:202)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(DefaultListableBeanFactory.java:879)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:878)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:550)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:747)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:397)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:315)
	at org.springframework.boot.test.context.SpringBootContextLoader.loadContext(SpringBootContextLoader.java:125)
	at org.springframework.test.context.cache.DefaultCacheAwareContextLoaderDelegate.loadContextInternal(DefaultCacheAwareContextLoaderDelegate.java:99)
	at org.springframework.test.context.cache.DefaultCacheAwareContextLoaderDelegate.loadContext(DefaultCacheAwareContextLoaderDelegate.java:124)
	... 47 common frames omitted
Caused by: java.lang.reflect.InaccessibleObjectException: Unable to make jdk.internal.loader.ClassLoaders$AppClassLoader(jdk.internal.loader.ClassLoaders$PlatformClassLoader,jdk.internal.loader.URLClassPath) accessible: module java.base does not "opens jdk.internal.loader" to unnamed module @5fcacc0
	at java.base/java.lang.reflect.AccessibleObject.checkCanSetAccessible(AccessibleObject.java:361)
	at java.base/java.lang.reflect.AccessibleObject.checkCanSetAccessible(AccessibleObject.java:301)
	at java.base/java.lang.reflect.Constructor.checkCanSetAccessible(Constructor.java:189)
	at java.base/java.lang.reflect.Constructor.setAccessible(Constructor.java:182)
	at org.codehaus.groovy.reflection.CachedConstructor$1.run(CachedConstructor.java:44)
	at java.base/java.security.AccessController.doPrivileged(AccessController.java:312)
	at org.codehaus.groovy.reflection.CachedConstructor.<init>(CachedConstructor.java:42)
	at org.codehaus.groovy.reflection.CachedClass$2.initValue(CachedClass.java:79)
	at org.codehaus.groovy.reflection.CachedClass$2.initValue(CachedClass.java:69)
	at org.codehaus.groovy.util.LazyReference.getLocked(LazyReference.java:49)
	at org.codehaus.groovy.util.LazyReference.get(LazyReference.java:36)
	at org.codehaus.groovy.reflection.CachedClass.getConstructors(CachedClass.java:268)
	at groovy.lang.MetaClassImpl.<init>(MetaClassImpl.java:218)
	at groovy.lang.MetaClassImpl.<init>(MetaClassImpl.java:228)
	at groovy.lang.MetaClassRegistry$MetaClassCreationHandle.createNormalMetaClass(MetaClassRegistry.java:171)
	at groovy.lang.MetaClassRegistry$MetaClassCreationHandle.createWithCustomLookup(MetaClassRegistry.java:161)
	at groovy.lang.MetaClassRegistry$MetaClassCreationHandle.create(MetaClassRegistry.java:144)
	at org.codehaus.groovy.reflection.ClassInfo.getMetaClassUnderLock(ClassInfo.java:253)
	at org.codehaus.groovy.reflection.ClassInfo.getMetaClass(ClassInfo.java:285)
	at org.codehaus.groovy.reflection.ClassInfo.getMetaClass(ClassInfo.java:295)
	at org.codehaus.groovy.runtime.metaclass.MetaClassRegistryImpl.getMetaClass(MetaClassRegistryImpl.java:261)
	at org.codehaus.groovy.runtime.InvokerHelper.getMetaClass(InvokerHelper.java:873)
	at org.codehaus.groovy.runtime.InvokerHelper.invokePojoMethod(InvokerHelper.java:906)
	at org.codehaus.groovy.runtime.InvokerHelper.invokeMethod(InvokerHelper.java:898)
	at org.codehaus.groovy.runtime.typehandling.DefaultTypeTransformation.castToBoolean(DefaultTypeTransformation.java:185)
	at org.codehaus.groovy.runtime.typehandling.DefaultTypeTransformation.booleanUnbox(DefaultTypeTransformation.java:74)
	at org.codehaus.groovy.control.customizers.ASTTransformationCustomizer.findASTTranformationClass(ASTTransformationCustomizer.groovy:209)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:64)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:564)
	at org.codehaus.groovy.reflection.CachedMethod.invoke(CachedMethod.java:93)
	at org.codehaus.groovy.runtime.callsite.StaticMetaMethodSite$StaticMetaMethodSiteNoUnwrapNoCoerce.invoke(StaticMetaMethodSite.java:151)
	at org.codehaus.groovy.runtime.callsite.StaticMetaMethodSite.callStatic(StaticMetaMethodSite.java:102)
	at org.codehaus.groovy.runtime.callsite.AbstractCallSite.callStatic(AbstractCallSite.java:214)
	at org.codehaus.groovy.control.customizers.ASTTransformationCustomizer.findPhase(ASTTransformationCustomizer.groovy:226)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:64)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:564)
	at org.codehaus.groovy.reflection.CachedMethod.invoke(CachedMethod.java:93)
	at org.codehaus.groovy.runtime.callsite.StaticMetaMethodSite$StaticMetaMethodSiteNoUnwrapNoCoerce.invoke(StaticMetaMethodSite.java:151)
	at org.codehaus.groovy.runtime.callsite.StaticMetaMethodSite.callStatic(StaticMetaMethodSite.java:102)
	at org.codehaus.groovy.runtime.callsite.AbstractCallSite.callStatic(AbstractCallSite.java:214)
	at org.codehaus.groovy.control.customizers.ASTTransformationCustomizer.<init>(ASTTransformationCustomizer.groovy:180)
	at org.codehaus.groovy.control.customizers.ASTTransformationCustomizer.<init>(ASTTransformationCustomizer.groovy:188)
	at groovy.text.markup.MarkupTemplateEngine.<init>(MarkupTemplateEngine.java:94)
	at org.springframework.web.servlet.view.groovy.GroovyMarkupConfigurer.createTemplateEngine(GroovyMarkupConfigurer.java:160)
	at org.springframework.web.servlet.view.groovy.GroovyMarkupConfigurer.afterPropertiesSet(GroovyMarkupConfigurer.java:153)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1862)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1799)
	... 62 common frames omitted
2020-11-25 20:51:32,271 DEBUG  [main] BasicTypeRegistry: Adding type registration boolean -> org.hibernate.type.BooleanType@59127611
2020-11-25 20:51:32,274 DEBUG  [main] BasicTypeRegistry: Adding type registration boolean -> org.hibernate.type.BooleanType@59127611
2020-11-25 20:51:32,274 DEBUG  [main] BasicTypeRegistry: Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@59127611
2020-11-25 20:51:32,274 DEBUG  [main] BasicTypeRegistry: Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@18db3b3c
2020-11-25 20:51:32,275 DEBUG  [main] BasicTypeRegistry: Adding type registration true_false -> org.hibernate.type.TrueFalseType@5c1c9881
2020-11-25 20:51:32,275 DEBUG  [main] BasicTypeRegistry: Adding type registration yes_no -> org.hibernate.type.YesNoType@5d37aa0f
2020-11-25 20:51:32,275 DEBUG  [main] BasicTypeRegistry: Adding type registration byte -> org.hibernate.type.ByteType@3e4afd10
2020-11-25 20:51:32,275 DEBUG  [main] BasicTypeRegistry: Adding type registration byte -> org.hibernate.type.ByteType@3e4afd10
2020-11-25 20:51:32,275 DEBUG  [main] BasicTypeRegistry: Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@3e4afd10
2020-11-25 20:51:32,275 DEBUG  [main] BasicTypeRegistry: Adding type registration character -> org.hibernate.type.CharacterType@48d44b46
2020-11-25 20:51:32,276 DEBUG  [main] BasicTypeRegistry: Adding type registration char -> org.hibernate.type.CharacterType@48d44b46
2020-11-25 20:51:32,276 DEBUG  [main] BasicTypeRegistry: Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@48d44b46
2020-11-25 20:51:32,276 DEBUG  [main] BasicTypeRegistry: Adding type registration short -> org.hibernate.type.ShortType@dd20ebc
2020-11-25 20:51:32,276 DEBUG  [main] BasicTypeRegistry: Adding type registration short -> org.hibernate.type.ShortType@dd20ebc
2020-11-25 20:51:32,276 DEBUG  [main] BasicTypeRegistry: Adding type registration java.lang.Short -> org.hibernate.type.ShortType@dd20ebc
2020-11-25 20:51:32,276 DEBUG  [main] BasicTypeRegistry: Adding type registration integer -> org.hibernate.type.IntegerType@5f7cd50e
2020-11-25 20:51:32,277 DEBUG  [main] BasicTypeRegistry: Adding type registration int -> org.hibernate.type.IntegerType@5f7cd50e
2020-11-25 20:51:32,277 DEBUG  [main] BasicTypeRegistry: Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@5f7cd50e
2020-11-25 20:51:32,277 DEBUG  [main] BasicTypeRegistry: Adding type registration long -> org.hibernate.type.LongType@359e27d2
2020-11-25 20:51:32,277 DEBUG  [main] BasicTypeRegistry: Adding type registration long -> org.hibernate.type.LongType@359e27d2
2020-11-25 20:51:32,277 DEBUG  [main] BasicTypeRegistry: Adding type registration java.lang.Long -> org.hibernate.type.LongType@359e27d2
2020-11-25 20:51:32,277 DEBUG  [main] BasicTypeRegistry: Adding type registration float -> org.hibernate.type.FloatType@29b8df5
2020-11-25 20:51:32,277 DEBUG  [main] BasicTypeRegistry: Adding type registration float -> org.hibernate.type.FloatType@29b8df5
2020-11-25 20:51:32,278 DEBUG  [main] BasicTypeRegistry: Adding type registration java.lang.Float -> org.hibernate.type.FloatType@29b8df5
2020-11-25 20:51:32,278 DEBUG  [main] BasicTypeRegistry: Adding type registration double -> org.hibernate.type.DoubleType@36cfe107
2020-11-25 20:51:32,278 DEBUG  [main] BasicTypeRegistry: Adding type registration double -> org.hibernate.type.DoubleType@36cfe107
2020-11-25 20:51:32,280 DEBUG  [main] BasicTypeRegistry: Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@36cfe107
2020-11-25 20:51:32,281 DEBUG  [main] BasicTypeRegistry: Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@139089a4
2020-11-25 20:51:32,281 DEBUG  [main] BasicTypeRegistry: Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@139089a4
2020-11-25 20:51:32,282 DEBUG  [main] BasicTypeRegistry: Adding type registration big_integer -> org.hibernate.type.BigIntegerType@9f1ca74
2020-11-25 20:51:32,282 DEBUG  [main] BasicTypeRegistry: Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@9f1ca74
2020-11-25 20:51:32,282 DEBUG  [main] BasicTypeRegistry: Adding type registration string -> org.hibernate.type.StringType@393ae7a0
2020-11-25 20:51:32,283 DEBUG  [main] BasicTypeRegistry: Adding type registration java.lang.String -> org.hibernate.type.StringType@393ae7a0
2020-11-25 20:51:32,283 DEBUG  [main] BasicTypeRegistry: Adding type registration nstring -> org.hibernate.type.StringNVarcharType@7ee12d58
2020-11-25 20:51:32,284 DEBUG  [main] BasicTypeRegistry: Adding type registration ncharacter -> org.hibernate.type.CharacterNCharType@34e990cc
2020-11-25 20:51:32,284 DEBUG  [main] BasicTypeRegistry: Adding type registration url -> org.hibernate.type.UrlType@6de84336
2020-11-25 20:51:32,284 DEBUG  [main] BasicTypeRegistry: Adding type registration java.net.URL -> org.hibernate.type.UrlType@6de84336
2020-11-25 20:51:32,285 DEBUG  [main] BasicTypeRegistry: Adding type registration Duration -> org.hibernate.type.DurationType@69b37f5c
2020-11-25 20:51:32,285 DEBUG  [main] BasicTypeRegistry: Adding type registration java.time.Duration -> org.hibernate.type.DurationType@69b37f5c
2020-11-25 20:51:32,285 DEBUG  [main] BasicTypeRegistry: Adding type registration Instant -> org.hibernate.type.InstantType@580ffea
2020-11-25 20:51:32,285 DEBUG  [main] BasicTypeRegistry: Adding type registration java.time.Instant -> org.hibernate.type.InstantType@580ffea
2020-11-25 20:51:32,285 DEBUG  [main] BasicTypeRegistry: Adding type registration LocalDateTime -> org.hibernate.type.LocalDateTimeType@79d49790
2020-11-25 20:51:32,285 DEBUG  [main] BasicTypeRegistry: Adding type registration java.time.LocalDateTime -> org.hibernate.type.LocalDateTimeType@79d49790
2020-11-25 20:51:32,286 DEBUG  [main] BasicTypeRegistry: Adding type registration LocalDate -> org.hibernate.type.LocalDateType@3e9fb485
2020-11-25 20:51:32,286 DEBUG  [main] BasicTypeRegistry: Adding type registration java.time.LocalDate -> org.hibernate.type.LocalDateType@3e9fb485
2020-11-25 20:51:32,286 DEBUG  [main] BasicTypeRegistry: Adding type registration LocalTime -> org.hibernate.type.LocalTimeType@419f0ea
2020-11-25 20:51:32,286 DEBUG  [main] BasicTypeRegistry: Adding type registration java.time.LocalTime -> org.hibernate.type.LocalTimeType@419f0ea
2020-11-25 20:51:32,286 DEBUG  [main] BasicTypeRegistry: Adding type registration OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@87aec6a
2020-11-25 20:51:32,286 DEBUG  [main] BasicTypeRegistry: Adding type registration java.time.OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@87aec6a
2020-11-25 20:51:32,286 DEBUG  [main] BasicTypeRegistry: Adding type registration OffsetTime -> org.hibernate.type.OffsetTimeType@5529522f
2020-11-25 20:51:32,287 DEBUG  [main] BasicTypeRegistry: Adding type registration java.time.OffsetTime -> org.hibernate.type.OffsetTimeType@5529522f
2020-11-25 20:51:32,287 DEBUG  [main] BasicTypeRegistry: Adding type registration ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@152e7703
2020-11-25 20:51:32,287 DEBUG  [main] BasicTypeRegistry: Adding type registration java.time.ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@152e7703
2020-11-25 20:51:32,287 DEBUG  [main] BasicTypeRegistry: Adding type registration date -> org.hibernate.type.DateType@24fc2c80
2020-11-25 20:51:32,288 DEBUG  [main] BasicTypeRegistry: Adding type registration java.sql.Date -> org.hibernate.type.DateType@24fc2c80
2020-11-25 20:51:32,288 DEBUG  [main] BasicTypeRegistry: Adding type registration time -> org.hibernate.type.TimeType@48b3b1b8
2020-11-25 20:51:32,288 DEBUG  [main] BasicTypeRegistry: Adding type registration java.sql.Time -> org.hibernate.type.TimeType@48b3b1b8
2020-11-25 20:51:32,288 DEBUG  [main] BasicTypeRegistry: Adding type registration timestamp -> org.hibernate.type.TimestampType@686b1e2d
2020-11-25 20:51:32,288 DEBUG  [main] BasicTypeRegistry: Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@686b1e2d
2020-11-25 20:51:32,288 DEBUG  [main] BasicTypeRegistry: Adding type registration java.util.Date -> org.hibernate.type.TimestampType@686b1e2d
2020-11-25 20:51:32,288 DEBUG  [main] BasicTypeRegistry: Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@652b3733
2020-11-25 20:51:32,289 DEBUG  [main] BasicTypeRegistry: Adding type registration calendar -> org.hibernate.type.CalendarType@5be7b749
2020-11-25 20:51:32,289 DEBUG  [main] BasicTypeRegistry: Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@5be7b749
2020-11-25 20:51:32,289 DEBUG  [main] BasicTypeRegistry: Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@5be7b749
2020-11-25 20:51:32,289 DEBUG  [main] BasicTypeRegistry: Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@177ddd24
2020-11-25 20:51:32,289 DEBUG  [main] BasicTypeRegistry: Adding type registration locale -> org.hibernate.type.LocaleType@61ad30f6
2020-11-25 20:51:32,289 DEBUG  [main] BasicTypeRegistry: Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@61ad30f6
2020-11-25 20:51:32,289 DEBUG  [main] BasicTypeRegistry: Adding type registration currency -> org.hibernate.type.CurrencyType@574ebdaf
2020-11-25 20:51:32,290 DEBUG  [main] BasicTypeRegistry: Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@574ebdaf
2020-11-25 20:51:32,290 DEBUG  [main] BasicTypeRegistry: Adding type registration timezone -> org.hibernate.type.TimeZoneType@123ca460
2020-11-25 20:51:32,290 DEBUG  [main] BasicTypeRegistry: Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@123ca460
2020-11-25 20:51:32,290 DEBUG  [main] BasicTypeRegistry: Adding type registration class -> org.hibernate.type.ClassType@3c9f4376
2020-11-25 20:51:32,290 DEBUG  [main] BasicTypeRegistry: Adding type registration java.lang.Class -> org.hibernate.type.ClassType@3c9f4376
2020-11-25 20:51:32,290 DEBUG  [main] BasicTypeRegistry: Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@1958c0d9
2020-11-25 20:51:32,291 DEBUG  [main] BasicTypeRegistry: Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@1958c0d9
2020-11-25 20:51:32,291 DEBUG  [main] BasicTypeRegistry: Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@5fc7255c
2020-11-25 20:51:32,291 DEBUG  [main] BasicTypeRegistry: Adding type registration binary -> org.hibernate.type.BinaryType@79ba0285
2020-11-25 20:51:32,291 DEBUG  [main] BasicTypeRegistry: Adding type registration byte[] -> org.hibernate.type.BinaryType@79ba0285
2020-11-25 20:51:32,291 DEBUG  [main] BasicTypeRegistry: Adding type registration [B -> org.hibernate.type.BinaryType@79ba0285
2020-11-25 20:51:32,291 DEBUG  [main] BasicTypeRegistry: Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@598778cc
2020-11-25 20:51:32,291 DEBUG  [main] BasicTypeRegistry: Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@598778cc
2020-11-25 20:51:32,292 DEBUG  [main] BasicTypeRegistry: Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@598778cc
2020-11-25 20:51:32,292 DEBUG  [main] BasicTypeRegistry: Adding type registration row_version -> org.hibernate.type.RowVersionType@11cadb32
2020-11-25 20:51:32,292 DEBUG  [main] BasicTypeRegistry: Adding type registration image -> org.hibernate.type.ImageType@37986daf
2020-11-25 20:51:32,292 DEBUG  [main] BasicTypeRegistry: Adding type registration characters -> org.hibernate.type.CharArrayType@710afd47
2020-11-25 20:51:32,292 DEBUG  [main] BasicTypeRegistry: Adding type registration char[] -> org.hibernate.type.CharArrayType@710afd47
2020-11-25 20:51:32,292 DEBUG  [main] BasicTypeRegistry: Adding type registration [C -> org.hibernate.type.CharArrayType@710afd47
2020-11-25 20:51:32,292 DEBUG  [main] BasicTypeRegistry: Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@12670e55
2020-11-25 20:51:32,293 DEBUG  [main] BasicTypeRegistry: Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@12670e55
2020-11-25 20:51:32,293 DEBUG  [main] BasicTypeRegistry: Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@12670e55
2020-11-25 20:51:32,293 DEBUG  [main] BasicTypeRegistry: Adding type registration text -> org.hibernate.type.TextType@32ba5c65
2020-11-25 20:51:32,293 DEBUG  [main] BasicTypeRegistry: Adding type registration ntext -> org.hibernate.type.NTextType@10166230
2020-11-25 20:51:32,293 DEBUG  [main] BasicTypeRegistry: Adding type registration blob -> org.hibernate.type.BlobType@13dd7887
2020-11-25 20:51:32,293 DEBUG  [main] BasicTypeRegistry: Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@13dd7887
2020-11-25 20:51:32,293 DEBUG  [main] BasicTypeRegistry: Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@3cbfdf5c
2020-11-25 20:51:32,294 DEBUG  [main] BasicTypeRegistry: Adding type registration clob -> org.hibernate.type.ClobType@58636b50
2020-11-25 20:51:32,294 DEBUG  [main] BasicTypeRegistry: Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@58636b50
2020-11-25 20:51:32,294 DEBUG  [main] BasicTypeRegistry: Adding type registration nclob -> org.hibernate.type.NClobType@1e5aacd9
2020-11-25 20:51:32,294 DEBUG  [main] BasicTypeRegistry: Adding type registration java.sql.NClob -> org.hibernate.type.NClobType@1e5aacd9
2020-11-25 20:51:32,294 DEBUG  [main] BasicTypeRegistry: Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@120411ec
2020-11-25 20:51:32,294 DEBUG  [main] BasicTypeRegistry: Adding type registration materialized_nclob -> org.hibernate.type.MaterializedNClobType@1a34a51e
2020-11-25 20:51:32,294 DEBUG  [main] BasicTypeRegistry: Adding type registration serializable -> org.hibernate.type.SerializableType@6b091a92
2020-11-25 20:51:32,295 DEBUG  [main] BasicTypeRegistry: Adding type registration object -> org.hibernate.type.ObjectType@35329a05
2020-11-25 20:51:32,295 DEBUG  [main] BasicTypeRegistry: Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@35329a05
2020-11-25 20:51:32,295 DEBUG  [main] BasicTypeRegistry: Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@6bd0047f
2020-11-25 20:51:32,295 DEBUG  [main] BasicTypeRegistry: Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@41116c0e
2020-11-25 20:51:32,295 DEBUG  [main] BasicTypeRegistry: Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@5fefb35c
2020-11-25 20:51:32,295 DEBUG  [main] BasicTypeRegistry: Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@4f92ded0
2020-11-25 20:51:32,295 DEBUG  [main] BasicTypeRegistry: Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@248ad8a1
2020-11-25 20:51:32,296 DEBUG  [main] BasicTypeRegistry: Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@6eb1a122
2020-11-25 20:51:32,297 DEBUG  [main] BasicTypeRegistry: Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@4c669afb
2020-11-25 20:51:32,297 DEBUG  [main] BasicTypeRegistry: Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@15dba9f9
2020-11-25 20:51:32,307 DEBUG  [main] TypeConfiguration$Scope: Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@57dcdc14] to MetadataBuildingContext [org.hibernate.boot.internal.MetadataBuildingContextRootImpl@25607b86]
2020-11-25 20:51:32,317 DEBUG  [main] EnumType: Using NAMED-based conversion for Enum com.sf.back.entities.Kind
2020-11-25 20:51:32,319 DEBUG  [main] EnumType: Using NAMED-based conversion for Enum com.sf.back.entities.Kind
2020-11-25 20:51:32,333 DEBUG  [main] TypeConfiguration$Scope: Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@57dcdc14] to SessionFactoryImpl [org.hibernate.internal.SessionFactoryImpl@634fa039]
2020-11-25 20:51:32,334 DEBUG  [main] EnumType: Using NAMED-based conversion for Enum com.sf.back.entities.Kind
2020-11-25 20:51:32,335 DEBUG  [main] EnumType: Using NAMED-based conversion for Enum com.sf.back.entities.Kind
2020-11-25 20:51:32,354 DEBUG  [main] EnumType: Using NAMED-based conversion for Enum com.sf.back.entities.Kind
2020-11-25 20:51:32,354 DEBUG  [main] EnumType: Using NAMED-based conversion for Enum com.sf.back.entities.Kind
2020-11-25 20:51:32,372 DEBUG  [main] EnumType: Using NAMED-based conversion for Enum com.sf.back.entities.Kind
2020-11-25 20:51:32,372 DEBUG  [main] EnumType: Using NAMED-based conversion for Enum com.sf.back.entities.Kind
2020-11-25 20:51:32,376 DEBUG  [main] EnumType: Using NAMED-based conversion for Enum com.sf.back.entities.Kind
2020-11-25 20:51:32,383 TRACE  [main] TypeConfiguration$Scope: Handling #sessionFactoryCreated from [org.hibernate.internal.SessionFactoryImpl@634fa039] for TypeConfiguration
2020-11-25 20:51:32,482 WARN   [main] JpaBaseConfiguration$JpaWebConfiguration: spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2020-11-25 20:51:32,558 WARN   [main] GenericWebApplicationContext: Exception encountered during context initialization - cancelling refresh attempt: org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'groovyMarkupConfigurer' defined in class path resource [org/springframework/boot/autoconfigure/groovy/template/GroovyTemplateAutoConfiguration$GroovyMarkupConfiguration.class]: Invocation of init method failed; nested exception is java.lang.reflect.InaccessibleObjectException: Unable to make jdk.internal.loader.ClassLoaders$AppClassLoader(jdk.internal.loader.ClassLoaders$PlatformClassLoader,jdk.internal.loader.URLClassPath) accessible: module java.base does not "opens jdk.internal.loader" to unnamed module @5fcacc0
2020-11-25 20:51:32,560 TRACE  [main] TypeConfiguration$Scope: Handling #sessionFactoryClosed from [org.hibernate.internal.SessionFactoryImpl@634fa039] for TypeConfiguration
2020-11-25 20:51:32,561 DEBUG  [main] TypeConfiguration$Scope: Un-scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration$Scope@60fd51a1] from SessionFactory [org.hibernate.internal.SessionFactoryImpl@634fa039]
2020-11-25 20:51:32,567 ERROR  [main] SpringApplication: Application run failed
org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'groovyMarkupConfigurer' defined in class path resource [org/springframework/boot/autoconfigure/groovy/template/GroovyTemplateAutoConfiguration$GroovyMarkupConfiguration.class]: Invocation of init method failed; nested exception is java.lang.reflect.InaccessibleObjectException: Unable to make jdk.internal.loader.ClassLoaders$AppClassLoader(jdk.internal.loader.ClassLoaders$PlatformClassLoader,jdk.internal.loader.URLClassPath) accessible: module java.base does not "opens jdk.internal.loader" to unnamed module @5fcacc0
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1803)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:595)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:517)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:323)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:222)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:321)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:202)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(DefaultListableBeanFactory.java:879)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:878)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:550)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:747)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:397)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:315)
	at org.springframework.boot.test.context.SpringBootContextLoader.loadContext(SpringBootContextLoader.java:125)
	at org.springframework.test.context.cache.DefaultCacheAwareContextLoaderDelegate.loadContextInternal(DefaultCacheAwareContextLoaderDelegate.java:99)
	at org.springframework.test.context.cache.DefaultCacheAwareContextLoaderDelegate.loadContext(DefaultCacheAwareContextLoaderDelegate.java:124)
	at org.springframework.test.context.support.DefaultTestContext.getApplicationContext(DefaultTestContext.java:123)
	at org.springframework.test.context.web.ServletTestExecutionListener.setUpRequestContextIfNecessary(ServletTestExecutionListener.java:190)
	at org.springframework.test.context.web.ServletTestExecutionListener.prepareTestInstance(ServletTestExecutionListener.java:132)
	at org.springframework.test.context.TestContextManager.prepareTestInstance(TestContextManager.java:244)
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner.createTest(SpringJUnit4ClassRunner.java:227)
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner$1.runReflectiveCall(SpringJUnit4ClassRunner.java:289)
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner.methodBlock(SpringJUnit4ClassRunner.java:291)
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner.runChild(SpringJUnit4ClassRunner.java:246)
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner.runChild(SpringJUnit4ClassRunner.java:97)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:290)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:71)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:58)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268)
	at org.junit.internal.runners.statements.RunBefores.evaluate(RunBefores.java:26)
	at org.springframework.test.context.junit4.statements.RunBeforeTestClassCallbacks.evaluate(RunBeforeTestClassCallbacks.java:61)
	at org.junit.internal.runners.statements.RunAfters.evaluate(RunAfters.java:27)
	at org.springframework.test.context.junit4.statements.RunAfterTestClassCallbacks.evaluate(RunAfterTestClassCallbacks.java:70)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:363)
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner.run(SpringJUnit4ClassRunner.java:190)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:137)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:115)
	at org.junit.vintage.engine.execution.RunnerExecutor.execute(RunnerExecutor.java:40)
	at java.base/java.util.stream.ForEachOps$ForEachOp$OfRef.accept(ForEachOps.java:183)
	at java.base/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:195)
	at java.base/java.util.Iterator.forEachRemaining(Iterator.java:133)
	at java.base/java.util.Spliterators$IteratorSpliterator.forEachRemaining(Spliterators.java:1801)
	at java.base/java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:484)
	at java.base/java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:474)
	at java.base/java.util.stream.ForEachOps$ForEachOp.evaluateSequential(ForEachOps.java:150)
	at java.base/java.util.stream.ForEachOps$ForEachOp$OfRef.evaluateSequential(ForEachOps.java:173)
	at java.base/java.util.stream.AbstractPipeline.evaluate(AbstractPipeline.java:234)
	at java.base/java.util.stream.ReferencePipeline.forEach(ReferencePipeline.java:497)
	at org.junit.vintage.engine.VintageTestEngine.executeAllChildren(VintageTestEngine.java:80)
	at org.junit.vintage.engine.VintageTestEngine.execute(VintageTestEngine.java:71)
	at org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:220)
	at org.junit.platform.launcher.core.DefaultLauncher.lambda$execute$6(DefaultLauncher.java:188)
	at org.junit.platform.launcher.core.DefaultLauncher.withInterceptedStreams(DefaultLauncher.java:202)
	at org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:181)
	at org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:128)
	at org.apache.maven.surefire.junitplatform.JUnitPlatformProvider.invokeAllTests(JUnitPlatformProvider.java:150)
	at org.apache.maven.surefire.junitplatform.JUnitPlatformProvider.invoke(JUnitPlatformProvider.java:124)
	at org.apache.maven.surefire.booter.ForkedBooter.invokeProviderInSameClassLoader(ForkedBooter.java:384)
	at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:345)
	at org.apache.maven.surefire.booter.ForkedBooter.execute(ForkedBooter.java:126)
	at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:418)
Caused by: java.lang.reflect.InaccessibleObjectException: Unable to make jdk.internal.loader.ClassLoaders$AppClassLoader(jdk.internal.loader.ClassLoaders$PlatformClassLoader,jdk.internal.loader.URLClassPath) accessible: module java.base does not "opens jdk.internal.loader" to unnamed module @5fcacc0
	at java.base/java.lang.reflect.AccessibleObject.checkCanSetAccessible(AccessibleObject.java:361)
	at java.base/java.lang.reflect.AccessibleObject.checkCanSetAccessible(AccessibleObject.java:301)
	at java.base/java.lang.reflect.Constructor.checkCanSetAccessible(Constructor.java:189)
	at java.base/java.lang.reflect.Constructor.setAccessible(Constructor.java:182)
	at org.codehaus.groovy.reflection.CachedConstructor$1.run(CachedConstructor.java:44)
	at java.base/java.security.AccessController.doPrivileged(AccessController.java:312)
	at org.codehaus.groovy.reflection.CachedConstructor.<init>(CachedConstructor.java:42)
	at org.codehaus.groovy.reflection.CachedClass$2.initValue(CachedClass.java:79)
	at org.codehaus.groovy.reflection.CachedClass$2.initValue(CachedClass.java:69)
	at org.codehaus.groovy.util.LazyReference.getLocked(LazyReference.java:49)
	at org.codehaus.groovy.util.LazyReference.get(LazyReference.java:36)
	at org.codehaus.groovy.reflection.CachedClass.getConstructors(CachedClass.java:268)
	at groovy.lang.MetaClassImpl.<init>(MetaClassImpl.java:218)
	at groovy.lang.MetaClassImpl.<init>(MetaClassImpl.java:228)
	at groovy.lang.MetaClassRegistry$MetaClassCreationHandle.createNormalMetaClass(MetaClassRegistry.java:171)
	at groovy.lang.MetaClassRegistry$MetaClassCreationHandle.createWithCustomLookup(MetaClassRegistry.java:161)
	at groovy.lang.MetaClassRegistry$MetaClassCreationHandle.create(MetaClassRegistry.java:144)
	at org.codehaus.groovy.reflection.ClassInfo.getMetaClassUnderLock(ClassInfo.java:253)
	at org.codehaus.groovy.reflection.ClassInfo.getMetaClass(ClassInfo.java:285)
	at org.codehaus.groovy.reflection.ClassInfo.getMetaClass(ClassInfo.java:295)
	at org.codehaus.groovy.runtime.metaclass.MetaClassRegistryImpl.getMetaClass(MetaClassRegistryImpl.java:261)
	at org.codehaus.groovy.runtime.InvokerHelper.getMetaClass(InvokerHelper.java:873)
	at org.codehaus.groovy.runtime.InvokerHelper.invokePojoMethod(InvokerHelper.java:906)
	at org.codehaus.groovy.runtime.InvokerHelper.invokeMethod(InvokerHelper.java:898)
	at org.codehaus.groovy.runtime.typehandling.DefaultTypeTransformation.castToBoolean(DefaultTypeTransformation.java:185)
	at org.codehaus.groovy.runtime.typehandling.DefaultTypeTransformation.booleanUnbox(DefaultTypeTransformation.java:74)
	at org.codehaus.groovy.control.customizers.ASTTransformationCustomizer.findASTTranformationClass(ASTTransformationCustomizer.groovy:209)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:64)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:564)
	at org.codehaus.groovy.reflection.CachedMethod.invoke(CachedMethod.java:93)
	at org.codehaus.groovy.runtime.callsite.StaticMetaMethodSite$StaticMetaMethodSiteNoUnwrapNoCoerce.invoke(StaticMetaMethodSite.java:151)
	at org.codehaus.groovy.runtime.callsite.StaticMetaMethodSite.callStatic(StaticMetaMethodSite.java:102)
	at org.codehaus.groovy.runtime.callsite.AbstractCallSite.callStatic(AbstractCallSite.java:214)
	at org.codehaus.groovy.control.customizers.ASTTransformationCustomizer.findPhase(ASTTransformationCustomizer.groovy:226)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:64)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:564)
	at org.codehaus.groovy.reflection.CachedMethod.invoke(CachedMethod.java:93)
	at org.codehaus.groovy.runtime.callsite.StaticMetaMethodSite$StaticMetaMethodSiteNoUnwrapNoCoerce.invoke(StaticMetaMethodSite.java:151)
	at org.codehaus.groovy.runtime.callsite.StaticMetaMethodSite.callStatic(StaticMetaMethodSite.java:102)
	at org.codehaus.groovy.runtime.callsite.AbstractCallSite.callStatic(AbstractCallSite.java:214)
	at org.codehaus.groovy.control.customizers.ASTTransformationCustomizer.<init>(ASTTransformationCustomizer.groovy:180)
	at org.codehaus.groovy.control.customizers.ASTTransformationCustomizer.<init>(ASTTransformationCustomizer.groovy:188)
	at groovy.text.markup.MarkupTemplateEngine.<init>(MarkupTemplateEngine.java:94)
	at org.springframework.web.servlet.view.groovy.GroovyMarkupConfigurer.createTemplateEngine(GroovyMarkupConfigurer.java:160)
	at org.springframework.web.servlet.view.groovy.GroovyMarkupConfigurer.afterPropertiesSet(GroovyMarkupConfigurer.java:153)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1862)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1799)
	... 62 common frames omitted
2020-11-25 20:51:32,568 ERROR  [main] TestContextManager: Caught exception while allowing TestExecutionListener [org.springframework.test.context.web.ServletTestExecutionListener@46c093b4] to prepare test instance [com.sf.math.algebra.solvers.PolynomialSolverIntervalTest@614a720e]
java.lang.IllegalStateException: Failed to load ApplicationContext
	at org.springframework.test.context.cache.DefaultCacheAwareContextLoaderDelegate.loadContext(DefaultCacheAwareContextLoaderDelegate.java:132)
	at org.springframework.test.context.support.DefaultTestContext.getApplicationContext(DefaultTestContext.java:123)
	at org.springframework.test.context.web.ServletTestExecutionListener.setUpRequestContextIfNecessary(ServletTestExecutionListener.java:190)
	at org.springframework.test.context.web.ServletTestExecutionListener.prepareTestInstance(ServletTestExecutionListener.java:132)
	at org.springframework.test.context.TestContextManager.prepareTestInstance(TestContextManager.java:244)
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner.createTest(SpringJUnit4ClassRunner.java:227)
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner$1.runReflectiveCall(SpringJUnit4ClassRunner.java:289)
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner.methodBlock(SpringJUnit4ClassRunner.java:291)
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner.runChild(SpringJUnit4ClassRunner.java:246)
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner.runChild(SpringJUnit4ClassRunner.java:97)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:290)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:71)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:58)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268)
	at org.junit.internal.runners.statements.RunBefores.evaluate(RunBefores.java:26)
	at org.springframework.test.context.junit4.statements.RunBeforeTestClassCallbacks.evaluate(RunBeforeTestClassCallbacks.java:61)
	at org.junit.internal.runners.statements.RunAfters.evaluate(RunAfters.java:27)
	at org.springframework.test.context.junit4.statements.RunAfterTestClassCallbacks.evaluate(RunAfterTestClassCallbacks.java:70)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:363)
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner.run(SpringJUnit4ClassRunner.java:190)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:137)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:115)
	at org.junit.vintage.engine.execution.RunnerExecutor.execute(RunnerExecutor.java:40)
	at java.base/java.util.stream.ForEachOps$ForEachOp$OfRef.accept(ForEachOps.java:183)
	at java.base/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:195)
	at java.base/java.util.Iterator.forEachRemaining(Iterator.java:133)
	at java.base/java.util.Spliterators$IteratorSpliterator.forEachRemaining(Spliterators.java:1801)
	at java.base/java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:484)
	at java.base/java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:474)
	at java.base/java.util.stream.ForEachOps$ForEachOp.evaluateSequential(ForEachOps.java:150)
	at java.base/java.util.stream.ForEachOps$ForEachOp$OfRef.evaluateSequential(ForEachOps.java:173)
	at java.base/java.util.stream.AbstractPipeline.evaluate(AbstractPipeline.java:234)
	at java.base/java.util.stream.ReferencePipeline.forEach(ReferencePipeline.java:497)
	at org.junit.vintage.engine.VintageTestEngine.executeAllChildren(VintageTestEngine.java:80)
	at org.junit.vintage.engine.VintageTestEngine.execute(VintageTestEngine.java:71)
	at org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:220)
	at org.junit.platform.launcher.core.DefaultLauncher.lambda$execute$6(DefaultLauncher.java:188)
	at org.junit.platform.launcher.core.DefaultLauncher.withInterceptedStreams(DefaultLauncher.java:202)
	at org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:181)
	at org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:128)
	at org.apache.maven.surefire.junitplatform.JUnitPlatformProvider.invokeAllTests(JUnitPlatformProvider.java:150)
	at org.apache.maven.surefire.junitplatform.JUnitPlatformProvider.invoke(JUnitPlatformProvider.java:124)
	at org.apache.maven.surefire.booter.ForkedBooter.invokeProviderInSameClassLoader(ForkedBooter.java:384)
	at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:345)
	at org.apache.maven.surefire.booter.ForkedBooter.execute(ForkedBooter.java:126)
	at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:418)
Caused by: org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'groovyMarkupConfigurer' defined in class path resource [org/springframework/boot/autoconfigure/groovy/template/GroovyTemplateAutoConfiguration$GroovyMarkupConfiguration.class]: Invocation of init method failed; nested exception is java.lang.reflect.InaccessibleObjectException: Unable to make jdk.internal.loader.ClassLoaders$AppClassLoader(jdk.internal.loader.ClassLoaders$PlatformClassLoader,jdk.internal.loader.URLClassPath) accessible: module java.base does not "opens jdk.internal.loader" to unnamed module @5fcacc0
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1803)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:595)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:517)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:323)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:222)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:321)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:202)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(DefaultListableBeanFactory.java:879)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:878)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:550)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:747)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:397)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:315)
	at org.springframework.boot.test.context.SpringBootContextLoader.loadContext(SpringBootContextLoader.java:125)
	at org.springframework.test.context.cache.DefaultCacheAwareContextLoaderDelegate.loadContextInternal(DefaultCacheAwareContextLoaderDelegate.java:99)
	at org.springframework.test.context.cache.DefaultCacheAwareContextLoaderDelegate.loadContext(DefaultCacheAwareContextLoaderDelegate.java:124)
	... 47 common frames omitted
Caused by: java.lang.reflect.InaccessibleObjectException: Unable to make jdk.internal.loader.ClassLoaders$AppClassLoader(jdk.internal.loader.ClassLoaders$PlatformClassLoader,jdk.internal.loader.URLClassPath) accessible: module java.base does not "opens jdk.internal.loader" to unnamed module @5fcacc0
	at java.base/java.lang.reflect.AccessibleObject.checkCanSetAccessible(AccessibleObject.java:361)
	at java.base/java.lang.reflect.AccessibleObject.checkCanSetAccessible(AccessibleObject.java:301)
	at java.base/java.lang.reflect.Constructor.checkCanSetAccessible(Constructor.java:189)
	at java.base/java.lang.reflect.Constructor.setAccessible(Constructor.java:182)
	at org.codehaus.groovy.reflection.CachedConstructor$1.run(CachedConstructor.java:44)
	at java.base/java.security.AccessController.doPrivileged(AccessController.java:312)
	at org.codehaus.groovy.reflection.CachedConstructor.<init>(CachedConstructor.java:42)
	at org.codehaus.groovy.reflection.CachedClass$2.initValue(CachedClass.java:79)
	at org.codehaus.groovy.reflection.CachedClass$2.initValue(CachedClass.java:69)
	at org.codehaus.groovy.util.LazyReference.getLocked(LazyReference.java:49)
	at org.codehaus.groovy.util.LazyReference.get(LazyReference.java:36)
	at org.codehaus.groovy.reflection.CachedClass.getConstructors(CachedClass.java:268)
	at groovy.lang.MetaClassImpl.<init>(MetaClassImpl.java:218)
	at groovy.lang.MetaClassImpl.<init>(MetaClassImpl.java:228)
	at groovy.lang.MetaClassRegistry$MetaClassCreationHandle.createNormalMetaClass(MetaClassRegistry.java:171)
	at groovy.lang.MetaClassRegistry$MetaClassCreationHandle.createWithCustomLookup(MetaClassRegistry.java:161)
	at groovy.lang.MetaClassRegistry$MetaClassCreationHandle.create(MetaClassRegistry.java:144)
	at org.codehaus.groovy.reflection.ClassInfo.getMetaClassUnderLock(ClassInfo.java:253)
	at org.codehaus.groovy.reflection.ClassInfo.getMetaClass(ClassInfo.java:285)
	at org.codehaus.groovy.reflection.ClassInfo.getMetaClass(ClassInfo.java:295)
	at org.codehaus.groovy.runtime.metaclass.MetaClassRegistryImpl.getMetaClass(MetaClassRegistryImpl.java:261)
	at org.codehaus.groovy.runtime.InvokerHelper.getMetaClass(InvokerHelper.java:873)
	at org.codehaus.groovy.runtime.InvokerHelper.invokePojoMethod(InvokerHelper.java:906)
	at org.codehaus.groovy.runtime.InvokerHelper.invokeMethod(InvokerHelper.java:898)
	at org.codehaus.groovy.runtime.typehandling.DefaultTypeTransformation.castToBoolean(DefaultTypeTransformation.java:185)
	at org.codehaus.groovy.runtime.typehandling.DefaultTypeTransformation.booleanUnbox(DefaultTypeTransformation.java:74)
	at org.codehaus.groovy.control.customizers.ASTTransformationCustomizer.findASTTranformationClass(ASTTransformationCustomizer.groovy:209)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:64)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:564)
	at org.codehaus.groovy.reflection.CachedMethod.invoke(CachedMethod.java:93)
	at org.codehaus.groovy.runtime.callsite.StaticMetaMethodSite$StaticMetaMethodSiteNoUnwrapNoCoerce.invoke(StaticMetaMethodSite.java:151)
	at org.codehaus.groovy.runtime.callsite.StaticMetaMethodSite.callStatic(StaticMetaMethodSite.java:102)
	at org.codehaus.groovy.runtime.callsite.AbstractCallSite.callStatic(AbstractCallSite.java:214)
	at org.codehaus.groovy.control.customizers.ASTTransformationCustomizer.findPhase(ASTTransformationCustomizer.groovy:226)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:64)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:564)
	at org.codehaus.groovy.reflection.CachedMethod.invoke(CachedMethod.java:93)
	at org.codehaus.groovy.runtime.callsite.StaticMetaMethodSite$StaticMetaMethodSiteNoUnwrapNoCoerce.invoke(StaticMetaMethodSite.java:151)
	at org.codehaus.groovy.runtime.callsite.StaticMetaMethodSite.callStatic(StaticMetaMethodSite.java:102)
	at org.codehaus.groovy.runtime.callsite.AbstractCallSite.callStatic(AbstractCallSite.java:214)
	at org.codehaus.groovy.control.customizers.ASTTransformationCustomizer.<init>(ASTTransformationCustomizer.groovy:180)
	at org.codehaus.groovy.control.customizers.ASTTransformationCustomizer.<init>(ASTTransformationCustomizer.groovy:188)
	at groovy.text.markup.MarkupTemplateEngine.<init>(MarkupTemplateEngine.java:94)
	at org.springframework.web.servlet.view.groovy.GroovyMarkupConfigurer.createTemplateEngine(GroovyMarkupConfigurer.java:160)
	at org.springframework.web.servlet.view.groovy.GroovyMarkupConfigurer.afterPropertiesSet(GroovyMarkupConfigurer.java:153)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1862)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1799)
	... 62 common frames omitted
2020-11-25 20:51:33,118 DEBUG  [main] BasicTypeRegistry: Adding type registration boolean -> org.hibernate.type.BooleanType@59127611
2020-11-25 20:51:33,124 DEBUG  [main] BasicTypeRegistry: Adding type registration boolean -> org.hibernate.type.BooleanType@59127611
2020-11-25 20:51:33,124 DEBUG  [main] BasicTypeRegistry: Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@59127611
2020-11-25 20:51:33,125 DEBUG  [main] BasicTypeRegistry: Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@18db3b3c
2020-11-25 20:51:33,125 DEBUG  [main] BasicTypeRegistry: Adding type registration true_false -> org.hibernate.type.TrueFalseType@5c1c9881
2020-11-25 20:51:33,125 DEBUG  [main] BasicTypeRegistry: Adding type registration yes_no -> org.hibernate.type.YesNoType@5d37aa0f
2020-11-25 20:51:33,126 DEBUG  [main] BasicTypeRegistry: Adding type registration byte -> org.hibernate.type.ByteType@3e4afd10
2020-11-25 20:51:33,126 DEBUG  [main] BasicTypeRegistry: Adding type registration byte -> org.hibernate.type.ByteType@3e4afd10
2020-11-25 20:51:33,126 DEBUG  [main] BasicTypeRegistry: Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@3e4afd10
2020-11-25 20:51:33,126 DEBUG  [main] BasicTypeRegistry: Adding type registration character -> org.hibernate.type.CharacterType@48d44b46
2020-11-25 20:51:33,127 DEBUG  [main] BasicTypeRegistry: Adding type registration char -> org.hibernate.type.CharacterType@48d44b46
2020-11-25 20:51:33,127 DEBUG  [main] BasicTypeRegistry: Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@48d44b46
2020-11-25 20:51:33,128 DEBUG  [main] BasicTypeRegistry: Adding type registration short -> org.hibernate.type.ShortType@dd20ebc
2020-11-25 20:51:33,128 DEBUG  [main] BasicTypeRegistry: Adding type registration short -> org.hibernate.type.ShortType@dd20ebc
2020-11-25 20:51:33,128 DEBUG  [main] BasicTypeRegistry: Adding type registration java.lang.Short -> org.hibernate.type.ShortType@dd20ebc
2020-11-25 20:51:33,129 DEBUG  [main] BasicTypeRegistry: Adding type registration integer -> org.hibernate.type.IntegerType@5f7cd50e
2020-11-25 20:51:33,129 DEBUG  [main] BasicTypeRegistry: Adding type registration int -> org.hibernate.type.IntegerType@5f7cd50e
2020-11-25 20:51:33,129 DEBUG  [main] BasicTypeRegistry: Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@5f7cd50e
2020-11-25 20:51:33,129 DEBUG  [main] BasicTypeRegistry: Adding type registration long -> org.hibernate.type.LongType@359e27d2
2020-11-25 20:51:33,130 DEBUG  [main] BasicTypeRegistry: Adding type registration long -> org.hibernate.type.LongType@359e27d2
2020-11-25 20:51:33,131 DEBUG  [main] BasicTypeRegistry: Adding type registration java.lang.Long -> org.hibernate.type.LongType@359e27d2
2020-11-25 20:51:33,131 DEBUG  [main] BasicTypeRegistry: Adding type registration float -> org.hibernate.type.FloatType@29b8df5
2020-11-25 20:51:33,131 DEBUG  [main] BasicTypeRegistry: Adding type registration float -> org.hibernate.type.FloatType@29b8df5
2020-11-25 20:51:33,131 DEBUG  [main] BasicTypeRegistry: Adding type registration java.lang.Float -> org.hibernate.type.FloatType@29b8df5
2020-11-25 20:51:33,131 DEBUG  [main] BasicTypeRegistry: Adding type registration double -> org.hibernate.type.DoubleType@36cfe107
2020-11-25 20:51:33,132 DEBUG  [main] BasicTypeRegistry: Adding type registration double -> org.hibernate.type.DoubleType@36cfe107
2020-11-25 20:51:33,132 DEBUG  [main] BasicTypeRegistry: Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@36cfe107
2020-11-25 20:51:33,133 DEBUG  [main] BasicTypeRegistry: Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@139089a4
2020-11-25 20:51:33,133 DEBUG  [main] BasicTypeRegistry: Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@139089a4
2020-11-25 20:51:33,133 DEBUG  [main] BasicTypeRegistry: Adding type registration big_integer -> org.hibernate.type.BigIntegerType@9f1ca74
2020-11-25 20:51:33,134 DEBUG  [main] BasicTypeRegistry: Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@9f1ca74
2020-11-25 20:51:33,134 DEBUG  [main] BasicTypeRegistry: Adding type registration string -> org.hibernate.type.StringType@393ae7a0
2020-11-25 20:51:33,134 DEBUG  [main] BasicTypeRegistry: Adding type registration java.lang.String -> org.hibernate.type.StringType@393ae7a0
2020-11-25 20:51:33,135 DEBUG  [main] BasicTypeRegistry: Adding type registration nstring -> org.hibernate.type.StringNVarcharType@7ee12d58
2020-11-25 20:51:33,135 DEBUG  [main] BasicTypeRegistry: Adding type registration ncharacter -> org.hibernate.type.CharacterNCharType@34e990cc
2020-11-25 20:51:33,135 DEBUG  [main] BasicTypeRegistry: Adding type registration url -> org.hibernate.type.UrlType@6de84336
2020-11-25 20:51:33,136 DEBUG  [main] BasicTypeRegistry: Adding type registration java.net.URL -> org.hibernate.type.UrlType@6de84336
2020-11-25 20:51:33,136 DEBUG  [main] BasicTypeRegistry: Adding type registration Duration -> org.hibernate.type.DurationType@69b37f5c
2020-11-25 20:51:33,136 DEBUG  [main] BasicTypeRegistry: Adding type registration java.time.Duration -> org.hibernate.type.DurationType@69b37f5c
2020-11-25 20:51:33,136 DEBUG  [main] BasicTypeRegistry: Adding type registration Instant -> org.hibernate.type.InstantType@580ffea
2020-11-25 20:51:33,136 DEBUG  [main] BasicTypeRegistry: Adding type registration java.time.Instant -> org.hibernate.type.InstantType@580ffea
2020-11-25 20:51:33,136 DEBUG  [main] BasicTypeRegistry: Adding type registration LocalDateTime -> org.hibernate.type.LocalDateTimeType@79d49790
2020-11-25 20:51:33,137 DEBUG  [main] BasicTypeRegistry: Adding type registration java.time.LocalDateTime -> org.hibernate.type.LocalDateTimeType@79d49790
2020-11-25 20:51:33,137 DEBUG  [main] BasicTypeRegistry: Adding type registration LocalDate -> org.hibernate.type.LocalDateType@3e9fb485
2020-11-25 20:51:33,137 DEBUG  [main] BasicTypeRegistry: Adding type registration java.time.LocalDate -> org.hibernate.type.LocalDateType@3e9fb485
2020-11-25 20:51:33,137 DEBUG  [main] BasicTypeRegistry: Adding type registration LocalTime -> org.hibernate.type.LocalTimeType@419f0ea
2020-11-25 20:51:33,137 DEBUG  [main] BasicTypeRegistry: Adding type registration java.time.LocalTime -> org.hibernate.type.LocalTimeType@419f0ea
2020-11-25 20:51:33,137 DEBUG  [main] BasicTypeRegistry: Adding type registration OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@87aec6a
2020-11-25 20:51:33,137 DEBUG  [main] BasicTypeRegistry: Adding type registration java.time.OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@87aec6a
2020-11-25 20:51:33,138 DEBUG  [main] BasicTypeRegistry: Adding type registration OffsetTime -> org.hibernate.type.OffsetTimeType@5529522f
2020-11-25 20:51:33,138 DEBUG  [main] BasicTypeRegistry: Adding type registration java.time.OffsetTime -> org.hibernate.type.OffsetTimeType@5529522f
2020-11-25 20:51:33,138 DEBUG  [main] BasicTypeRegistry: Adding type registration ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@152e7703
2020-11-25 20:51:33,138 DEBUG  [main] BasicTypeRegistry: Adding type registration java.time.ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@152e7703
2020-11-25 20:51:33,138 DEBUG  [main] BasicTypeRegistry: Adding type registration date -> org.hibernate.type.DateType@24fc2c80
2020-11-25 20:51:33,138 DEBUG  [main] BasicTypeRegistry: Adding type registration java.sql.Date -> org.hibernate.type.DateType@24fc2c80
2020-11-25 20:51:33,138 DEBUG  [main] BasicTypeRegistry: Adding type registration time -> org.hibernate.type.TimeType@48b3b1b8
2020-11-25 20:51:33,139 DEBUG  [main] BasicTypeRegistry: Adding type registration java.sql.Time -> org.hibernate.type.TimeType@48b3b1b8
2020-11-25 20:51:33,139 DEBUG  [main] BasicTypeRegistry: Adding type registration timestamp -> org.hibernate.type.TimestampType@686b1e2d
2020-11-25 20:51:33,139 DEBUG  [main] BasicTypeRegistry: Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@686b1e2d
2020-11-25 20:51:33,139 DEBUG  [main] BasicTypeRegistry: Adding type registration java.util.Date -> org.hibernate.type.TimestampType@686b1e2d
2020-11-25 20:51:33,139 DEBUG  [main] BasicTypeRegistry: Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@652b3733
2020-11-25 20:51:33,139 DEBUG  [main] BasicTypeRegistry: Adding type registration calendar -> org.hibernate.type.CalendarType@5be7b749
2020-11-25 20:51:33,139 DEBUG  [main] BasicTypeRegistry: Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@5be7b749
2020-11-25 20:51:33,140 DEBUG  [main] BasicTypeRegistry: Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@5be7b749
2020-11-25 20:51:33,140 DEBUG  [main] BasicTypeRegistry: Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@177ddd24
2020-11-25 20:51:33,140 DEBUG  [main] BasicTypeRegistry: Adding type registration locale -> org.hibernate.type.LocaleType@61ad30f6
2020-11-25 20:51:33,140 DEBUG  [main] BasicTypeRegistry: Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@61ad30f6
2020-11-25 20:51:33,140 DEBUG  [main] BasicTypeRegistry: Adding type registration currency -> org.hibernate.type.CurrencyType@574ebdaf
2020-11-25 20:51:33,140 DEBUG  [main] BasicTypeRegistry: Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@574ebdaf
2020-11-25 20:51:33,141 DEBUG  [main] BasicTypeRegistry: Adding type registration timezone -> org.hibernate.type.TimeZoneType@123ca460
2020-11-25 20:51:33,141 DEBUG  [main] BasicTypeRegistry: Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@123ca460
2020-11-25 20:51:33,141 DEBUG  [main] BasicTypeRegistry: Adding type registration class -> org.hibernate.type.ClassType@3c9f4376
2020-11-25 20:51:33,141 DEBUG  [main] BasicTypeRegistry: Adding type registration java.lang.Class -> org.hibernate.type.ClassType@3c9f4376
2020-11-25 20:51:33,141 DEBUG  [main] BasicTypeRegistry: Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@1958c0d9
2020-11-25 20:51:33,141 DEBUG  [main] BasicTypeRegistry: Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@1958c0d9
2020-11-25 20:51:33,141 DEBUG  [main] BasicTypeRegistry: Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@5fc7255c
2020-11-25 20:51:33,142 DEBUG  [main] BasicTypeRegistry: Adding type registration binary -> org.hibernate.type.BinaryType@79ba0285
2020-11-25 20:51:33,142 DEBUG  [main] BasicTypeRegistry: Adding type registration byte[] -> org.hibernate.type.BinaryType@79ba0285
2020-11-25 20:51:33,142 DEBUG  [main] BasicTypeRegistry: Adding type registration [B -> org.hibernate.type.BinaryType@79ba0285
2020-11-25 20:51:33,142 DEBUG  [main] BasicTypeRegistry: Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@598778cc
2020-11-25 20:51:33,142 DEBUG  [main] BasicTypeRegistry: Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@598778cc
2020-11-25 20:51:33,142 DEBUG  [main] BasicTypeRegistry: Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@598778cc
2020-11-25 20:51:33,143 DEBUG  [main] BasicTypeRegistry: Adding type registration row_version -> org.hibernate.type.RowVersionType@11cadb32
2020-11-25 20:51:33,143 DEBUG  [main] BasicTypeRegistry: Adding type registration image -> org.hibernate.type.ImageType@37986daf
2020-11-25 20:51:33,143 DEBUG  [main] BasicTypeRegistry: Adding type registration characters -> org.hibernate.type.CharArrayType@710afd47
2020-11-25 20:51:33,143 DEBUG  [main] BasicTypeRegistry: Adding type registration char[] -> org.hibernate.type.CharArrayType@710afd47
2020-11-25 20:51:33,143 DEBUG  [main] BasicTypeRegistry: Adding type registration [C -> org.hibernate.type.CharArrayType@710afd47
2020-11-25 20:51:33,143 DEBUG  [main] BasicTypeRegistry: Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@12670e55
2020-11-25 20:51:33,144 DEBUG  [main] BasicTypeRegistry: Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@12670e55
2020-11-25 20:51:33,144 DEBUG  [main] BasicTypeRegistry: Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@12670e55
2020-11-25 20:51:33,144 DEBUG  [main] BasicTypeRegistry: Adding type registration text -> org.hibernate.type.TextType@32ba5c65
2020-11-25 20:51:33,144 DEBUG  [main] BasicTypeRegistry: Adding type registration ntext -> org.hibernate.type.NTextType@10166230
2020-11-25 20:51:33,144 DEBUG  [main] BasicTypeRegistry: Adding type registration blob -> org.hibernate.type.BlobType@13dd7887
2020-11-25 20:51:33,145 DEBUG  [main] BasicTypeRegistry: Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@13dd7887
2020-11-25 20:51:33,145 DEBUG  [main] BasicTypeRegistry: Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@3cbfdf5c
2020-11-25 20:51:33,145 DEBUG  [main] BasicTypeRegistry: Adding type registration clob -> org.hibernate.type.ClobType@58636b50
2020-11-25 20:51:33,145 DEBUG  [main] BasicTypeRegistry: Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@58636b50
2020-11-25 20:51:33,145 DEBUG  [main] BasicTypeRegistry: Adding type registration nclob -> org.hibernate.type.NClobType@1e5aacd9
2020-11-25 20:51:33,145 DEBUG  [main] BasicTypeRegistry: Adding type registration java.sql.NClob -> org.hibernate.type.NClobType@1e5aacd9
2020-11-25 20:51:33,145 DEBUG  [main] BasicTypeRegistry: Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@120411ec
2020-11-25 20:51:33,146 DEBUG  [main] BasicTypeRegistry: Adding type registration materialized_nclob -> org.hibernate.type.MaterializedNClobType@1a34a51e
2020-11-25 20:51:33,146 DEBUG  [main] BasicTypeRegistry: Adding type registration serializable -> org.hibernate.type.SerializableType@6b091a92
2020-11-25 20:51:33,146 DEBUG  [main] BasicTypeRegistry: Adding type registration object -> org.hibernate.type.ObjectType@35329a05
2020-11-25 20:51:33,146 DEBUG  [main] BasicTypeRegistry: Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@35329a05
2020-11-25 20:51:33,146 DEBUG  [main] BasicTypeRegistry: Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@6571c72e
2020-11-25 20:51:33,146 DEBUG  [main] BasicTypeRegistry: Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@1145d71f
2020-11-25 20:51:33,147 DEBUG  [main] BasicTypeRegistry: Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@1b36c5aa
2020-11-25 20:51:33,147 DEBUG  [main] BasicTypeRegistry: Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@1af3bf5b
2020-11-25 20:51:33,147 DEBUG  [main] BasicTypeRegistry: Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@7150439c
2020-11-25 20:51:33,147 DEBUG  [main] BasicTypeRegistry: Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@4e928f86
2020-11-25 20:51:33,147 DEBUG  [main] BasicTypeRegistry: Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@6324186b
2020-11-25 20:51:33,148 DEBUG  [main] BasicTypeRegistry: Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@64aa7a33
2020-11-25 20:51:33,164 DEBUG  [main] TypeConfiguration$Scope: Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@3269e790] to MetadataBuildingContext [org.hibernate.boot.internal.MetadataBuildingContextRootImpl@42eeb996]
2020-11-25 20:51:33,175 DEBUG  [main] EnumType: Using NAMED-based conversion for Enum com.sf.back.entities.Kind
2020-11-25 20:51:33,180 DEBUG  [main] EnumType: Using NAMED-based conversion for Enum com.sf.back.entities.Kind
2020-11-25 20:51:33,197 DEBUG  [main] TypeConfiguration$Scope: Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@3269e790] to SessionFactoryImpl [org.hibernate.internal.SessionFactoryImpl@acc6a69]
2020-11-25 20:51:33,198 DEBUG  [main] EnumType: Using NAMED-based conversion for Enum com.sf.back.entities.Kind
2020-11-25 20:51:33,198 DEBUG  [main] EnumType: Using NAMED-based conversion for Enum com.sf.back.entities.Kind
2020-11-25 20:51:33,218 DEBUG  [main] EnumType: Using NAMED-based conversion for Enum com.sf.back.entities.Kind
2020-11-25 20:51:33,218 DEBUG  [main] EnumType: Using NAMED-based conversion for Enum com.sf.back.entities.Kind
2020-11-25 20:51:33,240 DEBUG  [main] EnumType: Using NAMED-based conversion for Enum com.sf.back.entities.Kind
2020-11-25 20:51:33,241 DEBUG  [main] EnumType: Using NAMED-based conversion for Enum com.sf.back.entities.Kind
2020-11-25 20:51:33,245 DEBUG  [main] EnumType: Using NAMED-based conversion for Enum com.sf.back.entities.Kind
2020-11-25 20:51:33,254 TRACE  [main] TypeConfiguration$Scope: Handling #sessionFactoryCreated from [org.hibernate.internal.SessionFactoryImpl@acc6a69] for TypeConfiguration
2020-11-25 20:51:33,356 WARN   [main] JpaBaseConfiguration$JpaWebConfiguration: spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2020-11-25 20:51:33,435 WARN   [main] GenericWebApplicationContext: Exception encountered during context initialization - cancelling refresh attempt: org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'groovyMarkupConfigurer' defined in class path resource [org/springframework/boot/autoconfigure/groovy/template/GroovyTemplateAutoConfiguration$GroovyMarkupConfiguration.class]: Invocation of init method failed; nested exception is java.lang.reflect.InaccessibleObjectException: Unable to make jdk.internal.loader.ClassLoaders$AppClassLoader(jdk.internal.loader.ClassLoaders$PlatformClassLoader,jdk.internal.loader.URLClassPath) accessible: module java.base does not "opens jdk.internal.loader" to unnamed module @5fcacc0
2020-11-25 20:51:33,438 TRACE  [main] TypeConfiguration$Scope: Handling #sessionFactoryClosed from [org.hibernate.internal.SessionFactoryImpl@acc6a69] for TypeConfiguration
2020-11-25 20:51:33,438 DEBUG  [main] TypeConfiguration$Scope: Un-scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration$Scope@555856fa] from SessionFactory [org.hibernate.internal.SessionFactoryImpl@acc6a69]
2020-11-25 20:51:33,442 ERROR  [main] SpringApplication: Application run failed
org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'groovyMarkupConfigurer' defined in class path resource [org/springframework/boot/autoconfigure/groovy/template/GroovyTemplateAutoConfiguration$GroovyMarkupConfiguration.class]: Invocation of init method failed; nested exception is java.lang.reflect.InaccessibleObjectException: Unable to make jdk.internal.loader.ClassLoaders$AppClassLoader(jdk.internal.loader.ClassLoaders$PlatformClassLoader,jdk.internal.loader.URLClassPath) accessible: module java.base does not "opens jdk.internal.loader" to unnamed module @5fcacc0
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1803)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:595)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:517)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:323)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:222)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:321)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:202)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(DefaultListableBeanFactory.java:879)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:878)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:550)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:747)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:397)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:315)
	at org.springframework.boot.test.context.SpringBootContextLoader.loadContext(SpringBootContextLoader.java:125)
	at org.springframework.test.context.cache.DefaultCacheAwareContextLoaderDelegate.loadContextInternal(DefaultCacheAwareContextLoaderDelegate.java:99)
	at org.springframework.test.context.cache.DefaultCacheAwareContextLoaderDelegate.loadContext(DefaultCacheAwareContextLoaderDelegate.java:124)
	at org.springframework.test.context.support.DefaultTestContext.getApplicationContext(DefaultTestContext.java:123)
	at org.springframework.test.context.web.ServletTestExecutionListener.setUpRequestContextIfNecessary(ServletTestExecutionListener.java:190)
	at org.springframework.test.context.web.ServletTestExecutionListener.prepareTestInstance(ServletTestExecutionListener.java:132)
	at org.springframework.test.context.TestContextManager.prepareTestInstance(TestContextManager.java:244)
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner.createTest(SpringJUnit4ClassRunner.java:227)
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner$1.runReflectiveCall(SpringJUnit4ClassRunner.java:289)
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner.methodBlock(SpringJUnit4ClassRunner.java:291)
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner.runChild(SpringJUnit4ClassRunner.java:246)
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner.runChild(SpringJUnit4ClassRunner.java:97)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:290)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:71)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:58)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268)
	at org.junit.internal.runners.statements.RunBefores.evaluate(RunBefores.java:26)
	at org.springframework.test.context.junit4.statements.RunBeforeTestClassCallbacks.evaluate(RunBeforeTestClassCallbacks.java:61)
	at org.junit.internal.runners.statements.RunAfters.evaluate(RunAfters.java:27)
	at org.springframework.test.context.junit4.statements.RunAfterTestClassCallbacks.evaluate(RunAfterTestClassCallbacks.java:70)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:363)
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner.run(SpringJUnit4ClassRunner.java:190)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:137)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:115)
	at org.junit.vintage.engine.execution.RunnerExecutor.execute(RunnerExecutor.java:40)
	at java.base/java.util.stream.ForEachOps$ForEachOp$OfRef.accept(ForEachOps.java:183)
	at java.base/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:195)
	at java.base/java.util.Iterator.forEachRemaining(Iterator.java:133)
	at java.base/java.util.Spliterators$IteratorSpliterator.forEachRemaining(Spliterators.java:1801)
	at java.base/java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:484)
	at java.base/java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:474)
	at java.base/java.util.stream.ForEachOps$ForEachOp.evaluateSequential(ForEachOps.java:150)
	at java.base/java.util.stream.ForEachOps$ForEachOp$OfRef.evaluateSequential(ForEachOps.java:173)
	at java.base/java.util.stream.AbstractPipeline.evaluate(AbstractPipeline.java:234)
	at java.base/java.util.stream.ReferencePipeline.forEach(ReferencePipeline.java:497)
	at org.junit.vintage.engine.VintageTestEngine.executeAllChildren(VintageTestEngine.java:80)
	at org.junit.vintage.engine.VintageTestEngine.execute(VintageTestEngine.java:71)
	at org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:220)
	at org.junit.platform.launcher.core.DefaultLauncher.lambda$execute$6(DefaultLauncher.java:188)
	at org.junit.platform.launcher.core.DefaultLauncher.withInterceptedStreams(DefaultLauncher.java:202)
	at org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:181)
	at org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:128)
	at org.apache.maven.surefire.junitplatform.JUnitPlatformProvider.invokeAllTests(JUnitPlatformProvider.java:150)
	at org.apache.maven.surefire.junitplatform.JUnitPlatformProvider.invoke(JUnitPlatformProvider.java:124)
	at org.apache.maven.surefire.booter.ForkedBooter.invokeProviderInSameClassLoader(ForkedBooter.java:384)
	at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:345)
	at org.apache.maven.surefire.booter.ForkedBooter.execute(ForkedBooter.java:126)
	at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:418)
Caused by: java.lang.reflect.InaccessibleObjectException: Unable to make jdk.internal.loader.ClassLoaders$AppClassLoader(jdk.internal.loader.ClassLoaders$PlatformClassLoader,jdk.internal.loader.URLClassPath) accessible: module java.base does not "opens jdk.internal.loader" to unnamed module @5fcacc0
	at java.base/java.lang.reflect.AccessibleObject.checkCanSetAccessible(AccessibleObject.java:361)
	at java.base/java.lang.reflect.AccessibleObject.checkCanSetAccessible(AccessibleObject.java:301)
	at java.base/java.lang.reflect.Constructor.checkCanSetAccessible(Constructor.java:189)
	at java.base/java.lang.reflect.Constructor.setAccessible(Constructor.java:182)
	at org.codehaus.groovy.reflection.CachedConstructor$1.run(CachedConstructor.java:44)
	at java.base/java.security.AccessController.doPrivileged(AccessController.java:312)
	at org.codehaus.groovy.reflection.CachedConstructor.<init>(CachedConstructor.java:42)
	at org.codehaus.groovy.reflection.CachedClass$2.initValue(CachedClass.java:79)
	at org.codehaus.groovy.reflection.CachedClass$2.initValue(CachedClass.java:69)
	at org.codehaus.groovy.util.LazyReference.getLocked(LazyReference.java:49)
	at org.codehaus.groovy.util.LazyReference.get(LazyReference.java:36)
	at org.codehaus.groovy.reflection.CachedClass.getConstructors(CachedClass.java:268)
	at groovy.lang.MetaClassImpl.<init>(MetaClassImpl.java:218)
	at groovy.lang.MetaClassImpl.<init>(MetaClassImpl.java:228)
	at groovy.lang.MetaClassRegistry$MetaClassCreationHandle.createNormalMetaClass(MetaClassRegistry.java:171)
	at groovy.lang.MetaClassRegistry$MetaClassCreationHandle.createWithCustomLookup(MetaClassRegistry.java:161)
	at groovy.lang.MetaClassRegistry$MetaClassCreationHandle.create(MetaClassRegistry.java:144)
	at org.codehaus.groovy.reflection.ClassInfo.getMetaClassUnderLock(ClassInfo.java:253)
	at org.codehaus.groovy.reflection.ClassInfo.getMetaClass(ClassInfo.java:285)
	at org.codehaus.groovy.reflection.ClassInfo.getMetaClass(ClassInfo.java:295)
	at org.codehaus.groovy.runtime.metaclass.MetaClassRegistryImpl.getMetaClass(MetaClassRegistryImpl.java:261)
	at org.codehaus.groovy.runtime.InvokerHelper.getMetaClass(InvokerHelper.java:873)
	at org.codehaus.groovy.runtime.InvokerHelper.invokePojoMethod(InvokerHelper.java:906)
	at org.codehaus.groovy.runtime.InvokerHelper.invokeMethod(InvokerHelper.java:898)
	at org.codehaus.groovy.runtime.typehandling.DefaultTypeTransformation.castToBoolean(DefaultTypeTransformation.java:185)
	at org.codehaus.groovy.runtime.typehandling.DefaultTypeTransformation.booleanUnbox(DefaultTypeTransformation.java:74)
	at org.codehaus.groovy.control.customizers.ASTTransformationCustomizer.findASTTranformationClass(ASTTransformationCustomizer.groovy:209)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:64)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:564)
	at org.codehaus.groovy.reflection.CachedMethod.invoke(CachedMethod.java:93)
	at org.codehaus.groovy.runtime.callsite.StaticMetaMethodSite$StaticMetaMethodSiteNoUnwrapNoCoerce.invoke(StaticMetaMethodSite.java:151)
	at org.codehaus.groovy.runtime.callsite.StaticMetaMethodSite.callStatic(StaticMetaMethodSite.java:102)
	at org.codehaus.groovy.runtime.callsite.AbstractCallSite.callStatic(AbstractCallSite.java:214)
	at org.codehaus.groovy.control.customizers.ASTTransformationCustomizer.findPhase(ASTTransformationCustomizer.groovy:226)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:64)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:564)
	at org.codehaus.groovy.reflection.CachedMethod.invoke(CachedMethod.java:93)
	at org.codehaus.groovy.runtime.callsite.StaticMetaMethodSite$StaticMetaMethodSiteNoUnwrapNoCoerce.invoke(StaticMetaMethodSite.java:151)
	at org.codehaus.groovy.runtime.callsite.StaticMetaMethodSite.callStatic(StaticMetaMethodSite.java:102)
	at org.codehaus.groovy.runtime.callsite.AbstractCallSite.callStatic(AbstractCallSite.java:214)
	at org.codehaus.groovy.control.customizers.ASTTransformationCustomizer.<init>(ASTTransformationCustomizer.groovy:180)
	at org.codehaus.groovy.control.customizers.ASTTransformationCustomizer.<init>(ASTTransformationCustomizer.groovy:188)
	at groovy.text.markup.MarkupTemplateEngine.<init>(MarkupTemplateEngine.java:94)
	at org.springframework.web.servlet.view.groovy.GroovyMarkupConfigurer.createTemplateEngine(GroovyMarkupConfigurer.java:160)
	at org.springframework.web.servlet.view.groovy.GroovyMarkupConfigurer.afterPropertiesSet(GroovyMarkupConfigurer.java:153)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1862)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1799)
	... 62 common frames omitted
2020-11-25 20:51:33,443 ERROR  [main] TestContextManager: Caught exception while allowing TestExecutionListener [org.springframework.test.context.web.ServletTestExecutionListener@46c093b4] to prepare test instance [com.sf.math.algebra.solvers.PolynomialSolverIntervalTest@4eb3dacc]
java.lang.IllegalStateException: Failed to load ApplicationContext
	at org.springframework.test.context.cache.DefaultCacheAwareContextLoaderDelegate.loadContext(DefaultCacheAwareContextLoaderDelegate.java:132)
	at org.springframework.test.context.support.DefaultTestContext.getApplicationContext(DefaultTestContext.java:123)
	at org.springframework.test.context.web.ServletTestExecutionListener.setUpRequestContextIfNecessary(ServletTestExecutionListener.java:190)
	at org.springframework.test.context.web.ServletTestExecutionListener.prepareTestInstance(ServletTestExecutionListener.java:132)
	at org.springframework.test.context.TestContextManager.prepareTestInstance(TestContextManager.java:244)
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner.createTest(SpringJUnit4ClassRunner.java:227)
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner$1.runReflectiveCall(SpringJUnit4ClassRunner.java:289)
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner.methodBlock(SpringJUnit4ClassRunner.java:291)
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner.runChild(SpringJUnit4ClassRunner.java:246)
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner.runChild(SpringJUnit4ClassRunner.java:97)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:290)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:71)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:58)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268)
	at org.junit.internal.runners.statements.RunBefores.evaluate(RunBefores.java:26)
	at org.springframework.test.context.junit4.statements.RunBeforeTestClassCallbacks.evaluate(RunBeforeTestClassCallbacks.java:61)
	at org.junit.internal.runners.statements.RunAfters.evaluate(RunAfters.java:27)
	at org.springframework.test.context.junit4.statements.RunAfterTestClassCallbacks.evaluate(RunAfterTestClassCallbacks.java:70)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:363)
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner.run(SpringJUnit4ClassRunner.java:190)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:137)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:115)
	at org.junit.vintage.engine.execution.RunnerExecutor.execute(RunnerExecutor.java:40)
	at java.base/java.util.stream.ForEachOps$ForEachOp$OfRef.accept(ForEachOps.java:183)
	at java.base/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:195)
	at java.base/java.util.Iterator.forEachRemaining(Iterator.java:133)
	at java.base/java.util.Spliterators$IteratorSpliterator.forEachRemaining(Spliterators.java:1801)
	at java.base/java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:484)
	at java.base/java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:474)
	at java.base/java.util.stream.ForEachOps$ForEachOp.evaluateSequential(ForEachOps.java:150)
	at java.base/java.util.stream.ForEachOps$ForEachOp$OfRef.evaluateSequential(ForEachOps.java:173)
	at java.base/java.util.stream.AbstractPipeline.evaluate(AbstractPipeline.java:234)
	at java.base/java.util.stream.ReferencePipeline.forEach(ReferencePipeline.java:497)
	at org.junit.vintage.engine.VintageTestEngine.executeAllChildren(VintageTestEngine.java:80)
	at org.junit.vintage.engine.VintageTestEngine.execute(VintageTestEngine.java:71)
	at org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:220)
	at org.junit.platform.launcher.core.DefaultLauncher.lambda$execute$6(DefaultLauncher.java:188)
	at org.junit.platform.launcher.core.DefaultLauncher.withInterceptedStreams(DefaultLauncher.java:202)
	at org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:181)
	at org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:128)
	at org.apache.maven.surefire.junitplatform.JUnitPlatformProvider.invokeAllTests(JUnitPlatformProvider.java:150)
	at org.apache.maven.surefire.junitplatform.JUnitPlatformProvider.invoke(JUnitPlatformProvider.java:124)
	at org.apache.maven.surefire.booter.ForkedBooter.invokeProviderInSameClassLoader(ForkedBooter.java:384)
	at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:345)
	at org.apache.maven.surefire.booter.ForkedBooter.execute(ForkedBooter.java:126)
	at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:418)
Caused by: org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'groovyMarkupConfigurer' defined in class path resource [org/springframework/boot/autoconfigure/groovy/template/GroovyTemplateAutoConfiguration$GroovyMarkupConfiguration.class]: Invocation of init method failed; nested exception is java.lang.reflect.InaccessibleObjectException: Unable to make jdk.internal.loader.ClassLoaders$AppClassLoader(jdk.internal.loader.ClassLoaders$PlatformClassLoader,jdk.internal.loader.URLClassPath) accessible: module java.base does not "opens jdk.internal.loader" to unnamed module @5fcacc0
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1803)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:595)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:517)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:323)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:222)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:321)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:202)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(DefaultListableBeanFactory.java:879)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:878)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:550)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:747)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:397)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:315)
	at org.springframework.boot.test.context.SpringBootContextLoader.loadContext(SpringBootContextLoader.java:125)
	at org.springframework.test.context.cache.DefaultCacheAwareContextLoaderDelegate.loadContextInternal(DefaultCacheAwareContextLoaderDelegate.java:99)
	at org.springframework.test.context.cache.DefaultCacheAwareContextLoaderDelegate.loadContext(DefaultCacheAwareContextLoaderDelegate.java:124)
	... 47 common frames omitted
Caused by: java.lang.reflect.InaccessibleObjectException: Unable to make jdk.internal.loader.ClassLoaders$AppClassLoader(jdk.internal.loader.ClassLoaders$PlatformClassLoader,jdk.internal.loader.URLClassPath) accessible: module java.base does not "opens jdk.internal.loader" to unnamed module @5fcacc0
	at java.base/java.lang.reflect.AccessibleObject.checkCanSetAccessible(AccessibleObject.java:361)
	at java.base/java.lang.reflect.AccessibleObject.checkCanSetAccessible(AccessibleObject.java:301)
	at java.base/java.lang.reflect.Constructor.checkCanSetAccessible(Constructor.java:189)
	at java.base/java.lang.reflect.Constructor.setAccessible(Constructor.java:182)
	at org.codehaus.groovy.reflection.CachedConstructor$1.run(CachedConstructor.java:44)
	at java.base/java.security.AccessController.doPrivileged(AccessController.java:312)
	at org.codehaus.groovy.reflection.CachedConstructor.<init>(CachedConstructor.java:42)
	at org.codehaus.groovy.reflection.CachedClass$2.initValue(CachedClass.java:79)
	at org.codehaus.groovy.reflection.CachedClass$2.initValue(CachedClass.java:69)
	at org.codehaus.groovy.util.LazyReference.getLocked(LazyReference.java:49)
	at org.codehaus.groovy.util.LazyReference.get(LazyReference.java:36)
	at org.codehaus.groovy.reflection.CachedClass.getConstructors(CachedClass.java:268)
	at groovy.lang.MetaClassImpl.<init>(MetaClassImpl.java:218)
	at groovy.lang.MetaClassImpl.<init>(MetaClassImpl.java:228)
	at groovy.lang.MetaClassRegistry$MetaClassCreationHandle.createNormalMetaClass(MetaClassRegistry.java:171)
	at groovy.lang.MetaClassRegistry$MetaClassCreationHandle.createWithCustomLookup(MetaClassRegistry.java:161)
	at groovy.lang.MetaClassRegistry$MetaClassCreationHandle.create(MetaClassRegistry.java:144)
	at org.codehaus.groovy.reflection.ClassInfo.getMetaClassUnderLock(ClassInfo.java:253)
	at org.codehaus.groovy.reflection.ClassInfo.getMetaClass(ClassInfo.java:285)
	at org.codehaus.groovy.reflection.ClassInfo.getMetaClass(ClassInfo.java:295)
	at org.codehaus.groovy.runtime.metaclass.MetaClassRegistryImpl.getMetaClass(MetaClassRegistryImpl.java:261)
	at org.codehaus.groovy.runtime.InvokerHelper.getMetaClass(InvokerHelper.java:873)
	at org.codehaus.groovy.runtime.InvokerHelper.invokePojoMethod(InvokerHelper.java:906)
	at org.codehaus.groovy.runtime.InvokerHelper.invokeMethod(InvokerHelper.java:898)
	at org.codehaus.groovy.runtime.typehandling.DefaultTypeTransformation.castToBoolean(DefaultTypeTransformation.java:185)
	at org.codehaus.groovy.runtime.typehandling.DefaultTypeTransformation.booleanUnbox(DefaultTypeTransformation.java:74)
	at org.codehaus.groovy.control.customizers.ASTTransformationCustomizer.findASTTranformationClass(ASTTransformationCustomizer.groovy:209)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:64)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:564)
	at org.codehaus.groovy.reflection.CachedMethod.invoke(CachedMethod.java:93)
	at org.codehaus.groovy.runtime.callsite.StaticMetaMethodSite$StaticMetaMethodSiteNoUnwrapNoCoerce.invoke(StaticMetaMethodSite.java:151)
	at org.codehaus.groovy.runtime.callsite.StaticMetaMethodSite.callStatic(StaticMetaMethodSite.java:102)
	at org.codehaus.groovy.runtime.callsite.AbstractCallSite.callStatic(AbstractCallSite.java:214)
	at org.codehaus.groovy.control.customizers.ASTTransformationCustomizer.findPhase(ASTTransformationCustomizer.groovy:226)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:64)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:564)
	at org.codehaus.groovy.reflection.CachedMethod.invoke(CachedMethod.java:93)
	at org.codehaus.groovy.runtime.callsite.StaticMetaMethodSite$StaticMetaMethodSiteNoUnwrapNoCoerce.invoke(StaticMetaMethodSite.java:151)
	at org.codehaus.groovy.runtime.callsite.StaticMetaMethodSite.callStatic(StaticMetaMethodSite.java:102)
	at org.codehaus.groovy.runtime.callsite.AbstractCallSite.callStatic(AbstractCallSite.java:214)
	at org.codehaus.groovy.control.customizers.ASTTransformationCustomizer.<init>(ASTTransformationCustomizer.groovy:180)
	at org.codehaus.groovy.control.customizers.ASTTransformationCustomizer.<init>(ASTTransformationCustomizer.groovy:188)
	at groovy.text.markup.MarkupTemplateEngine.<init>(MarkupTemplateEngine.java:94)
	at org.springframework.web.servlet.view.groovy.GroovyMarkupConfigurer.createTemplateEngine(GroovyMarkupConfigurer.java:160)
	at org.springframework.web.servlet.view.groovy.GroovyMarkupConfigurer.afterPropertiesSet(GroovyMarkupConfigurer.java:153)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1862)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1799)
	... 62 common frames omitted
2020-11-25 20:51:33,878 DEBUG  [main] BasicTypeRegistry: Adding type registration boolean -> org.hibernate.type.BooleanType@59127611
2020-11-25 20:51:33,884 DEBUG  [main] BasicTypeRegistry: Adding type registration boolean -> org.hibernate.type.BooleanType@59127611
2020-11-25 20:51:33,884 DEBUG  [main] BasicTypeRegistry: Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@59127611
2020-11-25 20:51:33,884 DEBUG  [main] BasicTypeRegistry: Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@18db3b3c
2020-11-25 20:51:33,885 DEBUG  [main] BasicTypeRegistry: Adding type registration true_false -> org.hibernate.type.TrueFalseType@5c1c9881
2020-11-25 20:51:33,885 DEBUG  [main] BasicTypeRegistry: Adding type registration yes_no -> org.hibernate.type.YesNoType@5d37aa0f
2020-11-25 20:51:33,885 DEBUG  [main] BasicTypeRegistry: Adding type registration byte -> org.hibernate.type.ByteType@3e4afd10
2020-11-25 20:51:33,886 DEBUG  [main] BasicTypeRegistry: Adding type registration byte -> org.hibernate.type.ByteType@3e4afd10
2020-11-25 20:51:33,886 DEBUG  [main] BasicTypeRegistry: Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@3e4afd10
2020-11-25 20:51:33,887 DEBUG  [main] BasicTypeRegistry: Adding type registration character -> org.hibernate.type.CharacterType@48d44b46
2020-11-25 20:51:33,887 DEBUG  [main] BasicTypeRegistry: Adding type registration char -> org.hibernate.type.CharacterType@48d44b46
2020-11-25 20:51:33,887 DEBUG  [main] BasicTypeRegistry: Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@48d44b46
2020-11-25 20:51:33,888 DEBUG  [main] BasicTypeRegistry: Adding type registration short -> org.hibernate.type.ShortType@dd20ebc
2020-11-25 20:51:33,888 DEBUG  [main] BasicTypeRegistry: Adding type registration short -> org.hibernate.type.ShortType@dd20ebc
2020-11-25 20:51:33,888 DEBUG  [main] BasicTypeRegistry: Adding type registration java.lang.Short -> org.hibernate.type.ShortType@dd20ebc
2020-11-25 20:51:33,889 DEBUG  [main] BasicTypeRegistry: Adding type registration integer -> org.hibernate.type.IntegerType@5f7cd50e
2020-11-25 20:51:33,889 DEBUG  [main] BasicTypeRegistry: Adding type registration int -> org.hibernate.type.IntegerType@5f7cd50e
2020-11-25 20:51:33,889 DEBUG  [main] BasicTypeRegistry: Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@5f7cd50e
2020-11-25 20:51:33,890 DEBUG  [main] BasicTypeRegistry: Adding type registration long -> org.hibernate.type.LongType@359e27d2
2020-11-25 20:51:33,890 DEBUG  [main] BasicTypeRegistry: Adding type registration long -> org.hibernate.type.LongType@359e27d2
2020-11-25 20:51:33,890 DEBUG  [main] BasicTypeRegistry: Adding type registration java.lang.Long -> org.hibernate.type.LongType@359e27d2
2020-11-25 20:51:33,891 DEBUG  [main] BasicTypeRegistry: Adding type registration float -> org.hibernate.type.FloatType@29b8df5
2020-11-25 20:51:33,891 DEBUG  [main] BasicTypeRegistry: Adding type registration float -> org.hibernate.type.FloatType@29b8df5
2020-11-25 20:51:33,892 DEBUG  [main] BasicTypeRegistry: Adding type registration java.lang.Float -> org.hibernate.type.FloatType@29b8df5
2020-11-25 20:51:33,892 DEBUG  [main] BasicTypeRegistry: Adding type registration double -> org.hibernate.type.DoubleType@36cfe107
2020-11-25 20:51:33,893 DEBUG  [main] BasicTypeRegistry: Adding type registration double -> org.hibernate.type.DoubleType@36cfe107
2020-11-25 20:51:33,893 DEBUG  [main] BasicTypeRegistry: Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@36cfe107
2020-11-25 20:51:33,893 DEBUG  [main] BasicTypeRegistry: Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@139089a4
2020-11-25 20:51:33,894 DEBUG  [main] BasicTypeRegistry: Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@139089a4
2020-11-25 20:51:33,894 DEBUG  [main] BasicTypeRegistry: Adding type registration big_integer -> org.hibernate.type.BigIntegerType@9f1ca74
2020-11-25 20:51:33,894 DEBUG  [main] BasicTypeRegistry: Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@9f1ca74
2020-11-25 20:51:33,895 DEBUG  [main] BasicTypeRegistry: Adding type registration string -> org.hibernate.type.StringType@393ae7a0
2020-11-25 20:51:33,895 DEBUG  [main] BasicTypeRegistry: Adding type registration java.lang.String -> org.hibernate.type.StringType@393ae7a0
2020-11-25 20:51:33,895 DEBUG  [main] BasicTypeRegistry: Adding type registration nstring -> org.hibernate.type.StringNVarcharType@7ee12d58
2020-11-25 20:51:33,896 DEBUG  [main] BasicTypeRegistry: Adding type registration ncharacter -> org.hibernate.type.CharacterNCharType@34e990cc
2020-11-25 20:51:33,896 DEBUG  [main] BasicTypeRegistry: Adding type registration url -> org.hibernate.type.UrlType@6de84336
2020-11-25 20:51:33,896 DEBUG  [main] BasicTypeRegistry: Adding type registration java.net.URL -> org.hibernate.type.UrlType@6de84336
2020-11-25 20:51:33,897 DEBUG  [main] BasicTypeRegistry: Adding type registration Duration -> org.hibernate.type.DurationType@69b37f5c
2020-11-25 20:51:33,897 DEBUG  [main] BasicTypeRegistry: Adding type registration java.time.Duration -> org.hibernate.type.DurationType@69b37f5c
2020-11-25 20:51:33,898 DEBUG  [main] BasicTypeRegistry: Adding type registration Instant -> org.hibernate.type.InstantType@580ffea
2020-11-25 20:51:33,898 DEBUG  [main] BasicTypeRegistry: Adding type registration java.time.Instant -> org.hibernate.type.InstantType@580ffea
2020-11-25 20:51:33,899 DEBUG  [main] BasicTypeRegistry: Adding type registration LocalDateTime -> org.hibernate.type.LocalDateTimeType@79d49790
2020-11-25 20:51:33,899 DEBUG  [main] BasicTypeRegistry: Adding type registration java.time.LocalDateTime -> org.hibernate.type.LocalDateTimeType@79d49790
2020-11-25 20:51:33,899 DEBUG  [main] BasicTypeRegistry: Adding type registration LocalDate -> org.hibernate.type.LocalDateType@3e9fb485
2020-11-25 20:51:33,900 DEBUG  [main] BasicTypeRegistry: Adding type registration java.time.LocalDate -> org.hibernate.type.LocalDateType@3e9fb485
2020-11-25 20:51:33,900 DEBUG  [main] BasicTypeRegistry: Adding type registration LocalTime -> org.hibernate.type.LocalTimeType@419f0ea
2020-11-25 20:51:33,900 DEBUG  [main] BasicTypeRegistry: Adding type registration java.time.LocalTime -> org.hibernate.type.LocalTimeType@419f0ea
2020-11-25 20:51:33,901 DEBUG  [main] BasicTypeRegistry: Adding type registration OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@87aec6a
2020-11-25 20:51:33,901 DEBUG  [main] BasicTypeRegistry: Adding type registration java.time.OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@87aec6a
2020-11-25 20:51:33,902 DEBUG  [main] BasicTypeRegistry: Adding type registration OffsetTime -> org.hibernate.type.OffsetTimeType@5529522f
2020-11-25 20:51:33,902 DEBUG  [main] BasicTypeRegistry: Adding type registration java.time.OffsetTime -> org.hibernate.type.OffsetTimeType@5529522f
2020-11-25 20:51:33,902 DEBUG  [main] BasicTypeRegistry: Adding type registration ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@152e7703
2020-11-25 20:51:33,903 DEBUG  [main] BasicTypeRegistry: Adding type registration java.time.ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@152e7703
2020-11-25 20:51:33,903 DEBUG  [main] BasicTypeRegistry: Adding type registration date -> org.hibernate.type.DateType@24fc2c80
2020-11-25 20:51:33,903 DEBUG  [main] BasicTypeRegistry: Adding type registration java.sql.Date -> org.hibernate.type.DateType@24fc2c80
2020-11-25 20:51:33,904 DEBUG  [main] BasicTypeRegistry: Adding type registration time -> org.hibernate.type.TimeType@48b3b1b8
2020-11-25 20:51:33,904 DEBUG  [main] BasicTypeRegistry: Adding type registration java.sql.Time -> org.hibernate.type.TimeType@48b3b1b8
2020-11-25 20:51:33,904 DEBUG  [main] BasicTypeRegistry: Adding type registration timestamp -> org.hibernate.type.TimestampType@686b1e2d
2020-11-25 20:51:33,905 DEBUG  [main] BasicTypeRegistry: Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@686b1e2d
2020-11-25 20:51:33,905 DEBUG  [main] BasicTypeRegistry: Adding type registration java.util.Date -> org.hibernate.type.TimestampType@686b1e2d
2020-11-25 20:51:33,905 DEBUG  [main] BasicTypeRegistry: Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@652b3733
2020-11-25 20:51:33,906 DEBUG  [main] BasicTypeRegistry: Adding type registration calendar -> org.hibernate.type.CalendarType@5be7b749
2020-11-25 20:51:33,906 DEBUG  [main] BasicTypeRegistry: Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@5be7b749
2020-11-25 20:51:33,907 DEBUG  [main] BasicTypeRegistry: Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@5be7b749
2020-11-25 20:51:33,907 DEBUG  [main] BasicTypeRegistry: Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@177ddd24
2020-11-25 20:51:33,907 DEBUG  [main] BasicTypeRegistry: Adding type registration locale -> org.hibernate.type.LocaleType@61ad30f6
2020-11-25 20:51:33,908 DEBUG  [main] BasicTypeRegistry: Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@61ad30f6
2020-11-25 20:51:33,908 DEBUG  [main] BasicTypeRegistry: Adding type registration currency -> org.hibernate.type.CurrencyType@574ebdaf
2020-11-25 20:51:33,908 DEBUG  [main] BasicTypeRegistry: Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@574ebdaf
2020-11-25 20:51:33,909 DEBUG  [main] BasicTypeRegistry: Adding type registration timezone -> org.hibernate.type.TimeZoneType@123ca460
2020-11-25 20:51:33,909 DEBUG  [main] BasicTypeRegistry: Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@123ca460
2020-11-25 20:51:33,909 DEBUG  [main] BasicTypeRegistry: Adding type registration class -> org.hibernate.type.ClassType@3c9f4376
2020-11-25 20:51:33,910 DEBUG  [main] BasicTypeRegistry: Adding type registration java.lang.Class -> org.hibernate.type.ClassType@3c9f4376
2020-11-25 20:51:33,910 DEBUG  [main] BasicTypeRegistry: Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@1958c0d9
2020-11-25 20:51:33,910 DEBUG  [main] BasicTypeRegistry: Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@1958c0d9
2020-11-25 20:51:33,911 DEBUG  [main] BasicTypeRegistry: Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@5fc7255c
2020-11-25 20:51:33,911 DEBUG  [main] BasicTypeRegistry: Adding type registration binary -> org.hibernate.type.BinaryType@79ba0285
2020-11-25 20:51:33,911 DEBUG  [main] BasicTypeRegistry: Adding type registration byte[] -> org.hibernate.type.BinaryType@79ba0285
2020-11-25 20:51:33,912 DEBUG  [main] BasicTypeRegistry: Adding type registration [B -> org.hibernate.type.BinaryType@79ba0285
2020-11-25 20:51:33,912 DEBUG  [main] BasicTypeRegistry: Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@598778cc
2020-11-25 20:51:33,912 DEBUG  [main] BasicTypeRegistry: Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@598778cc
2020-11-25 20:51:33,913 DEBUG  [main] BasicTypeRegistry: Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@598778cc
2020-11-25 20:51:33,914 DEBUG  [main] BasicTypeRegistry: Adding type registration row_version -> org.hibernate.type.RowVersionType@11cadb32
2020-11-25 20:51:33,914 DEBUG  [main] BasicTypeRegistry: Adding type registration image -> org.hibernate.type.ImageType@37986daf
2020-11-25 20:51:33,915 DEBUG  [main] BasicTypeRegistry: Adding type registration characters -> org.hibernate.type.CharArrayType@710afd47
2020-11-25 20:51:33,915 DEBUG  [main] BasicTypeRegistry: Adding type registration char[] -> org.hibernate.type.CharArrayType@710afd47
2020-11-25 20:51:33,915 DEBUG  [main] BasicTypeRegistry: Adding type registration [C -> org.hibernate.type.CharArrayType@710afd47
2020-11-25 20:51:33,916 DEBUG  [main] BasicTypeRegistry: Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@12670e55
2020-11-25 20:51:33,916 DEBUG  [main] BasicTypeRegistry: Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@12670e55
2020-11-25 20:51:33,916 DEBUG  [main] BasicTypeRegistry: Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@12670e55
2020-11-25 20:51:33,917 DEBUG  [main] BasicTypeRegistry: Adding type registration text -> org.hibernate.type.TextType@32ba5c65
2020-11-25 20:51:33,917 DEBUG  [main] BasicTypeRegistry: Adding type registration ntext -> org.hibernate.type.NTextType@10166230
2020-11-25 20:51:33,917 DEBUG  [main] BasicTypeRegistry: Adding type registration blob -> org.hibernate.type.BlobType@13dd7887
2020-11-25 20:51:33,918 DEBUG  [main] BasicTypeRegistry: Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@13dd7887
2020-11-25 20:51:33,919 DEBUG  [main] BasicTypeRegistry: Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@3cbfdf5c
2020-11-25 20:51:33,919 DEBUG  [main] BasicTypeRegistry: Adding type registration clob -> org.hibernate.type.ClobType@58636b50
2020-11-25 20:51:33,920 DEBUG  [main] BasicTypeRegistry: Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@58636b50
2020-11-25 20:51:33,920 DEBUG  [main] BasicTypeRegistry: Adding type registration nclob -> org.hibernate.type.NClobType@1e5aacd9
2020-11-25 20:51:33,921 DEBUG  [main] BasicTypeRegistry: Adding type registration java.sql.NClob -> org.hibernate.type.NClobType@1e5aacd9
2020-11-25 20:51:33,921 DEBUG  [main] BasicTypeRegistry: Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@120411ec
2020-11-25 20:51:33,922 DEBUG  [main] BasicTypeRegistry: Adding type registration materialized_nclob -> org.hibernate.type.MaterializedNClobType@1a34a51e
2020-11-25 20:51:33,922 DEBUG  [main] BasicTypeRegistry: Adding type registration serializable -> org.hibernate.type.SerializableType@6b091a92
2020-11-25 20:51:33,923 DEBUG  [main] BasicTypeRegistry: Adding type registration object -> org.hibernate.type.ObjectType@35329a05
2020-11-25 20:51:33,923 DEBUG  [main] BasicTypeRegistry: Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@35329a05
2020-11-25 20:51:33,923 DEBUG  [main] BasicTypeRegistry: Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@2933edb6
2020-11-25 20:51:33,924 DEBUG  [main] BasicTypeRegistry: Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@504862b5
2020-11-25 20:51:33,924 DEBUG  [main] BasicTypeRegistry: Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@622168f7
2020-11-25 20:51:33,924 DEBUG  [main] BasicTypeRegistry: Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@39211108
2020-11-25 20:51:33,924 DEBUG  [main] BasicTypeRegistry: Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@f4915c7
2020-11-25 20:51:33,925 DEBUG  [main] BasicTypeRegistry: Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@1c078351
2020-11-25 20:51:33,925 DEBUG  [main] BasicTypeRegistry: Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@758836f6
2020-11-25 20:51:33,925 DEBUG  [main] BasicTypeRegistry: Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@4410d01e
2020-11-25 20:51:33,991 DEBUG  [main] TypeConfiguration$Scope: Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@2dddf634] to MetadataBuildingContext [org.hibernate.boot.internal.MetadataBuildingContextRootImpl@4df0eb55]
2020-11-25 20:51:34,011 DEBUG  [main] EnumType: Using NAMED-based conversion for Enum com.sf.back.entities.Kind
2020-11-25 20:51:34,014 DEBUG  [main] EnumType: Using NAMED-based conversion for Enum com.sf.back.entities.Kind
2020-11-25 20:51:34,029 DEBUG  [main] TypeConfiguration$Scope: Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@2dddf634] to SessionFactoryImpl [org.hibernate.internal.SessionFactoryImpl@435df9a1]
2020-11-25 20:51:34,043 DEBUG  [main] EnumType: Using NAMED-based conversion for Enum com.sf.back.entities.Kind
2020-11-25 20:51:34,044 DEBUG  [main] EnumType: Using NAMED-based conversion for Enum com.sf.back.entities.Kind
2020-11-25 20:51:34,063 DEBUG  [main] EnumType: Using NAMED-based conversion for Enum com.sf.back.entities.Kind
2020-11-25 20:51:34,063 DEBUG  [main] EnumType: Using NAMED-based conversion for Enum com.sf.back.entities.Kind
2020-11-25 20:51:34,117 DEBUG  [main] EnumType: Using NAMED-based conversion for Enum com.sf.back.entities.Kind
2020-11-25 20:51:34,117 DEBUG  [main] EnumType: Using NAMED-based conversion for Enum com.sf.back.entities.Kind
2020-11-25 20:51:34,122 DEBUG  [main] EnumType: Using NAMED-based conversion for Enum com.sf.back.entities.Kind
2020-11-25 20:51:34,128 TRACE  [main] TypeConfiguration$Scope: Handling #sessionFactoryCreated from [org.hibernate.internal.SessionFactoryImpl@435df9a1] for TypeConfiguration
2020-11-25 20:51:34,226 WARN   [main] JpaBaseConfiguration$JpaWebConfiguration: spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2020-11-25 20:51:34,376 WARN   [main] GenericWebApplicationContext: Exception encountered during context initialization - cancelling refresh attempt: org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'groovyMarkupConfigurer' defined in class path resource [org/springframework/boot/autoconfigure/groovy/template/GroovyTemplateAutoConfiguration$GroovyMarkupConfiguration.class]: Invocation of init method failed; nested exception is java.lang.reflect.InaccessibleObjectException: Unable to make jdk.internal.loader.ClassLoaders$AppClassLoader(jdk.internal.loader.ClassLoaders$PlatformClassLoader,jdk.internal.loader.URLClassPath) accessible: module java.base does not "opens jdk.internal.loader" to unnamed module @5fcacc0
2020-11-25 20:51:34,381 TRACE  [main] TypeConfiguration$Scope: Handling #sessionFactoryClosed from [org.hibernate.internal.SessionFactoryImpl@435df9a1] for TypeConfiguration
2020-11-25 20:51:34,382 DEBUG  [main] TypeConfiguration$Scope: Un-scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration$Scope@35067738] from SessionFactory [org.hibernate.internal.SessionFactoryImpl@435df9a1]
2020-11-25 20:51:34,392 ERROR  [main] SpringApplication: Application run failed
org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'groovyMarkupConfigurer' defined in class path resource [org/springframework/boot/autoconfigure/groovy/template/GroovyTemplateAutoConfiguration$GroovyMarkupConfiguration.class]: Invocation of init method failed; nested exception is java.lang.reflect.InaccessibleObjectException: Unable to make jdk.internal.loader.ClassLoaders$AppClassLoader(jdk.internal.loader.ClassLoaders$PlatformClassLoader,jdk.internal.loader.URLClassPath) accessible: module java.base does not "opens jdk.internal.loader" to unnamed module @5fcacc0
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1803)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:595)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:517)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:323)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:222)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:321)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:202)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(DefaultListableBeanFactory.java:879)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:878)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:550)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:747)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:397)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:315)
	at org.springframework.boot.test.context.SpringBootContextLoader.loadContext(SpringBootContextLoader.java:125)
	at org.springframework.test.context.cache.DefaultCacheAwareContextLoaderDelegate.loadContextInternal(DefaultCacheAwareContextLoaderDelegate.java:99)
	at org.springframework.test.context.cache.DefaultCacheAwareContextLoaderDelegate.loadContext(DefaultCacheAwareContextLoaderDelegate.java:124)
	at org.springframework.test.context.support.DefaultTestContext.getApplicationContext(DefaultTestContext.java:123)
	at org.springframework.test.context.web.ServletTestExecutionListener.setUpRequestContextIfNecessary(ServletTestExecutionListener.java:190)
	at org.springframework.test.context.web.ServletTestExecutionListener.prepareTestInstance(ServletTestExecutionListener.java:132)
	at org.springframework.test.context.TestContextManager.prepareTestInstance(TestContextManager.java:244)
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner.createTest(SpringJUnit4ClassRunner.java:227)
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner$1.runReflectiveCall(SpringJUnit4ClassRunner.java:289)
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner.methodBlock(SpringJUnit4ClassRunner.java:291)
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner.runChild(SpringJUnit4ClassRunner.java:246)
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner.runChild(SpringJUnit4ClassRunner.java:97)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:290)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:71)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:58)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268)
	at org.junit.internal.runners.statements.RunBefores.evaluate(RunBefores.java:26)
	at org.springframework.test.context.junit4.statements.RunBeforeTestClassCallbacks.evaluate(RunBeforeTestClassCallbacks.java:61)
	at org.junit.internal.runners.statements.RunAfters.evaluate(RunAfters.java:27)
	at org.springframework.test.context.junit4.statements.RunAfterTestClassCallbacks.evaluate(RunAfterTestClassCallbacks.java:70)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:363)
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner.run(SpringJUnit4ClassRunner.java:190)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:137)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:115)
	at org.junit.vintage.engine.execution.RunnerExecutor.execute(RunnerExecutor.java:40)
	at java.base/java.util.stream.ForEachOps$ForEachOp$OfRef.accept(ForEachOps.java:183)
	at java.base/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:195)
	at java.base/java.util.Iterator.forEachRemaining(Iterator.java:133)
	at java.base/java.util.Spliterators$IteratorSpliterator.forEachRemaining(Spliterators.java:1801)
	at java.base/java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:484)
	at java.base/java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:474)
	at java.base/java.util.stream.ForEachOps$ForEachOp.evaluateSequential(ForEachOps.java:150)
	at java.base/java.util.stream.ForEachOps$ForEachOp$OfRef.evaluateSequential(ForEachOps.java:173)
	at java.base/java.util.stream.AbstractPipeline.evaluate(AbstractPipeline.java:234)
	at java.base/java.util.stream.ReferencePipeline.forEach(ReferencePipeline.java:497)
	at org.junit.vintage.engine.VintageTestEngine.executeAllChildren(VintageTestEngine.java:80)
	at org.junit.vintage.engine.VintageTestEngine.execute(VintageTestEngine.java:71)
	at org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:220)
	at org.junit.platform.launcher.core.DefaultLauncher.lambda$execute$6(DefaultLauncher.java:188)
	at org.junit.platform.launcher.core.DefaultLauncher.withInterceptedStreams(DefaultLauncher.java:202)
	at org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:181)
	at org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:128)
	at org.apache.maven.surefire.junitplatform.JUnitPlatformProvider.invokeAllTests(JUnitPlatformProvider.java:150)
	at org.apache.maven.surefire.junitplatform.JUnitPlatformProvider.invoke(JUnitPlatformProvider.java:124)
	at org.apache.maven.surefire.booter.ForkedBooter.invokeProviderInSameClassLoader(ForkedBooter.java:384)
	at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:345)
	at org.apache.maven.surefire.booter.ForkedBooter.execute(ForkedBooter.java:126)
	at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:418)
Caused by: java.lang.reflect.InaccessibleObjectException: Unable to make jdk.internal.loader.ClassLoaders$AppClassLoader(jdk.internal.loader.ClassLoaders$PlatformClassLoader,jdk.internal.loader.URLClassPath) accessible: module java.base does not "opens jdk.internal.loader" to unnamed module @5fcacc0
	at java.base/java.lang.reflect.AccessibleObject.checkCanSetAccessible(AccessibleObject.java:361)
	at java.base/java.lang.reflect.AccessibleObject.checkCanSetAccessible(AccessibleObject.java:301)
	at java.base/java.lang.reflect.Constructor.checkCanSetAccessible(Constructor.java:189)
	at java.base/java.lang.reflect.Constructor.setAccessible(Constructor.java:182)
	at org.codehaus.groovy.reflection.CachedConstructor$1.run(CachedConstructor.java:44)
	at java.base/java.security.AccessController.doPrivileged(AccessController.java:312)
	at org.codehaus.groovy.reflection.CachedConstructor.<init>(CachedConstructor.java:42)
	at org.codehaus.groovy.reflection.CachedClass$2.initValue(CachedClass.java:79)
	at org.codehaus.groovy.reflection.CachedClass$2.initValue(CachedClass.java:69)
	at org.codehaus.groovy.util.LazyReference.getLocked(LazyReference.java:49)
	at org.codehaus.groovy.util.LazyReference.get(LazyReference.java:36)
	at org.codehaus.groovy.reflection.CachedClass.getConstructors(CachedClass.java:268)
	at groovy.lang.MetaClassImpl.<init>(MetaClassImpl.java:218)
	at groovy.lang.MetaClassImpl.<init>(MetaClassImpl.java:228)
	at groovy.lang.MetaClassRegistry$MetaClassCreationHandle.createNormalMetaClass(MetaClassRegistry.java:171)
	at groovy.lang.MetaClassRegistry$MetaClassCreationHandle.createWithCustomLookup(MetaClassRegistry.java:161)
	at groovy.lang.MetaClassRegistry$MetaClassCreationHandle.create(MetaClassRegistry.java:144)
	at org.codehaus.groovy.reflection.ClassInfo.getMetaClassUnderLock(ClassInfo.java:253)
	at org.codehaus.groovy.reflection.ClassInfo.getMetaClass(ClassInfo.java:285)
	at org.codehaus.groovy.reflection.ClassInfo.getMetaClass(ClassInfo.java:295)
	at org.codehaus.groovy.runtime.metaclass.MetaClassRegistryImpl.getMetaClass(MetaClassRegistryImpl.java:261)
	at org.codehaus.groovy.runtime.InvokerHelper.getMetaClass(InvokerHelper.java:873)
	at org.codehaus.groovy.runtime.InvokerHelper.invokePojoMethod(InvokerHelper.java:906)
	at org.codehaus.groovy.runtime.InvokerHelper.invokeMethod(InvokerHelper.java:898)
	at org.codehaus.groovy.runtime.typehandling.DefaultTypeTransformation.castToBoolean(DefaultTypeTransformation.java:185)
	at org.codehaus.groovy.runtime.typehandling.DefaultTypeTransformation.booleanUnbox(DefaultTypeTransformation.java:74)
	at org.codehaus.groovy.control.customizers.ASTTransformationCustomizer.findASTTranformationClass(ASTTransformationCustomizer.groovy:209)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:64)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:564)
	at org.codehaus.groovy.reflection.CachedMethod.invoke(CachedMethod.java:93)
	at org.codehaus.groovy.runtime.callsite.StaticMetaMethodSite$StaticMetaMethodSiteNoUnwrapNoCoerce.invoke(StaticMetaMethodSite.java:151)
	at org.codehaus.groovy.runtime.callsite.StaticMetaMethodSite.callStatic(StaticMetaMethodSite.java:102)
	at org.codehaus.groovy.runtime.callsite.AbstractCallSite.callStatic(AbstractCallSite.java:214)
	at org.codehaus.groovy.control.customizers.ASTTransformationCustomizer.findPhase(ASTTransformationCustomizer.groovy:226)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:64)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:564)
	at org.codehaus.groovy.reflection.CachedMethod.invoke(CachedMethod.java:93)
	at org.codehaus.groovy.runtime.callsite.StaticMetaMethodSite$StaticMetaMethodSiteNoUnwrapNoCoerce.invoke(StaticMetaMethodSite.java:151)
	at org.codehaus.groovy.runtime.callsite.StaticMetaMethodSite.callStatic(StaticMetaMethodSite.java:102)
	at org.codehaus.groovy.runtime.callsite.AbstractCallSite.callStatic(AbstractCallSite.java:214)
	at org.codehaus.groovy.control.customizers.ASTTransformationCustomizer.<init>(ASTTransformationCustomizer.groovy:180)
	at org.codehaus.groovy.control.customizers.ASTTransformationCustomizer.<init>(ASTTransformationCustomizer.groovy:188)
	at groovy.text.markup.MarkupTemplateEngine.<init>(MarkupTemplateEngine.java:94)
	at org.springframework.web.servlet.view.groovy.GroovyMarkupConfigurer.createTemplateEngine(GroovyMarkupConfigurer.java:160)
	at org.springframework.web.servlet.view.groovy.GroovyMarkupConfigurer.afterPropertiesSet(GroovyMarkupConfigurer.java:153)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1862)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1799)
	... 62 common frames omitted
2020-11-25 20:51:34,393 ERROR  [main] TestContextManager: Caught exception while allowing TestExecutionListener [org.springframework.test.context.web.ServletTestExecutionListener@46c093b4] to prepare test instance [com.sf.math.algebra.solvers.PolynomialSolverIntervalTest@2523c97a]
java.lang.IllegalStateException: Failed to load ApplicationContext
	at org.springframework.test.context.cache.DefaultCacheAwareContextLoaderDelegate.loadContext(DefaultCacheAwareContextLoaderDelegate.java:132)
	at org.springframework.test.context.support.DefaultTestContext.getApplicationContext(DefaultTestContext.java:123)
	at org.springframework.test.context.web.ServletTestExecutionListener.setUpRequestContextIfNecessary(ServletTestExecutionListener.java:190)
	at org.springframework.test.context.web.ServletTestExecutionListener.prepareTestInstance(ServletTestExecutionListener.java:132)
	at org.springframework.test.context.TestContextManager.prepareTestInstance(TestContextManager.java:244)
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner.createTest(SpringJUnit4ClassRunner.java:227)
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner$1.runReflectiveCall(SpringJUnit4ClassRunner.java:289)
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner.methodBlock(SpringJUnit4ClassRunner.java:291)
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner.runChild(SpringJUnit4ClassRunner.java:246)
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner.runChild(SpringJUnit4ClassRunner.java:97)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:290)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:71)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:58)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268)
	at org.junit.internal.runners.statements.RunBefores.evaluate(RunBefores.java:26)
	at org.springframework.test.context.junit4.statements.RunBeforeTestClassCallbacks.evaluate(RunBeforeTestClassCallbacks.java:61)
	at org.junit.internal.runners.statements.RunAfters.evaluate(RunAfters.java:27)
	at org.springframework.test.context.junit4.statements.RunAfterTestClassCallbacks.evaluate(RunAfterTestClassCallbacks.java:70)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:363)
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner.run(SpringJUnit4ClassRunner.java:190)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:137)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:115)
	at org.junit.vintage.engine.execution.RunnerExecutor.execute(RunnerExecutor.java:40)
	at java.base/java.util.stream.ForEachOps$ForEachOp$OfRef.accept(ForEachOps.java:183)
	at java.base/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:195)
	at java.base/java.util.Iterator.forEachRemaining(Iterator.java:133)
	at java.base/java.util.Spliterators$IteratorSpliterator.forEachRemaining(Spliterators.java:1801)
	at java.base/java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:484)
	at java.base/java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:474)
	at java.base/java.util.stream.ForEachOps$ForEachOp.evaluateSequential(ForEachOps.java:150)
	at java.base/java.util.stream.ForEachOps$ForEachOp$OfRef.evaluateSequential(ForEachOps.java:173)
	at java.base/java.util.stream.AbstractPipeline.evaluate(AbstractPipeline.java:234)
	at java.base/java.util.stream.ReferencePipeline.forEach(ReferencePipeline.java:497)
	at org.junit.vintage.engine.VintageTestEngine.executeAllChildren(VintageTestEngine.java:80)
	at org.junit.vintage.engine.VintageTestEngine.execute(VintageTestEngine.java:71)
	at org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:220)
	at org.junit.platform.launcher.core.DefaultLauncher.lambda$execute$6(DefaultLauncher.java:188)
	at org.junit.platform.launcher.core.DefaultLauncher.withInterceptedStreams(DefaultLauncher.java:202)
	at org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:181)
	at org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:128)
	at org.apache.maven.surefire.junitplatform.JUnitPlatformProvider.invokeAllTests(JUnitPlatformProvider.java:150)
	at org.apache.maven.surefire.junitplatform.JUnitPlatformProvider.invoke(JUnitPlatformProvider.java:124)
	at org.apache.maven.surefire.booter.ForkedBooter.invokeProviderInSameClassLoader(ForkedBooter.java:384)
	at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:345)
	at org.apache.maven.surefire.booter.ForkedBooter.execute(ForkedBooter.java:126)
	at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:418)
Caused by: org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'groovyMarkupConfigurer' defined in class path resource [org/springframework/boot/autoconfigure/groovy/template/GroovyTemplateAutoConfiguration$GroovyMarkupConfiguration.class]: Invocation of init method failed; nested exception is java.lang.reflect.InaccessibleObjectException: Unable to make jdk.internal.loader.ClassLoaders$AppClassLoader(jdk.internal.loader.ClassLoaders$PlatformClassLoader,jdk.internal.loader.URLClassPath) accessible: module java.base does not "opens jdk.internal.loader" to unnamed module @5fcacc0
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1803)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:595)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:517)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:323)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:222)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:321)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:202)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(DefaultListableBeanFactory.java:879)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:878)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:550)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:747)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:397)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:315)
	at org.springframework.boot.test.context.SpringBootContextLoader.loadContext(SpringBootContextLoader.java:125)
	at org.springframework.test.context.cache.DefaultCacheAwareContextLoaderDelegate.loadContextInternal(DefaultCacheAwareContextLoaderDelegate.java:99)
	at org.springframework.test.context.cache.DefaultCacheAwareContextLoaderDelegate.loadContext(DefaultCacheAwareContextLoaderDelegate.java:124)
	... 47 common frames omitted
Caused by: java.lang.reflect.InaccessibleObjectException: Unable to make jdk.internal.loader.ClassLoaders$AppClassLoader(jdk.internal.loader.ClassLoaders$PlatformClassLoader,jdk.internal.loader.URLClassPath) accessible: module java.base does not "opens jdk.internal.loader" to unnamed module @5fcacc0
	at java.base/java.lang.reflect.AccessibleObject.checkCanSetAccessible(AccessibleObject.java:361)
	at java.base/java.lang.reflect.AccessibleObject.checkCanSetAccessible(AccessibleObject.java:301)
	at java.base/java.lang.reflect.Constructor.checkCanSetAccessible(Constructor.java:189)
	at java.base/java.lang.reflect.Constructor.setAccessible(Constructor.java:182)
	at org.codehaus.groovy.reflection.CachedConstructor$1.run(CachedConstructor.java:44)
	at java.base/java.security.AccessController.doPrivileged(AccessController.java:312)
	at org.codehaus.groovy.reflection.CachedConstructor.<init>(CachedConstructor.java:42)
	at org.codehaus.groovy.reflection.CachedClass$2.initValue(CachedClass.java:79)
	at org.codehaus.groovy.reflection.CachedClass$2.initValue(CachedClass.java:69)
	at org.codehaus.groovy.util.LazyReference.getLocked(LazyReference.java:49)
	at org.codehaus.groovy.util.LazyReference.get(LazyReference.java:36)
	at org.codehaus.groovy.reflection.CachedClass.getConstructors(CachedClass.java:268)
	at groovy.lang.MetaClassImpl.<init>(MetaClassImpl.java:218)
	at groovy.lang.MetaClassImpl.<init>(MetaClassImpl.java:228)
	at groovy.lang.MetaClassRegistry$MetaClassCreationHandle.createNormalMetaClass(MetaClassRegistry.java:171)
	at groovy.lang.MetaClassRegistry$MetaClassCreationHandle.createWithCustomLookup(MetaClassRegistry.java:161)
	at groovy.lang.MetaClassRegistry$MetaClassCreationHandle.create(MetaClassRegistry.java:144)
	at org.codehaus.groovy.reflection.ClassInfo.getMetaClassUnderLock(ClassInfo.java:253)
	at org.codehaus.groovy.reflection.ClassInfo.getMetaClass(ClassInfo.java:285)
	at org.codehaus.groovy.reflection.ClassInfo.getMetaClass(ClassInfo.java:295)
	at org.codehaus.groovy.runtime.metaclass.MetaClassRegistryImpl.getMetaClass(MetaClassRegistryImpl.java:261)
	at org.codehaus.groovy.runtime.InvokerHelper.getMetaClass(InvokerHelper.java:873)
	at org.codehaus.groovy.runtime.InvokerHelper.invokePojoMethod(InvokerHelper.java:906)
	at org.codehaus.groovy.runtime.InvokerHelper.invokeMethod(InvokerHelper.java:898)
	at org.codehaus.groovy.runtime.typehandling.DefaultTypeTransformation.castToBoolean(DefaultTypeTransformation.java:185)
	at org.codehaus.groovy.runtime.typehandling.DefaultTypeTransformation.booleanUnbox(DefaultTypeTransformation.java:74)
	at org.codehaus.groovy.control.customizers.ASTTransformationCustomizer.findASTTranformationClass(ASTTransformationCustomizer.groovy:209)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:64)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:564)
	at org.codehaus.groovy.reflection.CachedMethod.invoke(CachedMethod.java:93)
	at org.codehaus.groovy.runtime.callsite.StaticMetaMethodSite$StaticMetaMethodSiteNoUnwrapNoCoerce.invoke(StaticMetaMethodSite.java:151)
	at org.codehaus.groovy.runtime.callsite.StaticMetaMethodSite.callStatic(StaticMetaMethodSite.java:102)
	at org.codehaus.groovy.runtime.callsite.AbstractCallSite.callStatic(AbstractCallSite.java:214)
	at org.codehaus.groovy.control.customizers.ASTTransformationCustomizer.findPhase(ASTTransformationCustomizer.groovy:226)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:64)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:564)
	at org.codehaus.groovy.reflection.CachedMethod.invoke(CachedMethod.java:93)
	at org.codehaus.groovy.runtime.callsite.StaticMetaMethodSite$StaticMetaMethodSiteNoUnwrapNoCoerce.invoke(StaticMetaMethodSite.java:151)
	at org.codehaus.groovy.runtime.callsite.StaticMetaMethodSite.callStatic(StaticMetaMethodSite.java:102)
	at org.codehaus.groovy.runtime.callsite.AbstractCallSite.callStatic(AbstractCallSite.java:214)
	at org.codehaus.groovy.control.customizers.ASTTransformationCustomizer.<init>(ASTTransformationCustomizer.groovy:180)
	at org.codehaus.groovy.control.customizers.ASTTransformationCustomizer.<init>(ASTTransformationCustomizer.groovy:188)
	at groovy.text.markup.MarkupTemplateEngine.<init>(MarkupTemplateEngine.java:94)
	at org.springframework.web.servlet.view.groovy.GroovyMarkupConfigurer.createTemplateEngine(GroovyMarkupConfigurer.java:160)
	at org.springframework.web.servlet.view.groovy.GroovyMarkupConfigurer.afterPropertiesSet(GroovyMarkupConfigurer.java:153)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1862)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1799)
	... 62 common frames omitted
2020-11-25 20:51:35,418 DEBUG  [main] BasicTypeRegistry: Adding type registration boolean -> org.hibernate.type.BooleanType@59127611
2020-11-25 20:51:35,421 DEBUG  [main] BasicTypeRegistry: Adding type registration boolean -> org.hibernate.type.BooleanType@59127611
2020-11-25 20:51:35,421 DEBUG  [main] BasicTypeRegistry: Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@59127611
2020-11-25 20:51:35,421 DEBUG  [main] BasicTypeRegistry: Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@18db3b3c
2020-11-25 20:51:35,421 DEBUG  [main] BasicTypeRegistry: Adding type registration true_false -> org.hibernate.type.TrueFalseType@5c1c9881
2020-11-25 20:51:35,421 DEBUG  [main] BasicTypeRegistry: Adding type registration yes_no -> org.hibernate.type.YesNoType@5d37aa0f
2020-11-25 20:51:35,422 DEBUG  [main] BasicTypeRegistry: Adding type registration byte -> org.hibernate.type.ByteType@3e4afd10
2020-11-25 20:51:35,422 DEBUG  [main] BasicTypeRegistry: Adding type registration byte -> org.hibernate.type.ByteType@3e4afd10
2020-11-25 20:51:35,422 DEBUG  [main] BasicTypeRegistry: Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@3e4afd10
2020-11-25 20:51:35,422 DEBUG  [main] BasicTypeRegistry: Adding type registration character -> org.hibernate.type.CharacterType@48d44b46
2020-11-25 20:51:35,422 DEBUG  [main] BasicTypeRegistry: Adding type registration char -> org.hibernate.type.CharacterType@48d44b46
2020-11-25 20:51:35,422 DEBUG  [main] BasicTypeRegistry: Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@48d44b46
2020-11-25 20:51:35,422 DEBUG  [main] BasicTypeRegistry: Adding type registration short -> org.hibernate.type.ShortType@dd20ebc
2020-11-25 20:51:35,422 DEBUG  [main] BasicTypeRegistry: Adding type registration short -> org.hibernate.type.ShortType@dd20ebc
2020-11-25 20:51:35,422 DEBUG  [main] BasicTypeRegistry: Adding type registration java.lang.Short -> org.hibernate.type.ShortType@dd20ebc
2020-11-25 20:51:35,423 DEBUG  [main] BasicTypeRegistry: Adding type registration integer -> org.hibernate.type.IntegerType@5f7cd50e
2020-11-25 20:51:35,423 DEBUG  [main] BasicTypeRegistry: Adding type registration int -> org.hibernate.type.IntegerType@5f7cd50e
2020-11-25 20:51:35,423 DEBUG  [main] BasicTypeRegistry: Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@5f7cd50e
2020-11-25 20:51:35,423 DEBUG  [main] BasicTypeRegistry: Adding type registration long -> org.hibernate.type.LongType@359e27d2
2020-11-25 20:51:35,423 DEBUG  [main] BasicTypeRegistry: Adding type registration long -> org.hibernate.type.LongType@359e27d2
2020-11-25 20:51:35,423 DEBUG  [main] BasicTypeRegistry: Adding type registration java.lang.Long -> org.hibernate.type.LongType@359e27d2
2020-11-25 20:51:35,424 DEBUG  [main] BasicTypeRegistry: Adding type registration float -> org.hibernate.type.FloatType@29b8df5
2020-11-25 20:51:35,424 DEBUG  [main] BasicTypeRegistry: Adding type registration float -> org.hibernate.type.FloatType@29b8df5
2020-11-25 20:51:35,424 DEBUG  [main] BasicTypeRegistry: Adding type registration java.lang.Float -> org.hibernate.type.FloatType@29b8df5
2020-11-25 20:51:35,424 DEBUG  [main] BasicTypeRegistry: Adding type registration double -> org.hibernate.type.DoubleType@36cfe107
2020-11-25 20:51:35,424 DEBUG  [main] BasicTypeRegistry: Adding type registration double -> org.hibernate.type.DoubleType@36cfe107
2020-11-25 20:51:35,424 DEBUG  [main] BasicTypeRegistry: Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@36cfe107
2020-11-25 20:51:35,425 DEBUG  [main] BasicTypeRegistry: Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@139089a4
2020-11-25 20:51:35,425 DEBUG  [main] BasicTypeRegistry: Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@139089a4
2020-11-25 20:51:35,425 DEBUG  [main] BasicTypeRegistry: Adding type registration big_integer -> org.hibernate.type.BigIntegerType@9f1ca74
2020-11-25 20:51:35,425 DEBUG  [main] BasicTypeRegistry: Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@9f1ca74
2020-11-25 20:51:35,425 DEBUG  [main] BasicTypeRegistry: Adding type registration string -> org.hibernate.type.StringType@393ae7a0
2020-11-25 20:51:35,425 DEBUG  [main] BasicTypeRegistry: Adding type registration java.lang.String -> org.hibernate.type.StringType@393ae7a0
2020-11-25 20:51:35,426 DEBUG  [main] BasicTypeRegistry: Adding type registration nstring -> org.hibernate.type.StringNVarcharType@7ee12d58
2020-11-25 20:51:35,426 DEBUG  [main] BasicTypeRegistry: Adding type registration ncharacter -> org.hibernate.type.CharacterNCharType@34e990cc
2020-11-25 20:51:35,426 DEBUG  [main] BasicTypeRegistry: Adding type registration url -> org.hibernate.type.UrlType@6de84336
2020-11-25 20:51:35,426 DEBUG  [main] BasicTypeRegistry: Adding type registration java.net.URL -> org.hibernate.type.UrlType@6de84336
2020-11-25 20:51:35,426 DEBUG  [main] BasicTypeRegistry: Adding type registration Duration -> org.hibernate.type.DurationType@69b37f5c
2020-11-25 20:51:35,426 DEBUG  [main] BasicTypeRegistry: Adding type registration java.time.Duration -> org.hibernate.type.DurationType@69b37f5c
2020-11-25 20:51:35,426 DEBUG  [main] BasicTypeRegistry: Adding type registration Instant -> org.hibernate.type.InstantType@580ffea
2020-11-25 20:51:35,426 DEBUG  [main] BasicTypeRegistry: Adding type registration java.time.Instant -> org.hibernate.type.InstantType@580ffea
2020-11-25 20:51:35,427 DEBUG  [main] BasicTypeRegistry: Adding type registration LocalDateTime -> org.hibernate.type.LocalDateTimeType@79d49790
2020-11-25 20:51:35,427 DEBUG  [main] BasicTypeRegistry: Adding type registration java.time.LocalDateTime -> org.hibernate.type.LocalDateTimeType@79d49790
2020-11-25 20:51:35,427 DEBUG  [main] BasicTypeRegistry: Adding type registration LocalDate -> org.hibernate.type.LocalDateType@3e9fb485
2020-11-25 20:51:35,427 DEBUG  [main] BasicTypeRegistry: Adding type registration java.time.LocalDate -> org.hibernate.type.LocalDateType@3e9fb485
2020-11-25 20:51:35,427 DEBUG  [main] BasicTypeRegistry: Adding type registration LocalTime -> org.hibernate.type.LocalTimeType@419f0ea
2020-11-25 20:51:35,427 DEBUG  [main] BasicTypeRegistry: Adding type registration java.time.LocalTime -> org.hibernate.type.LocalTimeType@419f0ea
2020-11-25 20:51:35,427 DEBUG  [main] BasicTypeRegistry: Adding type registration OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@87aec6a
2020-11-25 20:51:35,427 DEBUG  [main] BasicTypeRegistry: Adding type registration java.time.OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@87aec6a
2020-11-25 20:51:35,427 DEBUG  [main] BasicTypeRegistry: Adding type registration OffsetTime -> org.hibernate.type.OffsetTimeType@5529522f
2020-11-25 20:51:35,428 DEBUG  [main] BasicTypeRegistry: Adding type registration java.time.OffsetTime -> org.hibernate.type.OffsetTimeType@5529522f
2020-11-25 20:51:35,428 DEBUG  [main] BasicTypeRegistry: Adding type registration ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@152e7703
2020-11-25 20:51:35,428 DEBUG  [main] BasicTypeRegistry: Adding type registration java.time.ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@152e7703
2020-11-25 20:51:35,428 DEBUG  [main] BasicTypeRegistry: Adding type registration date -> org.hibernate.type.DateType@24fc2c80
2020-11-25 20:51:35,428 DEBUG  [main] BasicTypeRegistry: Adding type registration java.sql.Date -> org.hibernate.type.DateType@24fc2c80
2020-11-25 20:51:35,428 DEBUG  [main] BasicTypeRegistry: Adding type registration time -> org.hibernate.type.TimeType@48b3b1b8
2020-11-25 20:51:35,429 DEBUG  [main] BasicTypeRegistry: Adding type registration java.sql.Time -> org.hibernate.type.TimeType@48b3b1b8
2020-11-25 20:51:35,429 DEBUG  [main] BasicTypeRegistry: Adding type registration timestamp -> org.hibernate.type.TimestampType@686b1e2d
2020-11-25 20:51:35,429 DEBUG  [main] BasicTypeRegistry: Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@686b1e2d
2020-11-25 20:51:35,429 DEBUG  [main] BasicTypeRegistry: Adding type registration java.util.Date -> org.hibernate.type.TimestampType@686b1e2d
2020-11-25 20:51:35,429 DEBUG  [main] BasicTypeRegistry: Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@652b3733
2020-11-25 20:51:35,429 DEBUG  [main] BasicTypeRegistry: Adding type registration calendar -> org.hibernate.type.CalendarType@5be7b749
2020-11-25 20:51:35,429 DEBUG  [main] BasicTypeRegistry: Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@5be7b749
2020-11-25 20:51:35,429 DEBUG  [main] BasicTypeRegistry: Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@5be7b749
2020-11-25 20:51:35,429 DEBUG  [main] BasicTypeRegistry: Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@177ddd24
2020-11-25 20:51:35,430 DEBUG  [main] BasicTypeRegistry: Adding type registration locale -> org.hibernate.type.LocaleType@61ad30f6
2020-11-25 20:51:35,430 DEBUG  [main] BasicTypeRegistry: Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@61ad30f6
2020-11-25 20:51:35,430 DEBUG  [main] BasicTypeRegistry: Adding type registration currency -> org.hibernate.type.CurrencyType@574ebdaf
2020-11-25 20:51:35,430 DEBUG  [main] BasicTypeRegistry: Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@574ebdaf
2020-11-25 20:51:35,430 DEBUG  [main] BasicTypeRegistry: Adding type registration timezone -> org.hibernate.type.TimeZoneType@123ca460
2020-11-25 20:51:35,431 DEBUG  [main] BasicTypeRegistry: Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@123ca460
2020-11-25 20:51:35,431 DEBUG  [main] BasicTypeRegistry: Adding type registration class -> org.hibernate.type.ClassType@3c9f4376
2020-11-25 20:51:35,431 DEBUG  [main] BasicTypeRegistry: Adding type registration java.lang.Class -> org.hibernate.type.ClassType@3c9f4376
2020-11-25 20:51:35,431 DEBUG  [main] BasicTypeRegistry: Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@1958c0d9
2020-11-25 20:51:35,431 DEBUG  [main] BasicTypeRegistry: Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@1958c0d9
2020-11-25 20:51:35,431 DEBUG  [main] BasicTypeRegistry: Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@5fc7255c
2020-11-25 20:51:35,432 DEBUG  [main] BasicTypeRegistry: Adding type registration binary -> org.hibernate.type.BinaryType@79ba0285
2020-11-25 20:51:35,432 DEBUG  [main] BasicTypeRegistry: Adding type registration byte[] -> org.hibernate.type.BinaryType@79ba0285
2020-11-25 20:51:35,432 DEBUG  [main] BasicTypeRegistry: Adding type registration [B -> org.hibernate.type.BinaryType@79ba0285
2020-11-25 20:51:35,432 DEBUG  [main] BasicTypeRegistry: Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@598778cc
2020-11-25 20:51:35,432 DEBUG  [main] BasicTypeRegistry: Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@598778cc
2020-11-25 20:51:35,432 DEBUG  [main] BasicTypeRegistry: Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@598778cc
2020-11-25 20:51:35,432 DEBUG  [main] BasicTypeRegistry: Adding type registration row_version -> org.hibernate.type.RowVersionType@11cadb32
2020-11-25 20:51:35,433 DEBUG  [main] BasicTypeRegistry: Adding type registration image -> org.hibernate.type.ImageType@37986daf
2020-11-25 20:51:35,433 DEBUG  [main] BasicTypeRegistry: Adding type registration characters -> org.hibernate.type.CharArrayType@710afd47
2020-11-25 20:51:35,433 DEBUG  [main] BasicTypeRegistry: Adding type registration char[] -> org.hibernate.type.CharArrayType@710afd47
2020-11-25 20:51:35,433 DEBUG  [main] BasicTypeRegistry: Adding type registration [C -> org.hibernate.type.CharArrayType@710afd47
2020-11-25 20:51:35,433 DEBUG  [main] BasicTypeRegistry: Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@12670e55
2020-11-25 20:51:35,433 DEBUG  [main] BasicTypeRegistry: Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@12670e55
2020-11-25 20:51:35,433 DEBUG  [main] BasicTypeRegistry: Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@12670e55
2020-11-25 20:51:35,433 DEBUG  [main] BasicTypeRegistry: Adding type registration text -> org.hibernate.type.TextType@32ba5c65
2020-11-25 20:51:35,433 DEBUG  [main] BasicTypeRegistry: Adding type registration ntext -> org.hibernate.type.NTextType@10166230
2020-11-25 20:51:35,434 DEBUG  [main] BasicTypeRegistry: Adding type registration blob -> org.hibernate.type.BlobType@13dd7887
2020-11-25 20:51:35,434 DEBUG  [main] BasicTypeRegistry: Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@13dd7887
2020-11-25 20:51:35,434 DEBUG  [main] BasicTypeRegistry: Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@3cbfdf5c
2020-11-25 20:51:35,434 DEBUG  [main] BasicTypeRegistry: Adding type registration clob -> org.hibernate.type.ClobType@58636b50
2020-11-25 20:51:35,434 DEBUG  [main] BasicTypeRegistry: Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@58636b50
2020-11-25 20:51:35,434 DEBUG  [main] BasicTypeRegistry: Adding type registration nclob -> org.hibernate.type.NClobType@1e5aacd9
2020-11-25 20:51:35,435 DEBUG  [main] BasicTypeRegistry: Adding type registration java.sql.NClob -> org.hibernate.type.NClobType@1e5aacd9
2020-11-25 20:51:35,435 DEBUG  [main] BasicTypeRegistry: Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@120411ec
2020-11-25 20:51:35,435 DEBUG  [main] BasicTypeRegistry: Adding type registration materialized_nclob -> org.hibernate.type.MaterializedNClobType@1a34a51e
2020-11-25 20:51:35,435 DEBUG  [main] BasicTypeRegistry: Adding type registration serializable -> org.hibernate.type.SerializableType@6b091a92
2020-11-25 20:51:35,435 DEBUG  [main] BasicTypeRegistry: Adding type registration object -> org.hibernate.type.ObjectType@35329a05
2020-11-25 20:51:35,435 DEBUG  [main] BasicTypeRegistry: Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@35329a05
2020-11-25 20:51:35,435 DEBUG  [main] BasicTypeRegistry: Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@24f89b6b
2020-11-25 20:51:35,435 DEBUG  [main] BasicTypeRegistry: Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@307f4223
2020-11-25 20:51:35,435 DEBUG  [main] BasicTypeRegistry: Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@3730fb2f
2020-11-25 20:51:35,436 DEBUG  [main] BasicTypeRegistry: Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@8d95ac8
2020-11-25 20:51:35,436 DEBUG  [main] BasicTypeRegistry: Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@689aab7b
2020-11-25 20:51:35,436 DEBUG  [main] BasicTypeRegistry: Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@22be8211
2020-11-25 20:51:35,436 DEBUG  [main] BasicTypeRegistry: Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@1267fcea
2020-11-25 20:51:35,436 DEBUG  [main] BasicTypeRegistry: Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@502afb74
2020-11-25 20:51:35,445 DEBUG  [main] TypeConfiguration$Scope: Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@4cc3e43d] to MetadataBuildingContext [org.hibernate.boot.internal.MetadataBuildingContextRootImpl@443d8d4d]
2020-11-25 20:51:35,452 DEBUG  [main] EnumType: Using NAMED-based conversion for Enum com.sf.back.entities.Kind
2020-11-25 20:51:35,454 DEBUG  [main] EnumType: Using NAMED-based conversion for Enum com.sf.back.entities.Kind
2020-11-25 20:51:35,465 DEBUG  [main] TypeConfiguration$Scope: Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@4cc3e43d] to SessionFactoryImpl [org.hibernate.internal.SessionFactoryImpl@4591a080]
2020-11-25 20:51:35,465 DEBUG  [main] EnumType: Using NAMED-based conversion for Enum com.sf.back.entities.Kind
2020-11-25 20:51:35,466 DEBUG  [main] EnumType: Using NAMED-based conversion for Enum com.sf.back.entities.Kind
2020-11-25 20:51:35,481 DEBUG  [main] EnumType: Using NAMED-based conversion for Enum com.sf.back.entities.Kind
2020-11-25 20:51:35,481 DEBUG  [main] EnumType: Using NAMED-based conversion for Enum com.sf.back.entities.Kind
2020-11-25 20:51:35,495 DEBUG  [main] EnumType: Using NAMED-based conversion for Enum com.sf.back.entities.Kind
2020-11-25 20:51:35,495 DEBUG  [main] EnumType: Using NAMED-based conversion for Enum com.sf.back.entities.Kind
2020-11-25 20:51:35,498 DEBUG  [main] EnumType: Using NAMED-based conversion for Enum com.sf.back.entities.Kind
2020-11-25 20:51:35,503 TRACE  [main] TypeConfiguration$Scope: Handling #sessionFactoryCreated from [org.hibernate.internal.SessionFactoryImpl@4591a080] for TypeConfiguration
2020-11-25 20:51:35,682 WARN   [main] JpaBaseConfiguration$JpaWebConfiguration: spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2020-11-25 20:51:35,776 WARN   [main] GenericWebApplicationContext: Exception encountered during context initialization - cancelling refresh attempt: org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'groovyMarkupConfigurer' defined in class path resource [org/springframework/boot/autoconfigure/groovy/template/GroovyTemplateAutoConfiguration$GroovyMarkupConfiguration.class]: Invocation of init method failed; nested exception is java.lang.reflect.InaccessibleObjectException: Unable to make jdk.internal.loader.ClassLoaders$AppClassLoader(jdk.internal.loader.ClassLoaders$PlatformClassLoader,jdk.internal.loader.URLClassPath) accessible: module java.base does not "opens jdk.internal.loader" to unnamed module @5fcacc0
2020-11-25 20:51:35,778 TRACE  [main] TypeConfiguration$Scope: Handling #sessionFactoryClosed from [org.hibernate.internal.SessionFactoryImpl@4591a080] for TypeConfiguration
2020-11-25 20:51:35,779 DEBUG  [main] TypeConfiguration$Scope: Un-scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration$Scope@396feeb5] from SessionFactory [org.hibernate.internal.SessionFactoryImpl@4591a080]
2020-11-25 20:51:35,799 ERROR  [main] SpringApplication: Application run failed
org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'groovyMarkupConfigurer' defined in class path resource [org/springframework/boot/autoconfigure/groovy/template/GroovyTemplateAutoConfiguration$GroovyMarkupConfiguration.class]: Invocation of init method failed; nested exception is java.lang.reflect.InaccessibleObjectException: Unable to make jdk.internal.loader.ClassLoaders$AppClassLoader(jdk.internal.loader.ClassLoaders$PlatformClassLoader,jdk.internal.loader.URLClassPath) accessible: module java.base does not "opens jdk.internal.loader" to unnamed module @5fcacc0
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1803)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:595)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:517)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:323)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:222)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:321)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:202)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(DefaultListableBeanFactory.java:879)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:878)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:550)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:747)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:397)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:315)
	at org.springframework.boot.test.context.SpringBootContextLoader.loadContext(SpringBootContextLoader.java:125)
	at org.springframework.test.context.cache.DefaultCacheAwareContextLoaderDelegate.loadContextInternal(DefaultCacheAwareContextLoaderDelegate.java:99)
	at org.springframework.test.context.cache.DefaultCacheAwareContextLoaderDelegate.loadContext(DefaultCacheAwareContextLoaderDelegate.java:124)
	at org.springframework.test.context.support.DefaultTestContext.getApplicationContext(DefaultTestContext.java:123)
	at org.springframework.test.context.web.ServletTestExecutionListener.setUpRequestContextIfNecessary(ServletTestExecutionListener.java:190)
	at org.springframework.test.context.web.ServletTestExecutionListener.prepareTestInstance(ServletTestExecutionListener.java:132)
	at org.springframework.test.context.TestContextManager.prepareTestInstance(TestContextManager.java:244)
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner.createTest(SpringJUnit4ClassRunner.java:227)
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner$1.runReflectiveCall(SpringJUnit4ClassRunner.java:289)
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner.methodBlock(SpringJUnit4ClassRunner.java:291)
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner.runChild(SpringJUnit4ClassRunner.java:246)
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner.runChild(SpringJUnit4ClassRunner.java:97)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:290)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:71)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:58)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268)
	at org.junit.internal.runners.statements.RunBefores.evaluate(RunBefores.java:26)
	at org.springframework.test.context.junit4.statements.RunBeforeTestClassCallbacks.evaluate(RunBeforeTestClassCallbacks.java:61)
	at org.junit.internal.runners.statements.RunAfters.evaluate(RunAfters.java:27)
	at org.springframework.test.context.junit4.statements.RunAfterTestClassCallbacks.evaluate(RunAfterTestClassCallbacks.java:70)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:363)
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner.run(SpringJUnit4ClassRunner.java:190)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:137)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:115)
	at org.junit.vintage.engine.execution.RunnerExecutor.execute(RunnerExecutor.java:40)
	at java.base/java.util.stream.ForEachOps$ForEachOp$OfRef.accept(ForEachOps.java:183)
	at java.base/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:195)
	at java.base/java.util.Iterator.forEachRemaining(Iterator.java:133)
	at java.base/java.util.Spliterators$IteratorSpliterator.forEachRemaining(Spliterators.java:1801)
	at java.base/java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:484)
	at java.base/java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:474)
	at java.base/java.util.stream.ForEachOps$ForEachOp.evaluateSequential(ForEachOps.java:150)
	at java.base/java.util.stream.ForEachOps$ForEachOp$OfRef.evaluateSequential(ForEachOps.java:173)
	at java.base/java.util.stream.AbstractPipeline.evaluate(AbstractPipeline.java:234)
	at java.base/java.util.stream.ReferencePipeline.forEach(ReferencePipeline.java:497)
	at org.junit.vintage.engine.VintageTestEngine.executeAllChildren(VintageTestEngine.java:80)
	at org.junit.vintage.engine.VintageTestEngine.execute(VintageTestEngine.java:71)
	at org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:220)
	at org.junit.platform.launcher.core.DefaultLauncher.lambda$execute$6(DefaultLauncher.java:188)
	at org.junit.platform.launcher.core.DefaultLauncher.withInterceptedStreams(DefaultLauncher.java:202)
	at org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:181)
	at org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:128)
	at org.apache.maven.surefire.junitplatform.JUnitPlatformProvider.invokeAllTests(JUnitPlatformProvider.java:150)
	at org.apache.maven.surefire.junitplatform.JUnitPlatformProvider.invoke(JUnitPlatformProvider.java:124)
	at org.apache.maven.surefire.booter.ForkedBooter.invokeProviderInSameClassLoader(ForkedBooter.java:384)
	at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:345)
	at org.apache.maven.surefire.booter.ForkedBooter.execute(ForkedBooter.java:126)
	at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:418)
Caused by: java.lang.reflect.InaccessibleObjectException: Unable to make jdk.internal.loader.ClassLoaders$AppClassLoader(jdk.internal.loader.ClassLoaders$PlatformClassLoader,jdk.internal.loader.URLClassPath) accessible: module java.base does not "opens jdk.internal.loader" to unnamed module @5fcacc0
	at java.base/java.lang.reflect.AccessibleObject.checkCanSetAccessible(AccessibleObject.java:361)
	at java.base/java.lang.reflect.AccessibleObject.checkCanSetAccessible(AccessibleObject.java:301)
	at java.base/java.lang.reflect.Constructor.checkCanSetAccessible(Constructor.java:189)
	at java.base/java.lang.reflect.Constructor.setAccessible(Constructor.java:182)
	at org.codehaus.groovy.reflection.CachedConstructor$1.run(CachedConstructor.java:44)
	at java.base/java.security.AccessController.doPrivileged(AccessController.java:312)
	at org.codehaus.groovy.reflection.CachedConstructor.<init>(CachedConstructor.java:42)
	at org.codehaus.groovy.reflection.CachedClass$2.initValue(CachedClass.java:79)
	at org.codehaus.groovy.reflection.CachedClass$2.initValue(CachedClass.java:69)
	at org.codehaus.groovy.util.LazyReference.getLocked(LazyReference.java:49)
	at org.codehaus.groovy.util.LazyReference.get(LazyReference.java:36)
	at org.codehaus.groovy.reflection.CachedClass.getConstructors(CachedClass.java:268)
	at groovy.lang.MetaClassImpl.<init>(MetaClassImpl.java:218)
	at groovy.lang.MetaClassImpl.<init>(MetaClassImpl.java:228)
	at groovy.lang.MetaClassRegistry$MetaClassCreationHandle.createNormalMetaClass(MetaClassRegistry.java:171)
	at groovy.lang.MetaClassRegistry$MetaClassCreationHandle.createWithCustomLookup(MetaClassRegistry.java:161)
	at groovy.lang.MetaClassRegistry$MetaClassCreationHandle.create(MetaClassRegistry.java:144)
	at org.codehaus.groovy.reflection.ClassInfo.getMetaClassUnderLock(ClassInfo.java:253)
	at org.codehaus.groovy.reflection.ClassInfo.getMetaClass(ClassInfo.java:285)
	at org.codehaus.groovy.reflection.ClassInfo.getMetaClass(ClassInfo.java:295)
	at org.codehaus.groovy.runtime.metaclass.MetaClassRegistryImpl.getMetaClass(MetaClassRegistryImpl.java:261)
	at org.codehaus.groovy.runtime.InvokerHelper.getMetaClass(InvokerHelper.java:873)
	at org.codehaus.groovy.runtime.InvokerHelper.invokePojoMethod(InvokerHelper.java:906)
	at org.codehaus.groovy.runtime.InvokerHelper.invokeMethod(InvokerHelper.java:898)
	at org.codehaus.groovy.runtime.typehandling.DefaultTypeTransformation.castToBoolean(DefaultTypeTransformation.java:185)
	at org.codehaus.groovy.runtime.typehandling.DefaultTypeTransformation.booleanUnbox(DefaultTypeTransformation.java:74)
	at org.codehaus.groovy.control.customizers.ASTTransformationCustomizer.findASTTranformationClass(ASTTransformationCustomizer.groovy:209)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:64)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:564)
	at org.codehaus.groovy.reflection.CachedMethod.invoke(CachedMethod.java:93)
	at org.codehaus.groovy.runtime.callsite.StaticMetaMethodSite$StaticMetaMethodSiteNoUnwrapNoCoerce.invoke(StaticMetaMethodSite.java:151)
	at org.codehaus.groovy.runtime.callsite.StaticMetaMethodSite.callStatic(StaticMetaMethodSite.java:102)
	at org.codehaus.groovy.runtime.callsite.AbstractCallSite.callStatic(AbstractCallSite.java:214)
	at org.codehaus.groovy.control.customizers.ASTTransformationCustomizer.findPhase(ASTTransformationCustomizer.groovy:226)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:64)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:564)
	at org.codehaus.groovy.reflection.CachedMethod.invoke(CachedMethod.java:93)
	at org.codehaus.groovy.runtime.callsite.StaticMetaMethodSite$StaticMetaMethodSiteNoUnwrapNoCoerce.invoke(StaticMetaMethodSite.java:151)
	at org.codehaus.groovy.runtime.callsite.StaticMetaMethodSite.callStatic(StaticMetaMethodSite.java:102)
	at org.codehaus.groovy.runtime.callsite.AbstractCallSite.callStatic(AbstractCallSite.java:214)
	at org.codehaus.groovy.control.customizers.ASTTransformationCustomizer.<init>(ASTTransformationCustomizer.groovy:180)
	at org.codehaus.groovy.control.customizers.ASTTransformationCustomizer.<init>(ASTTransformationCustomizer.groovy:188)
	at groovy.text.markup.MarkupTemplateEngine.<init>(MarkupTemplateEngine.java:94)
	at org.springframework.web.servlet.view.groovy.GroovyMarkupConfigurer.createTemplateEngine(GroovyMarkupConfigurer.java:160)
	at org.springframework.web.servlet.view.groovy.GroovyMarkupConfigurer.afterPropertiesSet(GroovyMarkupConfigurer.java:153)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1862)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1799)
	... 62 common frames omitted
2020-11-25 20:51:35,799 ERROR  [main] TestContextManager: Caught exception while allowing TestExecutionListener [org.springframework.test.context.web.ServletTestExecutionListener@4237d6e4] to prepare test instance [com.sf.service.ProblemServiceTest@754f951a]
java.lang.IllegalStateException: Failed to load ApplicationContext
	at org.springframework.test.context.cache.DefaultCacheAwareContextLoaderDelegate.loadContext(DefaultCacheAwareContextLoaderDelegate.java:132)
	at org.springframework.test.context.support.DefaultTestContext.getApplicationContext(DefaultTestContext.java:123)
	at org.springframework.test.context.web.ServletTestExecutionListener.setUpRequestContextIfNecessary(ServletTestExecutionListener.java:190)
	at org.springframework.test.context.web.ServletTestExecutionListener.prepareTestInstance(ServletTestExecutionListener.java:132)
	at org.springframework.test.context.TestContextManager.prepareTestInstance(TestContextManager.java:244)
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner.createTest(SpringJUnit4ClassRunner.java:227)
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner$1.runReflectiveCall(SpringJUnit4ClassRunner.java:289)
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner.methodBlock(SpringJUnit4ClassRunner.java:291)
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner.runChild(SpringJUnit4ClassRunner.java:246)
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner.runChild(SpringJUnit4ClassRunner.java:97)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:290)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:71)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:58)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268)
	at org.junit.internal.runners.statements.RunBefores.evaluate(RunBefores.java:26)
	at org.springframework.test.context.junit4.statements.RunBeforeTestClassCallbacks.evaluate(RunBeforeTestClassCallbacks.java:61)
	at org.junit.internal.runners.statements.RunAfters.evaluate(RunAfters.java:27)
	at org.springframework.test.context.junit4.statements.RunAfterTestClassCallbacks.evaluate(RunAfterTestClassCallbacks.java:70)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:363)
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner.run(SpringJUnit4ClassRunner.java:190)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:137)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:115)
	at org.junit.vintage.engine.execution.RunnerExecutor.execute(RunnerExecutor.java:40)
	at java.base/java.util.stream.ForEachOps$ForEachOp$OfRef.accept(ForEachOps.java:183)
	at java.base/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:195)
	at java.base/java.util.Iterator.forEachRemaining(Iterator.java:133)
	at java.base/java.util.Spliterators$IteratorSpliterator.forEachRemaining(Spliterators.java:1801)
	at java.base/java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:484)
	at java.base/java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:474)
	at java.base/java.util.stream.ForEachOps$ForEachOp.evaluateSequential(ForEachOps.java:150)
	at java.base/java.util.stream.ForEachOps$ForEachOp$OfRef.evaluateSequential(ForEachOps.java:173)
	at java.base/java.util.stream.AbstractPipeline.evaluate(AbstractPipeline.java:234)
	at java.base/java.util.stream.ReferencePipeline.forEach(ReferencePipeline.java:497)
	at org.junit.vintage.engine.VintageTestEngine.executeAllChildren(VintageTestEngine.java:80)
	at org.junit.vintage.engine.VintageTestEngine.execute(VintageTestEngine.java:71)
	at org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:220)
	at org.junit.platform.launcher.core.DefaultLauncher.lambda$execute$6(DefaultLauncher.java:188)
	at org.junit.platform.launcher.core.DefaultLauncher.withInterceptedStreams(DefaultLauncher.java:202)
	at org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:181)
	at org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:128)
	at org.apache.maven.surefire.junitplatform.JUnitPlatformProvider.invokeAllTests(JUnitPlatformProvider.java:150)
	at org.apache.maven.surefire.junitplatform.JUnitPlatformProvider.invoke(JUnitPlatformProvider.java:124)
	at org.apache.maven.surefire.booter.ForkedBooter.invokeProviderInSameClassLoader(ForkedBooter.java:384)
	at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:345)
	at org.apache.maven.surefire.booter.ForkedBooter.execute(ForkedBooter.java:126)
	at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:418)
Caused by: org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'groovyMarkupConfigurer' defined in class path resource [org/springframework/boot/autoconfigure/groovy/template/GroovyTemplateAutoConfiguration$GroovyMarkupConfiguration.class]: Invocation of init method failed; nested exception is java.lang.reflect.InaccessibleObjectException: Unable to make jdk.internal.loader.ClassLoaders$AppClassLoader(jdk.internal.loader.ClassLoaders$PlatformClassLoader,jdk.internal.loader.URLClassPath) accessible: module java.base does not "opens jdk.internal.loader" to unnamed module @5fcacc0
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1803)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:595)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:517)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:323)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:222)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:321)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:202)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(DefaultListableBeanFactory.java:879)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:878)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:550)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:747)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:397)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:315)
	at org.springframework.boot.test.context.SpringBootContextLoader.loadContext(SpringBootContextLoader.java:125)
	at org.springframework.test.context.cache.DefaultCacheAwareContextLoaderDelegate.loadContextInternal(DefaultCacheAwareContextLoaderDelegate.java:99)
	at org.springframework.test.context.cache.DefaultCacheAwareContextLoaderDelegate.loadContext(DefaultCacheAwareContextLoaderDelegate.java:124)
	... 47 common frames omitted
Caused by: java.lang.reflect.InaccessibleObjectException: Unable to make jdk.internal.loader.ClassLoaders$AppClassLoader(jdk.internal.loader.ClassLoaders$PlatformClassLoader,jdk.internal.loader.URLClassPath) accessible: module java.base does not "opens jdk.internal.loader" to unnamed module @5fcacc0
	at java.base/java.lang.reflect.AccessibleObject.checkCanSetAccessible(AccessibleObject.java:361)
	at java.base/java.lang.reflect.AccessibleObject.checkCanSetAccessible(AccessibleObject.java:301)
	at java.base/java.lang.reflect.Constructor.checkCanSetAccessible(Constructor.java:189)
	at java.base/java.lang.reflect.Constructor.setAccessible(Constructor.java:182)
	at org.codehaus.groovy.reflection.CachedConstructor$1.run(CachedConstructor.java:44)
	at java.base/java.security.AccessController.doPrivileged(AccessController.java:312)
	at org.codehaus.groovy.reflection.CachedConstructor.<init>(CachedConstructor.java:42)
	at org.codehaus.groovy.reflection.CachedClass$2.initValue(CachedClass.java:79)
	at org.codehaus.groovy.reflection.CachedClass$2.initValue(CachedClass.java:69)
	at org.codehaus.groovy.util.LazyReference.getLocked(LazyReference.java:49)
	at org.codehaus.groovy.util.LazyReference.get(LazyReference.java:36)
	at org.codehaus.groovy.reflection.CachedClass.getConstructors(CachedClass.java:268)
	at groovy.lang.MetaClassImpl.<init>(MetaClassImpl.java:218)
	at groovy.lang.MetaClassImpl.<init>(MetaClassImpl.java:228)
	at groovy.lang.MetaClassRegistry$MetaClassCreationHandle.createNormalMetaClass(MetaClassRegistry.java:171)
	at groovy.lang.MetaClassRegistry$MetaClassCreationHandle.createWithCustomLookup(MetaClassRegistry.java:161)
	at groovy.lang.MetaClassRegistry$MetaClassCreationHandle.create(MetaClassRegistry.java:144)
	at org.codehaus.groovy.reflection.ClassInfo.getMetaClassUnderLock(ClassInfo.java:253)
	at org.codehaus.groovy.reflection.ClassInfo.getMetaClass(ClassInfo.java:285)
	at org.codehaus.groovy.reflection.ClassInfo.getMetaClass(ClassInfo.java:295)
	at org.codehaus.groovy.runtime.metaclass.MetaClassRegistryImpl.getMetaClass(MetaClassRegistryImpl.java:261)
	at org.codehaus.groovy.runtime.InvokerHelper.getMetaClass(InvokerHelper.java:873)
	at org.codehaus.groovy.runtime.InvokerHelper.invokePojoMethod(InvokerHelper.java:906)
	at org.codehaus.groovy.runtime.InvokerHelper.invokeMethod(InvokerHelper.java:898)
	at org.codehaus.groovy.runtime.typehandling.DefaultTypeTransformation.castToBoolean(DefaultTypeTransformation.java:185)
	at org.codehaus.groovy.runtime.typehandling.DefaultTypeTransformation.booleanUnbox(DefaultTypeTransformation.java:74)
	at org.codehaus.groovy.control.customizers.ASTTransformationCustomizer.findASTTranformationClass(ASTTransformationCustomizer.groovy:209)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:64)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:564)
	at org.codehaus.groovy.reflection.CachedMethod.invoke(CachedMethod.java:93)
	at org.codehaus.groovy.runtime.callsite.StaticMetaMethodSite$StaticMetaMethodSiteNoUnwrapNoCoerce.invoke(StaticMetaMethodSite.java:151)
	at org.codehaus.groovy.runtime.callsite.StaticMetaMethodSite.callStatic(StaticMetaMethodSite.java:102)
	at org.codehaus.groovy.runtime.callsite.AbstractCallSite.callStatic(AbstractCallSite.java:214)
	at org.codehaus.groovy.control.customizers.ASTTransformationCustomizer.findPhase(ASTTransformationCustomizer.groovy:226)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:64)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:564)
	at org.codehaus.groovy.reflection.CachedMethod.invoke(CachedMethod.java:93)
	at org.codehaus.groovy.runtime.callsite.StaticMetaMethodSite$StaticMetaMethodSiteNoUnwrapNoCoerce.invoke(StaticMetaMethodSite.java:151)
	at org.codehaus.groovy.runtime.callsite.StaticMetaMethodSite.callStatic(StaticMetaMethodSite.java:102)
	at org.codehaus.groovy.runtime.callsite.AbstractCallSite.callStatic(AbstractCallSite.java:214)
	at org.codehaus.groovy.control.customizers.ASTTransformationCustomizer.<init>(ASTTransformationCustomizer.groovy:180)
	at org.codehaus.groovy.control.customizers.ASTTransformationCustomizer.<init>(ASTTransformationCustomizer.groovy:188)
	at groovy.text.markup.MarkupTemplateEngine.<init>(MarkupTemplateEngine.java:94)
	at org.springframework.web.servlet.view.groovy.GroovyMarkupConfigurer.createTemplateEngine(GroovyMarkupConfigurer.java:160)
	at org.springframework.web.servlet.view.groovy.GroovyMarkupConfigurer.afterPropertiesSet(GroovyMarkupConfigurer.java:153)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1862)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1799)
	... 62 common frames omitted
2020-11-25 20:51:36,324 DEBUG  [main] BasicTypeRegistry: Adding type registration boolean -> org.hibernate.type.BooleanType@59127611
2020-11-25 20:51:36,342 DEBUG  [main] BasicTypeRegistry: Adding type registration boolean -> org.hibernate.type.BooleanType@59127611
2020-11-25 20:51:36,343 DEBUG  [main] BasicTypeRegistry: Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@59127611
2020-11-25 20:51:36,343 DEBUG  [main] BasicTypeRegistry: Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@18db3b3c
2020-11-25 20:51:36,345 DEBUG  [main] BasicTypeRegistry: Adding type registration true_false -> org.hibernate.type.TrueFalseType@5c1c9881
2020-11-25 20:51:36,345 DEBUG  [main] BasicTypeRegistry: Adding type registration yes_no -> org.hibernate.type.YesNoType@5d37aa0f
2020-11-25 20:51:36,346 DEBUG  [main] BasicTypeRegistry: Adding type registration byte -> org.hibernate.type.ByteType@3e4afd10
2020-11-25 20:51:36,346 DEBUG  [main] BasicTypeRegistry: Adding type registration byte -> org.hibernate.type.ByteType@3e4afd10
2020-11-25 20:51:36,346 DEBUG  [main] BasicTypeRegistry: Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@3e4afd10
2020-11-25 20:51:36,347 DEBUG  [main] BasicTypeRegistry: Adding type registration character -> org.hibernate.type.CharacterType@48d44b46
2020-11-25 20:51:36,347 DEBUG  [main] BasicTypeRegistry: Adding type registration char -> org.hibernate.type.CharacterType@48d44b46
2020-11-25 20:51:36,347 DEBUG  [main] BasicTypeRegistry: Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@48d44b46
2020-11-25 20:51:36,347 DEBUG  [main] BasicTypeRegistry: Adding type registration short -> org.hibernate.type.ShortType@dd20ebc
2020-11-25 20:51:36,347 DEBUG  [main] BasicTypeRegistry: Adding type registration short -> org.hibernate.type.ShortType@dd20ebc
2020-11-25 20:51:36,347 DEBUG  [main] BasicTypeRegistry: Adding type registration java.lang.Short -> org.hibernate.type.ShortType@dd20ebc
2020-11-25 20:51:36,347 DEBUG  [main] BasicTypeRegistry: Adding type registration integer -> org.hibernate.type.IntegerType@5f7cd50e
2020-11-25 20:51:36,347 DEBUG  [main] BasicTypeRegistry: Adding type registration int -> org.hibernate.type.IntegerType@5f7cd50e
2020-11-25 20:51:36,348 DEBUG  [main] BasicTypeRegistry: Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@5f7cd50e
2020-11-25 20:51:36,348 DEBUG  [main] BasicTypeRegistry: Adding type registration long -> org.hibernate.type.LongType@359e27d2
2020-11-25 20:51:36,348 DEBUG  [main] BasicTypeRegistry: Adding type registration long -> org.hibernate.type.LongType@359e27d2
2020-11-25 20:51:36,348 DEBUG  [main] BasicTypeRegistry: Adding type registration java.lang.Long -> org.hibernate.type.LongType@359e27d2
2020-11-25 20:51:36,348 DEBUG  [main] BasicTypeRegistry: Adding type registration float -> org.hibernate.type.FloatType@29b8df5
2020-11-25 20:51:36,348 DEBUG  [main] BasicTypeRegistry: Adding type registration float -> org.hibernate.type.FloatType@29b8df5
2020-11-25 20:51:36,349 DEBUG  [main] BasicTypeRegistry: Adding type registration java.lang.Float -> org.hibernate.type.FloatType@29b8df5
2020-11-25 20:51:36,349 DEBUG  [main] BasicTypeRegistry: Adding type registration double -> org.hibernate.type.DoubleType@36cfe107
2020-11-25 20:51:36,349 DEBUG  [main] BasicTypeRegistry: Adding type registration double -> org.hibernate.type.DoubleType@36cfe107
2020-11-25 20:51:36,349 DEBUG  [main] BasicTypeRegistry: Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@36cfe107
2020-11-25 20:51:36,349 DEBUG  [main] BasicTypeRegistry: Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@139089a4
2020-11-25 20:51:36,349 DEBUG  [main] BasicTypeRegistry: Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@139089a4
2020-11-25 20:51:36,349 DEBUG  [main] BasicTypeRegistry: Adding type registration big_integer -> org.hibernate.type.BigIntegerType@9f1ca74
2020-11-25 20:51:36,350 DEBUG  [main] BasicTypeRegistry: Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@9f1ca74
2020-11-25 20:51:36,350 DEBUG  [main] BasicTypeRegistry: Adding type registration string -> org.hibernate.type.StringType@393ae7a0
2020-11-25 20:51:36,350 DEBUG  [main] BasicTypeRegistry: Adding type registration java.lang.String -> org.hibernate.type.StringType@393ae7a0
2020-11-25 20:51:36,350 DEBUG  [main] BasicTypeRegistry: Adding type registration nstring -> org.hibernate.type.StringNVarcharType@7ee12d58
2020-11-25 20:51:36,350 DEBUG  [main] BasicTypeRegistry: Adding type registration ncharacter -> org.hibernate.type.CharacterNCharType@34e990cc
2020-11-25 20:51:36,350 DEBUG  [main] BasicTypeRegistry: Adding type registration url -> org.hibernate.type.UrlType@6de84336
2020-11-25 20:51:36,350 DEBUG  [main] BasicTypeRegistry: Adding type registration java.net.URL -> org.hibernate.type.UrlType@6de84336
2020-11-25 20:51:36,351 DEBUG  [main] BasicTypeRegistry: Adding type registration Duration -> org.hibernate.type.DurationType@69b37f5c
2020-11-25 20:51:36,351 DEBUG  [main] BasicTypeRegistry: Adding type registration java.time.Duration -> org.hibernate.type.DurationType@69b37f5c
2020-11-25 20:51:36,351 DEBUG  [main] BasicTypeRegistry: Adding type registration Instant -> org.hibernate.type.InstantType@580ffea
2020-11-25 20:51:36,351 DEBUG  [main] BasicTypeRegistry: Adding type registration java.time.Instant -> org.hibernate.type.InstantType@580ffea
2020-11-25 20:51:36,351 DEBUG  [main] BasicTypeRegistry: Adding type registration LocalDateTime -> org.hibernate.type.LocalDateTimeType@79d49790
2020-11-25 20:51:36,351 DEBUG  [main] BasicTypeRegistry: Adding type registration java.time.LocalDateTime -> org.hibernate.type.LocalDateTimeType@79d49790
2020-11-25 20:51:36,352 DEBUG  [main] BasicTypeRegistry: Adding type registration LocalDate -> org.hibernate.type.LocalDateType@3e9fb485
2020-11-25 20:51:36,352 DEBUG  [main] BasicTypeRegistry: Adding type registration java.time.LocalDate -> org.hibernate.type.LocalDateType@3e9fb485
2020-11-25 20:51:36,352 DEBUG  [main] BasicTypeRegistry: Adding type registration LocalTime -> org.hibernate.type.LocalTimeType@419f0ea
2020-11-25 20:51:36,352 DEBUG  [main] BasicTypeRegistry: Adding type registration java.time.LocalTime -> org.hibernate.type.LocalTimeType@419f0ea
2020-11-25 20:51:36,352 DEBUG  [main] BasicTypeRegistry: Adding type registration OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@87aec6a
2020-11-25 20:51:36,352 DEBUG  [main] BasicTypeRegistry: Adding type registration java.time.OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@87aec6a
2020-11-25 20:51:36,353 DEBUG  [main] BasicTypeRegistry: Adding type registration OffsetTime -> org.hibernate.type.OffsetTimeType@5529522f
2020-11-25 20:51:36,353 DEBUG  [main] BasicTypeRegistry: Adding type registration java.time.OffsetTime -> org.hibernate.type.OffsetTimeType@5529522f
2020-11-25 20:51:36,353 DEBUG  [main] BasicTypeRegistry: Adding type registration ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@152e7703
2020-11-25 20:51:36,353 DEBUG  [main] BasicTypeRegistry: Adding type registration java.time.ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@152e7703
2020-11-25 20:51:36,353 DEBUG  [main] BasicTypeRegistry: Adding type registration date -> org.hibernate.type.DateType@24fc2c80
2020-11-25 20:51:36,353 DEBUG  [main] BasicTypeRegistry: Adding type registration java.sql.Date -> org.hibernate.type.DateType@24fc2c80
2020-11-25 20:51:36,354 DEBUG  [main] BasicTypeRegistry: Adding type registration time -> org.hibernate.type.TimeType@48b3b1b8
2020-11-25 20:51:36,354 DEBUG  [main] BasicTypeRegistry: Adding type registration java.sql.Time -> org.hibernate.type.TimeType@48b3b1b8
2020-11-25 20:51:36,354 DEBUG  [main] BasicTypeRegistry: Adding type registration timestamp -> org.hibernate.type.TimestampType@686b1e2d
2020-11-25 20:51:36,354 DEBUG  [main] BasicTypeRegistry: Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@686b1e2d
2020-11-25 20:51:36,354 DEBUG  [main] BasicTypeRegistry: Adding type registration java.util.Date -> org.hibernate.type.TimestampType@686b1e2d
2020-11-25 20:51:36,354 DEBUG  [main] BasicTypeRegistry: Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@652b3733
2020-11-25 20:51:36,354 DEBUG  [main] BasicTypeRegistry: Adding type registration calendar -> org.hibernate.type.CalendarType@5be7b749
2020-11-25 20:51:36,355 DEBUG  [main] BasicTypeRegistry: Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@5be7b749
2020-11-25 20:51:36,355 DEBUG  [main] BasicTypeRegistry: Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@5be7b749
2020-11-25 20:51:36,355 DEBUG  [main] BasicTypeRegistry: Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@177ddd24
2020-11-25 20:51:36,355 DEBUG  [main] BasicTypeRegistry: Adding type registration locale -> org.hibernate.type.LocaleType@61ad30f6
2020-11-25 20:51:36,355 DEBUG  [main] BasicTypeRegistry: Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@61ad30f6
2020-11-25 20:51:36,355 DEBUG  [main] BasicTypeRegistry: Adding type registration currency -> org.hibernate.type.CurrencyType@574ebdaf
2020-11-25 20:51:36,355 DEBUG  [main] BasicTypeRegistry: Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@574ebdaf
2020-11-25 20:51:36,355 DEBUG  [main] BasicTypeRegistry: Adding type registration timezone -> org.hibernate.type.TimeZoneType@123ca460
2020-11-25 20:51:36,355 DEBUG  [main] BasicTypeRegistry: Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@123ca460
2020-11-25 20:51:36,355 DEBUG  [main] BasicTypeRegistry: Adding type registration class -> org.hibernate.type.ClassType@3c9f4376
2020-11-25 20:51:36,355 DEBUG  [main] BasicTypeRegistry: Adding type registration java.lang.Class -> org.hibernate.type.ClassType@3c9f4376
2020-11-25 20:51:36,355 DEBUG  [main] BasicTypeRegistry: Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@1958c0d9
2020-11-25 20:51:36,356 DEBUG  [main] BasicTypeRegistry: Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@1958c0d9
2020-11-25 20:51:36,356 DEBUG  [main] BasicTypeRegistry: Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@5fc7255c
2020-11-25 20:51:36,356 DEBUG  [main] BasicTypeRegistry: Adding type registration binary -> org.hibernate.type.BinaryType@79ba0285
2020-11-25 20:51:36,356 DEBUG  [main] BasicTypeRegistry: Adding type registration byte[] -> org.hibernate.type.BinaryType@79ba0285
2020-11-25 20:51:36,356 DEBUG  [main] BasicTypeRegistry: Adding type registration [B -> org.hibernate.type.BinaryType@79ba0285
2020-11-25 20:51:36,356 DEBUG  [main] BasicTypeRegistry: Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@598778cc
2020-11-25 20:51:36,356 DEBUG  [main] BasicTypeRegistry: Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@598778cc
2020-11-25 20:51:36,356 DEBUG  [main] BasicTypeRegistry: Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@598778cc
2020-11-25 20:51:36,356 DEBUG  [main] BasicTypeRegistry: Adding type registration row_version -> org.hibernate.type.RowVersionType@11cadb32
2020-11-25 20:51:36,356 DEBUG  [main] BasicTypeRegistry: Adding type registration image -> org.hibernate.type.ImageType@37986daf
2020-11-25 20:51:36,356 DEBUG  [main] BasicTypeRegistry: Adding type registration characters -> org.hibernate.type.CharArrayType@710afd47
2020-11-25 20:51:36,357 DEBUG  [main] BasicTypeRegistry: Adding type registration char[] -> org.hibernate.type.CharArrayType@710afd47
2020-11-25 20:51:36,357 DEBUG  [main] BasicTypeRegistry: Adding type registration [C -> org.hibernate.type.CharArrayType@710afd47
2020-11-25 20:51:36,357 DEBUG  [main] BasicTypeRegistry: Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@12670e55
2020-11-25 20:51:36,357 DEBUG  [main] BasicTypeRegistry: Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@12670e55
2020-11-25 20:51:36,357 DEBUG  [main] BasicTypeRegistry: Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@12670e55
2020-11-25 20:51:36,357 DEBUG  [main] BasicTypeRegistry: Adding type registration text -> org.hibernate.type.TextType@32ba5c65
2020-11-25 20:51:36,357 DEBUG  [main] BasicTypeRegistry: Adding type registration ntext -> org.hibernate.type.NTextType@10166230
2020-11-25 20:51:36,357 DEBUG  [main] BasicTypeRegistry: Adding type registration blob -> org.hibernate.type.BlobType@13dd7887
2020-11-25 20:51:36,357 DEBUG  [main] BasicTypeRegistry: Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@13dd7887
2020-11-25 20:51:36,357 DEBUG  [main] BasicTypeRegistry: Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@3cbfdf5c
2020-11-25 20:51:36,357 DEBUG  [main] BasicTypeRegistry: Adding type registration clob -> org.hibernate.type.ClobType@58636b50
2020-11-25 20:51:36,357 DEBUG  [main] BasicTypeRegistry: Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@58636b50
2020-11-25 20:51:36,357 DEBUG  [main] BasicTypeRegistry: Adding type registration nclob -> org.hibernate.type.NClobType@1e5aacd9
2020-11-25 20:51:36,357 DEBUG  [main] BasicTypeRegistry: Adding type registration java.sql.NClob -> org.hibernate.type.NClobType@1e5aacd9
2020-11-25 20:51:36,358 DEBUG  [main] BasicTypeRegistry: Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@120411ec
2020-11-25 20:51:36,358 DEBUG  [main] BasicTypeRegistry: Adding type registration materialized_nclob -> org.hibernate.type.MaterializedNClobType@1a34a51e
2020-11-25 20:51:36,358 DEBUG  [main] BasicTypeRegistry: Adding type registration serializable -> org.hibernate.type.SerializableType@6b091a92
2020-11-25 20:51:36,358 DEBUG  [main] BasicTypeRegistry: Adding type registration object -> org.hibernate.type.ObjectType@35329a05
2020-11-25 20:51:36,358 DEBUG  [main] BasicTypeRegistry: Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@35329a05
2020-11-25 20:51:36,358 DEBUG  [main] BasicTypeRegistry: Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@147ee877
2020-11-25 20:51:36,358 DEBUG  [main] BasicTypeRegistry: Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@12619285
2020-11-25 20:51:36,358 DEBUG  [main] BasicTypeRegistry: Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@1081906a
2020-11-25 20:51:36,358 DEBUG  [main] BasicTypeRegistry: Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@5a27a096
2020-11-25 20:51:36,358 DEBUG  [main] BasicTypeRegistry: Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@39f9c6f5
2020-11-25 20:51:36,358 DEBUG  [main] BasicTypeRegistry: Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@27129ef5
2020-11-25 20:51:36,358 DEBUG  [main] BasicTypeRegistry: Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@3b0c48bd
2020-11-25 20:51:36,359 DEBUG  [main] BasicTypeRegistry: Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@5c486c5a
2020-11-25 20:51:36,368 DEBUG  [main] TypeConfiguration$Scope: Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@7c9a5397] to MetadataBuildingContext [org.hibernate.boot.internal.MetadataBuildingContextRootImpl@198fb504]
2020-11-25 20:51:36,376 DEBUG  [main] EnumType: Using NAMED-based conversion for Enum com.sf.back.entities.Kind
2020-11-25 20:51:36,377 DEBUG  [main] EnumType: Using NAMED-based conversion for Enum com.sf.back.entities.Kind
2020-11-25 20:51:36,395 DEBUG  [main] TypeConfiguration$Scope: Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@7c9a5397] to SessionFactoryImpl [org.hibernate.internal.SessionFactoryImpl@2a542f65]
2020-11-25 20:51:36,396 DEBUG  [main] EnumType: Using NAMED-based conversion for Enum com.sf.back.entities.Kind
2020-11-25 20:51:36,397 DEBUG  [main] EnumType: Using NAMED-based conversion for Enum com.sf.back.entities.Kind
2020-11-25 20:51:36,435 DEBUG  [main] EnumType: Using NAMED-based conversion for Enum com.sf.back.entities.Kind
2020-11-25 20:51:36,526 DEBUG  [main] EnumType: Using NAMED-based conversion for Enum com.sf.back.entities.Kind
2020-11-25 20:51:36,571 DEBUG  [main] EnumType: Using NAMED-based conversion for Enum com.sf.back.entities.Kind
2020-11-25 20:51:36,572 DEBUG  [main] EnumType: Using NAMED-based conversion for Enum com.sf.back.entities.Kind
2020-11-25 20:51:36,577 DEBUG  [main] EnumType: Using NAMED-based conversion for Enum com.sf.back.entities.Kind
2020-11-25 20:51:36,599 TRACE  [main] TypeConfiguration$Scope: Handling #sessionFactoryCreated from [org.hibernate.internal.SessionFactoryImpl@2a542f65] for TypeConfiguration
2020-11-25 20:51:36,789 WARN   [main] JpaBaseConfiguration$JpaWebConfiguration: spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2020-11-25 20:51:36,922 WARN   [main] GenericWebApplicationContext: Exception encountered during context initialization - cancelling refresh attempt: org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'groovyMarkupConfigurer' defined in class path resource [org/springframework/boot/autoconfigure/groovy/template/GroovyTemplateAutoConfiguration$GroovyMarkupConfiguration.class]: Invocation of init method failed; nested exception is java.lang.reflect.InaccessibleObjectException: Unable to make jdk.internal.loader.ClassLoaders$AppClassLoader(jdk.internal.loader.ClassLoaders$PlatformClassLoader,jdk.internal.loader.URLClassPath) accessible: module java.base does not "opens jdk.internal.loader" to unnamed module @5fcacc0
2020-11-25 20:51:36,925 TRACE  [main] TypeConfiguration$Scope: Handling #sessionFactoryClosed from [org.hibernate.internal.SessionFactoryImpl@2a542f65] for TypeConfiguration
2020-11-25 20:51:36,925 DEBUG  [main] TypeConfiguration$Scope: Un-scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration$Scope@3ea4cfe0] from SessionFactory [org.hibernate.internal.SessionFactoryImpl@2a542f65]
2020-11-25 20:51:36,936 ERROR  [main] SpringApplication: Application run failed
org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'groovyMarkupConfigurer' defined in class path resource [org/springframework/boot/autoconfigure/groovy/template/GroovyTemplateAutoConfiguration$GroovyMarkupConfiguration.class]: Invocation of init method failed; nested exception is java.lang.reflect.InaccessibleObjectException: Unable to make jdk.internal.loader.ClassLoaders$AppClassLoader(jdk.internal.loader.ClassLoaders$PlatformClassLoader,jdk.internal.loader.URLClassPath) accessible: module java.base does not "opens jdk.internal.loader" to unnamed module @5fcacc0
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1803)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:595)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:517)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:323)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:222)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:321)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:202)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(DefaultListableBeanFactory.java:879)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:878)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:550)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:747)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:397)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:315)
	at org.springframework.boot.test.context.SpringBootContextLoader.loadContext(SpringBootContextLoader.java:125)
	at org.springframework.test.context.cache.DefaultCacheAwareContextLoaderDelegate.loadContextInternal(DefaultCacheAwareContextLoaderDelegate.java:99)
	at org.springframework.test.context.cache.DefaultCacheAwareContextLoaderDelegate.loadContext(DefaultCacheAwareContextLoaderDelegate.java:124)
	at org.springframework.test.context.support.DefaultTestContext.getApplicationContext(DefaultTestContext.java:123)
	at org.springframework.test.context.web.ServletTestExecutionListener.setUpRequestContextIfNecessary(ServletTestExecutionListener.java:190)
	at org.springframework.test.context.web.ServletTestExecutionListener.prepareTestInstance(ServletTestExecutionListener.java:132)
	at org.springframework.test.context.TestContextManager.prepareTestInstance(TestContextManager.java:244)
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner.createTest(SpringJUnit4ClassRunner.java:227)
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner$1.runReflectiveCall(SpringJUnit4ClassRunner.java:289)
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner.methodBlock(SpringJUnit4ClassRunner.java:291)
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner.runChild(SpringJUnit4ClassRunner.java:246)
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner.runChild(SpringJUnit4ClassRunner.java:97)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:290)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:71)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:58)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268)
	at org.junit.internal.runners.statements.RunBefores.evaluate(RunBefores.java:26)
	at org.springframework.test.context.junit4.statements.RunBeforeTestClassCallbacks.evaluate(RunBeforeTestClassCallbacks.java:61)
	at org.junit.internal.runners.statements.RunAfters.evaluate(RunAfters.java:27)
	at org.springframework.test.context.junit4.statements.RunAfterTestClassCallbacks.evaluate(RunAfterTestClassCallbacks.java:70)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:363)
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner.run(SpringJUnit4ClassRunner.java:190)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:137)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:115)
	at org.junit.vintage.engine.execution.RunnerExecutor.execute(RunnerExecutor.java:40)
	at java.base/java.util.stream.ForEachOps$ForEachOp$OfRef.accept(ForEachOps.java:183)
	at java.base/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:195)
	at java.base/java.util.Iterator.forEachRemaining(Iterator.java:133)
	at java.base/java.util.Spliterators$IteratorSpliterator.forEachRemaining(Spliterators.java:1801)
	at java.base/java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:484)
	at java.base/java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:474)
	at java.base/java.util.stream.ForEachOps$ForEachOp.evaluateSequential(ForEachOps.java:150)
	at java.base/java.util.stream.ForEachOps$ForEachOp$OfRef.evaluateSequential(ForEachOps.java:173)
	at java.base/java.util.stream.AbstractPipeline.evaluate(AbstractPipeline.java:234)
	at java.base/java.util.stream.ReferencePipeline.forEach(ReferencePipeline.java:497)
	at org.junit.vintage.engine.VintageTestEngine.executeAllChildren(VintageTestEngine.java:80)
	at org.junit.vintage.engine.VintageTestEngine.execute(VintageTestEngine.java:71)
	at org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:220)
	at org.junit.platform.launcher.core.DefaultLauncher.lambda$execute$6(DefaultLauncher.java:188)
	at org.junit.platform.launcher.core.DefaultLauncher.withInterceptedStreams(DefaultLauncher.java:202)
	at org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:181)
	at org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:128)
	at org.apache.maven.surefire.junitplatform.JUnitPlatformProvider.invokeAllTests(JUnitPlatformProvider.java:150)
	at org.apache.maven.surefire.junitplatform.JUnitPlatformProvider.invoke(JUnitPlatformProvider.java:124)
	at org.apache.maven.surefire.booter.ForkedBooter.invokeProviderInSameClassLoader(ForkedBooter.java:384)
	at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:345)
	at org.apache.maven.surefire.booter.ForkedBooter.execute(ForkedBooter.java:126)
	at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:418)
Caused by: java.lang.reflect.InaccessibleObjectException: Unable to make jdk.internal.loader.ClassLoaders$AppClassLoader(jdk.internal.loader.ClassLoaders$PlatformClassLoader,jdk.internal.loader.URLClassPath) accessible: module java.base does not "opens jdk.internal.loader" to unnamed module @5fcacc0
	at java.base/java.lang.reflect.AccessibleObject.checkCanSetAccessible(AccessibleObject.java:361)
	at java.base/java.lang.reflect.AccessibleObject.checkCanSetAccessible(AccessibleObject.java:301)
	at java.base/java.lang.reflect.Constructor.checkCanSetAccessible(Constructor.java:189)
	at java.base/java.lang.reflect.Constructor.setAccessible(Constructor.java:182)
	at org.codehaus.groovy.reflection.CachedConstructor$1.run(CachedConstructor.java:44)
	at java.base/java.security.AccessController.doPrivileged(AccessController.java:312)
	at org.codehaus.groovy.reflection.CachedConstructor.<init>(CachedConstructor.java:42)
	at org.codehaus.groovy.reflection.CachedClass$2.initValue(CachedClass.java:79)
	at org.codehaus.groovy.reflection.CachedClass$2.initValue(CachedClass.java:69)
	at org.codehaus.groovy.util.LazyReference.getLocked(LazyReference.java:49)
	at org.codehaus.groovy.util.LazyReference.get(LazyReference.java:36)
	at org.codehaus.groovy.reflection.CachedClass.getConstructors(CachedClass.java:268)
	at groovy.lang.MetaClassImpl.<init>(MetaClassImpl.java:218)
	at groovy.lang.MetaClassImpl.<init>(MetaClassImpl.java:228)
	at groovy.lang.MetaClassRegistry$MetaClassCreationHandle.createNormalMetaClass(MetaClassRegistry.java:171)
	at groovy.lang.MetaClassRegistry$MetaClassCreationHandle.createWithCustomLookup(MetaClassRegistry.java:161)
	at groovy.lang.MetaClassRegistry$MetaClassCreationHandle.create(MetaClassRegistry.java:144)
	at org.codehaus.groovy.reflection.ClassInfo.getMetaClassUnderLock(ClassInfo.java:253)
	at org.codehaus.groovy.reflection.ClassInfo.getMetaClass(ClassInfo.java:285)
	at org.codehaus.groovy.reflection.ClassInfo.getMetaClass(ClassInfo.java:295)
	at org.codehaus.groovy.runtime.metaclass.MetaClassRegistryImpl.getMetaClass(MetaClassRegistryImpl.java:261)
	at org.codehaus.groovy.runtime.InvokerHelper.getMetaClass(InvokerHelper.java:873)
	at org.codehaus.groovy.runtime.InvokerHelper.invokePojoMethod(InvokerHelper.java:906)
	at org.codehaus.groovy.runtime.InvokerHelper.invokeMethod(InvokerHelper.java:898)
	at org.codehaus.groovy.runtime.typehandling.DefaultTypeTransformation.castToBoolean(DefaultTypeTransformation.java:185)
	at org.codehaus.groovy.runtime.typehandling.DefaultTypeTransformation.booleanUnbox(DefaultTypeTransformation.java:74)
	at org.codehaus.groovy.control.customizers.ASTTransformationCustomizer.findASTTranformationClass(ASTTransformationCustomizer.groovy:209)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:64)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:564)
	at org.codehaus.groovy.reflection.CachedMethod.invoke(CachedMethod.java:93)
	at org.codehaus.groovy.runtime.callsite.StaticMetaMethodSite$StaticMetaMethodSiteNoUnwrapNoCoerce.invoke(StaticMetaMethodSite.java:151)
	at org.codehaus.groovy.runtime.callsite.StaticMetaMethodSite.callStatic(StaticMetaMethodSite.java:102)
	at org.codehaus.groovy.runtime.callsite.AbstractCallSite.callStatic(AbstractCallSite.java:214)
	at org.codehaus.groovy.control.customizers.ASTTransformationCustomizer.findPhase(ASTTransformationCustomizer.groovy:226)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:64)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:564)
	at org.codehaus.groovy.reflection.CachedMethod.invoke(CachedMethod.java:93)
	at org.codehaus.groovy.runtime.callsite.StaticMetaMethodSite$StaticMetaMethodSiteNoUnwrapNoCoerce.invoke(StaticMetaMethodSite.java:151)
	at org.codehaus.groovy.runtime.callsite.StaticMetaMethodSite.callStatic(StaticMetaMethodSite.java:102)
	at org.codehaus.groovy.runtime.callsite.AbstractCallSite.callStatic(AbstractCallSite.java:214)
	at org.codehaus.groovy.control.customizers.ASTTransformationCustomizer.<init>(ASTTransformationCustomizer.groovy:180)
	at org.codehaus.groovy.control.customizers.ASTTransformationCustomizer.<init>(ASTTransformationCustomizer.groovy:188)
	at groovy.text.markup.MarkupTemplateEngine.<init>(MarkupTemplateEngine.java:94)
	at org.springframework.web.servlet.view.groovy.GroovyMarkupConfigurer.createTemplateEngine(GroovyMarkupConfigurer.java:160)
	at org.springframework.web.servlet.view.groovy.GroovyMarkupConfigurer.afterPropertiesSet(GroovyMarkupConfigurer.java:153)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1862)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1799)
	... 62 common frames omitted
2020-11-25 20:51:36,948 ERROR  [main] TestContextManager: Caught exception while allowing TestExecutionListener [org.springframework.test.context.web.ServletTestExecutionListener@4237d6e4] to prepare test instance [com.sf.service.ProblemServiceTest@285e483f]
java.lang.IllegalStateException: Failed to load ApplicationContext
	at org.springframework.test.context.cache.DefaultCacheAwareContextLoaderDelegate.loadContext(DefaultCacheAwareContextLoaderDelegate.java:132)
	at org.springframework.test.context.support.DefaultTestContext.getApplicationContext(DefaultTestContext.java:123)
	at org.springframework.test.context.web.ServletTestExecutionListener.setUpRequestContextIfNecessary(ServletTestExecutionListener.java:190)
	at org.springframework.test.context.web.ServletTestExecutionListener.prepareTestInstance(ServletTestExecutionListener.java:132)
	at org.springframework.test.context.TestContextManager.prepareTestInstance(TestContextManager.java:244)
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner.createTest(SpringJUnit4ClassRunner.java:227)
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner$1.runReflectiveCall(SpringJUnit4ClassRunner.java:289)
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner.methodBlock(SpringJUnit4ClassRunner.java:291)
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner.runChild(SpringJUnit4ClassRunner.java:246)
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner.runChild(SpringJUnit4ClassRunner.java:97)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:290)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:71)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:58)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268)
	at org.junit.internal.runners.statements.RunBefores.evaluate(RunBefores.java:26)
	at org.springframework.test.context.junit4.statements.RunBeforeTestClassCallbacks.evaluate(RunBeforeTestClassCallbacks.java:61)
	at org.junit.internal.runners.statements.RunAfters.evaluate(RunAfters.java:27)
	at org.springframework.test.context.junit4.statements.RunAfterTestClassCallbacks.evaluate(RunAfterTestClassCallbacks.java:70)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:363)
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner.run(SpringJUnit4ClassRunner.java:190)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:137)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:115)
	at org.junit.vintage.engine.execution.RunnerExecutor.execute(RunnerExecutor.java:40)
	at java.base/java.util.stream.ForEachOps$ForEachOp$OfRef.accept(ForEachOps.java:183)
	at java.base/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:195)
	at java.base/java.util.Iterator.forEachRemaining(Iterator.java:133)
	at java.base/java.util.Spliterators$IteratorSpliterator.forEachRemaining(Spliterators.java:1801)
	at java.base/java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:484)
	at java.base/java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:474)
	at java.base/java.util.stream.ForEachOps$ForEachOp.evaluateSequential(ForEachOps.java:150)
	at java.base/java.util.stream.ForEachOps$ForEachOp$OfRef.evaluateSequential(ForEachOps.java:173)
	at java.base/java.util.stream.AbstractPipeline.evaluate(AbstractPipeline.java:234)
	at java.base/java.util.stream.ReferencePipeline.forEach(ReferencePipeline.java:497)
	at org.junit.vintage.engine.VintageTestEngine.executeAllChildren(VintageTestEngine.java:80)
	at org.junit.vintage.engine.VintageTestEngine.execute(VintageTestEngine.java:71)
	at org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:220)
	at org.junit.platform.launcher.core.DefaultLauncher.lambda$execute$6(DefaultLauncher.java:188)
	at org.junit.platform.launcher.core.DefaultLauncher.withInterceptedStreams(DefaultLauncher.java:202)
	at org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:181)
	at org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:128)
	at org.apache.maven.surefire.junitplatform.JUnitPlatformProvider.invokeAllTests(JUnitPlatformProvider.java:150)
	at org.apache.maven.surefire.junitplatform.JUnitPlatformProvider.invoke(JUnitPlatformProvider.java:124)
	at org.apache.maven.surefire.booter.ForkedBooter.invokeProviderInSameClassLoader(ForkedBooter.java:384)
	at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:345)
	at org.apache.maven.surefire.booter.ForkedBooter.execute(ForkedBooter.java:126)
	at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:418)
Caused by: org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'groovyMarkupConfigurer' defined in class path resource [org/springframework/boot/autoconfigure/groovy/template/GroovyTemplateAutoConfiguration$GroovyMarkupConfiguration.class]: Invocation of init method failed; nested exception is java.lang.reflect.InaccessibleObjectException: Unable to make jdk.internal.loader.ClassLoaders$AppClassLoader(jdk.internal.loader.ClassLoaders$PlatformClassLoader,jdk.internal.loader.URLClassPath) accessible: module java.base does not "opens jdk.internal.loader" to unnamed module @5fcacc0
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1803)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:595)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:517)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:323)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:222)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:321)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:202)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(DefaultListableBeanFactory.java:879)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:878)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:550)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:747)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:397)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:315)
	at org.springframework.boot.test.context.SpringBootContextLoader.loadContext(SpringBootContextLoader.java:125)
	at org.springframework.test.context.cache.DefaultCacheAwareContextLoaderDelegate.loadContextInternal(DefaultCacheAwareContextLoaderDelegate.java:99)
	at org.springframework.test.context.cache.DefaultCacheAwareContextLoaderDelegate.loadContext(DefaultCacheAwareContextLoaderDelegate.java:124)
	... 47 common frames omitted
Caused by: java.lang.reflect.InaccessibleObjectException: Unable to make jdk.internal.loader.ClassLoaders$AppClassLoader(jdk.internal.loader.ClassLoaders$PlatformClassLoader,jdk.internal.loader.URLClassPath) accessible: module java.base does not "opens jdk.internal.loader" to unnamed module @5fcacc0
	at java.base/java.lang.reflect.AccessibleObject.checkCanSetAccessible(AccessibleObject.java:361)
	at java.base/java.lang.reflect.AccessibleObject.checkCanSetAccessible(AccessibleObject.java:301)
	at java.base/java.lang.reflect.Constructor.checkCanSetAccessible(Constructor.java:189)
	at java.base/java.lang.reflect.Constructor.setAccessible(Constructor.java:182)
	at org.codehaus.groovy.reflection.CachedConstructor$1.run(CachedConstructor.java:44)
	at java.base/java.security.AccessController.doPrivileged(AccessController.java:312)
	at org.codehaus.groovy.reflection.CachedConstructor.<init>(CachedConstructor.java:42)
	at org.codehaus.groovy.reflection.CachedClass$2.initValue(CachedClass.java:79)
	at org.codehaus.groovy.reflection.CachedClass$2.initValue(CachedClass.java:69)
	at org.codehaus.groovy.util.LazyReference.getLocked(LazyReference.java:49)
	at org.codehaus.groovy.util.LazyReference.get(LazyReference.java:36)
	at org.codehaus.groovy.reflection.CachedClass.getConstructors(CachedClass.java:268)
	at groovy.lang.MetaClassImpl.<init>(MetaClassImpl.java:218)
	at groovy.lang.MetaClassImpl.<init>(MetaClassImpl.java:228)
	at groovy.lang.MetaClassRegistry$MetaClassCreationHandle.createNormalMetaClass(MetaClassRegistry.java:171)
	at groovy.lang.MetaClassRegistry$MetaClassCreationHandle.createWithCustomLookup(MetaClassRegistry.java:161)
	at groovy.lang.MetaClassRegistry$MetaClassCreationHandle.create(MetaClassRegistry.java:144)
	at org.codehaus.groovy.reflection.ClassInfo.getMetaClassUnderLock(ClassInfo.java:253)
	at org.codehaus.groovy.reflection.ClassInfo.getMetaClass(ClassInfo.java:285)
	at org.codehaus.groovy.reflection.ClassInfo.getMetaClass(ClassInfo.java:295)
	at org.codehaus.groovy.runtime.metaclass.MetaClassRegistryImpl.getMetaClass(MetaClassRegistryImpl.java:261)
	at org.codehaus.groovy.runtime.InvokerHelper.getMetaClass(InvokerHelper.java:873)
	at org.codehaus.groovy.runtime.InvokerHelper.invokePojoMethod(InvokerHelper.java:906)
	at org.codehaus.groovy.runtime.InvokerHelper.invokeMethod(InvokerHelper.java:898)
	at org.codehaus.groovy.runtime.typehandling.DefaultTypeTransformation.castToBoolean(DefaultTypeTransformation.java:185)
	at org.codehaus.groovy.runtime.typehandling.DefaultTypeTransformation.booleanUnbox(DefaultTypeTransformation.java:74)
	at org.codehaus.groovy.control.customizers.ASTTransformationCustomizer.findASTTranformationClass(ASTTransformationCustomizer.groovy:209)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:64)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:564)
	at org.codehaus.groovy.reflection.CachedMethod.invoke(CachedMethod.java:93)
	at org.codehaus.groovy.runtime.callsite.StaticMetaMethodSite$StaticMetaMethodSiteNoUnwrapNoCoerce.invoke(StaticMetaMethodSite.java:151)
	at org.codehaus.groovy.runtime.callsite.StaticMetaMethodSite.callStatic(StaticMetaMethodSite.java:102)
	at org.codehaus.groovy.runtime.callsite.AbstractCallSite.callStatic(AbstractCallSite.java:214)
	at org.codehaus.groovy.control.customizers.ASTTransformationCustomizer.findPhase(ASTTransformationCustomizer.groovy:226)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:64)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:564)
	at org.codehaus.groovy.reflection.CachedMethod.invoke(CachedMethod.java:93)
	at org.codehaus.groovy.runtime.callsite.StaticMetaMethodSite$StaticMetaMethodSiteNoUnwrapNoCoerce.invoke(StaticMetaMethodSite.java:151)
	at org.codehaus.groovy.runtime.callsite.StaticMetaMethodSite.callStatic(StaticMetaMethodSite.java:102)
	at org.codehaus.groovy.runtime.callsite.AbstractCallSite.callStatic(AbstractCallSite.java:214)
	at org.codehaus.groovy.control.customizers.ASTTransformationCustomizer.<init>(ASTTransformationCustomizer.groovy:180)
	at org.codehaus.groovy.control.customizers.ASTTransformationCustomizer.<init>(ASTTransformationCustomizer.groovy:188)
	at groovy.text.markup.MarkupTemplateEngine.<init>(MarkupTemplateEngine.java:94)
	at org.springframework.web.servlet.view.groovy.GroovyMarkupConfigurer.createTemplateEngine(GroovyMarkupConfigurer.java:160)
	at org.springframework.web.servlet.view.groovy.GroovyMarkupConfigurer.afterPropertiesSet(GroovyMarkupConfigurer.java:153)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1862)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1799)
	... 62 common frames omitted
2020-11-25 20:51:37,609 DEBUG  [main] BasicTypeRegistry: Adding type registration boolean -> org.hibernate.type.BooleanType@59127611
2020-11-25 20:51:37,612 DEBUG  [main] BasicTypeRegistry: Adding type registration boolean -> org.hibernate.type.BooleanType@59127611
2020-11-25 20:51:37,613 DEBUG  [main] BasicTypeRegistry: Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@59127611
2020-11-25 20:51:37,613 DEBUG  [main] BasicTypeRegistry: Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@18db3b3c
2020-11-25 20:51:37,614 DEBUG  [main] BasicTypeRegistry: Adding type registration true_false -> org.hibernate.type.TrueFalseType@5c1c9881
2020-11-25 20:51:37,614 DEBUG  [main] BasicTypeRegistry: Adding type registration yes_no -> org.hibernate.type.YesNoType@5d37aa0f
2020-11-25 20:51:37,614 DEBUG  [main] BasicTypeRegistry: Adding type registration byte -> org.hibernate.type.ByteType@3e4afd10
2020-11-25 20:51:37,614 DEBUG  [main] BasicTypeRegistry: Adding type registration byte -> org.hibernate.type.ByteType@3e4afd10
2020-11-25 20:51:37,615 DEBUG  [main] BasicTypeRegistry: Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@3e4afd10
2020-11-25 20:51:37,615 DEBUG  [main] BasicTypeRegistry: Adding type registration character -> org.hibernate.type.CharacterType@48d44b46
2020-11-25 20:51:37,615 DEBUG  [main] BasicTypeRegistry: Adding type registration char -> org.hibernate.type.CharacterType@48d44b46
2020-11-25 20:51:37,616 DEBUG  [main] BasicTypeRegistry: Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@48d44b46
2020-11-25 20:51:37,616 DEBUG  [main] BasicTypeRegistry: Adding type registration short -> org.hibernate.type.ShortType@dd20ebc
2020-11-25 20:51:37,616 DEBUG  [main] BasicTypeRegistry: Adding type registration short -> org.hibernate.type.ShortType@dd20ebc
2020-11-25 20:51:37,617 DEBUG  [main] BasicTypeRegistry: Adding type registration java.lang.Short -> org.hibernate.type.ShortType@dd20ebc
2020-11-25 20:51:37,617 DEBUG  [main] BasicTypeRegistry: Adding type registration integer -> org.hibernate.type.IntegerType@5f7cd50e
2020-11-25 20:51:37,617 DEBUG  [main] BasicTypeRegistry: Adding type registration int -> org.hibernate.type.IntegerType@5f7cd50e
2020-11-25 20:51:37,617 DEBUG  [main] BasicTypeRegistry: Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@5f7cd50e
2020-11-25 20:51:37,618 DEBUG  [main] BasicTypeRegistry: Adding type registration long -> org.hibernate.type.LongType@359e27d2
2020-11-25 20:51:37,618 DEBUG  [main] BasicTypeRegistry: Adding type registration long -> org.hibernate.type.LongType@359e27d2
2020-11-25 20:51:37,618 DEBUG  [main] BasicTypeRegistry: Adding type registration java.lang.Long -> org.hibernate.type.LongType@359e27d2
2020-11-25 20:51:37,618 DEBUG  [main] BasicTypeRegistry: Adding type registration float -> org.hibernate.type.FloatType@29b8df5
2020-11-25 20:51:37,618 DEBUG  [main] BasicTypeRegistry: Adding type registration float -> org.hibernate.type.FloatType@29b8df5
2020-11-25 20:51:37,618 DEBUG  [main] BasicTypeRegistry: Adding type registration java.lang.Float -> org.hibernate.type.FloatType@29b8df5
2020-11-25 20:51:37,619 DEBUG  [main] BasicTypeRegistry: Adding type registration double -> org.hibernate.type.DoubleType@36cfe107
2020-11-25 20:51:37,619 DEBUG  [main] BasicTypeRegistry: Adding type registration double -> org.hibernate.type.DoubleType@36cfe107
2020-11-25 20:51:37,619 DEBUG  [main] BasicTypeRegistry: Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@36cfe107
2020-11-25 20:51:37,619 DEBUG  [main] BasicTypeRegistry: Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@139089a4
2020-11-25 20:51:37,619 DEBUG  [main] BasicTypeRegistry: Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@139089a4
2020-11-25 20:51:37,619 DEBUG  [main] BasicTypeRegistry: Adding type registration big_integer -> org.hibernate.type.BigIntegerType@9f1ca74
2020-11-25 20:51:37,620 DEBUG  [main] BasicTypeRegistry: Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@9f1ca74
2020-11-25 20:51:37,620 DEBUG  [main] BasicTypeRegistry: Adding type registration string -> org.hibernate.type.StringType@393ae7a0
2020-11-25 20:51:37,620 DEBUG  [main] BasicTypeRegistry: Adding type registration java.lang.String -> org.hibernate.type.StringType@393ae7a0
2020-11-25 20:51:37,620 DEBUG  [main] BasicTypeRegistry: Adding type registration nstring -> org.hibernate.type.StringNVarcharType@7ee12d58
2020-11-25 20:51:37,620 DEBUG  [main] BasicTypeRegistry: Adding type registration ncharacter -> org.hibernate.type.CharacterNCharType@34e990cc
2020-11-25 20:51:37,620 DEBUG  [main] BasicTypeRegistry: Adding type registration url -> org.hibernate.type.UrlType@6de84336
2020-11-25 20:51:37,620 DEBUG  [main] BasicTypeRegistry: Adding type registration java.net.URL -> org.hibernate.type.UrlType@6de84336
2020-11-25 20:51:37,621 DEBUG  [main] BasicTypeRegistry: Adding type registration Duration -> org.hibernate.type.DurationType@69b37f5c
2020-11-25 20:51:37,621 DEBUG  [main] BasicTypeRegistry: Adding type registration java.time.Duration -> org.hibernate.type.DurationType@69b37f5c
2020-11-25 20:51:37,621 DEBUG  [main] BasicTypeRegistry: Adding type registration Instant -> org.hibernate.type.InstantType@580ffea
2020-11-25 20:51:37,621 DEBUG  [main] BasicTypeRegistry: Adding type registration java.time.Instant -> org.hibernate.type.InstantType@580ffea
2020-11-25 20:51:37,621 DEBUG  [main] BasicTypeRegistry: Adding type registration LocalDateTime -> org.hibernate.type.LocalDateTimeType@79d49790
2020-11-25 20:51:37,621 DEBUG  [main] BasicTypeRegistry: Adding type registration java.time.LocalDateTime -> org.hibernate.type.LocalDateTimeType@79d49790
2020-11-25 20:51:37,621 DEBUG  [main] BasicTypeRegistry: Adding type registration LocalDate -> org.hibernate.type.LocalDateType@3e9fb485
2020-11-25 20:51:37,622 DEBUG  [main] BasicTypeRegistry: Adding type registration java.time.LocalDate -> org.hibernate.type.LocalDateType@3e9fb485
2020-11-25 20:51:37,622 DEBUG  [main] BasicTypeRegistry: Adding type registration LocalTime -> org.hibernate.type.LocalTimeType@419f0ea
2020-11-25 20:51:37,622 DEBUG  [main] BasicTypeRegistry: Adding type registration java.time.LocalTime -> org.hibernate.type.LocalTimeType@419f0ea
2020-11-25 20:51:37,622 DEBUG  [main] BasicTypeRegistry: Adding type registration OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@87aec6a
2020-11-25 20:51:37,622 DEBUG  [main] BasicTypeRegistry: Adding type registration java.time.OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@87aec6a
2020-11-25 20:51:37,622 DEBUG  [main] BasicTypeRegistry: Adding type registration OffsetTime -> org.hibernate.type.OffsetTimeType@5529522f
2020-11-25 20:51:37,622 DEBUG  [main] BasicTypeRegistry: Adding type registration java.time.OffsetTime -> org.hibernate.type.OffsetTimeType@5529522f
2020-11-25 20:51:37,622 DEBUG  [main] BasicTypeRegistry: Adding type registration ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@152e7703
2020-11-25 20:51:37,623 DEBUG  [main] BasicTypeRegistry: Adding type registration java.time.ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@152e7703
2020-11-25 20:51:37,623 DEBUG  [main] BasicTypeRegistry: Adding type registration date -> org.hibernate.type.DateType@24fc2c80
2020-11-25 20:51:37,623 DEBUG  [main] BasicTypeRegistry: Adding type registration java.sql.Date -> org.hibernate.type.DateType@24fc2c80
2020-11-25 20:51:37,623 DEBUG  [main] BasicTypeRegistry: Adding type registration time -> org.hibernate.type.TimeType@48b3b1b8
2020-11-25 20:51:37,623 DEBUG  [main] BasicTypeRegistry: Adding type registration java.sql.Time -> org.hibernate.type.TimeType@48b3b1b8
2020-11-25 20:51:37,623 DEBUG  [main] BasicTypeRegistry: Adding type registration timestamp -> org.hibernate.type.TimestampType@686b1e2d
2020-11-25 20:51:37,623 DEBUG  [main] BasicTypeRegistry: Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@686b1e2d
2020-11-25 20:51:37,624 DEBUG  [main] BasicTypeRegistry: Adding type registration java.util.Date -> org.hibernate.type.TimestampType@686b1e2d
2020-11-25 20:51:37,624 DEBUG  [main] BasicTypeRegistry: Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@652b3733
2020-11-25 20:51:37,624 DEBUG  [main] BasicTypeRegistry: Adding type registration calendar -> org.hibernate.type.CalendarType@5be7b749
2020-11-25 20:51:37,624 DEBUG  [main] BasicTypeRegistry: Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@5be7b749
2020-11-25 20:51:37,624 DEBUG  [main] BasicTypeRegistry: Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@5be7b749
2020-11-25 20:51:37,624 DEBUG  [main] BasicTypeRegistry: Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@177ddd24
2020-11-25 20:51:37,624 DEBUG  [main] BasicTypeRegistry: Adding type registration locale -> org.hibernate.type.LocaleType@61ad30f6
2020-11-25 20:51:37,625 DEBUG  [main] BasicTypeRegistry: Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@61ad30f6
2020-11-25 20:51:37,625 DEBUG  [main] BasicTypeRegistry: Adding type registration currency -> org.hibernate.type.CurrencyType@574ebdaf
2020-11-25 20:51:37,625 DEBUG  [main] BasicTypeRegistry: Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@574ebdaf
2020-11-25 20:51:37,625 DEBUG  [main] BasicTypeRegistry: Adding type registration timezone -> org.hibernate.type.TimeZoneType@123ca460
2020-11-25 20:51:37,625 DEBUG  [main] BasicTypeRegistry: Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@123ca460
2020-11-25 20:51:37,625 DEBUG  [main] BasicTypeRegistry: Adding type registration class -> org.hibernate.type.ClassType@3c9f4376
2020-11-25 20:51:37,625 DEBUG  [main] BasicTypeRegistry: Adding type registration java.lang.Class -> org.hibernate.type.ClassType@3c9f4376
2020-11-25 20:51:37,625 DEBUG  [main] BasicTypeRegistry: Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@1958c0d9
2020-11-25 20:51:37,626 DEBUG  [main] BasicTypeRegistry: Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@1958c0d9
2020-11-25 20:51:37,626 DEBUG  [main] BasicTypeRegistry: Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@5fc7255c
2020-11-25 20:51:37,626 DEBUG  [main] BasicTypeRegistry: Adding type registration binary -> org.hibernate.type.BinaryType@79ba0285
2020-11-25 20:51:37,626 DEBUG  [main] BasicTypeRegistry: Adding type registration byte[] -> org.hibernate.type.BinaryType@79ba0285
2020-11-25 20:51:37,626 DEBUG  [main] BasicTypeRegistry: Adding type registration [B -> org.hibernate.type.BinaryType@79ba0285
2020-11-25 20:51:37,626 DEBUG  [main] BasicTypeRegistry: Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@598778cc
2020-11-25 20:51:37,626 DEBUG  [main] BasicTypeRegistry: Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@598778cc
2020-11-25 20:51:37,626 DEBUG  [main] BasicTypeRegistry: Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@598778cc
2020-11-25 20:51:37,627 DEBUG  [main] BasicTypeRegistry: Adding type registration row_version -> org.hibernate.type.RowVersionType@11cadb32
2020-11-25 20:51:37,627 DEBUG  [main] BasicTypeRegistry: Adding type registration image -> org.hibernate.type.ImageType@37986daf
2020-11-25 20:51:37,627 DEBUG  [main] BasicTypeRegistry: Adding type registration characters -> org.hibernate.type.CharArrayType@710afd47
2020-11-25 20:51:37,627 DEBUG  [main] BasicTypeRegistry: Adding type registration char[] -> org.hibernate.type.CharArrayType@710afd47
2020-11-25 20:51:37,627 DEBUG  [main] BasicTypeRegistry: Adding type registration [C -> org.hibernate.type.CharArrayType@710afd47
2020-11-25 20:51:37,627 DEBUG  [main] BasicTypeRegistry: Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@12670e55
2020-11-25 20:51:37,627 DEBUG  [main] BasicTypeRegistry: Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@12670e55
2020-11-25 20:51:37,627 DEBUG  [main] BasicTypeRegistry: Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@12670e55
2020-11-25 20:51:37,628 DEBUG  [main] BasicTypeRegistry: Adding type registration text -> org.hibernate.type.TextType@32ba5c65
2020-11-25 20:51:37,628 DEBUG  [main] BasicTypeRegistry: Adding type registration ntext -> org.hibernate.type.NTextType@10166230
2020-11-25 20:51:37,628 DEBUG  [main] BasicTypeRegistry: Adding type registration blob -> org.hibernate.type.BlobType@13dd7887
2020-11-25 20:51:37,628 DEBUG  [main] BasicTypeRegistry: Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@13dd7887
2020-11-25 20:51:37,628 DEBUG  [main] BasicTypeRegistry: Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@3cbfdf5c
2020-11-25 20:51:37,628 DEBUG  [main] BasicTypeRegistry: Adding type registration clob -> org.hibernate.type.ClobType@58636b50
2020-11-25 20:51:37,628 DEBUG  [main] BasicTypeRegistry: Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@58636b50
2020-11-25 20:51:37,629 DEBUG  [main] BasicTypeRegistry: Adding type registration nclob -> org.hibernate.type.NClobType@1e5aacd9
2020-11-25 20:51:37,629 DEBUG  [main] BasicTypeRegistry: Adding type registration java.sql.NClob -> org.hibernate.type.NClobType@1e5aacd9
2020-11-25 20:51:37,629 DEBUG  [main] BasicTypeRegistry: Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@120411ec
2020-11-25 20:51:37,629 DEBUG  [main] BasicTypeRegistry: Adding type registration materialized_nclob -> org.hibernate.type.MaterializedNClobType@1a34a51e
2020-11-25 20:51:37,629 DEBUG  [main] BasicTypeRegistry: Adding type registration serializable -> org.hibernate.type.SerializableType@6b091a92
2020-11-25 20:51:37,629 DEBUG  [main] BasicTypeRegistry: Adding type registration object -> org.hibernate.type.ObjectType@35329a05
2020-11-25 20:51:37,629 DEBUG  [main] BasicTypeRegistry: Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@35329a05
2020-11-25 20:51:37,630 DEBUG  [main] BasicTypeRegistry: Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@1130cad1
2020-11-25 20:51:37,630 DEBUG  [main] BasicTypeRegistry: Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@2e3f9d29
2020-11-25 20:51:37,631 DEBUG  [main] BasicTypeRegistry: Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@1525f2da
2020-11-25 20:51:37,631 DEBUG  [main] BasicTypeRegistry: Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@161c4d43
2020-11-25 20:51:37,631 DEBUG  [main] BasicTypeRegistry: Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@16d7b13
2020-11-25 20:51:37,632 DEBUG  [main] BasicTypeRegistry: Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@53e968c2
2020-11-25 20:51:37,632 DEBUG  [main] BasicTypeRegistry: Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@69e0e347
2020-11-25 20:51:37,632 DEBUG  [main] BasicTypeRegistry: Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@1de2cd6d
2020-11-25 20:51:37,648 DEBUG  [main] TypeConfiguration$Scope: Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@6ef0e08f] to MetadataBuildingContext [org.hibernate.boot.internal.MetadataBuildingContextRootImpl@505b5ddc]
2020-11-25 20:51:37,666 DEBUG  [main] EnumType: Using NAMED-based conversion for Enum com.sf.back.entities.Kind
2020-11-25 20:51:37,672 DEBUG  [main] EnumType: Using NAMED-based conversion for Enum com.sf.back.entities.Kind
2020-11-25 20:51:37,697 DEBUG  [main] TypeConfiguration$Scope: Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@6ef0e08f] to SessionFactoryImpl [org.hibernate.internal.SessionFactoryImpl@3496e06a]
2020-11-25 20:51:37,698 DEBUG  [main] EnumType: Using NAMED-based conversion for Enum com.sf.back.entities.Kind
2020-11-25 20:51:37,699 DEBUG  [main] EnumType: Using NAMED-based conversion for Enum com.sf.back.entities.Kind
2020-11-25 20:51:37,728 DEBUG  [main] EnumType: Using NAMED-based conversion for Enum com.sf.back.entities.Kind
2020-11-25 20:51:37,728 DEBUG  [main] EnumType: Using NAMED-based conversion for Enum com.sf.back.entities.Kind
2020-11-25 20:51:37,750 DEBUG  [main] EnumType: Using NAMED-based conversion for Enum com.sf.back.entities.Kind
2020-11-25 20:51:37,751 DEBUG  [main] EnumType: Using NAMED-based conversion for Enum com.sf.back.entities.Kind
2020-11-25 20:51:37,765 DEBUG  [main] EnumType: Using NAMED-based conversion for Enum com.sf.back.entities.Kind
2020-11-25 20:51:37,772 TRACE  [main] TypeConfiguration$Scope: Handling #sessionFactoryCreated from [org.hibernate.internal.SessionFactoryImpl@3496e06a] for TypeConfiguration
2020-11-25 20:51:37,936 WARN   [main] JpaBaseConfiguration$JpaWebConfiguration: spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2020-11-25 20:51:38,100 WARN   [main] GenericWebApplicationContext: Exception encountered during context initialization - cancelling refresh attempt: org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'groovyMarkupConfigurer' defined in class path resource [org/springframework/boot/autoconfigure/groovy/template/GroovyTemplateAutoConfiguration$GroovyMarkupConfiguration.class]: Invocation of init method failed; nested exception is java.lang.reflect.InaccessibleObjectException: Unable to make jdk.internal.loader.ClassLoaders$AppClassLoader(jdk.internal.loader.ClassLoaders$PlatformClassLoader,jdk.internal.loader.URLClassPath) accessible: module java.base does not "opens jdk.internal.loader" to unnamed module @5fcacc0
2020-11-25 20:51:38,104 TRACE  [main] TypeConfiguration$Scope: Handling #sessionFactoryClosed from [org.hibernate.internal.SessionFactoryImpl@3496e06a] for TypeConfiguration
2020-11-25 20:51:38,105 DEBUG  [main] TypeConfiguration$Scope: Un-scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration$Scope@80cec05] from SessionFactory [org.hibernate.internal.SessionFactoryImpl@3496e06a]
2020-11-25 20:51:38,134 ERROR  [main] SpringApplication: Application run failed
org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'groovyMarkupConfigurer' defined in class path resource [org/springframework/boot/autoconfigure/groovy/template/GroovyTemplateAutoConfiguration$GroovyMarkupConfiguration.class]: Invocation of init method failed; nested exception is java.lang.reflect.InaccessibleObjectException: Unable to make jdk.internal.loader.ClassLoaders$AppClassLoader(jdk.internal.loader.ClassLoaders$PlatformClassLoader,jdk.internal.loader.URLClassPath) accessible: module java.base does not "opens jdk.internal.loader" to unnamed module @5fcacc0
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1803)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:595)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:517)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:323)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:222)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:321)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:202)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(DefaultListableBeanFactory.java:879)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:878)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:550)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:747)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:397)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:315)
	at org.springframework.boot.test.context.SpringBootContextLoader.loadContext(SpringBootContextLoader.java:125)
	at org.springframework.test.context.cache.DefaultCacheAwareContextLoaderDelegate.loadContextInternal(DefaultCacheAwareContextLoaderDelegate.java:99)
	at org.springframework.test.context.cache.DefaultCacheAwareContextLoaderDelegate.loadContext(DefaultCacheAwareContextLoaderDelegate.java:124)
	at org.springframework.test.context.support.DefaultTestContext.getApplicationContext(DefaultTestContext.java:123)
	at org.springframework.test.context.web.ServletTestExecutionListener.setUpRequestContextIfNecessary(ServletTestExecutionListener.java:190)
	at org.springframework.test.context.web.ServletTestExecutionListener.prepareTestInstance(ServletTestExecutionListener.java:132)
	at org.springframework.test.context.TestContextManager.prepareTestInstance(TestContextManager.java:244)
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner.createTest(SpringJUnit4ClassRunner.java:227)
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner$1.runReflectiveCall(SpringJUnit4ClassRunner.java:289)
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner.methodBlock(SpringJUnit4ClassRunner.java:291)
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner.runChild(SpringJUnit4ClassRunner.java:246)
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner.runChild(SpringJUnit4ClassRunner.java:97)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:290)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:71)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:58)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268)
	at org.junit.internal.runners.statements.RunBefores.evaluate(RunBefores.java:26)
	at org.springframework.test.context.junit4.statements.RunBeforeTestClassCallbacks.evaluate(RunBeforeTestClassCallbacks.java:61)
	at org.junit.internal.runners.statements.RunAfters.evaluate(RunAfters.java:27)
	at org.springframework.test.context.junit4.statements.RunAfterTestClassCallbacks.evaluate(RunAfterTestClassCallbacks.java:70)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:363)
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner.run(SpringJUnit4ClassRunner.java:190)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:137)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:115)
	at org.junit.vintage.engine.execution.RunnerExecutor.execute(RunnerExecutor.java:40)
	at java.base/java.util.stream.ForEachOps$ForEachOp$OfRef.accept(ForEachOps.java:183)
	at java.base/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:195)
	at java.base/java.util.Iterator.forEachRemaining(Iterator.java:133)
	at java.base/java.util.Spliterators$IteratorSpliterator.forEachRemaining(Spliterators.java:1801)
	at java.base/java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:484)
	at java.base/java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:474)
	at java.base/java.util.stream.ForEachOps$ForEachOp.evaluateSequential(ForEachOps.java:150)
	at java.base/java.util.stream.ForEachOps$ForEachOp$OfRef.evaluateSequential(ForEachOps.java:173)
	at java.base/java.util.stream.AbstractPipeline.evaluate(AbstractPipeline.java:234)
	at java.base/java.util.stream.ReferencePipeline.forEach(ReferencePipeline.java:497)
	at org.junit.vintage.engine.VintageTestEngine.executeAllChildren(VintageTestEngine.java:80)
	at org.junit.vintage.engine.VintageTestEngine.execute(VintageTestEngine.java:71)
	at org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:220)
	at org.junit.platform.launcher.core.DefaultLauncher.lambda$execute$6(DefaultLauncher.java:188)
	at org.junit.platform.launcher.core.DefaultLauncher.withInterceptedStreams(DefaultLauncher.java:202)
	at org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:181)
	at org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:128)
	at org.apache.maven.surefire.junitplatform.JUnitPlatformProvider.invokeAllTests(JUnitPlatformProvider.java:150)
	at org.apache.maven.surefire.junitplatform.JUnitPlatformProvider.invoke(JUnitPlatformProvider.java:124)
	at org.apache.maven.surefire.booter.ForkedBooter.invokeProviderInSameClassLoader(ForkedBooter.java:384)
	at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:345)
	at org.apache.maven.surefire.booter.ForkedBooter.execute(ForkedBooter.java:126)
	at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:418)
Caused by: java.lang.reflect.InaccessibleObjectException: Unable to make jdk.internal.loader.ClassLoaders$AppClassLoader(jdk.internal.loader.ClassLoaders$PlatformClassLoader,jdk.internal.loader.URLClassPath) accessible: module java.base does not "opens jdk.internal.loader" to unnamed module @5fcacc0
	at java.base/java.lang.reflect.AccessibleObject.checkCanSetAccessible(AccessibleObject.java:361)
	at java.base/java.lang.reflect.AccessibleObject.checkCanSetAccessible(AccessibleObject.java:301)
	at java.base/java.lang.reflect.Constructor.checkCanSetAccessible(Constructor.java:189)
	at java.base/java.lang.reflect.Constructor.setAccessible(Constructor.java:182)
	at org.codehaus.groovy.reflection.CachedConstructor$1.run(CachedConstructor.java:44)
	at java.base/java.security.AccessController.doPrivileged(AccessController.java:312)
	at org.codehaus.groovy.reflection.CachedConstructor.<init>(CachedConstructor.java:42)
	at org.codehaus.groovy.reflection.CachedClass$2.initValue(CachedClass.java:79)
	at org.codehaus.groovy.reflection.CachedClass$2.initValue(CachedClass.java:69)
	at org.codehaus.groovy.util.LazyReference.getLocked(LazyReference.java:49)
	at org.codehaus.groovy.util.LazyReference.get(LazyReference.java:36)
	at org.codehaus.groovy.reflection.CachedClass.getConstructors(CachedClass.java:268)
	at groovy.lang.MetaClassImpl.<init>(MetaClassImpl.java:218)
	at groovy.lang.MetaClassImpl.<init>(MetaClassImpl.java:228)
	at groovy.lang.MetaClassRegistry$MetaClassCreationHandle.createNormalMetaClass(MetaClassRegistry.java:171)
	at groovy.lang.MetaClassRegistry$MetaClassCreationHandle.createWithCustomLookup(MetaClassRegistry.java:161)
	at groovy.lang.MetaClassRegistry$MetaClassCreationHandle.create(MetaClassRegistry.java:144)
	at org.codehaus.groovy.reflection.ClassInfo.getMetaClassUnderLock(ClassInfo.java:253)
	at org.codehaus.groovy.reflection.ClassInfo.getMetaClass(ClassInfo.java:285)
	at org.codehaus.groovy.reflection.ClassInfo.getMetaClass(ClassInfo.java:295)
	at org.codehaus.groovy.runtime.metaclass.MetaClassRegistryImpl.getMetaClass(MetaClassRegistryImpl.java:261)
	at org.codehaus.groovy.runtime.InvokerHelper.getMetaClass(InvokerHelper.java:873)
	at org.codehaus.groovy.runtime.InvokerHelper.invokePojoMethod(InvokerHelper.java:906)
	at org.codehaus.groovy.runtime.InvokerHelper.invokeMethod(InvokerHelper.java:898)
	at org.codehaus.groovy.runtime.typehandling.DefaultTypeTransformation.castToBoolean(DefaultTypeTransformation.java:185)
	at org.codehaus.groovy.runtime.typehandling.DefaultTypeTransformation.booleanUnbox(DefaultTypeTransformation.java:74)
	at org.codehaus.groovy.control.customizers.ASTTransformationCustomizer.findASTTranformationClass(ASTTransformationCustomizer.groovy:209)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:64)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:564)
	at org.codehaus.groovy.reflection.CachedMethod.invoke(CachedMethod.java:93)
	at org.codehaus.groovy.runtime.callsite.StaticMetaMethodSite$StaticMetaMethodSiteNoUnwrapNoCoerce.invoke(StaticMetaMethodSite.java:151)
	at org.codehaus.groovy.runtime.callsite.StaticMetaMethodSite.callStatic(StaticMetaMethodSite.java:102)
	at org.codehaus.groovy.runtime.callsite.AbstractCallSite.callStatic(AbstractCallSite.java:214)
	at org.codehaus.groovy.control.customizers.ASTTransformationCustomizer.findPhase(ASTTransformationCustomizer.groovy:226)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:64)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:564)
	at org.codehaus.groovy.reflection.CachedMethod.invoke(CachedMethod.java:93)
	at org.codehaus.groovy.runtime.callsite.StaticMetaMethodSite$StaticMetaMethodSiteNoUnwrapNoCoerce.invoke(StaticMetaMethodSite.java:151)
	at org.codehaus.groovy.runtime.callsite.StaticMetaMethodSite.callStatic(StaticMetaMethodSite.java:102)
	at org.codehaus.groovy.runtime.callsite.AbstractCallSite.callStatic(AbstractCallSite.java:214)
	at org.codehaus.groovy.control.customizers.ASTTransformationCustomizer.<init>(ASTTransformationCustomizer.groovy:180)
	at org.codehaus.groovy.control.customizers.ASTTransformationCustomizer.<init>(ASTTransformationCustomizer.groovy:188)
	at groovy.text.markup.MarkupTemplateEngine.<init>(MarkupTemplateEngine.java:94)
	at org.springframework.web.servlet.view.groovy.GroovyMarkupConfigurer.createTemplateEngine(GroovyMarkupConfigurer.java:160)
	at org.springframework.web.servlet.view.groovy.GroovyMarkupConfigurer.afterPropertiesSet(GroovyMarkupConfigurer.java:153)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1862)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1799)
	... 62 common frames omitted
2020-11-25 20:51:38,135 ERROR  [main] TestContextManager: Caught exception while allowing TestExecutionListener [org.springframework.test.context.web.ServletTestExecutionListener@4237d6e4] to prepare test instance [com.sf.service.ProblemServiceTest@760a4916]
java.lang.IllegalStateException: Failed to load ApplicationContext
	at org.springframework.test.context.cache.DefaultCacheAwareContextLoaderDelegate.loadContext(DefaultCacheAwareContextLoaderDelegate.java:132)
	at org.springframework.test.context.support.DefaultTestContext.getApplicationContext(DefaultTestContext.java:123)
	at org.springframework.test.context.web.ServletTestExecutionListener.setUpRequestContextIfNecessary(ServletTestExecutionListener.java:190)
	at org.springframework.test.context.web.ServletTestExecutionListener.prepareTestInstance(ServletTestExecutionListener.java:132)
	at org.springframework.test.context.TestContextManager.prepareTestInstance(TestContextManager.java:244)
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner.createTest(SpringJUnit4ClassRunner.java:227)
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner$1.runReflectiveCall(SpringJUnit4ClassRunner.java:289)
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner.methodBlock(SpringJUnit4ClassRunner.java:291)
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner.runChild(SpringJUnit4ClassRunner.java:246)
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner.runChild(SpringJUnit4ClassRunner.java:97)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:290)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:71)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:58)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268)
	at org.junit.internal.runners.statements.RunBefores.evaluate(RunBefores.java:26)
	at org.springframework.test.context.junit4.statements.RunBeforeTestClassCallbacks.evaluate(RunBeforeTestClassCallbacks.java:61)
	at org.junit.internal.runners.statements.RunAfters.evaluate(RunAfters.java:27)
	at org.springframework.test.context.junit4.statements.RunAfterTestClassCallbacks.evaluate(RunAfterTestClassCallbacks.java:70)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:363)
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner.run(SpringJUnit4ClassRunner.java:190)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:137)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:115)
	at org.junit.vintage.engine.execution.RunnerExecutor.execute(RunnerExecutor.java:40)
	at java.base/java.util.stream.ForEachOps$ForEachOp$OfRef.accept(ForEachOps.java:183)
	at java.base/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:195)
	at java.base/java.util.Iterator.forEachRemaining(Iterator.java:133)
	at java.base/java.util.Spliterators$IteratorSpliterator.forEachRemaining(Spliterators.java:1801)
	at java.base/java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:484)
	at java.base/java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:474)
	at java.base/java.util.stream.ForEachOps$ForEachOp.evaluateSequential(ForEachOps.java:150)
	at java.base/java.util.stream.ForEachOps$ForEachOp$OfRef.evaluateSequential(ForEachOps.java:173)
	at java.base/java.util.stream.AbstractPipeline.evaluate(AbstractPipeline.java:234)
	at java.base/java.util.stream.ReferencePipeline.forEach(ReferencePipeline.java:497)
	at org.junit.vintage.engine.VintageTestEngine.executeAllChildren(VintageTestEngine.java:80)
	at org.junit.vintage.engine.VintageTestEngine.execute(VintageTestEngine.java:71)
	at org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:220)
	at org.junit.platform.launcher.core.DefaultLauncher.lambda$execute$6(DefaultLauncher.java:188)
	at org.junit.platform.launcher.core.DefaultLauncher.withInterceptedStreams(DefaultLauncher.java:202)
	at org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:181)
	at org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:128)
	at org.apache.maven.surefire.junitplatform.JUnitPlatformProvider.invokeAllTests(JUnitPlatformProvider.java:150)
	at org.apache.maven.surefire.junitplatform.JUnitPlatformProvider.invoke(JUnitPlatformProvider.java:124)
	at org.apache.maven.surefire.booter.ForkedBooter.invokeProviderInSameClassLoader(ForkedBooter.java:384)
	at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:345)
	at org.apache.maven.surefire.booter.ForkedBooter.execute(ForkedBooter.java:126)
	at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:418)
Caused by: org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'groovyMarkupConfigurer' defined in class path resource [org/springframework/boot/autoconfigure/groovy/template/GroovyTemplateAutoConfiguration$GroovyMarkupConfiguration.class]: Invocation of init method failed; nested exception is java.lang.reflect.InaccessibleObjectException: Unable to make jdk.internal.loader.ClassLoaders$AppClassLoader(jdk.internal.loader.ClassLoaders$PlatformClassLoader,jdk.internal.loader.URLClassPath) accessible: module java.base does not "opens jdk.internal.loader" to unnamed module @5fcacc0
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1803)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:595)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:517)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:323)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:222)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:321)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:202)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(DefaultListableBeanFactory.java:879)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:878)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:550)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:747)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:397)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:315)
	at org.springframework.boot.test.context.SpringBootContextLoader.loadContext(SpringBootContextLoader.java:125)
	at org.springframework.test.context.cache.DefaultCacheAwareContextLoaderDelegate.loadContextInternal(DefaultCacheAwareContextLoaderDelegate.java:99)
	at org.springframework.test.context.cache.DefaultCacheAwareContextLoaderDelegate.loadContext(DefaultCacheAwareContextLoaderDelegate.java:124)
	... 47 common frames omitted
Caused by: java.lang.reflect.InaccessibleObjectException: Unable to make jdk.internal.loader.ClassLoaders$AppClassLoader(jdk.internal.loader.ClassLoaders$PlatformClassLoader,jdk.internal.loader.URLClassPath) accessible: module java.base does not "opens jdk.internal.loader" to unnamed module @5fcacc0
	at java.base/java.lang.reflect.AccessibleObject.checkCanSetAccessible(AccessibleObject.java:361)
	at java.base/java.lang.reflect.AccessibleObject.checkCanSetAccessible(AccessibleObject.java:301)
	at java.base/java.lang.reflect.Constructor.checkCanSetAccessible(Constructor.java:189)
	at java.base/java.lang.reflect.Constructor.setAccessible(Constructor.java:182)
	at org.codehaus.groovy.reflection.CachedConstructor$1.run(CachedConstructor.java:44)
	at java.base/java.security.AccessController.doPrivileged(AccessController.java:312)
	at org.codehaus.groovy.reflection.CachedConstructor.<init>(CachedConstructor.java:42)
	at org.codehaus.groovy.reflection.CachedClass$2.initValue(CachedClass.java:79)
	at org.codehaus.groovy.reflection.CachedClass$2.initValue(CachedClass.java:69)
	at org.codehaus.groovy.util.LazyReference.getLocked(LazyReference.java:49)
	at org.codehaus.groovy.util.LazyReference.get(LazyReference.java:36)
	at org.codehaus.groovy.reflection.CachedClass.getConstructors(CachedClass.java:268)
	at groovy.lang.MetaClassImpl.<init>(MetaClassImpl.java:218)
	at groovy.lang.MetaClassImpl.<init>(MetaClassImpl.java:228)
	at groovy.lang.MetaClassRegistry$MetaClassCreationHandle.createNormalMetaClass(MetaClassRegistry.java:171)
	at groovy.lang.MetaClassRegistry$MetaClassCreationHandle.createWithCustomLookup(MetaClassRegistry.java:161)
	at groovy.lang.MetaClassRegistry$MetaClassCreationHandle.create(MetaClassRegistry.java:144)
	at org.codehaus.groovy.reflection.ClassInfo.getMetaClassUnderLock(ClassInfo.java:253)
	at org.codehaus.groovy.reflection.ClassInfo.getMetaClass(ClassInfo.java:285)
	at org.codehaus.groovy.reflection.ClassInfo.getMetaClass(ClassInfo.java:295)
	at org.codehaus.groovy.runtime.metaclass.MetaClassRegistryImpl.getMetaClass(MetaClassRegistryImpl.java:261)
	at org.codehaus.groovy.runtime.InvokerHelper.getMetaClass(InvokerHelper.java:873)
	at org.codehaus.groovy.runtime.InvokerHelper.invokePojoMethod(InvokerHelper.java:906)
	at org.codehaus.groovy.runtime.InvokerHelper.invokeMethod(InvokerHelper.java:898)
	at org.codehaus.groovy.runtime.typehandling.DefaultTypeTransformation.castToBoolean(DefaultTypeTransformation.java:185)
	at org.codehaus.groovy.runtime.typehandling.DefaultTypeTransformation.booleanUnbox(DefaultTypeTransformation.java:74)
	at org.codehaus.groovy.control.customizers.ASTTransformationCustomizer.findASTTranformationClass(ASTTransformationCustomizer.groovy:209)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:64)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:564)
	at org.codehaus.groovy.reflection.CachedMethod.invoke(CachedMethod.java:93)
	at org.codehaus.groovy.runtime.callsite.StaticMetaMethodSite$StaticMetaMethodSiteNoUnwrapNoCoerce.invoke(StaticMetaMethodSite.java:151)
	at org.codehaus.groovy.runtime.callsite.StaticMetaMethodSite.callStatic(StaticMetaMethodSite.java:102)
	at org.codehaus.groovy.runtime.callsite.AbstractCallSite.callStatic(AbstractCallSite.java:214)
	at org.codehaus.groovy.control.customizers.ASTTransformationCustomizer.findPhase(ASTTransformationCustomizer.groovy:226)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:64)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:564)
	at org.codehaus.groovy.reflection.CachedMethod.invoke(CachedMethod.java:93)
	at org.codehaus.groovy.runtime.callsite.StaticMetaMethodSite$StaticMetaMethodSiteNoUnwrapNoCoerce.invoke(StaticMetaMethodSite.java:151)
	at org.codehaus.groovy.runtime.callsite.StaticMetaMethodSite.callStatic(StaticMetaMethodSite.java:102)
	at org.codehaus.groovy.runtime.callsite.AbstractCallSite.callStatic(AbstractCallSite.java:214)
	at org.codehaus.groovy.control.customizers.ASTTransformationCustomizer.<init>(ASTTransformationCustomizer.groovy:180)
	at org.codehaus.groovy.control.customizers.ASTTransformationCustomizer.<init>(ASTTransformationCustomizer.groovy:188)
	at groovy.text.markup.MarkupTemplateEngine.<init>(MarkupTemplateEngine.java:94)
	at org.springframework.web.servlet.view.groovy.GroovyMarkupConfigurer.createTemplateEngine(GroovyMarkupConfigurer.java:160)
	at org.springframework.web.servlet.view.groovy.GroovyMarkupConfigurer.afterPropertiesSet(GroovyMarkupConfigurer.java:153)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1862)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1799)
	... 62 common frames omitted
2020-11-25 20:51:38,917 DEBUG  [main] BasicTypeRegistry: Adding type registration boolean -> org.hibernate.type.BooleanType@59127611
2020-11-25 20:51:38,924 DEBUG  [main] BasicTypeRegistry: Adding type registration boolean -> org.hibernate.type.BooleanType@59127611
2020-11-25 20:51:38,924 DEBUG  [main] BasicTypeRegistry: Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@59127611
2020-11-25 20:51:38,924 DEBUG  [main] BasicTypeRegistry: Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@18db3b3c
2020-11-25 20:51:38,924 DEBUG  [main] BasicTypeRegistry: Adding type registration true_false -> org.hibernate.type.TrueFalseType@5c1c9881
2020-11-25 20:51:38,925 DEBUG  [main] BasicTypeRegistry: Adding type registration yes_no -> org.hibernate.type.YesNoType@5d37aa0f
2020-11-25 20:51:38,925 DEBUG  [main] BasicTypeRegistry: Adding type registration byte -> org.hibernate.type.ByteType@3e4afd10
2020-11-25 20:51:38,925 DEBUG  [main] BasicTypeRegistry: Adding type registration byte -> org.hibernate.type.ByteType@3e4afd10
2020-11-25 20:51:38,925 DEBUG  [main] BasicTypeRegistry: Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@3e4afd10
2020-11-25 20:51:38,925 DEBUG  [main] BasicTypeRegistry: Adding type registration character -> org.hibernate.type.CharacterType@48d44b46
2020-11-25 20:51:38,925 DEBUG  [main] BasicTypeRegistry: Adding type registration char -> org.hibernate.type.CharacterType@48d44b46
2020-11-25 20:51:38,925 DEBUG  [main] BasicTypeRegistry: Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@48d44b46
2020-11-25 20:51:38,925 DEBUG  [main] BasicTypeRegistry: Adding type registration short -> org.hibernate.type.ShortType@dd20ebc
2020-11-25 20:51:38,925 DEBUG  [main] BasicTypeRegistry: Adding type registration short -> org.hibernate.type.ShortType@dd20ebc
2020-11-25 20:51:38,926 DEBUG  [main] BasicTypeRegistry: Adding type registration java.lang.Short -> org.hibernate.type.ShortType@dd20ebc
2020-11-25 20:51:38,926 DEBUG  [main] BasicTypeRegistry: Adding type registration integer -> org.hibernate.type.IntegerType@5f7cd50e
2020-11-25 20:51:38,926 DEBUG  [main] BasicTypeRegistry: Adding type registration int -> org.hibernate.type.IntegerType@5f7cd50e
2020-11-25 20:51:38,926 DEBUG  [main] BasicTypeRegistry: Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@5f7cd50e
2020-11-25 20:51:38,926 DEBUG  [main] BasicTypeRegistry: Adding type registration long -> org.hibernate.type.LongType@359e27d2
2020-11-25 20:51:38,926 DEBUG  [main] BasicTypeRegistry: Adding type registration long -> org.hibernate.type.LongType@359e27d2
2020-11-25 20:51:38,926 DEBUG  [main] BasicTypeRegistry: Adding type registration java.lang.Long -> org.hibernate.type.LongType@359e27d2
2020-11-25 20:51:38,926 DEBUG  [main] BasicTypeRegistry: Adding type registration float -> org.hibernate.type.FloatType@29b8df5
2020-11-25 20:51:38,926 DEBUG  [main] BasicTypeRegistry: Adding type registration float -> org.hibernate.type.FloatType@29b8df5
2020-11-25 20:51:38,927 DEBUG  [main] BasicTypeRegistry: Adding type registration java.lang.Float -> org.hibernate.type.FloatType@29b8df5
2020-11-25 20:51:38,927 DEBUG  [main] BasicTypeRegistry: Adding type registration double -> org.hibernate.type.DoubleType@36cfe107
2020-11-25 20:51:38,927 DEBUG  [main] BasicTypeRegistry: Adding type registration double -> org.hibernate.type.DoubleType@36cfe107
2020-11-25 20:51:38,933 DEBUG  [main] BasicTypeRegistry: Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@36cfe107
2020-11-25 20:51:38,934 DEBUG  [main] BasicTypeRegistry: Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@139089a4
2020-11-25 20:51:38,934 DEBUG  [main] BasicTypeRegistry: Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@139089a4
2020-11-25 20:51:38,934 DEBUG  [main] BasicTypeRegistry: Adding type registration big_integer -> org.hibernate.type.BigIntegerType@9f1ca74
2020-11-25 20:51:38,935 DEBUG  [main] BasicTypeRegistry: Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@9f1ca74
2020-11-25 20:51:38,935 DEBUG  [main] BasicTypeRegistry: Adding type registration string -> org.hibernate.type.StringType@393ae7a0
2020-11-25 20:51:38,935 DEBUG  [main] BasicTypeRegistry: Adding type registration java.lang.String -> org.hibernate.type.StringType@393ae7a0
2020-11-25 20:51:38,936 DEBUG  [main] BasicTypeRegistry: Adding type registration nstring -> org.hibernate.type.StringNVarcharType@7ee12d58
2020-11-25 20:51:38,936 DEBUG  [main] BasicTypeRegistry: Adding type registration ncharacter -> org.hibernate.type.CharacterNCharType@34e990cc
2020-11-25 20:51:38,937 DEBUG  [main] BasicTypeRegistry: Adding type registration url -> org.hibernate.type.UrlType@6de84336
2020-11-25 20:51:38,937 DEBUG  [main] BasicTypeRegistry: Adding type registration java.net.URL -> org.hibernate.type.UrlType@6de84336
2020-11-25 20:51:38,938 DEBUG  [main] BasicTypeRegistry: Adding type registration Duration -> org.hibernate.type.DurationType@69b37f5c
2020-11-25 20:51:38,938 DEBUG  [main] BasicTypeRegistry: Adding type registration java.time.Duration -> org.hibernate.type.DurationType@69b37f5c
2020-11-25 20:51:38,939 DEBUG  [main] BasicTypeRegistry: Adding type registration Instant -> org.hibernate.type.InstantType@580ffea
2020-11-25 20:51:38,939 DEBUG  [main] BasicTypeRegistry: Adding type registration java.time.Instant -> org.hibernate.type.InstantType@580ffea
2020-11-25 20:51:38,939 DEBUG  [main] BasicTypeRegistry: Adding type registration LocalDateTime -> org.hibernate.type.LocalDateTimeType@79d49790
2020-11-25 20:51:38,940 DEBUG  [main] BasicTypeRegistry: Adding type registration java.time.LocalDateTime -> org.hibernate.type.LocalDateTimeType@79d49790
2020-11-25 20:51:38,940 DEBUG  [main] BasicTypeRegistry: Adding type registration LocalDate -> org.hibernate.type.LocalDateType@3e9fb485
2020-11-25 20:51:38,941 DEBUG  [main] BasicTypeRegistry: Adding type registration java.time.LocalDate -> org.hibernate.type.LocalDateType@3e9fb485
2020-11-25 20:51:38,941 DEBUG  [main] BasicTypeRegistry: Adding type registration LocalTime -> org.hibernate.type.LocalTimeType@419f0ea
2020-11-25 20:51:38,942 DEBUG  [main] BasicTypeRegistry: Adding type registration java.time.LocalTime -> org.hibernate.type.LocalTimeType@419f0ea
2020-11-25 20:51:38,942 DEBUG  [main] BasicTypeRegistry: Adding type registration OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@87aec6a
2020-11-25 20:51:38,942 DEBUG  [main] BasicTypeRegistry: Adding type registration java.time.OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@87aec6a
2020-11-25 20:51:38,944 DEBUG  [main] BasicTypeRegistry: Adding type registration OffsetTime -> org.hibernate.type.OffsetTimeType@5529522f
2020-11-25 20:51:38,945 DEBUG  [main] BasicTypeRegistry: Adding type registration java.time.OffsetTime -> org.hibernate.type.OffsetTimeType@5529522f
2020-11-25 20:51:38,945 DEBUG  [main] BasicTypeRegistry: Adding type registration ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@152e7703
2020-11-25 20:51:38,945 DEBUG  [main] BasicTypeRegistry: Adding type registration java.time.ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@152e7703
2020-11-25 20:51:38,947 DEBUG  [main] BasicTypeRegistry: Adding type registration date -> org.hibernate.type.DateType@24fc2c80
2020-11-25 20:51:38,947 DEBUG  [main] BasicTypeRegistry: Adding type registration java.sql.Date -> org.hibernate.type.DateType@24fc2c80
2020-11-25 20:51:38,947 DEBUG  [main] BasicTypeRegistry: Adding type registration time -> org.hibernate.type.TimeType@48b3b1b8
2020-11-25 20:51:38,947 DEBUG  [main] BasicTypeRegistry: Adding type registration java.sql.Time -> org.hibernate.type.TimeType@48b3b1b8
2020-11-25 20:51:38,948 DEBUG  [main] BasicTypeRegistry: Adding type registration timestamp -> org.hibernate.type.TimestampType@686b1e2d
2020-11-25 20:51:38,948 DEBUG  [main] BasicTypeRegistry: Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@686b1e2d
2020-11-25 20:51:38,949 DEBUG  [main] BasicTypeRegistry: Adding type registration java.util.Date -> org.hibernate.type.TimestampType@686b1e2d
2020-11-25 20:51:38,949 DEBUG  [main] BasicTypeRegistry: Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@652b3733
2020-11-25 20:51:38,949 DEBUG  [main] BasicTypeRegistry: Adding type registration calendar -> org.hibernate.type.CalendarType@5be7b749
2020-11-25 20:51:38,949 DEBUG  [main] BasicTypeRegistry: Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@5be7b749
2020-11-25 20:51:38,950 DEBUG  [main] BasicTypeRegistry: Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@5be7b749
2020-11-25 20:51:38,951 DEBUG  [main] BasicTypeRegistry: Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@177ddd24
2020-11-25 20:51:38,951 DEBUG  [main] BasicTypeRegistry: Adding type registration locale -> org.hibernate.type.LocaleType@61ad30f6
2020-11-25 20:51:38,952 DEBUG  [main] BasicTypeRegistry: Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@61ad30f6
2020-11-25 20:51:38,952 DEBUG  [main] BasicTypeRegistry: Adding type registration currency -> org.hibernate.type.CurrencyType@574ebdaf
2020-11-25 20:51:38,952 DEBUG  [main] BasicTypeRegistry: Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@574ebdaf
2020-11-25 20:51:38,952 DEBUG  [main] BasicTypeRegistry: Adding type registration timezone -> org.hibernate.type.TimeZoneType@123ca460
2020-11-25 20:51:38,953 DEBUG  [main] BasicTypeRegistry: Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@123ca460
2020-11-25 20:51:38,953 DEBUG  [main] BasicTypeRegistry: Adding type registration class -> org.hibernate.type.ClassType@3c9f4376
2020-11-25 20:51:38,953 DEBUG  [main] BasicTypeRegistry: Adding type registration java.lang.Class -> org.hibernate.type.ClassType@3c9f4376
2020-11-25 20:51:38,953 DEBUG  [main] BasicTypeRegistry: Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@1958c0d9
2020-11-25 20:51:38,953 DEBUG  [main] BasicTypeRegistry: Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@1958c0d9
2020-11-25 20:51:38,953 DEBUG  [main] BasicTypeRegistry: Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@5fc7255c
2020-11-25 20:51:38,954 DEBUG  [main] BasicTypeRegistry: Adding type registration binary -> org.hibernate.type.BinaryType@79ba0285
2020-11-25 20:51:38,954 DEBUG  [main] BasicTypeRegistry: Adding type registration byte[] -> org.hibernate.type.BinaryType@79ba0285
2020-11-25 20:51:38,954 DEBUG  [main] BasicTypeRegistry: Adding type registration [B -> org.hibernate.type.BinaryType@79ba0285
2020-11-25 20:51:38,955 DEBUG  [main] BasicTypeRegistry: Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@598778cc
2020-11-25 20:51:38,955 DEBUG  [main] BasicTypeRegistry: Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@598778cc
2020-11-25 20:51:38,955 DEBUG  [main] BasicTypeRegistry: Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@598778cc
2020-11-25 20:51:38,956 DEBUG  [main] BasicTypeRegistry: Adding type registration row_version -> org.hibernate.type.RowVersionType@11cadb32
2020-11-25 20:51:38,956 DEBUG  [main] BasicTypeRegistry: Adding type registration image -> org.hibernate.type.ImageType@37986daf
2020-11-25 20:51:38,957 DEBUG  [main] BasicTypeRegistry: Adding type registration characters -> org.hibernate.type.CharArrayType@710afd47
2020-11-25 20:51:38,957 DEBUG  [main] BasicTypeRegistry: Adding type registration char[] -> org.hibernate.type.CharArrayType@710afd47
2020-11-25 20:51:38,958 DEBUG  [main] BasicTypeRegistry: Adding type registration [C -> org.hibernate.type.CharArrayType@710afd47
2020-11-25 20:51:38,959 DEBUG  [main] BasicTypeRegistry: Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@12670e55
2020-11-25 20:51:38,959 DEBUG  [main] BasicTypeRegistry: Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@12670e55
2020-11-25 20:51:38,959 DEBUG  [main] BasicTypeRegistry: Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@12670e55
2020-11-25 20:51:38,959 DEBUG  [main] BasicTypeRegistry: Adding type registration text -> org.hibernate.type.TextType@32ba5c65
2020-11-25 20:51:38,959 DEBUG  [main] BasicTypeRegistry: Adding type registration ntext -> org.hibernate.type.NTextType@10166230
2020-11-25 20:51:38,959 DEBUG  [main] BasicTypeRegistry: Adding type registration blob -> org.hibernate.type.BlobType@13dd7887
2020-11-25 20:51:38,959 DEBUG  [main] BasicTypeRegistry: Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@13dd7887
2020-11-25 20:51:38,960 DEBUG  [main] BasicTypeRegistry: Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@3cbfdf5c
2020-11-25 20:51:38,960 DEBUG  [main] BasicTypeRegistry: Adding type registration clob -> org.hibernate.type.ClobType@58636b50
2020-11-25 20:51:38,960 DEBUG  [main] BasicTypeRegistry: Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@58636b50
2020-11-25 20:51:38,960 DEBUG  [main] BasicTypeRegistry: Adding type registration nclob -> org.hibernate.type.NClobType@1e5aacd9
2020-11-25 20:51:38,961 DEBUG  [main] BasicTypeRegistry: Adding type registration java.sql.NClob -> org.hibernate.type.NClobType@1e5aacd9
2020-11-25 20:51:38,961 DEBUG  [main] BasicTypeRegistry: Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@120411ec
2020-11-25 20:51:38,961 DEBUG  [main] BasicTypeRegistry: Adding type registration materialized_nclob -> org.hibernate.type.MaterializedNClobType@1a34a51e
2020-11-25 20:51:38,962 DEBUG  [main] BasicTypeRegistry: Adding type registration serializable -> org.hibernate.type.SerializableType@6b091a92
2020-11-25 20:51:38,962 DEBUG  [main] BasicTypeRegistry: Adding type registration object -> org.hibernate.type.ObjectType@35329a05
2020-11-25 20:51:38,962 DEBUG  [main] BasicTypeRegistry: Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@35329a05
2020-11-25 20:51:38,962 DEBUG  [main] BasicTypeRegistry: Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@4556a9a7
2020-11-25 20:51:38,963 DEBUG  [main] BasicTypeRegistry: Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@7b140ad
2020-11-25 20:51:38,963 DEBUG  [main] BasicTypeRegistry: Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@4f67d2b2
2020-11-25 20:51:38,963 DEBUG  [main] BasicTypeRegistry: Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@561d0389
2020-11-25 20:51:38,964 DEBUG  [main] BasicTypeRegistry: Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@2676837c
2020-11-25 20:51:38,964 DEBUG  [main] BasicTypeRegistry: Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@2b4f1b37
2020-11-25 20:51:38,965 DEBUG  [main] BasicTypeRegistry: Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@5accbeae
2020-11-25 20:51:38,969 DEBUG  [main] BasicTypeRegistry: Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@6473ef35
2020-11-25 20:51:38,986 DEBUG  [main] TypeConfiguration$Scope: Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@74e37ad3] to MetadataBuildingContext [org.hibernate.boot.internal.MetadataBuildingContextRootImpl@4f1fabe5]
2020-11-25 20:51:38,997 DEBUG  [main] EnumType: Using NAMED-based conversion for Enum com.sf.back.entities.Kind
2020-11-25 20:51:38,999 DEBUG  [main] EnumType: Using NAMED-based conversion for Enum com.sf.back.entities.Kind
2020-11-25 20:51:39,021 DEBUG  [main] TypeConfiguration$Scope: Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@74e37ad3] to SessionFactoryImpl [org.hibernate.internal.SessionFactoryImpl@48945548]
2020-11-25 20:51:39,023 DEBUG  [main] EnumType: Using NAMED-based conversion for Enum com.sf.back.entities.Kind
2020-11-25 20:51:39,024 DEBUG  [main] EnumType: Using NAMED-based conversion for Enum com.sf.back.entities.Kind
2020-11-25 20:51:39,042 DEBUG  [main] EnumType: Using NAMED-based conversion for Enum com.sf.back.entities.Kind
2020-11-25 20:51:39,043 DEBUG  [main] EnumType: Using NAMED-based conversion for Enum com.sf.back.entities.Kind
2020-11-25 20:51:39,076 DEBUG  [main] EnumType: Using NAMED-based conversion for Enum com.sf.back.entities.Kind
2020-11-25 20:51:39,076 DEBUG  [main] EnumType: Using NAMED-based conversion for Enum com.sf.back.entities.Kind
2020-11-25 20:51:39,080 DEBUG  [main] EnumType: Using NAMED-based conversion for Enum com.sf.back.entities.Kind
2020-11-25 20:51:39,088 TRACE  [main] TypeConfiguration$Scope: Handling #sessionFactoryCreated from [org.hibernate.internal.SessionFactoryImpl@48945548] for TypeConfiguration
2020-11-25 20:51:39,242 WARN   [main] JpaBaseConfiguration$JpaWebConfiguration: spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2020-11-25 20:51:39,366 WARN   [main] GenericWebApplicationContext: Exception encountered during context initialization - cancelling refresh attempt: org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'groovyMarkupConfigurer' defined in class path resource [org/springframework/boot/autoconfigure/groovy/template/GroovyTemplateAutoConfiguration$GroovyMarkupConfiguration.class]: Invocation of init method failed; nested exception is java.lang.reflect.InaccessibleObjectException: Unable to make jdk.internal.loader.ClassLoaders$AppClassLoader(jdk.internal.loader.ClassLoaders$PlatformClassLoader,jdk.internal.loader.URLClassPath) accessible: module java.base does not "opens jdk.internal.loader" to unnamed module @5fcacc0
2020-11-25 20:51:39,368 TRACE  [main] TypeConfiguration$Scope: Handling #sessionFactoryClosed from [org.hibernate.internal.SessionFactoryImpl@48945548] for TypeConfiguration
2020-11-25 20:51:39,369 DEBUG  [main] TypeConfiguration$Scope: Un-scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration$Scope@745ff514] from SessionFactory [org.hibernate.internal.SessionFactoryImpl@48945548]
2020-11-25 20:51:39,374 ERROR  [main] SpringApplication: Application run failed
org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'groovyMarkupConfigurer' defined in class path resource [org/springframework/boot/autoconfigure/groovy/template/GroovyTemplateAutoConfiguration$GroovyMarkupConfiguration.class]: Invocation of init method failed; nested exception is java.lang.reflect.InaccessibleObjectException: Unable to make jdk.internal.loader.ClassLoaders$AppClassLoader(jdk.internal.loader.ClassLoaders$PlatformClassLoader,jdk.internal.loader.URLClassPath) accessible: module java.base does not "opens jdk.internal.loader" to unnamed module @5fcacc0
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1803)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:595)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:517)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:323)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:222)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:321)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:202)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(DefaultListableBeanFactory.java:879)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:878)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:550)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:747)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:397)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:315)
	at org.springframework.boot.test.context.SpringBootContextLoader.loadContext(SpringBootContextLoader.java:125)
	at org.springframework.test.context.cache.DefaultCacheAwareContextLoaderDelegate.loadContextInternal(DefaultCacheAwareContextLoaderDelegate.java:99)
	at org.springframework.test.context.cache.DefaultCacheAwareContextLoaderDelegate.loadContext(DefaultCacheAwareContextLoaderDelegate.java:124)
	at org.springframework.test.context.support.DefaultTestContext.getApplicationContext(DefaultTestContext.java:123)
	at org.springframework.test.context.web.ServletTestExecutionListener.setUpRequestContextIfNecessary(ServletTestExecutionListener.java:190)
	at org.springframework.test.context.web.ServletTestExecutionListener.prepareTestInstance(ServletTestExecutionListener.java:132)
	at org.springframework.test.context.TestContextManager.prepareTestInstance(TestContextManager.java:244)
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner.createTest(SpringJUnit4ClassRunner.java:227)
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner$1.runReflectiveCall(SpringJUnit4ClassRunner.java:289)
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner.methodBlock(SpringJUnit4ClassRunner.java:291)
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner.runChild(SpringJUnit4ClassRunner.java:246)
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner.runChild(SpringJUnit4ClassRunner.java:97)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:290)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:71)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:58)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268)
	at org.junit.internal.runners.statements.RunBefores.evaluate(RunBefores.java:26)
	at org.springframework.test.context.junit4.statements.RunBeforeTestClassCallbacks.evaluate(RunBeforeTestClassCallbacks.java:61)
	at org.junit.internal.runners.statements.RunAfters.evaluate(RunAfters.java:27)
	at org.springframework.test.context.junit4.statements.RunAfterTestClassCallbacks.evaluate(RunAfterTestClassCallbacks.java:70)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:363)
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner.run(SpringJUnit4ClassRunner.java:190)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:137)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:115)
	at org.junit.vintage.engine.execution.RunnerExecutor.execute(RunnerExecutor.java:40)
	at java.base/java.util.stream.ForEachOps$ForEachOp$OfRef.accept(ForEachOps.java:183)
	at java.base/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:195)
	at java.base/java.util.Iterator.forEachRemaining(Iterator.java:133)
	at java.base/java.util.Spliterators$IteratorSpliterator.forEachRemaining(Spliterators.java:1801)
	at java.base/java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:484)
	at java.base/java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:474)
	at java.base/java.util.stream.ForEachOps$ForEachOp.evaluateSequential(ForEachOps.java:150)
	at java.base/java.util.stream.ForEachOps$ForEachOp$OfRef.evaluateSequential(ForEachOps.java:173)
	at java.base/java.util.stream.AbstractPipeline.evaluate(AbstractPipeline.java:234)
	at java.base/java.util.stream.ReferencePipeline.forEach(ReferencePipeline.java:497)
	at org.junit.vintage.engine.VintageTestEngine.executeAllChildren(VintageTestEngine.java:80)
	at org.junit.vintage.engine.VintageTestEngine.execute(VintageTestEngine.java:71)
	at org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:220)
	at org.junit.platform.launcher.core.DefaultLauncher.lambda$execute$6(DefaultLauncher.java:188)
	at org.junit.platform.launcher.core.DefaultLauncher.withInterceptedStreams(DefaultLauncher.java:202)
	at org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:181)
	at org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:128)
	at org.apache.maven.surefire.junitplatform.JUnitPlatformProvider.invokeAllTests(JUnitPlatformProvider.java:150)
	at org.apache.maven.surefire.junitplatform.JUnitPlatformProvider.invoke(JUnitPlatformProvider.java:124)
	at org.apache.maven.surefire.booter.ForkedBooter.invokeProviderInSameClassLoader(ForkedBooter.java:384)
	at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:345)
	at org.apache.maven.surefire.booter.ForkedBooter.execute(ForkedBooter.java:126)
	at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:418)
Caused by: java.lang.reflect.InaccessibleObjectException: Unable to make jdk.internal.loader.ClassLoaders$AppClassLoader(jdk.internal.loader.ClassLoaders$PlatformClassLoader,jdk.internal.loader.URLClassPath) accessible: module java.base does not "opens jdk.internal.loader" to unnamed module @5fcacc0
	at java.base/java.lang.reflect.AccessibleObject.checkCanSetAccessible(AccessibleObject.java:361)
	at java.base/java.lang.reflect.AccessibleObject.checkCanSetAccessible(AccessibleObject.java:301)
	at java.base/java.lang.reflect.Constructor.checkCanSetAccessible(Constructor.java:189)
	at java.base/java.lang.reflect.Constructor.setAccessible(Constructor.java:182)
	at org.codehaus.groovy.reflection.CachedConstructor$1.run(CachedConstructor.java:44)
	at java.base/java.security.AccessController.doPrivileged(AccessController.java:312)
	at org.codehaus.groovy.reflection.CachedConstructor.<init>(CachedConstructor.java:42)
	at org.codehaus.groovy.reflection.CachedClass$2.initValue(CachedClass.java:79)
	at org.codehaus.groovy.reflection.CachedClass$2.initValue(CachedClass.java:69)
	at org.codehaus.groovy.util.LazyReference.getLocked(LazyReference.java:49)
	at org.codehaus.groovy.util.LazyReference.get(LazyReference.java:36)
	at org.codehaus.groovy.reflection.CachedClass.getConstructors(CachedClass.java:268)
	at groovy.lang.MetaClassImpl.<init>(MetaClassImpl.java:218)
	at groovy.lang.MetaClassImpl.<init>(MetaClassImpl.java:228)
	at groovy.lang.MetaClassRegistry$MetaClassCreationHandle.createNormalMetaClass(MetaClassRegistry.java:171)
	at groovy.lang.MetaClassRegistry$MetaClassCreationHandle.createWithCustomLookup(MetaClassRegistry.java:161)
	at groovy.lang.MetaClassRegistry$MetaClassCreationHandle.create(MetaClassRegistry.java:144)
	at org.codehaus.groovy.reflection.ClassInfo.getMetaClassUnderLock(ClassInfo.java:253)
	at org.codehaus.groovy.reflection.ClassInfo.getMetaClass(ClassInfo.java:285)
	at org.codehaus.groovy.reflection.ClassInfo.getMetaClass(ClassInfo.java:295)
	at org.codehaus.groovy.runtime.metaclass.MetaClassRegistryImpl.getMetaClass(MetaClassRegistryImpl.java:261)
	at org.codehaus.groovy.runtime.InvokerHelper.getMetaClass(InvokerHelper.java:873)
	at org.codehaus.groovy.runtime.InvokerHelper.invokePojoMethod(InvokerHelper.java:906)
	at org.codehaus.groovy.runtime.InvokerHelper.invokeMethod(InvokerHelper.java:898)
	at org.codehaus.groovy.runtime.typehandling.DefaultTypeTransformation.castToBoolean(DefaultTypeTransformation.java:185)
	at org.codehaus.groovy.runtime.typehandling.DefaultTypeTransformation.booleanUnbox(DefaultTypeTransformation.java:74)
	at org.codehaus.groovy.control.customizers.ASTTransformationCustomizer.findASTTranformationClass(ASTTransformationCustomizer.groovy:209)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:64)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:564)
	at org.codehaus.groovy.reflection.CachedMethod.invoke(CachedMethod.java:93)
	at org.codehaus.groovy.runtime.callsite.StaticMetaMethodSite$StaticMetaMethodSiteNoUnwrapNoCoerce.invoke(StaticMetaMethodSite.java:151)
	at org.codehaus.groovy.runtime.callsite.StaticMetaMethodSite.callStatic(StaticMetaMethodSite.java:102)
	at org.codehaus.groovy.runtime.callsite.AbstractCallSite.callStatic(AbstractCallSite.java:214)
	at org.codehaus.groovy.control.customizers.ASTTransformationCustomizer.findPhase(ASTTransformationCustomizer.groovy:226)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:64)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:564)
	at org.codehaus.groovy.reflection.CachedMethod.invoke(CachedMethod.java:93)
	at org.codehaus.groovy.runtime.callsite.StaticMetaMethodSite$StaticMetaMethodSiteNoUnwrapNoCoerce.invoke(StaticMetaMethodSite.java:151)
	at org.codehaus.groovy.runtime.callsite.StaticMetaMethodSite.callStatic(StaticMetaMethodSite.java:102)
	at org.codehaus.groovy.runtime.callsite.AbstractCallSite.callStatic(AbstractCallSite.java:214)
	at org.codehaus.groovy.control.customizers.ASTTransformationCustomizer.<init>(ASTTransformationCustomizer.groovy:180)
	at org.codehaus.groovy.control.customizers.ASTTransformationCustomizer.<init>(ASTTransformationCustomizer.groovy:188)
	at groovy.text.markup.MarkupTemplateEngine.<init>(MarkupTemplateEngine.java:94)
	at org.springframework.web.servlet.view.groovy.GroovyMarkupConfigurer.createTemplateEngine(GroovyMarkupConfigurer.java:160)
	at org.springframework.web.servlet.view.groovy.GroovyMarkupConfigurer.afterPropertiesSet(GroovyMarkupConfigurer.java:153)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1862)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1799)
	... 62 common frames omitted
2020-11-25 20:51:39,375 ERROR  [main] TestContextManager: Caught exception while allowing TestExecutionListener [org.springframework.test.context.web.ServletTestExecutionListener@4237d6e4] to prepare test instance [com.sf.service.ProblemServiceTest@66ffee26]
java.lang.IllegalStateException: Failed to load ApplicationContext
	at org.springframework.test.context.cache.DefaultCacheAwareContextLoaderDelegate.loadContext(DefaultCacheAwareContextLoaderDelegate.java:132)
	at org.springframework.test.context.support.DefaultTestContext.getApplicationContext(DefaultTestContext.java:123)
	at org.springframework.test.context.web.ServletTestExecutionListener.setUpRequestContextIfNecessary(ServletTestExecutionListener.java:190)
	at org.springframework.test.context.web.ServletTestExecutionListener.prepareTestInstance(ServletTestExecutionListener.java:132)
	at org.springframework.test.context.TestContextManager.prepareTestInstance(TestContextManager.java:244)
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner.createTest(SpringJUnit4ClassRunner.java:227)
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner$1.runReflectiveCall(SpringJUnit4ClassRunner.java:289)
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner.methodBlock(SpringJUnit4ClassRunner.java:291)
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner.runChild(SpringJUnit4ClassRunner.java:246)
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner.runChild(SpringJUnit4ClassRunner.java:97)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:290)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:71)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:58)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268)
	at org.junit.internal.runners.statements.RunBefores.evaluate(RunBefores.java:26)
	at org.springframework.test.context.junit4.statements.RunBeforeTestClassCallbacks.evaluate(RunBeforeTestClassCallbacks.java:61)
	at org.junit.internal.runners.statements.RunAfters.evaluate(RunAfters.java:27)
	at org.springframework.test.context.junit4.statements.RunAfterTestClassCallbacks.evaluate(RunAfterTestClassCallbacks.java:70)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:363)
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner.run(SpringJUnit4ClassRunner.java:190)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:137)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:115)
	at org.junit.vintage.engine.execution.RunnerExecutor.execute(RunnerExecutor.java:40)
	at java.base/java.util.stream.ForEachOps$ForEachOp$OfRef.accept(ForEachOps.java:183)
	at java.base/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:195)
	at java.base/java.util.Iterator.forEachRemaining(Iterator.java:133)
	at java.base/java.util.Spliterators$IteratorSpliterator.forEachRemaining(Spliterators.java:1801)
	at java.base/java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:484)
	at java.base/java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:474)
	at java.base/java.util.stream.ForEachOps$ForEachOp.evaluateSequential(ForEachOps.java:150)
	at java.base/java.util.stream.ForEachOps$ForEachOp$OfRef.evaluateSequential(ForEachOps.java:173)
	at java.base/java.util.stream.AbstractPipeline.evaluate(AbstractPipeline.java:234)
	at java.base/java.util.stream.ReferencePipeline.forEach(ReferencePipeline.java:497)
	at org.junit.vintage.engine.VintageTestEngine.executeAllChildren(VintageTestEngine.java:80)
	at org.junit.vintage.engine.VintageTestEngine.execute(VintageTestEngine.java:71)
	at org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:220)
	at org.junit.platform.launcher.core.DefaultLauncher.lambda$execute$6(DefaultLauncher.java:188)
	at org.junit.platform.launcher.core.DefaultLauncher.withInterceptedStreams(DefaultLauncher.java:202)
	at org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:181)
	at org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:128)
	at org.apache.maven.surefire.junitplatform.JUnitPlatformProvider.invokeAllTests(JUnitPlatformProvider.java:150)
	at org.apache.maven.surefire.junitplatform.JUnitPlatformProvider.invoke(JUnitPlatformProvider.java:124)
	at org.apache.maven.surefire.booter.ForkedBooter.invokeProviderInSameClassLoader(ForkedBooter.java:384)
	at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:345)
	at org.apache.maven.surefire.booter.ForkedBooter.execute(ForkedBooter.java:126)
	at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:418)
Caused by: org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'groovyMarkupConfigurer' defined in class path resource [org/springframework/boot/autoconfigure/groovy/template/GroovyTemplateAutoConfiguration$GroovyMarkupConfiguration.class]: Invocation of init method failed; nested exception is java.lang.reflect.InaccessibleObjectException: Unable to make jdk.internal.loader.ClassLoaders$AppClassLoader(jdk.internal.loader.ClassLoaders$PlatformClassLoader,jdk.internal.loader.URLClassPath) accessible: module java.base does not "opens jdk.internal.loader" to unnamed module @5fcacc0
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1803)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:595)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:517)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:323)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:222)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:321)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:202)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(DefaultListableBeanFactory.java:879)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:878)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:550)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:747)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:397)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:315)
	at org.springframework.boot.test.context.SpringBootContextLoader.loadContext(SpringBootContextLoader.java:125)
	at org.springframework.test.context.cache.DefaultCacheAwareContextLoaderDelegate.loadContextInternal(DefaultCacheAwareContextLoaderDelegate.java:99)
	at org.springframework.test.context.cache.DefaultCacheAwareContextLoaderDelegate.loadContext(DefaultCacheAwareContextLoaderDelegate.java:124)
	... 47 common frames omitted
Caused by: java.lang.reflect.InaccessibleObjectException: Unable to make jdk.internal.loader.ClassLoaders$AppClassLoader(jdk.internal.loader.ClassLoaders$PlatformClassLoader,jdk.internal.loader.URLClassPath) accessible: module java.base does not "opens jdk.internal.loader" to unnamed module @5fcacc0
	at java.base/java.lang.reflect.AccessibleObject.checkCanSetAccessible(AccessibleObject.java:361)
	at java.base/java.lang.reflect.AccessibleObject.checkCanSetAccessible(AccessibleObject.java:301)
	at java.base/java.lang.reflect.Constructor.checkCanSetAccessible(Constructor.java:189)
	at java.base/java.lang.reflect.Constructor.setAccessible(Constructor.java:182)
	at org.codehaus.groovy.reflection.CachedConstructor$1.run(CachedConstructor.java:44)
	at java.base/java.security.AccessController.doPrivileged(AccessController.java:312)
	at org.codehaus.groovy.reflection.CachedConstructor.<init>(CachedConstructor.java:42)
	at org.codehaus.groovy.reflection.CachedClass$2.initValue(CachedClass.java:79)
	at org.codehaus.groovy.reflection.CachedClass$2.initValue(CachedClass.java:69)
	at org.codehaus.groovy.util.LazyReference.getLocked(LazyReference.java:49)
	at org.codehaus.groovy.util.LazyReference.get(LazyReference.java:36)
	at org.codehaus.groovy.reflection.CachedClass.getConstructors(CachedClass.java:268)
	at groovy.lang.MetaClassImpl.<init>(MetaClassImpl.java:218)
	at groovy.lang.MetaClassImpl.<init>(MetaClassImpl.java:228)
	at groovy.lang.MetaClassRegistry$MetaClassCreationHandle.createNormalMetaClass(MetaClassRegistry.java:171)
	at groovy.lang.MetaClassRegistry$MetaClassCreationHandle.createWithCustomLookup(MetaClassRegistry.java:161)
	at groovy.lang.MetaClassRegistry$MetaClassCreationHandle.create(MetaClassRegistry.java:144)
	at org.codehaus.groovy.reflection.ClassInfo.getMetaClassUnderLock(ClassInfo.java:253)
	at org.codehaus.groovy.reflection.ClassInfo.getMetaClass(ClassInfo.java:285)
	at org.codehaus.groovy.reflection.ClassInfo.getMetaClass(ClassInfo.java:295)
	at org.codehaus.groovy.runtime.metaclass.MetaClassRegistryImpl.getMetaClass(MetaClassRegistryImpl.java:261)
	at org.codehaus.groovy.runtime.InvokerHelper.getMetaClass(InvokerHelper.java:873)
	at org.codehaus.groovy.runtime.InvokerHelper.invokePojoMethod(InvokerHelper.java:906)
	at org.codehaus.groovy.runtime.InvokerHelper.invokeMethod(InvokerHelper.java:898)
	at org.codehaus.groovy.runtime.typehandling.DefaultTypeTransformation.castToBoolean(DefaultTypeTransformation.java:185)
	at org.codehaus.groovy.runtime.typehandling.DefaultTypeTransformation.booleanUnbox(DefaultTypeTransformation.java:74)
	at org.codehaus.groovy.control.customizers.ASTTransformationCustomizer.findASTTranformationClass(ASTTransformationCustomizer.groovy:209)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:64)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:564)
	at org.codehaus.groovy.reflection.CachedMethod.invoke(CachedMethod.java:93)
	at org.codehaus.groovy.runtime.callsite.StaticMetaMethodSite$StaticMetaMethodSiteNoUnwrapNoCoerce.invoke(StaticMetaMethodSite.java:151)
	at org.codehaus.groovy.runtime.callsite.StaticMetaMethodSite.callStatic(StaticMetaMethodSite.java:102)
	at org.codehaus.groovy.runtime.callsite.AbstractCallSite.callStatic(AbstractCallSite.java:214)
	at org.codehaus.groovy.control.customizers.ASTTransformationCustomizer.findPhase(ASTTransformationCustomizer.groovy:226)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:64)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:564)
	at org.codehaus.groovy.reflection.CachedMethod.invoke(CachedMethod.java:93)
	at org.codehaus.groovy.runtime.callsite.StaticMetaMethodSite$StaticMetaMethodSiteNoUnwrapNoCoerce.invoke(StaticMetaMethodSite.java:151)
	at org.codehaus.groovy.runtime.callsite.StaticMetaMethodSite.callStatic(StaticMetaMethodSite.java:102)
	at org.codehaus.groovy.runtime.callsite.AbstractCallSite.callStatic(AbstractCallSite.java:214)
	at org.codehaus.groovy.control.customizers.ASTTransformationCustomizer.<init>(ASTTransformationCustomizer.groovy:180)
	at org.codehaus.groovy.control.customizers.ASTTransformationCustomizer.<init>(ASTTransformationCustomizer.groovy:188)
	at groovy.text.markup.MarkupTemplateEngine.<init>(MarkupTemplateEngine.java:94)
	at org.springframework.web.servlet.view.groovy.GroovyMarkupConfigurer.createTemplateEngine(GroovyMarkupConfigurer.java:160)
	at org.springframework.web.servlet.view.groovy.GroovyMarkupConfigurer.afterPropertiesSet(GroovyMarkupConfigurer.java:153)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1862)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1799)
	... 62 common frames omitted
2020-11-25 20:51:39,881 DEBUG  [main] BasicTypeRegistry: Adding type registration boolean -> org.hibernate.type.BooleanType@59127611
2020-11-25 20:51:39,884 DEBUG  [main] BasicTypeRegistry: Adding type registration boolean -> org.hibernate.type.BooleanType@59127611
2020-11-25 20:51:39,885 DEBUG  [main] BasicTypeRegistry: Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@59127611
2020-11-25 20:51:39,885 DEBUG  [main] BasicTypeRegistry: Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@18db3b3c
2020-11-25 20:51:39,885 DEBUG  [main] BasicTypeRegistry: Adding type registration true_false -> org.hibernate.type.TrueFalseType@5c1c9881
2020-11-25 20:51:39,885 DEBUG  [main] BasicTypeRegistry: Adding type registration yes_no -> org.hibernate.type.YesNoType@5d37aa0f
2020-11-25 20:51:39,885 DEBUG  [main] BasicTypeRegistry: Adding type registration byte -> org.hibernate.type.ByteType@3e4afd10
2020-11-25 20:51:39,886 DEBUG  [main] BasicTypeRegistry: Adding type registration byte -> org.hibernate.type.ByteType@3e4afd10
2020-11-25 20:51:39,886 DEBUG  [main] BasicTypeRegistry: Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@3e4afd10
2020-11-25 20:51:39,886 DEBUG  [main] BasicTypeRegistry: Adding type registration character -> org.hibernate.type.CharacterType@48d44b46
2020-11-25 20:51:39,886 DEBUG  [main] BasicTypeRegistry: Adding type registration char -> org.hibernate.type.CharacterType@48d44b46
2020-11-25 20:51:39,886 DEBUG  [main] BasicTypeRegistry: Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@48d44b46
2020-11-25 20:51:39,886 DEBUG  [main] BasicTypeRegistry: Adding type registration short -> org.hibernate.type.ShortType@dd20ebc
2020-11-25 20:51:39,886 DEBUG  [main] BasicTypeRegistry: Adding type registration short -> org.hibernate.type.ShortType@dd20ebc
2020-11-25 20:51:39,887 DEBUG  [main] BasicTypeRegistry: Adding type registration java.lang.Short -> org.hibernate.type.ShortType@dd20ebc
2020-11-25 20:51:39,887 DEBUG  [main] BasicTypeRegistry: Adding type registration integer -> org.hibernate.type.IntegerType@5f7cd50e
2020-11-25 20:51:39,887 DEBUG  [main] BasicTypeRegistry: Adding type registration int -> org.hibernate.type.IntegerType@5f7cd50e
2020-11-25 20:51:39,887 DEBUG  [main] BasicTypeRegistry: Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@5f7cd50e
2020-11-25 20:51:39,887 DEBUG  [main] BasicTypeRegistry: Adding type registration long -> org.hibernate.type.LongType@359e27d2
2020-11-25 20:51:39,888 DEBUG  [main] BasicTypeRegistry: Adding type registration long -> org.hibernate.type.LongType@359e27d2
2020-11-25 20:51:39,888 DEBUG  [main] BasicTypeRegistry: Adding type registration java.lang.Long -> org.hibernate.type.LongType@359e27d2
2020-11-25 20:51:39,888 DEBUG  [main] BasicTypeRegistry: Adding type registration float -> org.hibernate.type.FloatType@29b8df5
2020-11-25 20:51:39,889 DEBUG  [main] BasicTypeRegistry: Adding type registration float -> org.hibernate.type.FloatType@29b8df5
2020-11-25 20:51:39,889 DEBUG  [main] BasicTypeRegistry: Adding type registration java.lang.Float -> org.hibernate.type.FloatType@29b8df5
2020-11-25 20:51:39,889 DEBUG  [main] BasicTypeRegistry: Adding type registration double -> org.hibernate.type.DoubleType@36cfe107
2020-11-25 20:51:39,890 DEBUG  [main] BasicTypeRegistry: Adding type registration double -> org.hibernate.type.DoubleType@36cfe107
2020-11-25 20:51:39,890 DEBUG  [main] BasicTypeRegistry: Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@36cfe107
2020-11-25 20:51:39,891 DEBUG  [main] BasicTypeRegistry: Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@139089a4
2020-11-25 20:51:39,891 DEBUG  [main] BasicTypeRegistry: Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@139089a4
2020-11-25 20:51:39,891 DEBUG  [main] BasicTypeRegistry: Adding type registration big_integer -> org.hibernate.type.BigIntegerType@9f1ca74
2020-11-25 20:51:39,891 DEBUG  [main] BasicTypeRegistry: Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@9f1ca74
2020-11-25 20:51:39,891 DEBUG  [main] BasicTypeRegistry: Adding type registration string -> org.hibernate.type.StringType@393ae7a0
2020-11-25 20:51:39,891 DEBUG  [main] BasicTypeRegistry: Adding type registration java.lang.String -> org.hibernate.type.StringType@393ae7a0
2020-11-25 20:51:39,892 DEBUG  [main] BasicTypeRegistry: Adding type registration nstring -> org.hibernate.type.StringNVarcharType@7ee12d58
2020-11-25 20:51:39,892 DEBUG  [main] BasicTypeRegistry: Adding type registration ncharacter -> org.hibernate.type.CharacterNCharType@34e990cc
2020-11-25 20:51:39,892 DEBUG  [main] BasicTypeRegistry: Adding type registration url -> org.hibernate.type.UrlType@6de84336
2020-11-25 20:51:39,893 DEBUG  [main] BasicTypeRegistry: Adding type registration java.net.URL -> org.hibernate.type.UrlType@6de84336
2020-11-25 20:51:39,893 DEBUG  [main] BasicTypeRegistry: Adding type registration Duration -> org.hibernate.type.DurationType@69b37f5c
2020-11-25 20:51:39,893 DEBUG  [main] BasicTypeRegistry: Adding type registration java.time.Duration -> org.hibernate.type.DurationType@69b37f5c
2020-11-25 20:51:39,894 DEBUG  [main] BasicTypeRegistry: Adding type registration Instant -> org.hibernate.type.InstantType@580ffea
2020-11-25 20:51:39,894 DEBUG  [main] BasicTypeRegistry: Adding type registration java.time.Instant -> org.hibernate.type.InstantType@580ffea
2020-11-25 20:51:39,894 DEBUG  [main] BasicTypeRegistry: Adding type registration LocalDateTime -> org.hibernate.type.LocalDateTimeType@79d49790
2020-11-25 20:51:39,894 DEBUG  [main] BasicTypeRegistry: Adding type registration java.time.LocalDateTime -> org.hibernate.type.LocalDateTimeType@79d49790
2020-11-25 20:51:39,895 DEBUG  [main] BasicTypeRegistry: Adding type registration LocalDate -> org.hibernate.type.LocalDateType@3e9fb485
2020-11-25 20:51:39,895 DEBUG  [main] BasicTypeRegistry: Adding type registration java.time.LocalDate -> org.hibernate.type.LocalDateType@3e9fb485
2020-11-25 20:51:39,895 DEBUG  [main] BasicTypeRegistry: Adding type registration LocalTime -> org.hibernate.type.LocalTimeType@419f0ea
2020-11-25 20:51:39,895 DEBUG  [main] BasicTypeRegistry: Adding type registration java.time.LocalTime -> org.hibernate.type.LocalTimeType@419f0ea
2020-11-25 20:51:39,895 DEBUG  [main] BasicTypeRegistry: Adding type registration OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@87aec6a
2020-11-25 20:51:39,895 DEBUG  [main] BasicTypeRegistry: Adding type registration java.time.OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@87aec6a
2020-11-25 20:51:39,896 DEBUG  [main] BasicTypeRegistry: Adding type registration OffsetTime -> org.hibernate.type.OffsetTimeType@5529522f
2020-11-25 20:51:39,896 DEBUG  [main] BasicTypeRegistry: Adding type registration java.time.OffsetTime -> org.hibernate.type.OffsetTimeType@5529522f
2020-11-25 20:51:39,896 DEBUG  [main] BasicTypeRegistry: Adding type registration ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@152e7703
2020-11-25 20:51:39,897 DEBUG  [main] BasicTypeRegistry: Adding type registration java.time.ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@152e7703
2020-11-25 20:51:39,898 DEBUG  [main] BasicTypeRegistry: Adding type registration date -> org.hibernate.type.DateType@24fc2c80
2020-11-25 20:51:39,898 DEBUG  [main] BasicTypeRegistry: Adding type registration java.sql.Date -> org.hibernate.type.DateType@24fc2c80
2020-11-25 20:51:39,898 DEBUG  [main] BasicTypeRegistry: Adding type registration time -> org.hibernate.type.TimeType@48b3b1b8
2020-11-25 20:51:39,899 DEBUG  [main] BasicTypeRegistry: Adding type registration java.sql.Time -> org.hibernate.type.TimeType@48b3b1b8
2020-11-25 20:51:39,899 DEBUG  [main] BasicTypeRegistry: Adding type registration timestamp -> org.hibernate.type.TimestampType@686b1e2d
2020-11-25 20:51:39,899 DEBUG  [main] BasicTypeRegistry: Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@686b1e2d
2020-11-25 20:51:39,900 DEBUG  [main] BasicTypeRegistry: Adding type registration java.util.Date -> org.hibernate.type.TimestampType@686b1e2d
2020-11-25 20:51:39,900 DEBUG  [main] BasicTypeRegistry: Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@652b3733
2020-11-25 20:51:39,900 DEBUG  [main] BasicTypeRegistry: Adding type registration calendar -> org.hibernate.type.CalendarType@5be7b749
2020-11-25 20:51:39,901 DEBUG  [main] BasicTypeRegistry: Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@5be7b749
2020-11-25 20:51:39,901 DEBUG  [main] BasicTypeRegistry: Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@5be7b749
2020-11-25 20:51:39,901 DEBUG  [main] BasicTypeRegistry: Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@177ddd24
2020-11-25 20:51:39,902 DEBUG  [main] BasicTypeRegistry: Adding type registration locale -> org.hibernate.type.LocaleType@61ad30f6
2020-11-25 20:51:39,902 DEBUG  [main] BasicTypeRegistry: Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@61ad30f6
2020-11-25 20:51:39,902 DEBUG  [main] BasicTypeRegistry: Adding type registration currency -> org.hibernate.type.CurrencyType@574ebdaf
2020-11-25 20:51:39,902 DEBUG  [main] BasicTypeRegistry: Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@574ebdaf
2020-11-25 20:51:39,903 DEBUG  [main] BasicTypeRegistry: Adding type registration timezone -> org.hibernate.type.TimeZoneType@123ca460
2020-11-25 20:51:39,903 DEBUG  [main] BasicTypeRegistry: Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@123ca460
2020-11-25 20:51:39,904 DEBUG  [main] BasicTypeRegistry: Adding type registration class -> org.hibernate.type.ClassType@3c9f4376
2020-11-25 20:51:39,904 DEBUG  [main] BasicTypeRegistry: Adding type registration java.lang.Class -> org.hibernate.type.ClassType@3c9f4376
2020-11-25 20:51:39,905 DEBUG  [main] BasicTypeRegistry: Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@1958c0d9
2020-11-25 20:51:39,905 DEBUG  [main] BasicTypeRegistry: Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@1958c0d9
2020-11-25 20:51:39,906 DEBUG  [main] BasicTypeRegistry: Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@5fc7255c
2020-11-25 20:51:39,906 DEBUG  [main] BasicTypeRegistry: Adding type registration binary -> org.hibernate.type.BinaryType@79ba0285
2020-11-25 20:51:39,906 DEBUG  [main] BasicTypeRegistry: Adding type registration byte[] -> org.hibernate.type.BinaryType@79ba0285
2020-11-25 20:51:39,907 DEBUG  [main] BasicTypeRegistry: Adding type registration [B -> org.hibernate.type.BinaryType@79ba0285
2020-11-25 20:51:39,907 DEBUG  [main] BasicTypeRegistry: Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@598778cc
2020-11-25 20:51:39,907 DEBUG  [main] BasicTypeRegistry: Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@598778cc
2020-11-25 20:51:39,907 DEBUG  [main] BasicTypeRegistry: Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@598778cc
2020-11-25 20:51:39,908 DEBUG  [main] BasicTypeRegistry: Adding type registration row_version -> org.hibernate.type.RowVersionType@11cadb32
2020-11-25 20:51:39,908 DEBUG  [main] BasicTypeRegistry: Adding type registration image -> org.hibernate.type.ImageType@37986daf
2020-11-25 20:51:39,908 DEBUG  [main] BasicTypeRegistry: Adding type registration characters -> org.hibernate.type.CharArrayType@710afd47
2020-11-25 20:51:39,909 DEBUG  [main] BasicTypeRegistry: Adding type registration char[] -> org.hibernate.type.CharArrayType@710afd47
2020-11-25 20:51:39,909 DEBUG  [main] BasicTypeRegistry: Adding type registration [C -> org.hibernate.type.CharArrayType@710afd47
2020-11-25 20:51:39,909 DEBUG  [main] BasicTypeRegistry: Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@12670e55
2020-11-25 20:51:39,909 DEBUG  [main] BasicTypeRegistry: Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@12670e55
2020-11-25 20:51:39,910 DEBUG  [main] BasicTypeRegistry: Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@12670e55
2020-11-25 20:51:39,910 DEBUG  [main] BasicTypeRegistry: Adding type registration text -> org.hibernate.type.TextType@32ba5c65
2020-11-25 20:51:39,910 DEBUG  [main] BasicTypeRegistry: Adding type registration ntext -> org.hibernate.type.NTextType@10166230
2020-11-25 20:51:39,911 DEBUG  [main] BasicTypeRegistry: Adding type registration blob -> org.hibernate.type.BlobType@13dd7887
2020-11-25 20:51:39,911 DEBUG  [main] BasicTypeRegistry: Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@13dd7887
2020-11-25 20:51:39,911 DEBUG  [main] BasicTypeRegistry: Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@3cbfdf5c
2020-11-25 20:51:39,912 DEBUG  [main] BasicTypeRegistry: Adding type registration clob -> org.hibernate.type.ClobType@58636b50
2020-11-25 20:51:39,912 DEBUG  [main] BasicTypeRegistry: Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@58636b50
2020-11-25 20:51:39,914 DEBUG  [main] BasicTypeRegistry: Adding type registration nclob -> org.hibernate.type.NClobType@1e5aacd9
2020-11-25 20:51:39,914 DEBUG  [main] BasicTypeRegistry: Adding type registration java.sql.NClob -> org.hibernate.type.NClobType@1e5aacd9
2020-11-25 20:51:39,915 DEBUG  [main] BasicTypeRegistry: Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@120411ec
2020-11-25 20:51:39,915 DEBUG  [main] BasicTypeRegistry: Adding type registration materialized_nclob -> org.hibernate.type.MaterializedNClobType@1a34a51e
2020-11-25 20:51:39,916 DEBUG  [main] BasicTypeRegistry: Adding type registration serializable -> org.hibernate.type.SerializableType@6b091a92
2020-11-25 20:51:39,916 DEBUG  [main] BasicTypeRegistry: Adding type registration object -> org.hibernate.type.ObjectType@35329a05
2020-11-25 20:51:39,917 DEBUG  [main] BasicTypeRegistry: Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@35329a05
2020-11-25 20:51:39,917 DEBUG  [main] BasicTypeRegistry: Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@79a9a3a2
2020-11-25 20:51:39,917 DEBUG  [main] BasicTypeRegistry: Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@2d309058
2020-11-25 20:51:39,917 DEBUG  [main] BasicTypeRegistry: Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@52742778
2020-11-25 20:51:39,918 DEBUG  [main] BasicTypeRegistry: Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@2c4e5c05
2020-11-25 20:51:39,918 DEBUG  [main] BasicTypeRegistry: Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@18ce4e9d
2020-11-25 20:51:39,918 DEBUG  [main] BasicTypeRegistry: Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@3155bf8c
2020-11-25 20:51:39,918 DEBUG  [main] BasicTypeRegistry: Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@42690139
2020-11-25 20:51:39,918 DEBUG  [main] BasicTypeRegistry: Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@1c19c305
2020-11-25 20:51:39,929 DEBUG  [main] TypeConfiguration$Scope: Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@3fb917bb] to MetadataBuildingContext [org.hibernate.boot.internal.MetadataBuildingContextRootImpl@3640989b]
2020-11-25 20:51:39,938 DEBUG  [main] EnumType: Using NAMED-based conversion for Enum com.sf.back.entities.Kind
2020-11-25 20:51:39,941 DEBUG  [main] EnumType: Using NAMED-based conversion for Enum com.sf.back.entities.Kind
2020-11-25 20:51:39,953 DEBUG  [main] TypeConfiguration$Scope: Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@3fb917bb] to SessionFactoryImpl [org.hibernate.internal.SessionFactoryImpl@7756d3ad]
2020-11-25 20:51:39,953 DEBUG  [main] EnumType: Using NAMED-based conversion for Enum com.sf.back.entities.Kind
2020-11-25 20:51:39,954 DEBUG  [main] EnumType: Using NAMED-based conversion for Enum com.sf.back.entities.Kind
2020-11-25 20:51:39,967 DEBUG  [main] EnumType: Using NAMED-based conversion for Enum com.sf.back.entities.Kind
2020-11-25 20:51:39,967 DEBUG  [main] EnumType: Using NAMED-based conversion for Enum com.sf.back.entities.Kind
2020-11-25 20:51:39,986 DEBUG  [main] EnumType: Using NAMED-based conversion for Enum com.sf.back.entities.Kind
2020-11-25 20:51:39,986 DEBUG  [main] EnumType: Using NAMED-based conversion for Enum com.sf.back.entities.Kind
2020-11-25 20:51:39,990 DEBUG  [main] EnumType: Using NAMED-based conversion for Enum com.sf.back.entities.Kind
2020-11-25 20:51:39,998 TRACE  [main] TypeConfiguration$Scope: Handling #sessionFactoryCreated from [org.hibernate.internal.SessionFactoryImpl@7756d3ad] for TypeConfiguration
2020-11-25 20:51:40,105 WARN   [main] JpaBaseConfiguration$JpaWebConfiguration: spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2020-11-25 20:51:40,220 WARN   [main] GenericWebApplicationContext: Exception encountered during context initialization - cancelling refresh attempt: org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'groovyMarkupConfigurer' defined in class path resource [org/springframework/boot/autoconfigure/groovy/template/GroovyTemplateAutoConfiguration$GroovyMarkupConfiguration.class]: Invocation of init method failed; nested exception is java.lang.reflect.InaccessibleObjectException: Unable to make jdk.internal.loader.ClassLoaders$AppClassLoader(jdk.internal.loader.ClassLoaders$PlatformClassLoader,jdk.internal.loader.URLClassPath) accessible: module java.base does not "opens jdk.internal.loader" to unnamed module @5fcacc0
2020-11-25 20:51:40,221 TRACE  [main] TypeConfiguration$Scope: Handling #sessionFactoryClosed from [org.hibernate.internal.SessionFactoryImpl@7756d3ad] for TypeConfiguration
2020-11-25 20:51:40,222 DEBUG  [main] TypeConfiguration$Scope: Un-scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration$Scope@762deb10] from SessionFactory [org.hibernate.internal.SessionFactoryImpl@7756d3ad]
2020-11-25 20:51:40,226 ERROR  [main] SpringApplication: Application run failed
org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'groovyMarkupConfigurer' defined in class path resource [org/springframework/boot/autoconfigure/groovy/template/GroovyTemplateAutoConfiguration$GroovyMarkupConfiguration.class]: Invocation of init method failed; nested exception is java.lang.reflect.InaccessibleObjectException: Unable to make jdk.internal.loader.ClassLoaders$AppClassLoader(jdk.internal.loader.ClassLoaders$PlatformClassLoader,jdk.internal.loader.URLClassPath) accessible: module java.base does not "opens jdk.internal.loader" to unnamed module @5fcacc0
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1803)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:595)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:517)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:323)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:222)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:321)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:202)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(DefaultListableBeanFactory.java:879)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:878)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:550)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:747)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:397)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:315)
	at org.springframework.boot.test.context.SpringBootContextLoader.loadContext(SpringBootContextLoader.java:125)
	at org.springframework.test.context.cache.DefaultCacheAwareContextLoaderDelegate.loadContextInternal(DefaultCacheAwareContextLoaderDelegate.java:99)
	at org.springframework.test.context.cache.DefaultCacheAwareContextLoaderDelegate.loadContext(DefaultCacheAwareContextLoaderDelegate.java:124)
	at org.springframework.test.context.support.DefaultTestContext.getApplicationContext(DefaultTestContext.java:123)
	at org.springframework.test.context.web.ServletTestExecutionListener.setUpRequestContextIfNecessary(ServletTestExecutionListener.java:190)
	at org.springframework.test.context.web.ServletTestExecutionListener.prepareTestInstance(ServletTestExecutionListener.java:132)
	at org.springframework.test.context.TestContextManager.prepareTestInstance(TestContextManager.java:244)
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner.createTest(SpringJUnit4ClassRunner.java:227)
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner$1.runReflectiveCall(SpringJUnit4ClassRunner.java:289)
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner.methodBlock(SpringJUnit4ClassRunner.java:291)
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner.runChild(SpringJUnit4ClassRunner.java:246)
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner.runChild(SpringJUnit4ClassRunner.java:97)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:290)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:71)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:58)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268)
	at org.junit.internal.runners.statements.RunBefores.evaluate(RunBefores.java:26)
	at org.springframework.test.context.junit4.statements.RunBeforeTestClassCallbacks.evaluate(RunBeforeTestClassCallbacks.java:61)
	at org.junit.internal.runners.statements.RunAfters.evaluate(RunAfters.java:27)
	at org.springframework.test.context.junit4.statements.RunAfterTestClassCallbacks.evaluate(RunAfterTestClassCallbacks.java:70)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:363)
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner.run(SpringJUnit4ClassRunner.java:190)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:137)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:115)
	at org.junit.vintage.engine.execution.RunnerExecutor.execute(RunnerExecutor.java:40)
	at java.base/java.util.stream.ForEachOps$ForEachOp$OfRef.accept(ForEachOps.java:183)
	at java.base/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:195)
	at java.base/java.util.Iterator.forEachRemaining(Iterator.java:133)
	at java.base/java.util.Spliterators$IteratorSpliterator.forEachRemaining(Spliterators.java:1801)
	at java.base/java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:484)
	at java.base/java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:474)
	at java.base/java.util.stream.ForEachOps$ForEachOp.evaluateSequential(ForEachOps.java:150)
	at java.base/java.util.stream.ForEachOps$ForEachOp$OfRef.evaluateSequential(ForEachOps.java:173)
	at java.base/java.util.stream.AbstractPipeline.evaluate(AbstractPipeline.java:234)
	at java.base/java.util.stream.ReferencePipeline.forEach(ReferencePipeline.java:497)
	at org.junit.vintage.engine.VintageTestEngine.executeAllChildren(VintageTestEngine.java:80)
	at org.junit.vintage.engine.VintageTestEngine.execute(VintageTestEngine.java:71)
	at org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:220)
	at org.junit.platform.launcher.core.DefaultLauncher.lambda$execute$6(DefaultLauncher.java:188)
	at org.junit.platform.launcher.core.DefaultLauncher.withInterceptedStreams(DefaultLauncher.java:202)
	at org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:181)
	at org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:128)
	at org.apache.maven.surefire.junitplatform.JUnitPlatformProvider.invokeAllTests(JUnitPlatformProvider.java:150)
	at org.apache.maven.surefire.junitplatform.JUnitPlatformProvider.invoke(JUnitPlatformProvider.java:124)
	at org.apache.maven.surefire.booter.ForkedBooter.invokeProviderInSameClassLoader(ForkedBooter.java:384)
	at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:345)
	at org.apache.maven.surefire.booter.ForkedBooter.execute(ForkedBooter.java:126)
	at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:418)
Caused by: java.lang.reflect.InaccessibleObjectException: Unable to make jdk.internal.loader.ClassLoaders$AppClassLoader(jdk.internal.loader.ClassLoaders$PlatformClassLoader,jdk.internal.loader.URLClassPath) accessible: module java.base does not "opens jdk.internal.loader" to unnamed module @5fcacc0
	at java.base/java.lang.reflect.AccessibleObject.checkCanSetAccessible(AccessibleObject.java:361)
	at java.base/java.lang.reflect.AccessibleObject.checkCanSetAccessible(AccessibleObject.java:301)
	at java.base/java.lang.reflect.Constructor.checkCanSetAccessible(Constructor.java:189)
	at java.base/java.lang.reflect.Constructor.setAccessible(Constructor.java:182)
	at org.codehaus.groovy.reflection.CachedConstructor$1.run(CachedConstructor.java:44)
	at java.base/java.security.AccessController.doPrivileged(AccessController.java:312)
	at org.codehaus.groovy.reflection.CachedConstructor.<init>(CachedConstructor.java:42)
	at org.codehaus.groovy.reflection.CachedClass$2.initValue(CachedClass.java:79)
	at org.codehaus.groovy.reflection.CachedClass$2.initValue(CachedClass.java:69)
	at org.codehaus.groovy.util.LazyReference.getLocked(LazyReference.java:49)
	at org.codehaus.groovy.util.LazyReference.get(LazyReference.java:36)
	at org.codehaus.groovy.reflection.CachedClass.getConstructors(CachedClass.java:268)
	at groovy.lang.MetaClassImpl.<init>(MetaClassImpl.java:218)
	at groovy.lang.MetaClassImpl.<init>(MetaClassImpl.java:228)
	at groovy.lang.MetaClassRegistry$MetaClassCreationHandle.createNormalMetaClass(MetaClassRegistry.java:171)
	at groovy.lang.MetaClassRegistry$MetaClassCreationHandle.createWithCustomLookup(MetaClassRegistry.java:161)
	at groovy.lang.MetaClassRegistry$MetaClassCreationHandle.create(MetaClassRegistry.java:144)
	at org.codehaus.groovy.reflection.ClassInfo.getMetaClassUnderLock(ClassInfo.java:253)
	at org.codehaus.groovy.reflection.ClassInfo.getMetaClass(ClassInfo.java:285)
	at org.codehaus.groovy.reflection.ClassInfo.getMetaClass(ClassInfo.java:295)
	at org.codehaus.groovy.runtime.metaclass.MetaClassRegistryImpl.getMetaClass(MetaClassRegistryImpl.java:261)
	at org.codehaus.groovy.runtime.InvokerHelper.getMetaClass(InvokerHelper.java:873)
	at org.codehaus.groovy.runtime.InvokerHelper.invokePojoMethod(InvokerHelper.java:906)
	at org.codehaus.groovy.runtime.InvokerHelper.invokeMethod(InvokerHelper.java:898)
	at org.codehaus.groovy.runtime.typehandling.DefaultTypeTransformation.castToBoolean(DefaultTypeTransformation.java:185)
	at org.codehaus.groovy.runtime.typehandling.DefaultTypeTransformation.booleanUnbox(DefaultTypeTransformation.java:74)
	at org.codehaus.groovy.control.customizers.ASTTransformationCustomizer.findASTTranformationClass(ASTTransformationCustomizer.groovy:209)
	at jdk.internal.reflect.GeneratedMethodAccessor358.invoke(Unknown Source)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:564)
	at org.codehaus.groovy.reflection.CachedMethod.invoke(CachedMethod.java:93)
	at org.codehaus.groovy.runtime.callsite.StaticMetaMethodSite$StaticMetaMethodSiteNoUnwrapNoCoerce.invoke(StaticMetaMethodSite.java:151)
	at org.codehaus.groovy.runtime.callsite.StaticMetaMethodSite.callStatic(StaticMetaMethodSite.java:102)
	at org.codehaus.groovy.runtime.callsite.AbstractCallSite.callStatic(AbstractCallSite.java:214)
	at org.codehaus.groovy.control.customizers.ASTTransformationCustomizer.findPhase(ASTTransformationCustomizer.groovy:226)
	at jdk.internal.reflect.GeneratedMethodAccessor357.invoke(Unknown Source)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:564)
	at org.codehaus.groovy.reflection.CachedMethod.invoke(CachedMethod.java:93)
	at org.codehaus.groovy.runtime.callsite.StaticMetaMethodSite$StaticMetaMethodSiteNoUnwrapNoCoerce.invoke(StaticMetaMethodSite.java:151)
	at org.codehaus.groovy.runtime.callsite.StaticMetaMethodSite.callStatic(StaticMetaMethodSite.java:102)
	at org.codehaus.groovy.runtime.callsite.AbstractCallSite.callStatic(AbstractCallSite.java:214)
	at org.codehaus.groovy.control.customizers.ASTTransformationCustomizer.<init>(ASTTransformationCustomizer.groovy:180)
	at org.codehaus.groovy.control.customizers.ASTTransformationCustomizer.<init>(ASTTransformationCustomizer.groovy:188)
	at groovy.text.markup.MarkupTemplateEngine.<init>(MarkupTemplateEngine.java:94)
	at org.springframework.web.servlet.view.groovy.GroovyMarkupConfigurer.createTemplateEngine(GroovyMarkupConfigurer.java:160)
	at org.springframework.web.servlet.view.groovy.GroovyMarkupConfigurer.afterPropertiesSet(GroovyMarkupConfigurer.java:153)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1862)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1799)
	... 62 common frames omitted
2020-11-25 20:51:40,227 ERROR  [main] TestContextManager: Caught exception while allowing TestExecutionListener [org.springframework.test.context.web.ServletTestExecutionListener@4237d6e4] to prepare test instance [com.sf.service.ProblemServiceTest@7d4069b0]
java.lang.IllegalStateException: Failed to load ApplicationContext
	at org.springframework.test.context.cache.DefaultCacheAwareContextLoaderDelegate.loadContext(DefaultCacheAwareContextLoaderDelegate.java:132)
	at org.springframework.test.context.support.DefaultTestContext.getApplicationContext(DefaultTestContext.java:123)
	at org.springframework.test.context.web.ServletTestExecutionListener.setUpRequestContextIfNecessary(ServletTestExecutionListener.java:190)
	at org.springframework.test.context.web.ServletTestExecutionListener.prepareTestInstance(ServletTestExecutionListener.java:132)
	at org.springframework.test.context.TestContextManager.prepareTestInstance(TestContextManager.java:244)
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner.createTest(SpringJUnit4ClassRunner.java:227)
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner$1.runReflectiveCall(SpringJUnit4ClassRunner.java:289)
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner.methodBlock(SpringJUnit4ClassRunner.java:291)
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner.runChild(SpringJUnit4ClassRunner.java:246)
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner.runChild(SpringJUnit4ClassRunner.java:97)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:290)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:71)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:58)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268)
	at org.junit.internal.runners.statements.RunBefores.evaluate(RunBefores.java:26)
	at org.springframework.test.context.junit4.statements.RunBeforeTestClassCallbacks.evaluate(RunBeforeTestClassCallbacks.java:61)
	at org.junit.internal.runners.statements.RunAfters.evaluate(RunAfters.java:27)
	at org.springframework.test.context.junit4.statements.RunAfterTestClassCallbacks.evaluate(RunAfterTestClassCallbacks.java:70)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:363)
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner.run(SpringJUnit4ClassRunner.java:190)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:137)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:115)
	at org.junit.vintage.engine.execution.RunnerExecutor.execute(RunnerExecutor.java:40)
	at java.base/java.util.stream.ForEachOps$ForEachOp$OfRef.accept(ForEachOps.java:183)
	at java.base/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:195)
	at java.base/java.util.Iterator.forEachRemaining(Iterator.java:133)
	at java.base/java.util.Spliterators$IteratorSpliterator.forEachRemaining(Spliterators.java:1801)
	at java.base/java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:484)
	at java.base/java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:474)
	at java.base/java.util.stream.ForEachOps$ForEachOp.evaluateSequential(ForEachOps.java:150)
	at java.base/java.util.stream.ForEachOps$ForEachOp$OfRef.evaluateSequential(ForEachOps.java:173)
	at java.base/java.util.stream.AbstractPipeline.evaluate(AbstractPipeline.java:234)
	at java.base/java.util.stream.ReferencePipeline.forEach(ReferencePipeline.java:497)
	at org.junit.vintage.engine.VintageTestEngine.executeAllChildren(VintageTestEngine.java:80)
	at org.junit.vintage.engine.VintageTestEngine.execute(VintageTestEngine.java:71)
	at org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:220)
	at org.junit.platform.launcher.core.DefaultLauncher.lambda$execute$6(DefaultLauncher.java:188)
	at org.junit.platform.launcher.core.DefaultLauncher.withInterceptedStreams(DefaultLauncher.java:202)
	at org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:181)
	at org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:128)
	at org.apache.maven.surefire.junitplatform.JUnitPlatformProvider.invokeAllTests(JUnitPlatformProvider.java:150)
	at org.apache.maven.surefire.junitplatform.JUnitPlatformProvider.invoke(JUnitPlatformProvider.java:124)
	at org.apache.maven.surefire.booter.ForkedBooter.invokeProviderInSameClassLoader(ForkedBooter.java:384)
	at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:345)
	at org.apache.maven.surefire.booter.ForkedBooter.execute(ForkedBooter.java:126)
	at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:418)
Caused by: org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'groovyMarkupConfigurer' defined in class path resource [org/springframework/boot/autoconfigure/groovy/template/GroovyTemplateAutoConfiguration$GroovyMarkupConfiguration.class]: Invocation of init method failed; nested exception is java.lang.reflect.InaccessibleObjectException: Unable to make jdk.internal.loader.ClassLoaders$AppClassLoader(jdk.internal.loader.ClassLoaders$PlatformClassLoader,jdk.internal.loader.URLClassPath) accessible: module java.base does not "opens jdk.internal.loader" to unnamed module @5fcacc0
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1803)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:595)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:517)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:323)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:222)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:321)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:202)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(DefaultListableBeanFactory.java:879)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:878)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:550)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:747)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:397)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:315)
	at org.springframework.boot.test.context.SpringBootContextLoader.loadContext(SpringBootContextLoader.java:125)
	at org.springframework.test.context.cache.DefaultCacheAwareContextLoaderDelegate.loadContextInternal(DefaultCacheAwareContextLoaderDelegate.java:99)
	at org.springframework.test.context.cache.DefaultCacheAwareContextLoaderDelegate.loadContext(DefaultCacheAwareContextLoaderDelegate.java:124)
	... 47 common frames omitted
Caused by: java.lang.reflect.InaccessibleObjectException: Unable to make jdk.internal.loader.ClassLoaders$AppClassLoader(jdk.internal.loader.ClassLoaders$PlatformClassLoader,jdk.internal.loader.URLClassPath) accessible: module java.base does not "opens jdk.internal.loader" to unnamed module @5fcacc0
	at java.base/java.lang.reflect.AccessibleObject.checkCanSetAccessible(AccessibleObject.java:361)
	at java.base/java.lang.reflect.AccessibleObject.checkCanSetAccessible(AccessibleObject.java:301)
	at java.base/java.lang.reflect.Constructor.checkCanSetAccessible(Constructor.java:189)
	at java.base/java.lang.reflect.Constructor.setAccessible(Constructor.java:182)
	at org.codehaus.groovy.reflection.CachedConstructor$1.run(CachedConstructor.java:44)
	at java.base/java.security.AccessController.doPrivileged(AccessController.java:312)
	at org.codehaus.groovy.reflection.CachedConstructor.<init>(CachedConstructor.java:42)
	at org.codehaus.groovy.reflection.CachedClass$2.initValue(CachedClass.java:79)
	at org.codehaus.groovy.reflection.CachedClass$2.initValue(CachedClass.java:69)
	at org.codehaus.groovy.util.LazyReference.getLocked(LazyReference.java:49)
	at org.codehaus.groovy.util.LazyReference.get(LazyReference.java:36)
	at org.codehaus.groovy.reflection.CachedClass.getConstructors(CachedClass.java:268)
	at groovy.lang.MetaClassImpl.<init>(MetaClassImpl.java:218)
	at groovy.lang.MetaClassImpl.<init>(MetaClassImpl.java:228)
	at groovy.lang.MetaClassRegistry$MetaClassCreationHandle.createNormalMetaClass(MetaClassRegistry.java:171)
	at groovy.lang.MetaClassRegistry$MetaClassCreationHandle.createWithCustomLookup(MetaClassRegistry.java:161)
	at groovy.lang.MetaClassRegistry$MetaClassCreationHandle.create(MetaClassRegistry.java:144)
	at org.codehaus.groovy.reflection.ClassInfo.getMetaClassUnderLock(ClassInfo.java:253)
	at org.codehaus.groovy.reflection.ClassInfo.getMetaClass(ClassInfo.java:285)
	at org.codehaus.groovy.reflection.ClassInfo.getMetaClass(ClassInfo.java:295)
	at org.codehaus.groovy.runtime.metaclass.MetaClassRegistryImpl.getMetaClass(MetaClassRegistryImpl.java:261)
	at org.codehaus.groovy.runtime.InvokerHelper.getMetaClass(InvokerHelper.java:873)
	at org.codehaus.groovy.runtime.InvokerHelper.invokePojoMethod(InvokerHelper.java:906)
	at org.codehaus.groovy.runtime.InvokerHelper.invokeMethod(InvokerHelper.java:898)
	at org.codehaus.groovy.runtime.typehandling.DefaultTypeTransformation.castToBoolean(DefaultTypeTransformation.java:185)
	at org.codehaus.groovy.runtime.typehandling.DefaultTypeTransformation.booleanUnbox(DefaultTypeTransformation.java:74)
	at org.codehaus.groovy.control.customizers.ASTTransformationCustomizer.findASTTranformationClass(ASTTransformationCustomizer.groovy:209)
	at jdk.internal.reflect.GeneratedMethodAccessor358.invoke(Unknown Source)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:564)
	at org.codehaus.groovy.reflection.CachedMethod.invoke(CachedMethod.java:93)
	at org.codehaus.groovy.runtime.callsite.StaticMetaMethodSite$StaticMetaMethodSiteNoUnwrapNoCoerce.invoke(StaticMetaMethodSite.java:151)
	at org.codehaus.groovy.runtime.callsite.StaticMetaMethodSite.callStatic(StaticMetaMethodSite.java:102)
	at org.codehaus.groovy.runtime.callsite.AbstractCallSite.callStatic(AbstractCallSite.java:214)
	at org.codehaus.groovy.control.customizers.ASTTransformationCustomizer.findPhase(ASTTransformationCustomizer.groovy:226)
	at jdk.internal.reflect.GeneratedMethodAccessor357.invoke(Unknown Source)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:564)
	at org.codehaus.groovy.reflection.CachedMethod.invoke(CachedMethod.java:93)
	at org.codehaus.groovy.runtime.callsite.StaticMetaMethodSite$StaticMetaMethodSiteNoUnwrapNoCoerce.invoke(StaticMetaMethodSite.java:151)
	at org.codehaus.groovy.runtime.callsite.StaticMetaMethodSite.callStatic(StaticMetaMethodSite.java:102)
	at org.codehaus.groovy.runtime.callsite.AbstractCallSite.callStatic(AbstractCallSite.java:214)
	at org.codehaus.groovy.control.customizers.ASTTransformationCustomizer.<init>(ASTTransformationCustomizer.groovy:180)
	at org.codehaus.groovy.control.customizers.ASTTransformationCustomizer.<init>(ASTTransformationCustomizer.groovy:188)
	at groovy.text.markup.MarkupTemplateEngine.<init>(MarkupTemplateEngine.java:94)
	at org.springframework.web.servlet.view.groovy.GroovyMarkupConfigurer.createTemplateEngine(GroovyMarkupConfigurer.java:160)
	at org.springframework.web.servlet.view.groovy.GroovyMarkupConfigurer.afterPropertiesSet(GroovyMarkupConfigurer.java:153)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1862)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1799)
	... 62 common frames omitted
2020-11-25 20:51:40,565 DEBUG  [main] BasicTypeRegistry: Adding type registration boolean -> org.hibernate.type.BooleanType@59127611
2020-11-25 20:51:40,569 DEBUG  [main] BasicTypeRegistry: Adding type registration boolean -> org.hibernate.type.BooleanType@59127611
2020-11-25 20:51:40,569 DEBUG  [main] BasicTypeRegistry: Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@59127611
2020-11-25 20:51:40,569 DEBUG  [main] BasicTypeRegistry: Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@18db3b3c
2020-11-25 20:51:40,569 DEBUG  [main] BasicTypeRegistry: Adding type registration true_false -> org.hibernate.type.TrueFalseType@5c1c9881
2020-11-25 20:51:40,569 DEBUG  [main] BasicTypeRegistry: Adding type registration yes_no -> org.hibernate.type.YesNoType@5d37aa0f
2020-11-25 20:51:40,570 DEBUG  [main] BasicTypeRegistry: Adding type registration byte -> org.hibernate.type.ByteType@3e4afd10
2020-11-25 20:51:40,570 DEBUG  [main] BasicTypeRegistry: Adding type registration byte -> org.hibernate.type.ByteType@3e4afd10
2020-11-25 20:51:40,570 DEBUG  [main] BasicTypeRegistry: Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@3e4afd10
2020-11-25 20:51:40,570 DEBUG  [main] BasicTypeRegistry: Adding type registration character -> org.hibernate.type.CharacterType@48d44b46
2020-11-25 20:51:40,570 DEBUG  [main] BasicTypeRegistry: Adding type registration char -> org.hibernate.type.CharacterType@48d44b46
2020-11-25 20:51:40,570 DEBUG  [main] BasicTypeRegistry: Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@48d44b46
2020-11-25 20:51:40,570 DEBUG  [main] BasicTypeRegistry: Adding type registration short -> org.hibernate.type.ShortType@dd20ebc
2020-11-25 20:51:40,570 DEBUG  [main] BasicTypeRegistry: Adding type registration short -> org.hibernate.type.ShortType@dd20ebc
2020-11-25 20:51:40,570 DEBUG  [main] BasicTypeRegistry: Adding type registration java.lang.Short -> org.hibernate.type.ShortType@dd20ebc
2020-11-25 20:51:40,570 DEBUG  [main] BasicTypeRegistry: Adding type registration integer -> org.hibernate.type.IntegerType@5f7cd50e
2020-11-25 20:51:40,570 DEBUG  [main] BasicTypeRegistry: Adding type registration int -> org.hibernate.type.IntegerType@5f7cd50e
2020-11-25 20:51:40,570 DEBUG  [main] BasicTypeRegistry: Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@5f7cd50e
2020-11-25 20:51:40,570 DEBUG  [main] BasicTypeRegistry: Adding type registration long -> org.hibernate.type.LongType@359e27d2
2020-11-25 20:51:40,570 DEBUG  [main] BasicTypeRegistry: Adding type registration long -> org.hibernate.type.LongType@359e27d2
2020-11-25 20:51:40,570 DEBUG  [main] BasicTypeRegistry: Adding type registration java.lang.Long -> org.hibernate.type.LongType@359e27d2
2020-11-25 20:51:40,571 DEBUG  [main] BasicTypeRegistry: Adding type registration float -> org.hibernate.type.FloatType@29b8df5
2020-11-25 20:51:40,571 DEBUG  [main] BasicTypeRegistry: Adding type registration float -> org.hibernate.type.FloatType@29b8df5
2020-11-25 20:51:40,571 DEBUG  [main] BasicTypeRegistry: Adding type registration java.lang.Float -> org.hibernate.type.FloatType@29b8df5
2020-11-25 20:51:40,571 DEBUG  [main] BasicTypeRegistry: Adding type registration double -> org.hibernate.type.DoubleType@36cfe107
2020-11-25 20:51:40,571 DEBUG  [main] BasicTypeRegistry: Adding type registration double -> org.hibernate.type.DoubleType@36cfe107
2020-11-25 20:51:40,571 DEBUG  [main] BasicTypeRegistry: Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@36cfe107
2020-11-25 20:51:40,571 DEBUG  [main] BasicTypeRegistry: Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@139089a4
2020-11-25 20:51:40,571 DEBUG  [main] BasicTypeRegistry: Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@139089a4
2020-11-25 20:51:40,571 DEBUG  [main] BasicTypeRegistry: Adding type registration big_integer -> org.hibernate.type.BigIntegerType@9f1ca74
2020-11-25 20:51:40,571 DEBUG  [main] BasicTypeRegistry: Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@9f1ca74
2020-11-25 20:51:40,571 DEBUG  [main] BasicTypeRegistry: Adding type registration string -> org.hibernate.type.StringType@393ae7a0
2020-11-25 20:51:40,571 DEBUG  [main] BasicTypeRegistry: Adding type registration java.lang.String -> org.hibernate.type.StringType@393ae7a0
2020-11-25 20:51:40,571 DEBUG  [main] BasicTypeRegistry: Adding type registration nstring -> org.hibernate.type.StringNVarcharType@7ee12d58
2020-11-25 20:51:40,571 DEBUG  [main] BasicTypeRegistry: Adding type registration ncharacter -> org.hibernate.type.CharacterNCharType@34e990cc
2020-11-25 20:51:40,572 DEBUG  [main] BasicTypeRegistry: Adding type registration url -> org.hibernate.type.UrlType@6de84336
2020-11-25 20:51:40,572 DEBUG  [main] BasicTypeRegistry: Adding type registration java.net.URL -> org.hibernate.type.UrlType@6de84336
2020-11-25 20:51:40,572 DEBUG  [main] BasicTypeRegistry: Adding type registration Duration -> org.hibernate.type.DurationType@69b37f5c
2020-11-25 20:51:40,572 DEBUG  [main] BasicTypeRegistry: Adding type registration java.time.Duration -> org.hibernate.type.DurationType@69b37f5c
2020-11-25 20:51:40,572 DEBUG  [main] BasicTypeRegistry: Adding type registration Instant -> org.hibernate.type.InstantType@580ffea
2020-11-25 20:51:40,572 DEBUG  [main] BasicTypeRegistry: Adding type registration java.time.Instant -> org.hibernate.type.InstantType@580ffea
2020-11-25 20:51:40,572 DEBUG  [main] BasicTypeRegistry: Adding type registration LocalDateTime -> org.hibernate.type.LocalDateTimeType@79d49790
2020-11-25 20:51:40,572 DEBUG  [main] BasicTypeRegistry: Adding type registration java.time.LocalDateTime -> org.hibernate.type.LocalDateTimeType@79d49790
2020-11-25 20:51:40,572 DEBUG  [main] BasicTypeRegistry: Adding type registration LocalDate -> org.hibernate.type.LocalDateType@3e9fb485
2020-11-25 20:51:40,573 DEBUG  [main] BasicTypeRegistry: Adding type registration java.time.LocalDate -> org.hibernate.type.LocalDateType@3e9fb485
2020-11-25 20:51:40,573 DEBUG  [main] BasicTypeRegistry: Adding type registration LocalTime -> org.hibernate.type.LocalTimeType@419f0ea
2020-11-25 20:51:40,573 DEBUG  [main] BasicTypeRegistry: Adding type registration java.time.LocalTime -> org.hibernate.type.LocalTimeType@419f0ea
2020-11-25 20:51:40,573 DEBUG  [main] BasicTypeRegistry: Adding type registration OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@87aec6a
2020-11-25 20:51:40,573 DEBUG  [main] BasicTypeRegistry: Adding type registration java.time.OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@87aec6a
2020-11-25 20:51:40,573 DEBUG  [main] BasicTypeRegistry: Adding type registration OffsetTime -> org.hibernate.type.OffsetTimeType@5529522f
2020-11-25 20:51:40,573 DEBUG  [main] BasicTypeRegistry: Adding type registration java.time.OffsetTime -> org.hibernate.type.OffsetTimeType@5529522f
2020-11-25 20:51:40,573 DEBUG  [main] BasicTypeRegistry: Adding type registration ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@152e7703
2020-11-25 20:51:40,573 DEBUG  [main] BasicTypeRegistry: Adding type registration java.time.ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@152e7703
2020-11-25 20:51:40,573 DEBUG  [main] BasicTypeRegistry: Adding type registration date -> org.hibernate.type.DateType@24fc2c80
2020-11-25 20:51:40,574 DEBUG  [main] BasicTypeRegistry: Adding type registration java.sql.Date -> org.hibernate.type.DateType@24fc2c80
2020-11-25 20:51:40,574 DEBUG  [main] BasicTypeRegistry: Adding type registration time -> org.hibernate.type.TimeType@48b3b1b8
2020-11-25 20:51:40,574 DEBUG  [main] BasicTypeRegistry: Adding type registration java.sql.Time -> org.hibernate.type.TimeType@48b3b1b8
2020-11-25 20:51:40,574 DEBUG  [main] BasicTypeRegistry: Adding type registration timestamp -> org.hibernate.type.TimestampType@686b1e2d
2020-11-25 20:51:40,574 DEBUG  [main] BasicTypeRegistry: Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@686b1e2d
2020-11-25 20:51:40,574 DEBUG  [main] BasicTypeRegistry: Adding type registration java.util.Date -> org.hibernate.type.TimestampType@686b1e2d
2020-11-25 20:51:40,576 DEBUG  [main] BasicTypeRegistry: Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@652b3733
2020-11-25 20:51:40,576 DEBUG  [main] BasicTypeRegistry: Adding type registration calendar -> org.hibernate.type.CalendarType@5be7b749
2020-11-25 20:51:40,576 DEBUG  [main] BasicTypeRegistry: Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@5be7b749
2020-11-25 20:51:40,576 DEBUG  [main] BasicTypeRegistry: Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@5be7b749
2020-11-25 20:51:40,576 DEBUG  [main] BasicTypeRegistry: Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@177ddd24
2020-11-25 20:51:40,576 DEBUG  [main] BasicTypeRegistry: Adding type registration locale -> org.hibernate.type.LocaleType@61ad30f6
2020-11-25 20:51:40,576 DEBUG  [main] BasicTypeRegistry: Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@61ad30f6
2020-11-25 20:51:40,577 DEBUG  [main] BasicTypeRegistry: Adding type registration currency -> org.hibernate.type.CurrencyType@574ebdaf
2020-11-25 20:51:40,577 DEBUG  [main] BasicTypeRegistry: Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@574ebdaf
2020-11-25 20:51:40,577 DEBUG  [main] BasicTypeRegistry: Adding type registration timezone -> org.hibernate.type.TimeZoneType@123ca460
2020-11-25 20:51:40,577 DEBUG  [main] BasicTypeRegistry: Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@123ca460
2020-11-25 20:51:40,577 DEBUG  [main] BasicTypeRegistry: Adding type registration class -> org.hibernate.type.ClassType@3c9f4376
2020-11-25 20:51:40,577 DEBUG  [main] BasicTypeRegistry: Adding type registration java.lang.Class -> org.hibernate.type.ClassType@3c9f4376
2020-11-25 20:51:40,577 DEBUG  [main] BasicTypeRegistry: Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@1958c0d9
2020-11-25 20:51:40,577 DEBUG  [main] BasicTypeRegistry: Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@1958c0d9
2020-11-25 20:51:40,577 DEBUG  [main] BasicTypeRegistry: Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@5fc7255c
2020-11-25 20:51:40,577 DEBUG  [main] BasicTypeRegistry: Adding type registration binary -> org.hibernate.type.BinaryType@79ba0285
2020-11-25 20:51:40,577 DEBUG  [main] BasicTypeRegistry: Adding type registration byte[] -> org.hibernate.type.BinaryType@79ba0285
2020-11-25 20:51:40,578 DEBUG  [main] BasicTypeRegistry: Adding type registration [B -> org.hibernate.type.BinaryType@79ba0285
2020-11-25 20:51:40,578 DEBUG  [main] BasicTypeRegistry: Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@598778cc
2020-11-25 20:51:40,578 DEBUG  [main] BasicTypeRegistry: Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@598778cc
2020-11-25 20:51:40,578 DEBUG  [main] BasicTypeRegistry: Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@598778cc
2020-11-25 20:51:40,578 DEBUG  [main] BasicTypeRegistry: Adding type registration row_version -> org.hibernate.type.RowVersionType@11cadb32
2020-11-25 20:51:40,578 DEBUG  [main] BasicTypeRegistry: Adding type registration image -> org.hibernate.type.ImageType@37986daf
2020-11-25 20:51:40,578 DEBUG  [main] BasicTypeRegistry: Adding type registration characters -> org.hibernate.type.CharArrayType@710afd47
2020-11-25 20:51:40,578 DEBUG  [main] BasicTypeRegistry: Adding type registration char[] -> org.hibernate.type.CharArrayType@710afd47
2020-11-25 20:51:40,578 DEBUG  [main] BasicTypeRegistry: Adding type registration [C -> org.hibernate.type.CharArrayType@710afd47
2020-11-25 20:51:40,578 DEBUG  [main] BasicTypeRegistry: Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@12670e55
2020-11-25 20:51:40,578 DEBUG  [main] BasicTypeRegistry: Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@12670e55
2020-11-25 20:51:40,578 DEBUG  [main] BasicTypeRegistry: Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@12670e55
2020-11-25 20:51:40,578 DEBUG  [main] BasicTypeRegistry: Adding type registration text -> org.hibernate.type.TextType@32ba5c65
2020-11-25 20:51:40,579 DEBUG  [main] BasicTypeRegistry: Adding type registration ntext -> org.hibernate.type.NTextType@10166230
2020-11-25 20:51:40,579 DEBUG  [main] BasicTypeRegistry: Adding type registration blob -> org.hibernate.type.BlobType@13dd7887
2020-11-25 20:51:40,579 DEBUG  [main] BasicTypeRegistry: Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@13dd7887
2020-11-25 20:51:40,579 DEBUG  [main] BasicTypeRegistry: Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@3cbfdf5c
2020-11-25 20:51:40,579 DEBUG  [main] BasicTypeRegistry: Adding type registration clob -> org.hibernate.type.ClobType@58636b50
2020-11-25 20:51:40,579 DEBUG  [main] BasicTypeRegistry: Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@58636b50
2020-11-25 20:51:40,579 DEBUG  [main] BasicTypeRegistry: Adding type registration nclob -> org.hibernate.type.NClobType@1e5aacd9
2020-11-25 20:51:40,579 DEBUG  [main] BasicTypeRegistry: Adding type registration java.sql.NClob -> org.hibernate.type.NClobType@1e5aacd9
2020-11-25 20:51:40,579 DEBUG  [main] BasicTypeRegistry: Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@120411ec
2020-11-25 20:51:40,579 DEBUG  [main] BasicTypeRegistry: Adding type registration materialized_nclob -> org.hibernate.type.MaterializedNClobType@1a34a51e
2020-11-25 20:51:40,580 DEBUG  [main] BasicTypeRegistry: Adding type registration serializable -> org.hibernate.type.SerializableType@6b091a92
2020-11-25 20:51:40,580 DEBUG  [main] BasicTypeRegistry: Adding type registration object -> org.hibernate.type.ObjectType@35329a05
2020-11-25 20:51:40,580 DEBUG  [main] BasicTypeRegistry: Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@35329a05
2020-11-25 20:51:40,580 DEBUG  [main] BasicTypeRegistry: Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@6af12899
2020-11-25 20:51:40,580 DEBUG  [main] BasicTypeRegistry: Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@54d4c35f
2020-11-25 20:51:40,580 DEBUG  [main] BasicTypeRegistry: Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@7db205ba
2020-11-25 20:51:40,580 DEBUG  [main] BasicTypeRegistry: Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@4df95b03
2020-11-25 20:51:40,580 DEBUG  [main] BasicTypeRegistry: Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@2eaf17c5
2020-11-25 20:51:40,580 DEBUG  [main] BasicTypeRegistry: Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@5c13e774
2020-11-25 20:51:40,580 DEBUG  [main] BasicTypeRegistry: Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@31e1a699
2020-11-25 20:51:40,580 DEBUG  [main] BasicTypeRegistry: Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@36c7c2e5
2020-11-25 20:51:40,592 DEBUG  [main] TypeConfiguration$Scope: Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@3d8e2b96] to MetadataBuildingContext [org.hibernate.boot.internal.MetadataBuildingContextRootImpl@7e860a11]
2020-11-25 20:51:40,601 DEBUG  [main] EnumType: Using NAMED-based conversion for Enum com.sf.back.entities.Kind
2020-11-25 20:51:40,603 DEBUG  [main] EnumType: Using NAMED-based conversion for Enum com.sf.back.entities.Kind
2020-11-25 20:51:40,617 DEBUG  [main] TypeConfiguration$Scope: Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@3d8e2b96] to SessionFactoryImpl [org.hibernate.internal.SessionFactoryImpl@22cd7e39]
2020-11-25 20:51:40,618 DEBUG  [main] EnumType: Using NAMED-based conversion for Enum com.sf.back.entities.Kind
2020-11-25 20:51:40,618 DEBUG  [main] EnumType: Using NAMED-based conversion for Enum com.sf.back.entities.Kind
2020-11-25 20:51:40,629 DEBUG  [main] EnumType: Using NAMED-based conversion for Enum com.sf.back.entities.Kind
2020-11-25 20:51:40,629 DEBUG  [main] EnumType: Using NAMED-based conversion for Enum com.sf.back.entities.Kind
2020-11-25 20:51:40,643 DEBUG  [main] EnumType: Using NAMED-based conversion for Enum com.sf.back.entities.Kind
2020-11-25 20:51:40,644 DEBUG  [main] EnumType: Using NAMED-based conversion for Enum com.sf.back.entities.Kind
2020-11-25 20:51:40,647 DEBUG  [main] EnumType: Using NAMED-based conversion for Enum com.sf.back.entities.Kind
2020-11-25 20:51:40,652 TRACE  [main] TypeConfiguration$Scope: Handling #sessionFactoryCreated from [org.hibernate.internal.SessionFactoryImpl@22cd7e39] for TypeConfiguration
2020-11-25 20:51:40,727 WARN   [main] JpaBaseConfiguration$JpaWebConfiguration: spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2020-11-25 20:51:40,805 WARN   [main] GenericWebApplicationContext: Exception encountered during context initialization - cancelling refresh attempt: org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'groovyMarkupConfigurer' defined in class path resource [org/springframework/boot/autoconfigure/groovy/template/GroovyTemplateAutoConfiguration$GroovyMarkupConfiguration.class]: Invocation of init method failed; nested exception is java.lang.reflect.InaccessibleObjectException: Unable to make jdk.internal.loader.ClassLoaders$AppClassLoader(jdk.internal.loader.ClassLoaders$PlatformClassLoader,jdk.internal.loader.URLClassPath) accessible: module java.base does not "opens jdk.internal.loader" to unnamed module @5fcacc0
2020-11-25 20:51:40,807 TRACE  [main] TypeConfiguration$Scope: Handling #sessionFactoryClosed from [org.hibernate.internal.SessionFactoryImpl@22cd7e39] for TypeConfiguration
2020-11-25 20:51:40,807 DEBUG  [main] TypeConfiguration$Scope: Un-scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration$Scope@15f0d6c7] from SessionFactory [org.hibernate.internal.SessionFactoryImpl@22cd7e39]
2020-11-25 20:51:40,811 ERROR  [main] SpringApplication: Application run failed
org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'groovyMarkupConfigurer' defined in class path resource [org/springframework/boot/autoconfigure/groovy/template/GroovyTemplateAutoConfiguration$GroovyMarkupConfiguration.class]: Invocation of init method failed; nested exception is java.lang.reflect.InaccessibleObjectException: Unable to make jdk.internal.loader.ClassLoaders$AppClassLoader(jdk.internal.loader.ClassLoaders$PlatformClassLoader,jdk.internal.loader.URLClassPath) accessible: module java.base does not "opens jdk.internal.loader" to unnamed module @5fcacc0
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1803)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:595)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:517)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:323)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:222)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:321)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:202)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(DefaultListableBeanFactory.java:879)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:878)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:550)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:747)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:397)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:315)
	at org.springframework.boot.test.context.SpringBootContextLoader.loadContext(SpringBootContextLoader.java:125)
	at org.springframework.test.context.cache.DefaultCacheAwareContextLoaderDelegate.loadContextInternal(DefaultCacheAwareContextLoaderDelegate.java:99)
	at org.springframework.test.context.cache.DefaultCacheAwareContextLoaderDelegate.loadContext(DefaultCacheAwareContextLoaderDelegate.java:124)
	at org.springframework.test.context.support.DefaultTestContext.getApplicationContext(DefaultTestContext.java:123)
	at org.springframework.test.context.web.ServletTestExecutionListener.setUpRequestContextIfNecessary(ServletTestExecutionListener.java:190)
	at org.springframework.test.context.web.ServletTestExecutionListener.prepareTestInstance(ServletTestExecutionListener.java:132)
	at org.springframework.test.context.TestContextManager.prepareTestInstance(TestContextManager.java:244)
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner.createTest(SpringJUnit4ClassRunner.java:227)
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner$1.runReflectiveCall(SpringJUnit4ClassRunner.java:289)
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner.methodBlock(SpringJUnit4ClassRunner.java:291)
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner.runChild(SpringJUnit4ClassRunner.java:246)
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner.runChild(SpringJUnit4ClassRunner.java:97)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:290)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:71)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:58)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268)
	at org.junit.internal.runners.statements.RunBefores.evaluate(RunBefores.java:26)
	at org.springframework.test.context.junit4.statements.RunBeforeTestClassCallbacks.evaluate(RunBeforeTestClassCallbacks.java:61)
	at org.junit.internal.runners.statements.RunAfters.evaluate(RunAfters.java:27)
	at org.springframework.test.context.junit4.statements.RunAfterTestClassCallbacks.evaluate(RunAfterTestClassCallbacks.java:70)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:363)
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner.run(SpringJUnit4ClassRunner.java:190)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:137)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:115)
	at org.junit.vintage.engine.execution.RunnerExecutor.execute(RunnerExecutor.java:40)
	at java.base/java.util.stream.ForEachOps$ForEachOp$OfRef.accept(ForEachOps.java:183)
	at java.base/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:195)
	at java.base/java.util.Iterator.forEachRemaining(Iterator.java:133)
	at java.base/java.util.Spliterators$IteratorSpliterator.forEachRemaining(Spliterators.java:1801)
	at java.base/java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:484)
	at java.base/java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:474)
	at java.base/java.util.stream.ForEachOps$ForEachOp.evaluateSequential(ForEachOps.java:150)
	at java.base/java.util.stream.ForEachOps$ForEachOp$OfRef.evaluateSequential(ForEachOps.java:173)
	at java.base/java.util.stream.AbstractPipeline.evaluate(AbstractPipeline.java:234)
	at java.base/java.util.stream.ReferencePipeline.forEach(ReferencePipeline.java:497)
	at org.junit.vintage.engine.VintageTestEngine.executeAllChildren(VintageTestEngine.java:80)
	at org.junit.vintage.engine.VintageTestEngine.execute(VintageTestEngine.java:71)
	at org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:220)
	at org.junit.platform.launcher.core.DefaultLauncher.lambda$execute$6(DefaultLauncher.java:188)
	at org.junit.platform.launcher.core.DefaultLauncher.withInterceptedStreams(DefaultLauncher.java:202)
	at org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:181)
	at org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:128)
	at org.apache.maven.surefire.junitplatform.JUnitPlatformProvider.invokeAllTests(JUnitPlatformProvider.java:150)
	at org.apache.maven.surefire.junitplatform.JUnitPlatformProvider.invoke(JUnitPlatformProvider.java:124)
	at org.apache.maven.surefire.booter.ForkedBooter.invokeProviderInSameClassLoader(ForkedBooter.java:384)
	at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:345)
	at org.apache.maven.surefire.booter.ForkedBooter.execute(ForkedBooter.java:126)
	at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:418)
Caused by: java.lang.reflect.InaccessibleObjectException: Unable to make jdk.internal.loader.ClassLoaders$AppClassLoader(jdk.internal.loader.ClassLoaders$PlatformClassLoader,jdk.internal.loader.URLClassPath) accessible: module java.base does not "opens jdk.internal.loader" to unnamed module @5fcacc0
	at java.base/java.lang.reflect.AccessibleObject.checkCanSetAccessible(AccessibleObject.java:361)
	at java.base/java.lang.reflect.AccessibleObject.checkCanSetAccessible(AccessibleObject.java:301)
	at java.base/java.lang.reflect.Constructor.checkCanSetAccessible(Constructor.java:189)
	at java.base/java.lang.reflect.Constructor.setAccessible(Constructor.java:182)
	at org.codehaus.groovy.reflection.CachedConstructor$1.run(CachedConstructor.java:44)
	at java.base/java.security.AccessController.doPrivileged(AccessController.java:312)
	at org.codehaus.groovy.reflection.CachedConstructor.<init>(CachedConstructor.java:42)
	at org.codehaus.groovy.reflection.CachedClass$2.initValue(CachedClass.java:79)
	at org.codehaus.groovy.reflection.CachedClass$2.initValue(CachedClass.java:69)
	at org.codehaus.groovy.util.LazyReference.getLocked(LazyReference.java:49)
	at org.codehaus.groovy.util.LazyReference.get(LazyReference.java:36)
	at org.codehaus.groovy.reflection.CachedClass.getConstructors(CachedClass.java:268)
	at groovy.lang.MetaClassImpl.<init>(MetaClassImpl.java:218)
	at groovy.lang.MetaClassImpl.<init>(MetaClassImpl.java:228)
	at groovy.lang.MetaClassRegistry$MetaClassCreationHandle.createNormalMetaClass(MetaClassRegistry.java:171)
	at groovy.lang.MetaClassRegistry$MetaClassCreationHandle.createWithCustomLookup(MetaClassRegistry.java:161)
	at groovy.lang.MetaClassRegistry$MetaClassCreationHandle.create(MetaClassRegistry.java:144)
	at org.codehaus.groovy.reflection.ClassInfo.getMetaClassUnderLock(ClassInfo.java:253)
	at org.codehaus.groovy.reflection.ClassInfo.getMetaClass(ClassInfo.java:285)
	at org.codehaus.groovy.reflection.ClassInfo.getMetaClass(ClassInfo.java:295)
	at org.codehaus.groovy.runtime.metaclass.MetaClassRegistryImpl.getMetaClass(MetaClassRegistryImpl.java:261)
	at org.codehaus.groovy.runtime.InvokerHelper.getMetaClass(InvokerHelper.java:873)
	at org.codehaus.groovy.runtime.InvokerHelper.invokePojoMethod(InvokerHelper.java:906)
	at org.codehaus.groovy.runtime.InvokerHelper.invokeMethod(InvokerHelper.java:898)
	at org.codehaus.groovy.runtime.typehandling.DefaultTypeTransformation.castToBoolean(DefaultTypeTransformation.java:185)
	at org.codehaus.groovy.runtime.typehandling.DefaultTypeTransformation.booleanUnbox(DefaultTypeTransformation.java:74)
	at org.codehaus.groovy.control.customizers.ASTTransformationCustomizer.findASTTranformationClass(ASTTransformationCustomizer.groovy:209)
	at jdk.internal.reflect.GeneratedMethodAccessor358.invoke(Unknown Source)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:564)
	at org.codehaus.groovy.reflection.CachedMethod.invoke(CachedMethod.java:93)
	at org.codehaus.groovy.runtime.callsite.StaticMetaMethodSite$StaticMetaMethodSiteNoUnwrapNoCoerce.invoke(StaticMetaMethodSite.java:151)
	at org.codehaus.groovy.runtime.callsite.StaticMetaMethodSite.callStatic(StaticMetaMethodSite.java:102)
	at org.codehaus.groovy.runtime.callsite.AbstractCallSite.callStatic(AbstractCallSite.java:214)
	at org.codehaus.groovy.control.customizers.ASTTransformationCustomizer.findPhase(ASTTransformationCustomizer.groovy:226)
	at jdk.internal.reflect.GeneratedMethodAccessor357.invoke(Unknown Source)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:564)
	at org.codehaus.groovy.reflection.CachedMethod.invoke(CachedMethod.java:93)
	at org.codehaus.groovy.runtime.callsite.StaticMetaMethodSite$StaticMetaMethodSiteNoUnwrapNoCoerce.invoke(StaticMetaMethodSite.java:151)
	at org.codehaus.groovy.runtime.callsite.StaticMetaMethodSite.callStatic(StaticMetaMethodSite.java:102)
	at org.codehaus.groovy.runtime.callsite.AbstractCallSite.callStatic(AbstractCallSite.java:214)
	at org.codehaus.groovy.control.customizers.ASTTransformationCustomizer.<init>(ASTTransformationCustomizer.groovy:180)
	at org.codehaus.groovy.control.customizers.ASTTransformationCustomizer.<init>(ASTTransformationCustomizer.groovy:188)
	at groovy.text.markup.MarkupTemplateEngine.<init>(MarkupTemplateEngine.java:94)
	at org.springframework.web.servlet.view.groovy.GroovyMarkupConfigurer.createTemplateEngine(GroovyMarkupConfigurer.java:160)
	at org.springframework.web.servlet.view.groovy.GroovyMarkupConfigurer.afterPropertiesSet(GroovyMarkupConfigurer.java:153)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1862)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1799)
	... 62 common frames omitted
2020-11-25 20:51:40,811 ERROR  [main] TestContextManager: Caught exception while allowing TestExecutionListener [org.springframework.test.context.web.ServletTestExecutionListener@4237d6e4] to prepare test instance [com.sf.service.ProblemServiceTest@5a365e06]
java.lang.IllegalStateException: Failed to load ApplicationContext
	at org.springframework.test.context.cache.DefaultCacheAwareContextLoaderDelegate.loadContext(DefaultCacheAwareContextLoaderDelegate.java:132)
	at org.springframework.test.context.support.DefaultTestContext.getApplicationContext(DefaultTestContext.java:123)
	at org.springframework.test.context.web.ServletTestExecutionListener.setUpRequestContextIfNecessary(ServletTestExecutionListener.java:190)
	at org.springframework.test.context.web.ServletTestExecutionListener.prepareTestInstance(ServletTestExecutionListener.java:132)
	at org.springframework.test.context.TestContextManager.prepareTestInstance(TestContextManager.java:244)
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner.createTest(SpringJUnit4ClassRunner.java:227)
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner$1.runReflectiveCall(SpringJUnit4ClassRunner.java:289)
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner.methodBlock(SpringJUnit4ClassRunner.java:291)
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner.runChild(SpringJUnit4ClassRunner.java:246)
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner.runChild(SpringJUnit4ClassRunner.java:97)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:290)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:71)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:58)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268)
	at org.junit.internal.runners.statements.RunBefores.evaluate(RunBefores.java:26)
	at org.springframework.test.context.junit4.statements.RunBeforeTestClassCallbacks.evaluate(RunBeforeTestClassCallbacks.java:61)
	at org.junit.internal.runners.statements.RunAfters.evaluate(RunAfters.java:27)
	at org.springframework.test.context.junit4.statements.RunAfterTestClassCallbacks.evaluate(RunAfterTestClassCallbacks.java:70)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:363)
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner.run(SpringJUnit4ClassRunner.java:190)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:137)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:115)
	at org.junit.vintage.engine.execution.RunnerExecutor.execute(RunnerExecutor.java:40)
	at java.base/java.util.stream.ForEachOps$ForEachOp$OfRef.accept(ForEachOps.java:183)
	at java.base/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:195)
	at java.base/java.util.Iterator.forEachRemaining(Iterator.java:133)
	at java.base/java.util.Spliterators$IteratorSpliterator.forEachRemaining(Spliterators.java:1801)
	at java.base/java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:484)
	at java.base/java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:474)
	at java.base/java.util.stream.ForEachOps$ForEachOp.evaluateSequential(ForEachOps.java:150)
	at java.base/java.util.stream.ForEachOps$ForEachOp$OfRef.evaluateSequential(ForEachOps.java:173)
	at java.base/java.util.stream.AbstractPipeline.evaluate(AbstractPipeline.java:234)
	at java.base/java.util.stream.ReferencePipeline.forEach(ReferencePipeline.java:497)
	at org.junit.vintage.engine.VintageTestEngine.executeAllChildren(VintageTestEngine.java:80)
	at org.junit.vintage.engine.VintageTestEngine.execute(VintageTestEngine.java:71)
	at org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:220)
	at org.junit.platform.launcher.core.DefaultLauncher.lambda$execute$6(DefaultLauncher.java:188)
	at org.junit.platform.launcher.core.DefaultLauncher.withInterceptedStreams(DefaultLauncher.java:202)
	at org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:181)
	at org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:128)
	at org.apache.maven.surefire.junitplatform.JUnitPlatformProvider.invokeAllTests(JUnitPlatformProvider.java:150)
	at org.apache.maven.surefire.junitplatform.JUnitPlatformProvider.invoke(JUnitPlatformProvider.java:124)
	at org.apache.maven.surefire.booter.ForkedBooter.invokeProviderInSameClassLoader(ForkedBooter.java:384)
	at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:345)
	at org.apache.maven.surefire.booter.ForkedBooter.execute(ForkedBooter.java:126)
	at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:418)
Caused by: org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'groovyMarkupConfigurer' defined in class path resource [org/springframework/boot/autoconfigure/groovy/template/GroovyTemplateAutoConfiguration$GroovyMarkupConfiguration.class]: Invocation of init method failed; nested exception is java.lang.reflect.InaccessibleObjectException: Unable to make jdk.internal.loader.ClassLoaders$AppClassLoader(jdk.internal.loader.ClassLoaders$PlatformClassLoader,jdk.internal.loader.URLClassPath) accessible: module java.base does not "opens jdk.internal.loader" to unnamed module @5fcacc0
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1803)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:595)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:517)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:323)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:222)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:321)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:202)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(DefaultListableBeanFactory.java:879)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:878)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:550)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:747)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:397)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:315)
	at org.springframework.boot.test.context.SpringBootContextLoader.loadContext(SpringBootContextLoader.java:125)
	at org.springframework.test.context.cache.DefaultCacheAwareContextLoaderDelegate.loadContextInternal(DefaultCacheAwareContextLoaderDelegate.java:99)
	at org.springframework.test.context.cache.DefaultCacheAwareContextLoaderDelegate.loadContext(DefaultCacheAwareContextLoaderDelegate.java:124)
	... 47 common frames omitted
Caused by: java.lang.reflect.InaccessibleObjectException: Unable to make jdk.internal.loader.ClassLoaders$AppClassLoader(jdk.internal.loader.ClassLoaders$PlatformClassLoader,jdk.internal.loader.URLClassPath) accessible: module java.base does not "opens jdk.internal.loader" to unnamed module @5fcacc0
	at java.base/java.lang.reflect.AccessibleObject.checkCanSetAccessible(AccessibleObject.java:361)
	at java.base/java.lang.reflect.AccessibleObject.checkCanSetAccessible(AccessibleObject.java:301)
	at java.base/java.lang.reflect.Constructor.checkCanSetAccessible(Constructor.java:189)
	at java.base/java.lang.reflect.Constructor.setAccessible(Constructor.java:182)
	at org.codehaus.groovy.reflection.CachedConstructor$1.run(CachedConstructor.java:44)
	at java.base/java.security.AccessController.doPrivileged(AccessController.java:312)
	at org.codehaus.groovy.reflection.CachedConstructor.<init>(CachedConstructor.java:42)
	at org.codehaus.groovy.reflection.CachedClass$2.initValue(CachedClass.java:79)
	at org.codehaus.groovy.reflection.CachedClass$2.initValue(CachedClass.java:69)
	at org.codehaus.groovy.util.LazyReference.getLocked(LazyReference.java:49)
	at org.codehaus.groovy.util.LazyReference.get(LazyReference.java:36)
	at org.codehaus.groovy.reflection.CachedClass.getConstructors(CachedClass.java:268)
	at groovy.lang.MetaClassImpl.<init>(MetaClassImpl.java:218)
	at groovy.lang.MetaClassImpl.<init>(MetaClassImpl.java:228)
	at groovy.lang.MetaClassRegistry$MetaClassCreationHandle.createNormalMetaClass(MetaClassRegistry.java:171)
	at groovy.lang.MetaClassRegistry$MetaClassCreationHandle.createWithCustomLookup(MetaClassRegistry.java:161)
	at groovy.lang.MetaClassRegistry$MetaClassCreationHandle.create(MetaClassRegistry.java:144)
	at org.codehaus.groovy.reflection.ClassInfo.getMetaClassUnderLock(ClassInfo.java:253)
	at org.codehaus.groovy.reflection.ClassInfo.getMetaClass(ClassInfo.java:285)
	at org.codehaus.groovy.reflection.ClassInfo.getMetaClass(ClassInfo.java:295)
	at org.codehaus.groovy.runtime.metaclass.MetaClassRegistryImpl.getMetaClass(MetaClassRegistryImpl.java:261)
	at org.codehaus.groovy.runtime.InvokerHelper.getMetaClass(InvokerHelper.java:873)
	at org.codehaus.groovy.runtime.InvokerHelper.invokePojoMethod(InvokerHelper.java:906)
	at org.codehaus.groovy.runtime.InvokerHelper.invokeMethod(InvokerHelper.java:898)
	at org.codehaus.groovy.runtime.typehandling.DefaultTypeTransformation.castToBoolean(DefaultTypeTransformation.java:185)
	at org.codehaus.groovy.runtime.typehandling.DefaultTypeTransformation.booleanUnbox(DefaultTypeTransformation.java:74)
	at org.codehaus.groovy.control.customizers.ASTTransformationCustomizer.findASTTranformationClass(ASTTransformationCustomizer.groovy:209)
	at jdk.internal.reflect.GeneratedMethodAccessor358.invoke(Unknown Source)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:564)
	at org.codehaus.groovy.reflection.CachedMethod.invoke(CachedMethod.java:93)
	at org.codehaus.groovy.runtime.callsite.StaticMetaMethodSite$StaticMetaMethodSiteNoUnwrapNoCoerce.invoke(StaticMetaMethodSite.java:151)
	at org.codehaus.groovy.runtime.callsite.StaticMetaMethodSite.callStatic(StaticMetaMethodSite.java:102)
	at org.codehaus.groovy.runtime.callsite.AbstractCallSite.callStatic(AbstractCallSite.java:214)
	at org.codehaus.groovy.control.customizers.ASTTransformationCustomizer.findPhase(ASTTransformationCustomizer.groovy:226)
	at jdk.internal.reflect.GeneratedMethodAccessor357.invoke(Unknown Source)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:564)
	at org.codehaus.groovy.reflection.CachedMethod.invoke(CachedMethod.java:93)
	at org.codehaus.groovy.runtime.callsite.StaticMetaMethodSite$StaticMetaMethodSiteNoUnwrapNoCoerce.invoke(StaticMetaMethodSite.java:151)
	at org.codehaus.groovy.runtime.callsite.StaticMetaMethodSite.callStatic(StaticMetaMethodSite.java:102)
	at org.codehaus.groovy.runtime.callsite.AbstractCallSite.callStatic(AbstractCallSite.java:214)
	at org.codehaus.groovy.control.customizers.ASTTransformationCustomizer.<init>(ASTTransformationCustomizer.groovy:180)
	at org.codehaus.groovy.control.customizers.ASTTransformationCustomizer.<init>(ASTTransformationCustomizer.groovy:188)
	at groovy.text.markup.MarkupTemplateEngine.<init>(MarkupTemplateEngine.java:94)
	at org.springframework.web.servlet.view.groovy.GroovyMarkupConfigurer.createTemplateEngine(GroovyMarkupConfigurer.java:160)
	at org.springframework.web.servlet.view.groovy.GroovyMarkupConfigurer.afterPropertiesSet(GroovyMarkupConfigurer.java:153)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1862)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1799)
	... 62 common frames omitted
2020-11-25 20:51:41,298 DEBUG  [main] BasicTypeRegistry: Adding type registration boolean -> org.hibernate.type.BooleanType@59127611
2020-11-25 20:51:41,301 DEBUG  [main] BasicTypeRegistry: Adding type registration boolean -> org.hibernate.type.BooleanType@59127611
2020-11-25 20:51:41,302 DEBUG  [main] BasicTypeRegistry: Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@59127611
2020-11-25 20:51:41,302 DEBUG  [main] BasicTypeRegistry: Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@18db3b3c
2020-11-25 20:51:41,302 DEBUG  [main] BasicTypeRegistry: Adding type registration true_false -> org.hibernate.type.TrueFalseType@5c1c9881
2020-11-25 20:51:41,302 DEBUG  [main] BasicTypeRegistry: Adding type registration yes_no -> org.hibernate.type.YesNoType@5d37aa0f
2020-11-25 20:51:41,302 DEBUG  [main] BasicTypeRegistry: Adding type registration byte -> org.hibernate.type.ByteType@3e4afd10
2020-11-25 20:51:41,302 DEBUG  [main] BasicTypeRegistry: Adding type registration byte -> org.hibernate.type.ByteType@3e4afd10
2020-11-25 20:51:41,302 DEBUG  [main] BasicTypeRegistry: Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@3e4afd10
2020-11-25 20:51:41,302 DEBUG  [main] BasicTypeRegistry: Adding type registration character -> org.hibernate.type.CharacterType@48d44b46
2020-11-25 20:51:41,302 DEBUG  [main] BasicTypeRegistry: Adding type registration char -> org.hibernate.type.CharacterType@48d44b46
2020-11-25 20:51:41,302 DEBUG  [main] BasicTypeRegistry: Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@48d44b46
2020-11-25 20:51:41,302 DEBUG  [main] BasicTypeRegistry: Adding type registration short -> org.hibernate.type.ShortType@dd20ebc
2020-11-25 20:51:41,302 DEBUG  [main] BasicTypeRegistry: Adding type registration short -> org.hibernate.type.ShortType@dd20ebc
2020-11-25 20:51:41,303 DEBUG  [main] BasicTypeRegistry: Adding type registration java.lang.Short -> org.hibernate.type.ShortType@dd20ebc
2020-11-25 20:51:41,303 DEBUG  [main] BasicTypeRegistry: Adding type registration integer -> org.hibernate.type.IntegerType@5f7cd50e
2020-11-25 20:51:41,303 DEBUG  [main] BasicTypeRegistry: Adding type registration int -> org.hibernate.type.IntegerType@5f7cd50e
2020-11-25 20:51:41,303 DEBUG  [main] BasicTypeRegistry: Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@5f7cd50e
2020-11-25 20:51:41,303 DEBUG  [main] BasicTypeRegistry: Adding type registration long -> org.hibernate.type.LongType@359e27d2
2020-11-25 20:51:41,303 DEBUG  [main] BasicTypeRegistry: Adding type registration long -> org.hibernate.type.LongType@359e27d2
2020-11-25 20:51:41,303 DEBUG  [main] BasicTypeRegistry: Adding type registration java.lang.Long -> org.hibernate.type.LongType@359e27d2
2020-11-25 20:51:41,303 DEBUG  [main] BasicTypeRegistry: Adding type registration float -> org.hibernate.type.FloatType@29b8df5
2020-11-25 20:51:41,304 DEBUG  [main] BasicTypeRegistry: Adding type registration float -> org.hibernate.type.FloatType@29b8df5
2020-11-25 20:51:41,304 DEBUG  [main] BasicTypeRegistry: Adding type registration java.lang.Float -> org.hibernate.type.FloatType@29b8df5
2020-11-25 20:51:41,305 DEBUG  [main] BasicTypeRegistry: Adding type registration double -> org.hibernate.type.DoubleType@36cfe107
2020-11-25 20:51:41,305 DEBUG  [main] BasicTypeRegistry: Adding type registration double -> org.hibernate.type.DoubleType@36cfe107
2020-11-25 20:51:41,305 DEBUG  [main] BasicTypeRegistry: Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@36cfe107
2020-11-25 20:51:41,305 DEBUG  [main] BasicTypeRegistry: Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@139089a4
2020-11-25 20:51:41,305 DEBUG  [main] BasicTypeRegistry: Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@139089a4
2020-11-25 20:51:41,305 DEBUG  [main] BasicTypeRegistry: Adding type registration big_integer -> org.hibernate.type.BigIntegerType@9f1ca74
2020-11-25 20:51:41,305 DEBUG  [main] BasicTypeRegistry: Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@9f1ca74
2020-11-25 20:51:41,305 DEBUG  [main] BasicTypeRegistry: Adding type registration string -> org.hibernate.type.StringType@393ae7a0
2020-11-25 20:51:41,305 DEBUG  [main] BasicTypeRegistry: Adding type registration java.lang.String -> org.hibernate.type.StringType@393ae7a0
2020-11-25 20:51:41,305 DEBUG  [main] BasicTypeRegistry: Adding type registration nstring -> org.hibernate.type.StringNVarcharType@7ee12d58
2020-11-25 20:51:41,305 DEBUG  [main] BasicTypeRegistry: Adding type registration ncharacter -> org.hibernate.type.CharacterNCharType@34e990cc
2020-11-25 20:51:41,305 DEBUG  [main] BasicTypeRegistry: Adding type registration url -> org.hibernate.type.UrlType@6de84336
2020-11-25 20:51:41,305 DEBUG  [main] BasicTypeRegistry: Adding type registration java.net.URL -> org.hibernate.type.UrlType@6de84336
2020-11-25 20:51:41,305 DEBUG  [main] BasicTypeRegistry: Adding type registration Duration -> org.hibernate.type.DurationType@69b37f5c
2020-11-25 20:51:41,305 DEBUG  [main] BasicTypeRegistry: Adding type registration java.time.Duration -> org.hibernate.type.DurationType@69b37f5c
2020-11-25 20:51:41,306 DEBUG  [main] BasicTypeRegistry: Adding type registration Instant -> org.hibernate.type.InstantType@580ffea
2020-11-25 20:51:41,306 DEBUG  [main] BasicTypeRegistry: Adding type registration java.time.Instant -> org.hibernate.type.InstantType@580ffea
2020-11-25 20:51:41,306 DEBUG  [main] BasicTypeRegistry: Adding type registration LocalDateTime -> org.hibernate.type.LocalDateTimeType@79d49790
2020-11-25 20:51:41,306 DEBUG  [main] BasicTypeRegistry: Adding type registration java.time.LocalDateTime -> org.hibernate.type.LocalDateTimeType@79d49790
2020-11-25 20:51:41,306 DEBUG  [main] BasicTypeRegistry: Adding type registration LocalDate -> org.hibernate.type.LocalDateType@3e9fb485
2020-11-25 20:51:41,309 DEBUG  [main] BasicTypeRegistry: Adding type registration java.time.LocalDate -> org.hibernate.type.LocalDateType@3e9fb485
2020-11-25 20:51:41,309 DEBUG  [main] BasicTypeRegistry: Adding type registration LocalTime -> org.hibernate.type.LocalTimeType@419f0ea
2020-11-25 20:51:41,309 DEBUG  [main] BasicTypeRegistry: Adding type registration java.time.LocalTime -> org.hibernate.type.LocalTimeType@419f0ea
2020-11-25 20:51:41,309 DEBUG  [main] BasicTypeRegistry: Adding type registration OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@87aec6a
2020-11-25 20:51:41,309 DEBUG  [main] BasicTypeRegistry: Adding type registration java.time.OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@87aec6a
2020-11-25 20:51:41,310 DEBUG  [main] BasicTypeRegistry: Adding type registration OffsetTime -> org.hibernate.type.OffsetTimeType@5529522f
2020-11-25 20:51:41,310 DEBUG  [main] BasicTypeRegistry: Adding type registration java.time.OffsetTime -> org.hibernate.type.OffsetTimeType@5529522f
2020-11-25 20:51:41,310 DEBUG  [main] BasicTypeRegistry: Adding type registration ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@152e7703
2020-11-25 20:51:41,310 DEBUG  [main] BasicTypeRegistry: Adding type registration java.time.ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@152e7703
2020-11-25 20:51:41,310 DEBUG  [main] BasicTypeRegistry: Adding type registration date -> org.hibernate.type.DateType@24fc2c80
2020-11-25 20:51:41,310 DEBUG  [main] BasicTypeRegistry: Adding type registration java.sql.Date -> org.hibernate.type.DateType@24fc2c80
2020-11-25 20:51:41,310 DEBUG  [main] BasicTypeRegistry: Adding type registration time -> org.hibernate.type.TimeType@48b3b1b8
2020-11-25 20:51:41,310 DEBUG  [main] BasicTypeRegistry: Adding type registration java.sql.Time -> org.hibernate.type.TimeType@48b3b1b8
2020-11-25 20:51:41,310 DEBUG  [main] BasicTypeRegistry: Adding type registration timestamp -> org.hibernate.type.TimestampType@686b1e2d
2020-11-25 20:51:41,310 DEBUG  [main] BasicTypeRegistry: Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@686b1e2d
2020-11-25 20:51:41,311 DEBUG  [main] BasicTypeRegistry: Adding type registration java.util.Date -> org.hibernate.type.TimestampType@686b1e2d
2020-11-25 20:51:41,311 DEBUG  [main] BasicTypeRegistry: Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@652b3733
2020-11-25 20:51:41,311 DEBUG  [main] BasicTypeRegistry: Adding type registration calendar -> org.hibernate.type.CalendarType@5be7b749
2020-11-25 20:51:41,311 DEBUG  [main] BasicTypeRegistry: Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@5be7b749
2020-11-25 20:51:41,311 DEBUG  [main] BasicTypeRegistry: Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@5be7b749
2020-11-25 20:51:41,312 DEBUG  [main] BasicTypeRegistry: Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@177ddd24
2020-11-25 20:51:41,312 DEBUG  [main] BasicTypeRegistry: Adding type registration locale -> org.hibernate.type.LocaleType@61ad30f6
2020-11-25 20:51:41,312 DEBUG  [main] BasicTypeRegistry: Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@61ad30f6
2020-11-25 20:51:41,312 DEBUG  [main] BasicTypeRegistry: Adding type registration currency -> org.hibernate.type.CurrencyType@574ebdaf
2020-11-25 20:51:41,312 DEBUG  [main] BasicTypeRegistry: Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@574ebdaf
2020-11-25 20:51:41,312 DEBUG  [main] BasicTypeRegistry: Adding type registration timezone -> org.hibernate.type.TimeZoneType@123ca460
2020-11-25 20:51:41,312 DEBUG  [main] BasicTypeRegistry: Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@123ca460
2020-11-25 20:51:41,313 DEBUG  [main] BasicTypeRegistry: Adding type registration class -> org.hibernate.type.ClassType@3c9f4376
2020-11-25 20:51:41,313 DEBUG  [main] BasicTypeRegistry: Adding type registration java.lang.Class -> org.hibernate.type.ClassType@3c9f4376
2020-11-25 20:51:41,313 DEBUG  [main] BasicTypeRegistry: Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@1958c0d9
2020-11-25 20:51:41,315 DEBUG  [main] BasicTypeRegistry: Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@1958c0d9
2020-11-25 20:51:41,315 DEBUG  [main] BasicTypeRegistry: Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@5fc7255c
2020-11-25 20:51:41,315 DEBUG  [main] BasicTypeRegistry: Adding type registration binary -> org.hibernate.type.BinaryType@79ba0285
2020-11-25 20:51:41,315 DEBUG  [main] BasicTypeRegistry: Adding type registration byte[] -> org.hibernate.type.BinaryType@79ba0285
2020-11-25 20:51:41,315 DEBUG  [main] BasicTypeRegistry: Adding type registration [B -> org.hibernate.type.BinaryType@79ba0285
2020-11-25 20:51:41,315 DEBUG  [main] BasicTypeRegistry: Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@598778cc
2020-11-25 20:51:41,315 DEBUG  [main] BasicTypeRegistry: Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@598778cc
2020-11-25 20:51:41,315 DEBUG  [main] BasicTypeRegistry: Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@598778cc
2020-11-25 20:51:41,316 DEBUG  [main] BasicTypeRegistry: Adding type registration row_version -> org.hibernate.type.RowVersionType@11cadb32
2020-11-25 20:51:41,316 DEBUG  [main] BasicTypeRegistry: Adding type registration image -> org.hibernate.type.ImageType@37986daf
2020-11-25 20:51:41,316 DEBUG  [main] BasicTypeRegistry: Adding type registration characters -> org.hibernate.type.CharArrayType@710afd47
2020-11-25 20:51:41,316 DEBUG  [main] BasicTypeRegistry: Adding type registration char[] -> org.hibernate.type.CharArrayType@710afd47
2020-11-25 20:51:41,316 DEBUG  [main] BasicTypeRegistry: Adding type registration [C -> org.hibernate.type.CharArrayType@710afd47
2020-11-25 20:51:41,316 DEBUG  [main] BasicTypeRegistry: Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@12670e55
2020-11-25 20:51:41,316 DEBUG  [main] BasicTypeRegistry: Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@12670e55
2020-11-25 20:51:41,316 DEBUG  [main] BasicTypeRegistry: Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@12670e55
2020-11-25 20:51:41,319 DEBUG  [main] BasicTypeRegistry: Adding type registration text -> org.hibernate.type.TextType@32ba5c65
2020-11-25 20:51:41,319 DEBUG  [main] BasicTypeRegistry: Adding type registration ntext -> org.hibernate.type.NTextType@10166230
2020-11-25 20:51:41,319 DEBUG  [main] BasicTypeRegistry: Adding type registration blob -> org.hibernate.type.BlobType@13dd7887
2020-11-25 20:51:41,320 DEBUG  [main] BasicTypeRegistry: Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@13dd7887
2020-11-25 20:51:41,320 DEBUG  [main] BasicTypeRegistry: Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@3cbfdf5c
2020-11-25 20:51:41,320 DEBUG  [main] BasicTypeRegistry: Adding type registration clob -> org.hibernate.type.ClobType@58636b50
2020-11-25 20:51:41,320 DEBUG  [main] BasicTypeRegistry: Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@58636b50
2020-11-25 20:51:41,320 DEBUG  [main] BasicTypeRegistry: Adding type registration nclob -> org.hibernate.type.NClobType@1e5aacd9
2020-11-25 20:51:41,320 DEBUG  [main] BasicTypeRegistry: Adding type registration java.sql.NClob -> org.hibernate.type.NClobType@1e5aacd9
2020-11-25 20:51:41,320 DEBUG  [main] BasicTypeRegistry: Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@120411ec
2020-11-25 20:51:41,321 DEBUG  [main] BasicTypeRegistry: Adding type registration materialized_nclob -> org.hibernate.type.MaterializedNClobType@1a34a51e
2020-11-25 20:51:41,321 DEBUG  [main] BasicTypeRegistry: Adding type registration serializable -> org.hibernate.type.SerializableType@6b091a92
2020-11-25 20:51:41,321 DEBUG  [main] BasicTypeRegistry: Adding type registration object -> org.hibernate.type.ObjectType@35329a05
2020-11-25 20:51:41,321 DEBUG  [main] BasicTypeRegistry: Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@35329a05
2020-11-25 20:51:41,321 DEBUG  [main] BasicTypeRegistry: Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@286566f
2020-11-25 20:51:41,322 DEBUG  [main] BasicTypeRegistry: Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@61bfee77
2020-11-25 20:51:41,322 DEBUG  [main] BasicTypeRegistry: Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@2bc41531
2020-11-25 20:51:41,322 DEBUG  [main] BasicTypeRegistry: Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@67af3485
2020-11-25 20:51:41,322 DEBUG  [main] BasicTypeRegistry: Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@572a3331
2020-11-25 20:51:41,322 DEBUG  [main] BasicTypeRegistry: Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@4978a3f5
2020-11-25 20:51:41,322 DEBUG  [main] BasicTypeRegistry: Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@429e4a76
2020-11-25 20:51:41,322 DEBUG  [main] BasicTypeRegistry: Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@5c0b55bc
2020-11-25 20:51:41,333 DEBUG  [main] TypeConfiguration$Scope: Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@6f1fd7c1] to MetadataBuildingContext [org.hibernate.boot.internal.MetadataBuildingContextRootImpl@648c8c22]
2020-11-25 20:51:41,343 DEBUG  [main] EnumType: Using NAMED-based conversion for Enum com.sf.back.entities.Kind
2020-11-25 20:51:41,345 DEBUG  [main] EnumType: Using NAMED-based conversion for Enum com.sf.back.entities.Kind
2020-11-25 20:51:41,361 DEBUG  [main] TypeConfiguration$Scope: Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@6f1fd7c1] to SessionFactoryImpl [org.hibernate.internal.SessionFactoryImpl@512e737]
2020-11-25 20:51:41,362 DEBUG  [main] EnumType: Using NAMED-based conversion for Enum com.sf.back.entities.Kind
2020-11-25 20:51:41,362 DEBUG  [main] EnumType: Using NAMED-based conversion for Enum com.sf.back.entities.Kind
2020-11-25 20:51:41,390 DEBUG  [main] EnumType: Using NAMED-based conversion for Enum com.sf.back.entities.Kind
2020-11-25 20:51:41,391 DEBUG  [main] EnumType: Using NAMED-based conversion for Enum com.sf.back.entities.Kind
2020-11-25 20:51:41,407 DEBUG  [main] EnumType: Using NAMED-based conversion for Enum com.sf.back.entities.Kind
2020-11-25 20:51:41,408 DEBUG  [main] EnumType: Using NAMED-based conversion for Enum com.sf.back.entities.Kind
2020-11-25 20:51:41,413 DEBUG  [main] EnumType: Using NAMED-based conversion for Enum com.sf.back.entities.Kind
2020-11-25 20:51:41,422 TRACE  [main] TypeConfiguration$Scope: Handling #sessionFactoryCreated from [org.hibernate.internal.SessionFactoryImpl@512e737] for TypeConfiguration
2020-11-25 20:51:41,501 WARN   [main] JpaBaseConfiguration$JpaWebConfiguration: spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2020-11-25 20:51:41,570 WARN   [main] GenericWebApplicationContext: Exception encountered during context initialization - cancelling refresh attempt: org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'groovyMarkupConfigurer' defined in class path resource [org/springframework/boot/autoconfigure/groovy/template/GroovyTemplateAutoConfiguration$GroovyMarkupConfiguration.class]: Invocation of init method failed; nested exception is java.lang.reflect.InaccessibleObjectException: Unable to make jdk.internal.loader.ClassLoaders$AppClassLoader(jdk.internal.loader.ClassLoaders$PlatformClassLoader,jdk.internal.loader.URLClassPath) accessible: module java.base does not "opens jdk.internal.loader" to unnamed module @5fcacc0
2020-11-25 20:51:41,571 TRACE  [main] TypeConfiguration$Scope: Handling #sessionFactoryClosed from [org.hibernate.internal.SessionFactoryImpl@512e737] for TypeConfiguration
2020-11-25 20:51:41,571 DEBUG  [main] TypeConfiguration$Scope: Un-scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration$Scope@2c4f762c] from SessionFactory [org.hibernate.internal.SessionFactoryImpl@512e737]
2020-11-25 20:51:41,575 ERROR  [main] SpringApplication: Application run failed
org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'groovyMarkupConfigurer' defined in class path resource [org/springframework/boot/autoconfigure/groovy/template/GroovyTemplateAutoConfiguration$GroovyMarkupConfiguration.class]: Invocation of init method failed; nested exception is java.lang.reflect.InaccessibleObjectException: Unable to make jdk.internal.loader.ClassLoaders$AppClassLoader(jdk.internal.loader.ClassLoaders$PlatformClassLoader,jdk.internal.loader.URLClassPath) accessible: module java.base does not "opens jdk.internal.loader" to unnamed module @5fcacc0
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1803)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:595)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:517)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:323)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:222)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:321)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:202)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(DefaultListableBeanFactory.java:879)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:878)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:550)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:747)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:397)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:315)
	at org.springframework.boot.test.context.SpringBootContextLoader.loadContext(SpringBootContextLoader.java:125)
	at org.springframework.test.context.cache.DefaultCacheAwareContextLoaderDelegate.loadContextInternal(DefaultCacheAwareContextLoaderDelegate.java:99)
	at org.springframework.test.context.cache.DefaultCacheAwareContextLoaderDelegate.loadContext(DefaultCacheAwareContextLoaderDelegate.java:124)
	at org.springframework.test.context.support.DefaultTestContext.getApplicationContext(DefaultTestContext.java:123)
	at org.springframework.test.context.web.ServletTestExecutionListener.setUpRequestContextIfNecessary(ServletTestExecutionListener.java:190)
	at org.springframework.test.context.web.ServletTestExecutionListener.prepareTestInstance(ServletTestExecutionListener.java:132)
	at org.springframework.test.context.TestContextManager.prepareTestInstance(TestContextManager.java:244)
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner.createTest(SpringJUnit4ClassRunner.java:227)
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner$1.runReflectiveCall(SpringJUnit4ClassRunner.java:289)
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner.methodBlock(SpringJUnit4ClassRunner.java:291)
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner.runChild(SpringJUnit4ClassRunner.java:246)
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner.runChild(SpringJUnit4ClassRunner.java:97)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:290)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:71)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:58)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268)
	at org.junit.internal.runners.statements.RunBefores.evaluate(RunBefores.java:26)
	at org.springframework.test.context.junit4.statements.RunBeforeTestClassCallbacks.evaluate(RunBeforeTestClassCallbacks.java:61)
	at org.junit.internal.runners.statements.RunAfters.evaluate(RunAfters.java:27)
	at org.springframework.test.context.junit4.statements.RunAfterTestClassCallbacks.evaluate(RunAfterTestClassCallbacks.java:70)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:363)
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner.run(SpringJUnit4ClassRunner.java:190)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:137)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:115)
	at org.junit.vintage.engine.execution.RunnerExecutor.execute(RunnerExecutor.java:40)
	at java.base/java.util.stream.ForEachOps$ForEachOp$OfRef.accept(ForEachOps.java:183)
	at java.base/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:195)
	at java.base/java.util.Iterator.forEachRemaining(Iterator.java:133)
	at java.base/java.util.Spliterators$IteratorSpliterator.forEachRemaining(Spliterators.java:1801)
	at java.base/java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:484)
	at java.base/java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:474)
	at java.base/java.util.stream.ForEachOps$ForEachOp.evaluateSequential(ForEachOps.java:150)
	at java.base/java.util.stream.ForEachOps$ForEachOp$OfRef.evaluateSequential(ForEachOps.java:173)
	at java.base/java.util.stream.AbstractPipeline.evaluate(AbstractPipeline.java:234)
	at java.base/java.util.stream.ReferencePipeline.forEach(ReferencePipeline.java:497)
	at org.junit.vintage.engine.VintageTestEngine.executeAllChildren(VintageTestEngine.java:80)
	at org.junit.vintage.engine.VintageTestEngine.execute(VintageTestEngine.java:71)
	at org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:220)
	at org.junit.platform.launcher.core.DefaultLauncher.lambda$execute$6(DefaultLauncher.java:188)
	at org.junit.platform.launcher.core.DefaultLauncher.withInterceptedStreams(DefaultLauncher.java:202)
	at org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:181)
	at org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:128)
	at org.apache.maven.surefire.junitplatform.JUnitPlatformProvider.invokeAllTests(JUnitPlatformProvider.java:150)
	at org.apache.maven.surefire.junitplatform.JUnitPlatformProvider.invoke(JUnitPlatformProvider.java:124)
	at org.apache.maven.surefire.booter.ForkedBooter.invokeProviderInSameClassLoader(ForkedBooter.java:384)
	at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:345)
	at org.apache.maven.surefire.booter.ForkedBooter.execute(ForkedBooter.java:126)
	at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:418)
Caused by: java.lang.reflect.InaccessibleObjectException: Unable to make jdk.internal.loader.ClassLoaders$AppClassLoader(jdk.internal.loader.ClassLoaders$PlatformClassLoader,jdk.internal.loader.URLClassPath) accessible: module java.base does not "opens jdk.internal.loader" to unnamed module @5fcacc0
	at java.base/java.lang.reflect.AccessibleObject.checkCanSetAccessible(AccessibleObject.java:361)
	at java.base/java.lang.reflect.AccessibleObject.checkCanSetAccessible(AccessibleObject.java:301)
	at java.base/java.lang.reflect.Constructor.checkCanSetAccessible(Constructor.java:189)
	at java.base/java.lang.reflect.Constructor.setAccessible(Constructor.java:182)
	at org.codehaus.groovy.reflection.CachedConstructor$1.run(CachedConstructor.java:44)
	at java.base/java.security.AccessController.doPrivileged(AccessController.java:312)
	at org.codehaus.groovy.reflection.CachedConstructor.<init>(CachedConstructor.java:42)
	at org.codehaus.groovy.reflection.CachedClass$2.initValue(CachedClass.java:79)
	at org.codehaus.groovy.reflection.CachedClass$2.initValue(CachedClass.java:69)
	at org.codehaus.groovy.util.LazyReference.getLocked(LazyReference.java:49)
	at org.codehaus.groovy.util.LazyReference.get(LazyReference.java:36)
	at org.codehaus.groovy.reflection.CachedClass.getConstructors(CachedClass.java:268)
	at groovy.lang.MetaClassImpl.<init>(MetaClassImpl.java:218)
	at groovy.lang.MetaClassImpl.<init>(MetaClassImpl.java:228)
	at groovy.lang.MetaClassRegistry$MetaClassCreationHandle.createNormalMetaClass(MetaClassRegistry.java:171)
	at groovy.lang.MetaClassRegistry$MetaClassCreationHandle.createWithCustomLookup(MetaClassRegistry.java:161)
	at groovy.lang.MetaClassRegistry$MetaClassCreationHandle.create(MetaClassRegistry.java:144)
	at org.codehaus.groovy.reflection.ClassInfo.getMetaClassUnderLock(ClassInfo.java:253)
	at org.codehaus.groovy.reflection.ClassInfo.getMetaClass(ClassInfo.java:285)
	at org.codehaus.groovy.reflection.ClassInfo.getMetaClass(ClassInfo.java:295)
	at org.codehaus.groovy.runtime.metaclass.MetaClassRegistryImpl.getMetaClass(MetaClassRegistryImpl.java:261)
	at org.codehaus.groovy.runtime.InvokerHelper.getMetaClass(InvokerHelper.java:873)
	at org.codehaus.groovy.runtime.InvokerHelper.invokePojoMethod(InvokerHelper.java:906)
	at org.codehaus.groovy.runtime.InvokerHelper.invokeMethod(InvokerHelper.java:898)
	at org.codehaus.groovy.runtime.typehandling.DefaultTypeTransformation.castToBoolean(DefaultTypeTransformation.java:185)
	at org.codehaus.groovy.runtime.typehandling.DefaultTypeTransformation.booleanUnbox(DefaultTypeTransformation.java:74)
	at org.codehaus.groovy.control.customizers.ASTTransformationCustomizer.findASTTranformationClass(ASTTransformationCustomizer.groovy:209)
	at jdk.internal.reflect.GeneratedMethodAccessor358.invoke(Unknown Source)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:564)
	at org.codehaus.groovy.reflection.CachedMethod.invoke(CachedMethod.java:93)
	at org.codehaus.groovy.runtime.callsite.StaticMetaMethodSite$StaticMetaMethodSiteNoUnwrapNoCoerce.invoke(StaticMetaMethodSite.java:151)
	at org.codehaus.groovy.runtime.callsite.StaticMetaMethodSite.callStatic(StaticMetaMethodSite.java:102)
	at org.codehaus.groovy.runtime.callsite.AbstractCallSite.callStatic(AbstractCallSite.java:214)
	at org.codehaus.groovy.control.customizers.ASTTransformationCustomizer.findPhase(ASTTransformationCustomizer.groovy:226)
	at jdk.internal.reflect.GeneratedMethodAccessor357.invoke(Unknown Source)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:564)
	at org.codehaus.groovy.reflection.CachedMethod.invoke(CachedMethod.java:93)
	at org.codehaus.groovy.runtime.callsite.StaticMetaMethodSite$StaticMetaMethodSiteNoUnwrapNoCoerce.invoke(StaticMetaMethodSite.java:151)
	at org.codehaus.groovy.runtime.callsite.StaticMetaMethodSite.callStatic(StaticMetaMethodSite.java:102)
	at org.codehaus.groovy.runtime.callsite.AbstractCallSite.callStatic(AbstractCallSite.java:214)
	at org.codehaus.groovy.control.customizers.ASTTransformationCustomizer.<init>(ASTTransformationCustomizer.groovy:180)
	at org.codehaus.groovy.control.customizers.ASTTransformationCustomizer.<init>(ASTTransformationCustomizer.groovy:188)
	at groovy.text.markup.MarkupTemplateEngine.<init>(MarkupTemplateEngine.java:94)
	at org.springframework.web.servlet.view.groovy.GroovyMarkupConfigurer.createTemplateEngine(GroovyMarkupConfigurer.java:160)
	at org.springframework.web.servlet.view.groovy.GroovyMarkupConfigurer.afterPropertiesSet(GroovyMarkupConfigurer.java:153)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1862)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1799)
	... 62 common frames omitted
2020-11-25 20:51:41,575 ERROR  [main] TestContextManager: Caught exception while allowing TestExecutionListener [org.springframework.test.context.web.ServletTestExecutionListener@4237d6e4] to prepare test instance [com.sf.service.ProblemServiceTest@242ca475]
java.lang.IllegalStateException: Failed to load ApplicationContext
	at org.springframework.test.context.cache.DefaultCacheAwareContextLoaderDelegate.loadContext(DefaultCacheAwareContextLoaderDelegate.java:132)
	at org.springframework.test.context.support.DefaultTestContext.getApplicationContext(DefaultTestContext.java:123)
	at org.springframework.test.context.web.ServletTestExecutionListener.setUpRequestContextIfNecessary(ServletTestExecutionListener.java:190)
	at org.springframework.test.context.web.ServletTestExecutionListener.prepareTestInstance(ServletTestExecutionListener.java:132)
	at org.springframework.test.context.TestContextManager.prepareTestInstance(TestContextManager.java:244)
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner.createTest(SpringJUnit4ClassRunner.java:227)
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner$1.runReflectiveCall(SpringJUnit4ClassRunner.java:289)
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner.methodBlock(SpringJUnit4ClassRunner.java:291)
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner.runChild(SpringJUnit4ClassRunner.java:246)
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner.runChild(SpringJUnit4ClassRunner.java:97)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:290)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:71)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:58)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268)
	at org.junit.internal.runners.statements.RunBefores.evaluate(RunBefores.java:26)
	at org.springframework.test.context.junit4.statements.RunBeforeTestClassCallbacks.evaluate(RunBeforeTestClassCallbacks.java:61)
	at org.junit.internal.runners.statements.RunAfters.evaluate(RunAfters.java:27)
	at org.springframework.test.context.junit4.statements.RunAfterTestClassCallbacks.evaluate(RunAfterTestClassCallbacks.java:70)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:363)
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner.run(SpringJUnit4ClassRunner.java:190)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:137)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:115)
	at org.junit.vintage.engine.execution.RunnerExecutor.execute(RunnerExecutor.java:40)
	at java.base/java.util.stream.ForEachOps$ForEachOp$OfRef.accept(ForEachOps.java:183)
	at java.base/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:195)
	at java.base/java.util.Iterator.forEachRemaining(Iterator.java:133)
	at java.base/java.util.Spliterators$IteratorSpliterator.forEachRemaining(Spliterators.java:1801)
	at java.base/java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:484)
	at java.base/java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:474)
	at java.base/java.util.stream.ForEachOps$ForEachOp.evaluateSequential(ForEachOps.java:150)
	at java.base/java.util.stream.ForEachOps$ForEachOp$OfRef.evaluateSequential(ForEachOps.java:173)
	at java.base/java.util.stream.AbstractPipeline.evaluate(AbstractPipeline.java:234)
	at java.base/java.util.stream.ReferencePipeline.forEach(ReferencePipeline.java:497)
	at org.junit.vintage.engine.VintageTestEngine.executeAllChildren(VintageTestEngine.java:80)
	at org.junit.vintage.engine.VintageTestEngine.execute(VintageTestEngine.java:71)
	at org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:220)
	at org.junit.platform.launcher.core.DefaultLauncher.lambda$execute$6(DefaultLauncher.java:188)
	at org.junit.platform.launcher.core.DefaultLauncher.withInterceptedStreams(DefaultLauncher.java:202)
	at org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:181)
	at org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:128)
	at org.apache.maven.surefire.junitplatform.JUnitPlatformProvider.invokeAllTests(JUnitPlatformProvider.java:150)
	at org.apache.maven.surefire.junitplatform.JUnitPlatformProvider.invoke(JUnitPlatformProvider.java:124)
	at org.apache.maven.surefire.booter.ForkedBooter.invokeProviderInSameClassLoader(ForkedBooter.java:384)
	at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:345)
	at org.apache.maven.surefire.booter.ForkedBooter.execute(ForkedBooter.java:126)
	at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:418)
Caused by: org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'groovyMarkupConfigurer' defined in class path resource [org/springframework/boot/autoconfigure/groovy/template/GroovyTemplateAutoConfiguration$GroovyMarkupConfiguration.class]: Invocation of init method failed; nested exception is java.lang.reflect.InaccessibleObjectException: Unable to make jdk.internal.loader.ClassLoaders$AppClassLoader(jdk.internal.loader.ClassLoaders$PlatformClassLoader,jdk.internal.loader.URLClassPath) accessible: module java.base does not "opens jdk.internal.loader" to unnamed module @5fcacc0
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1803)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:595)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:517)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:323)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:222)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:321)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:202)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(DefaultListableBeanFactory.java:879)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:878)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:550)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:747)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:397)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:315)
	at org.springframework.boot.test.context.SpringBootContextLoader.loadContext(SpringBootContextLoader.java:125)
	at org.springframework.test.context.cache.DefaultCacheAwareContextLoaderDelegate.loadContextInternal(DefaultCacheAwareContextLoaderDelegate.java:99)
	at org.springframework.test.context.cache.DefaultCacheAwareContextLoaderDelegate.loadContext(DefaultCacheAwareContextLoaderDelegate.java:124)
	... 47 common frames omitted
Caused by: java.lang.reflect.InaccessibleObjectException: Unable to make jdk.internal.loader.ClassLoaders$AppClassLoader(jdk.internal.loader.ClassLoaders$PlatformClassLoader,jdk.internal.loader.URLClassPath) accessible: module java.base does not "opens jdk.internal.loader" to unnamed module @5fcacc0
	at java.base/java.lang.reflect.AccessibleObject.checkCanSetAccessible(AccessibleObject.java:361)
	at java.base/java.lang.reflect.AccessibleObject.checkCanSetAccessible(AccessibleObject.java:301)
	at java.base/java.lang.reflect.Constructor.checkCanSetAccessible(Constructor.java:189)
	at java.base/java.lang.reflect.Constructor.setAccessible(Constructor.java:182)
	at org.codehaus.groovy.reflection.CachedConstructor$1.run(CachedConstructor.java:44)
	at java.base/java.security.AccessController.doPrivileged(AccessController.java:312)
	at org.codehaus.groovy.reflection.CachedConstructor.<init>(CachedConstructor.java:42)
	at org.codehaus.groovy.reflection.CachedClass$2.initValue(CachedClass.java:79)
	at org.codehaus.groovy.reflection.CachedClass$2.initValue(CachedClass.java:69)
	at org.codehaus.groovy.util.LazyReference.getLocked(LazyReference.java:49)
	at org.codehaus.groovy.util.LazyReference.get(LazyReference.java:36)
	at org.codehaus.groovy.reflection.CachedClass.getConstructors(CachedClass.java:268)
	at groovy.lang.MetaClassImpl.<init>(MetaClassImpl.java:218)
	at groovy.lang.MetaClassImpl.<init>(MetaClassImpl.java:228)
	at groovy.lang.MetaClassRegistry$MetaClassCreationHandle.createNormalMetaClass(MetaClassRegistry.java:171)
	at groovy.lang.MetaClassRegistry$MetaClassCreationHandle.createWithCustomLookup(MetaClassRegistry.java:161)
	at groovy.lang.MetaClassRegistry$MetaClassCreationHandle.create(MetaClassRegistry.java:144)
	at org.codehaus.groovy.reflection.ClassInfo.getMetaClassUnderLock(ClassInfo.java:253)
	at org.codehaus.groovy.reflection.ClassInfo.getMetaClass(ClassInfo.java:285)
	at org.codehaus.groovy.reflection.ClassInfo.getMetaClass(ClassInfo.java:295)
	at org.codehaus.groovy.runtime.metaclass.MetaClassRegistryImpl.getMetaClass(MetaClassRegistryImpl.java:261)
	at org.codehaus.groovy.runtime.InvokerHelper.getMetaClass(InvokerHelper.java:873)
	at org.codehaus.groovy.runtime.InvokerHelper.invokePojoMethod(InvokerHelper.java:906)
	at org.codehaus.groovy.runtime.InvokerHelper.invokeMethod(InvokerHelper.java:898)
	at org.codehaus.groovy.runtime.typehandling.DefaultTypeTransformation.castToBoolean(DefaultTypeTransformation.java:185)
	at org.codehaus.groovy.runtime.typehandling.DefaultTypeTransformation.booleanUnbox(DefaultTypeTransformation.java:74)
	at org.codehaus.groovy.control.customizers.ASTTransformationCustomizer.findASTTranformationClass(ASTTransformationCustomizer.groovy:209)
	at jdk.internal.reflect.GeneratedMethodAccessor358.invoke(Unknown Source)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:564)
	at org.codehaus.groovy.reflection.CachedMethod.invoke(CachedMethod.java:93)
	at org.codehaus.groovy.runtime.callsite.StaticMetaMethodSite$StaticMetaMethodSiteNoUnwrapNoCoerce.invoke(StaticMetaMethodSite.java:151)
	at org.codehaus.groovy.runtime.callsite.StaticMetaMethodSite.callStatic(StaticMetaMethodSite.java:102)
	at org.codehaus.groovy.runtime.callsite.AbstractCallSite.callStatic(AbstractCallSite.java:214)
	at org.codehaus.groovy.control.customizers.ASTTransformationCustomizer.findPhase(ASTTransformationCustomizer.groovy:226)
	at jdk.internal.reflect.GeneratedMethodAccessor357.invoke(Unknown Source)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:564)
	at org.codehaus.groovy.reflection.CachedMethod.invoke(CachedMethod.java:93)
	at org.codehaus.groovy.runtime.callsite.StaticMetaMethodSite$StaticMetaMethodSiteNoUnwrapNoCoerce.invoke(StaticMetaMethodSite.java:151)
	at org.codehaus.groovy.runtime.callsite.StaticMetaMethodSite.callStatic(StaticMetaMethodSite.java:102)
	at org.codehaus.groovy.runtime.callsite.AbstractCallSite.callStatic(AbstractCallSite.java:214)
	at org.codehaus.groovy.control.customizers.ASTTransformationCustomizer.<init>(ASTTransformationCustomizer.groovy:180)
	at org.codehaus.groovy.control.customizers.ASTTransformationCustomizer.<init>(ASTTransformationCustomizer.groovy:188)
	at groovy.text.markup.MarkupTemplateEngine.<init>(MarkupTemplateEngine.java:94)
	at org.springframework.web.servlet.view.groovy.GroovyMarkupConfigurer.createTemplateEngine(GroovyMarkupConfigurer.java:160)
	at org.springframework.web.servlet.view.groovy.GroovyMarkupConfigurer.afterPropertiesSet(GroovyMarkupConfigurer.java:153)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1862)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1799)
	... 62 common frames omitted
2020-11-25 20:51:41,885 DEBUG  [main] BasicTypeRegistry: Adding type registration boolean -> org.hibernate.type.BooleanType@59127611
2020-11-25 20:51:41,888 DEBUG  [main] BasicTypeRegistry: Adding type registration boolean -> org.hibernate.type.BooleanType@59127611
2020-11-25 20:51:41,889 DEBUG  [main] BasicTypeRegistry: Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@59127611
2020-11-25 20:51:41,889 DEBUG  [main] BasicTypeRegistry: Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@18db3b3c
2020-11-25 20:51:41,889 DEBUG  [main] BasicTypeRegistry: Adding type registration true_false -> org.hibernate.type.TrueFalseType@5c1c9881
2020-11-25 20:51:41,889 DEBUG  [main] BasicTypeRegistry: Adding type registration yes_no -> org.hibernate.type.YesNoType@5d37aa0f
2020-11-25 20:51:41,889 DEBUG  [main] BasicTypeRegistry: Adding type registration byte -> org.hibernate.type.ByteType@3e4afd10
2020-11-25 20:51:41,889 DEBUG  [main] BasicTypeRegistry: Adding type registration byte -> org.hibernate.type.ByteType@3e4afd10
2020-11-25 20:51:41,890 DEBUG  [main] BasicTypeRegistry: Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@3e4afd10
2020-11-25 20:51:41,890 DEBUG  [main] BasicTypeRegistry: Adding type registration character -> org.hibernate.type.CharacterType@48d44b46
2020-11-25 20:51:41,890 DEBUG  [main] BasicTypeRegistry: Adding type registration char -> org.hibernate.type.CharacterType@48d44b46
2020-11-25 20:51:41,890 DEBUG  [main] BasicTypeRegistry: Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@48d44b46
2020-11-25 20:51:41,890 DEBUG  [main] BasicTypeRegistry: Adding type registration short -> org.hibernate.type.ShortType@dd20ebc
2020-11-25 20:51:41,890 DEBUG  [main] BasicTypeRegistry: Adding type registration short -> org.hibernate.type.ShortType@dd20ebc
2020-11-25 20:51:41,891 DEBUG  [main] BasicTypeRegistry: Adding type registration java.lang.Short -> org.hibernate.type.ShortType@dd20ebc
2020-11-25 20:51:41,891 DEBUG  [main] BasicTypeRegistry: Adding type registration integer -> org.hibernate.type.IntegerType@5f7cd50e
2020-11-25 20:51:41,891 DEBUG  [main] BasicTypeRegistry: Adding type registration int -> org.hibernate.type.IntegerType@5f7cd50e
2020-11-25 20:51:41,891 DEBUG  [main] BasicTypeRegistry: Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@5f7cd50e
2020-11-25 20:51:41,891 DEBUG  [main] BasicTypeRegistry: Adding type registration long -> org.hibernate.type.LongType@359e27d2
2020-11-25 20:51:41,891 DEBUG  [main] BasicTypeRegistry: Adding type registration long -> org.hibernate.type.LongType@359e27d2
2020-11-25 20:51:41,891 DEBUG  [main] BasicTypeRegistry: Adding type registration java.lang.Long -> org.hibernate.type.LongType@359e27d2
2020-11-25 20:51:41,892 DEBUG  [main] BasicTypeRegistry: Adding type registration float -> org.hibernate.type.FloatType@29b8df5
2020-11-25 20:51:41,892 DEBUG  [main] BasicTypeRegistry: Adding type registration float -> org.hibernate.type.FloatType@29b8df5
2020-11-25 20:51:41,892 DEBUG  [main] BasicTypeRegistry: Adding type registration java.lang.Float -> org.hibernate.type.FloatType@29b8df5
2020-11-25 20:51:41,893 DEBUG  [main] BasicTypeRegistry: Adding type registration double -> org.hibernate.type.DoubleType@36cfe107
2020-11-25 20:51:41,893 DEBUG  [main] BasicTypeRegistry: Adding type registration double -> org.hibernate.type.DoubleType@36cfe107
2020-11-25 20:51:41,893 DEBUG  [main] BasicTypeRegistry: Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@36cfe107
2020-11-25 20:51:41,893 DEBUG  [main] BasicTypeRegistry: Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@139089a4
2020-11-25 20:51:41,894 DEBUG  [main] BasicTypeRegistry: Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@139089a4
2020-11-25 20:51:41,894 DEBUG  [main] BasicTypeRegistry: Adding type registration big_integer -> org.hibernate.type.BigIntegerType@9f1ca74
2020-11-25 20:51:41,894 DEBUG  [main] BasicTypeRegistry: Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@9f1ca74
2020-11-25 20:51:41,894 DEBUG  [main] BasicTypeRegistry: Adding type registration string -> org.hibernate.type.StringType@393ae7a0
2020-11-25 20:51:41,894 DEBUG  [main] BasicTypeRegistry: Adding type registration java.lang.String -> org.hibernate.type.StringType@393ae7a0
2020-11-25 20:51:41,894 DEBUG  [main] BasicTypeRegistry: Adding type registration nstring -> org.hibernate.type.StringNVarcharType@7ee12d58
2020-11-25 20:51:41,895 DEBUG  [main] BasicTypeRegistry: Adding type registration ncharacter -> org.hibernate.type.CharacterNCharType@34e990cc
2020-11-25 20:51:41,895 DEBUG  [main] BasicTypeRegistry: Adding type registration url -> org.hibernate.type.UrlType@6de84336
2020-11-25 20:51:41,895 DEBUG  [main] BasicTypeRegistry: Adding type registration java.net.URL -> org.hibernate.type.UrlType@6de84336
2020-11-25 20:51:41,895 DEBUG  [main] BasicTypeRegistry: Adding type registration Duration -> org.hibernate.type.DurationType@69b37f5c
2020-11-25 20:51:41,895 DEBUG  [main] BasicTypeRegistry: Adding type registration java.time.Duration -> org.hibernate.type.DurationType@69b37f5c
2020-11-25 20:51:41,895 DEBUG  [main] BasicTypeRegistry: Adding type registration Instant -> org.hibernate.type.InstantType@580ffea
2020-11-25 20:51:41,895 DEBUG  [main] BasicTypeRegistry: Adding type registration java.time.Instant -> org.hibernate.type.InstantType@580ffea
2020-11-25 20:51:41,895 DEBUG  [main] BasicTypeRegistry: Adding type registration LocalDateTime -> org.hibernate.type.LocalDateTimeType@79d49790
2020-11-25 20:51:41,896 DEBUG  [main] BasicTypeRegistry: Adding type registration java.time.LocalDateTime -> org.hibernate.type.LocalDateTimeType@79d49790
2020-11-25 20:51:41,896 DEBUG  [main] BasicTypeRegistry: Adding type registration LocalDate -> org.hibernate.type.LocalDateType@3e9fb485
2020-11-25 20:51:41,896 DEBUG  [main] BasicTypeRegistry: Adding type registration java.time.LocalDate -> org.hibernate.type.LocalDateType@3e9fb485
2020-11-25 20:51:41,896 DEBUG  [main] BasicTypeRegistry: Adding type registration LocalTime -> org.hibernate.type.LocalTimeType@419f0ea
2020-11-25 20:51:41,896 DEBUG  [main] BasicTypeRegistry: Adding type registration java.time.LocalTime -> org.hibernate.type.LocalTimeType@419f0ea
2020-11-25 20:51:41,896 DEBUG  [main] BasicTypeRegistry: Adding type registration OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@87aec6a
2020-11-25 20:51:41,897 DEBUG  [main] BasicTypeRegistry: Adding type registration java.time.OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@87aec6a
2020-11-25 20:51:41,897 DEBUG  [main] BasicTypeRegistry: Adding type registration OffsetTime -> org.hibernate.type.OffsetTimeType@5529522f
2020-11-25 20:51:41,897 DEBUG  [main] BasicTypeRegistry: Adding type registration java.time.OffsetTime -> org.hibernate.type.OffsetTimeType@5529522f
2020-11-25 20:51:41,897 DEBUG  [main] BasicTypeRegistry: Adding type registration ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@152e7703
2020-11-25 20:51:41,898 DEBUG  [main] BasicTypeRegistry: Adding type registration java.time.ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@152e7703
2020-11-25 20:51:41,898 DEBUG  [main] BasicTypeRegistry: Adding type registration date -> org.hibernate.type.DateType@24fc2c80
2020-11-25 20:51:41,898 DEBUG  [main] BasicTypeRegistry: Adding type registration java.sql.Date -> org.hibernate.type.DateType@24fc2c80
2020-11-25 20:51:41,898 DEBUG  [main] BasicTypeRegistry: Adding type registration time -> org.hibernate.type.TimeType@48b3b1b8
2020-11-25 20:51:41,898 DEBUG  [main] BasicTypeRegistry: Adding type registration java.sql.Time -> org.hibernate.type.TimeType@48b3b1b8
2020-11-25 20:51:41,898 DEBUG  [main] BasicTypeRegistry: Adding type registration timestamp -> org.hibernate.type.TimestampType@686b1e2d
2020-11-25 20:51:41,898 DEBUG  [main] BasicTypeRegistry: Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@686b1e2d
2020-11-25 20:51:41,899 DEBUG  [main] BasicTypeRegistry: Adding type registration java.util.Date -> org.hibernate.type.TimestampType@686b1e2d
2020-11-25 20:51:41,899 DEBUG  [main] BasicTypeRegistry: Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@652b3733
2020-11-25 20:51:41,899 DEBUG  [main] BasicTypeRegistry: Adding type registration calendar -> org.hibernate.type.CalendarType@5be7b749
2020-11-25 20:51:41,899 DEBUG  [main] BasicTypeRegistry: Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@5be7b749
2020-11-25 20:51:41,899 DEBUG  [main] BasicTypeRegistry: Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@5be7b749
2020-11-25 20:51:41,900 DEBUG  [main] BasicTypeRegistry: Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@177ddd24
2020-11-25 20:51:41,900 DEBUG  [main] BasicTypeRegistry: Adding type registration locale -> org.hibernate.type.LocaleType@61ad30f6
2020-11-25 20:51:41,900 DEBUG  [main] BasicTypeRegistry: Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@61ad30f6
2020-11-25 20:51:41,900 DEBUG  [main] BasicTypeRegistry: Adding type registration currency -> org.hibernate.type.CurrencyType@574ebdaf
2020-11-25 20:51:41,900 DEBUG  [main] BasicTypeRegistry: Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@574ebdaf
2020-11-25 20:51:41,901 DEBUG  [main] BasicTypeRegistry: Adding type registration timezone -> org.hibernate.type.TimeZoneType@123ca460
2020-11-25 20:51:41,901 DEBUG  [main] BasicTypeRegistry: Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@123ca460
2020-11-25 20:51:41,901 DEBUG  [main] BasicTypeRegistry: Adding type registration class -> org.hibernate.type.ClassType@3c9f4376
2020-11-25 20:51:41,901 DEBUG  [main] BasicTypeRegistry: Adding type registration java.lang.Class -> org.hibernate.type.ClassType@3c9f4376
2020-11-25 20:51:41,901 DEBUG  [main] BasicTypeRegistry: Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@1958c0d9
2020-11-25 20:51:41,901 DEBUG  [main] BasicTypeRegistry: Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@1958c0d9
2020-11-25 20:51:41,901 DEBUG  [main] BasicTypeRegistry: Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@5fc7255c
2020-11-25 20:51:41,902 DEBUG  [main] BasicTypeRegistry: Adding type registration binary -> org.hibernate.type.BinaryType@79ba0285
2020-11-25 20:51:41,902 DEBUG  [main] BasicTypeRegistry: Adding type registration byte[] -> org.hibernate.type.BinaryType@79ba0285
2020-11-25 20:51:41,902 DEBUG  [main] BasicTypeRegistry: Adding type registration [B -> org.hibernate.type.BinaryType@79ba0285
2020-11-25 20:51:41,902 DEBUG  [main] BasicTypeRegistry: Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@598778cc
2020-11-25 20:51:41,902 DEBUG  [main] BasicTypeRegistry: Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@598778cc
2020-11-25 20:51:41,902 DEBUG  [main] BasicTypeRegistry: Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@598778cc
2020-11-25 20:51:41,902 DEBUG  [main] BasicTypeRegistry: Adding type registration row_version -> org.hibernate.type.RowVersionType@11cadb32
2020-11-25 20:51:41,903 DEBUG  [main] BasicTypeRegistry: Adding type registration image -> org.hibernate.type.ImageType@37986daf
2020-11-25 20:51:41,903 DEBUG  [main] BasicTypeRegistry: Adding type registration characters -> org.hibernate.type.CharArrayType@710afd47
2020-11-25 20:51:41,903 DEBUG  [main] BasicTypeRegistry: Adding type registration char[] -> org.hibernate.type.CharArrayType@710afd47
2020-11-25 20:51:41,903 DEBUG  [main] BasicTypeRegistry: Adding type registration [C -> org.hibernate.type.CharArrayType@710afd47
2020-11-25 20:51:41,903 DEBUG  [main] BasicTypeRegistry: Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@12670e55
2020-11-25 20:51:41,903 DEBUG  [main] BasicTypeRegistry: Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@12670e55
2020-11-25 20:51:41,904 DEBUG  [main] BasicTypeRegistry: Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@12670e55
2020-11-25 20:51:41,904 DEBUG  [main] BasicTypeRegistry: Adding type registration text -> org.hibernate.type.TextType@32ba5c65
2020-11-25 20:51:41,904 DEBUG  [main] BasicTypeRegistry: Adding type registration ntext -> org.hibernate.type.NTextType@10166230
2020-11-25 20:51:41,904 DEBUG  [main] BasicTypeRegistry: Adding type registration blob -> org.hibernate.type.BlobType@13dd7887
2020-11-25 20:51:41,904 DEBUG  [main] BasicTypeRegistry: Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@13dd7887
2020-11-25 20:51:41,905 DEBUG  [main] BasicTypeRegistry: Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@3cbfdf5c
2020-11-25 20:51:41,905 DEBUG  [main] BasicTypeRegistry: Adding type registration clob -> org.hibernate.type.ClobType@58636b50
2020-11-25 20:51:41,905 DEBUG  [main] BasicTypeRegistry: Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@58636b50
2020-11-25 20:51:41,905 DEBUG  [main] BasicTypeRegistry: Adding type registration nclob -> org.hibernate.type.NClobType@1e5aacd9
2020-11-25 20:51:41,905 DEBUG  [main] BasicTypeRegistry: Adding type registration java.sql.NClob -> org.hibernate.type.NClobType@1e5aacd9
2020-11-25 20:51:41,905 DEBUG  [main] BasicTypeRegistry: Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@120411ec
2020-11-25 20:51:41,906 DEBUG  [main] BasicTypeRegistry: Adding type registration materialized_nclob -> org.hibernate.type.MaterializedNClobType@1a34a51e
2020-11-25 20:51:41,906 DEBUG  [main] BasicTypeRegistry: Adding type registration serializable -> org.hibernate.type.SerializableType@6b091a92
2020-11-25 20:51:41,906 DEBUG  [main] BasicTypeRegistry: Adding type registration object -> org.hibernate.type.ObjectType@35329a05
2020-11-25 20:51:41,906 DEBUG  [main] BasicTypeRegistry: Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@35329a05
2020-11-25 20:51:41,906 DEBUG  [main] BasicTypeRegistry: Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@3d746c8f
2020-11-25 20:51:41,907 DEBUG  [main] BasicTypeRegistry: Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@27684bf
2020-11-25 20:51:41,907 DEBUG  [main] BasicTypeRegistry: Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@356feae3
2020-11-25 20:51:41,907 DEBUG  [main] BasicTypeRegistry: Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@302ae89a
2020-11-25 20:51:41,907 DEBUG  [main] BasicTypeRegistry: Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@2ea4fa04
2020-11-25 20:51:41,907 DEBUG  [main] BasicTypeRegistry: Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@1841d013
2020-11-25 20:51:41,908 DEBUG  [main] BasicTypeRegistry: Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@5233090a
2020-11-25 20:51:41,908 DEBUG  [main] BasicTypeRegistry: Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@35ba45ee
2020-11-25 20:51:41,917 DEBUG  [main] TypeConfiguration$Scope: Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@5dab9949] to MetadataBuildingContext [org.hibernate.boot.internal.MetadataBuildingContextRootImpl@52acf8a8]
2020-11-25 20:51:41,925 DEBUG  [main] EnumType: Using NAMED-based conversion for Enum com.sf.back.entities.Kind
2020-11-25 20:51:41,926 DEBUG  [main] EnumType: Using NAMED-based conversion for Enum com.sf.back.entities.Kind
2020-11-25 20:51:41,937 DEBUG  [main] TypeConfiguration$Scope: Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@5dab9949] to SessionFactoryImpl [org.hibernate.internal.SessionFactoryImpl@6deb050b]
2020-11-25 20:51:41,938 DEBUG  [main] EnumType: Using NAMED-based conversion for Enum com.sf.back.entities.Kind
2020-11-25 20:51:41,938 DEBUG  [main] EnumType: Using NAMED-based conversion for Enum com.sf.back.entities.Kind
2020-11-25 20:51:41,950 DEBUG  [main] EnumType: Using NAMED-based conversion for Enum com.sf.back.entities.Kind
2020-11-25 20:51:41,951 DEBUG  [main] EnumType: Using NAMED-based conversion for Enum com.sf.back.entities.Kind
2020-11-25 20:51:41,975 DEBUG  [main] EnumType: Using NAMED-based conversion for Enum com.sf.back.entities.Kind
2020-11-25 20:51:41,976 DEBUG  [main] EnumType: Using NAMED-based conversion for Enum com.sf.back.entities.Kind
2020-11-25 20:51:41,979 DEBUG  [main] EnumType: Using NAMED-based conversion for Enum com.sf.back.entities.Kind
2020-11-25 20:51:41,984 TRACE  [main] TypeConfiguration$Scope: Handling #sessionFactoryCreated from [org.hibernate.internal.SessionFactoryImpl@6deb050b] for TypeConfiguration
2020-11-25 20:51:42,082 WARN   [main] JpaBaseConfiguration$JpaWebConfiguration: spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2020-11-25 20:51:42,355 WARN   [main] GenericWebApplicationContext: Exception encountered during context initialization - cancelling refresh attempt: org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'groovyMarkupConfigurer' defined in class path resource [org/springframework/boot/autoconfigure/groovy/template/GroovyTemplateAutoConfiguration$GroovyMarkupConfiguration.class]: Invocation of init method failed; nested exception is java.lang.reflect.InaccessibleObjectException: Unable to make jdk.internal.loader.ClassLoaders$AppClassLoader(jdk.internal.loader.ClassLoaders$PlatformClassLoader,jdk.internal.loader.URLClassPath) accessible: module java.base does not "opens jdk.internal.loader" to unnamed module @5fcacc0
2020-11-25 20:51:42,368 TRACE  [main] TypeConfiguration$Scope: Handling #sessionFactoryClosed from [org.hibernate.internal.SessionFactoryImpl@6deb050b] for TypeConfiguration
2020-11-25 20:51:42,368 DEBUG  [main] TypeConfiguration$Scope: Un-scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration$Scope@1c9515db] from SessionFactory [org.hibernate.internal.SessionFactoryImpl@6deb050b]
2020-11-25 20:51:42,475 ERROR  [main] SpringApplication: Application run failed
org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'groovyMarkupConfigurer' defined in class path resource [org/springframework/boot/autoconfigure/groovy/template/GroovyTemplateAutoConfiguration$GroovyMarkupConfiguration.class]: Invocation of init method failed; nested exception is java.lang.reflect.InaccessibleObjectException: Unable to make jdk.internal.loader.ClassLoaders$AppClassLoader(jdk.internal.loader.ClassLoaders$PlatformClassLoader,jdk.internal.loader.URLClassPath) accessible: module java.base does not "opens jdk.internal.loader" to unnamed module @5fcacc0
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1803)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:595)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:517)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:323)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:222)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:321)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:202)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(DefaultListableBeanFactory.java:879)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:878)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:550)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:747)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:397)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:315)
	at org.springframework.boot.test.context.SpringBootContextLoader.loadContext(SpringBootContextLoader.java:125)
	at org.springframework.test.context.cache.DefaultCacheAwareContextLoaderDelegate.loadContextInternal(DefaultCacheAwareContextLoaderDelegate.java:99)
	at org.springframework.test.context.cache.DefaultCacheAwareContextLoaderDelegate.loadContext(DefaultCacheAwareContextLoaderDelegate.java:124)
	at org.springframework.test.context.support.DefaultTestContext.getApplicationContext(DefaultTestContext.java:123)
	at org.springframework.test.context.web.ServletTestExecutionListener.setUpRequestContextIfNecessary(ServletTestExecutionListener.java:190)
	at org.springframework.test.context.web.ServletTestExecutionListener.prepareTestInstance(ServletTestExecutionListener.java:132)
	at org.springframework.test.context.TestContextManager.prepareTestInstance(TestContextManager.java:244)
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner.createTest(SpringJUnit4ClassRunner.java:227)
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner$1.runReflectiveCall(SpringJUnit4ClassRunner.java:289)
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner.methodBlock(SpringJUnit4ClassRunner.java:291)
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner.runChild(SpringJUnit4ClassRunner.java:246)
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner.runChild(SpringJUnit4ClassRunner.java:97)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:290)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:71)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:58)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268)
	at org.junit.internal.runners.statements.RunBefores.evaluate(RunBefores.java:26)
	at org.springframework.test.context.junit4.statements.RunBeforeTestClassCallbacks.evaluate(RunBeforeTestClassCallbacks.java:61)
	at org.junit.internal.runners.statements.RunAfters.evaluate(RunAfters.java:27)
	at org.springframework.test.context.junit4.statements.RunAfterTestClassCallbacks.evaluate(RunAfterTestClassCallbacks.java:70)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:363)
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner.run(SpringJUnit4ClassRunner.java:190)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:137)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:115)
	at org.junit.vintage.engine.execution.RunnerExecutor.execute(RunnerExecutor.java:40)
	at java.base/java.util.stream.ForEachOps$ForEachOp$OfRef.accept(ForEachOps.java:183)
	at java.base/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:195)
	at java.base/java.util.Iterator.forEachRemaining(Iterator.java:133)
	at java.base/java.util.Spliterators$IteratorSpliterator.forEachRemaining(Spliterators.java:1801)
	at java.base/java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:484)
	at java.base/java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:474)
	at java.base/java.util.stream.ForEachOps$ForEachOp.evaluateSequential(ForEachOps.java:150)
	at java.base/java.util.stream.ForEachOps$ForEachOp$OfRef.evaluateSequential(ForEachOps.java:173)
	at java.base/java.util.stream.AbstractPipeline.evaluate(AbstractPipeline.java:234)
	at java.base/java.util.stream.ReferencePipeline.forEach(ReferencePipeline.java:497)
	at org.junit.vintage.engine.VintageTestEngine.executeAllChildren(VintageTestEngine.java:80)
	at org.junit.vintage.engine.VintageTestEngine.execute(VintageTestEngine.java:71)
	at org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:220)
	at org.junit.platform.launcher.core.DefaultLauncher.lambda$execute$6(DefaultLauncher.java:188)
	at org.junit.platform.launcher.core.DefaultLauncher.withInterceptedStreams(DefaultLauncher.java:202)
	at org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:181)
	at org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:128)
	at org.apache.maven.surefire.junitplatform.JUnitPlatformProvider.invokeAllTests(JUnitPlatformProvider.java:150)
	at org.apache.maven.surefire.junitplatform.JUnitPlatformProvider.invoke(JUnitPlatformProvider.java:124)
	at org.apache.maven.surefire.booter.ForkedBooter.invokeProviderInSameClassLoader(ForkedBooter.java:384)
	at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:345)
	at org.apache.maven.surefire.booter.ForkedBooter.execute(ForkedBooter.java:126)
	at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:418)
Caused by: java.lang.reflect.InaccessibleObjectException: Unable to make jdk.internal.loader.ClassLoaders$AppClassLoader(jdk.internal.loader.ClassLoaders$PlatformClassLoader,jdk.internal.loader.URLClassPath) accessible: module java.base does not "opens jdk.internal.loader" to unnamed module @5fcacc0
	at java.base/java.lang.reflect.AccessibleObject.checkCanSetAccessible(AccessibleObject.java:361)
	at java.base/java.lang.reflect.AccessibleObject.checkCanSetAccessible(AccessibleObject.java:301)
	at java.base/java.lang.reflect.Constructor.checkCanSetAccessible(Constructor.java:189)
	at java.base/java.lang.reflect.Constructor.setAccessible(Constructor.java:182)
	at org.codehaus.groovy.reflection.CachedConstructor$1.run(CachedConstructor.java:44)
	at java.base/java.security.AccessController.doPrivileged(AccessController.java:312)
	at org.codehaus.groovy.reflection.CachedConstructor.<init>(CachedConstructor.java:42)
	at org.codehaus.groovy.reflection.CachedClass$2.initValue(CachedClass.java:79)
	at org.codehaus.groovy.reflection.CachedClass$2.initValue(CachedClass.java:69)
	at org.codehaus.groovy.util.LazyReference.getLocked(LazyReference.java:49)
	at org.codehaus.groovy.util.LazyReference.get(LazyReference.java:36)
	at org.codehaus.groovy.reflection.CachedClass.getConstructors(CachedClass.java:268)
	at groovy.lang.MetaClassImpl.<init>(MetaClassImpl.java:218)
	at groovy.lang.MetaClassImpl.<init>(MetaClassImpl.java:228)
	at groovy.lang.MetaClassRegistry$MetaClassCreationHandle.createNormalMetaClass(MetaClassRegistry.java:171)
	at groovy.lang.MetaClassRegistry$MetaClassCreationHandle.createWithCustomLookup(MetaClassRegistry.java:161)
	at groovy.lang.MetaClassRegistry$MetaClassCreationHandle.create(MetaClassRegistry.java:144)
	at org.codehaus.groovy.reflection.ClassInfo.getMetaClassUnderLock(ClassInfo.java:253)
	at org.codehaus.groovy.reflection.ClassInfo.getMetaClass(ClassInfo.java:285)
	at org.codehaus.groovy.reflection.ClassInfo.getMetaClass(ClassInfo.java:295)
	at org.codehaus.groovy.runtime.metaclass.MetaClassRegistryImpl.getMetaClass(MetaClassRegistryImpl.java:261)
	at org.codehaus.groovy.runtime.InvokerHelper.getMetaClass(InvokerHelper.java:873)
	at org.codehaus.groovy.runtime.InvokerHelper.invokePojoMethod(InvokerHelper.java:906)
	at org.codehaus.groovy.runtime.InvokerHelper.invokeMethod(InvokerHelper.java:898)
	at org.codehaus.groovy.runtime.typehandling.DefaultTypeTransformation.castToBoolean(DefaultTypeTransformation.java:185)
	at org.codehaus.groovy.runtime.typehandling.DefaultTypeTransformation.booleanUnbox(DefaultTypeTransformation.java:74)
	at org.codehaus.groovy.control.customizers.ASTTransformationCustomizer.findASTTranformationClass(ASTTransformationCustomizer.groovy:209)
	at jdk.internal.reflect.GeneratedMethodAccessor358.invoke(Unknown Source)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:564)
	at org.codehaus.groovy.reflection.CachedMethod.invoke(CachedMethod.java:93)
	at org.codehaus.groovy.runtime.callsite.StaticMetaMethodSite$StaticMetaMethodSiteNoUnwrapNoCoerce.invoke(StaticMetaMethodSite.java:151)
	at org.codehaus.groovy.runtime.callsite.StaticMetaMethodSite.callStatic(StaticMetaMethodSite.java:102)
	at org.codehaus.groovy.runtime.callsite.AbstractCallSite.callStatic(AbstractCallSite.java:214)
	at org.codehaus.groovy.control.customizers.ASTTransformationCustomizer.findPhase(ASTTransformationCustomizer.groovy:226)
	at jdk.internal.reflect.GeneratedMethodAccessor357.invoke(Unknown Source)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:564)
	at org.codehaus.groovy.reflection.CachedMethod.invoke(CachedMethod.java:93)
	at org.codehaus.groovy.runtime.callsite.StaticMetaMethodSite$StaticMetaMethodSiteNoUnwrapNoCoerce.invoke(StaticMetaMethodSite.java:151)
	at org.codehaus.groovy.runtime.callsite.StaticMetaMethodSite.callStatic(StaticMetaMethodSite.java:102)
	at org.codehaus.groovy.runtime.callsite.AbstractCallSite.callStatic(AbstractCallSite.java:214)
	at org.codehaus.groovy.control.customizers.ASTTransformationCustomizer.<init>(ASTTransformationCustomizer.groovy:180)
	at org.codehaus.groovy.control.customizers.ASTTransformationCustomizer.<init>(ASTTransformationCustomizer.groovy:188)
	at groovy.text.markup.MarkupTemplateEngine.<init>(MarkupTemplateEngine.java:94)
	at org.springframework.web.servlet.view.groovy.GroovyMarkupConfigurer.createTemplateEngine(GroovyMarkupConfigurer.java:160)
	at org.springframework.web.servlet.view.groovy.GroovyMarkupConfigurer.afterPropertiesSet(GroovyMarkupConfigurer.java:153)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1862)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1799)
	... 62 common frames omitted
2020-11-25 20:51:42,479 ERROR  [main] TestContextManager: Caught exception while allowing TestExecutionListener [org.springframework.test.context.web.ServletTestExecutionListener@4237d6e4] to prepare test instance [com.sf.service.ProblemServiceTest@6c1ff6a9]
java.lang.IllegalStateException: Failed to load ApplicationContext
	at org.springframework.test.context.cache.DefaultCacheAwareContextLoaderDelegate.loadContext(DefaultCacheAwareContextLoaderDelegate.java:132)
	at org.springframework.test.context.support.DefaultTestContext.getApplicationContext(DefaultTestContext.java:123)
	at org.springframework.test.context.web.ServletTestExecutionListener.setUpRequestContextIfNecessary(ServletTestExecutionListener.java:190)
	at org.springframework.test.context.web.ServletTestExecutionListener.prepareTestInstance(ServletTestExecutionListener.java:132)
	at org.springframework.test.context.TestContextManager.prepareTestInstance(TestContextManager.java:244)
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner.createTest(SpringJUnit4ClassRunner.java:227)
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner$1.runReflectiveCall(SpringJUnit4ClassRunner.java:289)
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner.methodBlock(SpringJUnit4ClassRunner.java:291)
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner.runChild(SpringJUnit4ClassRunner.java:246)
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner.runChild(SpringJUnit4ClassRunner.java:97)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:290)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:71)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:58)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268)
	at org.junit.internal.runners.statements.RunBefores.evaluate(RunBefores.java:26)
	at org.springframework.test.context.junit4.statements.RunBeforeTestClassCallbacks.evaluate(RunBeforeTestClassCallbacks.java:61)
	at org.junit.internal.runners.statements.RunAfters.evaluate(RunAfters.java:27)
	at org.springframework.test.context.junit4.statements.RunAfterTestClassCallbacks.evaluate(RunAfterTestClassCallbacks.java:70)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:363)
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner.run(SpringJUnit4ClassRunner.java:190)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:137)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:115)
	at org.junit.vintage.engine.execution.RunnerExecutor.execute(RunnerExecutor.java:40)
	at java.base/java.util.stream.ForEachOps$ForEachOp$OfRef.accept(ForEachOps.java:183)
	at java.base/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:195)
	at java.base/java.util.Iterator.forEachRemaining(Iterator.java:133)
	at java.base/java.util.Spliterators$IteratorSpliterator.forEachRemaining(Spliterators.java:1801)
	at java.base/java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:484)
	at java.base/java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:474)
	at java.base/java.util.stream.ForEachOps$ForEachOp.evaluateSequential(ForEachOps.java:150)
	at java.base/java.util.stream.ForEachOps$ForEachOp$OfRef.evaluateSequential(ForEachOps.java:173)
	at java.base/java.util.stream.AbstractPipeline.evaluate(AbstractPipeline.java:234)
	at java.base/java.util.stream.ReferencePipeline.forEach(ReferencePipeline.java:497)
	at org.junit.vintage.engine.VintageTestEngine.executeAllChildren(VintageTestEngine.java:80)
	at org.junit.vintage.engine.VintageTestEngine.execute(VintageTestEngine.java:71)
	at org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:220)
	at org.junit.platform.launcher.core.DefaultLauncher.lambda$execute$6(DefaultLauncher.java:188)
	at org.junit.platform.launcher.core.DefaultLauncher.withInterceptedStreams(DefaultLauncher.java:202)
	at org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:181)
	at org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:128)
	at org.apache.maven.surefire.junitplatform.JUnitPlatformProvider.invokeAllTests(JUnitPlatformProvider.java:150)
	at org.apache.maven.surefire.junitplatform.JUnitPlatformProvider.invoke(JUnitPlatformProvider.java:124)
	at org.apache.maven.surefire.booter.ForkedBooter.invokeProviderInSameClassLoader(ForkedBooter.java:384)
	at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:345)
	at org.apache.maven.surefire.booter.ForkedBooter.execute(ForkedBooter.java:126)
	at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:418)
Caused by: org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'groovyMarkupConfigurer' defined in class path resource [org/springframework/boot/autoconfigure/groovy/template/GroovyTemplateAutoConfiguration$GroovyMarkupConfiguration.class]: Invocation of init method failed; nested exception is java.lang.reflect.InaccessibleObjectException: Unable to make jdk.internal.loader.ClassLoaders$AppClassLoader(jdk.internal.loader.ClassLoaders$PlatformClassLoader,jdk.internal.loader.URLClassPath) accessible: module java.base does not "opens jdk.internal.loader" to unnamed module @5fcacc0
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1803)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:595)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:517)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:323)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:222)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:321)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:202)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(DefaultListableBeanFactory.java:879)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:878)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:550)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:747)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:397)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:315)
	at org.springframework.boot.test.context.SpringBootContextLoader.loadContext(SpringBootContextLoader.java:125)
	at org.springframework.test.context.cache.DefaultCacheAwareContextLoaderDelegate.loadContextInternal(DefaultCacheAwareContextLoaderDelegate.java:99)
	at org.springframework.test.context.cache.DefaultCacheAwareContextLoaderDelegate.loadContext(DefaultCacheAwareContextLoaderDelegate.java:124)
	... 47 common frames omitted
Caused by: java.lang.reflect.InaccessibleObjectException: Unable to make jdk.internal.loader.ClassLoaders$AppClassLoader(jdk.internal.loader.ClassLoaders$PlatformClassLoader,jdk.internal.loader.URLClassPath) accessible: module java.base does not "opens jdk.internal.loader" to unnamed module @5fcacc0
	at java.base/java.lang.reflect.AccessibleObject.checkCanSetAccessible(AccessibleObject.java:361)
	at java.base/java.lang.reflect.AccessibleObject.checkCanSetAccessible(AccessibleObject.java:301)
	at java.base/java.lang.reflect.Constructor.checkCanSetAccessible(Constructor.java:189)
	at java.base/java.lang.reflect.Constructor.setAccessible(Constructor.java:182)
	at org.codehaus.groovy.reflection.CachedConstructor$1.run(CachedConstructor.java:44)
	at java.base/java.security.AccessController.doPrivileged(AccessController.java:312)
	at org.codehaus.groovy.reflection.CachedConstructor.<init>(CachedConstructor.java:42)
	at org.codehaus.groovy.reflection.CachedClass$2.initValue(CachedClass.java:79)
	at org.codehaus.groovy.reflection.CachedClass$2.initValue(CachedClass.java:69)
	at org.codehaus.groovy.util.LazyReference.getLocked(LazyReference.java:49)
	at org.codehaus.groovy.util.LazyReference.get(LazyReference.java:36)
	at org.codehaus.groovy.reflection.CachedClass.getConstructors(CachedClass.java:268)
	at groovy.lang.MetaClassImpl.<init>(MetaClassImpl.java:218)
	at groovy.lang.MetaClassImpl.<init>(MetaClassImpl.java:228)
	at groovy.lang.MetaClassRegistry$MetaClassCreationHandle.createNormalMetaClass(MetaClassRegistry.java:171)
	at groovy.lang.MetaClassRegistry$MetaClassCreationHandle.createWithCustomLookup(MetaClassRegistry.java:161)
	at groovy.lang.MetaClassRegistry$MetaClassCreationHandle.create(MetaClassRegistry.java:144)
	at org.codehaus.groovy.reflection.ClassInfo.getMetaClassUnderLock(ClassInfo.java:253)
	at org.codehaus.groovy.reflection.ClassInfo.getMetaClass(ClassInfo.java:285)
	at org.codehaus.groovy.reflection.ClassInfo.getMetaClass(ClassInfo.java:295)
	at org.codehaus.groovy.runtime.metaclass.MetaClassRegistryImpl.getMetaClass(MetaClassRegistryImpl.java:261)
	at org.codehaus.groovy.runtime.InvokerHelper.getMetaClass(InvokerHelper.java:873)
	at org.codehaus.groovy.runtime.InvokerHelper.invokePojoMethod(InvokerHelper.java:906)
	at org.codehaus.groovy.runtime.InvokerHelper.invokeMethod(InvokerHelper.java:898)
	at org.codehaus.groovy.runtime.typehandling.DefaultTypeTransformation.castToBoolean(DefaultTypeTransformation.java:185)
	at org.codehaus.groovy.runtime.typehandling.DefaultTypeTransformation.booleanUnbox(DefaultTypeTransformation.java:74)
	at org.codehaus.groovy.control.customizers.ASTTransformationCustomizer.findASTTranformationClass(ASTTransformationCustomizer.groovy:209)
	at jdk.internal.reflect.GeneratedMethodAccessor358.invoke(Unknown Source)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:564)
	at org.codehaus.groovy.reflection.CachedMethod.invoke(CachedMethod.java:93)
	at org.codehaus.groovy.runtime.callsite.StaticMetaMethodSite$StaticMetaMethodSiteNoUnwrapNoCoerce.invoke(StaticMetaMethodSite.java:151)
	at org.codehaus.groovy.runtime.callsite.StaticMetaMethodSite.callStatic(StaticMetaMethodSite.java:102)
	at org.codehaus.groovy.runtime.callsite.AbstractCallSite.callStatic(AbstractCallSite.java:214)
	at org.codehaus.groovy.control.customizers.ASTTransformationCustomizer.findPhase(ASTTransformationCustomizer.groovy:226)
	at jdk.internal.reflect.GeneratedMethodAccessor357.invoke(Unknown Source)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:564)
	at org.codehaus.groovy.reflection.CachedMethod.invoke(CachedMethod.java:93)
	at org.codehaus.groovy.runtime.callsite.StaticMetaMethodSite$StaticMetaMethodSiteNoUnwrapNoCoerce.invoke(StaticMetaMethodSite.java:151)
	at org.codehaus.groovy.runtime.callsite.StaticMetaMethodSite.callStatic(StaticMetaMethodSite.java:102)
	at org.codehaus.groovy.runtime.callsite.AbstractCallSite.callStatic(AbstractCallSite.java:214)
	at org.codehaus.groovy.control.customizers.ASTTransformationCustomizer.<init>(ASTTransformationCustomizer.groovy:180)
	at org.codehaus.groovy.control.customizers.ASTTransformationCustomizer.<init>(ASTTransformationCustomizer.groovy:188)
	at groovy.text.markup.MarkupTemplateEngine.<init>(MarkupTemplateEngine.java:94)
	at org.springframework.web.servlet.view.groovy.GroovyMarkupConfigurer.createTemplateEngine(GroovyMarkupConfigurer.java:160)
	at org.springframework.web.servlet.view.groovy.GroovyMarkupConfigurer.afterPropertiesSet(GroovyMarkupConfigurer.java:153)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1862)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1799)
	... 62 common frames omitted
2020-11-25 20:51:43,125 DEBUG  [main] BasicTypeRegistry: Adding type registration boolean -> org.hibernate.type.BooleanType@59127611
2020-11-25 20:51:43,170 DEBUG  [main] BasicTypeRegistry: Adding type registration boolean -> org.hibernate.type.BooleanType@59127611
2020-11-25 20:51:43,184 DEBUG  [main] BasicTypeRegistry: Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@59127611
2020-11-25 20:51:43,185 DEBUG  [main] BasicTypeRegistry: Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@18db3b3c
2020-11-25 20:51:43,194 DEBUG  [main] BasicTypeRegistry: Adding type registration true_false -> org.hibernate.type.TrueFalseType@5c1c9881
2020-11-25 20:51:43,194 DEBUG  [main] BasicTypeRegistry: Adding type registration yes_no -> org.hibernate.type.YesNoType@5d37aa0f
2020-11-25 20:51:43,194 DEBUG  [main] BasicTypeRegistry: Adding type registration byte -> org.hibernate.type.ByteType@3e4afd10
2020-11-25 20:51:43,195 DEBUG  [main] BasicTypeRegistry: Adding type registration byte -> org.hibernate.type.ByteType@3e4afd10
2020-11-25 20:51:43,195 DEBUG  [main] BasicTypeRegistry: Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@3e4afd10
2020-11-25 20:51:43,195 DEBUG  [main] BasicTypeRegistry: Adding type registration character -> org.hibernate.type.CharacterType@48d44b46
2020-11-25 20:51:43,198 DEBUG  [main] BasicTypeRegistry: Adding type registration char -> org.hibernate.type.CharacterType@48d44b46
2020-11-25 20:51:43,198 DEBUG  [main] BasicTypeRegistry: Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@48d44b46
2020-11-25 20:51:43,199 DEBUG  [main] BasicTypeRegistry: Adding type registration short -> org.hibernate.type.ShortType@dd20ebc
2020-11-25 20:51:43,199 DEBUG  [main] BasicTypeRegistry: Adding type registration short -> org.hibernate.type.ShortType@dd20ebc
2020-11-25 20:51:43,199 DEBUG  [main] BasicTypeRegistry: Adding type registration java.lang.Short -> org.hibernate.type.ShortType@dd20ebc
2020-11-25 20:51:43,200 DEBUG  [main] BasicTypeRegistry: Adding type registration integer -> org.hibernate.type.IntegerType@5f7cd50e
2020-11-25 20:51:43,207 DEBUG  [main] BasicTypeRegistry: Adding type registration int -> org.hibernate.type.IntegerType@5f7cd50e
2020-11-25 20:51:43,208 DEBUG  [main] BasicTypeRegistry: Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@5f7cd50e
2020-11-25 20:51:43,208 DEBUG  [main] BasicTypeRegistry: Adding type registration long -> org.hibernate.type.LongType@359e27d2
2020-11-25 20:51:43,209 DEBUG  [main] BasicTypeRegistry: Adding type registration long -> org.hibernate.type.LongType@359e27d2
2020-11-25 20:51:43,209 DEBUG  [main] BasicTypeRegistry: Adding type registration java.lang.Long -> org.hibernate.type.LongType@359e27d2
2020-11-25 20:51:43,209 DEBUG  [main] BasicTypeRegistry: Adding type registration float -> org.hibernate.type.FloatType@29b8df5
2020-11-25 20:51:43,209 DEBUG  [main] BasicTypeRegistry: Adding type registration float -> org.hibernate.type.FloatType@29b8df5
2020-11-25 20:51:43,210 DEBUG  [main] BasicTypeRegistry: Adding type registration java.lang.Float -> org.hibernate.type.FloatType@29b8df5
2020-11-25 20:51:43,210 DEBUG  [main] BasicTypeRegistry: Adding type registration double -> org.hibernate.type.DoubleType@36cfe107
2020-11-25 20:51:43,210 DEBUG  [main] BasicTypeRegistry: Adding type registration double -> org.hibernate.type.DoubleType@36cfe107
2020-11-25 20:51:43,211 DEBUG  [main] BasicTypeRegistry: Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@36cfe107
2020-11-25 20:51:43,211 DEBUG  [main] BasicTypeRegistry: Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@139089a4
2020-11-25 20:51:43,211 DEBUG  [main] BasicTypeRegistry: Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@139089a4
2020-11-25 20:51:43,212 DEBUG  [main] BasicTypeRegistry: Adding type registration big_integer -> org.hibernate.type.BigIntegerType@9f1ca74
2020-11-25 20:51:43,212 DEBUG  [main] BasicTypeRegistry: Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@9f1ca74
2020-11-25 20:51:43,212 DEBUG  [main] BasicTypeRegistry: Adding type registration string -> org.hibernate.type.StringType@393ae7a0
2020-11-25 20:51:43,213 DEBUG  [main] BasicTypeRegistry: Adding type registration java.lang.String -> org.hibernate.type.StringType@393ae7a0
2020-11-25 20:51:43,214 DEBUG  [main] BasicTypeRegistry: Adding type registration nstring -> org.hibernate.type.StringNVarcharType@7ee12d58
2020-11-25 20:51:43,215 DEBUG  [main] BasicTypeRegistry: Adding type registration ncharacter -> org.hibernate.type.CharacterNCharType@34e990cc
2020-11-25 20:51:43,215 DEBUG  [main] BasicTypeRegistry: Adding type registration url -> org.hibernate.type.UrlType@6de84336
2020-11-25 20:51:43,216 DEBUG  [main] BasicTypeRegistry: Adding type registration java.net.URL -> org.hibernate.type.UrlType@6de84336
2020-11-25 20:51:43,216 DEBUG  [main] BasicTypeRegistry: Adding type registration Duration -> org.hibernate.type.DurationType@69b37f5c
2020-11-25 20:51:43,220 DEBUG  [main] BasicTypeRegistry: Adding type registration java.time.Duration -> org.hibernate.type.DurationType@69b37f5c
2020-11-25 20:51:43,220 DEBUG  [main] BasicTypeRegistry: Adding type registration Instant -> org.hibernate.type.InstantType@580ffea
2020-11-25 20:51:43,221 DEBUG  [main] BasicTypeRegistry: Adding type registration java.time.Instant -> org.hibernate.type.InstantType@580ffea
2020-11-25 20:51:43,221 DEBUG  [main] BasicTypeRegistry: Adding type registration LocalDateTime -> org.hibernate.type.LocalDateTimeType@79d49790
2020-11-25 20:51:43,221 DEBUG  [main] BasicTypeRegistry: Adding type registration java.time.LocalDateTime -> org.hibernate.type.LocalDateTimeType@79d49790
2020-11-25 20:51:43,222 DEBUG  [main] BasicTypeRegistry: Adding type registration LocalDate -> org.hibernate.type.LocalDateType@3e9fb485
2020-11-25 20:51:43,222 DEBUG  [main] BasicTypeRegistry: Adding type registration java.time.LocalDate -> org.hibernate.type.LocalDateType@3e9fb485
2020-11-25 20:51:43,223 DEBUG  [main] BasicTypeRegistry: Adding type registration LocalTime -> org.hibernate.type.LocalTimeType@419f0ea
2020-11-25 20:51:43,223 DEBUG  [main] BasicTypeRegistry: Adding type registration java.time.LocalTime -> org.hibernate.type.LocalTimeType@419f0ea
2020-11-25 20:51:43,224 DEBUG  [main] BasicTypeRegistry: Adding type registration OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@87aec6a
2020-11-25 20:51:43,224 DEBUG  [main] BasicTypeRegistry: Adding type registration java.time.OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@87aec6a
2020-11-25 20:51:43,224 DEBUG  [main] BasicTypeRegistry: Adding type registration OffsetTime -> org.hibernate.type.OffsetTimeType@5529522f
2020-11-25 20:51:43,225 DEBUG  [main] BasicTypeRegistry: Adding type registration java.time.OffsetTime -> org.hibernate.type.OffsetTimeType@5529522f
2020-11-25 20:51:43,233 DEBUG  [main] BasicTypeRegistry: Adding type registration ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@152e7703
2020-11-25 20:51:43,233 DEBUG  [main] BasicTypeRegistry: Adding type registration java.time.ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@152e7703
2020-11-25 20:51:43,234 DEBUG  [main] BasicTypeRegistry: Adding type registration date -> org.hibernate.type.DateType@24fc2c80
2020-11-25 20:51:43,234 DEBUG  [main] BasicTypeRegistry: Adding type registration java.sql.Date -> org.hibernate.type.DateType@24fc2c80
2020-11-25 20:51:43,235 DEBUG  [main] BasicTypeRegistry: Adding type registration time -> org.hibernate.type.TimeType@48b3b1b8
2020-11-25 20:51:43,235 DEBUG  [main] BasicTypeRegistry: Adding type registration java.sql.Time -> org.hibernate.type.TimeType@48b3b1b8
2020-11-25 20:51:43,235 DEBUG  [main] BasicTypeRegistry: Adding type registration timestamp -> org.hibernate.type.TimestampType@686b1e2d
2020-11-25 20:51:43,235 DEBUG  [main] BasicTypeRegistry: Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@686b1e2d
2020-11-25 20:51:43,235 DEBUG  [main] BasicTypeRegistry: Adding type registration java.util.Date -> org.hibernate.type.TimestampType@686b1e2d
2020-11-25 20:51:43,236 DEBUG  [main] BasicTypeRegistry: Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@652b3733
2020-11-25 20:51:43,236 DEBUG  [main] BasicTypeRegistry: Adding type registration calendar -> org.hibernate.type.CalendarType@5be7b749
2020-11-25 20:51:43,236 DEBUG  [main] BasicTypeRegistry: Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@5be7b749
2020-11-25 20:51:43,236 DEBUG  [main] BasicTypeRegistry: Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@5be7b749
2020-11-25 20:51:43,236 DEBUG  [main] BasicTypeRegistry: Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@177ddd24
2020-11-25 20:51:43,236 DEBUG  [main] BasicTypeRegistry: Adding type registration locale -> org.hibernate.type.LocaleType@61ad30f6
2020-11-25 20:51:43,236 DEBUG  [main] BasicTypeRegistry: Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@61ad30f6
2020-11-25 20:51:43,236 DEBUG  [main] BasicTypeRegistry: Adding type registration currency -> org.hibernate.type.CurrencyType@574ebdaf
2020-11-25 20:51:43,237 DEBUG  [main] BasicTypeRegistry: Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@574ebdaf
2020-11-25 20:51:43,237 DEBUG  [main] BasicTypeRegistry: Adding type registration timezone -> org.hibernate.type.TimeZoneType@123ca460
2020-11-25 20:51:43,237 DEBUG  [main] BasicTypeRegistry: Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@123ca460
2020-11-25 20:51:43,237 DEBUG  [main] BasicTypeRegistry: Adding type registration class -> org.hibernate.type.ClassType@3c9f4376
2020-11-25 20:51:43,237 DEBUG  [main] BasicTypeRegistry: Adding type registration java.lang.Class -> org.hibernate.type.ClassType@3c9f4376
2020-11-25 20:51:43,238 DEBUG  [main] BasicTypeRegistry: Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@1958c0d9
2020-11-25 20:51:43,238 DEBUG  [main] BasicTypeRegistry: Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@1958c0d9
2020-11-25 20:51:43,238 DEBUG  [main] BasicTypeRegistry: Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@5fc7255c
2020-11-25 20:51:43,238 DEBUG  [main] BasicTypeRegistry: Adding type registration binary -> org.hibernate.type.BinaryType@79ba0285
2020-11-25 20:51:43,238 DEBUG  [main] BasicTypeRegistry: Adding type registration byte[] -> org.hibernate.type.BinaryType@79ba0285
2020-11-25 20:51:43,242 DEBUG  [main] BasicTypeRegistry: Adding type registration [B -> org.hibernate.type.BinaryType@79ba0285
2020-11-25 20:51:43,242 DEBUG  [main] BasicTypeRegistry: Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@598778cc
2020-11-25 20:51:43,242 DEBUG  [main] BasicTypeRegistry: Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@598778cc
2020-11-25 20:51:43,242 DEBUG  [main] BasicTypeRegistry: Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@598778cc
2020-11-25 20:51:43,242 DEBUG  [main] BasicTypeRegistry: Adding type registration row_version -> org.hibernate.type.RowVersionType@11cadb32
2020-11-25 20:51:43,242 DEBUG  [main] BasicTypeRegistry: Adding type registration image -> org.hibernate.type.ImageType@37986daf
2020-11-25 20:51:43,243 DEBUG  [main] BasicTypeRegistry: Adding type registration characters -> org.hibernate.type.CharArrayType@710afd47
2020-11-25 20:51:43,243 DEBUG  [main] BasicTypeRegistry: Adding type registration char[] -> org.hibernate.type.CharArrayType@710afd47
2020-11-25 20:51:43,243 DEBUG  [main] BasicTypeRegistry: Adding type registration [C -> org.hibernate.type.CharArrayType@710afd47
2020-11-25 20:51:43,243 DEBUG  [main] BasicTypeRegistry: Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@12670e55
2020-11-25 20:51:43,243 DEBUG  [main] BasicTypeRegistry: Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@12670e55
2020-11-25 20:51:43,244 DEBUG  [main] BasicTypeRegistry: Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@12670e55
2020-11-25 20:51:43,244 DEBUG  [main] BasicTypeRegistry: Adding type registration text -> org.hibernate.type.TextType@32ba5c65
2020-11-25 20:51:43,244 DEBUG  [main] BasicTypeRegistry: Adding type registration ntext -> org.hibernate.type.NTextType@10166230
2020-11-25 20:51:43,244 DEBUG  [main] BasicTypeRegistry: Adding type registration blob -> org.hibernate.type.BlobType@13dd7887
2020-11-25 20:51:43,244 DEBUG  [main] BasicTypeRegistry: Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@13dd7887
2020-11-25 20:51:43,245 DEBUG  [main] BasicTypeRegistry: Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@3cbfdf5c
2020-11-25 20:51:43,245 DEBUG  [main] BasicTypeRegistry: Adding type registration clob -> org.hibernate.type.ClobType@58636b50
2020-11-25 20:51:43,245 DEBUG  [main] BasicTypeRegistry: Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@58636b50
2020-11-25 20:51:43,245 DEBUG  [main] BasicTypeRegistry: Adding type registration nclob -> org.hibernate.type.NClobType@1e5aacd9
2020-11-25 20:51:43,245 DEBUG  [main] BasicTypeRegistry: Adding type registration java.sql.NClob -> org.hibernate.type.NClobType@1e5aacd9
2020-11-25 20:51:43,245 DEBUG  [main] BasicTypeRegistry: Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@120411ec
2020-11-25 20:51:43,245 DEBUG  [main] BasicTypeRegistry: Adding type registration materialized_nclob -> org.hibernate.type.MaterializedNClobType@1a34a51e
2020-11-25 20:51:43,245 DEBUG  [main] BasicTypeRegistry: Adding type registration serializable -> org.hibernate.type.SerializableType@6b091a92
2020-11-25 20:51:43,246 DEBUG  [main] BasicTypeRegistry: Adding type registration object -> org.hibernate.type.ObjectType@35329a05
2020-11-25 20:51:43,246 DEBUG  [main] BasicTypeRegistry: Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@35329a05
2020-11-25 20:51:43,246 DEBUG  [main] BasicTypeRegistry: Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@636a9d18
2020-11-25 20:51:43,246 DEBUG  [main] BasicTypeRegistry: Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@4123121
2020-11-25 20:51:43,246 DEBUG  [main] BasicTypeRegistry: Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@399655ce
2020-11-25 20:51:43,246 DEBUG  [main] BasicTypeRegistry: Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@5c7744f0
2020-11-25 20:51:43,247 DEBUG  [main] BasicTypeRegistry: Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@6bc2903b
2020-11-25 20:51:43,248 DEBUG  [main] BasicTypeRegistry: Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@7e4c3f5b
2020-11-25 20:51:43,248 DEBUG  [main] BasicTypeRegistry: Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@75ff2d79
2020-11-25 20:51:43,248 DEBUG  [main] BasicTypeRegistry: Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@1349a7f2
2020-11-25 20:51:43,332 DEBUG  [main] TypeConfiguration$Scope: Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@6c25b3ad] to MetadataBuildingContext [org.hibernate.boot.internal.MetadataBuildingContextRootImpl@20f2467c]
2020-11-25 20:51:43,487 DEBUG  [main] EnumType: Using NAMED-based conversion for Enum com.sf.back.entities.Kind
2020-11-25 20:51:43,489 DEBUG  [main] EnumType: Using NAMED-based conversion for Enum com.sf.back.entities.Kind
2020-11-25 20:51:43,502 DEBUG  [main] TypeConfiguration$Scope: Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@6c25b3ad] to SessionFactoryImpl [org.hibernate.internal.SessionFactoryImpl@15050e17]
2020-11-25 20:51:43,503 DEBUG  [main] EnumType: Using NAMED-based conversion for Enum com.sf.back.entities.Kind
2020-11-25 20:51:43,503 DEBUG  [main] EnumType: Using NAMED-based conversion for Enum com.sf.back.entities.Kind
2020-11-25 20:51:43,545 DEBUG  [main] EnumType: Using NAMED-based conversion for Enum com.sf.back.entities.Kind
2020-11-25 20:51:43,547 DEBUG  [main] EnumType: Using NAMED-based conversion for Enum com.sf.back.entities.Kind
2020-11-25 20:51:43,617 DEBUG  [main] EnumType: Using NAMED-based conversion for Enum com.sf.back.entities.Kind
2020-11-25 20:51:43,617 DEBUG  [main] EnumType: Using NAMED-based conversion for Enum com.sf.back.entities.Kind
2020-11-25 20:51:43,621 DEBUG  [main] EnumType: Using NAMED-based conversion for Enum com.sf.back.entities.Kind
2020-11-25 20:51:43,631 TRACE  [main] TypeConfiguration$Scope: Handling #sessionFactoryCreated from [org.hibernate.internal.SessionFactoryImpl@15050e17] for TypeConfiguration
2020-11-25 20:51:43,867 WARN   [main] JpaBaseConfiguration$JpaWebConfiguration: spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2020-11-25 20:51:43,992 WARN   [main] GenericWebApplicationContext: Exception encountered during context initialization - cancelling refresh attempt: org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'groovyMarkupConfigurer' defined in class path resource [org/springframework/boot/autoconfigure/groovy/template/GroovyTemplateAutoConfiguration$GroovyMarkupConfiguration.class]: Invocation of init method failed; nested exception is java.lang.reflect.InaccessibleObjectException: Unable to make jdk.internal.loader.ClassLoaders$AppClassLoader(jdk.internal.loader.ClassLoaders$PlatformClassLoader,jdk.internal.loader.URLClassPath) accessible: module java.base does not "opens jdk.internal.loader" to unnamed module @5fcacc0
2020-11-25 20:51:43,999 TRACE  [main] TypeConfiguration$Scope: Handling #sessionFactoryClosed from [org.hibernate.internal.SessionFactoryImpl@15050e17] for TypeConfiguration
2020-11-25 20:51:43,999 DEBUG  [main] TypeConfiguration$Scope: Un-scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration$Scope@27463e56] from SessionFactory [org.hibernate.internal.SessionFactoryImpl@15050e17]
2020-11-25 20:51:44,038 ERROR  [main] SpringApplication: Application run failed
org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'groovyMarkupConfigurer' defined in class path resource [org/springframework/boot/autoconfigure/groovy/template/GroovyTemplateAutoConfiguration$GroovyMarkupConfiguration.class]: Invocation of init method failed; nested exception is java.lang.reflect.InaccessibleObjectException: Unable to make jdk.internal.loader.ClassLoaders$AppClassLoader(jdk.internal.loader.ClassLoaders$PlatformClassLoader,jdk.internal.loader.URLClassPath) accessible: module java.base does not "opens jdk.internal.loader" to unnamed module @5fcacc0
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1803)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:595)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:517)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:323)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:222)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:321)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:202)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(DefaultListableBeanFactory.java:879)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:878)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:550)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:747)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:397)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:315)
	at org.springframework.boot.test.context.SpringBootContextLoader.loadContext(SpringBootContextLoader.java:125)
	at org.springframework.test.context.cache.DefaultCacheAwareContextLoaderDelegate.loadContextInternal(DefaultCacheAwareContextLoaderDelegate.java:99)
	at org.springframework.test.context.cache.DefaultCacheAwareContextLoaderDelegate.loadContext(DefaultCacheAwareContextLoaderDelegate.java:124)
	at org.springframework.test.context.support.DefaultTestContext.getApplicationContext(DefaultTestContext.java:123)
	at org.springframework.test.context.web.ServletTestExecutionListener.setUpRequestContextIfNecessary(ServletTestExecutionListener.java:190)
	at org.springframework.test.context.web.ServletTestExecutionListener.prepareTestInstance(ServletTestExecutionListener.java:132)
	at org.springframework.test.context.TestContextManager.prepareTestInstance(TestContextManager.java:244)
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner.createTest(SpringJUnit4ClassRunner.java:227)
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner$1.runReflectiveCall(SpringJUnit4ClassRunner.java:289)
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner.methodBlock(SpringJUnit4ClassRunner.java:291)
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner.runChild(SpringJUnit4ClassRunner.java:246)
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner.runChild(SpringJUnit4ClassRunner.java:97)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:290)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:71)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:58)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268)
	at org.springframework.test.context.junit4.statements.RunBeforeTestClassCallbacks.evaluate(RunBeforeTestClassCallbacks.java:61)
	at org.springframework.test.context.junit4.statements.RunAfterTestClassCallbacks.evaluate(RunAfterTestClassCallbacks.java:70)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:363)
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner.run(SpringJUnit4ClassRunner.java:190)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:137)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:115)
	at org.junit.vintage.engine.execution.RunnerExecutor.execute(RunnerExecutor.java:40)
	at java.base/java.util.stream.ForEachOps$ForEachOp$OfRef.accept(ForEachOps.java:183)
	at java.base/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:195)
	at java.base/java.util.Iterator.forEachRemaining(Iterator.java:133)
	at java.base/java.util.Spliterators$IteratorSpliterator.forEachRemaining(Spliterators.java:1801)
	at java.base/java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:484)
	at java.base/java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:474)
	at java.base/java.util.stream.ForEachOps$ForEachOp.evaluateSequential(ForEachOps.java:150)
	at java.base/java.util.stream.ForEachOps$ForEachOp$OfRef.evaluateSequential(ForEachOps.java:173)
	at java.base/java.util.stream.AbstractPipeline.evaluate(AbstractPipeline.java:234)
	at java.base/java.util.stream.ReferencePipeline.forEach(ReferencePipeline.java:497)
	at org.junit.vintage.engine.VintageTestEngine.executeAllChildren(VintageTestEngine.java:80)
	at org.junit.vintage.engine.VintageTestEngine.execute(VintageTestEngine.java:71)
	at org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:220)
	at org.junit.platform.launcher.core.DefaultLauncher.lambda$execute$6(DefaultLauncher.java:188)
	at org.junit.platform.launcher.core.DefaultLauncher.withInterceptedStreams(DefaultLauncher.java:202)
	at org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:181)
	at org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:128)
	at org.apache.maven.surefire.junitplatform.JUnitPlatformProvider.invokeAllTests(JUnitPlatformProvider.java:150)
	at org.apache.maven.surefire.junitplatform.JUnitPlatformProvider.invoke(JUnitPlatformProvider.java:124)
	at org.apache.maven.surefire.booter.ForkedBooter.invokeProviderInSameClassLoader(ForkedBooter.java:384)
	at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:345)
	at org.apache.maven.surefire.booter.ForkedBooter.execute(ForkedBooter.java:126)
	at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:418)
Caused by: java.lang.reflect.InaccessibleObjectException: Unable to make jdk.internal.loader.ClassLoaders$AppClassLoader(jdk.internal.loader.ClassLoaders$PlatformClassLoader,jdk.internal.loader.URLClassPath) accessible: module java.base does not "opens jdk.internal.loader" to unnamed module @5fcacc0
	at java.base/java.lang.reflect.AccessibleObject.checkCanSetAccessible(AccessibleObject.java:361)
	at java.base/java.lang.reflect.AccessibleObject.checkCanSetAccessible(AccessibleObject.java:301)
	at java.base/java.lang.reflect.Constructor.checkCanSetAccessible(Constructor.java:189)
	at java.base/java.lang.reflect.Constructor.setAccessible(Constructor.java:182)
	at org.codehaus.groovy.reflection.CachedConstructor$1.run(CachedConstructor.java:44)
	at java.base/java.security.AccessController.doPrivileged(AccessController.java:312)
	at org.codehaus.groovy.reflection.CachedConstructor.<init>(CachedConstructor.java:42)
	at org.codehaus.groovy.reflection.CachedClass$2.initValue(CachedClass.java:79)
	at org.codehaus.groovy.reflection.CachedClass$2.initValue(CachedClass.java:69)
	at org.codehaus.groovy.util.LazyReference.getLocked(LazyReference.java:49)
	at org.codehaus.groovy.util.LazyReference.get(LazyReference.java:36)
	at org.codehaus.groovy.reflection.CachedClass.getConstructors(CachedClass.java:268)
	at groovy.lang.MetaClassImpl.<init>(MetaClassImpl.java:218)
	at groovy.lang.MetaClassImpl.<init>(MetaClassImpl.java:228)
	at groovy.lang.MetaClassRegistry$MetaClassCreationHandle.createNormalMetaClass(MetaClassRegistry.java:171)
	at groovy.lang.MetaClassRegistry$MetaClassCreationHandle.createWithCustomLookup(MetaClassRegistry.java:161)
	at groovy.lang.MetaClassRegistry$MetaClassCreationHandle.create(MetaClassRegistry.java:144)
	at org.codehaus.groovy.reflection.ClassInfo.getMetaClassUnderLock(ClassInfo.java:253)
	at org.codehaus.groovy.reflection.ClassInfo.getMetaClass(ClassInfo.java:285)
	at org.codehaus.groovy.reflection.ClassInfo.getMetaClass(ClassInfo.java:295)
	at org.codehaus.groovy.runtime.metaclass.MetaClassRegistryImpl.getMetaClass(MetaClassRegistryImpl.java:261)
	at org.codehaus.groovy.runtime.InvokerHelper.getMetaClass(InvokerHelper.java:873)
	at org.codehaus.groovy.runtime.InvokerHelper.invokePojoMethod(InvokerHelper.java:906)
	at org.codehaus.groovy.runtime.InvokerHelper.invokeMethod(InvokerHelper.java:898)
	at org.codehaus.groovy.runtime.typehandling.DefaultTypeTransformation.castToBoolean(DefaultTypeTransformation.java:185)
	at org.codehaus.groovy.runtime.typehandling.DefaultTypeTransformation.booleanUnbox(DefaultTypeTransformation.java:74)
	at org.codehaus.groovy.control.customizers.ASTTransformationCustomizer.findASTTranformationClass(ASTTransformationCustomizer.groovy:209)
	at jdk.internal.reflect.GeneratedMethodAccessor358.invoke(Unknown Source)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:564)
	at org.codehaus.groovy.reflection.CachedMethod.invoke(CachedMethod.java:93)
	at org.codehaus.groovy.runtime.callsite.StaticMetaMethodSite$StaticMetaMethodSiteNoUnwrapNoCoerce.invoke(StaticMetaMethodSite.java:151)
	at org.codehaus.groovy.runtime.callsite.StaticMetaMethodSite.callStatic(StaticMetaMethodSite.java:102)
	at org.codehaus.groovy.runtime.callsite.AbstractCallSite.callStatic(AbstractCallSite.java:214)
	at org.codehaus.groovy.control.customizers.ASTTransformationCustomizer.findPhase(ASTTransformationCustomizer.groovy:226)
	at jdk.internal.reflect.GeneratedMethodAccessor357.invoke(Unknown Source)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:564)
	at org.codehaus.groovy.reflection.CachedMethod.invoke(CachedMethod.java:93)
	at org.codehaus.groovy.runtime.callsite.StaticMetaMethodSite$StaticMetaMethodSiteNoUnwrapNoCoerce.invoke(StaticMetaMethodSite.java:151)
	at org.codehaus.groovy.runtime.callsite.StaticMetaMethodSite.callStatic(StaticMetaMethodSite.java:102)
	at org.codehaus.groovy.runtime.callsite.AbstractCallSite.callStatic(AbstractCallSite.java:214)
	at org.codehaus.groovy.control.customizers.ASTTransformationCustomizer.<init>(ASTTransformationCustomizer.groovy:180)
	at org.codehaus.groovy.control.customizers.ASTTransformationCustomizer.<init>(ASTTransformationCustomizer.groovy:188)
	at groovy.text.markup.MarkupTemplateEngine.<init>(MarkupTemplateEngine.java:94)
	at org.springframework.web.servlet.view.groovy.GroovyMarkupConfigurer.createTemplateEngine(GroovyMarkupConfigurer.java:160)
	at org.springframework.web.servlet.view.groovy.GroovyMarkupConfigurer.afterPropertiesSet(GroovyMarkupConfigurer.java:153)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1862)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1799)
	... 60 common frames omitted
2020-11-25 20:51:44,039 ERROR  [main] TestContextManager: Caught exception while allowing TestExecutionListener [org.springframework.test.context.web.ServletTestExecutionListener@5923482] to prepare test instance [com.sf.VaadinMathSolver.VaadinMathSolverApplicationTests@2e2d04d7]
java.lang.IllegalStateException: Failed to load ApplicationContext
	at org.springframework.test.context.cache.DefaultCacheAwareContextLoaderDelegate.loadContext(DefaultCacheAwareContextLoaderDelegate.java:132)
	at org.springframework.test.context.support.DefaultTestContext.getApplicationContext(DefaultTestContext.java:123)
	at org.springframework.test.context.web.ServletTestExecutionListener.setUpRequestContextIfNecessary(ServletTestExecutionListener.java:190)
	at org.springframework.test.context.web.ServletTestExecutionListener.prepareTestInstance(ServletTestExecutionListener.java:132)
	at org.springframework.test.context.TestContextManager.prepareTestInstance(TestContextManager.java:244)
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner.createTest(SpringJUnit4ClassRunner.java:227)
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner$1.runReflectiveCall(SpringJUnit4ClassRunner.java:289)
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner.methodBlock(SpringJUnit4ClassRunner.java:291)
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner.runChild(SpringJUnit4ClassRunner.java:246)
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner.runChild(SpringJUnit4ClassRunner.java:97)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:290)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:71)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:58)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268)
	at org.springframework.test.context.junit4.statements.RunBeforeTestClassCallbacks.evaluate(RunBeforeTestClassCallbacks.java:61)
	at org.springframework.test.context.junit4.statements.RunAfterTestClassCallbacks.evaluate(RunAfterTestClassCallbacks.java:70)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:363)
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner.run(SpringJUnit4ClassRunner.java:190)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:137)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:115)
	at org.junit.vintage.engine.execution.RunnerExecutor.execute(RunnerExecutor.java:40)
	at java.base/java.util.stream.ForEachOps$ForEachOp$OfRef.accept(ForEachOps.java:183)
	at java.base/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:195)
	at java.base/java.util.Iterator.forEachRemaining(Iterator.java:133)
	at java.base/java.util.Spliterators$IteratorSpliterator.forEachRemaining(Spliterators.java:1801)
	at java.base/java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:484)
	at java.base/java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:474)
	at java.base/java.util.stream.ForEachOps$ForEachOp.evaluateSequential(ForEachOps.java:150)
	at java.base/java.util.stream.ForEachOps$ForEachOp$OfRef.evaluateSequential(ForEachOps.java:173)
	at java.base/java.util.stream.AbstractPipeline.evaluate(AbstractPipeline.java:234)
	at java.base/java.util.stream.ReferencePipeline.forEach(ReferencePipeline.java:497)
	at org.junit.vintage.engine.VintageTestEngine.executeAllChildren(VintageTestEngine.java:80)
	at org.junit.vintage.engine.VintageTestEngine.execute(VintageTestEngine.java:71)
	at org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:220)
	at org.junit.platform.launcher.core.DefaultLauncher.lambda$execute$6(DefaultLauncher.java:188)
	at org.junit.platform.launcher.core.DefaultLauncher.withInterceptedStreams(DefaultLauncher.java:202)
	at org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:181)
	at org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:128)
	at org.apache.maven.surefire.junitplatform.JUnitPlatformProvider.invokeAllTests(JUnitPlatformProvider.java:150)
	at org.apache.maven.surefire.junitplatform.JUnitPlatformProvider.invoke(JUnitPlatformProvider.java:124)
	at org.apache.maven.surefire.booter.ForkedBooter.invokeProviderInSameClassLoader(ForkedBooter.java:384)
	at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:345)
	at org.apache.maven.surefire.booter.ForkedBooter.execute(ForkedBooter.java:126)
	at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:418)
Caused by: org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'groovyMarkupConfigurer' defined in class path resource [org/springframework/boot/autoconfigure/groovy/template/GroovyTemplateAutoConfiguration$GroovyMarkupConfiguration.class]: Invocation of init method failed; nested exception is java.lang.reflect.InaccessibleObjectException: Unable to make jdk.internal.loader.ClassLoaders$AppClassLoader(jdk.internal.loader.ClassLoaders$PlatformClassLoader,jdk.internal.loader.URLClassPath) accessible: module java.base does not "opens jdk.internal.loader" to unnamed module @5fcacc0
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1803)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:595)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:517)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:323)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:222)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:321)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:202)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(DefaultListableBeanFactory.java:879)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:878)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:550)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:747)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:397)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:315)
	at org.springframework.boot.test.context.SpringBootContextLoader.loadContext(SpringBootContextLoader.java:125)
	at org.springframework.test.context.cache.DefaultCacheAwareContextLoaderDelegate.loadContextInternal(DefaultCacheAwareContextLoaderDelegate.java:99)
	at org.springframework.test.context.cache.DefaultCacheAwareContextLoaderDelegate.loadContext(DefaultCacheAwareContextLoaderDelegate.java:124)
	... 45 common frames omitted
Caused by: java.lang.reflect.InaccessibleObjectException: Unable to make jdk.internal.loader.ClassLoaders$AppClassLoader(jdk.internal.loader.ClassLoaders$PlatformClassLoader,jdk.internal.loader.URLClassPath) accessible: module java.base does not "opens jdk.internal.loader" to unnamed module @5fcacc0
	at java.base/java.lang.reflect.AccessibleObject.checkCanSetAccessible(AccessibleObject.java:361)
	at java.base/java.lang.reflect.AccessibleObject.checkCanSetAccessible(AccessibleObject.java:301)
	at java.base/java.lang.reflect.Constructor.checkCanSetAccessible(Constructor.java:189)
	at java.base/java.lang.reflect.Constructor.setAccessible(Constructor.java:182)
	at org.codehaus.groovy.reflection.CachedConstructor$1.run(CachedConstructor.java:44)
	at java.base/java.security.AccessController.doPrivileged(AccessController.java:312)
	at org.codehaus.groovy.reflection.CachedConstructor.<init>(CachedConstructor.java:42)
	at org.codehaus.groovy.reflection.CachedClass$2.initValue(CachedClass.java:79)
	at org.codehaus.groovy.reflection.CachedClass$2.initValue(CachedClass.java:69)
	at org.codehaus.groovy.util.LazyReference.getLocked(LazyReference.java:49)
	at org.codehaus.groovy.util.LazyReference.get(LazyReference.java:36)
	at org.codehaus.groovy.reflection.CachedClass.getConstructors(CachedClass.java:268)
	at groovy.lang.MetaClassImpl.<init>(MetaClassImpl.java:218)
	at groovy.lang.MetaClassImpl.<init>(MetaClassImpl.java:228)
	at groovy.lang.MetaClassRegistry$MetaClassCreationHandle.createNormalMetaClass(MetaClassRegistry.java:171)
	at groovy.lang.MetaClassRegistry$MetaClassCreationHandle.createWithCustomLookup(MetaClassRegistry.java:161)
	at groovy.lang.MetaClassRegistry$MetaClassCreationHandle.create(MetaClassRegistry.java:144)
	at org.codehaus.groovy.reflection.ClassInfo.getMetaClassUnderLock(ClassInfo.java:253)
	at org.codehaus.groovy.reflection.ClassInfo.getMetaClass(ClassInfo.java:285)
	at org.codehaus.groovy.reflection.ClassInfo.getMetaClass(ClassInfo.java:295)
	at org.codehaus.groovy.runtime.metaclass.MetaClassRegistryImpl.getMetaClass(MetaClassRegistryImpl.java:261)
	at org.codehaus.groovy.runtime.InvokerHelper.getMetaClass(InvokerHelper.java:873)
	at org.codehaus.groovy.runtime.InvokerHelper.invokePojoMethod(InvokerHelper.java:906)
	at org.codehaus.groovy.runtime.InvokerHelper.invokeMethod(InvokerHelper.java:898)
	at org.codehaus.groovy.runtime.typehandling.DefaultTypeTransformation.castToBoolean(DefaultTypeTransformation.java:185)
	at org.codehaus.groovy.runtime.typehandling.DefaultTypeTransformation.booleanUnbox(DefaultTypeTransformation.java:74)
	at org.codehaus.groovy.control.customizers.ASTTransformationCustomizer.findASTTranformationClass(ASTTransformationCustomizer.groovy:209)
	at jdk.internal.reflect.GeneratedMethodAccessor358.invoke(Unknown Source)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:564)
	at org.codehaus.groovy.reflection.CachedMethod.invoke(CachedMethod.java:93)
	at org.codehaus.groovy.runtime.callsite.StaticMetaMethodSite$StaticMetaMethodSiteNoUnwrapNoCoerce.invoke(StaticMetaMethodSite.java:151)
	at org.codehaus.groovy.runtime.callsite.StaticMetaMethodSite.callStatic(StaticMetaMethodSite.java:102)
	at org.codehaus.groovy.runtime.callsite.AbstractCallSite.callStatic(AbstractCallSite.java:214)
	at org.codehaus.groovy.control.customizers.ASTTransformationCustomizer.findPhase(ASTTransformationCustomizer.groovy:226)
	at jdk.internal.reflect.GeneratedMethodAccessor357.invoke(Unknown Source)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:564)
	at org.codehaus.groovy.reflection.CachedMethod.invoke(CachedMethod.java:93)
	at org.codehaus.groovy.runtime.callsite.StaticMetaMethodSite$StaticMetaMethodSiteNoUnwrapNoCoerce.invoke(StaticMetaMethodSite.java:151)
	at org.codehaus.groovy.runtime.callsite.StaticMetaMethodSite.callStatic(StaticMetaMethodSite.java:102)
	at org.codehaus.groovy.runtime.callsite.AbstractCallSite.callStatic(AbstractCallSite.java:214)
	at org.codehaus.groovy.control.customizers.ASTTransformationCustomizer.<init>(ASTTransformationCustomizer.groovy:180)
	at org.codehaus.groovy.control.customizers.ASTTransformationCustomizer.<init>(ASTTransformationCustomizer.groovy:188)
	at groovy.text.markup.MarkupTemplateEngine.<init>(MarkupTemplateEngine.java:94)
	at org.springframework.web.servlet.view.groovy.GroovyMarkupConfigurer.createTemplateEngine(GroovyMarkupConfigurer.java:160)
	at org.springframework.web.servlet.view.groovy.GroovyMarkupConfigurer.afterPropertiesSet(GroovyMarkupConfigurer.java:153)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1862)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1799)
	... 60 common frames omitted
2020-11-25 20:53:21,318 DEBUG  [main] BasicTypeRegistry: Adding type registration boolean -> org.hibernate.type.BooleanType@ff2266c
2020-11-25 20:53:21,353 DEBUG  [main] BasicTypeRegistry: Adding type registration boolean -> org.hibernate.type.BooleanType@ff2266c
2020-11-25 20:53:21,354 DEBUG  [main] BasicTypeRegistry: Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@ff2266c
2020-11-25 20:53:21,355 DEBUG  [main] BasicTypeRegistry: Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@1d585fb
2020-11-25 20:53:21,356 DEBUG  [main] BasicTypeRegistry: Adding type registration true_false -> org.hibernate.type.TrueFalseType@7c8f047a
2020-11-25 20:53:21,356 DEBUG  [main] BasicTypeRegistry: Adding type registration yes_no -> org.hibernate.type.YesNoType@d949bc4
2020-11-25 20:53:21,358 DEBUG  [main] BasicTypeRegistry: Adding type registration byte -> org.hibernate.type.ByteType@29c25bbc
2020-11-25 20:53:21,358 DEBUG  [main] BasicTypeRegistry: Adding type registration byte -> org.hibernate.type.ByteType@29c25bbc
2020-11-25 20:53:21,359 DEBUG  [main] BasicTypeRegistry: Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@29c25bbc
2020-11-25 20:53:21,361 DEBUG  [main] BasicTypeRegistry: Adding type registration character -> org.hibernate.type.CharacterType@403f7aa2
2020-11-25 20:53:21,361 DEBUG  [main] BasicTypeRegistry: Adding type registration char -> org.hibernate.type.CharacterType@403f7aa2
2020-11-25 20:53:21,361 DEBUG  [main] BasicTypeRegistry: Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@403f7aa2
2020-11-25 20:53:21,363 DEBUG  [main] BasicTypeRegistry: Adding type registration short -> org.hibernate.type.ShortType@38cb1606
2020-11-25 20:53:21,364 DEBUG  [main] BasicTypeRegistry: Adding type registration short -> org.hibernate.type.ShortType@38cb1606
2020-11-25 20:53:21,365 DEBUG  [main] BasicTypeRegistry: Adding type registration java.lang.Short -> org.hibernate.type.ShortType@38cb1606
2020-11-25 20:53:21,367 DEBUG  [main] BasicTypeRegistry: Adding type registration integer -> org.hibernate.type.IntegerType@5d3b6585
2020-11-25 20:53:21,368 DEBUG  [main] BasicTypeRegistry: Adding type registration int -> org.hibernate.type.IntegerType@5d3b6585
2020-11-25 20:53:21,368 DEBUG  [main] BasicTypeRegistry: Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@5d3b6585
2020-11-25 20:53:21,370 DEBUG  [main] BasicTypeRegistry: Adding type registration long -> org.hibernate.type.LongType@4fea5ee0
2020-11-25 20:53:21,370 DEBUG  [main] BasicTypeRegistry: Adding type registration long -> org.hibernate.type.LongType@4fea5ee0
2020-11-25 20:53:21,370 DEBUG  [main] BasicTypeRegistry: Adding type registration java.lang.Long -> org.hibernate.type.LongType@4fea5ee0
2020-11-25 20:53:21,372 DEBUG  [main] BasicTypeRegistry: Adding type registration float -> org.hibernate.type.FloatType@7b3085a3
2020-11-25 20:53:21,372 DEBUG  [main] BasicTypeRegistry: Adding type registration float -> org.hibernate.type.FloatType@7b3085a3
2020-11-25 20:53:21,372 DEBUG  [main] BasicTypeRegistry: Adding type registration java.lang.Float -> org.hibernate.type.FloatType@7b3085a3
2020-11-25 20:53:21,374 DEBUG  [main] BasicTypeRegistry: Adding type registration double -> org.hibernate.type.DoubleType@5a7a6d34
2020-11-25 20:53:21,374 DEBUG  [main] BasicTypeRegistry: Adding type registration double -> org.hibernate.type.DoubleType@5a7a6d34
2020-11-25 20:53:21,375 DEBUG  [main] BasicTypeRegistry: Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@5a7a6d34
2020-11-25 20:53:21,376 DEBUG  [main] BasicTypeRegistry: Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@5ae66c98
2020-11-25 20:53:21,377 DEBUG  [main] BasicTypeRegistry: Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@5ae66c98
2020-11-25 20:53:21,378 DEBUG  [main] BasicTypeRegistry: Adding type registration big_integer -> org.hibernate.type.BigIntegerType@223cbf0d
2020-11-25 20:53:21,379 DEBUG  [main] BasicTypeRegistry: Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@223cbf0d
2020-11-25 20:53:21,381 DEBUG  [main] BasicTypeRegistry: Adding type registration string -> org.hibernate.type.StringType@4f581211
2020-11-25 20:53:21,382 DEBUG  [main] BasicTypeRegistry: Adding type registration java.lang.String -> org.hibernate.type.StringType@4f581211
2020-11-25 20:53:21,383 DEBUG  [main] BasicTypeRegistry: Adding type registration nstring -> org.hibernate.type.StringNVarcharType@6697f3d
2020-11-25 20:53:21,384 DEBUG  [main] BasicTypeRegistry: Adding type registration ncharacter -> org.hibernate.type.CharacterNCharType@f1d1463
2020-11-25 20:53:21,386 DEBUG  [main] BasicTypeRegistry: Adding type registration url -> org.hibernate.type.UrlType@44ddb518
2020-11-25 20:53:21,386 DEBUG  [main] BasicTypeRegistry: Adding type registration java.net.URL -> org.hibernate.type.UrlType@44ddb518
2020-11-25 20:53:21,389 DEBUG  [main] BasicTypeRegistry: Adding type registration Duration -> org.hibernate.type.DurationType@49e0b123
2020-11-25 20:53:21,389 DEBUG  [main] BasicTypeRegistry: Adding type registration java.time.Duration -> org.hibernate.type.DurationType@49e0b123
2020-11-25 20:53:21,391 DEBUG  [main] BasicTypeRegistry: Adding type registration Instant -> org.hibernate.type.InstantType@40a28bda
2020-11-25 20:53:21,391 DEBUG  [main] BasicTypeRegistry: Adding type registration java.time.Instant -> org.hibernate.type.InstantType@40a28bda
2020-11-25 20:53:21,392 DEBUG  [main] BasicTypeRegistry: Adding type registration LocalDateTime -> org.hibernate.type.LocalDateTimeType@33430fc
2020-11-25 20:53:21,393 DEBUG  [main] BasicTypeRegistry: Adding type registration java.time.LocalDateTime -> org.hibernate.type.LocalDateTimeType@33430fc
2020-11-25 20:53:21,394 DEBUG  [main] BasicTypeRegistry: Adding type registration LocalDate -> org.hibernate.type.LocalDateType@d7055be
2020-11-25 20:53:21,395 DEBUG  [main] BasicTypeRegistry: Adding type registration java.time.LocalDate -> org.hibernate.type.LocalDateType@d7055be
2020-11-25 20:53:21,396 DEBUG  [main] BasicTypeRegistry: Adding type registration LocalTime -> org.hibernate.type.LocalTimeType@3c7d8a4
2020-11-25 20:53:21,397 DEBUG  [main] BasicTypeRegistry: Adding type registration java.time.LocalTime -> org.hibernate.type.LocalTimeType@3c7d8a4
2020-11-25 20:53:21,398 DEBUG  [main] BasicTypeRegistry: Adding type registration OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@7a117dc2
2020-11-25 20:53:21,399 DEBUG  [main] BasicTypeRegistry: Adding type registration java.time.OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@7a117dc2
2020-11-25 20:53:21,400 DEBUG  [main] BasicTypeRegistry: Adding type registration OffsetTime -> org.hibernate.type.OffsetTimeType@3c64339f
2020-11-25 20:53:21,400 DEBUG  [main] BasicTypeRegistry: Adding type registration java.time.OffsetTime -> org.hibernate.type.OffsetTimeType@3c64339f
2020-11-25 20:53:21,402 DEBUG  [main] BasicTypeRegistry: Adding type registration ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@30c8c6ab
2020-11-25 20:53:21,403 DEBUG  [main] BasicTypeRegistry: Adding type registration java.time.ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@30c8c6ab
2020-11-25 20:53:21,405 DEBUG  [main] BasicTypeRegistry: Adding type registration date -> org.hibernate.type.DateType@61c5fd78
2020-11-25 20:53:21,405 DEBUG  [main] BasicTypeRegistry: Adding type registration java.sql.Date -> org.hibernate.type.DateType@61c5fd78
2020-11-25 20:53:21,407 DEBUG  [main] BasicTypeRegistry: Adding type registration time -> org.hibernate.type.TimeType@77856cc5
2020-11-25 20:53:21,407 DEBUG  [main] BasicTypeRegistry: Adding type registration java.sql.Time -> org.hibernate.type.TimeType@77856cc5
2020-11-25 20:53:21,408 DEBUG  [main] BasicTypeRegistry: Adding type registration timestamp -> org.hibernate.type.TimestampType@12166229
2020-11-25 20:53:21,409 DEBUG  [main] BasicTypeRegistry: Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@12166229
2020-11-25 20:53:21,409 DEBUG  [main] BasicTypeRegistry: Adding type registration java.util.Date -> org.hibernate.type.TimestampType@12166229
2020-11-25 20:53:21,411 DEBUG  [main] BasicTypeRegistry: Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@2b4829aa
2020-11-25 20:53:21,413 DEBUG  [main] BasicTypeRegistry: Adding type registration calendar -> org.hibernate.type.CalendarType@3ec082a1
2020-11-25 20:53:21,414 DEBUG  [main] BasicTypeRegistry: Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@3ec082a1
2020-11-25 20:53:21,414 DEBUG  [main] BasicTypeRegistry: Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@3ec082a1
2020-11-25 20:53:21,415 DEBUG  [main] BasicTypeRegistry: Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@429f0ca8
2020-11-25 20:53:21,416 DEBUG  [main] BasicTypeRegistry: Adding type registration locale -> org.hibernate.type.LocaleType@11c3ce6a
2020-11-25 20:53:21,417 DEBUG  [main] BasicTypeRegistry: Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@11c3ce6a
2020-11-25 20:53:21,418 DEBUG  [main] BasicTypeRegistry: Adding type registration currency -> org.hibernate.type.CurrencyType@28519bfb
2020-11-25 20:53:21,419 DEBUG  [main] BasicTypeRegistry: Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@28519bfb
2020-11-25 20:53:21,420 DEBUG  [main] BasicTypeRegistry: Adding type registration timezone -> org.hibernate.type.TimeZoneType@7aa15a80
2020-11-25 20:53:21,420 DEBUG  [main] BasicTypeRegistry: Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@7aa15a80
2020-11-25 20:53:21,422 DEBUG  [main] BasicTypeRegistry: Adding type registration class -> org.hibernate.type.ClassType@48d5ca17
2020-11-25 20:53:21,422 DEBUG  [main] BasicTypeRegistry: Adding type registration java.lang.Class -> org.hibernate.type.ClassType@48d5ca17
2020-11-25 20:53:21,423 DEBUG  [main] BasicTypeRegistry: Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@79b8ecb
2020-11-25 20:53:21,423 DEBUG  [main] BasicTypeRegistry: Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@79b8ecb
2020-11-25 20:53:21,424 DEBUG  [main] BasicTypeRegistry: Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@c0013b8
2020-11-25 20:53:21,426 DEBUG  [main] BasicTypeRegistry: Adding type registration binary -> org.hibernate.type.BinaryType@2a42019a
2020-11-25 20:53:21,426 DEBUG  [main] BasicTypeRegistry: Adding type registration byte[] -> org.hibernate.type.BinaryType@2a42019a
2020-11-25 20:53:21,426 DEBUG  [main] BasicTypeRegistry: Adding type registration [B -> org.hibernate.type.BinaryType@2a42019a
2020-11-25 20:53:21,428 DEBUG  [main] BasicTypeRegistry: Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@495da9a7
2020-11-25 20:53:21,428 DEBUG  [main] BasicTypeRegistry: Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@495da9a7
2020-11-25 20:53:21,428 DEBUG  [main] BasicTypeRegistry: Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@495da9a7
2020-11-25 20:53:21,430 DEBUG  [main] BasicTypeRegistry: Adding type registration row_version -> org.hibernate.type.RowVersionType@35becbd4
2020-11-25 20:53:21,431 DEBUG  [main] BasicTypeRegistry: Adding type registration image -> org.hibernate.type.ImageType@30fa8a6b
2020-11-25 20:53:21,432 DEBUG  [main] BasicTypeRegistry: Adding type registration characters -> org.hibernate.type.CharArrayType@4c8d45cf
2020-11-25 20:53:21,432 DEBUG  [main] BasicTypeRegistry: Adding type registration char[] -> org.hibernate.type.CharArrayType@4c8d45cf
2020-11-25 20:53:21,433 DEBUG  [main] BasicTypeRegistry: Adding type registration [C -> org.hibernate.type.CharArrayType@4c8d45cf
2020-11-25 20:53:21,435 DEBUG  [main] BasicTypeRegistry: Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@5b490d5e
2020-11-25 20:53:21,436 DEBUG  [main] BasicTypeRegistry: Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@5b490d5e
2020-11-25 20:53:21,437 DEBUG  [main] BasicTypeRegistry: Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@5b490d5e
2020-11-25 20:53:21,439 DEBUG  [main] BasicTypeRegistry: Adding type registration text -> org.hibernate.type.TextType@18b04526
2020-11-25 20:53:21,440 DEBUG  [main] BasicTypeRegistry: Adding type registration ntext -> org.hibernate.type.NTextType@246df37b
2020-11-25 20:53:21,442 DEBUG  [main] BasicTypeRegistry: Adding type registration blob -> org.hibernate.type.BlobType@56881196
2020-11-25 20:53:21,445 DEBUG  [main] BasicTypeRegistry: Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@56881196
2020-11-25 20:53:21,446 DEBUG  [main] BasicTypeRegistry: Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@131c0b6f
2020-11-25 20:53:21,450 DEBUG  [main] BasicTypeRegistry: Adding type registration clob -> org.hibernate.type.ClobType@7fc1fd31
2020-11-25 20:53:21,451 DEBUG  [main] BasicTypeRegistry: Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@7fc1fd31
2020-11-25 20:53:21,453 DEBUG  [main] BasicTypeRegistry: Adding type registration nclob -> org.hibernate.type.NClobType@70777a65
2020-11-25 20:53:21,454 DEBUG  [main] BasicTypeRegistry: Adding type registration java.sql.NClob -> org.hibernate.type.NClobType@70777a65
2020-11-25 20:53:21,456 DEBUG  [main] BasicTypeRegistry: Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@2f6f4ac4
2020-11-25 20:53:21,457 DEBUG  [main] BasicTypeRegistry: Adding type registration materialized_nclob -> org.hibernate.type.MaterializedNClobType@7d685f4e
2020-11-25 20:53:21,459 DEBUG  [main] BasicTypeRegistry: Adding type registration serializable -> org.hibernate.type.SerializableType@319aa9ee
2020-11-25 20:53:21,463 DEBUG  [main] BasicTypeRegistry: Adding type registration object -> org.hibernate.type.ObjectType@54234569
2020-11-25 20:53:21,464 DEBUG  [main] BasicTypeRegistry: Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@54234569
2020-11-25 20:53:21,465 DEBUG  [main] BasicTypeRegistry: Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@78e387d6
2020-11-25 20:53:21,466 DEBUG  [main] BasicTypeRegistry: Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@9147ba2
2020-11-25 20:53:21,466 DEBUG  [main] BasicTypeRegistry: Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@3460e4ed
2020-11-25 20:53:21,467 DEBUG  [main] BasicTypeRegistry: Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@2efcc0b3
2020-11-25 20:53:21,467 DEBUG  [main] BasicTypeRegistry: Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@4a453f8d
2020-11-25 20:53:21,467 DEBUG  [main] BasicTypeRegistry: Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@60a6840c
2020-11-25 20:53:21,467 DEBUG  [main] BasicTypeRegistry: Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@53525379
2020-11-25 20:53:21,467 DEBUG  [main] BasicTypeRegistry: Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@1be3f8f8
2020-11-25 20:53:21,939 DEBUG  [main] TypeConfiguration$Scope: Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@6fefc5ea] to MetadataBuildingContext [org.hibernate.boot.internal.MetadataBuildingContextRootImpl@6159fb3c]
2020-11-25 20:53:22,325 DEBUG  [main] EnumType: Using NAMED-based conversion for Enum com.sf.back.entities.Kind
2020-11-25 20:53:22,437 DEBUG  [main] EnumType: Using NAMED-based conversion for Enum com.sf.back.entities.Kind
2020-11-25 20:53:22,617 DEBUG  [main] TypeConfiguration$Scope: Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@6fefc5ea] to SessionFactoryImpl [org.hibernate.internal.SessionFactoryImpl@1f3aa970]
2020-11-25 20:53:22,700 DEBUG  [main] EnumType: Using NAMED-based conversion for Enum com.sf.back.entities.Kind
2020-11-25 20:53:22,701 DEBUG  [main] EnumType: Using NAMED-based conversion for Enum com.sf.back.entities.Kind
2020-11-25 20:53:22,828 DEBUG  [main] EnumType: Using NAMED-based conversion for Enum com.sf.back.entities.Kind
2020-11-25 20:53:22,829 DEBUG  [main] EnumType: Using NAMED-based conversion for Enum com.sf.back.entities.Kind
2020-11-25 20:53:23,008 DEBUG  [main] EnumType: Using NAMED-based conversion for Enum com.sf.back.entities.Kind
2020-11-25 20:53:23,008 DEBUG  [main] EnumType: Using NAMED-based conversion for Enum com.sf.back.entities.Kind
2020-11-25 20:53:23,044 DEBUG  [main] EnumType: Using NAMED-based conversion for Enum com.sf.back.entities.Kind
2020-11-25 20:53:23,072 TRACE  [main] TypeConfiguration$Scope: Handling #sessionFactoryCreated from [org.hibernate.internal.SessionFactoryImpl@1f3aa970] for TypeConfiguration
2020-11-25 20:53:23,875 WARN   [main] GlobalSettings: Dozer configuration file not found: dozer.properties.  Using defaults for all Dozer global properties.
2020-11-25 20:53:24,721 WARN   [main] JpaBaseConfiguration$JpaWebConfiguration: spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2020-11-25 20:53:25,649 WARN   [main] GenericWebApplicationContext: Exception encountered during context initialization - cancelling refresh attempt: org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'groovyMarkupConfigurer' defined in class path resource [org/springframework/boot/autoconfigure/groovy/template/GroovyTemplateAutoConfiguration$GroovyMarkupConfiguration.class]: Invocation of init method failed; nested exception is java.lang.reflect.InaccessibleObjectException: Unable to make jdk.internal.loader.ClassLoaders$AppClassLoader(jdk.internal.loader.ClassLoaders$PlatformClassLoader,jdk.internal.loader.URLClassPath) accessible: module java.base does not "opens jdk.internal.loader" to unnamed module @60fa3495
2020-11-25 20:53:25,663 TRACE  [main] TypeConfiguration$Scope: Handling #sessionFactoryClosed from [org.hibernate.internal.SessionFactoryImpl@1f3aa970] for TypeConfiguration
2020-11-25 20:53:25,663 DEBUG  [main] TypeConfiguration$Scope: Un-scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration$Scope@6d2693f] from SessionFactory [org.hibernate.internal.SessionFactoryImpl@1f3aa970]
2020-11-25 20:53:25,720 ERROR  [main] SpringApplication: Application run failed
org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'groovyMarkupConfigurer' defined in class path resource [org/springframework/boot/autoconfigure/groovy/template/GroovyTemplateAutoConfiguration$GroovyMarkupConfiguration.class]: Invocation of init method failed; nested exception is java.lang.reflect.InaccessibleObjectException: Unable to make jdk.internal.loader.ClassLoaders$AppClassLoader(jdk.internal.loader.ClassLoaders$PlatformClassLoader,jdk.internal.loader.URLClassPath) accessible: module java.base does not "opens jdk.internal.loader" to unnamed module @60fa3495
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1803)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:595)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:517)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:323)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:222)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:321)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:202)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(DefaultListableBeanFactory.java:879)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:878)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:550)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:747)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:397)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:315)
	at org.springframework.boot.test.context.SpringBootContextLoader.loadContext(SpringBootContextLoader.java:125)
	at org.springframework.test.context.cache.DefaultCacheAwareContextLoaderDelegate.loadContextInternal(DefaultCacheAwareContextLoaderDelegate.java:99)
	at org.springframework.test.context.cache.DefaultCacheAwareContextLoaderDelegate.loadContext(DefaultCacheAwareContextLoaderDelegate.java:124)
	at org.springframework.test.context.support.DefaultTestContext.getApplicationContext(DefaultTestContext.java:123)
	at org.springframework.test.context.web.ServletTestExecutionListener.setUpRequestContextIfNecessary(ServletTestExecutionListener.java:190)
	at org.springframework.test.context.web.ServletTestExecutionListener.prepareTestInstance(ServletTestExecutionListener.java:132)
	at org.springframework.test.context.TestContextManager.prepareTestInstance(TestContextManager.java:244)
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner.createTest(SpringJUnit4ClassRunner.java:227)
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner$1.runReflectiveCall(SpringJUnit4ClassRunner.java:289)
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner.methodBlock(SpringJUnit4ClassRunner.java:291)
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner.runChild(SpringJUnit4ClassRunner.java:246)
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner.runChild(SpringJUnit4ClassRunner.java:97)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:290)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:71)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:58)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268)
	at org.junit.internal.runners.statements.RunBefores.evaluate(RunBefores.java:26)
	at org.springframework.test.context.junit4.statements.RunBeforeTestClassCallbacks.evaluate(RunBeforeTestClassCallbacks.java:61)
	at org.junit.internal.runners.statements.RunAfters.evaluate(RunAfters.java:27)
	at org.springframework.test.context.junit4.statements.RunAfterTestClassCallbacks.evaluate(RunAfterTestClassCallbacks.java:70)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:363)
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner.run(SpringJUnit4ClassRunner.java:190)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:137)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:115)
	at org.junit.vintage.engine.execution.RunnerExecutor.execute(RunnerExecutor.java:40)
	at java.base/java.util.stream.ForEachOps$ForEachOp$OfRef.accept(ForEachOps.java:183)
	at java.base/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:195)
	at java.base/java.util.Iterator.forEachRemaining(Iterator.java:133)
	at java.base/java.util.Spliterators$IteratorSpliterator.forEachRemaining(Spliterators.java:1801)
	at java.base/java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:484)
	at java.base/java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:474)
	at java.base/java.util.stream.ForEachOps$ForEachOp.evaluateSequential(ForEachOps.java:150)
	at java.base/java.util.stream.ForEachOps$ForEachOp$OfRef.evaluateSequential(ForEachOps.java:173)
	at java.base/java.util.stream.AbstractPipeline.evaluate(AbstractPipeline.java:234)
	at java.base/java.util.stream.ReferencePipeline.forEach(ReferencePipeline.java:497)
	at org.junit.vintage.engine.VintageTestEngine.executeAllChildren(VintageTestEngine.java:80)
	at org.junit.vintage.engine.VintageTestEngine.execute(VintageTestEngine.java:71)
	at org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:220)
	at org.junit.platform.launcher.core.DefaultLauncher.lambda$execute$6(DefaultLauncher.java:188)
	at org.junit.platform.launcher.core.DefaultLauncher.withInterceptedStreams(DefaultLauncher.java:202)
	at org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:181)
	at org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:128)
	at org.apache.maven.surefire.junitplatform.JUnitPlatformProvider.invokeAllTests(JUnitPlatformProvider.java:150)
	at org.apache.maven.surefire.junitplatform.JUnitPlatformProvider.invoke(JUnitPlatformProvider.java:124)
	at org.apache.maven.surefire.booter.ForkedBooter.invokeProviderInSameClassLoader(ForkedBooter.java:384)
	at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:345)
	at org.apache.maven.surefire.booter.ForkedBooter.execute(ForkedBooter.java:126)
	at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:418)
Caused by: java.lang.reflect.InaccessibleObjectException: Unable to make jdk.internal.loader.ClassLoaders$AppClassLoader(jdk.internal.loader.ClassLoaders$PlatformClassLoader,jdk.internal.loader.URLClassPath) accessible: module java.base does not "opens jdk.internal.loader" to unnamed module @60fa3495
	at java.base/java.lang.reflect.AccessibleObject.checkCanSetAccessible(AccessibleObject.java:344)
	at java.base/java.lang.reflect.AccessibleObject.checkCanSetAccessible(AccessibleObject.java:284)
	at java.base/java.lang.reflect.Constructor.checkCanSetAccessible(Constructor.java:189)
	at java.base/java.lang.reflect.Constructor.setAccessible(Constructor.java:182)
	at org.codehaus.groovy.reflection.CachedConstructor$1.run(CachedConstructor.java:44)
	at java.base/java.security.AccessController.doPrivileged(AccessController.java:312)
	at org.codehaus.groovy.reflection.CachedConstructor.<init>(CachedConstructor.java:42)
	at org.codehaus.groovy.reflection.CachedClass$2.initValue(CachedClass.java:79)
	at org.codehaus.groovy.reflection.CachedClass$2.initValue(CachedClass.java:69)
	at org.codehaus.groovy.util.LazyReference.getLocked(LazyReference.java:49)
	at org.codehaus.groovy.util.LazyReference.get(LazyReference.java:36)
	at org.codehaus.groovy.reflection.CachedClass.getConstructors(CachedClass.java:268)
	at groovy.lang.MetaClassImpl.<init>(MetaClassImpl.java:218)
	at groovy.lang.MetaClassImpl.<init>(MetaClassImpl.java:228)
	at groovy.lang.MetaClassRegistry$MetaClassCreationHandle.createNormalMetaClass(MetaClassRegistry.java:171)
	at groovy.lang.MetaClassRegistry$MetaClassCreationHandle.createWithCustomLookup(MetaClassRegistry.java:161)
	at groovy.lang.MetaClassRegistry$MetaClassCreationHandle.create(MetaClassRegistry.java:144)
	at org.codehaus.groovy.reflection.ClassInfo.getMetaClassUnderLock(ClassInfo.java:253)
	at org.codehaus.groovy.reflection.ClassInfo.getMetaClass(ClassInfo.java:285)
	at org.codehaus.groovy.reflection.ClassInfo.getMetaClass(ClassInfo.java:295)
	at org.codehaus.groovy.runtime.metaclass.MetaClassRegistryImpl.getMetaClass(MetaClassRegistryImpl.java:261)
	at org.codehaus.groovy.runtime.InvokerHelper.getMetaClass(InvokerHelper.java:873)
	at org.codehaus.groovy.runtime.InvokerHelper.invokePojoMethod(InvokerHelper.java:906)
	at org.codehaus.groovy.runtime.InvokerHelper.invokeMethod(InvokerHelper.java:898)
	at org.codehaus.groovy.runtime.typehandling.DefaultTypeTransformation.castToBoolean(DefaultTypeTransformation.java:185)
	at org.codehaus.groovy.runtime.typehandling.DefaultTypeTransformation.booleanUnbox(DefaultTypeTransformation.java:74)
	at org.codehaus.groovy.control.customizers.ASTTransformationCustomizer.findASTTranformationClass(ASTTransformationCustomizer.groovy:209)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:567)
	at org.codehaus.groovy.reflection.CachedMethod.invoke(CachedMethod.java:93)
	at org.codehaus.groovy.runtime.callsite.StaticMetaMethodSite$StaticMetaMethodSiteNoUnwrapNoCoerce.invoke(StaticMetaMethodSite.java:151)
	at org.codehaus.groovy.runtime.callsite.StaticMetaMethodSite.callStatic(StaticMetaMethodSite.java:102)
	at org.codehaus.groovy.runtime.callsite.CallSiteArray.defaultCallStatic(CallSiteArray.java:56)
	at org.codehaus.groovy.runtime.callsite.AbstractCallSite.callStatic(AbstractCallSite.java:194)
	at org.codehaus.groovy.runtime.callsite.AbstractCallSite.callStatic(AbstractCallSite.java:214)
	at org.codehaus.groovy.control.customizers.ASTTransformationCustomizer.findPhase(ASTTransformationCustomizer.groovy:226)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:567)
	at org.codehaus.groovy.reflection.CachedMethod.invoke(CachedMethod.java:93)
	at org.codehaus.groovy.runtime.callsite.StaticMetaMethodSite$StaticMetaMethodSiteNoUnwrapNoCoerce.invoke(StaticMetaMethodSite.java:151)
	at org.codehaus.groovy.runtime.callsite.StaticMetaMethodSite.callStatic(StaticMetaMethodSite.java:102)
	at org.codehaus.groovy.runtime.callsite.CallSiteArray.defaultCallStatic(CallSiteArray.java:56)
	at org.codehaus.groovy.runtime.callsite.AbstractCallSite.callStatic(AbstractCallSite.java:194)
	at org.codehaus.groovy.runtime.callsite.AbstractCallSite.callStatic(AbstractCallSite.java:214)
	at org.codehaus.groovy.control.customizers.ASTTransformationCustomizer.<init>(ASTTransformationCustomizer.groovy:180)
	at org.codehaus.groovy.control.customizers.ASTTransformationCustomizer.<init>(ASTTransformationCustomizer.groovy:188)
	at groovy.text.markup.MarkupTemplateEngine.<init>(MarkupTemplateEngine.java:94)
	at org.springframework.web.servlet.view.groovy.GroovyMarkupConfigurer.createTemplateEngine(GroovyMarkupConfigurer.java:160)
	at org.springframework.web.servlet.view.groovy.GroovyMarkupConfigurer.afterPropertiesSet(GroovyMarkupConfigurer.java:153)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1862)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1799)
	... 62 common frames omitted
2020-11-25 20:53:25,723 ERROR  [main] TestContextManager: Caught exception while allowing TestExecutionListener [org.springframework.test.context.web.ServletTestExecutionListener@170b27a7] to prepare test instance [com.sf.math.algebra.solvers.PolynomialSolverIntervalTest@79392584]
java.lang.IllegalStateException: Failed to load ApplicationContext
	at org.springframework.test.context.cache.DefaultCacheAwareContextLoaderDelegate.loadContext(DefaultCacheAwareContextLoaderDelegate.java:132)
	at org.springframework.test.context.support.DefaultTestContext.getApplicationContext(DefaultTestContext.java:123)
	at org.springframework.test.context.web.ServletTestExecutionListener.setUpRequestContextIfNecessary(ServletTestExecutionListener.java:190)
	at org.springframework.test.context.web.ServletTestExecutionListener.prepareTestInstance(ServletTestExecutionListener.java:132)
	at org.springframework.test.context.TestContextManager.prepareTestInstance(TestContextManager.java:244)
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner.createTest(SpringJUnit4ClassRunner.java:227)
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner$1.runReflectiveCall(SpringJUnit4ClassRunner.java:289)
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner.methodBlock(SpringJUnit4ClassRunner.java:291)
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner.runChild(SpringJUnit4ClassRunner.java:246)
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner.runChild(SpringJUnit4ClassRunner.java:97)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:290)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:71)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:58)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268)
	at org.junit.internal.runners.statements.RunBefores.evaluate(RunBefores.java:26)
	at org.springframework.test.context.junit4.statements.RunBeforeTestClassCallbacks.evaluate(RunBeforeTestClassCallbacks.java:61)
	at org.junit.internal.runners.statements.RunAfters.evaluate(RunAfters.java:27)
	at org.springframework.test.context.junit4.statements.RunAfterTestClassCallbacks.evaluate(RunAfterTestClassCallbacks.java:70)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:363)
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner.run(SpringJUnit4ClassRunner.java:190)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:137)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:115)
	at org.junit.vintage.engine.execution.RunnerExecutor.execute(RunnerExecutor.java:40)
	at java.base/java.util.stream.ForEachOps$ForEachOp$OfRef.accept(ForEachOps.java:183)
	at java.base/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:195)
	at java.base/java.util.Iterator.forEachRemaining(Iterator.java:133)
	at java.base/java.util.Spliterators$IteratorSpliterator.forEachRemaining(Spliterators.java:1801)
	at java.base/java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:484)
	at java.base/java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:474)
	at java.base/java.util.stream.ForEachOps$ForEachOp.evaluateSequential(ForEachOps.java:150)
	at java.base/java.util.stream.ForEachOps$ForEachOp$OfRef.evaluateSequential(ForEachOps.java:173)
	at java.base/java.util.stream.AbstractPipeline.evaluate(AbstractPipeline.java:234)
	at java.base/java.util.stream.ReferencePipeline.forEach(ReferencePipeline.java:497)
	at org.junit.vintage.engine.VintageTestEngine.executeAllChildren(VintageTestEngine.java:80)
	at org.junit.vintage.engine.VintageTestEngine.execute(VintageTestEngine.java:71)
	at org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:220)
	at org.junit.platform.launcher.core.DefaultLauncher.lambda$execute$6(DefaultLauncher.java:188)
	at org.junit.platform.launcher.core.DefaultLauncher.withInterceptedStreams(DefaultLauncher.java:202)
	at org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:181)
	at org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:128)
	at org.apache.maven.surefire.junitplatform.JUnitPlatformProvider.invokeAllTests(JUnitPlatformProvider.java:150)
	at org.apache.maven.surefire.junitplatform.JUnitPlatformProvider.invoke(JUnitPlatformProvider.java:124)
	at org.apache.maven.surefire.booter.ForkedBooter.invokeProviderInSameClassLoader(ForkedBooter.java:384)
	at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:345)
	at org.apache.maven.surefire.booter.ForkedBooter.execute(ForkedBooter.java:126)
	at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:418)
Caused by: org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'groovyMarkupConfigurer' defined in class path resource [org/springframework/boot/autoconfigure/groovy/template/GroovyTemplateAutoConfiguration$GroovyMarkupConfiguration.class]: Invocation of init method failed; nested exception is java.lang.reflect.InaccessibleObjectException: Unable to make jdk.internal.loader.ClassLoaders$AppClassLoader(jdk.internal.loader.ClassLoaders$PlatformClassLoader,jdk.internal.loader.URLClassPath) accessible: module java.base does not "opens jdk.internal.loader" to unnamed module @60fa3495
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1803)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:595)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:517)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:323)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:222)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:321)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:202)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(DefaultListableBeanFactory.java:879)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:878)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:550)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:747)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:397)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:315)
	at org.springframework.boot.test.context.SpringBootContextLoader.loadContext(SpringBootContextLoader.java:125)
	at org.springframework.test.context.cache.DefaultCacheAwareContextLoaderDelegate.loadContextInternal(DefaultCacheAwareContextLoaderDelegate.java:99)
	at org.springframework.test.context.cache.DefaultCacheAwareContextLoaderDelegate.loadContext(DefaultCacheAwareContextLoaderDelegate.java:124)
	... 47 common frames omitted
Caused by: java.lang.reflect.InaccessibleObjectException: Unable to make jdk.internal.loader.ClassLoaders$AppClassLoader(jdk.internal.loader.ClassLoaders$PlatformClassLoader,jdk.internal.loader.URLClassPath) accessible: module java.base does not "opens jdk.internal.loader" to unnamed module @60fa3495
	at java.base/java.lang.reflect.AccessibleObject.checkCanSetAccessible(AccessibleObject.java:344)
	at java.base/java.lang.reflect.AccessibleObject.checkCanSetAccessible(AccessibleObject.java:284)
	at java.base/java.lang.reflect.Constructor.checkCanSetAccessible(Constructor.java:189)
	at java.base/java.lang.reflect.Constructor.setAccessible(Constructor.java:182)
	at org.codehaus.groovy.reflection.CachedConstructor$1.run(CachedConstructor.java:44)
	at java.base/java.security.AccessController.doPrivileged(AccessController.java:312)
	at org.codehaus.groovy.reflection.CachedConstructor.<init>(CachedConstructor.java:42)
	at org.codehaus.groovy.reflection.CachedClass$2.initValue(CachedClass.java:79)
	at org.codehaus.groovy.reflection.CachedClass$2.initValue(CachedClass.java:69)
	at org.codehaus.groovy.util.LazyReference.getLocked(LazyReference.java:49)
	at org.codehaus.groovy.util.LazyReference.get(LazyReference.java:36)
	at org.codehaus.groovy.reflection.CachedClass.getConstructors(CachedClass.java:268)
	at groovy.lang.MetaClassImpl.<init>(MetaClassImpl.java:218)
	at groovy.lang.MetaClassImpl.<init>(MetaClassImpl.java:228)
	at groovy.lang.MetaClassRegistry$MetaClassCreationHandle.createNormalMetaClass(MetaClassRegistry.java:171)
	at groovy.lang.MetaClassRegistry$MetaClassCreationHandle.createWithCustomLookup(MetaClassRegistry.java:161)
	at groovy.lang.MetaClassRegistry$MetaClassCreationHandle.create(MetaClassRegistry.java:144)
	at org.codehaus.groovy.reflection.ClassInfo.getMetaClassUnderLock(ClassInfo.java:253)
	at org.codehaus.groovy.reflection.ClassInfo.getMetaClass(ClassInfo.java:285)
	at org.codehaus.groovy.reflection.ClassInfo.getMetaClass(ClassInfo.java:295)
	at org.codehaus.groovy.runtime.metaclass.MetaClassRegistryImpl.getMetaClass(MetaClassRegistryImpl.java:261)
	at org.codehaus.groovy.runtime.InvokerHelper.getMetaClass(InvokerHelper.java:873)
	at org.codehaus.groovy.runtime.InvokerHelper.invokePojoMethod(InvokerHelper.java:906)
	at org.codehaus.groovy.runtime.InvokerHelper.invokeMethod(InvokerHelper.java:898)
	at org.codehaus.groovy.runtime.typehandling.DefaultTypeTransformation.castToBoolean(DefaultTypeTransformation.java:185)
	at org.codehaus.groovy.runtime.typehandling.DefaultTypeTransformation.booleanUnbox(DefaultTypeTransformation.java:74)
	at org.codehaus.groovy.control.customizers.ASTTransformationCustomizer.findASTTranformationClass(ASTTransformationCustomizer.groovy:209)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:567)
	at org.codehaus.groovy.reflection.CachedMethod.invoke(CachedMethod.java:93)
	at org.codehaus.groovy.runtime.callsite.StaticMetaMethodSite$StaticMetaMethodSiteNoUnwrapNoCoerce.invoke(StaticMetaMethodSite.java:151)
	at org.codehaus.groovy.runtime.callsite.StaticMetaMethodSite.callStatic(StaticMetaMethodSite.java:102)
	at org.codehaus.groovy.runtime.callsite.CallSiteArray.defaultCallStatic(CallSiteArray.java:56)
	at org.codehaus.groovy.runtime.callsite.AbstractCallSite.callStatic(AbstractCallSite.java:194)
	at org.codehaus.groovy.runtime.callsite.AbstractCallSite.callStatic(AbstractCallSite.java:214)
	at org.codehaus.groovy.control.customizers.ASTTransformationCustomizer.findPhase(ASTTransformationCustomizer.groovy:226)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:567)
	at org.codehaus.groovy.reflection.CachedMethod.invoke(CachedMethod.java:93)
	at org.codehaus.groovy.runtime.callsite.StaticMetaMethodSite$StaticMetaMethodSiteNoUnwrapNoCoerce.invoke(StaticMetaMethodSite.java:151)
	at org.codehaus.groovy.runtime.callsite.StaticMetaMethodSite.callStatic(StaticMetaMethodSite.java:102)
	at org.codehaus.groovy.runtime.callsite.CallSiteArray.defaultCallStatic(CallSiteArray.java:56)
	at org.codehaus.groovy.runtime.callsite.AbstractCallSite.callStatic(AbstractCallSite.java:194)
	at org.codehaus.groovy.runtime.callsite.AbstractCallSite.callStatic(AbstractCallSite.java:214)
	at org.codehaus.groovy.control.customizers.ASTTransformationCustomizer.<init>(ASTTransformationCustomizer.groovy:180)
	at org.codehaus.groovy.control.customizers.ASTTransformationCustomizer.<init>(ASTTransformationCustomizer.groovy:188)
	at groovy.text.markup.MarkupTemplateEngine.<init>(MarkupTemplateEngine.java:94)
	at org.springframework.web.servlet.view.groovy.GroovyMarkupConfigurer.createTemplateEngine(GroovyMarkupConfigurer.java:160)
	at org.springframework.web.servlet.view.groovy.GroovyMarkupConfigurer.afterPropertiesSet(GroovyMarkupConfigurer.java:153)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1862)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1799)
	... 62 common frames omitted
2020-11-25 20:53:27,381 DEBUG  [main] BasicTypeRegistry: Adding type registration boolean -> org.hibernate.type.BooleanType@ff2266c
2020-11-25 20:53:27,394 DEBUG  [main] BasicTypeRegistry: Adding type registration boolean -> org.hibernate.type.BooleanType@ff2266c
2020-11-25 20:53:27,395 DEBUG  [main] BasicTypeRegistry: Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@ff2266c
2020-11-25 20:53:27,396 DEBUG  [main] BasicTypeRegistry: Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@1d585fb
2020-11-25 20:53:27,396 DEBUG  [main] BasicTypeRegistry: Adding type registration true_false -> org.hibernate.type.TrueFalseType@7c8f047a
2020-11-25 20:53:27,396 DEBUG  [main] BasicTypeRegistry: Adding type registration yes_no -> org.hibernate.type.YesNoType@d949bc4
2020-11-25 20:53:27,396 DEBUG  [main] BasicTypeRegistry: Adding type registration byte -> org.hibernate.type.ByteType@29c25bbc
2020-11-25 20:53:27,397 DEBUG  [main] BasicTypeRegistry: Adding type registration byte -> org.hibernate.type.ByteType@29c25bbc
2020-11-25 20:53:27,398 DEBUG  [main] BasicTypeRegistry: Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@29c25bbc
2020-11-25 20:53:27,398 DEBUG  [main] BasicTypeRegistry: Adding type registration character -> org.hibernate.type.CharacterType@403f7aa2
2020-11-25 20:53:27,398 DEBUG  [main] BasicTypeRegistry: Adding type registration char -> org.hibernate.type.CharacterType@403f7aa2
2020-11-25 20:53:27,398 DEBUG  [main] BasicTypeRegistry: Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@403f7aa2
2020-11-25 20:53:27,399 DEBUG  [main] BasicTypeRegistry: Adding type registration short -> org.hibernate.type.ShortType@38cb1606
2020-11-25 20:53:27,399 DEBUG  [main] BasicTypeRegistry: Adding type registration short -> org.hibernate.type.ShortType@38cb1606
2020-11-25 20:53:27,400 DEBUG  [main] BasicTypeRegistry: Adding type registration java.lang.Short -> org.hibernate.type.ShortType@38cb1606
2020-11-25 20:53:27,400 DEBUG  [main] BasicTypeRegistry: Adding type registration integer -> org.hibernate.type.IntegerType@5d3b6585
2020-11-25 20:53:27,401 DEBUG  [main] BasicTypeRegistry: Adding type registration int -> org.hibernate.type.IntegerType@5d3b6585
2020-11-25 20:53:27,402 DEBUG  [main] BasicTypeRegistry: Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@5d3b6585
2020-11-25 20:53:27,402 DEBUG  [main] BasicTypeRegistry: Adding type registration long -> org.hibernate.type.LongType@4fea5ee0
2020-11-25 20:53:27,405 DEBUG  [main] BasicTypeRegistry: Adding type registration long -> org.hibernate.type.LongType@4fea5ee0
2020-11-25 20:53:27,406 DEBUG  [main] BasicTypeRegistry: Adding type registration java.lang.Long -> org.hibernate.type.LongType@4fea5ee0
2020-11-25 20:53:27,407 DEBUG  [main] BasicTypeRegistry: Adding type registration float -> org.hibernate.type.FloatType@7b3085a3
2020-11-25 20:53:27,407 DEBUG  [main] BasicTypeRegistry: Adding type registration float -> org.hibernate.type.FloatType@7b3085a3
2020-11-25 20:53:27,407 DEBUG  [main] BasicTypeRegistry: Adding type registration java.lang.Float -> org.hibernate.type.FloatType@7b3085a3
2020-11-25 20:53:27,408 DEBUG  [main] BasicTypeRegistry: Adding type registration double -> org.hibernate.type.DoubleType@5a7a6d34
2020-11-25 20:53:27,411 DEBUG  [main] BasicTypeRegistry: Adding type registration double -> org.hibernate.type.DoubleType@5a7a6d34
2020-11-25 20:53:27,411 DEBUG  [main] BasicTypeRegistry: Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@5a7a6d34
2020-11-25 20:53:27,412 DEBUG  [main] BasicTypeRegistry: Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@5ae66c98
2020-11-25 20:53:27,412 DEBUG  [main] BasicTypeRegistry: Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@5ae66c98
2020-11-25 20:53:27,413 DEBUG  [main] BasicTypeRegistry: Adding type registration big_integer -> org.hibernate.type.BigIntegerType@223cbf0d
2020-11-25 20:53:27,414 DEBUG  [main] BasicTypeRegistry: Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@223cbf0d
2020-11-25 20:53:27,415 DEBUG  [main] BasicTypeRegistry: Adding type registration string -> org.hibernate.type.StringType@4f581211
2020-11-25 20:53:27,415 DEBUG  [main] BasicTypeRegistry: Adding type registration java.lang.String -> org.hibernate.type.StringType@4f581211
2020-11-25 20:53:27,416 DEBUG  [main] BasicTypeRegistry: Adding type registration nstring -> org.hibernate.type.StringNVarcharType@6697f3d
2020-11-25 20:53:27,416 DEBUG  [main] BasicTypeRegistry: Adding type registration ncharacter -> org.hibernate.type.CharacterNCharType@f1d1463
2020-11-25 20:53:27,417 DEBUG  [main] BasicTypeRegistry: Adding type registration url -> org.hibernate.type.UrlType@44ddb518
2020-11-25 20:53:27,420 DEBUG  [main] BasicTypeRegistry: Adding type registration java.net.URL -> org.hibernate.type.UrlType@44ddb518
2020-11-25 20:53:27,421 DEBUG  [main] BasicTypeRegistry: Adding type registration Duration -> org.hibernate.type.DurationType@49e0b123
2020-11-25 20:53:27,421 DEBUG  [main] BasicTypeRegistry: Adding type registration java.time.Duration -> org.hibernate.type.DurationType@49e0b123
2020-11-25 20:53:27,422 DEBUG  [main] BasicTypeRegistry: Adding type registration Instant -> org.hibernate.type.InstantType@40a28bda
2020-11-25 20:53:27,422 DEBUG  [main] BasicTypeRegistry: Adding type registration java.time.Instant -> org.hibernate.type.InstantType@40a28bda
2020-11-25 20:53:27,423 DEBUG  [main] BasicTypeRegistry: Adding type registration LocalDateTime -> org.hibernate.type.LocalDateTimeType@33430fc
2020-11-25 20:53:27,423 DEBUG  [main] BasicTypeRegistry: Adding type registration java.time.LocalDateTime -> org.hibernate.type.LocalDateTimeType@33430fc
2020-11-25 20:53:27,424 DEBUG  [main] BasicTypeRegistry: Adding type registration LocalDate -> org.hibernate.type.LocalDateType@d7055be
2020-11-25 20:53:27,424 DEBUG  [main] BasicTypeRegistry: Adding type registration java.time.LocalDate -> org.hibernate.type.LocalDateType@d7055be
2020-11-25 20:53:27,424 DEBUG  [main] BasicTypeRegistry: Adding type registration LocalTime -> org.hibernate.type.LocalTimeType@3c7d8a4
2020-11-25 20:53:27,425 DEBUG  [main] BasicTypeRegistry: Adding type registration java.time.LocalTime -> org.hibernate.type.LocalTimeType@3c7d8a4
2020-11-25 20:53:27,426 DEBUG  [main] BasicTypeRegistry: Adding type registration OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@7a117dc2
2020-11-25 20:53:27,426 DEBUG  [main] BasicTypeRegistry: Adding type registration java.time.OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@7a117dc2
2020-11-25 20:53:27,427 DEBUG  [main] BasicTypeRegistry: Adding type registration OffsetTime -> org.hibernate.type.OffsetTimeType@3c64339f
2020-11-25 20:53:27,428 DEBUG  [main] BasicTypeRegistry: Adding type registration java.time.OffsetTime -> org.hibernate.type.OffsetTimeType@3c64339f
2020-11-25 20:53:27,428 DEBUG  [main] BasicTypeRegistry: Adding type registration ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@30c8c6ab
2020-11-25 20:53:27,429 DEBUG  [main] BasicTypeRegistry: Adding type registration java.time.ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@30c8c6ab
2020-11-25 20:53:27,429 DEBUG  [main] BasicTypeRegistry: Adding type registration date -> org.hibernate.type.DateType@61c5fd78
2020-11-25 20:53:27,430 DEBUG  [main] BasicTypeRegistry: Adding type registration java.sql.Date -> org.hibernate.type.DateType@61c5fd78
2020-11-25 20:53:27,432 DEBUG  [main] BasicTypeRegistry: Adding type registration time -> org.hibernate.type.TimeType@77856cc5
2020-11-25 20:53:27,432 DEBUG  [main] BasicTypeRegistry: Adding type registration java.sql.Time -> org.hibernate.type.TimeType@77856cc5
2020-11-25 20:53:27,433 DEBUG  [main] BasicTypeRegistry: Adding type registration timestamp -> org.hibernate.type.TimestampType@12166229
2020-11-25 20:53:27,435 DEBUG  [main] BasicTypeRegistry: Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@12166229
2020-11-25 20:53:27,435 DEBUG  [main] BasicTypeRegistry: Adding type registration java.util.Date -> org.hibernate.type.TimestampType@12166229
2020-11-25 20:53:27,441 DEBUG  [main] BasicTypeRegistry: Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@2b4829aa
2020-11-25 20:53:27,445 DEBUG  [main] BasicTypeRegistry: Adding type registration calendar -> org.hibernate.type.CalendarType@3ec082a1
2020-11-25 20:53:27,446 DEBUG  [main] BasicTypeRegistry: Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@3ec082a1
2020-11-25 20:53:27,447 DEBUG  [main] BasicTypeRegistry: Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@3ec082a1
2020-11-25 20:53:27,448 DEBUG  [main] BasicTypeRegistry: Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@429f0ca8
2020-11-25 20:53:27,449 DEBUG  [main] BasicTypeRegistry: Adding type registration locale -> org.hibernate.type.LocaleType@11c3ce6a
2020-11-25 20:53:27,449 DEBUG  [main] BasicTypeRegistry: Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@11c3ce6a
2020-11-25 20:53:27,450 DEBUG  [main] BasicTypeRegistry: Adding type registration currency -> org.hibernate.type.CurrencyType@28519bfb
2020-11-25 20:53:27,451 DEBUG  [main] BasicTypeRegistry: Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@28519bfb
2020-11-25 20:53:27,452 DEBUG  [main] BasicTypeRegistry: Adding type registration timezone -> org.hibernate.type.TimeZoneType@7aa15a80
2020-11-25 20:53:27,453 DEBUG  [main] BasicTypeRegistry: Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@7aa15a80
2020-11-25 20:53:27,453 DEBUG  [main] BasicTypeRegistry: Adding type registration class -> org.hibernate.type.ClassType@48d5ca17
2020-11-25 20:53:27,453 DEBUG  [main] BasicTypeRegistry: Adding type registration java.lang.Class -> org.hibernate.type.ClassType@48d5ca17
2020-11-25 20:53:27,454 DEBUG  [main] BasicTypeRegistry: Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@79b8ecb
2020-11-25 20:53:27,455 DEBUG  [main] BasicTypeRegistry: Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@79b8ecb
2020-11-25 20:53:27,456 DEBUG  [main] BasicTypeRegistry: Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@c0013b8
2020-11-25 20:53:27,456 DEBUG  [main] BasicTypeRegistry: Adding type registration binary -> org.hibernate.type.BinaryType@2a42019a
2020-11-25 20:53:27,457 DEBUG  [main] BasicTypeRegistry: Adding type registration byte[] -> org.hibernate.type.BinaryType@2a42019a
2020-11-25 20:53:27,457 DEBUG  [main] BasicTypeRegistry: Adding type registration [B -> org.hibernate.type.BinaryType@2a42019a
2020-11-25 20:53:27,457 DEBUG  [main] BasicTypeRegistry: Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@495da9a7
2020-11-25 20:53:27,458 DEBUG  [main] BasicTypeRegistry: Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@495da9a7
2020-11-25 20:53:27,459 DEBUG  [main] BasicTypeRegistry: Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@495da9a7
2020-11-25 20:53:27,460 DEBUG  [main] BasicTypeRegistry: Adding type registration row_version -> org.hibernate.type.RowVersionType@35becbd4
2020-11-25 20:53:27,460 DEBUG  [main] BasicTypeRegistry: Adding type registration image -> org.hibernate.type.ImageType@30fa8a6b
2020-11-25 20:53:27,473 DEBUG  [main] BasicTypeRegistry: Adding type registration characters -> org.hibernate.type.CharArrayType@4c8d45cf
2020-11-25 20:53:27,474 DEBUG  [main] BasicTypeRegistry: Adding type registration char[] -> org.hibernate.type.CharArrayType@4c8d45cf
2020-11-25 20:53:27,475 DEBUG  [main] BasicTypeRegistry: Adding type registration [C -> org.hibernate.type.CharArrayType@4c8d45cf
2020-11-25 20:53:27,475 DEBUG  [main] BasicTypeRegistry: Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@5b490d5e
2020-11-25 20:53:27,475 DEBUG  [main] BasicTypeRegistry: Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@5b490d5e
2020-11-25 20:53:27,476 DEBUG  [main] BasicTypeRegistry: Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@5b490d5e
2020-11-25 20:53:27,476 DEBUG  [main] BasicTypeRegistry: Adding type registration text -> org.hibernate.type.TextType@18b04526
2020-11-25 20:53:27,477 DEBUG  [main] BasicTypeRegistry: Adding type registration ntext -> org.hibernate.type.NTextType@246df37b
2020-11-25 20:53:27,478 DEBUG  [main] BasicTypeRegistry: Adding type registration blob -> org.hibernate.type.BlobType@56881196
2020-11-25 20:53:27,478 DEBUG  [main] BasicTypeRegistry: Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@56881196
2020-11-25 20:53:27,478 DEBUG  [main] BasicTypeRegistry: Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@131c0b6f
2020-11-25 20:53:27,479 DEBUG  [main] BasicTypeRegistry: Adding type registration clob -> org.hibernate.type.ClobType@7fc1fd31
2020-11-25 20:53:27,479 DEBUG  [main] BasicTypeRegistry: Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@7fc1fd31
2020-11-25 20:53:27,479 DEBUG  [main] BasicTypeRegistry: Adding type registration nclob -> org.hibernate.type.NClobType@70777a65
2020-11-25 20:53:27,482 DEBUG  [main] BasicTypeRegistry: Adding type registration java.sql.NClob -> org.hibernate.type.NClobType@70777a65
2020-11-25 20:53:27,483 DEBUG  [main] BasicTypeRegistry: Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@2f6f4ac4
2020-11-25 20:53:27,483 DEBUG  [main] BasicTypeRegistry: Adding type registration materialized_nclob -> org.hibernate.type.MaterializedNClobType@7d685f4e
2020-11-25 20:53:27,484 DEBUG  [main] BasicTypeRegistry: Adding type registration serializable -> org.hibernate.type.SerializableType@319aa9ee
2020-11-25 20:53:27,484 DEBUG  [main] BasicTypeRegistry: Adding type registration object -> org.hibernate.type.ObjectType@54234569
2020-11-25 20:53:27,485 DEBUG  [main] BasicTypeRegistry: Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@54234569
2020-11-25 20:53:27,485 DEBUG  [main] BasicTypeRegistry: Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@54351197
2020-11-25 20:53:27,485 DEBUG  [main] BasicTypeRegistry: Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@144fc5fa
2020-11-25 20:53:27,485 DEBUG  [main] BasicTypeRegistry: Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@5472c27a
2020-11-25 20:53:27,489 DEBUG  [main] BasicTypeRegistry: Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@555b3ec9
2020-11-25 20:53:27,489 DEBUG  [main] BasicTypeRegistry: Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@299e245c
2020-11-25 20:53:27,489 DEBUG  [main] BasicTypeRegistry: Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@43945480
2020-11-25 20:53:27,490 DEBUG  [main] BasicTypeRegistry: Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@1b72f9a
2020-11-25 20:53:27,490 DEBUG  [main] BasicTypeRegistry: Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@d96f413
2020-11-25 20:53:27,504 DEBUG  [main] TypeConfiguration$Scope: Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@7fec6c2f] to MetadataBuildingContext [org.hibernate.boot.internal.MetadataBuildingContextRootImpl@67e12e28]
2020-11-25 20:53:27,516 DEBUG  [main] EnumType: Using NAMED-based conversion for Enum com.sf.back.entities.Kind
2020-11-25 20:53:27,539 DEBUG  [main] EnumType: Using NAMED-based conversion for Enum com.sf.back.entities.Kind
2020-11-25 20:53:27,565 DEBUG  [main] TypeConfiguration$Scope: Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@7fec6c2f] to SessionFactoryImpl [org.hibernate.internal.SessionFactoryImpl@52d68eb9]
2020-11-25 20:53:27,567 DEBUG  [main] EnumType: Using NAMED-based conversion for Enum com.sf.back.entities.Kind
2020-11-25 20:53:27,567 DEBUG  [main] EnumType: Using NAMED-based conversion for Enum com.sf.back.entities.Kind
2020-11-25 20:53:27,649 DEBUG  [main] EnumType: Using NAMED-based conversion for Enum com.sf.back.entities.Kind
2020-11-25 20:53:27,649 DEBUG  [main] EnumType: Using NAMED-based conversion for Enum com.sf.back.entities.Kind
2020-11-25 20:53:27,701 DEBUG  [main] EnumType: Using NAMED-based conversion for Enum com.sf.back.entities.Kind
2020-11-25 20:53:27,702 DEBUG  [main] EnumType: Using NAMED-based conversion for Enum com.sf.back.entities.Kind
2020-11-25 20:53:27,707 DEBUG  [main] EnumType: Using NAMED-based conversion for Enum com.sf.back.entities.Kind
2020-11-25 20:53:27,742 TRACE  [main] TypeConfiguration$Scope: Handling #sessionFactoryCreated from [org.hibernate.internal.SessionFactoryImpl@52d68eb9] for TypeConfiguration
2020-11-25 20:53:28,001 WARN   [main] JpaBaseConfiguration$JpaWebConfiguration: spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2020-11-25 20:53:28,484 WARN   [main] GenericWebApplicationContext: Exception encountered during context initialization - cancelling refresh attempt: org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'groovyMarkupConfigurer' defined in class path resource [org/springframework/boot/autoconfigure/groovy/template/GroovyTemplateAutoConfiguration$GroovyMarkupConfiguration.class]: Invocation of init method failed; nested exception is java.lang.reflect.InaccessibleObjectException: Unable to make jdk.internal.loader.ClassLoaders$AppClassLoader(jdk.internal.loader.ClassLoaders$PlatformClassLoader,jdk.internal.loader.URLClassPath) accessible: module java.base does not "opens jdk.internal.loader" to unnamed module @60fa3495
2020-11-25 20:53:28,497 TRACE  [main] TypeConfiguration$Scope: Handling #sessionFactoryClosed from [org.hibernate.internal.SessionFactoryImpl@52d68eb9] for TypeConfiguration
2020-11-25 20:53:28,498 DEBUG  [main] TypeConfiguration$Scope: Un-scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration$Scope@7a8d6eb3] from SessionFactory [org.hibernate.internal.SessionFactoryImpl@52d68eb9]
2020-11-25 20:53:28,576 ERROR  [main] SpringApplication: Application run failed
org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'groovyMarkupConfigurer' defined in class path resource [org/springframework/boot/autoconfigure/groovy/template/GroovyTemplateAutoConfiguration$GroovyMarkupConfiguration.class]: Invocation of init method failed; nested exception is java.lang.reflect.InaccessibleObjectException: Unable to make jdk.internal.loader.ClassLoaders$AppClassLoader(jdk.internal.loader.ClassLoaders$PlatformClassLoader,jdk.internal.loader.URLClassPath) accessible: module java.base does not "opens jdk.internal.loader" to unnamed module @60fa3495
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1803)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:595)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:517)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:323)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:222)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:321)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:202)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(DefaultListableBeanFactory.java:879)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:878)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:550)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:747)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:397)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:315)
	at org.springframework.boot.test.context.SpringBootContextLoader.loadContext(SpringBootContextLoader.java:125)
	at org.springframework.test.context.cache.DefaultCacheAwareContextLoaderDelegate.loadContextInternal(DefaultCacheAwareContextLoaderDelegate.java:99)
	at org.springframework.test.context.cache.DefaultCacheAwareContextLoaderDelegate.loadContext(DefaultCacheAwareContextLoaderDelegate.java:124)
	at org.springframework.test.context.support.DefaultTestContext.getApplicationContext(DefaultTestContext.java:123)
	at org.springframework.test.context.web.ServletTestExecutionListener.setUpRequestContextIfNecessary(ServletTestExecutionListener.java:190)
	at org.springframework.test.context.web.ServletTestExecutionListener.prepareTestInstance(ServletTestExecutionListener.java:132)
	at org.springframework.test.context.TestContextManager.prepareTestInstance(TestContextManager.java:244)
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner.createTest(SpringJUnit4ClassRunner.java:227)
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner$1.runReflectiveCall(SpringJUnit4ClassRunner.java:289)
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner.methodBlock(SpringJUnit4ClassRunner.java:291)
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner.runChild(SpringJUnit4ClassRunner.java:246)
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner.runChild(SpringJUnit4ClassRunner.java:97)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:290)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:71)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:58)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268)
	at org.junit.internal.runners.statements.RunBefores.evaluate(RunBefores.java:26)
	at org.springframework.test.context.junit4.statements.RunBeforeTestClassCallbacks.evaluate(RunBeforeTestClassCallbacks.java:61)
	at org.junit.internal.runners.statements.RunAfters.evaluate(RunAfters.java:27)
	at org.springframework.test.context.junit4.statements.RunAfterTestClassCallbacks.evaluate(RunAfterTestClassCallbacks.java:70)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:363)
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner.run(SpringJUnit4ClassRunner.java:190)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:137)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:115)
	at org.junit.vintage.engine.execution.RunnerExecutor.execute(RunnerExecutor.java:40)
	at java.base/java.util.stream.ForEachOps$ForEachOp$OfRef.accept(ForEachOps.java:183)
	at java.base/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:195)
	at java.base/java.util.Iterator.forEachRemaining(Iterator.java:133)
	at java.base/java.util.Spliterators$IteratorSpliterator.forEachRemaining(Spliterators.java:1801)
	at java.base/java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:484)
	at java.base/java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:474)
	at java.base/java.util.stream.ForEachOps$ForEachOp.evaluateSequential(ForEachOps.java:150)
	at java.base/java.util.stream.ForEachOps$ForEachOp$OfRef.evaluateSequential(ForEachOps.java:173)
	at java.base/java.util.stream.AbstractPipeline.evaluate(AbstractPipeline.java:234)
	at java.base/java.util.stream.ReferencePipeline.forEach(ReferencePipeline.java:497)
	at org.junit.vintage.engine.VintageTestEngine.executeAllChildren(VintageTestEngine.java:80)
	at org.junit.vintage.engine.VintageTestEngine.execute(VintageTestEngine.java:71)
	at org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:220)
	at org.junit.platform.launcher.core.DefaultLauncher.lambda$execute$6(DefaultLauncher.java:188)
	at org.junit.platform.launcher.core.DefaultLauncher.withInterceptedStreams(DefaultLauncher.java:202)
	at org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:181)
	at org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:128)
	at org.apache.maven.surefire.junitplatform.JUnitPlatformProvider.invokeAllTests(JUnitPlatformProvider.java:150)
	at org.apache.maven.surefire.junitplatform.JUnitPlatformProvider.invoke(JUnitPlatformProvider.java:124)
	at org.apache.maven.surefire.booter.ForkedBooter.invokeProviderInSameClassLoader(ForkedBooter.java:384)
	at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:345)
	at org.apache.maven.surefire.booter.ForkedBooter.execute(ForkedBooter.java:126)
	at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:418)
Caused by: java.lang.reflect.InaccessibleObjectException: Unable to make jdk.internal.loader.ClassLoaders$AppClassLoader(jdk.internal.loader.ClassLoaders$PlatformClassLoader,jdk.internal.loader.URLClassPath) accessible: module java.base does not "opens jdk.internal.loader" to unnamed module @60fa3495
	at java.base/java.lang.reflect.AccessibleObject.checkCanSetAccessible(AccessibleObject.java:344)
	at java.base/java.lang.reflect.AccessibleObject.checkCanSetAccessible(AccessibleObject.java:284)
	at java.base/java.lang.reflect.Constructor.checkCanSetAccessible(Constructor.java:189)
	at java.base/java.lang.reflect.Constructor.setAccessible(Constructor.java:182)
	at org.codehaus.groovy.reflection.CachedConstructor$1.run(CachedConstructor.java:44)
	at java.base/java.security.AccessController.doPrivileged(AccessController.java:312)
	at org.codehaus.groovy.reflection.CachedConstructor.<init>(CachedConstructor.java:42)
	at org.codehaus.groovy.reflection.CachedClass$2.initValue(CachedClass.java:79)
	at org.codehaus.groovy.reflection.CachedClass$2.initValue(CachedClass.java:69)
	at org.codehaus.groovy.util.LazyReference.getLocked(LazyReference.java:49)
	at org.codehaus.groovy.util.LazyReference.get(LazyReference.java:36)
	at org.codehaus.groovy.reflection.CachedClass.getConstructors(CachedClass.java:268)
	at groovy.lang.MetaClassImpl.<init>(MetaClassImpl.java:218)
	at groovy.lang.MetaClassImpl.<init>(MetaClassImpl.java:228)
	at groovy.lang.MetaClassRegistry$MetaClassCreationHandle.createNormalMetaClass(MetaClassRegistry.java:171)
	at groovy.lang.MetaClassRegistry$MetaClassCreationHandle.createWithCustomLookup(MetaClassRegistry.java:161)
	at groovy.lang.MetaClassRegistry$MetaClassCreationHandle.create(MetaClassRegistry.java:144)
	at org.codehaus.groovy.reflection.ClassInfo.getMetaClassUnderLock(ClassInfo.java:253)
	at org.codehaus.groovy.reflection.ClassInfo.getMetaClass(ClassInfo.java:285)
	at org.codehaus.groovy.reflection.ClassInfo.getMetaClass(ClassInfo.java:295)
	at org.codehaus.groovy.runtime.metaclass.MetaClassRegistryImpl.getMetaClass(MetaClassRegistryImpl.java:261)
	at org.codehaus.groovy.runtime.InvokerHelper.getMetaClass(InvokerHelper.java:873)
	at org.codehaus.groovy.runtime.InvokerHelper.invokePojoMethod(InvokerHelper.java:906)
	at org.codehaus.groovy.runtime.InvokerHelper.invokeMethod(InvokerHelper.java:898)
	at org.codehaus.groovy.runtime.typehandling.DefaultTypeTransformation.castToBoolean(DefaultTypeTransformation.java:185)
	at org.codehaus.groovy.runtime.typehandling.DefaultTypeTransformation.booleanUnbox(DefaultTypeTransformation.java:74)
	at org.codehaus.groovy.control.customizers.ASTTransformationCustomizer.findASTTranformationClass(ASTTransformationCustomizer.groovy:209)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:567)
	at org.codehaus.groovy.reflection.CachedMethod.invoke(CachedMethod.java:93)
	at org.codehaus.groovy.runtime.callsite.StaticMetaMethodSite$StaticMetaMethodSiteNoUnwrapNoCoerce.invoke(StaticMetaMethodSite.java:151)
	at org.codehaus.groovy.runtime.callsite.StaticMetaMethodSite.callStatic(StaticMetaMethodSite.java:102)
	at org.codehaus.groovy.runtime.callsite.AbstractCallSite.callStatic(AbstractCallSite.java:214)
	at org.codehaus.groovy.control.customizers.ASTTransformationCustomizer.findPhase(ASTTransformationCustomizer.groovy:226)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:567)
	at org.codehaus.groovy.reflection.CachedMethod.invoke(CachedMethod.java:93)
	at org.codehaus.groovy.runtime.callsite.StaticMetaMethodSite$StaticMetaMethodSiteNoUnwrapNoCoerce.invoke(StaticMetaMethodSite.java:151)
	at org.codehaus.groovy.runtime.callsite.StaticMetaMethodSite.callStatic(StaticMetaMethodSite.java:102)
	at org.codehaus.groovy.runtime.callsite.AbstractCallSite.callStatic(AbstractCallSite.java:214)
	at org.codehaus.groovy.control.customizers.ASTTransformationCustomizer.<init>(ASTTransformationCustomizer.groovy:180)
	at org.codehaus.groovy.control.customizers.ASTTransformationCustomizer.<init>(ASTTransformationCustomizer.groovy:188)
	at groovy.text.markup.MarkupTemplateEngine.<init>(MarkupTemplateEngine.java:94)
	at org.springframework.web.servlet.view.groovy.GroovyMarkupConfigurer.createTemplateEngine(GroovyMarkupConfigurer.java:160)
	at org.springframework.web.servlet.view.groovy.GroovyMarkupConfigurer.afterPropertiesSet(GroovyMarkupConfigurer.java:153)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1862)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1799)
	... 62 common frames omitted
2020-11-25 20:53:28,577 ERROR  [main] TestContextManager: Caught exception while allowing TestExecutionListener [org.springframework.test.context.web.ServletTestExecutionListener@170b27a7] to prepare test instance [com.sf.math.algebra.solvers.PolynomialSolverIntervalTest@cc4a0dd]
java.lang.IllegalStateException: Failed to load ApplicationContext
	at org.springframework.test.context.cache.DefaultCacheAwareContextLoaderDelegate.loadContext(DefaultCacheAwareContextLoaderDelegate.java:132)
	at org.springframework.test.context.support.DefaultTestContext.getApplicationContext(DefaultTestContext.java:123)
	at org.springframework.test.context.web.ServletTestExecutionListener.setUpRequestContextIfNecessary(ServletTestExecutionListener.java:190)
	at org.springframework.test.context.web.ServletTestExecutionListener.prepareTestInstance(ServletTestExecutionListener.java:132)
	at org.springframework.test.context.TestContextManager.prepareTestInstance(TestContextManager.java:244)
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner.createTest(SpringJUnit4ClassRunner.java:227)
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner$1.runReflectiveCall(SpringJUnit4ClassRunner.java:289)
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner.methodBlock(SpringJUnit4ClassRunner.java:291)
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner.runChild(SpringJUnit4ClassRunner.java:246)
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner.runChild(SpringJUnit4ClassRunner.java:97)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:290)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:71)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:58)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268)
	at org.junit.internal.runners.statements.RunBefores.evaluate(RunBefores.java:26)
	at org.springframework.test.context.junit4.statements.RunBeforeTestClassCallbacks.evaluate(RunBeforeTestClassCallbacks.java:61)
	at org.junit.internal.runners.statements.RunAfters.evaluate(RunAfters.java:27)
	at org.springframework.test.context.junit4.statements.RunAfterTestClassCallbacks.evaluate(RunAfterTestClassCallbacks.java:70)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:363)
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner.run(SpringJUnit4ClassRunner.java:190)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:137)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:115)
	at org.junit.vintage.engine.execution.RunnerExecutor.execute(RunnerExecutor.java:40)
	at java.base/java.util.stream.ForEachOps$ForEachOp$OfRef.accept(ForEachOps.java:183)
	at java.base/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:195)
	at java.base/java.util.Iterator.forEachRemaining(Iterator.java:133)
	at java.base/java.util.Spliterators$IteratorSpliterator.forEachRemaining(Spliterators.java:1801)
	at java.base/java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:484)
	at java.base/java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:474)
	at java.base/java.util.stream.ForEachOps$ForEachOp.evaluateSequential(ForEachOps.java:150)
	at java.base/java.util.stream.ForEachOps$ForEachOp$OfRef.evaluateSequential(ForEachOps.java:173)
	at java.base/java.util.stream.AbstractPipeline.evaluate(AbstractPipeline.java:234)
	at java.base/java.util.stream.ReferencePipeline.forEach(ReferencePipeline.java:497)
	at org.junit.vintage.engine.VintageTestEngine.executeAllChildren(VintageTestEngine.java:80)
	at org.junit.vintage.engine.VintageTestEngine.execute(VintageTestEngine.java:71)
	at org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:220)
	at org.junit.platform.launcher.core.DefaultLauncher.lambda$execute$6(DefaultLauncher.java:188)
	at org.junit.platform.launcher.core.DefaultLauncher.withInterceptedStreams(DefaultLauncher.java:202)
	at org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:181)
	at org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:128)
	at org.apache.maven.surefire.junitplatform.JUnitPlatformProvider.invokeAllTests(JUnitPlatformProvider.java:150)
	at org.apache.maven.surefire.junitplatform.JUnitPlatformProvider.invoke(JUnitPlatformProvider.java:124)
	at org.apache.maven.surefire.booter.ForkedBooter.invokeProviderInSameClassLoader(ForkedBooter.java:384)
	at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:345)
	at org.apache.maven.surefire.booter.ForkedBooter.execute(ForkedBooter.java:126)
	at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:418)
Caused by: org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'groovyMarkupConfigurer' defined in class path resource [org/springframework/boot/autoconfigure/groovy/template/GroovyTemplateAutoConfiguration$GroovyMarkupConfiguration.class]: Invocation of init method failed; nested exception is java.lang.reflect.InaccessibleObjectException: Unable to make jdk.internal.loader.ClassLoaders$AppClassLoader(jdk.internal.loader.ClassLoaders$PlatformClassLoader,jdk.internal.loader.URLClassPath) accessible: module java.base does not "opens jdk.internal.loader" to unnamed module @60fa3495
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1803)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:595)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:517)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:323)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:222)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:321)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:202)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(DefaultListableBeanFactory.java:879)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:878)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:550)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:747)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:397)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:315)
	at org.springframework.boot.test.context.SpringBootContextLoader.loadContext(SpringBootContextLoader.java:125)
	at org.springframework.test.context.cache.DefaultCacheAwareContextLoaderDelegate.loadContextInternal(DefaultCacheAwareContextLoaderDelegate.java:99)
	at org.springframework.test.context.cache.DefaultCacheAwareContextLoaderDelegate.loadContext(DefaultCacheAwareContextLoaderDelegate.java:124)
	... 47 common frames omitted
Caused by: java.lang.reflect.InaccessibleObjectException: Unable to make jdk.internal.loader.ClassLoaders$AppClassLoader(jdk.internal.loader.ClassLoaders$PlatformClassLoader,jdk.internal.loader.URLClassPath) accessible: module java.base does not "opens jdk.internal.loader" to unnamed module @60fa3495
	at java.base/java.lang.reflect.AccessibleObject.checkCanSetAccessible(AccessibleObject.java:344)
	at java.base/java.lang.reflect.AccessibleObject.checkCanSetAccessible(AccessibleObject.java:284)
	at java.base/java.lang.reflect.Constructor.checkCanSetAccessible(Constructor.java:189)
	at java.base/java.lang.reflect.Constructor.setAccessible(Constructor.java:182)
	at org.codehaus.groovy.reflection.CachedConstructor$1.run(CachedConstructor.java:44)
	at java.base/java.security.AccessController.doPrivileged(AccessController.java:312)
	at org.codehaus.groovy.reflection.CachedConstructor.<init>(CachedConstructor.java:42)
	at org.codehaus.groovy.reflection.CachedClass$2.initValue(CachedClass.java:79)
	at org.codehaus.groovy.reflection.CachedClass$2.initValue(CachedClass.java:69)
	at org.codehaus.groovy.util.LazyReference.getLocked(LazyReference.java:49)
	at org.codehaus.groovy.util.LazyReference.get(LazyReference.java:36)
	at org.codehaus.groovy.reflection.CachedClass.getConstructors(CachedClass.java:268)
	at groovy.lang.MetaClassImpl.<init>(MetaClassImpl.java:218)
	at groovy.lang.MetaClassImpl.<init>(MetaClassImpl.java:228)
	at groovy.lang.MetaClassRegistry$MetaClassCreationHandle.createNormalMetaClass(MetaClassRegistry.java:171)
	at groovy.lang.MetaClassRegistry$MetaClassCreationHandle.createWithCustomLookup(MetaClassRegistry.java:161)
	at groovy.lang.MetaClassRegistry$MetaClassCreationHandle.create(MetaClassRegistry.java:144)
	at org.codehaus.groovy.reflection.ClassInfo.getMetaClassUnderLock(ClassInfo.java:253)
	at org.codehaus.groovy.reflection.ClassInfo.getMetaClass(ClassInfo.java:285)
	at org.codehaus.groovy.reflection.ClassInfo.getMetaClass(ClassInfo.java:295)
	at org.codehaus.groovy.runtime.metaclass.MetaClassRegistryImpl.getMetaClass(MetaClassRegistryImpl.java:261)
	at org.codehaus.groovy.runtime.InvokerHelper.getMetaClass(InvokerHelper.java:873)
	at org.codehaus.groovy.runtime.InvokerHelper.invokePojoMethod(InvokerHelper.java:906)
	at org.codehaus.groovy.runtime.InvokerHelper.invokeMethod(InvokerHelper.java:898)
	at org.codehaus.groovy.runtime.typehandling.DefaultTypeTransformation.castToBoolean(DefaultTypeTransformation.java:185)
	at org.codehaus.groovy.runtime.typehandling.DefaultTypeTransformation.booleanUnbox(DefaultTypeTransformation.java:74)
	at org.codehaus.groovy.control.customizers.ASTTransformationCustomizer.findASTTranformationClass(ASTTransformationCustomizer.groovy:209)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:567)
	at org.codehaus.groovy.reflection.CachedMethod.invoke(CachedMethod.java:93)
	at org.codehaus.groovy.runtime.callsite.StaticMetaMethodSite$StaticMetaMethodSiteNoUnwrapNoCoerce.invoke(StaticMetaMethodSite.java:151)
	at org.codehaus.groovy.runtime.callsite.StaticMetaMethodSite.callStatic(StaticMetaMethodSite.java:102)
	at org.codehaus.groovy.runtime.callsite.AbstractCallSite.callStatic(AbstractCallSite.java:214)
	at org.codehaus.groovy.control.customizers.ASTTransformationCustomizer.findPhase(ASTTransformationCustomizer.groovy:226)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:567)
	at org.codehaus.groovy.reflection.CachedMethod.invoke(CachedMethod.java:93)
	at org.codehaus.groovy.runtime.callsite.StaticMetaMethodSite$StaticMetaMethodSiteNoUnwrapNoCoerce.invoke(StaticMetaMethodSite.java:151)
	at org.codehaus.groovy.runtime.callsite.StaticMetaMethodSite.callStatic(StaticMetaMethodSite.java:102)
	at org.codehaus.groovy.runtime.callsite.AbstractCallSite.callStatic(AbstractCallSite.java:214)
	at org.codehaus.groovy.control.customizers.ASTTransformationCustomizer.<init>(ASTTransformationCustomizer.groovy:180)
	at org.codehaus.groovy.control.customizers.ASTTransformationCustomizer.<init>(ASTTransformationCustomizer.groovy:188)
	at groovy.text.markup.MarkupTemplateEngine.<init>(MarkupTemplateEngine.java:94)
	at org.springframework.web.servlet.view.groovy.GroovyMarkupConfigurer.createTemplateEngine(GroovyMarkupConfigurer.java:160)
	at org.springframework.web.servlet.view.groovy.GroovyMarkupConfigurer.afterPropertiesSet(GroovyMarkupConfigurer.java:153)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1862)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1799)
	... 62 common frames omitted
2020-11-25 20:53:29,836 DEBUG  [main] BasicTypeRegistry: Adding type registration boolean -> org.hibernate.type.BooleanType@ff2266c
2020-11-25 20:53:29,844 DEBUG  [main] BasicTypeRegistry: Adding type registration boolean -> org.hibernate.type.BooleanType@ff2266c
2020-11-25 20:53:29,845 DEBUG  [main] BasicTypeRegistry: Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@ff2266c
2020-11-25 20:53:29,846 DEBUG  [main] BasicTypeRegistry: Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@1d585fb
2020-11-25 20:53:29,846 DEBUG  [main] BasicTypeRegistry: Adding type registration true_false -> org.hibernate.type.TrueFalseType@7c8f047a
2020-11-25 20:53:29,847 DEBUG  [main] BasicTypeRegistry: Adding type registration yes_no -> org.hibernate.type.YesNoType@d949bc4
2020-11-25 20:53:29,848 DEBUG  [main] BasicTypeRegistry: Adding type registration byte -> org.hibernate.type.ByteType@29c25bbc
2020-11-25 20:53:29,848 DEBUG  [main] BasicTypeRegistry: Adding type registration byte -> org.hibernate.type.ByteType@29c25bbc
2020-11-25 20:53:29,849 DEBUG  [main] BasicTypeRegistry: Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@29c25bbc
2020-11-25 20:53:29,849 DEBUG  [main] BasicTypeRegistry: Adding type registration character -> org.hibernate.type.CharacterType@403f7aa2
2020-11-25 20:53:29,850 DEBUG  [main] BasicTypeRegistry: Adding type registration char -> org.hibernate.type.CharacterType@403f7aa2
2020-11-25 20:53:29,850 DEBUG  [main] BasicTypeRegistry: Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@403f7aa2
2020-11-25 20:53:29,851 DEBUG  [main] BasicTypeRegistry: Adding type registration short -> org.hibernate.type.ShortType@38cb1606
2020-11-25 20:53:29,851 DEBUG  [main] BasicTypeRegistry: Adding type registration short -> org.hibernate.type.ShortType@38cb1606
2020-11-25 20:53:29,851 DEBUG  [main] BasicTypeRegistry: Adding type registration java.lang.Short -> org.hibernate.type.ShortType@38cb1606
2020-11-25 20:53:29,852 DEBUG  [main] BasicTypeRegistry: Adding type registration integer -> org.hibernate.type.IntegerType@5d3b6585
2020-11-25 20:53:29,852 DEBUG  [main] BasicTypeRegistry: Adding type registration int -> org.hibernate.type.IntegerType@5d3b6585
2020-11-25 20:53:29,853 DEBUG  [main] BasicTypeRegistry: Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@5d3b6585
2020-11-25 20:53:29,853 DEBUG  [main] BasicTypeRegistry: Adding type registration long -> org.hibernate.type.LongType@4fea5ee0
2020-11-25 20:53:29,853 DEBUG  [main] BasicTypeRegistry: Adding type registration long -> org.hibernate.type.LongType@4fea5ee0
2020-11-25 20:53:29,854 DEBUG  [main] BasicTypeRegistry: Adding type registration java.lang.Long -> org.hibernate.type.LongType@4fea5ee0
2020-11-25 20:53:29,854 DEBUG  [main] BasicTypeRegistry: Adding type registration float -> org.hibernate.type.FloatType@7b3085a3
2020-11-25 20:53:29,856 DEBUG  [main] BasicTypeRegistry: Adding type registration float -> org.hibernate.type.FloatType@7b3085a3
2020-11-25 20:53:29,856 DEBUG  [main] BasicTypeRegistry: Adding type registration java.lang.Float -> org.hibernate.type.FloatType@7b3085a3
2020-11-25 20:53:29,857 DEBUG  [main] BasicTypeRegistry: Adding type registration double -> org.hibernate.type.DoubleType@5a7a6d34
2020-11-25 20:53:29,857 DEBUG  [main] BasicTypeRegistry: Adding type registration double -> org.hibernate.type.DoubleType@5a7a6d34
2020-11-25 20:53:29,858 DEBUG  [main] BasicTypeRegistry: Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@5a7a6d34
2020-11-25 20:53:29,858 DEBUG  [main] BasicTypeRegistry: Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@5ae66c98
2020-11-25 20:53:29,858 DEBUG  [main] BasicTypeRegistry: Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@5ae66c98
2020-11-25 20:53:29,859 DEBUG  [main] BasicTypeRegistry: Adding type registration big_integer -> org.hibernate.type.BigIntegerType@223cbf0d
2020-11-25 20:53:29,859 DEBUG  [main] BasicTypeRegistry: Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@223cbf0d
2020-11-25 20:53:29,859 DEBUG  [main] BasicTypeRegistry: Adding type registration string -> org.hibernate.type.StringType@4f581211
2020-11-25 20:53:29,859 DEBUG  [main] BasicTypeRegistry: Adding type registration java.lang.String -> org.hibernate.type.StringType@4f581211
2020-11-25 20:53:29,859 DEBUG  [main] BasicTypeRegistry: Adding type registration nstring -> org.hibernate.type.StringNVarcharType@6697f3d
2020-11-25 20:53:29,859 DEBUG  [main] BasicTypeRegistry: Adding type registration ncharacter -> org.hibernate.type.CharacterNCharType@f1d1463
2020-11-25 20:53:29,860 DEBUG  [main] BasicTypeRegistry: Adding type registration url -> org.hibernate.type.UrlType@44ddb518
2020-11-25 20:53:29,860 DEBUG  [main] BasicTypeRegistry: Adding type registration java.net.URL -> org.hibernate.type.UrlType@44ddb518
2020-11-25 20:53:29,860 DEBUG  [main] BasicTypeRegistry: Adding type registration Duration -> org.hibernate.type.DurationType@49e0b123
2020-11-25 20:53:29,860 DEBUG  [main] BasicTypeRegistry: Adding type registration java.time.Duration -> org.hibernate.type.DurationType@49e0b123
2020-11-25 20:53:29,860 DEBUG  [main] BasicTypeRegistry: Adding type registration Instant -> org.hibernate.type.InstantType@40a28bda
2020-11-25 20:53:29,861 DEBUG  [main] BasicTypeRegistry: Adding type registration java.time.Instant -> org.hibernate.type.InstantType@40a28bda
2020-11-25 20:53:29,861 DEBUG  [main] BasicTypeRegistry: Adding type registration LocalDateTime -> org.hibernate.type.LocalDateTimeType@33430fc
2020-11-25 20:53:29,861 DEBUG  [main] BasicTypeRegistry: Adding type registration java.time.LocalDateTime -> org.hibernate.type.LocalDateTimeType@33430fc
2020-11-25 20:53:29,861 DEBUG  [main] BasicTypeRegistry: Adding type registration LocalDate -> org.hibernate.type.LocalDateType@d7055be
2020-11-25 20:53:29,867 DEBUG  [main] BasicTypeRegistry: Adding type registration java.time.LocalDate -> org.hibernate.type.LocalDateType@d7055be
2020-11-25 20:53:29,868 DEBUG  [main] BasicTypeRegistry: Adding type registration LocalTime -> org.hibernate.type.LocalTimeType@3c7d8a4
2020-11-25 20:53:29,869 DEBUG  [main] BasicTypeRegistry: Adding type registration java.time.LocalTime -> org.hibernate.type.LocalTimeType@3c7d8a4
2020-11-25 20:53:29,870 DEBUG  [main] BasicTypeRegistry: Adding type registration OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@7a117dc2
2020-11-25 20:53:29,870 DEBUG  [main] BasicTypeRegistry: Adding type registration java.time.OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@7a117dc2
2020-11-25 20:53:29,871 DEBUG  [main] BasicTypeRegistry: Adding type registration OffsetTime -> org.hibernate.type.OffsetTimeType@3c64339f
2020-11-25 20:53:29,873 DEBUG  [main] BasicTypeRegistry: Adding type registration java.time.OffsetTime -> org.hibernate.type.OffsetTimeType@3c64339f
2020-11-25 20:53:29,873 DEBUG  [main] BasicTypeRegistry: Adding type registration ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@30c8c6ab
2020-11-25 20:53:29,874 DEBUG  [main] BasicTypeRegistry: Adding type registration java.time.ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@30c8c6ab
2020-11-25 20:53:29,874 DEBUG  [main] BasicTypeRegistry: Adding type registration date -> org.hibernate.type.DateType@61c5fd78
2020-11-25 20:53:29,875 DEBUG  [main] BasicTypeRegistry: Adding type registration java.sql.Date -> org.hibernate.type.DateType@61c5fd78
2020-11-25 20:53:29,875 DEBUG  [main] BasicTypeRegistry: Adding type registration time -> org.hibernate.type.TimeType@77856cc5
2020-11-25 20:53:29,876 DEBUG  [main] BasicTypeRegistry: Adding type registration java.sql.Time -> org.hibernate.type.TimeType@77856cc5
2020-11-25 20:53:29,876 DEBUG  [main] BasicTypeRegistry: Adding type registration timestamp -> org.hibernate.type.TimestampType@12166229
2020-11-25 20:53:29,877 DEBUG  [main] BasicTypeRegistry: Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@12166229
2020-11-25 20:53:29,877 DEBUG  [main] BasicTypeRegistry: Adding type registration java.util.Date -> org.hibernate.type.TimestampType@12166229
2020-11-25 20:53:29,878 DEBUG  [main] BasicTypeRegistry: Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@2b4829aa
2020-11-25 20:53:29,883 DEBUG  [main] BasicTypeRegistry: Adding type registration calendar -> org.hibernate.type.CalendarType@3ec082a1
2020-11-25 20:53:29,884 DEBUG  [main] BasicTypeRegistry: Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@3ec082a1
2020-11-25 20:53:29,886 DEBUG  [main] BasicTypeRegistry: Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@3ec082a1
2020-11-25 20:53:29,887 DEBUG  [main] BasicTypeRegistry: Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@429f0ca8
2020-11-25 20:53:29,887 DEBUG  [main] BasicTypeRegistry: Adding type registration locale -> org.hibernate.type.LocaleType@11c3ce6a
2020-11-25 20:53:29,887 DEBUG  [main] BasicTypeRegistry: Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@11c3ce6a
2020-11-25 20:53:29,888 DEBUG  [main] BasicTypeRegistry: Adding type registration currency -> org.hibernate.type.CurrencyType@28519bfb
2020-11-25 20:53:29,888 DEBUG  [main] BasicTypeRegistry: Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@28519bfb
2020-11-25 20:53:29,889 DEBUG  [main] BasicTypeRegistry: Adding type registration timezone -> org.hibernate.type.TimeZoneType@7aa15a80
2020-11-25 20:53:29,890 DEBUG  [main] BasicTypeRegistry: Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@7aa15a80
2020-11-25 20:53:29,890 DEBUG  [main] BasicTypeRegistry: Adding type registration class -> org.hibernate.type.ClassType@48d5ca17
2020-11-25 20:53:29,890 DEBUG  [main] BasicTypeRegistry: Adding type registration java.lang.Class -> org.hibernate.type.ClassType@48d5ca17
2020-11-25 20:53:29,891 DEBUG  [main] BasicTypeRegistry: Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@79b8ecb
2020-11-25 20:53:29,891 DEBUG  [main] BasicTypeRegistry: Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@79b8ecb
2020-11-25 20:53:29,892 DEBUG  [main] BasicTypeRegistry: Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@c0013b8
2020-11-25 20:53:29,892 DEBUG  [main] BasicTypeRegistry: Adding type registration binary -> org.hibernate.type.BinaryType@2a42019a
2020-11-25 20:53:29,892 DEBUG  [main] BasicTypeRegistry: Adding type registration byte[] -> org.hibernate.type.BinaryType@2a42019a
2020-11-25 20:53:29,893 DEBUG  [main] BasicTypeRegistry: Adding type registration [B -> org.hibernate.type.BinaryType@2a42019a
2020-11-25 20:53:29,893 DEBUG  [main] BasicTypeRegistry: Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@495da9a7
2020-11-25 20:53:29,894 DEBUG  [main] BasicTypeRegistry: Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@495da9a7
2020-11-25 20:53:29,894 DEBUG  [main] BasicTypeRegistry: Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@495da9a7
2020-11-25 20:53:29,895 DEBUG  [main] BasicTypeRegistry: Adding type registration row_version -> org.hibernate.type.RowVersionType@35becbd4
2020-11-25 20:53:29,895 DEBUG  [main] BasicTypeRegistry: Adding type registration image -> org.hibernate.type.ImageType@30fa8a6b
2020-11-25 20:53:29,898 DEBUG  [main] BasicTypeRegistry: Adding type registration characters -> org.hibernate.type.CharArrayType@4c8d45cf
2020-11-25 20:53:29,899 DEBUG  [main] BasicTypeRegistry: Adding type registration char[] -> org.hibernate.type.CharArrayType@4c8d45cf
2020-11-25 20:53:29,899 DEBUG  [main] BasicTypeRegistry: Adding type registration [C -> org.hibernate.type.CharArrayType@4c8d45cf
2020-11-25 20:53:29,903 DEBUG  [main] BasicTypeRegistry: Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@5b490d5e
2020-11-25 20:53:29,904 DEBUG  [main] BasicTypeRegistry: Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@5b490d5e
2020-11-25 20:53:29,905 DEBUG  [main] BasicTypeRegistry: Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@5b490d5e
2020-11-25 20:53:29,906 DEBUG  [main] BasicTypeRegistry: Adding type registration text -> org.hibernate.type.TextType@18b04526
2020-11-25 20:53:29,906 DEBUG  [main] BasicTypeRegistry: Adding type registration ntext -> org.hibernate.type.NTextType@246df37b
2020-11-25 20:53:29,906 DEBUG  [main] BasicTypeRegistry: Adding type registration blob -> org.hibernate.type.BlobType@56881196
2020-11-25 20:53:29,907 DEBUG  [main] BasicTypeRegistry: Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@56881196
2020-11-25 20:53:29,907 DEBUG  [main] BasicTypeRegistry: Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@131c0b6f
2020-11-25 20:53:29,907 DEBUG  [main] BasicTypeRegistry: Adding type registration clob -> org.hibernate.type.ClobType@7fc1fd31
2020-11-25 20:53:29,907 DEBUG  [main] BasicTypeRegistry: Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@7fc1fd31
2020-11-25 20:53:29,907 DEBUG  [main] BasicTypeRegistry: Adding type registration nclob -> org.hibernate.type.NClobType@70777a65
2020-11-25 20:53:29,908 DEBUG  [main] BasicTypeRegistry: Adding type registration java.sql.NClob -> org.hibernate.type.NClobType@70777a65
2020-11-25 20:53:29,908 DEBUG  [main] BasicTypeRegistry: Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@2f6f4ac4
2020-11-25 20:53:29,908 DEBUG  [main] BasicTypeRegistry: Adding type registration materialized_nclob -> org.hibernate.type.MaterializedNClobType@7d685f4e
2020-11-25 20:53:29,908 DEBUG  [main] BasicTypeRegistry: Adding type registration serializable -> org.hibernate.type.SerializableType@319aa9ee
2020-11-25 20:53:29,908 DEBUG  [main] BasicTypeRegistry: Adding type registration object -> org.hibernate.type.ObjectType@54234569
2020-11-25 20:53:29,908 DEBUG  [main] BasicTypeRegistry: Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@54234569
2020-11-25 20:53:29,909 DEBUG  [main] BasicTypeRegistry: Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@32fb4a87
2020-11-25 20:53:29,909 DEBUG  [main] BasicTypeRegistry: Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@37ecc472
2020-11-25 20:53:29,909 DEBUG  [main] BasicTypeRegistry: Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@27311c99
2020-11-25 20:53:29,909 DEBUG  [main] BasicTypeRegistry: Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@76ac3ad0
2020-11-25 20:53:29,909 DEBUG  [main] BasicTypeRegistry: Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@1e6be9f0
2020-11-25 20:53:29,910 DEBUG  [main] BasicTypeRegistry: Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@4ff5711b
2020-11-25 20:53:29,910 DEBUG  [main] BasicTypeRegistry: Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@608f79a8
2020-11-25 20:53:29,910 DEBUG  [main] BasicTypeRegistry: Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@77e2a5d3
2020-11-25 20:53:29,954 DEBUG  [main] TypeConfiguration$Scope: Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@5680f009] to MetadataBuildingContext [org.hibernate.boot.internal.MetadataBuildingContextRootImpl@3a4e6da6]
2020-11-25 20:53:29,985 DEBUG  [main] EnumType: Using NAMED-based conversion for Enum com.sf.back.entities.Kind
2020-11-25 20:53:29,989 DEBUG  [main] EnumType: Using NAMED-based conversion for Enum com.sf.back.entities.Kind
2020-11-25 20:53:30,024 DEBUG  [main] TypeConfiguration$Scope: Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@5680f009] to SessionFactoryImpl [org.hibernate.internal.SessionFactoryImpl@29422e61]
2020-11-25 20:53:30,025 DEBUG  [main] EnumType: Using NAMED-based conversion for Enum com.sf.back.entities.Kind
2020-11-25 20:53:30,025 DEBUG  [main] EnumType: Using NAMED-based conversion for Enum com.sf.back.entities.Kind
2020-11-25 20:53:30,079 DEBUG  [main] EnumType: Using NAMED-based conversion for Enum com.sf.back.entities.Kind
2020-11-25 20:53:30,080 DEBUG  [main] EnumType: Using NAMED-based conversion for Enum com.sf.back.entities.Kind
2020-11-25 20:53:30,122 DEBUG  [main] EnumType: Using NAMED-based conversion for Enum com.sf.back.entities.Kind
2020-11-25 20:53:30,122 DEBUG  [main] EnumType: Using NAMED-based conversion for Enum com.sf.back.entities.Kind
2020-11-25 20:53:30,127 DEBUG  [main] EnumType: Using NAMED-based conversion for Enum com.sf.back.entities.Kind
2020-11-25 20:53:30,138 TRACE  [main] TypeConfiguration$Scope: Handling #sessionFactoryCreated from [org.hibernate.internal.SessionFactoryImpl@29422e61] for TypeConfiguration
2020-11-25 20:53:30,437 WARN   [main] JpaBaseConfiguration$JpaWebConfiguration: spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2020-11-25 20:53:30,691 WARN   [main] GenericWebApplicationContext: Exception encountered during context initialization - cancelling refresh attempt: org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'groovyMarkupConfigurer' defined in class path resource [org/springframework/boot/autoconfigure/groovy/template/GroovyTemplateAutoConfiguration$GroovyMarkupConfiguration.class]: Invocation of init method failed; nested exception is java.lang.reflect.InaccessibleObjectException: Unable to make jdk.internal.loader.ClassLoaders$AppClassLoader(jdk.internal.loader.ClassLoaders$PlatformClassLoader,jdk.internal.loader.URLClassPath) accessible: module java.base does not "opens jdk.internal.loader" to unnamed module @60fa3495
2020-11-25 20:53:30,695 TRACE  [main] TypeConfiguration$Scope: Handling #sessionFactoryClosed from [org.hibernate.internal.SessionFactoryImpl@29422e61] for TypeConfiguration
2020-11-25 20:53:30,696 DEBUG  [main] TypeConfiguration$Scope: Un-scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration$Scope@bce93d3] from SessionFactory [org.hibernate.internal.SessionFactoryImpl@29422e61]
2020-11-25 20:53:30,732 ERROR  [main] SpringApplication: Application run failed
org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'groovyMarkupConfigurer' defined in class path resource [org/springframework/boot/autoconfigure/groovy/template/GroovyTemplateAutoConfiguration$GroovyMarkupConfiguration.class]: Invocation of init method failed; nested exception is java.lang.reflect.InaccessibleObjectException: Unable to make jdk.internal.loader.ClassLoaders$AppClassLoader(jdk.internal.loader.ClassLoaders$PlatformClassLoader,jdk.internal.loader.URLClassPath) accessible: module java.base does not "opens jdk.internal.loader" to unnamed module @60fa3495
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1803)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:595)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:517)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:323)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:222)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:321)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:202)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(DefaultListableBeanFactory.java:879)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:878)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:550)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:747)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:397)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:315)
	at org.springframework.boot.test.context.SpringBootContextLoader.loadContext(SpringBootContextLoader.java:125)
	at org.springframework.test.context.cache.DefaultCacheAwareContextLoaderDelegate.loadContextInternal(DefaultCacheAwareContextLoaderDelegate.java:99)
	at org.springframework.test.context.cache.DefaultCacheAwareContextLoaderDelegate.loadContext(DefaultCacheAwareContextLoaderDelegate.java:124)
	at org.springframework.test.context.support.DefaultTestContext.getApplicationContext(DefaultTestContext.java:123)
	at org.springframework.test.context.web.ServletTestExecutionListener.setUpRequestContextIfNecessary(ServletTestExecutionListener.java:190)
	at org.springframework.test.context.web.ServletTestExecutionListener.prepareTestInstance(ServletTestExecutionListener.java:132)
	at org.springframework.test.context.TestContextManager.prepareTestInstance(TestContextManager.java:244)
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner.createTest(SpringJUnit4ClassRunner.java:227)
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner$1.runReflectiveCall(SpringJUnit4ClassRunner.java:289)
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner.methodBlock(SpringJUnit4ClassRunner.java:291)
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner.runChild(SpringJUnit4ClassRunner.java:246)
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner.runChild(SpringJUnit4ClassRunner.java:97)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:290)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:71)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:58)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268)
	at org.junit.internal.runners.statements.RunBefores.evaluate(RunBefores.java:26)
	at org.springframework.test.context.junit4.statements.RunBeforeTestClassCallbacks.evaluate(RunBeforeTestClassCallbacks.java:61)
	at org.junit.internal.runners.statements.RunAfters.evaluate(RunAfters.java:27)
	at org.springframework.test.context.junit4.statements.RunAfterTestClassCallbacks.evaluate(RunAfterTestClassCallbacks.java:70)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:363)
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner.run(SpringJUnit4ClassRunner.java:190)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:137)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:115)
	at org.junit.vintage.engine.execution.RunnerExecutor.execute(RunnerExecutor.java:40)
	at java.base/java.util.stream.ForEachOps$ForEachOp$OfRef.accept(ForEachOps.java:183)
	at java.base/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:195)
	at java.base/java.util.Iterator.forEachRemaining(Iterator.java:133)
	at java.base/java.util.Spliterators$IteratorSpliterator.forEachRemaining(Spliterators.java:1801)
	at java.base/java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:484)
	at java.base/java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:474)
	at java.base/java.util.stream.ForEachOps$ForEachOp.evaluateSequential(ForEachOps.java:150)
	at java.base/java.util.stream.ForEachOps$ForEachOp$OfRef.evaluateSequential(ForEachOps.java:173)
	at java.base/java.util.stream.AbstractPipeline.evaluate(AbstractPipeline.java:234)
	at java.base/java.util.stream.ReferencePipeline.forEach(ReferencePipeline.java:497)
	at org.junit.vintage.engine.VintageTestEngine.executeAllChildren(VintageTestEngine.java:80)
	at org.junit.vintage.engine.VintageTestEngine.execute(VintageTestEngine.java:71)
	at org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:220)
	at org.junit.platform.launcher.core.DefaultLauncher.lambda$execute$6(DefaultLauncher.java:188)
	at org.junit.platform.launcher.core.DefaultLauncher.withInterceptedStreams(DefaultLauncher.java:202)
	at org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:181)
	at org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:128)
	at org.apache.maven.surefire.junitplatform.JUnitPlatformProvider.invokeAllTests(JUnitPlatformProvider.java:150)
	at org.apache.maven.surefire.junitplatform.JUnitPlatformProvider.invoke(JUnitPlatformProvider.java:124)
	at org.apache.maven.surefire.booter.ForkedBooter.invokeProviderInSameClassLoader(ForkedBooter.java:384)
	at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:345)
	at org.apache.maven.surefire.booter.ForkedBooter.execute(ForkedBooter.java:126)
	at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:418)
Caused by: java.lang.reflect.InaccessibleObjectException: Unable to make jdk.internal.loader.ClassLoaders$AppClassLoader(jdk.internal.loader.ClassLoaders$PlatformClassLoader,jdk.internal.loader.URLClassPath) accessible: module java.base does not "opens jdk.internal.loader" to unnamed module @60fa3495
	at java.base/java.lang.reflect.AccessibleObject.checkCanSetAccessible(AccessibleObject.java:344)
	at java.base/java.lang.reflect.AccessibleObject.checkCanSetAccessible(AccessibleObject.java:284)
	at java.base/java.lang.reflect.Constructor.checkCanSetAccessible(Constructor.java:189)
	at java.base/java.lang.reflect.Constructor.setAccessible(Constructor.java:182)
	at org.codehaus.groovy.reflection.CachedConstructor$1.run(CachedConstructor.java:44)
	at java.base/java.security.AccessController.doPrivileged(AccessController.java:312)
	at org.codehaus.groovy.reflection.CachedConstructor.<init>(CachedConstructor.java:42)
	at org.codehaus.groovy.reflection.CachedClass$2.initValue(CachedClass.java:79)
	at org.codehaus.groovy.reflection.CachedClass$2.initValue(CachedClass.java:69)
	at org.codehaus.groovy.util.LazyReference.getLocked(LazyReference.java:49)
	at org.codehaus.groovy.util.LazyReference.get(LazyReference.java:36)
	at org.codehaus.groovy.reflection.CachedClass.getConstructors(CachedClass.java:268)
	at groovy.lang.MetaClassImpl.<init>(MetaClassImpl.java:218)
	at groovy.lang.MetaClassImpl.<init>(MetaClassImpl.java:228)
	at groovy.lang.MetaClassRegistry$MetaClassCreationHandle.createNormalMetaClass(MetaClassRegistry.java:171)
	at groovy.lang.MetaClassRegistry$MetaClassCreationHandle.createWithCustomLookup(MetaClassRegistry.java:161)
	at groovy.lang.MetaClassRegistry$MetaClassCreationHandle.create(MetaClassRegistry.java:144)
	at org.codehaus.groovy.reflection.ClassInfo.getMetaClassUnderLock(ClassInfo.java:253)
	at org.codehaus.groovy.reflection.ClassInfo.getMetaClass(ClassInfo.java:285)
	at org.codehaus.groovy.reflection.ClassInfo.getMetaClass(ClassInfo.java:295)
	at org.codehaus.groovy.runtime.metaclass.MetaClassRegistryImpl.getMetaClass(MetaClassRegistryImpl.java:261)
	at org.codehaus.groovy.runtime.InvokerHelper.getMetaClass(InvokerHelper.java:873)
	at org.codehaus.groovy.runtime.InvokerHelper.invokePojoMethod(InvokerHelper.java:906)
	at org.codehaus.groovy.runtime.InvokerHelper.invokeMethod(InvokerHelper.java:898)
	at org.codehaus.groovy.runtime.typehandling.DefaultTypeTransformation.castToBoolean(DefaultTypeTransformation.java:185)
	at org.codehaus.groovy.runtime.typehandling.DefaultTypeTransformation.booleanUnbox(DefaultTypeTransformation.java:74)
	at org.codehaus.groovy.control.customizers.ASTTransformationCustomizer.findASTTranformationClass(ASTTransformationCustomizer.groovy:209)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:567)
	at org.codehaus.groovy.reflection.CachedMethod.invoke(CachedMethod.java:93)
	at org.codehaus.groovy.runtime.callsite.StaticMetaMethodSite$StaticMetaMethodSiteNoUnwrapNoCoerce.invoke(StaticMetaMethodSite.java:151)
	at org.codehaus.groovy.runtime.callsite.StaticMetaMethodSite.callStatic(StaticMetaMethodSite.java:102)
	at org.codehaus.groovy.runtime.callsite.AbstractCallSite.callStatic(AbstractCallSite.java:214)
	at org.codehaus.groovy.control.customizers.ASTTransformationCustomizer.findPhase(ASTTransformationCustomizer.groovy:226)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:567)
	at org.codehaus.groovy.reflection.CachedMethod.invoke(CachedMethod.java:93)
	at org.codehaus.groovy.runtime.callsite.StaticMetaMethodSite$StaticMetaMethodSiteNoUnwrapNoCoerce.invoke(StaticMetaMethodSite.java:151)
	at org.codehaus.groovy.runtime.callsite.StaticMetaMethodSite.callStatic(StaticMetaMethodSite.java:102)
	at org.codehaus.groovy.runtime.callsite.AbstractCallSite.callStatic(AbstractCallSite.java:214)
	at org.codehaus.groovy.control.customizers.ASTTransformationCustomizer.<init>(ASTTransformationCustomizer.groovy:180)
	at org.codehaus.groovy.control.customizers.ASTTransformationCustomizer.<init>(ASTTransformationCustomizer.groovy:188)
	at groovy.text.markup.MarkupTemplateEngine.<init>(MarkupTemplateEngine.java:94)
	at org.springframework.web.servlet.view.groovy.GroovyMarkupConfigurer.createTemplateEngine(GroovyMarkupConfigurer.java:160)
	at org.springframework.web.servlet.view.groovy.GroovyMarkupConfigurer.afterPropertiesSet(GroovyMarkupConfigurer.java:153)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1862)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1799)
	... 62 common frames omitted
2020-11-25 20:53:30,733 ERROR  [main] TestContextManager: Caught exception while allowing TestExecutionListener [org.springframework.test.context.web.ServletTestExecutionListener@170b27a7] to prepare test instance [com.sf.math.algebra.solvers.PolynomialSolverIntervalTest@4e24db00]
java.lang.IllegalStateException: Failed to load ApplicationContext
	at org.springframework.test.context.cache.DefaultCacheAwareContextLoaderDelegate.loadContext(DefaultCacheAwareContextLoaderDelegate.java:132)
	at org.springframework.test.context.support.DefaultTestContext.getApplicationContext(DefaultTestContext.java:123)
	at org.springframework.test.context.web.ServletTestExecutionListener.setUpRequestContextIfNecessary(ServletTestExecutionListener.java:190)
	at org.springframework.test.context.web.ServletTestExecutionListener.prepareTestInstance(ServletTestExecutionListener.java:132)
	at org.springframework.test.context.TestContextManager.prepareTestInstance(TestContextManager.java:244)
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner.createTest(SpringJUnit4ClassRunner.java:227)
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner$1.runReflectiveCall(SpringJUnit4ClassRunner.java:289)
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner.methodBlock(SpringJUnit4ClassRunner.java:291)
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner.runChild(SpringJUnit4ClassRunner.java:246)
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner.runChild(SpringJUnit4ClassRunner.java:97)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:290)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:71)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:58)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268)
	at org.junit.internal.runners.statements.RunBefores.evaluate(RunBefores.java:26)
	at org.springframework.test.context.junit4.statements.RunBeforeTestClassCallbacks.evaluate(RunBeforeTestClassCallbacks.java:61)
	at org.junit.internal.runners.statements.RunAfters.evaluate(RunAfters.java:27)
	at org.springframework.test.context.junit4.statements.RunAfterTestClassCallbacks.evaluate(RunAfterTestClassCallbacks.java:70)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:363)
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner.run(SpringJUnit4ClassRunner.java:190)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:137)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:115)
	at org.junit.vintage.engine.execution.RunnerExecutor.execute(RunnerExecutor.java:40)
	at java.base/java.util.stream.ForEachOps$ForEachOp$OfRef.accept(ForEachOps.java:183)
	at java.base/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:195)
	at java.base/java.util.Iterator.forEachRemaining(Iterator.java:133)
	at java.base/java.util.Spliterators$IteratorSpliterator.forEachRemaining(Spliterators.java:1801)
	at java.base/java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:484)
	at java.base/java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:474)
	at java.base/java.util.stream.ForEachOps$ForEachOp.evaluateSequential(ForEachOps.java:150)
	at java.base/java.util.stream.ForEachOps$ForEachOp$OfRef.evaluateSequential(ForEachOps.java:173)
	at java.base/java.util.stream.AbstractPipeline.evaluate(AbstractPipeline.java:234)
	at java.base/java.util.stream.ReferencePipeline.forEach(ReferencePipeline.java:497)
	at org.junit.vintage.engine.VintageTestEngine.executeAllChildren(VintageTestEngine.java:80)
	at org.junit.vintage.engine.VintageTestEngine.execute(VintageTestEngine.java:71)
	at org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:220)
	at org.junit.platform.launcher.core.DefaultLauncher.lambda$execute$6(DefaultLauncher.java:188)
	at org.junit.platform.launcher.core.DefaultLauncher.withInterceptedStreams(DefaultLauncher.java:202)
	at org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:181)
	at org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:128)
	at org.apache.maven.surefire.junitplatform.JUnitPlatformProvider.invokeAllTests(JUnitPlatformProvider.java:150)
	at org.apache.maven.surefire.junitplatform.JUnitPlatformProvider.invoke(JUnitPlatformProvider.java:124)
	at org.apache.maven.surefire.booter.ForkedBooter.invokeProviderInSameClassLoader(ForkedBooter.java:384)
	at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:345)
	at org.apache.maven.surefire.booter.ForkedBooter.execute(ForkedBooter.java:126)
	at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:418)
Caused by: org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'groovyMarkupConfigurer' defined in class path resource [org/springframework/boot/autoconfigure/groovy/template/GroovyTemplateAutoConfiguration$GroovyMarkupConfiguration.class]: Invocation of init method failed; nested exception is java.lang.reflect.InaccessibleObjectException: Unable to make jdk.internal.loader.ClassLoaders$AppClassLoader(jdk.internal.loader.ClassLoaders$PlatformClassLoader,jdk.internal.loader.URLClassPath) accessible: module java.base does not "opens jdk.internal.loader" to unnamed module @60fa3495
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1803)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:595)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:517)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:323)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:222)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:321)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:202)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(DefaultListableBeanFactory.java:879)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:878)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:550)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:747)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:397)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:315)
	at org.springframework.boot.test.context.SpringBootContextLoader.loadContext(SpringBootContextLoader.java:125)
	at org.springframework.test.context.cache.DefaultCacheAwareContextLoaderDelegate.loadContextInternal(DefaultCacheAwareContextLoaderDelegate.java:99)
	at org.springframework.test.context.cache.DefaultCacheAwareContextLoaderDelegate.loadContext(DefaultCacheAwareContextLoaderDelegate.java:124)
	... 47 common frames omitted
Caused by: java.lang.reflect.InaccessibleObjectException: Unable to make jdk.internal.loader.ClassLoaders$AppClassLoader(jdk.internal.loader.ClassLoaders$PlatformClassLoader,jdk.internal.loader.URLClassPath) accessible: module java.base does not "opens jdk.internal.loader" to unnamed module @60fa3495
	at java.base/java.lang.reflect.AccessibleObject.checkCanSetAccessible(AccessibleObject.java:344)
	at java.base/java.lang.reflect.AccessibleObject.checkCanSetAccessible(AccessibleObject.java:284)
	at java.base/java.lang.reflect.Constructor.checkCanSetAccessible(Constructor.java:189)
	at java.base/java.lang.reflect.Constructor.setAccessible(Constructor.java:182)
	at org.codehaus.groovy.reflection.CachedConstructor$1.run(CachedConstructor.java:44)
	at java.base/java.security.AccessController.doPrivileged(AccessController.java:312)
	at org.codehaus.groovy.reflection.CachedConstructor.<init>(CachedConstructor.java:42)
	at org.codehaus.groovy.reflection.CachedClass$2.initValue(CachedClass.java:79)
	at org.codehaus.groovy.reflection.CachedClass$2.initValue(CachedClass.java:69)
	at org.codehaus.groovy.util.LazyReference.getLocked(LazyReference.java:49)
	at org.codehaus.groovy.util.LazyReference.get(LazyReference.java:36)
	at org.codehaus.groovy.reflection.CachedClass.getConstructors(CachedClass.java:268)
	at groovy.lang.MetaClassImpl.<init>(MetaClassImpl.java:218)
	at groovy.lang.MetaClassImpl.<init>(MetaClassImpl.java:228)
	at groovy.lang.MetaClassRegistry$MetaClassCreationHandle.createNormalMetaClass(MetaClassRegistry.java:171)
	at groovy.lang.MetaClassRegistry$MetaClassCreationHandle.createWithCustomLookup(MetaClassRegistry.java:161)
	at groovy.lang.MetaClassRegistry$MetaClassCreationHandle.create(MetaClassRegistry.java:144)
	at org.codehaus.groovy.reflection.ClassInfo.getMetaClassUnderLock(ClassInfo.java:253)
	at org.codehaus.groovy.reflection.ClassInfo.getMetaClass(ClassInfo.java:285)
	at org.codehaus.groovy.reflection.ClassInfo.getMetaClass(ClassInfo.java:295)
	at org.codehaus.groovy.runtime.metaclass.MetaClassRegistryImpl.getMetaClass(MetaClassRegistryImpl.java:261)
	at org.codehaus.groovy.runtime.InvokerHelper.getMetaClass(InvokerHelper.java:873)
	at org.codehaus.groovy.runtime.InvokerHelper.invokePojoMethod(InvokerHelper.java:906)
	at org.codehaus.groovy.runtime.InvokerHelper.invokeMethod(InvokerHelper.java:898)
	at org.codehaus.groovy.runtime.typehandling.DefaultTypeTransformation.castToBoolean(DefaultTypeTransformation.java:185)
	at org.codehaus.groovy.runtime.typehandling.DefaultTypeTransformation.booleanUnbox(DefaultTypeTransformation.java:74)
	at org.codehaus.groovy.control.customizers.ASTTransformationCustomizer.findASTTranformationClass(ASTTransformationCustomizer.groovy:209)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:567)
	at org.codehaus.groovy.reflection.CachedMethod.invoke(CachedMethod.java:93)
	at org.codehaus.groovy.runtime.callsite.StaticMetaMethodSite$StaticMetaMethodSiteNoUnwrapNoCoerce.invoke(StaticMetaMethodSite.java:151)
	at org.codehaus.groovy.runtime.callsite.StaticMetaMethodSite.callStatic(StaticMetaMethodSite.java:102)
	at org.codehaus.groovy.runtime.callsite.AbstractCallSite.callStatic(AbstractCallSite.java:214)
	at org.codehaus.groovy.control.customizers.ASTTransformationCustomizer.findPhase(ASTTransformationCustomizer.groovy:226)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:567)
	at org.codehaus.groovy.reflection.CachedMethod.invoke(CachedMethod.java:93)
	at org.codehaus.groovy.runtime.callsite.StaticMetaMethodSite$StaticMetaMethodSiteNoUnwrapNoCoerce.invoke(StaticMetaMethodSite.java:151)
	at org.codehaus.groovy.runtime.callsite.StaticMetaMethodSite.callStatic(StaticMetaMethodSite.java:102)
	at org.codehaus.groovy.runtime.callsite.AbstractCallSite.callStatic(AbstractCallSite.java:214)
	at org.codehaus.groovy.control.customizers.ASTTransformationCustomizer.<init>(ASTTransformationCustomizer.groovy:180)
	at org.codehaus.groovy.control.customizers.ASTTransformationCustomizer.<init>(ASTTransformationCustomizer.groovy:188)
	at groovy.text.markup.MarkupTemplateEngine.<init>(MarkupTemplateEngine.java:94)
	at org.springframework.web.servlet.view.groovy.GroovyMarkupConfigurer.createTemplateEngine(GroovyMarkupConfigurer.java:160)
	at org.springframework.web.servlet.view.groovy.GroovyMarkupConfigurer.afterPropertiesSet(GroovyMarkupConfigurer.java:153)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1862)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1799)
	... 62 common frames omitted
2020-11-25 20:53:31,805 DEBUG  [main] BasicTypeRegistry: Adding type registration boolean -> org.hibernate.type.BooleanType@ff2266c
2020-11-25 20:53:31,809 DEBUG  [main] BasicTypeRegistry: Adding type registration boolean -> org.hibernate.type.BooleanType@ff2266c
2020-11-25 20:53:31,809 DEBUG  [main] BasicTypeRegistry: Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@ff2266c
2020-11-25 20:53:31,809 DEBUG  [main] BasicTypeRegistry: Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@1d585fb
2020-11-25 20:53:31,810 DEBUG  [main] BasicTypeRegistry: Adding type registration true_false -> org.hibernate.type.TrueFalseType@7c8f047a
2020-11-25 20:53:31,812 DEBUG  [main] BasicTypeRegistry: Adding type registration yes_no -> org.hibernate.type.YesNoType@d949bc4
2020-11-25 20:53:31,812 DEBUG  [main] BasicTypeRegistry: Adding type registration byte -> org.hibernate.type.ByteType@29c25bbc
2020-11-25 20:53:31,813 DEBUG  [main] BasicTypeRegistry: Adding type registration byte -> org.hibernate.type.ByteType@29c25bbc
2020-11-25 20:53:31,813 DEBUG  [main] BasicTypeRegistry: Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@29c25bbc
2020-11-25 20:53:31,814 DEBUG  [main] BasicTypeRegistry: Adding type registration character -> org.hibernate.type.CharacterType@403f7aa2
2020-11-25 20:53:31,814 DEBUG  [main] BasicTypeRegistry: Adding type registration char -> org.hibernate.type.CharacterType@403f7aa2
2020-11-25 20:53:31,814 DEBUG  [main] BasicTypeRegistry: Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@403f7aa2
2020-11-25 20:53:31,815 DEBUG  [main] BasicTypeRegistry: Adding type registration short -> org.hibernate.type.ShortType@38cb1606
2020-11-25 20:53:31,815 DEBUG  [main] BasicTypeRegistry: Adding type registration short -> org.hibernate.type.ShortType@38cb1606
2020-11-25 20:53:31,815 DEBUG  [main] BasicTypeRegistry: Adding type registration java.lang.Short -> org.hibernate.type.ShortType@38cb1606
2020-11-25 20:53:31,815 DEBUG  [main] BasicTypeRegistry: Adding type registration integer -> org.hibernate.type.IntegerType@5d3b6585
2020-11-25 20:53:31,815 DEBUG  [main] BasicTypeRegistry: Adding type registration int -> org.hibernate.type.IntegerType@5d3b6585
2020-11-25 20:53:31,816 DEBUG  [main] BasicTypeRegistry: Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@5d3b6585
2020-11-25 20:53:31,816 DEBUG  [main] BasicTypeRegistry: Adding type registration long -> org.hibernate.type.LongType@4fea5ee0
2020-11-25 20:53:31,817 DEBUG  [main] BasicTypeRegistry: Adding type registration long -> org.hibernate.type.LongType@4fea5ee0
2020-11-25 20:53:31,817 DEBUG  [main] BasicTypeRegistry: Adding type registration java.lang.Long -> org.hibernate.type.LongType@4fea5ee0
2020-11-25 20:53:31,817 DEBUG  [main] BasicTypeRegistry: Adding type registration float -> org.hibernate.type.FloatType@7b3085a3
2020-11-25 20:53:31,818 DEBUG  [main] BasicTypeRegistry: Adding type registration float -> org.hibernate.type.FloatType@7b3085a3
2020-11-25 20:53:31,818 DEBUG  [main] BasicTypeRegistry: Adding type registration java.lang.Float -> org.hibernate.type.FloatType@7b3085a3
2020-11-25 20:53:31,818 DEBUG  [main] BasicTypeRegistry: Adding type registration double -> org.hibernate.type.DoubleType@5a7a6d34
2020-11-25 20:53:31,818 DEBUG  [main] BasicTypeRegistry: Adding type registration double -> org.hibernate.type.DoubleType@5a7a6d34
2020-11-25 20:53:31,818 DEBUG  [main] BasicTypeRegistry: Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@5a7a6d34
2020-11-25 20:53:31,818 DEBUG  [main] BasicTypeRegistry: Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@5ae66c98
2020-11-25 20:53:31,818 DEBUG  [main] BasicTypeRegistry: Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@5ae66c98
2020-11-25 20:53:31,819 DEBUG  [main] BasicTypeRegistry: Adding type registration big_integer -> org.hibernate.type.BigIntegerType@223cbf0d
2020-11-25 20:53:31,819 DEBUG  [main] BasicTypeRegistry: Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@223cbf0d
2020-11-25 20:53:31,819 DEBUG  [main] BasicTypeRegistry: Adding type registration string -> org.hibernate.type.StringType@4f581211
2020-11-25 20:53:31,819 DEBUG  [main] BasicTypeRegistry: Adding type registration java.lang.String -> org.hibernate.type.StringType@4f581211
2020-11-25 20:53:31,819 DEBUG  [main] BasicTypeRegistry: Adding type registration nstring -> org.hibernate.type.StringNVarcharType@6697f3d
2020-11-25 20:53:31,819 DEBUG  [main] BasicTypeRegistry: Adding type registration ncharacter -> org.hibernate.type.CharacterNCharType@f1d1463
2020-11-25 20:53:31,820 DEBUG  [main] BasicTypeRegistry: Adding type registration url -> org.hibernate.type.UrlType@44ddb518
2020-11-25 20:53:31,820 DEBUG  [main] BasicTypeRegistry: Adding type registration java.net.URL -> org.hibernate.type.UrlType@44ddb518
2020-11-25 20:53:31,820 DEBUG  [main] BasicTypeRegistry: Adding type registration Duration -> org.hibernate.type.DurationType@49e0b123
2020-11-25 20:53:31,820 DEBUG  [main] BasicTypeRegistry: Adding type registration java.time.Duration -> org.hibernate.type.DurationType@49e0b123
2020-11-25 20:53:31,820 DEBUG  [main] BasicTypeRegistry: Adding type registration Instant -> org.hibernate.type.InstantType@40a28bda
2020-11-25 20:53:31,820 DEBUG  [main] BasicTypeRegistry: Adding type registration java.time.Instant -> org.hibernate.type.InstantType@40a28bda
2020-11-25 20:53:31,821 DEBUG  [main] BasicTypeRegistry: Adding type registration LocalDateTime -> org.hibernate.type.LocalDateTimeType@33430fc
2020-11-25 20:53:31,821 DEBUG  [main] BasicTypeRegistry: Adding type registration java.time.LocalDateTime -> org.hibernate.type.LocalDateTimeType@33430fc
2020-11-25 20:53:31,821 DEBUG  [main] BasicTypeRegistry: Adding type registration LocalDate -> org.hibernate.type.LocalDateType@d7055be
2020-11-25 20:53:31,821 DEBUG  [main] BasicTypeRegistry: Adding type registration java.time.LocalDate -> org.hibernate.type.LocalDateType@d7055be
2020-11-25 20:53:31,821 DEBUG  [main] BasicTypeRegistry: Adding type registration LocalTime -> org.hibernate.type.LocalTimeType@3c7d8a4
2020-11-25 20:53:31,821 DEBUG  [main] BasicTypeRegistry: Adding type registration java.time.LocalTime -> org.hibernate.type.LocalTimeType@3c7d8a4
2020-11-25 20:53:31,822 DEBUG  [main] BasicTypeRegistry: Adding type registration OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@7a117dc2
2020-11-25 20:53:31,822 DEBUG  [main] BasicTypeRegistry: Adding type registration java.time.OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@7a117dc2
2020-11-25 20:53:31,822 DEBUG  [main] BasicTypeRegistry: Adding type registration OffsetTime -> org.hibernate.type.OffsetTimeType@3c64339f
2020-11-25 20:53:31,822 DEBUG  [main] BasicTypeRegistry: Adding type registration java.time.OffsetTime -> org.hibernate.type.OffsetTimeType@3c64339f
2020-11-25 20:53:31,822 DEBUG  [main] BasicTypeRegistry: Adding type registration ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@30c8c6ab
2020-11-25 20:53:31,823 DEBUG  [main] BasicTypeRegistry: Adding type registration java.time.ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@30c8c6ab
2020-11-25 20:53:31,823 DEBUG  [main] BasicTypeRegistry: Adding type registration date -> org.hibernate.type.DateType@61c5fd78
2020-11-25 20:53:31,823 DEBUG  [main] BasicTypeRegistry: Adding type registration java.sql.Date -> org.hibernate.type.DateType@61c5fd78
2020-11-25 20:53:31,823 DEBUG  [main] BasicTypeRegistry: Adding type registration time -> org.hibernate.type.TimeType@77856cc5
2020-11-25 20:53:31,823 DEBUG  [main] BasicTypeRegistry: Adding type registration java.sql.Time -> org.hibernate.type.TimeType@77856cc5
2020-11-25 20:53:31,823 DEBUG  [main] BasicTypeRegistry: Adding type registration timestamp -> org.hibernate.type.TimestampType@12166229
2020-11-25 20:53:31,823 DEBUG  [main] BasicTypeRegistry: Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@12166229
2020-11-25 20:53:31,824 DEBUG  [main] BasicTypeRegistry: Adding type registration java.util.Date -> org.hibernate.type.TimestampType@12166229
2020-11-25 20:53:31,824 DEBUG  [main] BasicTypeRegistry: Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@2b4829aa
2020-11-25 20:53:31,824 DEBUG  [main] BasicTypeRegistry: Adding type registration calendar -> org.hibernate.type.CalendarType@3ec082a1
2020-11-25 20:53:31,824 DEBUG  [main] BasicTypeRegistry: Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@3ec082a1
2020-11-25 20:53:31,824 DEBUG  [main] BasicTypeRegistry: Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@3ec082a1
2020-11-25 20:53:31,824 DEBUG  [main] BasicTypeRegistry: Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@429f0ca8
2020-11-25 20:53:31,824 DEBUG  [main] BasicTypeRegistry: Adding type registration locale -> org.hibernate.type.LocaleType@11c3ce6a
2020-11-25 20:53:31,825 DEBUG  [main] BasicTypeRegistry: Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@11c3ce6a
2020-11-25 20:53:31,825 DEBUG  [main] BasicTypeRegistry: Adding type registration currency -> org.hibernate.type.CurrencyType@28519bfb
2020-11-25 20:53:31,825 DEBUG  [main] BasicTypeRegistry: Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@28519bfb
2020-11-25 20:53:31,825 DEBUG  [main] BasicTypeRegistry: Adding type registration timezone -> org.hibernate.type.TimeZoneType@7aa15a80
2020-11-25 20:53:31,825 DEBUG  [main] BasicTypeRegistry: Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@7aa15a80
2020-11-25 20:53:31,825 DEBUG  [main] BasicTypeRegistry: Adding type registration class -> org.hibernate.type.ClassType@48d5ca17
2020-11-25 20:53:31,826 DEBUG  [main] BasicTypeRegistry: Adding type registration java.lang.Class -> org.hibernate.type.ClassType@48d5ca17
2020-11-25 20:53:31,826 DEBUG  [main] BasicTypeRegistry: Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@79b8ecb
2020-11-25 20:53:31,826 DEBUG  [main] BasicTypeRegistry: Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@79b8ecb
2020-11-25 20:53:31,826 DEBUG  [main] BasicTypeRegistry: Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@c0013b8
2020-11-25 20:53:31,826 DEBUG  [main] BasicTypeRegistry: Adding type registration binary -> org.hibernate.type.BinaryType@2a42019a
2020-11-25 20:53:31,827 DEBUG  [main] BasicTypeRegistry: Adding type registration byte[] -> org.hibernate.type.BinaryType@2a42019a
2020-11-25 20:53:31,827 DEBUG  [main] BasicTypeRegistry: Adding type registration [B -> org.hibernate.type.BinaryType@2a42019a
2020-11-25 20:53:31,827 DEBUG  [main] BasicTypeRegistry: Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@495da9a7
2020-11-25 20:53:31,827 DEBUG  [main] BasicTypeRegistry: Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@495da9a7
2020-11-25 20:53:31,827 DEBUG  [main] BasicTypeRegistry: Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@495da9a7
2020-11-25 20:53:31,827 DEBUG  [main] BasicTypeRegistry: Adding type registration row_version -> org.hibernate.type.RowVersionType@35becbd4
2020-11-25 20:53:31,828 DEBUG  [main] BasicTypeRegistry: Adding type registration image -> org.hibernate.type.ImageType@30fa8a6b
2020-11-25 20:53:31,828 DEBUG  [main] BasicTypeRegistry: Adding type registration characters -> org.hibernate.type.CharArrayType@4c8d45cf
2020-11-25 20:53:31,829 DEBUG  [main] BasicTypeRegistry: Adding type registration char[] -> org.hibernate.type.CharArrayType@4c8d45cf
2020-11-25 20:53:31,829 DEBUG  [main] BasicTypeRegistry: Adding type registration [C -> org.hibernate.type.CharArrayType@4c8d45cf
2020-11-25 20:53:31,830 DEBUG  [main] BasicTypeRegistry: Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@5b490d5e
2020-11-25 20:53:31,830 DEBUG  [main] BasicTypeRegistry: Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@5b490d5e
2020-11-25 20:53:31,830 DEBUG  [main] BasicTypeRegistry: Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@5b490d5e
2020-11-25 20:53:31,830 DEBUG  [main] BasicTypeRegistry: Adding type registration text -> org.hibernate.type.TextType@18b04526
2020-11-25 20:53:31,831 DEBUG  [main] BasicTypeRegistry: Adding type registration ntext -> org.hibernate.type.NTextType@246df37b
2020-11-25 20:53:31,831 DEBUG  [main] BasicTypeRegistry: Adding type registration blob -> org.hibernate.type.BlobType@56881196
2020-11-25 20:53:31,831 DEBUG  [main] BasicTypeRegistry: Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@56881196
2020-11-25 20:53:31,831 DEBUG  [main] BasicTypeRegistry: Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@131c0b6f
2020-11-25 20:53:31,831 DEBUG  [main] BasicTypeRegistry: Adding type registration clob -> org.hibernate.type.ClobType@7fc1fd31
2020-11-25 20:53:31,831 DEBUG  [main] BasicTypeRegistry: Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@7fc1fd31
2020-11-25 20:53:31,831 DEBUG  [main] BasicTypeRegistry: Adding type registration nclob -> org.hibernate.type.NClobType@70777a65
2020-11-25 20:53:31,832 DEBUG  [main] BasicTypeRegistry: Adding type registration java.sql.NClob -> org.hibernate.type.NClobType@70777a65
2020-11-25 20:53:31,832 DEBUG  [main] BasicTypeRegistry: Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@2f6f4ac4
2020-11-25 20:53:31,832 DEBUG  [main] BasicTypeRegistry: Adding type registration materialized_nclob -> org.hibernate.type.MaterializedNClobType@7d685f4e
2020-11-25 20:53:31,832 DEBUG  [main] BasicTypeRegistry: Adding type registration serializable -> org.hibernate.type.SerializableType@319aa9ee
2020-11-25 20:53:31,832 DEBUG  [main] BasicTypeRegistry: Adding type registration object -> org.hibernate.type.ObjectType@54234569
2020-11-25 20:53:31,832 DEBUG  [main] BasicTypeRegistry: Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@54234569
2020-11-25 20:53:31,833 DEBUG  [main] BasicTypeRegistry: Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@52aa84ef
2020-11-25 20:53:31,833 DEBUG  [main] BasicTypeRegistry: Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@333afc53
2020-11-25 20:53:31,833 DEBUG  [main] BasicTypeRegistry: Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@5ea9f2f3
2020-11-25 20:53:31,833 DEBUG  [main] BasicTypeRegistry: Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@72e5f018
2020-11-25 20:53:31,834 DEBUG  [main] BasicTypeRegistry: Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@74ee8f57
2020-11-25 20:53:31,834 DEBUG  [main] BasicTypeRegistry: Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@10522dfd
2020-11-25 20:53:31,834 DEBUG  [main] BasicTypeRegistry: Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@17d6b6e
2020-11-25 20:53:31,834 DEBUG  [main] BasicTypeRegistry: Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@5c452e69
2020-11-25 20:53:31,854 DEBUG  [main] TypeConfiguration$Scope: Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@24e6bd00] to MetadataBuildingContext [org.hibernate.boot.internal.MetadataBuildingContextRootImpl@5522f9b]
2020-11-25 20:53:31,867 DEBUG  [main] EnumType: Using NAMED-based conversion for Enum com.sf.back.entities.Kind
2020-11-25 20:53:31,871 DEBUG  [main] EnumType: Using NAMED-based conversion for Enum com.sf.back.entities.Kind
2020-11-25 20:53:31,917 DEBUG  [main] TypeConfiguration$Scope: Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@24e6bd00] to SessionFactoryImpl [org.hibernate.internal.SessionFactoryImpl@18bd3135]
2020-11-25 20:53:31,918 DEBUG  [main] EnumType: Using NAMED-based conversion for Enum com.sf.back.entities.Kind
2020-11-25 20:53:31,918 DEBUG  [main] EnumType: Using NAMED-based conversion for Enum com.sf.back.entities.Kind
2020-11-25 20:53:31,951 DEBUG  [main] EnumType: Using NAMED-based conversion for Enum com.sf.back.entities.Kind
2020-11-25 20:53:31,954 DEBUG  [main] EnumType: Using NAMED-based conversion for Enum com.sf.back.entities.Kind
2020-11-25 20:53:32,042 DEBUG  [main] EnumType: Using NAMED-based conversion for Enum com.sf.back.entities.Kind
2020-11-25 20:53:32,043 DEBUG  [main] EnumType: Using NAMED-based conversion for Enum com.sf.back.entities.Kind
2020-11-25 20:53:32,052 DEBUG  [main] EnumType: Using NAMED-based conversion for Enum com.sf.back.entities.Kind
2020-11-25 20:53:32,067 TRACE  [main] TypeConfiguration$Scope: Handling #sessionFactoryCreated from [org.hibernate.internal.SessionFactoryImpl@18bd3135] for TypeConfiguration
2020-11-25 20:53:32,290 WARN   [main] JpaBaseConfiguration$JpaWebConfiguration: spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2020-11-25 20:53:32,427 WARN   [main] GenericWebApplicationContext: Exception encountered during context initialization - cancelling refresh attempt: org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'groovyMarkupConfigurer' defined in class path resource [org/springframework/boot/autoconfigure/groovy/template/GroovyTemplateAutoConfiguration$GroovyMarkupConfiguration.class]: Invocation of init method failed; nested exception is java.lang.reflect.InaccessibleObjectException: Unable to make jdk.internal.loader.ClassLoaders$AppClassLoader(jdk.internal.loader.ClassLoaders$PlatformClassLoader,jdk.internal.loader.URLClassPath) accessible: module java.base does not "opens jdk.internal.loader" to unnamed module @60fa3495
2020-11-25 20:53:32,433 TRACE  [main] TypeConfiguration$Scope: Handling #sessionFactoryClosed from [org.hibernate.internal.SessionFactoryImpl@18bd3135] for TypeConfiguration
2020-11-25 20:53:32,434 DEBUG  [main] TypeConfiguration$Scope: Un-scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration$Scope@4d96c290] from SessionFactory [org.hibernate.internal.SessionFactoryImpl@18bd3135]
2020-11-25 20:53:32,443 ERROR  [main] SpringApplication: Application run failed
org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'groovyMarkupConfigurer' defined in class path resource [org/springframework/boot/autoconfigure/groovy/template/GroovyTemplateAutoConfiguration$GroovyMarkupConfiguration.class]: Invocation of init method failed; nested exception is java.lang.reflect.InaccessibleObjectException: Unable to make jdk.internal.loader.ClassLoaders$AppClassLoader(jdk.internal.loader.ClassLoaders$PlatformClassLoader,jdk.internal.loader.URLClassPath) accessible: module java.base does not "opens jdk.internal.loader" to unnamed module @60fa3495
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1803)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:595)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:517)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:323)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:222)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:321)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:202)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(DefaultListableBeanFactory.java:879)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:878)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:550)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:747)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:397)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:315)
	at org.springframework.boot.test.context.SpringBootContextLoader.loadContext(SpringBootContextLoader.java:125)
	at org.springframework.test.context.cache.DefaultCacheAwareContextLoaderDelegate.loadContextInternal(DefaultCacheAwareContextLoaderDelegate.java:99)
	at org.springframework.test.context.cache.DefaultCacheAwareContextLoaderDelegate.loadContext(DefaultCacheAwareContextLoaderDelegate.java:124)
	at org.springframework.test.context.support.DefaultTestContext.getApplicationContext(DefaultTestContext.java:123)
	at org.springframework.test.context.web.ServletTestExecutionListener.setUpRequestContextIfNecessary(ServletTestExecutionListener.java:190)
	at org.springframework.test.context.web.ServletTestExecutionListener.prepareTestInstance(ServletTestExecutionListener.java:132)
	at org.springframework.test.context.TestContextManager.prepareTestInstance(TestContextManager.java:244)
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner.createTest(SpringJUnit4ClassRunner.java:227)
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner$1.runReflectiveCall(SpringJUnit4ClassRunner.java:289)
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner.methodBlock(SpringJUnit4ClassRunner.java:291)
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner.runChild(SpringJUnit4ClassRunner.java:246)
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner.runChild(SpringJUnit4ClassRunner.java:97)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:290)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:71)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:58)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268)
	at org.junit.internal.runners.statements.RunBefores.evaluate(RunBefores.java:26)
	at org.springframework.test.context.junit4.statements.RunBeforeTestClassCallbacks.evaluate(RunBeforeTestClassCallbacks.java:61)
	at org.junit.internal.runners.statements.RunAfters.evaluate(RunAfters.java:27)
	at org.springframework.test.context.junit4.statements.RunAfterTestClassCallbacks.evaluate(RunAfterTestClassCallbacks.java:70)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:363)
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner.run(SpringJUnit4ClassRunner.java:190)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:137)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:115)
	at org.junit.vintage.engine.execution.RunnerExecutor.execute(RunnerExecutor.java:40)
	at java.base/java.util.stream.ForEachOps$ForEachOp$OfRef.accept(ForEachOps.java:183)
	at java.base/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:195)
	at java.base/java.util.Iterator.forEachRemaining(Iterator.java:133)
	at java.base/java.util.Spliterators$IteratorSpliterator.forEachRemaining(Spliterators.java:1801)
	at java.base/java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:484)
	at java.base/java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:474)
	at java.base/java.util.stream.ForEachOps$ForEachOp.evaluateSequential(ForEachOps.java:150)
	at java.base/java.util.stream.ForEachOps$ForEachOp$OfRef.evaluateSequential(ForEachOps.java:173)
	at java.base/java.util.stream.AbstractPipeline.evaluate(AbstractPipeline.java:234)
	at java.base/java.util.stream.ReferencePipeline.forEach(ReferencePipeline.java:497)
	at org.junit.vintage.engine.VintageTestEngine.executeAllChildren(VintageTestEngine.java:80)
	at org.junit.vintage.engine.VintageTestEngine.execute(VintageTestEngine.java:71)
	at org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:220)
	at org.junit.platform.launcher.core.DefaultLauncher.lambda$execute$6(DefaultLauncher.java:188)
	at org.junit.platform.launcher.core.DefaultLauncher.withInterceptedStreams(DefaultLauncher.java:202)
	at org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:181)
	at org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:128)
	at org.apache.maven.surefire.junitplatform.JUnitPlatformProvider.invokeAllTests(JUnitPlatformProvider.java:150)
	at org.apache.maven.surefire.junitplatform.JUnitPlatformProvider.invoke(JUnitPlatformProvider.java:124)
	at org.apache.maven.surefire.booter.ForkedBooter.invokeProviderInSameClassLoader(ForkedBooter.java:384)
	at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:345)
	at org.apache.maven.surefire.booter.ForkedBooter.execute(ForkedBooter.java:126)
	at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:418)
Caused by: java.lang.reflect.InaccessibleObjectException: Unable to make jdk.internal.loader.ClassLoaders$AppClassLoader(jdk.internal.loader.ClassLoaders$PlatformClassLoader,jdk.internal.loader.URLClassPath) accessible: module java.base does not "opens jdk.internal.loader" to unnamed module @60fa3495
	at java.base/java.lang.reflect.AccessibleObject.checkCanSetAccessible(AccessibleObject.java:344)
	at java.base/java.lang.reflect.AccessibleObject.checkCanSetAccessible(AccessibleObject.java:284)
	at java.base/java.lang.reflect.Constructor.checkCanSetAccessible(Constructor.java:189)
	at java.base/java.lang.reflect.Constructor.setAccessible(Constructor.java:182)
	at org.codehaus.groovy.reflection.CachedConstructor$1.run(CachedConstructor.java:44)
	at java.base/java.security.AccessController.doPrivileged(AccessController.java:312)
	at org.codehaus.groovy.reflection.CachedConstructor.<init>(CachedConstructor.java:42)
	at org.codehaus.groovy.reflection.CachedClass$2.initValue(CachedClass.java:79)
	at org.codehaus.groovy.reflection.CachedClass$2.initValue(CachedClass.java:69)
	at org.codehaus.groovy.util.LazyReference.getLocked(LazyReference.java:49)
	at org.codehaus.groovy.util.LazyReference.get(LazyReference.java:36)
	at org.codehaus.groovy.reflection.CachedClass.getConstructors(CachedClass.java:268)
	at groovy.lang.MetaClassImpl.<init>(MetaClassImpl.java:218)
	at groovy.lang.MetaClassImpl.<init>(MetaClassImpl.java:228)
	at groovy.lang.MetaClassRegistry$MetaClassCreationHandle.createNormalMetaClass(MetaClassRegistry.java:171)
	at groovy.lang.MetaClassRegistry$MetaClassCreationHandle.createWithCustomLookup(MetaClassRegistry.java:161)
	at groovy.lang.MetaClassRegistry$MetaClassCreationHandle.create(MetaClassRegistry.java:144)
	at org.codehaus.groovy.reflection.ClassInfo.getMetaClassUnderLock(ClassInfo.java:253)
	at org.codehaus.groovy.reflection.ClassInfo.getMetaClass(ClassInfo.java:285)
	at org.codehaus.groovy.reflection.ClassInfo.getMetaClass(ClassInfo.java:295)
	at org.codehaus.groovy.runtime.metaclass.MetaClassRegistryImpl.getMetaClass(MetaClassRegistryImpl.java:261)
	at org.codehaus.groovy.runtime.InvokerHelper.getMetaClass(InvokerHelper.java:873)
	at org.codehaus.groovy.runtime.InvokerHelper.invokePojoMethod(InvokerHelper.java:906)
	at org.codehaus.groovy.runtime.InvokerHelper.invokeMethod(InvokerHelper.java:898)
	at org.codehaus.groovy.runtime.typehandling.DefaultTypeTransformation.castToBoolean(DefaultTypeTransformation.java:185)
	at org.codehaus.groovy.runtime.typehandling.DefaultTypeTransformation.booleanUnbox(DefaultTypeTransformation.java:74)
	at org.codehaus.groovy.control.customizers.ASTTransformationCustomizer.findASTTranformationClass(ASTTransformationCustomizer.groovy:209)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:567)
	at org.codehaus.groovy.reflection.CachedMethod.invoke(CachedMethod.java:93)
	at org.codehaus.groovy.runtime.callsite.StaticMetaMethodSite$StaticMetaMethodSiteNoUnwrapNoCoerce.invoke(StaticMetaMethodSite.java:151)
	at org.codehaus.groovy.runtime.callsite.StaticMetaMethodSite.callStatic(StaticMetaMethodSite.java:102)
	at org.codehaus.groovy.runtime.callsite.AbstractCallSite.callStatic(AbstractCallSite.java:214)
	at org.codehaus.groovy.control.customizers.ASTTransformationCustomizer.findPhase(ASTTransformationCustomizer.groovy:226)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:567)
	at org.codehaus.groovy.reflection.CachedMethod.invoke(CachedMethod.java:93)
	at org.codehaus.groovy.runtime.callsite.StaticMetaMethodSite$StaticMetaMethodSiteNoUnwrapNoCoerce.invoke(StaticMetaMethodSite.java:151)
	at org.codehaus.groovy.runtime.callsite.StaticMetaMethodSite.callStatic(StaticMetaMethodSite.java:102)
	at org.codehaus.groovy.runtime.callsite.AbstractCallSite.callStatic(AbstractCallSite.java:214)
	at org.codehaus.groovy.control.customizers.ASTTransformationCustomizer.<init>(ASTTransformationCustomizer.groovy:180)
	at org.codehaus.groovy.control.customizers.ASTTransformationCustomizer.<init>(ASTTransformationCustomizer.groovy:188)
	at groovy.text.markup.MarkupTemplateEngine.<init>(MarkupTemplateEngine.java:94)
	at org.springframework.web.servlet.view.groovy.GroovyMarkupConfigurer.createTemplateEngine(GroovyMarkupConfigurer.java:160)
	at org.springframework.web.servlet.view.groovy.GroovyMarkupConfigurer.afterPropertiesSet(GroovyMarkupConfigurer.java:153)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1862)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1799)
	... 62 common frames omitted
2020-11-25 20:53:32,444 ERROR  [main] TestContextManager: Caught exception while allowing TestExecutionListener [org.springframework.test.context.web.ServletTestExecutionListener@170b27a7] to prepare test instance [com.sf.math.algebra.solvers.PolynomialSolverIntervalTest@186f7553]
java.lang.IllegalStateException: Failed to load ApplicationContext
	at org.springframework.test.context.cache.DefaultCacheAwareContextLoaderDelegate.loadContext(DefaultCacheAwareContextLoaderDelegate.java:132)
	at org.springframework.test.context.support.DefaultTestContext.getApplicationContext(DefaultTestContext.java:123)
	at org.springframework.test.context.web.ServletTestExecutionListener.setUpRequestContextIfNecessary(ServletTestExecutionListener.java:190)
	at org.springframework.test.context.web.ServletTestExecutionListener.prepareTestInstance(ServletTestExecutionListener.java:132)
	at org.springframework.test.context.TestContextManager.prepareTestInstance(TestContextManager.java:244)
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner.createTest(SpringJUnit4ClassRunner.java:227)
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner$1.runReflectiveCall(SpringJUnit4ClassRunner.java:289)
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner.methodBlock(SpringJUnit4ClassRunner.java:291)
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner.runChild(SpringJUnit4ClassRunner.java:246)
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner.runChild(SpringJUnit4ClassRunner.java:97)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:290)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:71)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:58)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268)
	at org.junit.internal.runners.statements.RunBefores.evaluate(RunBefores.java:26)
	at org.springframework.test.context.junit4.statements.RunBeforeTestClassCallbacks.evaluate(RunBeforeTestClassCallbacks.java:61)
	at org.junit.internal.runners.statements.RunAfters.evaluate(RunAfters.java:27)
	at org.springframework.test.context.junit4.statements.RunAfterTestClassCallbacks.evaluate(RunAfterTestClassCallbacks.java:70)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:363)
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner.run(SpringJUnit4ClassRunner.java:190)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:137)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:115)
	at org.junit.vintage.engine.execution.RunnerExecutor.execute(RunnerExecutor.java:40)
	at java.base/java.util.stream.ForEachOps$ForEachOp$OfRef.accept(ForEachOps.java:183)
	at java.base/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:195)
	at java.base/java.util.Iterator.forEachRemaining(Iterator.java:133)
	at java.base/java.util.Spliterators$IteratorSpliterator.forEachRemaining(Spliterators.java:1801)
	at java.base/java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:484)
	at java.base/java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:474)
	at java.base/java.util.stream.ForEachOps$ForEachOp.evaluateSequential(ForEachOps.java:150)
	at java.base/java.util.stream.ForEachOps$ForEachOp$OfRef.evaluateSequential(ForEachOps.java:173)
	at java.base/java.util.stream.AbstractPipeline.evaluate(AbstractPipeline.java:234)
	at java.base/java.util.stream.ReferencePipeline.forEach(ReferencePipeline.java:497)
	at org.junit.vintage.engine.VintageTestEngine.executeAllChildren(VintageTestEngine.java:80)
	at org.junit.vintage.engine.VintageTestEngine.execute(VintageTestEngine.java:71)
	at org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:220)
	at org.junit.platform.launcher.core.DefaultLauncher.lambda$execute$6(DefaultLauncher.java:188)
	at org.junit.platform.launcher.core.DefaultLauncher.withInterceptedStreams(DefaultLauncher.java:202)
	at org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:181)
	at org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:128)
	at org.apache.maven.surefire.junitplatform.JUnitPlatformProvider.invokeAllTests(JUnitPlatformProvider.java:150)
	at org.apache.maven.surefire.junitplatform.JUnitPlatformProvider.invoke(JUnitPlatformProvider.java:124)
	at org.apache.maven.surefire.booter.ForkedBooter.invokeProviderInSameClassLoader(ForkedBooter.java:384)
	at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:345)
	at org.apache.maven.surefire.booter.ForkedBooter.execute(ForkedBooter.java:126)
	at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:418)
Caused by: org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'groovyMarkupConfigurer' defined in class path resource [org/springframework/boot/autoconfigure/groovy/template/GroovyTemplateAutoConfiguration$GroovyMarkupConfiguration.class]: Invocation of init method failed; nested exception is java.lang.reflect.InaccessibleObjectException: Unable to make jdk.internal.loader.ClassLoaders$AppClassLoader(jdk.internal.loader.ClassLoaders$PlatformClassLoader,jdk.internal.loader.URLClassPath) accessible: module java.base does not "opens jdk.internal.loader" to unnamed module @60fa3495
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1803)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:595)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:517)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:323)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:222)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:321)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:202)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(DefaultListableBeanFactory.java:879)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:878)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:550)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:747)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:397)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:315)
	at org.springframework.boot.test.context.SpringBootContextLoader.loadContext(SpringBootContextLoader.java:125)
	at org.springframework.test.context.cache.DefaultCacheAwareContextLoaderDelegate.loadContextInternal(DefaultCacheAwareContextLoaderDelegate.java:99)
	at org.springframework.test.context.cache.DefaultCacheAwareContextLoaderDelegate.loadContext(DefaultCacheAwareContextLoaderDelegate.java:124)
	... 47 common frames omitted
Caused by: java.lang.reflect.InaccessibleObjectException: Unable to make jdk.internal.loader.ClassLoaders$AppClassLoader(jdk.internal.loader.ClassLoaders$PlatformClassLoader,jdk.internal.loader.URLClassPath) accessible: module java.base does not "opens jdk.internal.loader" to unnamed module @60fa3495
	at java.base/java.lang.reflect.AccessibleObject.checkCanSetAccessible(AccessibleObject.java:344)
	at java.base/java.lang.reflect.AccessibleObject.checkCanSetAccessible(AccessibleObject.java:284)
	at java.base/java.lang.reflect.Constructor.checkCanSetAccessible(Constructor.java:189)
	at java.base/java.lang.reflect.Constructor.setAccessible(Constructor.java:182)
	at org.codehaus.groovy.reflection.CachedConstructor$1.run(CachedConstructor.java:44)
	at java.base/java.security.AccessController.doPrivileged(AccessController.java:312)
	at org.codehaus.groovy.reflection.CachedConstructor.<init>(CachedConstructor.java:42)
	at org.codehaus.groovy.reflection.CachedClass$2.initValue(CachedClass.java:79)
	at org.codehaus.groovy.reflection.CachedClass$2.initValue(CachedClass.java:69)
	at org.codehaus.groovy.util.LazyReference.getLocked(LazyReference.java:49)
	at org.codehaus.groovy.util.LazyReference.get(LazyReference.java:36)
	at org.codehaus.groovy.reflection.CachedClass.getConstructors(CachedClass.java:268)
	at groovy.lang.MetaClassImpl.<init>(MetaClassImpl.java:218)
	at groovy.lang.MetaClassImpl.<init>(MetaClassImpl.java:228)
	at groovy.lang.MetaClassRegistry$MetaClassCreationHandle.createNormalMetaClass(MetaClassRegistry.java:171)
	at groovy.lang.MetaClassRegistry$MetaClassCreationHandle.createWithCustomLookup(MetaClassRegistry.java:161)
	at groovy.lang.MetaClassRegistry$MetaClassCreationHandle.create(MetaClassRegistry.java:144)
	at org.codehaus.groovy.reflection.ClassInfo.getMetaClassUnderLock(ClassInfo.java:253)
	at org.codehaus.groovy.reflection.ClassInfo.getMetaClass(ClassInfo.java:285)
	at org.codehaus.groovy.reflection.ClassInfo.getMetaClass(ClassInfo.java:295)
	at org.codehaus.groovy.runtime.metaclass.MetaClassRegistryImpl.getMetaClass(MetaClassRegistryImpl.java:261)
	at org.codehaus.groovy.runtime.InvokerHelper.getMetaClass(InvokerHelper.java:873)
	at org.codehaus.groovy.runtime.InvokerHelper.invokePojoMethod(InvokerHelper.java:906)
	at org.codehaus.groovy.runtime.InvokerHelper.invokeMethod(InvokerHelper.java:898)
	at org.codehaus.groovy.runtime.typehandling.DefaultTypeTransformation.castToBoolean(DefaultTypeTransformation.java:185)
	at org.codehaus.groovy.runtime.typehandling.DefaultTypeTransformation.booleanUnbox(DefaultTypeTransformation.java:74)
	at org.codehaus.groovy.control.customizers.ASTTransformationCustomizer.findASTTranformationClass(ASTTransformationCustomizer.groovy:209)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:567)
	at org.codehaus.groovy.reflection.CachedMethod.invoke(CachedMethod.java:93)
	at org.codehaus.groovy.runtime.callsite.StaticMetaMethodSite$StaticMetaMethodSiteNoUnwrapNoCoerce.invoke(StaticMetaMethodSite.java:151)
	at org.codehaus.groovy.runtime.callsite.StaticMetaMethodSite.callStatic(StaticMetaMethodSite.java:102)
	at org.codehaus.groovy.runtime.callsite.AbstractCallSite.callStatic(AbstractCallSite.java:214)
	at org.codehaus.groovy.control.customizers.ASTTransformationCustomizer.findPhase(ASTTransformationCustomizer.groovy:226)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:567)
	at org.codehaus.groovy.reflection.CachedMethod.invoke(CachedMethod.java:93)
	at org.codehaus.groovy.runtime.callsite.StaticMetaMethodSite$StaticMetaMethodSiteNoUnwrapNoCoerce.invoke(StaticMetaMethodSite.java:151)
	at org.codehaus.groovy.runtime.callsite.StaticMetaMethodSite.callStatic(StaticMetaMethodSite.java:102)
	at org.codehaus.groovy.runtime.callsite.AbstractCallSite.callStatic(AbstractCallSite.java:214)
	at org.codehaus.groovy.control.customizers.ASTTransformationCustomizer.<init>(ASTTransformationCustomizer.groovy:180)
	at org.codehaus.groovy.control.customizers.ASTTransformationCustomizer.<init>(ASTTransformationCustomizer.groovy:188)
	at groovy.text.markup.MarkupTemplateEngine.<init>(MarkupTemplateEngine.java:94)
	at org.springframework.web.servlet.view.groovy.GroovyMarkupConfigurer.createTemplateEngine(GroovyMarkupConfigurer.java:160)
	at org.springframework.web.servlet.view.groovy.GroovyMarkupConfigurer.afterPropertiesSet(GroovyMarkupConfigurer.java:153)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1862)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1799)
	... 62 common frames omitted
2020-11-25 20:53:33,163 DEBUG  [main] BasicTypeRegistry: Adding type registration boolean -> org.hibernate.type.BooleanType@ff2266c
2020-11-25 20:53:33,167 DEBUG  [main] BasicTypeRegistry: Adding type registration boolean -> org.hibernate.type.BooleanType@ff2266c
2020-11-25 20:53:33,167 DEBUG  [main] BasicTypeRegistry: Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@ff2266c
2020-11-25 20:53:33,167 DEBUG  [main] BasicTypeRegistry: Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@1d585fb
2020-11-25 20:53:33,167 DEBUG  [main] BasicTypeRegistry: Adding type registration true_false -> org.hibernate.type.TrueFalseType@7c8f047a
2020-11-25 20:53:33,167 DEBUG  [main] BasicTypeRegistry: Adding type registration yes_no -> org.hibernate.type.YesNoType@d949bc4
2020-11-25 20:53:33,168 DEBUG  [main] BasicTypeRegistry: Adding type registration byte -> org.hibernate.type.ByteType@29c25bbc
2020-11-25 20:53:33,168 DEBUG  [main] BasicTypeRegistry: Adding type registration byte -> org.hibernate.type.ByteType@29c25bbc
2020-11-25 20:53:33,168 DEBUG  [main] BasicTypeRegistry: Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@29c25bbc
2020-11-25 20:53:33,168 DEBUG  [main] BasicTypeRegistry: Adding type registration character -> org.hibernate.type.CharacterType@403f7aa2
2020-11-25 20:53:33,168 DEBUG  [main] BasicTypeRegistry: Adding type registration char -> org.hibernate.type.CharacterType@403f7aa2
2020-11-25 20:53:33,168 DEBUG  [main] BasicTypeRegistry: Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@403f7aa2
2020-11-25 20:53:33,169 DEBUG  [main] BasicTypeRegistry: Adding type registration short -> org.hibernate.type.ShortType@38cb1606
2020-11-25 20:53:33,169 DEBUG  [main] BasicTypeRegistry: Adding type registration short -> org.hibernate.type.ShortType@38cb1606
2020-11-25 20:53:33,169 DEBUG  [main] BasicTypeRegistry: Adding type registration java.lang.Short -> org.hibernate.type.ShortType@38cb1606
2020-11-25 20:53:33,169 DEBUG  [main] BasicTypeRegistry: Adding type registration integer -> org.hibernate.type.IntegerType@5d3b6585
2020-11-25 20:53:33,169 DEBUG  [main] BasicTypeRegistry: Adding type registration int -> org.hibernate.type.IntegerType@5d3b6585
2020-11-25 20:53:33,169 DEBUG  [main] BasicTypeRegistry: Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@5d3b6585
2020-11-25 20:53:33,169 DEBUG  [main] BasicTypeRegistry: Adding type registration long -> org.hibernate.type.LongType@4fea5ee0
2020-11-25 20:53:33,169 DEBUG  [main] BasicTypeRegistry: Adding type registration long -> org.hibernate.type.LongType@4fea5ee0
2020-11-25 20:53:33,170 DEBUG  [main] BasicTypeRegistry: Adding type registration java.lang.Long -> org.hibernate.type.LongType@4fea5ee0
2020-11-25 20:53:33,170 DEBUG  [main] BasicTypeRegistry: Adding type registration float -> org.hibernate.type.FloatType@7b3085a3
2020-11-25 20:53:33,170 DEBUG  [main] BasicTypeRegistry: Adding type registration float -> org.hibernate.type.FloatType@7b3085a3
2020-11-25 20:53:33,170 DEBUG  [main] BasicTypeRegistry: Adding type registration java.lang.Float -> org.hibernate.type.FloatType@7b3085a3
2020-11-25 20:53:33,170 DEBUG  [main] BasicTypeRegistry: Adding type registration double -> org.hibernate.type.DoubleType@5a7a6d34
2020-11-25 20:53:33,170 DEBUG  [main] BasicTypeRegistry: Adding type registration double -> org.hibernate.type.DoubleType@5a7a6d34
2020-11-25 20:53:33,170 DEBUG  [main] BasicTypeRegistry: Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@5a7a6d34
2020-11-25 20:53:33,170 DEBUG  [main] BasicTypeRegistry: Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@5ae66c98
2020-11-25 20:53:33,171 DEBUG  [main] BasicTypeRegistry: Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@5ae66c98
2020-11-25 20:53:33,171 DEBUG  [main] BasicTypeRegistry: Adding type registration big_integer -> org.hibernate.type.BigIntegerType@223cbf0d
2020-11-25 20:53:33,171 DEBUG  [main] BasicTypeRegistry: Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@223cbf0d
2020-11-25 20:53:33,171 DEBUG  [main] BasicTypeRegistry: Adding type registration string -> org.hibernate.type.StringType@4f581211
2020-11-25 20:53:33,171 DEBUG  [main] BasicTypeRegistry: Adding type registration java.lang.String -> org.hibernate.type.StringType@4f581211
2020-11-25 20:53:33,171 DEBUG  [main] BasicTypeRegistry: Adding type registration nstring -> org.hibernate.type.StringNVarcharType@6697f3d
2020-11-25 20:53:33,171 DEBUG  [main] BasicTypeRegistry: Adding type registration ncharacter -> org.hibernate.type.CharacterNCharType@f1d1463
2020-11-25 20:53:33,171 DEBUG  [main] BasicTypeRegistry: Adding type registration url -> org.hibernate.type.UrlType@44ddb518
2020-11-25 20:53:33,172 DEBUG  [main] BasicTypeRegistry: Adding type registration java.net.URL -> org.hibernate.type.UrlType@44ddb518
2020-11-25 20:53:33,172 DEBUG  [main] BasicTypeRegistry: Adding type registration Duration -> org.hibernate.type.DurationType@49e0b123
2020-11-25 20:53:33,173 DEBUG  [main] BasicTypeRegistry: Adding type registration java.time.Duration -> org.hibernate.type.DurationType@49e0b123
2020-11-25 20:53:33,173 DEBUG  [main] BasicTypeRegistry: Adding type registration Instant -> org.hibernate.type.InstantType@40a28bda
2020-11-25 20:53:33,173 DEBUG  [main] BasicTypeRegistry: Adding type registration java.time.Instant -> org.hibernate.type.InstantType@40a28bda
2020-11-25 20:53:33,173 DEBUG  [main] BasicTypeRegistry: Adding type registration LocalDateTime -> org.hibernate.type.LocalDateTimeType@33430fc
2020-11-25 20:53:33,173 DEBUG  [main] BasicTypeRegistry: Adding type registration java.time.LocalDateTime -> org.hibernate.type.LocalDateTimeType@33430fc
2020-11-25 20:53:33,173 DEBUG  [main] BasicTypeRegistry: Adding type registration LocalDate -> org.hibernate.type.LocalDateType@d7055be
2020-11-25 20:53:33,173 DEBUG  [main] BasicTypeRegistry: Adding type registration java.time.LocalDate -> org.hibernate.type.LocalDateType@d7055be
2020-11-25 20:53:33,174 DEBUG  [main] BasicTypeRegistry: Adding type registration LocalTime -> org.hibernate.type.LocalTimeType@3c7d8a4
2020-11-25 20:53:33,174 DEBUG  [main] BasicTypeRegistry: Adding type registration java.time.LocalTime -> org.hibernate.type.LocalTimeType@3c7d8a4
2020-11-25 20:53:33,174 DEBUG  [main] BasicTypeRegistry: Adding type registration OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@7a117dc2
2020-11-25 20:53:33,174 DEBUG  [main] BasicTypeRegistry: Adding type registration java.time.OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@7a117dc2
2020-11-25 20:53:33,174 DEBUG  [main] BasicTypeRegistry: Adding type registration OffsetTime -> org.hibernate.type.OffsetTimeType@3c64339f
2020-11-25 20:53:33,174 DEBUG  [main] BasicTypeRegistry: Adding type registration java.time.OffsetTime -> org.hibernate.type.OffsetTimeType@3c64339f
2020-11-25 20:53:33,174 DEBUG  [main] BasicTypeRegistry: Adding type registration ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@30c8c6ab
2020-11-25 20:53:33,174 DEBUG  [main] BasicTypeRegistry: Adding type registration java.time.ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@30c8c6ab
2020-11-25 20:53:33,174 DEBUG  [main] BasicTypeRegistry: Adding type registration date -> org.hibernate.type.DateType@61c5fd78
2020-11-25 20:53:33,175 DEBUG  [main] BasicTypeRegistry: Adding type registration java.sql.Date -> org.hibernate.type.DateType@61c5fd78
2020-11-25 20:53:33,175 DEBUG  [main] BasicTypeRegistry: Adding type registration time -> org.hibernate.type.TimeType@77856cc5
2020-11-25 20:53:33,175 DEBUG  [main] BasicTypeRegistry: Adding type registration java.sql.Time -> org.hibernate.type.TimeType@77856cc5
2020-11-25 20:53:33,175 DEBUG  [main] BasicTypeRegistry: Adding type registration timestamp -> org.hibernate.type.TimestampType@12166229
2020-11-25 20:53:33,175 DEBUG  [main] BasicTypeRegistry: Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@12166229
2020-11-25 20:53:33,175 DEBUG  [main] BasicTypeRegistry: Adding type registration java.util.Date -> org.hibernate.type.TimestampType@12166229
2020-11-25 20:53:33,175 DEBUG  [main] BasicTypeRegistry: Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@2b4829aa
2020-11-25 20:53:33,175 DEBUG  [main] BasicTypeRegistry: Adding type registration calendar -> org.hibernate.type.CalendarType@3ec082a1
2020-11-25 20:53:33,175 DEBUG  [main] BasicTypeRegistry: Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@3ec082a1
2020-11-25 20:53:33,176 DEBUG  [main] BasicTypeRegistry: Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@3ec082a1
2020-11-25 20:53:33,176 DEBUG  [main] BasicTypeRegistry: Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@429f0ca8
2020-11-25 20:53:33,176 DEBUG  [main] BasicTypeRegistry: Adding type registration locale -> org.hibernate.type.LocaleType@11c3ce6a
2020-11-25 20:53:33,176 DEBUG  [main] BasicTypeRegistry: Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@11c3ce6a
2020-11-25 20:53:33,176 DEBUG  [main] BasicTypeRegistry: Adding type registration currency -> org.hibernate.type.CurrencyType@28519bfb
2020-11-25 20:53:33,176 DEBUG  [main] BasicTypeRegistry: Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@28519bfb
2020-11-25 20:53:33,177 DEBUG  [main] BasicTypeRegistry: Adding type registration timezone -> org.hibernate.type.TimeZoneType@7aa15a80
2020-11-25 20:53:33,177 DEBUG  [main] BasicTypeRegistry: Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@7aa15a80
2020-11-25 20:53:33,177 DEBUG  [main] BasicTypeRegistry: Adding type registration class -> org.hibernate.type.ClassType@48d5ca17
2020-11-25 20:53:33,177 DEBUG  [main] BasicTypeRegistry: Adding type registration java.lang.Class -> org.hibernate.type.ClassType@48d5ca17
2020-11-25 20:53:33,177 DEBUG  [main] BasicTypeRegistry: Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@79b8ecb
2020-11-25 20:53:33,177 DEBUG  [main] BasicTypeRegistry: Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@79b8ecb
2020-11-25 20:53:33,177 DEBUG  [main] BasicTypeRegistry: Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@c0013b8
2020-11-25 20:53:33,178 DEBUG  [main] BasicTypeRegistry: Adding type registration binary -> org.hibernate.type.BinaryType@2a42019a
2020-11-25 20:53:33,178 DEBUG  [main] BasicTypeRegistry: Adding type registration byte[] -> org.hibernate.type.BinaryType@2a42019a
2020-11-25 20:53:33,178 DEBUG  [main] BasicTypeRegistry: Adding type registration [B -> org.hibernate.type.BinaryType@2a42019a
2020-11-25 20:53:33,178 DEBUG  [main] BasicTypeRegistry: Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@495da9a7
2020-11-25 20:53:33,178 DEBUG  [main] BasicTypeRegistry: Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@495da9a7
2020-11-25 20:53:33,178 DEBUG  [main] BasicTypeRegistry: Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@495da9a7
2020-11-25 20:53:33,179 DEBUG  [main] BasicTypeRegistry: Adding type registration row_version -> org.hibernate.type.RowVersionType@35becbd4
2020-11-25 20:53:33,179 DEBUG  [main] BasicTypeRegistry: Adding type registration image -> org.hibernate.type.ImageType@30fa8a6b
2020-11-25 20:53:33,179 DEBUG  [main] BasicTypeRegistry: Adding type registration characters -> org.hibernate.type.CharArrayType@4c8d45cf
2020-11-25 20:53:33,179 DEBUG  [main] BasicTypeRegistry: Adding type registration char[] -> org.hibernate.type.CharArrayType@4c8d45cf
2020-11-25 20:53:33,179 DEBUG  [main] BasicTypeRegistry: Adding type registration [C -> org.hibernate.type.CharArrayType@4c8d45cf
2020-11-25 20:53:33,179 DEBUG  [main] BasicTypeRegistry: Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@5b490d5e
2020-11-25 20:53:33,180 DEBUG  [main] BasicTypeRegistry: Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@5b490d5e
2020-11-25 20:53:33,180 DEBUG  [main] BasicTypeRegistry: Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@5b490d5e
2020-11-25 20:53:33,180 DEBUG  [main] BasicTypeRegistry: Adding type registration text -> org.hibernate.type.TextType@18b04526
2020-11-25 20:53:33,180 DEBUG  [main] BasicTypeRegistry: Adding type registration ntext -> org.hibernate.type.NTextType@246df37b
2020-11-25 20:53:33,180 DEBUG  [main] BasicTypeRegistry: Adding type registration blob -> org.hibernate.type.BlobType@56881196
2020-11-25 20:53:33,180 DEBUG  [main] BasicTypeRegistry: Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@56881196
2020-11-25 20:53:33,181 DEBUG  [main] BasicTypeRegistry: Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@131c0b6f
2020-11-25 20:53:33,181 DEBUG  [main] BasicTypeRegistry: Adding type registration clob -> org.hibernate.type.ClobType@7fc1fd31
2020-11-25 20:53:33,181 DEBUG  [main] BasicTypeRegistry: Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@7fc1fd31
2020-11-25 20:53:33,181 DEBUG  [main] BasicTypeRegistry: Adding type registration nclob -> org.hibernate.type.NClobType@70777a65
2020-11-25 20:53:33,181 DEBUG  [main] BasicTypeRegistry: Adding type registration java.sql.NClob -> org.hibernate.type.NClobType@70777a65
2020-11-25 20:53:33,181 DEBUG  [main] BasicTypeRegistry: Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@2f6f4ac4
2020-11-25 20:53:33,181 DEBUG  [main] BasicTypeRegistry: Adding type registration materialized_nclob -> org.hibernate.type.MaterializedNClobType@7d685f4e
2020-11-25 20:53:33,181 DEBUG  [main] BasicTypeRegistry: Adding type registration serializable -> org.hibernate.type.SerializableType@319aa9ee
2020-11-25 20:53:33,181 DEBUG  [main] BasicTypeRegistry: Adding type registration object -> org.hibernate.type.ObjectType@54234569
2020-11-25 20:53:33,181 DEBUG  [main] BasicTypeRegistry: Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@54234569
2020-11-25 20:53:33,181 DEBUG  [main] BasicTypeRegistry: Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@27959c4e
2020-11-25 20:53:33,181 DEBUG  [main] BasicTypeRegistry: Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@1c023dcb
2020-11-25 20:53:33,182 DEBUG  [main] BasicTypeRegistry: Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@66d0d5ee
2020-11-25 20:53:33,182 DEBUG  [main] BasicTypeRegistry: Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@67aedd28
2020-11-25 20:53:33,182 DEBUG  [main] BasicTypeRegistry: Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@6c524a7f
2020-11-25 20:53:33,182 DEBUG  [main] BasicTypeRegistry: Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@61b3de5b
2020-11-25 20:53:33,182 DEBUG  [main] BasicTypeRegistry: Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@12c1826
2020-11-25 20:53:33,182 DEBUG  [main] BasicTypeRegistry: Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@107ac2b6
2020-11-25 20:53:33,209 DEBUG  [main] TypeConfiguration$Scope: Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@7bb3cbb4] to MetadataBuildingContext [org.hibernate.boot.internal.MetadataBuildingContextRootImpl@3fcc58f8]
2020-11-25 20:53:33,220 DEBUG  [main] EnumType: Using NAMED-based conversion for Enum com.sf.back.entities.Kind
2020-11-25 20:53:33,223 DEBUG  [main] EnumType: Using NAMED-based conversion for Enum com.sf.back.entities.Kind
2020-11-25 20:53:33,241 DEBUG  [main] TypeConfiguration$Scope: Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@7bb3cbb4] to SessionFactoryImpl [org.hibernate.internal.SessionFactoryImpl@26db7540]
2020-11-25 20:53:33,241 DEBUG  [main] EnumType: Using NAMED-based conversion for Enum com.sf.back.entities.Kind
2020-11-25 20:53:33,242 DEBUG  [main] EnumType: Using NAMED-based conversion for Enum com.sf.back.entities.Kind
2020-11-25 20:53:33,264 DEBUG  [main] EnumType: Using NAMED-based conversion for Enum com.sf.back.entities.Kind
2020-11-25 20:53:33,265 DEBUG  [main] EnumType: Using NAMED-based conversion for Enum com.sf.back.entities.Kind
2020-11-25 20:53:33,302 DEBUG  [main] EnumType: Using NAMED-based conversion for Enum com.sf.back.entities.Kind
2020-11-25 20:53:33,303 DEBUG  [main] EnumType: Using NAMED-based conversion for Enum com.sf.back.entities.Kind
2020-11-25 20:53:33,308 DEBUG  [main] EnumType: Using NAMED-based conversion for Enum com.sf.back.entities.Kind
2020-11-25 20:53:33,329 TRACE  [main] TypeConfiguration$Scope: Handling #sessionFactoryCreated from [org.hibernate.internal.SessionFactoryImpl@26db7540] for TypeConfiguration
2020-11-25 20:53:33,507 WARN   [main] JpaBaseConfiguration$JpaWebConfiguration: spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2020-11-25 20:53:33,654 WARN   [main] GenericWebApplicationContext: Exception encountered during context initialization - cancelling refresh attempt: org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'groovyMarkupConfigurer' defined in class path resource [org/springframework/boot/autoconfigure/groovy/template/GroovyTemplateAutoConfiguration$GroovyMarkupConfiguration.class]: Invocation of init method failed; nested exception is java.lang.reflect.InaccessibleObjectException: Unable to make jdk.internal.loader.ClassLoaders$AppClassLoader(jdk.internal.loader.ClassLoaders$PlatformClassLoader,jdk.internal.loader.URLClassPath) accessible: module java.base does not "opens jdk.internal.loader" to unnamed module @60fa3495
2020-11-25 20:53:33,659 TRACE  [main] TypeConfiguration$Scope: Handling #sessionFactoryClosed from [org.hibernate.internal.SessionFactoryImpl@26db7540] for TypeConfiguration
2020-11-25 20:53:33,659 DEBUG  [main] TypeConfiguration$Scope: Un-scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration$Scope@661ec798] from SessionFactory [org.hibernate.internal.SessionFactoryImpl@26db7540]
2020-11-25 20:53:33,683 ERROR  [main] SpringApplication: Application run failed
org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'groovyMarkupConfigurer' defined in class path resource [org/springframework/boot/autoconfigure/groovy/template/GroovyTemplateAutoConfiguration$GroovyMarkupConfiguration.class]: Invocation of init method failed; nested exception is java.lang.reflect.InaccessibleObjectException: Unable to make jdk.internal.loader.ClassLoaders$AppClassLoader(jdk.internal.loader.ClassLoaders$PlatformClassLoader,jdk.internal.loader.URLClassPath) accessible: module java.base does not "opens jdk.internal.loader" to unnamed module @60fa3495
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1803)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:595)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:517)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:323)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:222)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:321)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:202)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(DefaultListableBeanFactory.java:879)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:878)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:550)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:747)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:397)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:315)
	at org.springframework.boot.test.context.SpringBootContextLoader.loadContext(SpringBootContextLoader.java:125)
	at org.springframework.test.context.cache.DefaultCacheAwareContextLoaderDelegate.loadContextInternal(DefaultCacheAwareContextLoaderDelegate.java:99)
	at org.springframework.test.context.cache.DefaultCacheAwareContextLoaderDelegate.loadContext(DefaultCacheAwareContextLoaderDelegate.java:124)
	at org.springframework.test.context.support.DefaultTestContext.getApplicationContext(DefaultTestContext.java:123)
	at org.springframework.test.context.web.ServletTestExecutionListener.setUpRequestContextIfNecessary(ServletTestExecutionListener.java:190)
	at org.springframework.test.context.web.ServletTestExecutionListener.prepareTestInstance(ServletTestExecutionListener.java:132)
	at org.springframework.test.context.TestContextManager.prepareTestInstance(TestContextManager.java:244)
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner.createTest(SpringJUnit4ClassRunner.java:227)
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner$1.runReflectiveCall(SpringJUnit4ClassRunner.java:289)
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner.methodBlock(SpringJUnit4ClassRunner.java:291)
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner.runChild(SpringJUnit4ClassRunner.java:246)
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner.runChild(SpringJUnit4ClassRunner.java:97)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:290)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:71)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:58)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268)
	at org.junit.internal.runners.statements.RunBefores.evaluate(RunBefores.java:26)
	at org.springframework.test.context.junit4.statements.RunBeforeTestClassCallbacks.evaluate(RunBeforeTestClassCallbacks.java:61)
	at org.junit.internal.runners.statements.RunAfters.evaluate(RunAfters.java:27)
	at org.springframework.test.context.junit4.statements.RunAfterTestClassCallbacks.evaluate(RunAfterTestClassCallbacks.java:70)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:363)
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner.run(SpringJUnit4ClassRunner.java:190)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:137)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:115)
	at org.junit.vintage.engine.execution.RunnerExecutor.execute(RunnerExecutor.java:40)
	at java.base/java.util.stream.ForEachOps$ForEachOp$OfRef.accept(ForEachOps.java:183)
	at java.base/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:195)
	at java.base/java.util.Iterator.forEachRemaining(Iterator.java:133)
	at java.base/java.util.Spliterators$IteratorSpliterator.forEachRemaining(Spliterators.java:1801)
	at java.base/java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:484)
	at java.base/java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:474)
	at java.base/java.util.stream.ForEachOps$ForEachOp.evaluateSequential(ForEachOps.java:150)
	at java.base/java.util.stream.ForEachOps$ForEachOp$OfRef.evaluateSequential(ForEachOps.java:173)
	at java.base/java.util.stream.AbstractPipeline.evaluate(AbstractPipeline.java:234)
	at java.base/java.util.stream.ReferencePipeline.forEach(ReferencePipeline.java:497)
	at org.junit.vintage.engine.VintageTestEngine.executeAllChildren(VintageTestEngine.java:80)
	at org.junit.vintage.engine.VintageTestEngine.execute(VintageTestEngine.java:71)
	at org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:220)
	at org.junit.platform.launcher.core.DefaultLauncher.lambda$execute$6(DefaultLauncher.java:188)
	at org.junit.platform.launcher.core.DefaultLauncher.withInterceptedStreams(DefaultLauncher.java:202)
	at org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:181)
	at org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:128)
	at org.apache.maven.surefire.junitplatform.JUnitPlatformProvider.invokeAllTests(JUnitPlatformProvider.java:150)
	at org.apache.maven.surefire.junitplatform.JUnitPlatformProvider.invoke(JUnitPlatformProvider.java:124)
	at org.apache.maven.surefire.booter.ForkedBooter.invokeProviderInSameClassLoader(ForkedBooter.java:384)
	at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:345)
	at org.apache.maven.surefire.booter.ForkedBooter.execute(ForkedBooter.java:126)
	at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:418)
Caused by: java.lang.reflect.InaccessibleObjectException: Unable to make jdk.internal.loader.ClassLoaders$AppClassLoader(jdk.internal.loader.ClassLoaders$PlatformClassLoader,jdk.internal.loader.URLClassPath) accessible: module java.base does not "opens jdk.internal.loader" to unnamed module @60fa3495
	at java.base/java.lang.reflect.AccessibleObject.checkCanSetAccessible(AccessibleObject.java:344)
	at java.base/java.lang.reflect.AccessibleObject.checkCanSetAccessible(AccessibleObject.java:284)
	at java.base/java.lang.reflect.Constructor.checkCanSetAccessible(Constructor.java:189)
	at java.base/java.lang.reflect.Constructor.setAccessible(Constructor.java:182)
	at org.codehaus.groovy.reflection.CachedConstructor$1.run(CachedConstructor.java:44)
	at java.base/java.security.AccessController.doPrivileged(AccessController.java:312)
	at org.codehaus.groovy.reflection.CachedConstructor.<init>(CachedConstructor.java:42)
	at org.codehaus.groovy.reflection.CachedClass$2.initValue(CachedClass.java:79)
	at org.codehaus.groovy.reflection.CachedClass$2.initValue(CachedClass.java:69)
	at org.codehaus.groovy.util.LazyReference.getLocked(LazyReference.java:49)
	at org.codehaus.groovy.util.LazyReference.get(LazyReference.java:36)
	at org.codehaus.groovy.reflection.CachedClass.getConstructors(CachedClass.java:268)
	at groovy.lang.MetaClassImpl.<init>(MetaClassImpl.java:218)
	at groovy.lang.MetaClassImpl.<init>(MetaClassImpl.java:228)
	at groovy.lang.MetaClassRegistry$MetaClassCreationHandle.createNormalMetaClass(MetaClassRegistry.java:171)
	at groovy.lang.MetaClassRegistry$MetaClassCreationHandle.createWithCustomLookup(MetaClassRegistry.java:161)
	at groovy.lang.MetaClassRegistry$MetaClassCreationHandle.create(MetaClassRegistry.java:144)
	at org.codehaus.groovy.reflection.ClassInfo.getMetaClassUnderLock(ClassInfo.java:253)
	at org.codehaus.groovy.reflection.ClassInfo.getMetaClass(ClassInfo.java:285)
	at org.codehaus.groovy.reflection.ClassInfo.getMetaClass(ClassInfo.java:295)
	at org.codehaus.groovy.runtime.metaclass.MetaClassRegistryImpl.getMetaClass(MetaClassRegistryImpl.java:261)
	at org.codehaus.groovy.runtime.InvokerHelper.getMetaClass(InvokerHelper.java:873)
	at org.codehaus.groovy.runtime.InvokerHelper.invokePojoMethod(InvokerHelper.java:906)
	at org.codehaus.groovy.runtime.InvokerHelper.invokeMethod(InvokerHelper.java:898)
	at org.codehaus.groovy.runtime.typehandling.DefaultTypeTransformation.castToBoolean(DefaultTypeTransformation.java:185)
	at org.codehaus.groovy.runtime.typehandling.DefaultTypeTransformation.booleanUnbox(DefaultTypeTransformation.java:74)
	at org.codehaus.groovy.control.customizers.ASTTransformationCustomizer.findASTTranformationClass(ASTTransformationCustomizer.groovy:209)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:567)
	at org.codehaus.groovy.reflection.CachedMethod.invoke(CachedMethod.java:93)
	at org.codehaus.groovy.runtime.callsite.StaticMetaMethodSite$StaticMetaMethodSiteNoUnwrapNoCoerce.invoke(StaticMetaMethodSite.java:151)
	at org.codehaus.groovy.runtime.callsite.StaticMetaMethodSite.callStatic(StaticMetaMethodSite.java:102)
	at org.codehaus.groovy.runtime.callsite.AbstractCallSite.callStatic(AbstractCallSite.java:214)
	at org.codehaus.groovy.control.customizers.ASTTransformationCustomizer.findPhase(ASTTransformationCustomizer.groovy:226)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:567)
	at org.codehaus.groovy.reflection.CachedMethod.invoke(CachedMethod.java:93)
	at org.codehaus.groovy.runtime.callsite.StaticMetaMethodSite$StaticMetaMethodSiteNoUnwrapNoCoerce.invoke(StaticMetaMethodSite.java:151)
	at org.codehaus.groovy.runtime.callsite.StaticMetaMethodSite.callStatic(StaticMetaMethodSite.java:102)
	at org.codehaus.groovy.runtime.callsite.AbstractCallSite.callStatic(AbstractCallSite.java:214)
	at org.codehaus.groovy.control.customizers.ASTTransformationCustomizer.<init>(ASTTransformationCustomizer.groovy:180)
	at org.codehaus.groovy.control.customizers.ASTTransformationCustomizer.<init>(ASTTransformationCustomizer.groovy:188)
	at groovy.text.markup.MarkupTemplateEngine.<init>(MarkupTemplateEngine.java:94)
	at org.springframework.web.servlet.view.groovy.GroovyMarkupConfigurer.createTemplateEngine(GroovyMarkupConfigurer.java:160)
	at org.springframework.web.servlet.view.groovy.GroovyMarkupConfigurer.afterPropertiesSet(GroovyMarkupConfigurer.java:153)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1862)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1799)
	... 62 common frames omitted
2020-11-25 20:53:33,684 ERROR  [main] TestContextManager: Caught exception while allowing TestExecutionListener [org.springframework.test.context.web.ServletTestExecutionListener@170b27a7] to prepare test instance [com.sf.math.algebra.solvers.PolynomialSolverIntervalTest@383b3357]
java.lang.IllegalStateException: Failed to load ApplicationContext
	at org.springframework.test.context.cache.DefaultCacheAwareContextLoaderDelegate.loadContext(DefaultCacheAwareContextLoaderDelegate.java:132)
	at org.springframework.test.context.support.DefaultTestContext.getApplicationContext(DefaultTestContext.java:123)
	at org.springframework.test.context.web.ServletTestExecutionListener.setUpRequestContextIfNecessary(ServletTestExecutionListener.java:190)
	at org.springframework.test.context.web.ServletTestExecutionListener.prepareTestInstance(ServletTestExecutionListener.java:132)
	at org.springframework.test.context.TestContextManager.prepareTestInstance(TestContextManager.java:244)
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner.createTest(SpringJUnit4ClassRunner.java:227)
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner$1.runReflectiveCall(SpringJUnit4ClassRunner.java:289)
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner.methodBlock(SpringJUnit4ClassRunner.java:291)
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner.runChild(SpringJUnit4ClassRunner.java:246)
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner.runChild(SpringJUnit4ClassRunner.java:97)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:290)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:71)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:58)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268)
	at org.junit.internal.runners.statements.RunBefores.evaluate(RunBefores.java:26)
	at org.springframework.test.context.junit4.statements.RunBeforeTestClassCallbacks.evaluate(RunBeforeTestClassCallbacks.java:61)
	at org.junit.internal.runners.statements.RunAfters.evaluate(RunAfters.java:27)
	at org.springframework.test.context.junit4.statements.RunAfterTestClassCallbacks.evaluate(RunAfterTestClassCallbacks.java:70)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:363)
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner.run(SpringJUnit4ClassRunner.java:190)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:137)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:115)
	at org.junit.vintage.engine.execution.RunnerExecutor.execute(RunnerExecutor.java:40)
	at java.base/java.util.stream.ForEachOps$ForEachOp$OfRef.accept(ForEachOps.java:183)
	at java.base/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:195)
	at java.base/java.util.Iterator.forEachRemaining(Iterator.java:133)
	at java.base/java.util.Spliterators$IteratorSpliterator.forEachRemaining(Spliterators.java:1801)
	at java.base/java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:484)
	at java.base/java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:474)
	at java.base/java.util.stream.ForEachOps$ForEachOp.evaluateSequential(ForEachOps.java:150)
	at java.base/java.util.stream.ForEachOps$ForEachOp$OfRef.evaluateSequential(ForEachOps.java:173)
	at java.base/java.util.stream.AbstractPipeline.evaluate(AbstractPipeline.java:234)
	at java.base/java.util.stream.ReferencePipeline.forEach(ReferencePipeline.java:497)
	at org.junit.vintage.engine.VintageTestEngine.executeAllChildren(VintageTestEngine.java:80)
	at org.junit.vintage.engine.VintageTestEngine.execute(VintageTestEngine.java:71)
	at org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:220)
	at org.junit.platform.launcher.core.DefaultLauncher.lambda$execute$6(DefaultLauncher.java:188)
	at org.junit.platform.launcher.core.DefaultLauncher.withInterceptedStreams(DefaultLauncher.java:202)
	at org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:181)
	at org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:128)
	at org.apache.maven.surefire.junitplatform.JUnitPlatformProvider.invokeAllTests(JUnitPlatformProvider.java:150)
	at org.apache.maven.surefire.junitplatform.JUnitPlatformProvider.invoke(JUnitPlatformProvider.java:124)
	at org.apache.maven.surefire.booter.ForkedBooter.invokeProviderInSameClassLoader(ForkedBooter.java:384)
	at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:345)
	at org.apache.maven.surefire.booter.ForkedBooter.execute(ForkedBooter.java:126)
	at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:418)
Caused by: org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'groovyMarkupConfigurer' defined in class path resource [org/springframework/boot/autoconfigure/groovy/template/GroovyTemplateAutoConfiguration$GroovyMarkupConfiguration.class]: Invocation of init method failed; nested exception is java.lang.reflect.InaccessibleObjectException: Unable to make jdk.internal.loader.ClassLoaders$AppClassLoader(jdk.internal.loader.ClassLoaders$PlatformClassLoader,jdk.internal.loader.URLClassPath) accessible: module java.base does not "opens jdk.internal.loader" to unnamed module @60fa3495
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1803)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:595)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:517)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:323)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:222)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:321)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:202)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(DefaultListableBeanFactory.java:879)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:878)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:550)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:747)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:397)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:315)
	at org.springframework.boot.test.context.SpringBootContextLoader.loadContext(SpringBootContextLoader.java:125)
	at org.springframework.test.context.cache.DefaultCacheAwareContextLoaderDelegate.loadContextInternal(DefaultCacheAwareContextLoaderDelegate.java:99)
	at org.springframework.test.context.cache.DefaultCacheAwareContextLoaderDelegate.loadContext(DefaultCacheAwareContextLoaderDelegate.java:124)
	... 47 common frames omitted
Caused by: java.lang.reflect.InaccessibleObjectException: Unable to make jdk.internal.loader.ClassLoaders$AppClassLoader(jdk.internal.loader.ClassLoaders$PlatformClassLoader,jdk.internal.loader.URLClassPath) accessible: module java.base does not "opens jdk.internal.loader" to unnamed module @60fa3495
	at java.base/java.lang.reflect.AccessibleObject.checkCanSetAccessible(AccessibleObject.java:344)
	at java.base/java.lang.reflect.AccessibleObject.checkCanSetAccessible(AccessibleObject.java:284)
	at java.base/java.lang.reflect.Constructor.checkCanSetAccessible(Constructor.java:189)
	at java.base/java.lang.reflect.Constructor.setAccessible(Constructor.java:182)
	at org.codehaus.groovy.reflection.CachedConstructor$1.run(CachedConstructor.java:44)
	at java.base/java.security.AccessController.doPrivileged(AccessController.java:312)
	at org.codehaus.groovy.reflection.CachedConstructor.<init>(CachedConstructor.java:42)
	at org.codehaus.groovy.reflection.CachedClass$2.initValue(CachedClass.java:79)
	at org.codehaus.groovy.reflection.CachedClass$2.initValue(CachedClass.java:69)
	at org.codehaus.groovy.util.LazyReference.getLocked(LazyReference.java:49)
	at org.codehaus.groovy.util.LazyReference.get(LazyReference.java:36)
	at org.codehaus.groovy.reflection.CachedClass.getConstructors(CachedClass.java:268)
	at groovy.lang.MetaClassImpl.<init>(MetaClassImpl.java:218)
	at groovy.lang.MetaClassImpl.<init>(MetaClassImpl.java:228)
	at groovy.lang.MetaClassRegistry$MetaClassCreationHandle.createNormalMetaClass(MetaClassRegistry.java:171)
	at groovy.lang.MetaClassRegistry$MetaClassCreationHandle.createWithCustomLookup(MetaClassRegistry.java:161)
	at groovy.lang.MetaClassRegistry$MetaClassCreationHandle.create(MetaClassRegistry.java:144)
	at org.codehaus.groovy.reflection.ClassInfo.getMetaClassUnderLock(ClassInfo.java:253)
	at org.codehaus.groovy.reflection.ClassInfo.getMetaClass(ClassInfo.java:285)
	at org.codehaus.groovy.reflection.ClassInfo.getMetaClass(ClassInfo.java:295)
	at org.codehaus.groovy.runtime.metaclass.MetaClassRegistryImpl.getMetaClass(MetaClassRegistryImpl.java:261)
	at org.codehaus.groovy.runtime.InvokerHelper.getMetaClass(InvokerHelper.java:873)
	at org.codehaus.groovy.runtime.InvokerHelper.invokePojoMethod(InvokerHelper.java:906)
	at org.codehaus.groovy.runtime.InvokerHelper.invokeMethod(InvokerHelper.java:898)
	at org.codehaus.groovy.runtime.typehandling.DefaultTypeTransformation.castToBoolean(DefaultTypeTransformation.java:185)
	at org.codehaus.groovy.runtime.typehandling.DefaultTypeTransformation.booleanUnbox(DefaultTypeTransformation.java:74)
	at org.codehaus.groovy.control.customizers.ASTTransformationCustomizer.findASTTranformationClass(ASTTransformationCustomizer.groovy:209)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:567)
	at org.codehaus.groovy.reflection.CachedMethod.invoke(CachedMethod.java:93)
	at org.codehaus.groovy.runtime.callsite.StaticMetaMethodSite$StaticMetaMethodSiteNoUnwrapNoCoerce.invoke(StaticMetaMethodSite.java:151)
	at org.codehaus.groovy.runtime.callsite.StaticMetaMethodSite.callStatic(StaticMetaMethodSite.java:102)
	at org.codehaus.groovy.runtime.callsite.AbstractCallSite.callStatic(AbstractCallSite.java:214)
	at org.codehaus.groovy.control.customizers.ASTTransformationCustomizer.findPhase(ASTTransformationCustomizer.groovy:226)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:567)
	at org.codehaus.groovy.reflection.CachedMethod.invoke(CachedMethod.java:93)
	at org.codehaus.groovy.runtime.callsite.StaticMetaMethodSite$StaticMetaMethodSiteNoUnwrapNoCoerce.invoke(StaticMetaMethodSite.java:151)
	at org.codehaus.groovy.runtime.callsite.StaticMetaMethodSite.callStatic(StaticMetaMethodSite.java:102)
	at org.codehaus.groovy.runtime.callsite.AbstractCallSite.callStatic(AbstractCallSite.java:214)
	at org.codehaus.groovy.control.customizers.ASTTransformationCustomizer.<init>(ASTTransformationCustomizer.groovy:180)
	at org.codehaus.groovy.control.customizers.ASTTransformationCustomizer.<init>(ASTTransformationCustomizer.groovy:188)
	at groovy.text.markup.MarkupTemplateEngine.<init>(MarkupTemplateEngine.java:94)
	at org.springframework.web.servlet.view.groovy.GroovyMarkupConfigurer.createTemplateEngine(GroovyMarkupConfigurer.java:160)
	at org.springframework.web.servlet.view.groovy.GroovyMarkupConfigurer.afterPropertiesSet(GroovyMarkupConfigurer.java:153)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1862)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1799)
	... 62 common frames omitted
2020-11-25 20:53:34,508 DEBUG  [main] BasicTypeRegistry: Adding type registration boolean -> org.hibernate.type.BooleanType@ff2266c
2020-11-25 20:53:34,513 DEBUG  [main] BasicTypeRegistry: Adding type registration boolean -> org.hibernate.type.BooleanType@ff2266c
2020-11-25 20:53:34,513 DEBUG  [main] BasicTypeRegistry: Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@ff2266c
2020-11-25 20:53:34,514 DEBUG  [main] BasicTypeRegistry: Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@1d585fb
2020-11-25 20:53:34,514 DEBUG  [main] BasicTypeRegistry: Adding type registration true_false -> org.hibernate.type.TrueFalseType@7c8f047a
2020-11-25 20:53:34,514 DEBUG  [main] BasicTypeRegistry: Adding type registration yes_no -> org.hibernate.type.YesNoType@d949bc4
2020-11-25 20:53:34,515 DEBUG  [main] BasicTypeRegistry: Adding type registration byte -> org.hibernate.type.ByteType@29c25bbc
2020-11-25 20:53:34,515 DEBUG  [main] BasicTypeRegistry: Adding type registration byte -> org.hibernate.type.ByteType@29c25bbc
2020-11-25 20:53:34,515 DEBUG  [main] BasicTypeRegistry: Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@29c25bbc
2020-11-25 20:53:34,515 DEBUG  [main] BasicTypeRegistry: Adding type registration character -> org.hibernate.type.CharacterType@403f7aa2
2020-11-25 20:53:34,516 DEBUG  [main] BasicTypeRegistry: Adding type registration char -> org.hibernate.type.CharacterType@403f7aa2
2020-11-25 20:53:34,516 DEBUG  [main] BasicTypeRegistry: Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@403f7aa2
2020-11-25 20:53:34,516 DEBUG  [main] BasicTypeRegistry: Adding type registration short -> org.hibernate.type.ShortType@38cb1606
2020-11-25 20:53:34,517 DEBUG  [main] BasicTypeRegistry: Adding type registration short -> org.hibernate.type.ShortType@38cb1606
2020-11-25 20:53:34,517 DEBUG  [main] BasicTypeRegistry: Adding type registration java.lang.Short -> org.hibernate.type.ShortType@38cb1606
2020-11-25 20:53:34,517 DEBUG  [main] BasicTypeRegistry: Adding type registration integer -> org.hibernate.type.IntegerType@5d3b6585
2020-11-25 20:53:34,517 DEBUG  [main] BasicTypeRegistry: Adding type registration int -> org.hibernate.type.IntegerType@5d3b6585
2020-11-25 20:53:34,517 DEBUG  [main] BasicTypeRegistry: Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@5d3b6585
2020-11-25 20:53:34,517 DEBUG  [main] BasicTypeRegistry: Adding type registration long -> org.hibernate.type.LongType@4fea5ee0
2020-11-25 20:53:34,517 DEBUG  [main] BasicTypeRegistry: Adding type registration long -> org.hibernate.type.LongType@4fea5ee0
2020-11-25 20:53:34,518 DEBUG  [main] BasicTypeRegistry: Adding type registration java.lang.Long -> org.hibernate.type.LongType@4fea5ee0
2020-11-25 20:53:34,518 DEBUG  [main] BasicTypeRegistry: Adding type registration float -> org.hibernate.type.FloatType@7b3085a3
2020-11-25 20:53:34,518 DEBUG  [main] BasicTypeRegistry: Adding type registration float -> org.hibernate.type.FloatType@7b3085a3
2020-11-25 20:53:34,518 DEBUG  [main] BasicTypeRegistry: Adding type registration java.lang.Float -> org.hibernate.type.FloatType@7b3085a3
2020-11-25 20:53:34,518 DEBUG  [main] BasicTypeRegistry: Adding type registration double -> org.hibernate.type.DoubleType@5a7a6d34
2020-11-25 20:53:34,518 DEBUG  [main] BasicTypeRegistry: Adding type registration double -> org.hibernate.type.DoubleType@5a7a6d34
2020-11-25 20:53:34,518 DEBUG  [main] BasicTypeRegistry: Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@5a7a6d34
2020-11-25 20:53:34,519 DEBUG  [main] BasicTypeRegistry: Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@5ae66c98
2020-11-25 20:53:34,519 DEBUG  [main] BasicTypeRegistry: Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@5ae66c98
2020-11-25 20:53:34,519 DEBUG  [main] BasicTypeRegistry: Adding type registration big_integer -> org.hibernate.type.BigIntegerType@223cbf0d
2020-11-25 20:53:34,519 DEBUG  [main] BasicTypeRegistry: Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@223cbf0d
2020-11-25 20:53:34,519 DEBUG  [main] BasicTypeRegistry: Adding type registration string -> org.hibernate.type.StringType@4f581211
2020-11-25 20:53:34,519 DEBUG  [main] BasicTypeRegistry: Adding type registration java.lang.String -> org.hibernate.type.StringType@4f581211
2020-11-25 20:53:34,519 DEBUG  [main] BasicTypeRegistry: Adding type registration nstring -> org.hibernate.type.StringNVarcharType@6697f3d
2020-11-25 20:53:34,520 DEBUG  [main] BasicTypeRegistry: Adding type registration ncharacter -> org.hibernate.type.CharacterNCharType@f1d1463
2020-11-25 20:53:34,520 DEBUG  [main] BasicTypeRegistry: Adding type registration url -> org.hibernate.type.UrlType@44ddb518
2020-11-25 20:53:34,520 DEBUG  [main] BasicTypeRegistry: Adding type registration java.net.URL -> org.hibernate.type.UrlType@44ddb518
2020-11-25 20:53:34,521 DEBUG  [main] BasicTypeRegistry: Adding type registration Duration -> org.hibernate.type.DurationType@49e0b123
2020-11-25 20:53:34,521 DEBUG  [main] BasicTypeRegistry: Adding type registration java.time.Duration -> org.hibernate.type.DurationType@49e0b123
2020-11-25 20:53:34,521 DEBUG  [main] BasicTypeRegistry: Adding type registration Instant -> org.hibernate.type.InstantType@40a28bda
2020-11-25 20:53:34,521 DEBUG  [main] BasicTypeRegistry: Adding type registration java.time.Instant -> org.hibernate.type.InstantType@40a28bda
2020-11-25 20:53:34,522 DEBUG  [main] BasicTypeRegistry: Adding type registration LocalDateTime -> org.hibernate.type.LocalDateTimeType@33430fc
2020-11-25 20:53:34,522 DEBUG  [main] BasicTypeRegistry: Adding type registration java.time.LocalDateTime -> org.hibernate.type.LocalDateTimeType@33430fc
2020-11-25 20:53:34,522 DEBUG  [main] BasicTypeRegistry: Adding type registration LocalDate -> org.hibernate.type.LocalDateType@d7055be
2020-11-25 20:53:34,522 DEBUG  [main] BasicTypeRegistry: Adding type registration java.time.LocalDate -> org.hibernate.type.LocalDateType@d7055be
2020-11-25 20:53:34,523 DEBUG  [main] BasicTypeRegistry: Adding type registration LocalTime -> org.hibernate.type.LocalTimeType@3c7d8a4
2020-11-25 20:53:34,523 DEBUG  [main] BasicTypeRegistry: Adding type registration java.time.LocalTime -> org.hibernate.type.LocalTimeType@3c7d8a4
2020-11-25 20:53:34,523 DEBUG  [main] BasicTypeRegistry: Adding type registration OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@7a117dc2
2020-11-25 20:53:34,523 DEBUG  [main] BasicTypeRegistry: Adding type registration java.time.OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@7a117dc2
2020-11-25 20:53:34,523 DEBUG  [main] BasicTypeRegistry: Adding type registration OffsetTime -> org.hibernate.type.OffsetTimeType@3c64339f
2020-11-25 20:53:34,523 DEBUG  [main] BasicTypeRegistry: Adding type registration java.time.OffsetTime -> org.hibernate.type.OffsetTimeType@3c64339f
2020-11-25 20:53:34,524 DEBUG  [main] BasicTypeRegistry: Adding type registration ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@30c8c6ab
2020-11-25 20:53:34,524 DEBUG  [main] BasicTypeRegistry: Adding type registration java.time.ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@30c8c6ab
2020-11-25 20:53:34,524 DEBUG  [main] BasicTypeRegistry: Adding type registration date -> org.hibernate.type.DateType@61c5fd78
2020-11-25 20:53:34,524 DEBUG  [main] BasicTypeRegistry: Adding type registration java.sql.Date -> org.hibernate.type.DateType@61c5fd78
2020-11-25 20:53:34,524 DEBUG  [main] BasicTypeRegistry: Adding type registration time -> org.hibernate.type.TimeType@77856cc5
2020-11-25 20:53:34,524 DEBUG  [main] BasicTypeRegistry: Adding type registration java.sql.Time -> org.hibernate.type.TimeType@77856cc5
2020-11-25 20:53:34,524 DEBUG  [main] BasicTypeRegistry: Adding type registration timestamp -> org.hibernate.type.TimestampType@12166229
2020-11-25 20:53:34,525 DEBUG  [main] BasicTypeRegistry: Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@12166229
2020-11-25 20:53:34,525 DEBUG  [main] BasicTypeRegistry: Adding type registration java.util.Date -> org.hibernate.type.TimestampType@12166229
2020-11-25 20:53:34,525 DEBUG  [main] BasicTypeRegistry: Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@2b4829aa
2020-11-25 20:53:34,525 DEBUG  [main] BasicTypeRegistry: Adding type registration calendar -> org.hibernate.type.CalendarType@3ec082a1
2020-11-25 20:53:34,525 DEBUG  [main] BasicTypeRegistry: Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@3ec082a1
2020-11-25 20:53:34,525 DEBUG  [main] BasicTypeRegistry: Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@3ec082a1
2020-11-25 20:53:34,526 DEBUG  [main] BasicTypeRegistry: Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@429f0ca8
2020-11-25 20:53:34,526 DEBUG  [main] BasicTypeRegistry: Adding type registration locale -> org.hibernate.type.LocaleType@11c3ce6a
2020-11-25 20:53:34,526 DEBUG  [main] BasicTypeRegistry: Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@11c3ce6a
2020-11-25 20:53:34,526 DEBUG  [main] BasicTypeRegistry: Adding type registration currency -> org.hibernate.type.CurrencyType@28519bfb
2020-11-25 20:53:34,527 DEBUG  [main] BasicTypeRegistry: Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@28519bfb
2020-11-25 20:53:34,527 DEBUG  [main] BasicTypeRegistry: Adding type registration timezone -> org.hibernate.type.TimeZoneType@7aa15a80
2020-11-25 20:53:34,527 DEBUG  [main] BasicTypeRegistry: Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@7aa15a80
2020-11-25 20:53:34,527 DEBUG  [main] BasicTypeRegistry: Adding type registration class -> org.hibernate.type.ClassType@48d5ca17
2020-11-25 20:53:34,527 DEBUG  [main] BasicTypeRegistry: Adding type registration java.lang.Class -> org.hibernate.type.ClassType@48d5ca17
2020-11-25 20:53:34,527 DEBUG  [main] BasicTypeRegistry: Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@79b8ecb
2020-11-25 20:53:34,527 DEBUG  [main] BasicTypeRegistry: Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@79b8ecb
2020-11-25 20:53:34,528 DEBUG  [main] BasicTypeRegistry: Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@c0013b8
2020-11-25 20:53:34,528 DEBUG  [main] BasicTypeRegistry: Adding type registration binary -> org.hibernate.type.BinaryType@2a42019a
2020-11-25 20:53:34,528 DEBUG  [main] BasicTypeRegistry: Adding type registration byte[] -> org.hibernate.type.BinaryType@2a42019a
2020-11-25 20:53:34,528 DEBUG  [main] BasicTypeRegistry: Adding type registration [B -> org.hibernate.type.BinaryType@2a42019a
2020-11-25 20:53:34,529 DEBUG  [main] BasicTypeRegistry: Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@495da9a7
2020-11-25 20:53:34,529 DEBUG  [main] BasicTypeRegistry: Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@495da9a7
2020-11-25 20:53:34,529 DEBUG  [main] BasicTypeRegistry: Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@495da9a7
2020-11-25 20:53:34,529 DEBUG  [main] BasicTypeRegistry: Adding type registration row_version -> org.hibernate.type.RowVersionType@35becbd4
2020-11-25 20:53:34,530 DEBUG  [main] BasicTypeRegistry: Adding type registration image -> org.hibernate.type.ImageType@30fa8a6b
2020-11-25 20:53:34,531 DEBUG  [main] BasicTypeRegistry: Adding type registration characters -> org.hibernate.type.CharArrayType@4c8d45cf
2020-11-25 20:53:34,531 DEBUG  [main] BasicTypeRegistry: Adding type registration char[] -> org.hibernate.type.CharArrayType@4c8d45cf
2020-11-25 20:53:34,531 DEBUG  [main] BasicTypeRegistry: Adding type registration [C -> org.hibernate.type.CharArrayType@4c8d45cf
2020-11-25 20:53:34,531 DEBUG  [main] BasicTypeRegistry: Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@5b490d5e
2020-11-25 20:53:34,531 DEBUG  [main] BasicTypeRegistry: Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@5b490d5e
2020-11-25 20:53:34,532 DEBUG  [main] BasicTypeRegistry: Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@5b490d5e
2020-11-25 20:53:34,532 DEBUG  [main] BasicTypeRegistry: Adding type registration text -> org.hibernate.type.TextType@18b04526
2020-11-25 20:53:34,532 DEBUG  [main] BasicTypeRegistry: Adding type registration ntext -> org.hibernate.type.NTextType@246df37b
2020-11-25 20:53:34,532 DEBUG  [main] BasicTypeRegistry: Adding type registration blob -> org.hibernate.type.BlobType@56881196
2020-11-25 20:53:34,532 DEBUG  [main] BasicTypeRegistry: Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@56881196
2020-11-25 20:53:34,532 DEBUG  [main] BasicTypeRegistry: Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@131c0b6f
2020-11-25 20:53:34,532 DEBUG  [main] BasicTypeRegistry: Adding type registration clob -> org.hibernate.type.ClobType@7fc1fd31
2020-11-25 20:53:34,533 DEBUG  [main] BasicTypeRegistry: Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@7fc1fd31
2020-11-25 20:53:34,533 DEBUG  [main] BasicTypeRegistry: Adding type registration nclob -> org.hibernate.type.NClobType@70777a65
2020-11-25 20:53:34,533 DEBUG  [main] BasicTypeRegistry: Adding type registration java.sql.NClob -> org.hibernate.type.NClobType@70777a65
2020-11-25 20:53:34,533 DEBUG  [main] BasicTypeRegistry: Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@2f6f4ac4
2020-11-25 20:53:34,533 DEBUG  [main] BasicTypeRegistry: Adding type registration materialized_nclob -> org.hibernate.type.MaterializedNClobType@7d685f4e
2020-11-25 20:53:34,533 DEBUG  [main] BasicTypeRegistry: Adding type registration serializable -> org.hibernate.type.SerializableType@319aa9ee
2020-11-25 20:53:34,533 DEBUG  [main] BasicTypeRegistry: Adding type registration object -> org.hibernate.type.ObjectType@54234569
2020-11-25 20:53:34,534 DEBUG  [main] BasicTypeRegistry: Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@54234569
2020-11-25 20:53:34,534 DEBUG  [main] BasicTypeRegistry: Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@7ec9d826
2020-11-25 20:53:34,534 DEBUG  [main] BasicTypeRegistry: Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@6c1a9613
2020-11-25 20:53:34,534 DEBUG  [main] BasicTypeRegistry: Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@1dd17c0c
2020-11-25 20:53:34,534 DEBUG  [main] BasicTypeRegistry: Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@441e789e
2020-11-25 20:53:34,534 DEBUG  [main] BasicTypeRegistry: Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@74a680d3
2020-11-25 20:53:34,535 DEBUG  [main] BasicTypeRegistry: Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@4cb42a5a
2020-11-25 20:53:34,535 DEBUG  [main] BasicTypeRegistry: Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@5a131edc
2020-11-25 20:53:34,535 DEBUG  [main] BasicTypeRegistry: Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@6dfe4788
2020-11-25 20:53:34,564 DEBUG  [main] TypeConfiguration$Scope: Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@2c66be14] to MetadataBuildingContext [org.hibernate.boot.internal.MetadataBuildingContextRootImpl@2e78213c]
2020-11-25 20:53:34,604 DEBUG  [main] EnumType: Using NAMED-based conversion for Enum com.sf.back.entities.Kind
2020-11-25 20:53:34,607 DEBUG  [main] EnumType: Using NAMED-based conversion for Enum com.sf.back.entities.Kind
2020-11-25 20:53:34,635 DEBUG  [main] TypeConfiguration$Scope: Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@2c66be14] to SessionFactoryImpl [org.hibernate.internal.SessionFactoryImpl@794c22cd]
2020-11-25 20:53:34,636 DEBUG  [main] EnumType: Using NAMED-based conversion for Enum com.sf.back.entities.Kind
2020-11-25 20:53:34,637 DEBUG  [main] EnumType: Using NAMED-based conversion for Enum com.sf.back.entities.Kind
2020-11-25 20:53:34,675 DEBUG  [main] EnumType: Using NAMED-based conversion for Enum com.sf.back.entities.Kind
2020-11-25 20:53:34,675 DEBUG  [main] EnumType: Using NAMED-based conversion for Enum com.sf.back.entities.Kind
2020-11-25 20:53:34,705 DEBUG  [main] EnumType: Using NAMED-based conversion for Enum com.sf.back.entities.Kind
2020-11-25 20:53:34,706 DEBUG  [main] EnumType: Using NAMED-based conversion for Enum com.sf.back.entities.Kind
2020-11-25 20:53:34,710 DEBUG  [main] EnumType: Using NAMED-based conversion for Enum com.sf.back.entities.Kind
2020-11-25 20:53:34,733 TRACE  [main] TypeConfiguration$Scope: Handling #sessionFactoryCreated from [org.hibernate.internal.SessionFactoryImpl@794c22cd] for TypeConfiguration
2020-11-25 20:53:34,940 WARN   [main] JpaBaseConfiguration$JpaWebConfiguration: spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2020-11-25 20:53:35,092 WARN   [main] GenericWebApplicationContext: Exception encountered during context initialization - cancelling refresh attempt: org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'groovyMarkupConfigurer' defined in class path resource [org/springframework/boot/autoconfigure/groovy/template/GroovyTemplateAutoConfiguration$GroovyMarkupConfiguration.class]: Invocation of init method failed; nested exception is java.lang.reflect.InaccessibleObjectException: Unable to make jdk.internal.loader.ClassLoaders$AppClassLoader(jdk.internal.loader.ClassLoaders$PlatformClassLoader,jdk.internal.loader.URLClassPath) accessible: module java.base does not "opens jdk.internal.loader" to unnamed module @60fa3495
2020-11-25 20:53:35,096 TRACE  [main] TypeConfiguration$Scope: Handling #sessionFactoryClosed from [org.hibernate.internal.SessionFactoryImpl@794c22cd] for TypeConfiguration
2020-11-25 20:53:35,096 DEBUG  [main] TypeConfiguration$Scope: Un-scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration$Scope@678f685f] from SessionFactory [org.hibernate.internal.SessionFactoryImpl@794c22cd]
2020-11-25 20:53:35,125 ERROR  [main] SpringApplication: Application run failed
org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'groovyMarkupConfigurer' defined in class path resource [org/springframework/boot/autoconfigure/groovy/template/GroovyTemplateAutoConfiguration$GroovyMarkupConfiguration.class]: Invocation of init method failed; nested exception is java.lang.reflect.InaccessibleObjectException: Unable to make jdk.internal.loader.ClassLoaders$AppClassLoader(jdk.internal.loader.ClassLoaders$PlatformClassLoader,jdk.internal.loader.URLClassPath) accessible: module java.base does not "opens jdk.internal.loader" to unnamed module @60fa3495
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1803)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:595)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:517)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:323)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:222)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:321)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:202)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(DefaultListableBeanFactory.java:879)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:878)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:550)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:747)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:397)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:315)
	at org.springframework.boot.test.context.SpringBootContextLoader.loadContext(SpringBootContextLoader.java:125)
	at org.springframework.test.context.cache.DefaultCacheAwareContextLoaderDelegate.loadContextInternal(DefaultCacheAwareContextLoaderDelegate.java:99)
	at org.springframework.test.context.cache.DefaultCacheAwareContextLoaderDelegate.loadContext(DefaultCacheAwareContextLoaderDelegate.java:124)
	at org.springframework.test.context.support.DefaultTestContext.getApplicationContext(DefaultTestContext.java:123)
	at org.springframework.test.context.web.ServletTestExecutionListener.setUpRequestContextIfNecessary(ServletTestExecutionListener.java:190)
	at org.springframework.test.context.web.ServletTestExecutionListener.prepareTestInstance(ServletTestExecutionListener.java:132)
	at org.springframework.test.context.TestContextManager.prepareTestInstance(TestContextManager.java:244)
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner.createTest(SpringJUnit4ClassRunner.java:227)
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner$1.runReflectiveCall(SpringJUnit4ClassRunner.java:289)
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner.methodBlock(SpringJUnit4ClassRunner.java:291)
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner.runChild(SpringJUnit4ClassRunner.java:246)
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner.runChild(SpringJUnit4ClassRunner.java:97)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:290)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:71)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:58)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268)
	at org.junit.internal.runners.statements.RunBefores.evaluate(RunBefores.java:26)
	at org.springframework.test.context.junit4.statements.RunBeforeTestClassCallbacks.evaluate(RunBeforeTestClassCallbacks.java:61)
	at org.junit.internal.runners.statements.RunAfters.evaluate(RunAfters.java:27)
	at org.springframework.test.context.junit4.statements.RunAfterTestClassCallbacks.evaluate(RunAfterTestClassCallbacks.java:70)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:363)
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner.run(SpringJUnit4ClassRunner.java:190)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:137)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:115)
	at org.junit.vintage.engine.execution.RunnerExecutor.execute(RunnerExecutor.java:40)
	at java.base/java.util.stream.ForEachOps$ForEachOp$OfRef.accept(ForEachOps.java:183)
	at java.base/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:195)
	at java.base/java.util.Iterator.forEachRemaining(Iterator.java:133)
	at java.base/java.util.Spliterators$IteratorSpliterator.forEachRemaining(Spliterators.java:1801)
	at java.base/java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:484)
	at java.base/java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:474)
	at java.base/java.util.stream.ForEachOps$ForEachOp.evaluateSequential(ForEachOps.java:150)
	at java.base/java.util.stream.ForEachOps$ForEachOp$OfRef.evaluateSequential(ForEachOps.java:173)
	at java.base/java.util.stream.AbstractPipeline.evaluate(AbstractPipeline.java:234)
	at java.base/java.util.stream.ReferencePipeline.forEach(ReferencePipeline.java:497)
	at org.junit.vintage.engine.VintageTestEngine.executeAllChildren(VintageTestEngine.java:80)
	at org.junit.vintage.engine.VintageTestEngine.execute(VintageTestEngine.java:71)
	at org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:220)
	at org.junit.platform.launcher.core.DefaultLauncher.lambda$execute$6(DefaultLauncher.java:188)
	at org.junit.platform.launcher.core.DefaultLauncher.withInterceptedStreams(DefaultLauncher.java:202)
	at org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:181)
	at org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:128)
	at org.apache.maven.surefire.junitplatform.JUnitPlatformProvider.invokeAllTests(JUnitPlatformProvider.java:150)
	at org.apache.maven.surefire.junitplatform.JUnitPlatformProvider.invoke(JUnitPlatformProvider.java:124)
	at org.apache.maven.surefire.booter.ForkedBooter.invokeProviderInSameClassLoader(ForkedBooter.java:384)
	at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:345)
	at org.apache.maven.surefire.booter.ForkedBooter.execute(ForkedBooter.java:126)
	at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:418)
Caused by: java.lang.reflect.InaccessibleObjectException: Unable to make jdk.internal.loader.ClassLoaders$AppClassLoader(jdk.internal.loader.ClassLoaders$PlatformClassLoader,jdk.internal.loader.URLClassPath) accessible: module java.base does not "opens jdk.internal.loader" to unnamed module @60fa3495
	at java.base/java.lang.reflect.AccessibleObject.checkCanSetAccessible(AccessibleObject.java:344)
	at java.base/java.lang.reflect.AccessibleObject.checkCanSetAccessible(AccessibleObject.java:284)
	at java.base/java.lang.reflect.Constructor.checkCanSetAccessible(Constructor.java:189)
	at java.base/java.lang.reflect.Constructor.setAccessible(Constructor.java:182)
	at org.codehaus.groovy.reflection.CachedConstructor$1.run(CachedConstructor.java:44)
	at java.base/java.security.AccessController.doPrivileged(AccessController.java:312)
	at org.codehaus.groovy.reflection.CachedConstructor.<init>(CachedConstructor.java:42)
	at org.codehaus.groovy.reflection.CachedClass$2.initValue(CachedClass.java:79)
	at org.codehaus.groovy.reflection.CachedClass$2.initValue(CachedClass.java:69)
	at org.codehaus.groovy.util.LazyReference.getLocked(LazyReference.java:49)
	at org.codehaus.groovy.util.LazyReference.get(LazyReference.java:36)
	at org.codehaus.groovy.reflection.CachedClass.getConstructors(CachedClass.java:268)
	at groovy.lang.MetaClassImpl.<init>(MetaClassImpl.java:218)
	at groovy.lang.MetaClassImpl.<init>(MetaClassImpl.java:228)
	at groovy.lang.MetaClassRegistry$MetaClassCreationHandle.createNormalMetaClass(MetaClassRegistry.java:171)
	at groovy.lang.MetaClassRegistry$MetaClassCreationHandle.createWithCustomLookup(MetaClassRegistry.java:161)
	at groovy.lang.MetaClassRegistry$MetaClassCreationHandle.create(MetaClassRegistry.java:144)
	at org.codehaus.groovy.reflection.ClassInfo.getMetaClassUnderLock(ClassInfo.java:253)
	at org.codehaus.groovy.reflection.ClassInfo.getMetaClass(ClassInfo.java:285)
	at org.codehaus.groovy.reflection.ClassInfo.getMetaClass(ClassInfo.java:295)
	at org.codehaus.groovy.runtime.metaclass.MetaClassRegistryImpl.getMetaClass(MetaClassRegistryImpl.java:261)
	at org.codehaus.groovy.runtime.InvokerHelper.getMetaClass(InvokerHelper.java:873)
	at org.codehaus.groovy.runtime.InvokerHelper.invokePojoMethod(InvokerHelper.java:906)
	at org.codehaus.groovy.runtime.InvokerHelper.invokeMethod(InvokerHelper.java:898)
	at org.codehaus.groovy.runtime.typehandling.DefaultTypeTransformation.castToBoolean(DefaultTypeTransformation.java:185)
	at org.codehaus.groovy.runtime.typehandling.DefaultTypeTransformation.booleanUnbox(DefaultTypeTransformation.java:74)
	at org.codehaus.groovy.control.customizers.ASTTransformationCustomizer.findASTTranformationClass(ASTTransformationCustomizer.groovy:209)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:567)
	at org.codehaus.groovy.reflection.CachedMethod.invoke(CachedMethod.java:93)
	at org.codehaus.groovy.runtime.callsite.StaticMetaMethodSite$StaticMetaMethodSiteNoUnwrapNoCoerce.invoke(StaticMetaMethodSite.java:151)
	at org.codehaus.groovy.runtime.callsite.StaticMetaMethodSite.callStatic(StaticMetaMethodSite.java:102)
	at org.codehaus.groovy.runtime.callsite.AbstractCallSite.callStatic(AbstractCallSite.java:214)
	at org.codehaus.groovy.control.customizers.ASTTransformationCustomizer.findPhase(ASTTransformationCustomizer.groovy:226)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:567)
	at org.codehaus.groovy.reflection.CachedMethod.invoke(CachedMethod.java:93)
	at org.codehaus.groovy.runtime.callsite.StaticMetaMethodSite$StaticMetaMethodSiteNoUnwrapNoCoerce.invoke(StaticMetaMethodSite.java:151)
	at org.codehaus.groovy.runtime.callsite.StaticMetaMethodSite.callStatic(StaticMetaMethodSite.java:102)
	at org.codehaus.groovy.runtime.callsite.AbstractCallSite.callStatic(AbstractCallSite.java:214)
	at org.codehaus.groovy.control.customizers.ASTTransformationCustomizer.<init>(ASTTransformationCustomizer.groovy:180)
	at org.codehaus.groovy.control.customizers.ASTTransformationCustomizer.<init>(ASTTransformationCustomizer.groovy:188)
	at groovy.text.markup.MarkupTemplateEngine.<init>(MarkupTemplateEngine.java:94)
	at org.springframework.web.servlet.view.groovy.GroovyMarkupConfigurer.createTemplateEngine(GroovyMarkupConfigurer.java:160)
	at org.springframework.web.servlet.view.groovy.GroovyMarkupConfigurer.afterPropertiesSet(GroovyMarkupConfigurer.java:153)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1862)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1799)
	... 62 common frames omitted
2020-11-25 20:53:35,131 ERROR  [main] TestContextManager: Caught exception while allowing TestExecutionListener [org.springframework.test.context.web.ServletTestExecutionListener@170b27a7] to prepare test instance [com.sf.math.algebra.solvers.PolynomialSolverIntervalTest@3a3740a5]
java.lang.IllegalStateException: Failed to load ApplicationContext
	at org.springframework.test.context.cache.DefaultCacheAwareContextLoaderDelegate.loadContext(DefaultCacheAwareContextLoaderDelegate.java:132)
	at org.springframework.test.context.support.DefaultTestContext.getApplicationContext(DefaultTestContext.java:123)
	at org.springframework.test.context.web.ServletTestExecutionListener.setUpRequestContextIfNecessary(ServletTestExecutionListener.java:190)
	at org.springframework.test.context.web.ServletTestExecutionListener.prepareTestInstance(ServletTestExecutionListener.java:132)
	at org.springframework.test.context.TestContextManager.prepareTestInstance(TestContextManager.java:244)
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner.createTest(SpringJUnit4ClassRunner.java:227)
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner$1.runReflectiveCall(SpringJUnit4ClassRunner.java:289)
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner.methodBlock(SpringJUnit4ClassRunner.java:291)
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner.runChild(SpringJUnit4ClassRunner.java:246)
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner.runChild(SpringJUnit4ClassRunner.java:97)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:290)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:71)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:58)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268)
	at org.junit.internal.runners.statements.RunBefores.evaluate(RunBefores.java:26)
	at org.springframework.test.context.junit4.statements.RunBeforeTestClassCallbacks.evaluate(RunBeforeTestClassCallbacks.java:61)
	at org.junit.internal.runners.statements.RunAfters.evaluate(RunAfters.java:27)
	at org.springframework.test.context.junit4.statements.RunAfterTestClassCallbacks.evaluate(RunAfterTestClassCallbacks.java:70)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:363)
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner.run(SpringJUnit4ClassRunner.java:190)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:137)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:115)
	at org.junit.vintage.engine.execution.RunnerExecutor.execute(RunnerExecutor.java:40)
	at java.base/java.util.stream.ForEachOps$ForEachOp$OfRef.accept(ForEachOps.java:183)
	at java.base/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:195)
	at java.base/java.util.Iterator.forEachRemaining(Iterator.java:133)
	at java.base/java.util.Spliterators$IteratorSpliterator.forEachRemaining(Spliterators.java:1801)
	at java.base/java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:484)
	at java.base/java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:474)
	at java.base/java.util.stream.ForEachOps$ForEachOp.evaluateSequential(ForEachOps.java:150)
	at java.base/java.util.stream.ForEachOps$ForEachOp$OfRef.evaluateSequential(ForEachOps.java:173)
	at java.base/java.util.stream.AbstractPipeline.evaluate(AbstractPipeline.java:234)
	at java.base/java.util.stream.ReferencePipeline.forEach(ReferencePipeline.java:497)
	at org.junit.vintage.engine.VintageTestEngine.executeAllChildren(VintageTestEngine.java:80)
	at org.junit.vintage.engine.VintageTestEngine.execute(VintageTestEngine.java:71)
	at org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:220)
	at org.junit.platform.launcher.core.DefaultLauncher.lambda$execute$6(DefaultLauncher.java:188)
	at org.junit.platform.launcher.core.DefaultLauncher.withInterceptedStreams(DefaultLauncher.java:202)
	at org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:181)
	at org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:128)
	at org.apache.maven.surefire.junitplatform.JUnitPlatformProvider.invokeAllTests(JUnitPlatformProvider.java:150)
	at org.apache.maven.surefire.junitplatform.JUnitPlatformProvider.invoke(JUnitPlatformProvider.java:124)
	at org.apache.maven.surefire.booter.ForkedBooter.invokeProviderInSameClassLoader(ForkedBooter.java:384)
	at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:345)
	at org.apache.maven.surefire.booter.ForkedBooter.execute(ForkedBooter.java:126)
	at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:418)
Caused by: org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'groovyMarkupConfigurer' defined in class path resource [org/springframework/boot/autoconfigure/groovy/template/GroovyTemplateAutoConfiguration$GroovyMarkupConfiguration.class]: Invocation of init method failed; nested exception is java.lang.reflect.InaccessibleObjectException: Unable to make jdk.internal.loader.ClassLoaders$AppClassLoader(jdk.internal.loader.ClassLoaders$PlatformClassLoader,jdk.internal.loader.URLClassPath) accessible: module java.base does not "opens jdk.internal.loader" to unnamed module @60fa3495
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1803)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:595)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:517)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:323)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:222)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:321)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:202)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(DefaultListableBeanFactory.java:879)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:878)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:550)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:747)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:397)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:315)
	at org.springframework.boot.test.context.SpringBootContextLoader.loadContext(SpringBootContextLoader.java:125)
	at org.springframework.test.context.cache.DefaultCacheAwareContextLoaderDelegate.loadContextInternal(DefaultCacheAwareContextLoaderDelegate.java:99)
	at org.springframework.test.context.cache.DefaultCacheAwareContextLoaderDelegate.loadContext(DefaultCacheAwareContextLoaderDelegate.java:124)
	... 47 common frames omitted
Caused by: java.lang.reflect.InaccessibleObjectException: Unable to make jdk.internal.loader.ClassLoaders$AppClassLoader(jdk.internal.loader.ClassLoaders$PlatformClassLoader,jdk.internal.loader.URLClassPath) accessible: module java.base does not "opens jdk.internal.loader" to unnamed module @60fa3495
	at java.base/java.lang.reflect.AccessibleObject.checkCanSetAccessible(AccessibleObject.java:344)
	at java.base/java.lang.reflect.AccessibleObject.checkCanSetAccessible(AccessibleObject.java:284)
	at java.base/java.lang.reflect.Constructor.checkCanSetAccessible(Constructor.java:189)
	at java.base/java.lang.reflect.Constructor.setAccessible(Constructor.java:182)
	at org.codehaus.groovy.reflection.CachedConstructor$1.run(CachedConstructor.java:44)
	at java.base/java.security.AccessController.doPrivileged(AccessController.java:312)
	at org.codehaus.groovy.reflection.CachedConstructor.<init>(CachedConstructor.java:42)
	at org.codehaus.groovy.reflection.CachedClass$2.initValue(CachedClass.java:79)
	at org.codehaus.groovy.reflection.CachedClass$2.initValue(CachedClass.java:69)
	at org.codehaus.groovy.util.LazyReference.getLocked(LazyReference.java:49)
	at org.codehaus.groovy.util.LazyReference.get(LazyReference.java:36)
	at org.codehaus.groovy.reflection.CachedClass.getConstructors(CachedClass.java:268)
	at groovy.lang.MetaClassImpl.<init>(MetaClassImpl.java:218)
	at groovy.lang.MetaClassImpl.<init>(MetaClassImpl.java:228)
	at groovy.lang.MetaClassRegistry$MetaClassCreationHandle.createNormalMetaClass(MetaClassRegistry.java:171)
	at groovy.lang.MetaClassRegistry$MetaClassCreationHandle.createWithCustomLookup(MetaClassRegistry.java:161)
	at groovy.lang.MetaClassRegistry$MetaClassCreationHandle.create(MetaClassRegistry.java:144)
	at org.codehaus.groovy.reflection.ClassInfo.getMetaClassUnderLock(ClassInfo.java:253)
	at org.codehaus.groovy.reflection.ClassInfo.getMetaClass(ClassInfo.java:285)
	at org.codehaus.groovy.reflection.ClassInfo.getMetaClass(ClassInfo.java:295)
	at org.codehaus.groovy.runtime.metaclass.MetaClassRegistryImpl.getMetaClass(MetaClassRegistryImpl.java:261)
	at org.codehaus.groovy.runtime.InvokerHelper.getMetaClass(InvokerHelper.java:873)
	at org.codehaus.groovy.runtime.InvokerHelper.invokePojoMethod(InvokerHelper.java:906)
	at org.codehaus.groovy.runtime.InvokerHelper.invokeMethod(InvokerHelper.java:898)
	at org.codehaus.groovy.runtime.typehandling.DefaultTypeTransformation.castToBoolean(DefaultTypeTransformation.java:185)
	at org.codehaus.groovy.runtime.typehandling.DefaultTypeTransformation.booleanUnbox(DefaultTypeTransformation.java:74)
	at org.codehaus.groovy.control.customizers.ASTTransformationCustomizer.findASTTranformationClass(ASTTransformationCustomizer.groovy:209)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:567)
	at org.codehaus.groovy.reflection.CachedMethod.invoke(CachedMethod.java:93)
	at org.codehaus.groovy.runtime.callsite.StaticMetaMethodSite$StaticMetaMethodSiteNoUnwrapNoCoerce.invoke(StaticMetaMethodSite.java:151)
	at org.codehaus.groovy.runtime.callsite.StaticMetaMethodSite.callStatic(StaticMetaMethodSite.java:102)
	at org.codehaus.groovy.runtime.callsite.AbstractCallSite.callStatic(AbstractCallSite.java:214)
	at org.codehaus.groovy.control.customizers.ASTTransformationCustomizer.findPhase(ASTTransformationCustomizer.groovy:226)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:567)
	at org.codehaus.groovy.reflection.CachedMethod.invoke(CachedMethod.java:93)
	at org.codehaus.groovy.runtime.callsite.StaticMetaMethodSite$StaticMetaMethodSiteNoUnwrapNoCoerce.invoke(StaticMetaMethodSite.java:151)
	at org.codehaus.groovy.runtime.callsite.StaticMetaMethodSite.callStatic(StaticMetaMethodSite.java:102)
	at org.codehaus.groovy.runtime.callsite.AbstractCallSite.callStatic(AbstractCallSite.java:214)
	at org.codehaus.groovy.control.customizers.ASTTransformationCustomizer.<init>(ASTTransformationCustomizer.groovy:180)
	at org.codehaus.groovy.control.customizers.ASTTransformationCustomizer.<init>(ASTTransformationCustomizer.groovy:188)
	at groovy.text.markup.MarkupTemplateEngine.<init>(MarkupTemplateEngine.java:94)
	at org.springframework.web.servlet.view.groovy.GroovyMarkupConfigurer.createTemplateEngine(GroovyMarkupConfigurer.java:160)
	at org.springframework.web.servlet.view.groovy.GroovyMarkupConfigurer.afterPropertiesSet(GroovyMarkupConfigurer.java:153)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1862)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1799)
	... 62 common frames omitted
2020-11-25 20:53:36,316 DEBUG  [main] BasicTypeRegistry: Adding type registration boolean -> org.hibernate.type.BooleanType@ff2266c
2020-11-25 20:53:36,334 DEBUG  [main] BasicTypeRegistry: Adding type registration boolean -> org.hibernate.type.BooleanType@ff2266c
2020-11-25 20:53:36,334 DEBUG  [main] BasicTypeRegistry: Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@ff2266c
2020-11-25 20:53:36,335 DEBUG  [main] BasicTypeRegistry: Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@1d585fb
2020-11-25 20:53:36,335 DEBUG  [main] BasicTypeRegistry: Adding type registration true_false -> org.hibernate.type.TrueFalseType@7c8f047a
2020-11-25 20:53:36,336 DEBUG  [main] BasicTypeRegistry: Adding type registration yes_no -> org.hibernate.type.YesNoType@d949bc4
2020-11-25 20:53:36,336 DEBUG  [main] BasicTypeRegistry: Adding type registration byte -> org.hibernate.type.ByteType@29c25bbc
2020-11-25 20:53:36,336 DEBUG  [main] BasicTypeRegistry: Adding type registration byte -> org.hibernate.type.ByteType@29c25bbc
2020-11-25 20:53:36,337 DEBUG  [main] BasicTypeRegistry: Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@29c25bbc
2020-11-25 20:53:36,337 DEBUG  [main] BasicTypeRegistry: Adding type registration character -> org.hibernate.type.CharacterType@403f7aa2
2020-11-25 20:53:36,337 DEBUG  [main] BasicTypeRegistry: Adding type registration char -> org.hibernate.type.CharacterType@403f7aa2
2020-11-25 20:53:36,338 DEBUG  [main] BasicTypeRegistry: Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@403f7aa2
2020-11-25 20:53:36,338 DEBUG  [main] BasicTypeRegistry: Adding type registration short -> org.hibernate.type.ShortType@38cb1606
2020-11-25 20:53:36,339 DEBUG  [main] BasicTypeRegistry: Adding type registration short -> org.hibernate.type.ShortType@38cb1606
2020-11-25 20:53:36,339 DEBUG  [main] BasicTypeRegistry: Adding type registration java.lang.Short -> org.hibernate.type.ShortType@38cb1606
2020-11-25 20:53:36,340 DEBUG  [main] BasicTypeRegistry: Adding type registration integer -> org.hibernate.type.IntegerType@5d3b6585
2020-11-25 20:53:36,340 DEBUG  [main] BasicTypeRegistry: Adding type registration int -> org.hibernate.type.IntegerType@5d3b6585
2020-11-25 20:53:36,340 DEBUG  [main] BasicTypeRegistry: Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@5d3b6585
2020-11-25 20:53:36,341 DEBUG  [main] BasicTypeRegistry: Adding type registration long -> org.hibernate.type.LongType@4fea5ee0
2020-11-25 20:53:36,341 DEBUG  [main] BasicTypeRegistry: Adding type registration long -> org.hibernate.type.LongType@4fea5ee0
2020-11-25 20:53:36,341 DEBUG  [main] BasicTypeRegistry: Adding type registration java.lang.Long -> org.hibernate.type.LongType@4fea5ee0
2020-11-25 20:53:36,342 DEBUG  [main] BasicTypeRegistry: Adding type registration float -> org.hibernate.type.FloatType@7b3085a3
2020-11-25 20:53:36,342 DEBUG  [main] BasicTypeRegistry: Adding type registration float -> org.hibernate.type.FloatType@7b3085a3
2020-11-25 20:53:36,343 DEBUG  [main] BasicTypeRegistry: Adding type registration java.lang.Float -> org.hibernate.type.FloatType@7b3085a3
2020-11-25 20:53:36,344 DEBUG  [main] BasicTypeRegistry: Adding type registration double -> org.hibernate.type.DoubleType@5a7a6d34
2020-11-25 20:53:36,344 DEBUG  [main] BasicTypeRegistry: Adding type registration double -> org.hibernate.type.DoubleType@5a7a6d34
2020-11-25 20:53:36,344 DEBUG  [main] BasicTypeRegistry: Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@5a7a6d34
2020-11-25 20:53:36,345 DEBUG  [main] BasicTypeRegistry: Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@5ae66c98
2020-11-25 20:53:36,346 DEBUG  [main] BasicTypeRegistry: Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@5ae66c98
2020-11-25 20:53:36,346 DEBUG  [main] BasicTypeRegistry: Adding type registration big_integer -> org.hibernate.type.BigIntegerType@223cbf0d
2020-11-25 20:53:36,347 DEBUG  [main] BasicTypeRegistry: Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@223cbf0d
2020-11-25 20:53:36,347 DEBUG  [main] BasicTypeRegistry: Adding type registration string -> org.hibernate.type.StringType@4f581211
2020-11-25 20:53:36,348 DEBUG  [main] BasicTypeRegistry: Adding type registration java.lang.String -> org.hibernate.type.StringType@4f581211
2020-11-25 20:53:36,348 DEBUG  [main] BasicTypeRegistry: Adding type registration nstring -> org.hibernate.type.StringNVarcharType@6697f3d
2020-11-25 20:53:36,348 DEBUG  [main] BasicTypeRegistry: Adding type registration ncharacter -> org.hibernate.type.CharacterNCharType@f1d1463
2020-11-25 20:53:36,349 DEBUG  [main] BasicTypeRegistry: Adding type registration url -> org.hibernate.type.UrlType@44ddb518
2020-11-25 20:53:36,349 DEBUG  [main] BasicTypeRegistry: Adding type registration java.net.URL -> org.hibernate.type.UrlType@44ddb518
2020-11-25 20:53:36,349 DEBUG  [main] BasicTypeRegistry: Adding type registration Duration -> org.hibernate.type.DurationType@49e0b123
2020-11-25 20:53:36,350 DEBUG  [main] BasicTypeRegistry: Adding type registration java.time.Duration -> org.hibernate.type.DurationType@49e0b123
2020-11-25 20:53:36,350 DEBUG  [main] BasicTypeRegistry: Adding type registration Instant -> org.hibernate.type.InstantType@40a28bda
2020-11-25 20:53:36,350 DEBUG  [main] BasicTypeRegistry: Adding type registration java.time.Instant -> org.hibernate.type.InstantType@40a28bda
2020-11-25 20:53:36,351 DEBUG  [main] BasicTypeRegistry: Adding type registration LocalDateTime -> org.hibernate.type.LocalDateTimeType@33430fc
2020-11-25 20:53:36,351 DEBUG  [main] BasicTypeRegistry: Adding type registration java.time.LocalDateTime -> org.hibernate.type.LocalDateTimeType@33430fc
2020-11-25 20:53:36,352 DEBUG  [main] BasicTypeRegistry: Adding type registration LocalDate -> org.hibernate.type.LocalDateType@d7055be
2020-11-25 20:53:36,353 DEBUG  [main] BasicTypeRegistry: Adding type registration java.time.LocalDate -> org.hibernate.type.LocalDateType@d7055be
2020-11-25 20:53:36,353 DEBUG  [main] BasicTypeRegistry: Adding type registration LocalTime -> org.hibernate.type.LocalTimeType@3c7d8a4
2020-11-25 20:53:36,354 DEBUG  [main] BasicTypeRegistry: Adding type registration java.time.LocalTime -> org.hibernate.type.LocalTimeType@3c7d8a4
2020-11-25 20:53:36,354 DEBUG  [main] BasicTypeRegistry: Adding type registration OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@7a117dc2
2020-11-25 20:53:36,355 DEBUG  [main] BasicTypeRegistry: Adding type registration java.time.OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@7a117dc2
2020-11-25 20:53:36,355 DEBUG  [main] BasicTypeRegistry: Adding type registration OffsetTime -> org.hibernate.type.OffsetTimeType@3c64339f
2020-11-25 20:53:36,355 DEBUG  [main] BasicTypeRegistry: Adding type registration java.time.OffsetTime -> org.hibernate.type.OffsetTimeType@3c64339f
2020-11-25 20:53:36,356 DEBUG  [main] BasicTypeRegistry: Adding type registration ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@30c8c6ab
2020-11-25 20:53:36,363 DEBUG  [main] BasicTypeRegistry: Adding type registration java.time.ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@30c8c6ab
2020-11-25 20:53:36,364 DEBUG  [main] BasicTypeRegistry: Adding type registration date -> org.hibernate.type.DateType@61c5fd78
2020-11-25 20:53:36,365 DEBUG  [main] BasicTypeRegistry: Adding type registration java.sql.Date -> org.hibernate.type.DateType@61c5fd78
2020-11-25 20:53:36,365 DEBUG  [main] BasicTypeRegistry: Adding type registration time -> org.hibernate.type.TimeType@77856cc5
2020-11-25 20:53:36,365 DEBUG  [main] BasicTypeRegistry: Adding type registration java.sql.Time -> org.hibernate.type.TimeType@77856cc5
2020-11-25 20:53:36,366 DEBUG  [main] BasicTypeRegistry: Adding type registration timestamp -> org.hibernate.type.TimestampType@12166229
2020-11-25 20:53:36,366 DEBUG  [main] BasicTypeRegistry: Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@12166229
2020-11-25 20:53:36,366 DEBUG  [main] BasicTypeRegistry: Adding type registration java.util.Date -> org.hibernate.type.TimestampType@12166229
2020-11-25 20:53:36,366 DEBUG  [main] BasicTypeRegistry: Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@2b4829aa
2020-11-25 20:53:36,366 DEBUG  [main] BasicTypeRegistry: Adding type registration calendar -> org.hibernate.type.CalendarType@3ec082a1
2020-11-25 20:53:36,367 DEBUG  [main] BasicTypeRegistry: Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@3ec082a1
2020-11-25 20:53:36,367 DEBUG  [main] BasicTypeRegistry: Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@3ec082a1
2020-11-25 20:53:36,367 DEBUG  [main] BasicTypeRegistry: Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@429f0ca8
2020-11-25 20:53:36,367 DEBUG  [main] BasicTypeRegistry: Adding type registration locale -> org.hibernate.type.LocaleType@11c3ce6a
2020-11-25 20:53:36,367 DEBUG  [main] BasicTypeRegistry: Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@11c3ce6a
2020-11-25 20:53:36,367 DEBUG  [main] BasicTypeRegistry: Adding type registration currency -> org.hibernate.type.CurrencyType@28519bfb
2020-11-25 20:53:36,367 DEBUG  [main] BasicTypeRegistry: Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@28519bfb
2020-11-25 20:53:36,367 DEBUG  [main] BasicTypeRegistry: Adding type registration timezone -> org.hibernate.type.TimeZoneType@7aa15a80
2020-11-25 20:53:36,368 DEBUG  [main] BasicTypeRegistry: Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@7aa15a80
2020-11-25 20:53:36,368 DEBUG  [main] BasicTypeRegistry: Adding type registration class -> org.hibernate.type.ClassType@48d5ca17
2020-11-25 20:53:36,368 DEBUG  [main] BasicTypeRegistry: Adding type registration java.lang.Class -> org.hibernate.type.ClassType@48d5ca17
2020-11-25 20:53:36,368 DEBUG  [main] BasicTypeRegistry: Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@79b8ecb
2020-11-25 20:53:36,368 DEBUG  [main] BasicTypeRegistry: Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@79b8ecb
2020-11-25 20:53:36,368 DEBUG  [main] BasicTypeRegistry: Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@c0013b8
2020-11-25 20:53:36,368 DEBUG  [main] BasicTypeRegistry: Adding type registration binary -> org.hibernate.type.BinaryType@2a42019a
2020-11-25 20:53:36,369 DEBUG  [main] BasicTypeRegistry: Adding type registration byte[] -> org.hibernate.type.BinaryType@2a42019a
2020-11-25 20:53:36,369 DEBUG  [main] BasicTypeRegistry: Adding type registration [B -> org.hibernate.type.BinaryType@2a42019a
2020-11-25 20:53:36,369 DEBUG  [main] BasicTypeRegistry: Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@495da9a7
2020-11-25 20:53:36,369 DEBUG  [main] BasicTypeRegistry: Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@495da9a7
2020-11-25 20:53:36,369 DEBUG  [main] BasicTypeRegistry: Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@495da9a7
2020-11-25 20:53:36,369 DEBUG  [main] BasicTypeRegistry: Adding type registration row_version -> org.hibernate.type.RowVersionType@35becbd4
2020-11-25 20:53:36,369 DEBUG  [main] BasicTypeRegistry: Adding type registration image -> org.hibernate.type.ImageType@30fa8a6b
2020-11-25 20:53:36,370 DEBUG  [main] BasicTypeRegistry: Adding type registration characters -> org.hibernate.type.CharArrayType@4c8d45cf
2020-11-25 20:53:36,370 DEBUG  [main] BasicTypeRegistry: Adding type registration char[] -> org.hibernate.type.CharArrayType@4c8d45cf
2020-11-25 20:53:36,370 DEBUG  [main] BasicTypeRegistry: Adding type registration [C -> org.hibernate.type.CharArrayType@4c8d45cf
2020-11-25 20:53:36,370 DEBUG  [main] BasicTypeRegistry: Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@5b490d5e
2020-11-25 20:53:36,370 DEBUG  [main] BasicTypeRegistry: Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@5b490d5e
2020-11-25 20:53:36,370 DEBUG  [main] BasicTypeRegistry: Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@5b490d5e
2020-11-25 20:53:36,370 DEBUG  [main] BasicTypeRegistry: Adding type registration text -> org.hibernate.type.TextType@18b04526
2020-11-25 20:53:36,371 DEBUG  [main] BasicTypeRegistry: Adding type registration ntext -> org.hibernate.type.NTextType@246df37b
2020-11-25 20:53:36,371 DEBUG  [main] BasicTypeRegistry: Adding type registration blob -> org.hibernate.type.BlobType@56881196
2020-11-25 20:53:36,371 DEBUG  [main] BasicTypeRegistry: Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@56881196
2020-11-25 20:53:36,371 DEBUG  [main] BasicTypeRegistry: Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@131c0b6f
2020-11-25 20:53:36,371 DEBUG  [main] BasicTypeRegistry: Adding type registration clob -> org.hibernate.type.ClobType@7fc1fd31
2020-11-25 20:53:36,371 DEBUG  [main] BasicTypeRegistry: Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@7fc1fd31
2020-11-25 20:53:36,371 DEBUG  [main] BasicTypeRegistry: Adding type registration nclob -> org.hibernate.type.NClobType@70777a65
2020-11-25 20:53:36,372 DEBUG  [main] BasicTypeRegistry: Adding type registration java.sql.NClob -> org.hibernate.type.NClobType@70777a65
2020-11-25 20:53:36,372 DEBUG  [main] BasicTypeRegistry: Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@2f6f4ac4
2020-11-25 20:53:36,372 DEBUG  [main] BasicTypeRegistry: Adding type registration materialized_nclob -> org.hibernate.type.MaterializedNClobType@7d685f4e
2020-11-25 20:53:36,372 DEBUG  [main] BasicTypeRegistry: Adding type registration serializable -> org.hibernate.type.SerializableType@319aa9ee
2020-11-25 20:53:36,372 DEBUG  [main] BasicTypeRegistry: Adding type registration object -> org.hibernate.type.ObjectType@54234569
2020-11-25 20:53:36,372 DEBUG  [main] BasicTypeRegistry: Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@54234569
2020-11-25 20:53:36,373 DEBUG  [main] BasicTypeRegistry: Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@2b284acc
2020-11-25 20:53:36,373 DEBUG  [main] BasicTypeRegistry: Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@76e5278a
2020-11-25 20:53:36,373 DEBUG  [main] BasicTypeRegistry: Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@70cc0601
2020-11-25 20:53:36,373 DEBUG  [main] BasicTypeRegistry: Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@4b27a3fc
2020-11-25 20:53:36,373 DEBUG  [main] BasicTypeRegistry: Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@22b0fe7e
2020-11-25 20:53:36,373 DEBUG  [main] BasicTypeRegistry: Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@7db644d5
2020-11-25 20:53:36,373 DEBUG  [main] BasicTypeRegistry: Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@6ddab96c
2020-11-25 20:53:36,374 DEBUG  [main] BasicTypeRegistry: Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@1b94df68
2020-11-25 20:53:36,419 DEBUG  [main] TypeConfiguration$Scope: Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@2f7432f3] to MetadataBuildingContext [org.hibernate.boot.internal.MetadataBuildingContextRootImpl@ab2ac08]
2020-11-25 20:53:36,430 DEBUG  [main] EnumType: Using NAMED-based conversion for Enum com.sf.back.entities.Kind
2020-11-25 20:53:36,433 DEBUG  [main] EnumType: Using NAMED-based conversion for Enum com.sf.back.entities.Kind
2020-11-25 20:53:36,504 DEBUG  [main] TypeConfiguration$Scope: Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@2f7432f3] to SessionFactoryImpl [org.hibernate.internal.SessionFactoryImpl@507c33cc]
2020-11-25 20:53:36,504 DEBUG  [main] EnumType: Using NAMED-based conversion for Enum com.sf.back.entities.Kind
2020-11-25 20:53:36,504 DEBUG  [main] EnumType: Using NAMED-based conversion for Enum com.sf.back.entities.Kind
2020-11-25 20:53:36,532 DEBUG  [main] EnumType: Using NAMED-based conversion for Enum com.sf.back.entities.Kind
2020-11-25 20:53:36,532 DEBUG  [main] EnumType: Using NAMED-based conversion for Enum com.sf.back.entities.Kind
2020-11-25 20:53:36,589 DEBUG  [main] EnumType: Using NAMED-based conversion for Enum com.sf.back.entities.Kind
2020-11-25 20:53:36,589 DEBUG  [main] EnumType: Using NAMED-based conversion for Enum com.sf.back.entities.Kind
2020-11-25 20:53:36,595 DEBUG  [main] EnumType: Using NAMED-based conversion for Enum com.sf.back.entities.Kind
2020-11-25 20:53:36,603 TRACE  [main] TypeConfiguration$Scope: Handling #sessionFactoryCreated from [org.hibernate.internal.SessionFactoryImpl@507c33cc] for TypeConfiguration
2020-11-25 20:53:36,809 WARN   [main] JpaBaseConfiguration$JpaWebConfiguration: spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2020-11-25 20:53:37,008 WARN   [main] GenericWebApplicationContext: Exception encountered during context initialization - cancelling refresh attempt: org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'groovyMarkupConfigurer' defined in class path resource [org/springframework/boot/autoconfigure/groovy/template/GroovyTemplateAutoConfiguration$GroovyMarkupConfiguration.class]: Invocation of init method failed; nested exception is java.lang.reflect.InaccessibleObjectException: Unable to make jdk.internal.loader.ClassLoaders$AppClassLoader(jdk.internal.loader.ClassLoaders$PlatformClassLoader,jdk.internal.loader.URLClassPath) accessible: module java.base does not "opens jdk.internal.loader" to unnamed module @60fa3495
2020-11-25 20:53:37,013 TRACE  [main] TypeConfiguration$Scope: Handling #sessionFactoryClosed from [org.hibernate.internal.SessionFactoryImpl@507c33cc] for TypeConfiguration
2020-11-25 20:53:37,014 DEBUG  [main] TypeConfiguration$Scope: Un-scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration$Scope@4310007c] from SessionFactory [org.hibernate.internal.SessionFactoryImpl@507c33cc]
2020-11-25 20:53:37,035 ERROR  [main] SpringApplication: Application run failed
org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'groovyMarkupConfigurer' defined in class path resource [org/springframework/boot/autoconfigure/groovy/template/GroovyTemplateAutoConfiguration$GroovyMarkupConfiguration.class]: Invocation of init method failed; nested exception is java.lang.reflect.InaccessibleObjectException: Unable to make jdk.internal.loader.ClassLoaders$AppClassLoader(jdk.internal.loader.ClassLoaders$PlatformClassLoader,jdk.internal.loader.URLClassPath) accessible: module java.base does not "opens jdk.internal.loader" to unnamed module @60fa3495
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1803)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:595)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:517)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:323)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:222)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:321)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:202)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(DefaultListableBeanFactory.java:879)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:878)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:550)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:747)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:397)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:315)
	at org.springframework.boot.test.context.SpringBootContextLoader.loadContext(SpringBootContextLoader.java:125)
	at org.springframework.test.context.cache.DefaultCacheAwareContextLoaderDelegate.loadContextInternal(DefaultCacheAwareContextLoaderDelegate.java:99)
	at org.springframework.test.context.cache.DefaultCacheAwareContextLoaderDelegate.loadContext(DefaultCacheAwareContextLoaderDelegate.java:124)
	at org.springframework.test.context.support.DefaultTestContext.getApplicationContext(DefaultTestContext.java:123)
	at org.springframework.test.context.web.ServletTestExecutionListener.setUpRequestContextIfNecessary(ServletTestExecutionListener.java:190)
	at org.springframework.test.context.web.ServletTestExecutionListener.prepareTestInstance(ServletTestExecutionListener.java:132)
	at org.springframework.test.context.TestContextManager.prepareTestInstance(TestContextManager.java:244)
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner.createTest(SpringJUnit4ClassRunner.java:227)
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner$1.runReflectiveCall(SpringJUnit4ClassRunner.java:289)
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner.methodBlock(SpringJUnit4ClassRunner.java:291)
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner.runChild(SpringJUnit4ClassRunner.java:246)
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner.runChild(SpringJUnit4ClassRunner.java:97)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:290)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:71)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:58)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268)
	at org.junit.internal.runners.statements.RunBefores.evaluate(RunBefores.java:26)
	at org.springframework.test.context.junit4.statements.RunBeforeTestClassCallbacks.evaluate(RunBeforeTestClassCallbacks.java:61)
	at org.junit.internal.runners.statements.RunAfters.evaluate(RunAfters.java:27)
	at org.springframework.test.context.junit4.statements.RunAfterTestClassCallbacks.evaluate(RunAfterTestClassCallbacks.java:70)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:363)
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner.run(SpringJUnit4ClassRunner.java:190)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:137)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:115)
	at org.junit.vintage.engine.execution.RunnerExecutor.execute(RunnerExecutor.java:40)
	at java.base/java.util.stream.ForEachOps$ForEachOp$OfRef.accept(ForEachOps.java:183)
	at java.base/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:195)
	at java.base/java.util.Iterator.forEachRemaining(Iterator.java:133)
	at java.base/java.util.Spliterators$IteratorSpliterator.forEachRemaining(Spliterators.java:1801)
	at java.base/java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:484)
	at java.base/java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:474)
	at java.base/java.util.stream.ForEachOps$ForEachOp.evaluateSequential(ForEachOps.java:150)
	at java.base/java.util.stream.ForEachOps$ForEachOp$OfRef.evaluateSequential(ForEachOps.java:173)
	at java.base/java.util.stream.AbstractPipeline.evaluate(AbstractPipeline.java:234)
	at java.base/java.util.stream.ReferencePipeline.forEach(ReferencePipeline.java:497)
	at org.junit.vintage.engine.VintageTestEngine.executeAllChildren(VintageTestEngine.java:80)
	at org.junit.vintage.engine.VintageTestEngine.execute(VintageTestEngine.java:71)
	at org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:220)
	at org.junit.platform.launcher.core.DefaultLauncher.lambda$execute$6(DefaultLauncher.java:188)
	at org.junit.platform.launcher.core.DefaultLauncher.withInterceptedStreams(DefaultLauncher.java:202)
	at org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:181)
	at org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:128)
	at org.apache.maven.surefire.junitplatform.JUnitPlatformProvider.invokeAllTests(JUnitPlatformProvider.java:150)
	at org.apache.maven.surefire.junitplatform.JUnitPlatformProvider.invoke(JUnitPlatformProvider.java:124)
	at org.apache.maven.surefire.booter.ForkedBooter.invokeProviderInSameClassLoader(ForkedBooter.java:384)
	at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:345)
	at org.apache.maven.surefire.booter.ForkedBooter.execute(ForkedBooter.java:126)
	at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:418)
Caused by: java.lang.reflect.InaccessibleObjectException: Unable to make jdk.internal.loader.ClassLoaders$AppClassLoader(jdk.internal.loader.ClassLoaders$PlatformClassLoader,jdk.internal.loader.URLClassPath) accessible: module java.base does not "opens jdk.internal.loader" to unnamed module @60fa3495
	at java.base/java.lang.reflect.AccessibleObject.checkCanSetAccessible(AccessibleObject.java:344)
	at java.base/java.lang.reflect.AccessibleObject.checkCanSetAccessible(AccessibleObject.java:284)
	at java.base/java.lang.reflect.Constructor.checkCanSetAccessible(Constructor.java:189)
	at java.base/java.lang.reflect.Constructor.setAccessible(Constructor.java:182)
	at org.codehaus.groovy.reflection.CachedConstructor$1.run(CachedConstructor.java:44)
	at java.base/java.security.AccessController.doPrivileged(AccessController.java:312)
	at org.codehaus.groovy.reflection.CachedConstructor.<init>(CachedConstructor.java:42)
	at org.codehaus.groovy.reflection.CachedClass$2.initValue(CachedClass.java:79)
	at org.codehaus.groovy.reflection.CachedClass$2.initValue(CachedClass.java:69)
	at org.codehaus.groovy.util.LazyReference.getLocked(LazyReference.java:49)
	at org.codehaus.groovy.util.LazyReference.get(LazyReference.java:36)
	at org.codehaus.groovy.reflection.CachedClass.getConstructors(CachedClass.java:268)
	at groovy.lang.MetaClassImpl.<init>(MetaClassImpl.java:218)
	at groovy.lang.MetaClassImpl.<init>(MetaClassImpl.java:228)
	at groovy.lang.MetaClassRegistry$MetaClassCreationHandle.createNormalMetaClass(MetaClassRegistry.java:171)
	at groovy.lang.MetaClassRegistry$MetaClassCreationHandle.createWithCustomLookup(MetaClassRegistry.java:161)
	at groovy.lang.MetaClassRegistry$MetaClassCreationHandle.create(MetaClassRegistry.java:144)
	at org.codehaus.groovy.reflection.ClassInfo.getMetaClassUnderLock(ClassInfo.java:253)
	at org.codehaus.groovy.reflection.ClassInfo.getMetaClass(ClassInfo.java:285)
	at org.codehaus.groovy.reflection.ClassInfo.getMetaClass(ClassInfo.java:295)
	at org.codehaus.groovy.runtime.metaclass.MetaClassRegistryImpl.getMetaClass(MetaClassRegistryImpl.java:261)
	at org.codehaus.groovy.runtime.InvokerHelper.getMetaClass(InvokerHelper.java:873)
	at org.codehaus.groovy.runtime.InvokerHelper.invokePojoMethod(InvokerHelper.java:906)
	at org.codehaus.groovy.runtime.InvokerHelper.invokeMethod(InvokerHelper.java:898)
	at org.codehaus.groovy.runtime.typehandling.DefaultTypeTransformation.castToBoolean(DefaultTypeTransformation.java:185)
	at org.codehaus.groovy.runtime.typehandling.DefaultTypeTransformation.booleanUnbox(DefaultTypeTransformation.java:74)
	at org.codehaus.groovy.control.customizers.ASTTransformationCustomizer.findASTTranformationClass(ASTTransformationCustomizer.groovy:209)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:567)
	at org.codehaus.groovy.reflection.CachedMethod.invoke(CachedMethod.java:93)
	at org.codehaus.groovy.runtime.callsite.StaticMetaMethodSite$StaticMetaMethodSiteNoUnwrapNoCoerce.invoke(StaticMetaMethodSite.java:151)
	at org.codehaus.groovy.runtime.callsite.StaticMetaMethodSite.callStatic(StaticMetaMethodSite.java:102)
	at org.codehaus.groovy.runtime.callsite.AbstractCallSite.callStatic(AbstractCallSite.java:214)
	at org.codehaus.groovy.control.customizers.ASTTransformationCustomizer.findPhase(ASTTransformationCustomizer.groovy:226)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:567)
	at org.codehaus.groovy.reflection.CachedMethod.invoke(CachedMethod.java:93)
	at org.codehaus.groovy.runtime.callsite.StaticMetaMethodSite$StaticMetaMethodSiteNoUnwrapNoCoerce.invoke(StaticMetaMethodSite.java:151)
	at org.codehaus.groovy.runtime.callsite.StaticMetaMethodSite.callStatic(StaticMetaMethodSite.java:102)
	at org.codehaus.groovy.runtime.callsite.AbstractCallSite.callStatic(AbstractCallSite.java:214)
	at org.codehaus.groovy.control.customizers.ASTTransformationCustomizer.<init>(ASTTransformationCustomizer.groovy:180)
	at org.codehaus.groovy.control.customizers.ASTTransformationCustomizer.<init>(ASTTransformationCustomizer.groovy:188)
	at groovy.text.markup.MarkupTemplateEngine.<init>(MarkupTemplateEngine.java:94)
	at org.springframework.web.servlet.view.groovy.GroovyMarkupConfigurer.createTemplateEngine(GroovyMarkupConfigurer.java:160)
	at org.springframework.web.servlet.view.groovy.GroovyMarkupConfigurer.afterPropertiesSet(GroovyMarkupConfigurer.java:153)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1862)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1799)
	... 62 common frames omitted
2020-11-25 20:53:37,035 ERROR  [main] TestContextManager: Caught exception while allowing TestExecutionListener [org.springframework.test.context.web.ServletTestExecutionListener@170b27a7] to prepare test instance [com.sf.math.algebra.solvers.PolynomialSolverIntervalTest@6233bca8]
java.lang.IllegalStateException: Failed to load ApplicationContext
	at org.springframework.test.context.cache.DefaultCacheAwareContextLoaderDelegate.loadContext(DefaultCacheAwareContextLoaderDelegate.java:132)
	at org.springframework.test.context.support.DefaultTestContext.getApplicationContext(DefaultTestContext.java:123)
	at org.springframework.test.context.web.ServletTestExecutionListener.setUpRequestContextIfNecessary(ServletTestExecutionListener.java:190)
	at org.springframework.test.context.web.ServletTestExecutionListener.prepareTestInstance(ServletTestExecutionListener.java:132)
	at org.springframework.test.context.TestContextManager.prepareTestInstance(TestContextManager.java:244)
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner.createTest(SpringJUnit4ClassRunner.java:227)
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner$1.runReflectiveCall(SpringJUnit4ClassRunner.java:289)
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner.methodBlock(SpringJUnit4ClassRunner.java:291)
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner.runChild(SpringJUnit4ClassRunner.java:246)
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner.runChild(SpringJUnit4ClassRunner.java:97)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:290)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:71)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:58)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268)
	at org.junit.internal.runners.statements.RunBefores.evaluate(RunBefores.java:26)
	at org.springframework.test.context.junit4.statements.RunBeforeTestClassCallbacks.evaluate(RunBeforeTestClassCallbacks.java:61)
	at org.junit.internal.runners.statements.RunAfters.evaluate(RunAfters.java:27)
	at org.springframework.test.context.junit4.statements.RunAfterTestClassCallbacks.evaluate(RunAfterTestClassCallbacks.java:70)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:363)
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner.run(SpringJUnit4ClassRunner.java:190)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:137)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:115)
	at org.junit.vintage.engine.execution.RunnerExecutor.execute(RunnerExecutor.java:40)
	at java.base/java.util.stream.ForEachOps$ForEachOp$OfRef.accept(ForEachOps.java:183)
	at java.base/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:195)
	at java.base/java.util.Iterator.forEachRemaining(Iterator.java:133)
	at java.base/java.util.Spliterators$IteratorSpliterator.forEachRemaining(Spliterators.java:1801)
	at java.base/java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:484)
	at java.base/java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:474)
	at java.base/java.util.stream.ForEachOps$ForEachOp.evaluateSequential(ForEachOps.java:150)
	at java.base/java.util.stream.ForEachOps$ForEachOp$OfRef.evaluateSequential(ForEachOps.java:173)
	at java.base/java.util.stream.AbstractPipeline.evaluate(AbstractPipeline.java:234)
	at java.base/java.util.stream.ReferencePipeline.forEach(ReferencePipeline.java:497)
	at org.junit.vintage.engine.VintageTestEngine.executeAllChildren(VintageTestEngine.java:80)
	at org.junit.vintage.engine.VintageTestEngine.execute(VintageTestEngine.java:71)
	at org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:220)
	at org.junit.platform.launcher.core.DefaultLauncher.lambda$execute$6(DefaultLauncher.java:188)
	at org.junit.platform.launcher.core.DefaultLauncher.withInterceptedStreams(DefaultLauncher.java:202)
	at org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:181)
	at org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:128)
	at org.apache.maven.surefire.junitplatform.JUnitPlatformProvider.invokeAllTests(JUnitPlatformProvider.java:150)
	at org.apache.maven.surefire.junitplatform.JUnitPlatformProvider.invoke(JUnitPlatformProvider.java:124)
	at org.apache.maven.surefire.booter.ForkedBooter.invokeProviderInSameClassLoader(ForkedBooter.java:384)
	at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:345)
	at org.apache.maven.surefire.booter.ForkedBooter.execute(ForkedBooter.java:126)
	at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:418)
Caused by: org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'groovyMarkupConfigurer' defined in class path resource [org/springframework/boot/autoconfigure/groovy/template/GroovyTemplateAutoConfiguration$GroovyMarkupConfiguration.class]: Invocation of init method failed; nested exception is java.lang.reflect.InaccessibleObjectException: Unable to make jdk.internal.loader.ClassLoaders$AppClassLoader(jdk.internal.loader.ClassLoaders$PlatformClassLoader,jdk.internal.loader.URLClassPath) accessible: module java.base does not "opens jdk.internal.loader" to unnamed module @60fa3495
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1803)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:595)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:517)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:323)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:222)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:321)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:202)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(DefaultListableBeanFactory.java:879)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:878)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:550)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:747)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:397)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:315)
	at org.springframework.boot.test.context.SpringBootContextLoader.loadContext(SpringBootContextLoader.java:125)
	at org.springframework.test.context.cache.DefaultCacheAwareContextLoaderDelegate.loadContextInternal(DefaultCacheAwareContextLoaderDelegate.java:99)
	at org.springframework.test.context.cache.DefaultCacheAwareContextLoaderDelegate.loadContext(DefaultCacheAwareContextLoaderDelegate.java:124)
	... 47 common frames omitted
Caused by: java.lang.reflect.InaccessibleObjectException: Unable to make jdk.internal.loader.ClassLoaders$AppClassLoader(jdk.internal.loader.ClassLoaders$PlatformClassLoader,jdk.internal.loader.URLClassPath) accessible: module java.base does not "opens jdk.internal.loader" to unnamed module @60fa3495
	at java.base/java.lang.reflect.AccessibleObject.checkCanSetAccessible(AccessibleObject.java:344)
	at java.base/java.lang.reflect.AccessibleObject.checkCanSetAccessible(AccessibleObject.java:284)
	at java.base/java.lang.reflect.Constructor.checkCanSetAccessible(Constructor.java:189)
	at java.base/java.lang.reflect.Constructor.setAccessible(Constructor.java:182)
	at org.codehaus.groovy.reflection.CachedConstructor$1.run(CachedConstructor.java:44)
	at java.base/java.security.AccessController.doPrivileged(AccessController.java:312)
	at org.codehaus.groovy.reflection.CachedConstructor.<init>(CachedConstructor.java:42)
	at org.codehaus.groovy.reflection.CachedClass$2.initValue(CachedClass.java:79)
	at org.codehaus.groovy.reflection.CachedClass$2.initValue(CachedClass.java:69)
	at org.codehaus.groovy.util.LazyReference.getLocked(LazyReference.java:49)
	at org.codehaus.groovy.util.LazyReference.get(LazyReference.java:36)
	at org.codehaus.groovy.reflection.CachedClass.getConstructors(CachedClass.java:268)
	at groovy.lang.MetaClassImpl.<init>(MetaClassImpl.java:218)
	at groovy.lang.MetaClassImpl.<init>(MetaClassImpl.java:228)
	at groovy.lang.MetaClassRegistry$MetaClassCreationHandle.createNormalMetaClass(MetaClassRegistry.java:171)
	at groovy.lang.MetaClassRegistry$MetaClassCreationHandle.createWithCustomLookup(MetaClassRegistry.java:161)
	at groovy.lang.MetaClassRegistry$MetaClassCreationHandle.create(MetaClassRegistry.java:144)
	at org.codehaus.groovy.reflection.ClassInfo.getMetaClassUnderLock(ClassInfo.java:253)
	at org.codehaus.groovy.reflection.ClassInfo.getMetaClass(ClassInfo.java:285)
	at org.codehaus.groovy.reflection.ClassInfo.getMetaClass(ClassInfo.java:295)
	at org.codehaus.groovy.runtime.metaclass.MetaClassRegistryImpl.getMetaClass(MetaClassRegistryImpl.java:261)
	at org.codehaus.groovy.runtime.InvokerHelper.getMetaClass(InvokerHelper.java:873)
	at org.codehaus.groovy.runtime.InvokerHelper.invokePojoMethod(InvokerHelper.java:906)
	at org.codehaus.groovy.runtime.InvokerHelper.invokeMethod(InvokerHelper.java:898)
	at org.codehaus.groovy.runtime.typehandling.DefaultTypeTransformation.castToBoolean(DefaultTypeTransformation.java:185)
	at org.codehaus.groovy.runtime.typehandling.DefaultTypeTransformation.booleanUnbox(DefaultTypeTransformation.java:74)
	at org.codehaus.groovy.control.customizers.ASTTransformationCustomizer.findASTTranformationClass(ASTTransformationCustomizer.groovy:209)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:567)
	at org.codehaus.groovy.reflection.CachedMethod.invoke(CachedMethod.java:93)
	at org.codehaus.groovy.runtime.callsite.StaticMetaMethodSite$StaticMetaMethodSiteNoUnwrapNoCoerce.invoke(StaticMetaMethodSite.java:151)
	at org.codehaus.groovy.runtime.callsite.StaticMetaMethodSite.callStatic(StaticMetaMethodSite.java:102)
	at org.codehaus.groovy.runtime.callsite.AbstractCallSite.callStatic(AbstractCallSite.java:214)
	at org.codehaus.groovy.control.customizers.ASTTransformationCustomizer.findPhase(ASTTransformationCustomizer.groovy:226)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:567)
	at org.codehaus.groovy.reflection.CachedMethod.invoke(CachedMethod.java:93)
	at org.codehaus.groovy.runtime.callsite.StaticMetaMethodSite$StaticMetaMethodSiteNoUnwrapNoCoerce.invoke(StaticMetaMethodSite.java:151)
	at org.codehaus.groovy.runtime.callsite.StaticMetaMethodSite.callStatic(StaticMetaMethodSite.java:102)
	at org.codehaus.groovy.runtime.callsite.AbstractCallSite.callStatic(AbstractCallSite.java:214)
	at org.codehaus.groovy.control.customizers.ASTTransformationCustomizer.<init>(ASTTransformationCustomizer.groovy:180)
	at org.codehaus.groovy.control.customizers.ASTTransformationCustomizer.<init>(ASTTransformationCustomizer.groovy:188)
	at groovy.text.markup.MarkupTemplateEngine.<init>(MarkupTemplateEngine.java:94)
	at org.springframework.web.servlet.view.groovy.GroovyMarkupConfigurer.createTemplateEngine(GroovyMarkupConfigurer.java:160)
	at org.springframework.web.servlet.view.groovy.GroovyMarkupConfigurer.afterPropertiesSet(GroovyMarkupConfigurer.java:153)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1862)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1799)
	... 62 common frames omitted
2020-11-25 20:53:38,180 DEBUG  [main] BasicTypeRegistry: Adding type registration boolean -> org.hibernate.type.BooleanType@ff2266c
2020-11-25 20:53:38,187 DEBUG  [main] BasicTypeRegistry: Adding type registration boolean -> org.hibernate.type.BooleanType@ff2266c
2020-11-25 20:53:38,187 DEBUG  [main] BasicTypeRegistry: Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@ff2266c
2020-11-25 20:53:38,187 DEBUG  [main] BasicTypeRegistry: Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@1d585fb
2020-11-25 20:53:38,187 DEBUG  [main] BasicTypeRegistry: Adding type registration true_false -> org.hibernate.type.TrueFalseType@7c8f047a
2020-11-25 20:53:38,187 DEBUG  [main] BasicTypeRegistry: Adding type registration yes_no -> org.hibernate.type.YesNoType@d949bc4
2020-11-25 20:53:38,187 DEBUG  [main] BasicTypeRegistry: Adding type registration byte -> org.hibernate.type.ByteType@29c25bbc
2020-11-25 20:53:38,188 DEBUG  [main] BasicTypeRegistry: Adding type registration byte -> org.hibernate.type.ByteType@29c25bbc
2020-11-25 20:53:38,188 DEBUG  [main] BasicTypeRegistry: Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@29c25bbc
2020-11-25 20:53:38,188 DEBUG  [main] BasicTypeRegistry: Adding type registration character -> org.hibernate.type.CharacterType@403f7aa2
2020-11-25 20:53:38,188 DEBUG  [main] BasicTypeRegistry: Adding type registration char -> org.hibernate.type.CharacterType@403f7aa2
2020-11-25 20:53:38,188 DEBUG  [main] BasicTypeRegistry: Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@403f7aa2
2020-11-25 20:53:38,188 DEBUG  [main] BasicTypeRegistry: Adding type registration short -> org.hibernate.type.ShortType@38cb1606
2020-11-25 20:53:38,188 DEBUG  [main] BasicTypeRegistry: Adding type registration short -> org.hibernate.type.ShortType@38cb1606
2020-11-25 20:53:38,189 DEBUG  [main] BasicTypeRegistry: Adding type registration java.lang.Short -> org.hibernate.type.ShortType@38cb1606
2020-11-25 20:53:38,189 DEBUG  [main] BasicTypeRegistry: Adding type registration integer -> org.hibernate.type.IntegerType@5d3b6585
2020-11-25 20:53:38,189 DEBUG  [main] BasicTypeRegistry: Adding type registration int -> org.hibernate.type.IntegerType@5d3b6585
2020-11-25 20:53:38,189 DEBUG  [main] BasicTypeRegistry: Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@5d3b6585
2020-11-25 20:53:38,189 DEBUG  [main] BasicTypeRegistry: Adding type registration long -> org.hibernate.type.LongType@4fea5ee0
2020-11-25 20:53:38,189 DEBUG  [main] BasicTypeRegistry: Adding type registration long -> org.hibernate.type.LongType@4fea5ee0
2020-11-25 20:53:38,189 DEBUG  [main] BasicTypeRegistry: Adding type registration java.lang.Long -> org.hibernate.type.LongType@4fea5ee0
2020-11-25 20:53:38,190 DEBUG  [main] BasicTypeRegistry: Adding type registration float -> org.hibernate.type.FloatType@7b3085a3
2020-11-25 20:53:38,190 DEBUG  [main] BasicTypeRegistry: Adding type registration float -> org.hibernate.type.FloatType@7b3085a3
2020-11-25 20:53:38,190 DEBUG  [main] BasicTypeRegistry: Adding type registration java.lang.Float -> org.hibernate.type.FloatType@7b3085a3
2020-11-25 20:53:38,190 DEBUG  [main] BasicTypeRegistry: Adding type registration double -> org.hibernate.type.DoubleType@5a7a6d34
2020-11-25 20:53:38,190 DEBUG  [main] BasicTypeRegistry: Adding type registration double -> org.hibernate.type.DoubleType@5a7a6d34
2020-11-25 20:53:38,190 DEBUG  [main] BasicTypeRegistry: Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@5a7a6d34
2020-11-25 20:53:38,190 DEBUG  [main] BasicTypeRegistry: Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@5ae66c98
2020-11-25 20:53:38,191 DEBUG  [main] BasicTypeRegistry: Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@5ae66c98
2020-11-25 20:53:38,191 DEBUG  [main] BasicTypeRegistry: Adding type registration big_integer -> org.hibernate.type.BigIntegerType@223cbf0d
2020-11-25 20:53:38,191 DEBUG  [main] BasicTypeRegistry: Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@223cbf0d
2020-11-25 20:53:38,191 DEBUG  [main] BasicTypeRegistry: Adding type registration string -> org.hibernate.type.StringType@4f581211
2020-11-25 20:53:38,191 DEBUG  [main] BasicTypeRegistry: Adding type registration java.lang.String -> org.hibernate.type.StringType@4f581211
2020-11-25 20:53:38,191 DEBUG  [main] BasicTypeRegistry: Adding type registration nstring -> org.hibernate.type.StringNVarcharType@6697f3d
2020-11-25 20:53:38,191 DEBUG  [main] BasicTypeRegistry: Adding type registration ncharacter -> org.hibernate.type.CharacterNCharType@f1d1463
2020-11-25 20:53:38,191 DEBUG  [main] BasicTypeRegistry: Adding type registration url -> org.hibernate.type.UrlType@44ddb518
2020-11-25 20:53:38,191 DEBUG  [main] BasicTypeRegistry: Adding type registration java.net.URL -> org.hibernate.type.UrlType@44ddb518
2020-11-25 20:53:38,192 DEBUG  [main] BasicTypeRegistry: Adding type registration Duration -> org.hibernate.type.DurationType@49e0b123
2020-11-25 20:53:38,192 DEBUG  [main] BasicTypeRegistry: Adding type registration java.time.Duration -> org.hibernate.type.DurationType@49e0b123
2020-11-25 20:53:38,192 DEBUG  [main] BasicTypeRegistry: Adding type registration Instant -> org.hibernate.type.InstantType@40a28bda
2020-11-25 20:53:38,192 DEBUG  [main] BasicTypeRegistry: Adding type registration java.time.Instant -> org.hibernate.type.InstantType@40a28bda
2020-11-25 20:53:38,192 DEBUG  [main] BasicTypeRegistry: Adding type registration LocalDateTime -> org.hibernate.type.LocalDateTimeType@33430fc
2020-11-25 20:53:38,192 DEBUG  [main] BasicTypeRegistry: Adding type registration java.time.LocalDateTime -> org.hibernate.type.LocalDateTimeType@33430fc
2020-11-25 20:53:38,192 DEBUG  [main] BasicTypeRegistry: Adding type registration LocalDate -> org.hibernate.type.LocalDateType@d7055be
2020-11-25 20:53:38,193 DEBUG  [main] BasicTypeRegistry: Adding type registration java.time.LocalDate -> org.hibernate.type.LocalDateType@d7055be
2020-11-25 20:53:38,193 DEBUG  [main] BasicTypeRegistry: Adding type registration LocalTime -> org.hibernate.type.LocalTimeType@3c7d8a4
2020-11-25 20:53:38,193 DEBUG  [main] BasicTypeRegistry: Adding type registration java.time.LocalTime -> org.hibernate.type.LocalTimeType@3c7d8a4
2020-11-25 20:53:38,193 DEBUG  [main] BasicTypeRegistry: Adding type registration OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@7a117dc2
2020-11-25 20:53:38,193 DEBUG  [main] BasicTypeRegistry: Adding type registration java.time.OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@7a117dc2
2020-11-25 20:53:38,193 DEBUG  [main] BasicTypeRegistry: Adding type registration OffsetTime -> org.hibernate.type.OffsetTimeType@3c64339f
2020-11-25 20:53:38,193 DEBUG  [main] BasicTypeRegistry: Adding type registration java.time.OffsetTime -> org.hibernate.type.OffsetTimeType@3c64339f
2020-11-25 20:53:38,194 DEBUG  [main] BasicTypeRegistry: Adding type registration ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@30c8c6ab
2020-11-25 20:53:38,194 DEBUG  [main] BasicTypeRegistry: Adding type registration java.time.ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@30c8c6ab
2020-11-25 20:53:38,194 DEBUG  [main] BasicTypeRegistry: Adding type registration date -> org.hibernate.type.DateType@61c5fd78
2020-11-25 20:53:38,194 DEBUG  [main] BasicTypeRegistry: Adding type registration java.sql.Date -> org.hibernate.type.DateType@61c5fd78
2020-11-25 20:53:38,194 DEBUG  [main] BasicTypeRegistry: Adding type registration time -> org.hibernate.type.TimeType@77856cc5
2020-11-25 20:53:38,194 DEBUG  [main] BasicTypeRegistry: Adding type registration java.sql.Time -> org.hibernate.type.TimeType@77856cc5
2020-11-25 20:53:38,195 DEBUG  [main] BasicTypeRegistry: Adding type registration timestamp -> org.hibernate.type.TimestampType@12166229
2020-11-25 20:53:38,195 DEBUG  [main] BasicTypeRegistry: Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@12166229
2020-11-25 20:53:38,195 DEBUG  [main] BasicTypeRegistry: Adding type registration java.util.Date -> org.hibernate.type.TimestampType@12166229
2020-11-25 20:53:38,195 DEBUG  [main] BasicTypeRegistry: Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@2b4829aa
2020-11-25 20:53:38,195 DEBUG  [main] BasicTypeRegistry: Adding type registration calendar -> org.hibernate.type.CalendarType@3ec082a1
2020-11-25 20:53:38,195 DEBUG  [main] BasicTypeRegistry: Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@3ec082a1
2020-11-25 20:53:38,195 DEBUG  [main] BasicTypeRegistry: Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@3ec082a1
2020-11-25 20:53:38,195 DEBUG  [main] BasicTypeRegistry: Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@429f0ca8
2020-11-25 20:53:38,195 DEBUG  [main] BasicTypeRegistry: Adding type registration locale -> org.hibernate.type.LocaleType@11c3ce6a
2020-11-25 20:53:38,196 DEBUG  [main] BasicTypeRegistry: Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@11c3ce6a
2020-11-25 20:53:38,196 DEBUG  [main] BasicTypeRegistry: Adding type registration currency -> org.hibernate.type.CurrencyType@28519bfb
2020-11-25 20:53:38,196 DEBUG  [main] BasicTypeRegistry: Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@28519bfb
2020-11-25 20:53:38,196 DEBUG  [main] BasicTypeRegistry: Adding type registration timezone -> org.hibernate.type.TimeZoneType@7aa15a80
2020-11-25 20:53:38,196 DEBUG  [main] BasicTypeRegistry: Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@7aa15a80
2020-11-25 20:53:38,196 DEBUG  [main] BasicTypeRegistry: Adding type registration class -> org.hibernate.type.ClassType@48d5ca17
2020-11-25 20:53:38,196 DEBUG  [main] BasicTypeRegistry: Adding type registration java.lang.Class -> org.hibernate.type.ClassType@48d5ca17
2020-11-25 20:53:38,196 DEBUG  [main] BasicTypeRegistry: Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@79b8ecb
2020-11-25 20:53:38,196 DEBUG  [main] BasicTypeRegistry: Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@79b8ecb
2020-11-25 20:53:38,197 DEBUG  [main] BasicTypeRegistry: Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@c0013b8
2020-11-25 20:53:38,197 DEBUG  [main] BasicTypeRegistry: Adding type registration binary -> org.hibernate.type.BinaryType@2a42019a
2020-11-25 20:53:38,197 DEBUG  [main] BasicTypeRegistry: Adding type registration byte[] -> org.hibernate.type.BinaryType@2a42019a
2020-11-25 20:53:38,197 DEBUG  [main] BasicTypeRegistry: Adding type registration [B -> org.hibernate.type.BinaryType@2a42019a
2020-11-25 20:53:38,197 DEBUG  [main] BasicTypeRegistry: Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@495da9a7
2020-11-25 20:53:38,197 DEBUG  [main] BasicTypeRegistry: Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@495da9a7
2020-11-25 20:53:38,198 DEBUG  [main] BasicTypeRegistry: Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@495da9a7
2020-11-25 20:53:38,198 DEBUG  [main] BasicTypeRegistry: Adding type registration row_version -> org.hibernate.type.RowVersionType@35becbd4
2020-11-25 20:53:38,198 DEBUG  [main] BasicTypeRegistry: Adding type registration image -> org.hibernate.type.ImageType@30fa8a6b
2020-11-25 20:53:38,198 DEBUG  [main] BasicTypeRegistry: Adding type registration characters -> org.hibernate.type.CharArrayType@4c8d45cf
2020-11-25 20:53:38,198 DEBUG  [main] BasicTypeRegistry: Adding type registration char[] -> org.hibernate.type.CharArrayType@4c8d45cf
2020-11-25 20:53:38,198 DEBUG  [main] BasicTypeRegistry: Adding type registration [C -> org.hibernate.type.CharArrayType@4c8d45cf
2020-11-25 20:53:38,198 DEBUG  [main] BasicTypeRegistry: Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@5b490d5e
2020-11-25 20:53:38,199 DEBUG  [main] BasicTypeRegistry: Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@5b490d5e
2020-11-25 20:53:38,199 DEBUG  [main] BasicTypeRegistry: Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@5b490d5e
2020-11-25 20:53:38,199 DEBUG  [main] BasicTypeRegistry: Adding type registration text -> org.hibernate.type.TextType@18b04526
2020-11-25 20:53:38,199 DEBUG  [main] BasicTypeRegistry: Adding type registration ntext -> org.hibernate.type.NTextType@246df37b
2020-11-25 20:53:38,199 DEBUG  [main] BasicTypeRegistry: Adding type registration blob -> org.hibernate.type.BlobType@56881196
2020-11-25 20:53:38,199 DEBUG  [main] BasicTypeRegistry: Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@56881196
2020-11-25 20:53:38,199 DEBUG  [main] BasicTypeRegistry: Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@131c0b6f
2020-11-25 20:53:38,199 DEBUG  [main] BasicTypeRegistry: Adding type registration clob -> org.hibernate.type.ClobType@7fc1fd31
2020-11-25 20:53:38,200 DEBUG  [main] BasicTypeRegistry: Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@7fc1fd31
2020-11-25 20:53:38,200 DEBUG  [main] BasicTypeRegistry: Adding type registration nclob -> org.hibernate.type.NClobType@70777a65
2020-11-25 20:53:38,200 DEBUG  [main] BasicTypeRegistry: Adding type registration java.sql.NClob -> org.hibernate.type.NClobType@70777a65
2020-11-25 20:53:38,200 DEBUG  [main] BasicTypeRegistry: Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@2f6f4ac4
2020-11-25 20:53:38,200 DEBUG  [main] BasicTypeRegistry: Adding type registration materialized_nclob -> org.hibernate.type.MaterializedNClobType@7d685f4e
2020-11-25 20:53:38,200 DEBUG  [main] BasicTypeRegistry: Adding type registration serializable -> org.hibernate.type.SerializableType@319aa9ee
2020-11-25 20:53:38,200 DEBUG  [main] BasicTypeRegistry: Adding type registration object -> org.hibernate.type.ObjectType@54234569
2020-11-25 20:53:38,201 DEBUG  [main] BasicTypeRegistry: Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@54234569
2020-11-25 20:53:38,201 DEBUG  [main] BasicTypeRegistry: Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@2f29400e
2020-11-25 20:53:38,201 DEBUG  [main] BasicTypeRegistry: Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@66161fee
2020-11-25 20:53:38,201 DEBUG  [main] BasicTypeRegistry: Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@547a79cd
2020-11-25 20:53:38,201 DEBUG  [main] BasicTypeRegistry: Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@67127bb1
2020-11-25 20:53:38,201 DEBUG  [main] BasicTypeRegistry: Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@25e7e6d
2020-11-25 20:53:38,201 DEBUG  [main] BasicTypeRegistry: Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@54e1e8a7
2020-11-25 20:53:38,201 DEBUG  [main] BasicTypeRegistry: Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@53d257e7
2020-11-25 20:53:38,202 DEBUG  [main] BasicTypeRegistry: Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@276961df
2020-11-25 20:53:38,216 DEBUG  [main] TypeConfiguration$Scope: Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@5e5d41dc] to MetadataBuildingContext [org.hibernate.boot.internal.MetadataBuildingContextRootImpl@87f4794]
2020-11-25 20:53:38,242 DEBUG  [main] EnumType: Using NAMED-based conversion for Enum com.sf.back.entities.Kind
2020-11-25 20:53:38,245 DEBUG  [main] EnumType: Using NAMED-based conversion for Enum com.sf.back.entities.Kind
2020-11-25 20:53:38,260 DEBUG  [main] TypeConfiguration$Scope: Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@5e5d41dc] to SessionFactoryImpl [org.hibernate.internal.SessionFactoryImpl@3ceb8e1f]
2020-11-25 20:53:38,261 DEBUG  [main] EnumType: Using NAMED-based conversion for Enum com.sf.back.entities.Kind
2020-11-25 20:53:38,261 DEBUG  [main] EnumType: Using NAMED-based conversion for Enum com.sf.back.entities.Kind
2020-11-25 20:53:38,288 DEBUG  [main] EnumType: Using NAMED-based conversion for Enum com.sf.back.entities.Kind
2020-11-25 20:53:38,289 DEBUG  [main] EnumType: Using NAMED-based conversion for Enum com.sf.back.entities.Kind
2020-11-25 20:53:38,310 DEBUG  [main] EnumType: Using NAMED-based conversion for Enum com.sf.back.entities.Kind
2020-11-25 20:53:38,310 DEBUG  [main] EnumType: Using NAMED-based conversion for Enum com.sf.back.entities.Kind
2020-11-25 20:53:38,321 DEBUG  [main] EnumType: Using NAMED-based conversion for Enum com.sf.back.entities.Kind
2020-11-25 20:53:38,335 TRACE  [main] TypeConfiguration$Scope: Handling #sessionFactoryCreated from [org.hibernate.internal.SessionFactoryImpl@3ceb8e1f] for TypeConfiguration
2020-11-25 20:53:38,482 WARN   [main] JpaBaseConfiguration$JpaWebConfiguration: spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2020-11-25 20:53:38,606 WARN   [main] GenericWebApplicationContext: Exception encountered during context initialization - cancelling refresh attempt: org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'groovyMarkupConfigurer' defined in class path resource [org/springframework/boot/autoconfigure/groovy/template/GroovyTemplateAutoConfiguration$GroovyMarkupConfiguration.class]: Invocation of init method failed; nested exception is java.lang.reflect.InaccessibleObjectException: Unable to make jdk.internal.loader.ClassLoaders$AppClassLoader(jdk.internal.loader.ClassLoaders$PlatformClassLoader,jdk.internal.loader.URLClassPath) accessible: module java.base does not "opens jdk.internal.loader" to unnamed module @60fa3495
2020-11-25 20:53:38,609 TRACE  [main] TypeConfiguration$Scope: Handling #sessionFactoryClosed from [org.hibernate.internal.SessionFactoryImpl@3ceb8e1f] for TypeConfiguration
2020-11-25 20:53:38,609 DEBUG  [main] TypeConfiguration$Scope: Un-scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration$Scope@6fc26fb1] from SessionFactory [org.hibernate.internal.SessionFactoryImpl@3ceb8e1f]
2020-11-25 20:53:38,623 ERROR  [main] SpringApplication: Application run failed
org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'groovyMarkupConfigurer' defined in class path resource [org/springframework/boot/autoconfigure/groovy/template/GroovyTemplateAutoConfiguration$GroovyMarkupConfiguration.class]: Invocation of init method failed; nested exception is java.lang.reflect.InaccessibleObjectException: Unable to make jdk.internal.loader.ClassLoaders$AppClassLoader(jdk.internal.loader.ClassLoaders$PlatformClassLoader,jdk.internal.loader.URLClassPath) accessible: module java.base does not "opens jdk.internal.loader" to unnamed module @60fa3495
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1803)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:595)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:517)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:323)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:222)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:321)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:202)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(DefaultListableBeanFactory.java:879)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:878)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:550)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:747)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:397)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:315)
	at org.springframework.boot.test.context.SpringBootContextLoader.loadContext(SpringBootContextLoader.java:125)
	at org.springframework.test.context.cache.DefaultCacheAwareContextLoaderDelegate.loadContextInternal(DefaultCacheAwareContextLoaderDelegate.java:99)
	at org.springframework.test.context.cache.DefaultCacheAwareContextLoaderDelegate.loadContext(DefaultCacheAwareContextLoaderDelegate.java:124)
	at org.springframework.test.context.support.DefaultTestContext.getApplicationContext(DefaultTestContext.java:123)
	at org.springframework.test.context.web.ServletTestExecutionListener.setUpRequestContextIfNecessary(ServletTestExecutionListener.java:190)
	at org.springframework.test.context.web.ServletTestExecutionListener.prepareTestInstance(ServletTestExecutionListener.java:132)
	at org.springframework.test.context.TestContextManager.prepareTestInstance(TestContextManager.java:244)
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner.createTest(SpringJUnit4ClassRunner.java:227)
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner$1.runReflectiveCall(SpringJUnit4ClassRunner.java:289)
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner.methodBlock(SpringJUnit4ClassRunner.java:291)
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner.runChild(SpringJUnit4ClassRunner.java:246)
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner.runChild(SpringJUnit4ClassRunner.java:97)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:290)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:71)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:58)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268)
	at org.junit.internal.runners.statements.RunBefores.evaluate(RunBefores.java:26)
	at org.springframework.test.context.junit4.statements.RunBeforeTestClassCallbacks.evaluate(RunBeforeTestClassCallbacks.java:61)
	at org.junit.internal.runners.statements.RunAfters.evaluate(RunAfters.java:27)
	at org.springframework.test.context.junit4.statements.RunAfterTestClassCallbacks.evaluate(RunAfterTestClassCallbacks.java:70)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:363)
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner.run(SpringJUnit4ClassRunner.java:190)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:137)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:115)
	at org.junit.vintage.engine.execution.RunnerExecutor.execute(RunnerExecutor.java:40)
	at java.base/java.util.stream.ForEachOps$ForEachOp$OfRef.accept(ForEachOps.java:183)
	at java.base/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:195)
	at java.base/java.util.Iterator.forEachRemaining(Iterator.java:133)
	at java.base/java.util.Spliterators$IteratorSpliterator.forEachRemaining(Spliterators.java:1801)
	at java.base/java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:484)
	at java.base/java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:474)
	at java.base/java.util.stream.ForEachOps$ForEachOp.evaluateSequential(ForEachOps.java:150)
	at java.base/java.util.stream.ForEachOps$ForEachOp$OfRef.evaluateSequential(ForEachOps.java:173)
	at java.base/java.util.stream.AbstractPipeline.evaluate(AbstractPipeline.java:234)
	at java.base/java.util.stream.ReferencePipeline.forEach(ReferencePipeline.java:497)
	at org.junit.vintage.engine.VintageTestEngine.executeAllChildren(VintageTestEngine.java:80)
	at org.junit.vintage.engine.VintageTestEngine.execute(VintageTestEngine.java:71)
	at org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:220)
	at org.junit.platform.launcher.core.DefaultLauncher.lambda$execute$6(DefaultLauncher.java:188)
	at org.junit.platform.launcher.core.DefaultLauncher.withInterceptedStreams(DefaultLauncher.java:202)
	at org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:181)
	at org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:128)
	at org.apache.maven.surefire.junitplatform.JUnitPlatformProvider.invokeAllTests(JUnitPlatformProvider.java:150)
	at org.apache.maven.surefire.junitplatform.JUnitPlatformProvider.invoke(JUnitPlatformProvider.java:124)
	at org.apache.maven.surefire.booter.ForkedBooter.invokeProviderInSameClassLoader(ForkedBooter.java:384)
	at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:345)
	at org.apache.maven.surefire.booter.ForkedBooter.execute(ForkedBooter.java:126)
	at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:418)
Caused by: java.lang.reflect.InaccessibleObjectException: Unable to make jdk.internal.loader.ClassLoaders$AppClassLoader(jdk.internal.loader.ClassLoaders$PlatformClassLoader,jdk.internal.loader.URLClassPath) accessible: module java.base does not "opens jdk.internal.loader" to unnamed module @60fa3495
	at java.base/java.lang.reflect.AccessibleObject.checkCanSetAccessible(AccessibleObject.java:344)
	at java.base/java.lang.reflect.AccessibleObject.checkCanSetAccessible(AccessibleObject.java:284)
	at java.base/java.lang.reflect.Constructor.checkCanSetAccessible(Constructor.java:189)
	at java.base/java.lang.reflect.Constructor.setAccessible(Constructor.java:182)
	at org.codehaus.groovy.reflection.CachedConstructor$1.run(CachedConstructor.java:44)
	at java.base/java.security.AccessController.doPrivileged(AccessController.java:312)
	at org.codehaus.groovy.reflection.CachedConstructor.<init>(CachedConstructor.java:42)
	at org.codehaus.groovy.reflection.CachedClass$2.initValue(CachedClass.java:79)
	at org.codehaus.groovy.reflection.CachedClass$2.initValue(CachedClass.java:69)
	at org.codehaus.groovy.util.LazyReference.getLocked(LazyReference.java:49)
	at org.codehaus.groovy.util.LazyReference.get(LazyReference.java:36)
	at org.codehaus.groovy.reflection.CachedClass.getConstructors(CachedClass.java:268)
	at groovy.lang.MetaClassImpl.<init>(MetaClassImpl.java:218)
	at groovy.lang.MetaClassImpl.<init>(MetaClassImpl.java:228)
	at groovy.lang.MetaClassRegistry$MetaClassCreationHandle.createNormalMetaClass(MetaClassRegistry.java:171)
	at groovy.lang.MetaClassRegistry$MetaClassCreationHandle.createWithCustomLookup(MetaClassRegistry.java:161)
	at groovy.lang.MetaClassRegistry$MetaClassCreationHandle.create(MetaClassRegistry.java:144)
	at org.codehaus.groovy.reflection.ClassInfo.getMetaClassUnderLock(ClassInfo.java:253)
	at org.codehaus.groovy.reflection.ClassInfo.getMetaClass(ClassInfo.java:285)
	at org.codehaus.groovy.reflection.ClassInfo.getMetaClass(ClassInfo.java:295)
	at org.codehaus.groovy.runtime.metaclass.MetaClassRegistryImpl.getMetaClass(MetaClassRegistryImpl.java:261)
	at org.codehaus.groovy.runtime.InvokerHelper.getMetaClass(InvokerHelper.java:873)
	at org.codehaus.groovy.runtime.InvokerHelper.invokePojoMethod(InvokerHelper.java:906)
	at org.codehaus.groovy.runtime.InvokerHelper.invokeMethod(InvokerHelper.java:898)
	at org.codehaus.groovy.runtime.typehandling.DefaultTypeTransformation.castToBoolean(DefaultTypeTransformation.java:185)
	at org.codehaus.groovy.runtime.typehandling.DefaultTypeTransformation.booleanUnbox(DefaultTypeTransformation.java:74)
	at org.codehaus.groovy.control.customizers.ASTTransformationCustomizer.findASTTranformationClass(ASTTransformationCustomizer.groovy:209)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:567)
	at org.codehaus.groovy.reflection.CachedMethod.invoke(CachedMethod.java:93)
	at org.codehaus.groovy.runtime.callsite.StaticMetaMethodSite$StaticMetaMethodSiteNoUnwrapNoCoerce.invoke(StaticMetaMethodSite.java:151)
	at org.codehaus.groovy.runtime.callsite.StaticMetaMethodSite.callStatic(StaticMetaMethodSite.java:102)
	at org.codehaus.groovy.runtime.callsite.AbstractCallSite.callStatic(AbstractCallSite.java:214)
	at org.codehaus.groovy.control.customizers.ASTTransformationCustomizer.findPhase(ASTTransformationCustomizer.groovy:226)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:567)
	at org.codehaus.groovy.reflection.CachedMethod.invoke(CachedMethod.java:93)
	at org.codehaus.groovy.runtime.callsite.StaticMetaMethodSite$StaticMetaMethodSiteNoUnwrapNoCoerce.invoke(StaticMetaMethodSite.java:151)
	at org.codehaus.groovy.runtime.callsite.StaticMetaMethodSite.callStatic(StaticMetaMethodSite.java:102)
	at org.codehaus.groovy.runtime.callsite.AbstractCallSite.callStatic(AbstractCallSite.java:214)
	at org.codehaus.groovy.control.customizers.ASTTransformationCustomizer.<init>(ASTTransformationCustomizer.groovy:180)
	at org.codehaus.groovy.control.customizers.ASTTransformationCustomizer.<init>(ASTTransformationCustomizer.groovy:188)
	at groovy.text.markup.MarkupTemplateEngine.<init>(MarkupTemplateEngine.java:94)
	at org.springframework.web.servlet.view.groovy.GroovyMarkupConfigurer.createTemplateEngine(GroovyMarkupConfigurer.java:160)
	at org.springframework.web.servlet.view.groovy.GroovyMarkupConfigurer.afterPropertiesSet(GroovyMarkupConfigurer.java:153)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1862)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1799)
	... 62 common frames omitted
2020-11-25 20:53:38,624 ERROR  [main] TestContextManager: Caught exception while allowing TestExecutionListener [org.springframework.test.context.web.ServletTestExecutionListener@170b27a7] to prepare test instance [com.sf.math.algebra.solvers.PolynomialSolverIntervalTest@3746135b]
java.lang.IllegalStateException: Failed to load ApplicationContext
	at org.springframework.test.context.cache.DefaultCacheAwareContextLoaderDelegate.loadContext(DefaultCacheAwareContextLoaderDelegate.java:132)
	at org.springframework.test.context.support.DefaultTestContext.getApplicationContext(DefaultTestContext.java:123)
	at org.springframework.test.context.web.ServletTestExecutionListener.setUpRequestContextIfNecessary(ServletTestExecutionListener.java:190)
	at org.springframework.test.context.web.ServletTestExecutionListener.prepareTestInstance(ServletTestExecutionListener.java:132)
	at org.springframework.test.context.TestContextManager.prepareTestInstance(TestContextManager.java:244)
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner.createTest(SpringJUnit4ClassRunner.java:227)
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner$1.runReflectiveCall(SpringJUnit4ClassRunner.java:289)
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner.methodBlock(SpringJUnit4ClassRunner.java:291)
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner.runChild(SpringJUnit4ClassRunner.java:246)
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner.runChild(SpringJUnit4ClassRunner.java:97)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:290)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:71)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:58)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268)
	at org.junit.internal.runners.statements.RunBefores.evaluate(RunBefores.java:26)
	at org.springframework.test.context.junit4.statements.RunBeforeTestClassCallbacks.evaluate(RunBeforeTestClassCallbacks.java:61)
	at org.junit.internal.runners.statements.RunAfters.evaluate(RunAfters.java:27)
	at org.springframework.test.context.junit4.statements.RunAfterTestClassCallbacks.evaluate(RunAfterTestClassCallbacks.java:70)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:363)
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner.run(SpringJUnit4ClassRunner.java:190)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:137)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:115)
	at org.junit.vintage.engine.execution.RunnerExecutor.execute(RunnerExecutor.java:40)
	at java.base/java.util.stream.ForEachOps$ForEachOp$OfRef.accept(ForEachOps.java:183)
	at java.base/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:195)
	at java.base/java.util.Iterator.forEachRemaining(Iterator.java:133)
	at java.base/java.util.Spliterators$IteratorSpliterator.forEachRemaining(Spliterators.java:1801)
	at java.base/java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:484)
	at java.base/java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:474)
	at java.base/java.util.stream.ForEachOps$ForEachOp.evaluateSequential(ForEachOps.java:150)
	at java.base/java.util.stream.ForEachOps$ForEachOp$OfRef.evaluateSequential(ForEachOps.java:173)
	at java.base/java.util.stream.AbstractPipeline.evaluate(AbstractPipeline.java:234)
	at java.base/java.util.stream.ReferencePipeline.forEach(ReferencePipeline.java:497)
	at org.junit.vintage.engine.VintageTestEngine.executeAllChildren(VintageTestEngine.java:80)
	at org.junit.vintage.engine.VintageTestEngine.execute(VintageTestEngine.java:71)
	at org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:220)
	at org.junit.platform.launcher.core.DefaultLauncher.lambda$execute$6(DefaultLauncher.java:188)
	at org.junit.platform.launcher.core.DefaultLauncher.withInterceptedStreams(DefaultLauncher.java:202)
	at org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:181)
	at org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:128)
	at org.apache.maven.surefire.junitplatform.JUnitPlatformProvider.invokeAllTests(JUnitPlatformProvider.java:150)
	at org.apache.maven.surefire.junitplatform.JUnitPlatformProvider.invoke(JUnitPlatformProvider.java:124)
	at org.apache.maven.surefire.booter.ForkedBooter.invokeProviderInSameClassLoader(ForkedBooter.java:384)
	at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:345)
	at org.apache.maven.surefire.booter.ForkedBooter.execute(ForkedBooter.java:126)
	at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:418)
Caused by: org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'groovyMarkupConfigurer' defined in class path resource [org/springframework/boot/autoconfigure/groovy/template/GroovyTemplateAutoConfiguration$GroovyMarkupConfiguration.class]: Invocation of init method failed; nested exception is java.lang.reflect.InaccessibleObjectException: Unable to make jdk.internal.loader.ClassLoaders$AppClassLoader(jdk.internal.loader.ClassLoaders$PlatformClassLoader,jdk.internal.loader.URLClassPath) accessible: module java.base does not "opens jdk.internal.loader" to unnamed module @60fa3495
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1803)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:595)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:517)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:323)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:222)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:321)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:202)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(DefaultListableBeanFactory.java:879)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:878)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:550)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:747)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:397)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:315)
	at org.springframework.boot.test.context.SpringBootContextLoader.loadContext(SpringBootContextLoader.java:125)
	at org.springframework.test.context.cache.DefaultCacheAwareContextLoaderDelegate.loadContextInternal(DefaultCacheAwareContextLoaderDelegate.java:99)
	at org.springframework.test.context.cache.DefaultCacheAwareContextLoaderDelegate.loadContext(DefaultCacheAwareContextLoaderDelegate.java:124)
	... 47 common frames omitted
Caused by: java.lang.reflect.InaccessibleObjectException: Unable to make jdk.internal.loader.ClassLoaders$AppClassLoader(jdk.internal.loader.ClassLoaders$PlatformClassLoader,jdk.internal.loader.URLClassPath) accessible: module java.base does not "opens jdk.internal.loader" to unnamed module @60fa3495
	at java.base/java.lang.reflect.AccessibleObject.checkCanSetAccessible(AccessibleObject.java:344)
	at java.base/java.lang.reflect.AccessibleObject.checkCanSetAccessible(AccessibleObject.java:284)
	at java.base/java.lang.reflect.Constructor.checkCanSetAccessible(Constructor.java:189)
	at java.base/java.lang.reflect.Constructor.setAccessible(Constructor.java:182)
	at org.codehaus.groovy.reflection.CachedConstructor$1.run(CachedConstructor.java:44)
	at java.base/java.security.AccessController.doPrivileged(AccessController.java:312)
	at org.codehaus.groovy.reflection.CachedConstructor.<init>(CachedConstructor.java:42)
	at org.codehaus.groovy.reflection.CachedClass$2.initValue(CachedClass.java:79)
	at org.codehaus.groovy.reflection.CachedClass$2.initValue(CachedClass.java:69)
	at org.codehaus.groovy.util.LazyReference.getLocked(LazyReference.java:49)
	at org.codehaus.groovy.util.LazyReference.get(LazyReference.java:36)
	at org.codehaus.groovy.reflection.CachedClass.getConstructors(CachedClass.java:268)
	at groovy.lang.MetaClassImpl.<init>(MetaClassImpl.java:218)
	at groovy.lang.MetaClassImpl.<init>(MetaClassImpl.java:228)
	at groovy.lang.MetaClassRegistry$MetaClassCreationHandle.createNormalMetaClass(MetaClassRegistry.java:171)
	at groovy.lang.MetaClassRegistry$MetaClassCreationHandle.createWithCustomLookup(MetaClassRegistry.java:161)
	at groovy.lang.MetaClassRegistry$MetaClassCreationHandle.create(MetaClassRegistry.java:144)
	at org.codehaus.groovy.reflection.ClassInfo.getMetaClassUnderLock(ClassInfo.java:253)
	at org.codehaus.groovy.reflection.ClassInfo.getMetaClass(ClassInfo.java:285)
	at org.codehaus.groovy.reflection.ClassInfo.getMetaClass(ClassInfo.java:295)
	at org.codehaus.groovy.runtime.metaclass.MetaClassRegistryImpl.getMetaClass(MetaClassRegistryImpl.java:261)
	at org.codehaus.groovy.runtime.InvokerHelper.getMetaClass(InvokerHelper.java:873)
	at org.codehaus.groovy.runtime.InvokerHelper.invokePojoMethod(InvokerHelper.java:906)
	at org.codehaus.groovy.runtime.InvokerHelper.invokeMethod(InvokerHelper.java:898)
	at org.codehaus.groovy.runtime.typehandling.DefaultTypeTransformation.castToBoolean(DefaultTypeTransformation.java:185)
	at org.codehaus.groovy.runtime.typehandling.DefaultTypeTransformation.booleanUnbox(DefaultTypeTransformation.java:74)
	at org.codehaus.groovy.control.customizers.ASTTransformationCustomizer.findASTTranformationClass(ASTTransformationCustomizer.groovy:209)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:567)
	at org.codehaus.groovy.reflection.CachedMethod.invoke(CachedMethod.java:93)
	at org.codehaus.groovy.runtime.callsite.StaticMetaMethodSite$StaticMetaMethodSiteNoUnwrapNoCoerce.invoke(StaticMetaMethodSite.java:151)
	at org.codehaus.groovy.runtime.callsite.StaticMetaMethodSite.callStatic(StaticMetaMethodSite.java:102)
	at org.codehaus.groovy.runtime.callsite.AbstractCallSite.callStatic(AbstractCallSite.java:214)
	at org.codehaus.groovy.control.customizers.ASTTransformationCustomizer.findPhase(ASTTransformationCustomizer.groovy:226)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:567)
	at org.codehaus.groovy.reflection.CachedMethod.invoke(CachedMethod.java:93)
	at org.codehaus.groovy.runtime.callsite.StaticMetaMethodSite$StaticMetaMethodSiteNoUnwrapNoCoerce.invoke(StaticMetaMethodSite.java:151)
	at org.codehaus.groovy.runtime.callsite.StaticMetaMethodSite.callStatic(StaticMetaMethodSite.java:102)
	at org.codehaus.groovy.runtime.callsite.AbstractCallSite.callStatic(AbstractCallSite.java:214)
	at org.codehaus.groovy.control.customizers.ASTTransformationCustomizer.<init>(ASTTransformationCustomizer.groovy:180)
	at org.codehaus.groovy.control.customizers.ASTTransformationCustomizer.<init>(ASTTransformationCustomizer.groovy:188)
	at groovy.text.markup.MarkupTemplateEngine.<init>(MarkupTemplateEngine.java:94)
	at org.springframework.web.servlet.view.groovy.GroovyMarkupConfigurer.createTemplateEngine(GroovyMarkupConfigurer.java:160)
	at org.springframework.web.servlet.view.groovy.GroovyMarkupConfigurer.afterPropertiesSet(GroovyMarkupConfigurer.java:153)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1862)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1799)
	... 62 common frames omitted
2020-11-25 20:53:39,293 DEBUG  [main] BasicTypeRegistry: Adding type registration boolean -> org.hibernate.type.BooleanType@ff2266c
2020-11-25 20:53:39,305 DEBUG  [main] BasicTypeRegistry: Adding type registration boolean -> org.hibernate.type.BooleanType@ff2266c
2020-11-25 20:53:39,305 DEBUG  [main] BasicTypeRegistry: Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@ff2266c
2020-11-25 20:53:39,305 DEBUG  [main] BasicTypeRegistry: Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@1d585fb
2020-11-25 20:53:39,305 DEBUG  [main] BasicTypeRegistry: Adding type registration true_false -> org.hibernate.type.TrueFalseType@7c8f047a
2020-11-25 20:53:39,306 DEBUG  [main] BasicTypeRegistry: Adding type registration yes_no -> org.hibernate.type.YesNoType@d949bc4
2020-11-25 20:53:39,306 DEBUG  [main] BasicTypeRegistry: Adding type registration byte -> org.hibernate.type.ByteType@29c25bbc
2020-11-25 20:53:39,306 DEBUG  [main] BasicTypeRegistry: Adding type registration byte -> org.hibernate.type.ByteType@29c25bbc
2020-11-25 20:53:39,306 DEBUG  [main] BasicTypeRegistry: Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@29c25bbc
2020-11-25 20:53:39,306 DEBUG  [main] BasicTypeRegistry: Adding type registration character -> org.hibernate.type.CharacterType@403f7aa2
2020-11-25 20:53:39,306 DEBUG  [main] BasicTypeRegistry: Adding type registration char -> org.hibernate.type.CharacterType@403f7aa2
2020-11-25 20:53:39,306 DEBUG  [main] BasicTypeRegistry: Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@403f7aa2
2020-11-25 20:53:39,306 DEBUG  [main] BasicTypeRegistry: Adding type registration short -> org.hibernate.type.ShortType@38cb1606
2020-11-25 20:53:39,306 DEBUG  [main] BasicTypeRegistry: Adding type registration short -> org.hibernate.type.ShortType@38cb1606
2020-11-25 20:53:39,306 DEBUG  [main] BasicTypeRegistry: Adding type registration java.lang.Short -> org.hibernate.type.ShortType@38cb1606
2020-11-25 20:53:39,306 DEBUG  [main] BasicTypeRegistry: Adding type registration integer -> org.hibernate.type.IntegerType@5d3b6585
2020-11-25 20:53:39,306 DEBUG  [main] BasicTypeRegistry: Adding type registration int -> org.hibernate.type.IntegerType@5d3b6585
2020-11-25 20:53:39,306 DEBUG  [main] BasicTypeRegistry: Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@5d3b6585
2020-11-25 20:53:39,306 DEBUG  [main] BasicTypeRegistry: Adding type registration long -> org.hibernate.type.LongType@4fea5ee0
2020-11-25 20:53:39,306 DEBUG  [main] BasicTypeRegistry: Adding type registration long -> org.hibernate.type.LongType@4fea5ee0
2020-11-25 20:53:39,307 DEBUG  [main] BasicTypeRegistry: Adding type registration java.lang.Long -> org.hibernate.type.LongType@4fea5ee0
2020-11-25 20:53:39,307 DEBUG  [main] BasicTypeRegistry: Adding type registration float -> org.hibernate.type.FloatType@7b3085a3
2020-11-25 20:53:39,307 DEBUG  [main] BasicTypeRegistry: Adding type registration float -> org.hibernate.type.FloatType@7b3085a3
2020-11-25 20:53:39,307 DEBUG  [main] BasicTypeRegistry: Adding type registration java.lang.Float -> org.hibernate.type.FloatType@7b3085a3
2020-11-25 20:53:39,307 DEBUG  [main] BasicTypeRegistry: Adding type registration double -> org.hibernate.type.DoubleType@5a7a6d34
2020-11-25 20:53:39,307 DEBUG  [main] BasicTypeRegistry: Adding type registration double -> org.hibernate.type.DoubleType@5a7a6d34
2020-11-25 20:53:39,307 DEBUG  [main] BasicTypeRegistry: Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@5a7a6d34
2020-11-25 20:53:39,308 DEBUG  [main] BasicTypeRegistry: Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@5ae66c98
2020-11-25 20:53:39,308 DEBUG  [main] BasicTypeRegistry: Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@5ae66c98
2020-11-25 20:53:39,308 DEBUG  [main] BasicTypeRegistry: Adding type registration big_integer -> org.hibernate.type.BigIntegerType@223cbf0d
2020-11-25 20:53:39,308 DEBUG  [main] BasicTypeRegistry: Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@223cbf0d
2020-11-25 20:53:39,308 DEBUG  [main] BasicTypeRegistry: Adding type registration string -> org.hibernate.type.StringType@4f581211
2020-11-25 20:53:39,308 DEBUG  [main] BasicTypeRegistry: Adding type registration java.lang.String -> org.hibernate.type.StringType@4f581211
2020-11-25 20:53:39,308 DEBUG  [main] BasicTypeRegistry: Adding type registration nstring -> org.hibernate.type.StringNVarcharType@6697f3d
2020-11-25 20:53:39,308 DEBUG  [main] BasicTypeRegistry: Adding type registration ncharacter -> org.hibernate.type.CharacterNCharType@f1d1463
2020-11-25 20:53:39,309 DEBUG  [main] BasicTypeRegistry: Adding type registration url -> org.hibernate.type.UrlType@44ddb518
2020-11-25 20:53:39,309 DEBUG  [main] BasicTypeRegistry: Adding type registration java.net.URL -> org.hibernate.type.UrlType@44ddb518
2020-11-25 20:53:39,309 DEBUG  [main] BasicTypeRegistry: Adding type registration Duration -> org.hibernate.type.DurationType@49e0b123
2020-11-25 20:53:39,309 DEBUG  [main] BasicTypeRegistry: Adding type registration java.time.Duration -> org.hibernate.type.DurationType@49e0b123
2020-11-25 20:53:39,309 DEBUG  [main] BasicTypeRegistry: Adding type registration Instant -> org.hibernate.type.InstantType@40a28bda
2020-11-25 20:53:39,309 DEBUG  [main] BasicTypeRegistry: Adding type registration java.time.Instant -> org.hibernate.type.InstantType@40a28bda
2020-11-25 20:53:39,309 DEBUG  [main] BasicTypeRegistry: Adding type registration LocalDateTime -> org.hibernate.type.LocalDateTimeType@33430fc
2020-11-25 20:53:39,309 DEBUG  [main] BasicTypeRegistry: Adding type registration java.time.LocalDateTime -> org.hibernate.type.LocalDateTimeType@33430fc
2020-11-25 20:53:39,309 DEBUG  [main] BasicTypeRegistry: Adding type registration LocalDate -> org.hibernate.type.LocalDateType@d7055be
2020-11-25 20:53:39,309 DEBUG  [main] BasicTypeRegistry: Adding type registration java.time.LocalDate -> org.hibernate.type.LocalDateType@d7055be
2020-11-25 20:53:39,311 DEBUG  [main] BasicTypeRegistry: Adding type registration LocalTime -> org.hibernate.type.LocalTimeType@3c7d8a4
2020-11-25 20:53:39,311 DEBUG  [main] BasicTypeRegistry: Adding type registration java.time.LocalTime -> org.hibernate.type.LocalTimeType@3c7d8a4
2020-11-25 20:53:39,311 DEBUG  [main] BasicTypeRegistry: Adding type registration OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@7a117dc2
2020-11-25 20:53:39,314 DEBUG  [main] BasicTypeRegistry: Adding type registration java.time.OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@7a117dc2
2020-11-25 20:53:39,314 DEBUG  [main] BasicTypeRegistry: Adding type registration OffsetTime -> org.hibernate.type.OffsetTimeType@3c64339f
2020-11-25 20:53:39,315 DEBUG  [main] BasicTypeRegistry: Adding type registration java.time.OffsetTime -> org.hibernate.type.OffsetTimeType@3c64339f
2020-11-25 20:53:39,315 DEBUG  [main] BasicTypeRegistry: Adding type registration ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@30c8c6ab
2020-11-25 20:53:39,315 DEBUG  [main] BasicTypeRegistry: Adding type registration java.time.ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@30c8c6ab
2020-11-25 20:53:39,315 DEBUG  [main] BasicTypeRegistry: Adding type registration date -> org.hibernate.type.DateType@61c5fd78
2020-11-25 20:53:39,315 DEBUG  [main] BasicTypeRegistry: Adding type registration java.sql.Date -> org.hibernate.type.DateType@61c5fd78
2020-11-25 20:53:39,315 DEBUG  [main] BasicTypeRegistry: Adding type registration time -> org.hibernate.type.TimeType@77856cc5
2020-11-25 20:53:39,315 DEBUG  [main] BasicTypeRegistry: Adding type registration java.sql.Time -> org.hibernate.type.TimeType@77856cc5
2020-11-25 20:53:39,315 DEBUG  [main] BasicTypeRegistry: Adding type registration timestamp -> org.hibernate.type.TimestampType@12166229
2020-11-25 20:53:39,316 DEBUG  [main] BasicTypeRegistry: Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@12166229
2020-11-25 20:53:39,316 DEBUG  [main] BasicTypeRegistry: Adding type registration java.util.Date -> org.hibernate.type.TimestampType@12166229
2020-11-25 20:53:39,316 DEBUG  [main] BasicTypeRegistry: Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@2b4829aa
2020-11-25 20:53:39,316 DEBUG  [main] BasicTypeRegistry: Adding type registration calendar -> org.hibernate.type.CalendarType@3ec082a1
2020-11-25 20:53:39,316 DEBUG  [main] BasicTypeRegistry: Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@3ec082a1
2020-11-25 20:53:39,316 DEBUG  [main] BasicTypeRegistry: Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@3ec082a1
2020-11-25 20:53:39,316 DEBUG  [main] BasicTypeRegistry: Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@429f0ca8
2020-11-25 20:53:39,316 DEBUG  [main] BasicTypeRegistry: Adding type registration locale -> org.hibernate.type.LocaleType@11c3ce6a
2020-11-25 20:53:39,317 DEBUG  [main] BasicTypeRegistry: Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@11c3ce6a
2020-11-25 20:53:39,317 DEBUG  [main] BasicTypeRegistry: Adding type registration currency -> org.hibernate.type.CurrencyType@28519bfb
2020-11-25 20:53:39,317 DEBUG  [main] BasicTypeRegistry: Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@28519bfb
2020-11-25 20:53:39,317 DEBUG  [main] BasicTypeRegistry: Adding type registration timezone -> org.hibernate.type.TimeZoneType@7aa15a80
2020-11-25 20:53:39,317 DEBUG  [main] BasicTypeRegistry: Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@7aa15a80
2020-11-25 20:53:39,317 DEBUG  [main] BasicTypeRegistry: Adding type registration class -> org.hibernate.type.ClassType@48d5ca17
2020-11-25 20:53:39,317 DEBUG  [main] BasicTypeRegistry: Adding type registration java.lang.Class -> org.hibernate.type.ClassType@48d5ca17
2020-11-25 20:53:39,317 DEBUG  [main] BasicTypeRegistry: Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@79b8ecb
2020-11-25 20:53:39,318 DEBUG  [main] BasicTypeRegistry: Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@79b8ecb
2020-11-25 20:53:39,318 DEBUG  [main] BasicTypeRegistry: Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@c0013b8
2020-11-25 20:53:39,318 DEBUG  [main] BasicTypeRegistry: Adding type registration binary -> org.hibernate.type.BinaryType@2a42019a
2020-11-25 20:53:39,318 DEBUG  [main] BasicTypeRegistry: Adding type registration byte[] -> org.hibernate.type.BinaryType@2a42019a
2020-11-25 20:53:39,318 DEBUG  [main] BasicTypeRegistry: Adding type registration [B -> org.hibernate.type.BinaryType@2a42019a
2020-11-25 20:53:39,318 DEBUG  [main] BasicTypeRegistry: Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@495da9a7
2020-11-25 20:53:39,318 DEBUG  [main] BasicTypeRegistry: Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@495da9a7
2020-11-25 20:53:39,318 DEBUG  [main] BasicTypeRegistry: Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@495da9a7
2020-11-25 20:53:39,318 DEBUG  [main] BasicTypeRegistry: Adding type registration row_version -> org.hibernate.type.RowVersionType@35becbd4
2020-11-25 20:53:39,318 DEBUG  [main] BasicTypeRegistry: Adding type registration image -> org.hibernate.type.ImageType@30fa8a6b
2020-11-25 20:53:39,319 DEBUG  [main] BasicTypeRegistry: Adding type registration characters -> org.hibernate.type.CharArrayType@4c8d45cf
2020-11-25 20:53:39,319 DEBUG  [main] BasicTypeRegistry: Adding type registration char[] -> org.hibernate.type.CharArrayType@4c8d45cf
2020-11-25 20:53:39,319 DEBUG  [main] BasicTypeRegistry: Adding type registration [C -> org.hibernate.type.CharArrayType@4c8d45cf
2020-11-25 20:53:39,319 DEBUG  [main] BasicTypeRegistry: Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@5b490d5e
2020-11-25 20:53:39,319 DEBUG  [main] BasicTypeRegistry: Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@5b490d5e
2020-11-25 20:53:39,319 DEBUG  [main] BasicTypeRegistry: Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@5b490d5e
2020-11-25 20:53:39,319 DEBUG  [main] BasicTypeRegistry: Adding type registration text -> org.hibernate.type.TextType@18b04526
2020-11-25 20:53:39,319 DEBUG  [main] BasicTypeRegistry: Adding type registration ntext -> org.hibernate.type.NTextType@246df37b
2020-11-25 20:53:39,320 DEBUG  [main] BasicTypeRegistry: Adding type registration blob -> org.hibernate.type.BlobType@56881196
2020-11-25 20:53:39,320 DEBUG  [main] BasicTypeRegistry: Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@56881196
2020-11-25 20:53:39,320 DEBUG  [main] BasicTypeRegistry: Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@131c0b6f
2020-11-25 20:53:39,320 DEBUG  [main] BasicTypeRegistry: Adding type registration clob -> org.hibernate.type.ClobType@7fc1fd31
2020-11-25 20:53:39,320 DEBUG  [main] BasicTypeRegistry: Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@7fc1fd31
2020-11-25 20:53:39,320 DEBUG  [main] BasicTypeRegistry: Adding type registration nclob -> org.hibernate.type.NClobType@70777a65
2020-11-25 20:53:39,320 DEBUG  [main] BasicTypeRegistry: Adding type registration java.sql.NClob -> org.hibernate.type.NClobType@70777a65
2020-11-25 20:53:39,320 DEBUG  [main] BasicTypeRegistry: Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@2f6f4ac4
2020-11-25 20:53:39,320 DEBUG  [main] BasicTypeRegistry: Adding type registration materialized_nclob -> org.hibernate.type.MaterializedNClobType@7d685f4e
2020-11-25 20:53:39,320 DEBUG  [main] BasicTypeRegistry: Adding type registration serializable -> org.hibernate.type.SerializableType@319aa9ee
2020-11-25 20:53:39,321 DEBUG  [main] BasicTypeRegistry: Adding type registration object -> org.hibernate.type.ObjectType@54234569
2020-11-25 20:53:39,321 DEBUG  [main] BasicTypeRegistry: Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@54234569
2020-11-25 20:53:39,321 DEBUG  [main] BasicTypeRegistry: Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@d866565
2020-11-25 20:53:39,321 DEBUG  [main] BasicTypeRegistry: Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@302e3484
2020-11-25 20:53:39,321 DEBUG  [main] BasicTypeRegistry: Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@4db11495
2020-11-25 20:53:39,321 DEBUG  [main] BasicTypeRegistry: Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@6f83db89
2020-11-25 20:53:39,321 DEBUG  [main] BasicTypeRegistry: Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@51102651
2020-11-25 20:53:39,321 DEBUG  [main] BasicTypeRegistry: Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@10dba2e3
2020-11-25 20:53:39,321 DEBUG  [main] BasicTypeRegistry: Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@550b19d1
2020-11-25 20:53:39,322 DEBUG  [main] BasicTypeRegistry: Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@24a5df6a
2020-11-25 20:53:39,337 DEBUG  [main] TypeConfiguration$Scope: Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@5afef53] to MetadataBuildingContext [org.hibernate.boot.internal.MetadataBuildingContextRootImpl@3a19b933]
2020-11-25 20:53:39,358 DEBUG  [main] EnumType: Using NAMED-based conversion for Enum com.sf.back.entities.Kind
2020-11-25 20:53:39,361 DEBUG  [main] EnumType: Using NAMED-based conversion for Enum com.sf.back.entities.Kind
2020-11-25 20:53:39,388 DEBUG  [main] TypeConfiguration$Scope: Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@5afef53] to SessionFactoryImpl [org.hibernate.internal.SessionFactoryImpl@258274cb]
2020-11-25 20:53:39,389 DEBUG  [main] EnumType: Using NAMED-based conversion for Enum com.sf.back.entities.Kind
2020-11-25 20:53:39,389 DEBUG  [main] EnumType: Using NAMED-based conversion for Enum com.sf.back.entities.Kind
2020-11-25 20:53:39,417 DEBUG  [main] EnumType: Using NAMED-based conversion for Enum com.sf.back.entities.Kind
2020-11-25 20:53:39,417 DEBUG  [main] EnumType: Using NAMED-based conversion for Enum com.sf.back.entities.Kind
2020-11-25 20:53:39,441 DEBUG  [main] EnumType: Using NAMED-based conversion for Enum com.sf.back.entities.Kind
2020-11-25 20:53:39,443 DEBUG  [main] EnumType: Using NAMED-based conversion for Enum com.sf.back.entities.Kind
2020-11-25 20:53:39,451 DEBUG  [main] EnumType: Using NAMED-based conversion for Enum com.sf.back.entities.Kind
2020-11-25 20:53:39,464 TRACE  [main] TypeConfiguration$Scope: Handling #sessionFactoryCreated from [org.hibernate.internal.SessionFactoryImpl@258274cb] for TypeConfiguration
2020-11-25 20:53:39,580 WARN   [main] JpaBaseConfiguration$JpaWebConfiguration: spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2020-11-25 20:53:39,686 WARN   [main] GenericWebApplicationContext: Exception encountered during context initialization - cancelling refresh attempt: org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'groovyMarkupConfigurer' defined in class path resource [org/springframework/boot/autoconfigure/groovy/template/GroovyTemplateAutoConfiguration$GroovyMarkupConfiguration.class]: Invocation of init method failed; nested exception is java.lang.reflect.InaccessibleObjectException: Unable to make jdk.internal.loader.ClassLoaders$AppClassLoader(jdk.internal.loader.ClassLoaders$PlatformClassLoader,jdk.internal.loader.URLClassPath) accessible: module java.base does not "opens jdk.internal.loader" to unnamed module @60fa3495
2020-11-25 20:53:39,697 TRACE  [main] TypeConfiguration$Scope: Handling #sessionFactoryClosed from [org.hibernate.internal.SessionFactoryImpl@258274cb] for TypeConfiguration
2020-11-25 20:53:39,698 DEBUG  [main] TypeConfiguration$Scope: Un-scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration$Scope@613b9bd9] from SessionFactory [org.hibernate.internal.SessionFactoryImpl@258274cb]
2020-11-25 20:53:39,705 ERROR  [main] SpringApplication: Application run failed
org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'groovyMarkupConfigurer' defined in class path resource [org/springframework/boot/autoconfigure/groovy/template/GroovyTemplateAutoConfiguration$GroovyMarkupConfiguration.class]: Invocation of init method failed; nested exception is java.lang.reflect.InaccessibleObjectException: Unable to make jdk.internal.loader.ClassLoaders$AppClassLoader(jdk.internal.loader.ClassLoaders$PlatformClassLoader,jdk.internal.loader.URLClassPath) accessible: module java.base does not "opens jdk.internal.loader" to unnamed module @60fa3495
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1803)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:595)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:517)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:323)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:222)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:321)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:202)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(DefaultListableBeanFactory.java:879)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:878)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:550)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:747)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:397)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:315)
	at org.springframework.boot.test.context.SpringBootContextLoader.loadContext(SpringBootContextLoader.java:125)
	at org.springframework.test.context.cache.DefaultCacheAwareContextLoaderDelegate.loadContextInternal(DefaultCacheAwareContextLoaderDelegate.java:99)
	at org.springframework.test.context.cache.DefaultCacheAwareContextLoaderDelegate.loadContext(DefaultCacheAwareContextLoaderDelegate.java:124)
	at org.springframework.test.context.support.DefaultTestContext.getApplicationContext(DefaultTestContext.java:123)
	at org.springframework.test.context.web.ServletTestExecutionListener.setUpRequestContextIfNecessary(ServletTestExecutionListener.java:190)
	at org.springframework.test.context.web.ServletTestExecutionListener.prepareTestInstance(ServletTestExecutionListener.java:132)
	at org.springframework.test.context.TestContextManager.prepareTestInstance(TestContextManager.java:244)
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner.createTest(SpringJUnit4ClassRunner.java:227)
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner$1.runReflectiveCall(SpringJUnit4ClassRunner.java:289)
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner.methodBlock(SpringJUnit4ClassRunner.java:291)
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner.runChild(SpringJUnit4ClassRunner.java:246)
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner.runChild(SpringJUnit4ClassRunner.java:97)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:290)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:71)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:58)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268)
	at org.junit.internal.runners.statements.RunBefores.evaluate(RunBefores.java:26)
	at org.springframework.test.context.junit4.statements.RunBeforeTestClassCallbacks.evaluate(RunBeforeTestClassCallbacks.java:61)
	at org.junit.internal.runners.statements.RunAfters.evaluate(RunAfters.java:27)
	at org.springframework.test.context.junit4.statements.RunAfterTestClassCallbacks.evaluate(RunAfterTestClassCallbacks.java:70)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:363)
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner.run(SpringJUnit4ClassRunner.java:190)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:137)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:115)
	at org.junit.vintage.engine.execution.RunnerExecutor.execute(RunnerExecutor.java:40)
	at java.base/java.util.stream.ForEachOps$ForEachOp$OfRef.accept(ForEachOps.java:183)
	at java.base/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:195)
	at java.base/java.util.Iterator.forEachRemaining(Iterator.java:133)
	at java.base/java.util.Spliterators$IteratorSpliterator.forEachRemaining(Spliterators.java:1801)
	at java.base/java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:484)
	at java.base/java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:474)
	at java.base/java.util.stream.ForEachOps$ForEachOp.evaluateSequential(ForEachOps.java:150)
	at java.base/java.util.stream.ForEachOps$ForEachOp$OfRef.evaluateSequential(ForEachOps.java:173)
	at java.base/java.util.stream.AbstractPipeline.evaluate(AbstractPipeline.java:234)
	at java.base/java.util.stream.ReferencePipeline.forEach(ReferencePipeline.java:497)
	at org.junit.vintage.engine.VintageTestEngine.executeAllChildren(VintageTestEngine.java:80)
	at org.junit.vintage.engine.VintageTestEngine.execute(VintageTestEngine.java:71)
	at org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:220)
	at org.junit.platform.launcher.core.DefaultLauncher.lambda$execute$6(DefaultLauncher.java:188)
	at org.junit.platform.launcher.core.DefaultLauncher.withInterceptedStreams(DefaultLauncher.java:202)
	at org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:181)
	at org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:128)
	at org.apache.maven.surefire.junitplatform.JUnitPlatformProvider.invokeAllTests(JUnitPlatformProvider.java:150)
	at org.apache.maven.surefire.junitplatform.JUnitPlatformProvider.invoke(JUnitPlatformProvider.java:124)
	at org.apache.maven.surefire.booter.ForkedBooter.invokeProviderInSameClassLoader(ForkedBooter.java:384)
	at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:345)
	at org.apache.maven.surefire.booter.ForkedBooter.execute(ForkedBooter.java:126)
	at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:418)
Caused by: java.lang.reflect.InaccessibleObjectException: Unable to make jdk.internal.loader.ClassLoaders$AppClassLoader(jdk.internal.loader.ClassLoaders$PlatformClassLoader,jdk.internal.loader.URLClassPath) accessible: module java.base does not "opens jdk.internal.loader" to unnamed module @60fa3495
	at java.base/java.lang.reflect.AccessibleObject.checkCanSetAccessible(AccessibleObject.java:344)
	at java.base/java.lang.reflect.AccessibleObject.checkCanSetAccessible(AccessibleObject.java:284)
	at java.base/java.lang.reflect.Constructor.checkCanSetAccessible(Constructor.java:189)
	at java.base/java.lang.reflect.Constructor.setAccessible(Constructor.java:182)
	at org.codehaus.groovy.reflection.CachedConstructor$1.run(CachedConstructor.java:44)
	at java.base/java.security.AccessController.doPrivileged(AccessController.java:312)
	at org.codehaus.groovy.reflection.CachedConstructor.<init>(CachedConstructor.java:42)
	at org.codehaus.groovy.reflection.CachedClass$2.initValue(CachedClass.java:79)
	at org.codehaus.groovy.reflection.CachedClass$2.initValue(CachedClass.java:69)
	at org.codehaus.groovy.util.LazyReference.getLocked(LazyReference.java:49)
	at org.codehaus.groovy.util.LazyReference.get(LazyReference.java:36)
	at org.codehaus.groovy.reflection.CachedClass.getConstructors(CachedClass.java:268)
	at groovy.lang.MetaClassImpl.<init>(MetaClassImpl.java:218)
	at groovy.lang.MetaClassImpl.<init>(MetaClassImpl.java:228)
	at groovy.lang.MetaClassRegistry$MetaClassCreationHandle.createNormalMetaClass(MetaClassRegistry.java:171)
	at groovy.lang.MetaClassRegistry$MetaClassCreationHandle.createWithCustomLookup(MetaClassRegistry.java:161)
	at groovy.lang.MetaClassRegistry$MetaClassCreationHandle.create(MetaClassRegistry.java:144)
	at org.codehaus.groovy.reflection.ClassInfo.getMetaClassUnderLock(ClassInfo.java:253)
	at org.codehaus.groovy.reflection.ClassInfo.getMetaClass(ClassInfo.java:285)
	at org.codehaus.groovy.reflection.ClassInfo.getMetaClass(ClassInfo.java:295)
	at org.codehaus.groovy.runtime.metaclass.MetaClassRegistryImpl.getMetaClass(MetaClassRegistryImpl.java:261)
	at org.codehaus.groovy.runtime.InvokerHelper.getMetaClass(InvokerHelper.java:873)
	at org.codehaus.groovy.runtime.InvokerHelper.invokePojoMethod(InvokerHelper.java:906)
	at org.codehaus.groovy.runtime.InvokerHelper.invokeMethod(InvokerHelper.java:898)
	at org.codehaus.groovy.runtime.typehandling.DefaultTypeTransformation.castToBoolean(DefaultTypeTransformation.java:185)
	at org.codehaus.groovy.runtime.typehandling.DefaultTypeTransformation.booleanUnbox(DefaultTypeTransformation.java:74)
	at org.codehaus.groovy.control.customizers.ASTTransformationCustomizer.findASTTranformationClass(ASTTransformationCustomizer.groovy:209)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:567)
	at org.codehaus.groovy.reflection.CachedMethod.invoke(CachedMethod.java:93)
	at org.codehaus.groovy.runtime.callsite.StaticMetaMethodSite$StaticMetaMethodSiteNoUnwrapNoCoerce.invoke(StaticMetaMethodSite.java:151)
	at org.codehaus.groovy.runtime.callsite.StaticMetaMethodSite.callStatic(StaticMetaMethodSite.java:102)
	at org.codehaus.groovy.runtime.callsite.AbstractCallSite.callStatic(AbstractCallSite.java:214)
	at org.codehaus.groovy.control.customizers.ASTTransformationCustomizer.findPhase(ASTTransformationCustomizer.groovy:226)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:567)
	at org.codehaus.groovy.reflection.CachedMethod.invoke(CachedMethod.java:93)
	at org.codehaus.groovy.runtime.callsite.StaticMetaMethodSite$StaticMetaMethodSiteNoUnwrapNoCoerce.invoke(StaticMetaMethodSite.java:151)
	at org.codehaus.groovy.runtime.callsite.StaticMetaMethodSite.callStatic(StaticMetaMethodSite.java:102)
	at org.codehaus.groovy.runtime.callsite.AbstractCallSite.callStatic(AbstractCallSite.java:214)
	at org.codehaus.groovy.control.customizers.ASTTransformationCustomizer.<init>(ASTTransformationCustomizer.groovy:180)
	at org.codehaus.groovy.control.customizers.ASTTransformationCustomizer.<init>(ASTTransformationCustomizer.groovy:188)
	at groovy.text.markup.MarkupTemplateEngine.<init>(MarkupTemplateEngine.java:94)
	at org.springframework.web.servlet.view.groovy.GroovyMarkupConfigurer.createTemplateEngine(GroovyMarkupConfigurer.java:160)
	at org.springframework.web.servlet.view.groovy.GroovyMarkupConfigurer.afterPropertiesSet(GroovyMarkupConfigurer.java:153)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1862)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1799)
	... 62 common frames omitted
2020-11-25 20:53:39,706 ERROR  [main] TestContextManager: Caught exception while allowing TestExecutionListener [org.springframework.test.context.web.ServletTestExecutionListener@170b27a7] to prepare test instance [com.sf.math.algebra.solvers.PolynomialSolverIntervalTest@108d88b]
java.lang.IllegalStateException: Failed to load ApplicationContext
	at org.springframework.test.context.cache.DefaultCacheAwareContextLoaderDelegate.loadContext(DefaultCacheAwareContextLoaderDelegate.java:132)
	at org.springframework.test.context.support.DefaultTestContext.getApplicationContext(DefaultTestContext.java:123)
	at org.springframework.test.context.web.ServletTestExecutionListener.setUpRequestContextIfNecessary(ServletTestExecutionListener.java:190)
	at org.springframework.test.context.web.ServletTestExecutionListener.prepareTestInstance(ServletTestExecutionListener.java:132)
	at org.springframework.test.context.TestContextManager.prepareTestInstance(TestContextManager.java:244)
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner.createTest(SpringJUnit4ClassRunner.java:227)
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner$1.runReflectiveCall(SpringJUnit4ClassRunner.java:289)
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner.methodBlock(SpringJUnit4ClassRunner.java:291)
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner.runChild(SpringJUnit4ClassRunner.java:246)
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner.runChild(SpringJUnit4ClassRunner.java:97)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:290)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:71)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:58)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268)
	at org.junit.internal.runners.statements.RunBefores.evaluate(RunBefores.java:26)
	at org.springframework.test.context.junit4.statements.RunBeforeTestClassCallbacks.evaluate(RunBeforeTestClassCallbacks.java:61)
	at org.junit.internal.runners.statements.RunAfters.evaluate(RunAfters.java:27)
	at org.springframework.test.context.junit4.statements.RunAfterTestClassCallbacks.evaluate(RunAfterTestClassCallbacks.java:70)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:363)
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner.run(SpringJUnit4ClassRunner.java:190)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:137)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:115)
	at org.junit.vintage.engine.execution.RunnerExecutor.execute(RunnerExecutor.java:40)
	at java.base/java.util.stream.ForEachOps$ForEachOp$OfRef.accept(ForEachOps.java:183)
	at java.base/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:195)
	at java.base/java.util.Iterator.forEachRemaining(Iterator.java:133)
	at java.base/java.util.Spliterators$IteratorSpliterator.forEachRemaining(Spliterators.java:1801)
	at java.base/java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:484)
	at java.base/java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:474)
	at java.base/java.util.stream.ForEachOps$ForEachOp.evaluateSequential(ForEachOps.java:150)
	at java.base/java.util.stream.ForEachOps$ForEachOp$OfRef.evaluateSequential(ForEachOps.java:173)
	at java.base/java.util.stream.AbstractPipeline.evaluate(AbstractPipeline.java:234)
	at java.base/java.util.stream.ReferencePipeline.forEach(ReferencePipeline.java:497)
	at org.junit.vintage.engine.VintageTestEngine.executeAllChildren(VintageTestEngine.java:80)
	at org.junit.vintage.engine.VintageTestEngine.execute(VintageTestEngine.java:71)
	at org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:220)
	at org.junit.platform.launcher.core.DefaultLauncher.lambda$execute$6(DefaultLauncher.java:188)
	at org.junit.platform.launcher.core.DefaultLauncher.withInterceptedStreams(DefaultLauncher.java:202)
	at org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:181)
	at org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:128)
	at org.apache.maven.surefire.junitplatform.JUnitPlatformProvider.invokeAllTests(JUnitPlatformProvider.java:150)
	at org.apache.maven.surefire.junitplatform.JUnitPlatformProvider.invoke(JUnitPlatformProvider.java:124)
	at org.apache.maven.surefire.booter.ForkedBooter.invokeProviderInSameClassLoader(ForkedBooter.java:384)
	at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:345)
	at org.apache.maven.surefire.booter.ForkedBooter.execute(ForkedBooter.java:126)
	at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:418)
Caused by: org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'groovyMarkupConfigurer' defined in class path resource [org/springframework/boot/autoconfigure/groovy/template/GroovyTemplateAutoConfiguration$GroovyMarkupConfiguration.class]: Invocation of init method failed; nested exception is java.lang.reflect.InaccessibleObjectException: Unable to make jdk.internal.loader.ClassLoaders$AppClassLoader(jdk.internal.loader.ClassLoaders$PlatformClassLoader,jdk.internal.loader.URLClassPath) accessible: module java.base does not "opens jdk.internal.loader" to unnamed module @60fa3495
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1803)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:595)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:517)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:323)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:222)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:321)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:202)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(DefaultListableBeanFactory.java:879)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:878)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:550)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:747)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:397)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:315)
	at org.springframework.boot.test.context.SpringBootContextLoader.loadContext(SpringBootContextLoader.java:125)
	at org.springframework.test.context.cache.DefaultCacheAwareContextLoaderDelegate.loadContextInternal(DefaultCacheAwareContextLoaderDelegate.java:99)
	at org.springframework.test.context.cache.DefaultCacheAwareContextLoaderDelegate.loadContext(DefaultCacheAwareContextLoaderDelegate.java:124)
	... 47 common frames omitted
Caused by: java.lang.reflect.InaccessibleObjectException: Unable to make jdk.internal.loader.ClassLoaders$AppClassLoader(jdk.internal.loader.ClassLoaders$PlatformClassLoader,jdk.internal.loader.URLClassPath) accessible: module java.base does not "opens jdk.internal.loader" to unnamed module @60fa3495
	at java.base/java.lang.reflect.AccessibleObject.checkCanSetAccessible(AccessibleObject.java:344)
	at java.base/java.lang.reflect.AccessibleObject.checkCanSetAccessible(AccessibleObject.java:284)
	at java.base/java.lang.reflect.Constructor.checkCanSetAccessible(Constructor.java:189)
	at java.base/java.lang.reflect.Constructor.setAccessible(Constructor.java:182)
	at org.codehaus.groovy.reflection.CachedConstructor$1.run(CachedConstructor.java:44)
	at java.base/java.security.AccessController.doPrivileged(AccessController.java:312)
	at org.codehaus.groovy.reflection.CachedConstructor.<init>(CachedConstructor.java:42)
	at org.codehaus.groovy.reflection.CachedClass$2.initValue(CachedClass.java:79)
	at org.codehaus.groovy.reflection.CachedClass$2.initValue(CachedClass.java:69)
	at org.codehaus.groovy.util.LazyReference.getLocked(LazyReference.java:49)
	at org.codehaus.groovy.util.LazyReference.get(LazyReference.java:36)
	at org.codehaus.groovy.reflection.CachedClass.getConstructors(CachedClass.java:268)
	at groovy.lang.MetaClassImpl.<init>(MetaClassImpl.java:218)
	at groovy.lang.MetaClassImpl.<init>(MetaClassImpl.java:228)
	at groovy.lang.MetaClassRegistry$MetaClassCreationHandle.createNormalMetaClass(MetaClassRegistry.java:171)
	at groovy.lang.MetaClassRegistry$MetaClassCreationHandle.createWithCustomLookup(MetaClassRegistry.java:161)
	at groovy.lang.MetaClassRegistry$MetaClassCreationHandle.create(MetaClassRegistry.java:144)
	at org.codehaus.groovy.reflection.ClassInfo.getMetaClassUnderLock(ClassInfo.java:253)
	at org.codehaus.groovy.reflection.ClassInfo.getMetaClass(ClassInfo.java:285)
	at org.codehaus.groovy.reflection.ClassInfo.getMetaClass(ClassInfo.java:295)
	at org.codehaus.groovy.runtime.metaclass.MetaClassRegistryImpl.getMetaClass(MetaClassRegistryImpl.java:261)
	at org.codehaus.groovy.runtime.InvokerHelper.getMetaClass(InvokerHelper.java:873)
	at org.codehaus.groovy.runtime.InvokerHelper.invokePojoMethod(InvokerHelper.java:906)
	at org.codehaus.groovy.runtime.InvokerHelper.invokeMethod(InvokerHelper.java:898)
	at org.codehaus.groovy.runtime.typehandling.DefaultTypeTransformation.castToBoolean(DefaultTypeTransformation.java:185)
	at org.codehaus.groovy.runtime.typehandling.DefaultTypeTransformation.booleanUnbox(DefaultTypeTransformation.java:74)
	at org.codehaus.groovy.control.customizers.ASTTransformationCustomizer.findASTTranformationClass(ASTTransformationCustomizer.groovy:209)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:567)
	at org.codehaus.groovy.reflection.CachedMethod.invoke(CachedMethod.java:93)
	at org.codehaus.groovy.runtime.callsite.StaticMetaMethodSite$StaticMetaMethodSiteNoUnwrapNoCoerce.invoke(StaticMetaMethodSite.java:151)
	at org.codehaus.groovy.runtime.callsite.StaticMetaMethodSite.callStatic(StaticMetaMethodSite.java:102)
	at org.codehaus.groovy.runtime.callsite.AbstractCallSite.callStatic(AbstractCallSite.java:214)
	at org.codehaus.groovy.control.customizers.ASTTransformationCustomizer.findPhase(ASTTransformationCustomizer.groovy:226)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:567)
	at org.codehaus.groovy.reflection.CachedMethod.invoke(CachedMethod.java:93)
	at org.codehaus.groovy.runtime.callsite.StaticMetaMethodSite$StaticMetaMethodSiteNoUnwrapNoCoerce.invoke(StaticMetaMethodSite.java:151)
	at org.codehaus.groovy.runtime.callsite.StaticMetaMethodSite.callStatic(StaticMetaMethodSite.java:102)
	at org.codehaus.groovy.runtime.callsite.AbstractCallSite.callStatic(AbstractCallSite.java:214)
	at org.codehaus.groovy.control.customizers.ASTTransformationCustomizer.<init>(ASTTransformationCustomizer.groovy:180)
	at org.codehaus.groovy.control.customizers.ASTTransformationCustomizer.<init>(ASTTransformationCustomizer.groovy:188)
	at groovy.text.markup.MarkupTemplateEngine.<init>(MarkupTemplateEngine.java:94)
	at org.springframework.web.servlet.view.groovy.GroovyMarkupConfigurer.createTemplateEngine(GroovyMarkupConfigurer.java:160)
	at org.springframework.web.servlet.view.groovy.GroovyMarkupConfigurer.afterPropertiesSet(GroovyMarkupConfigurer.java:153)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1862)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1799)
	... 62 common frames omitted
2020-11-25 20:53:40,326 DEBUG  [main] BasicTypeRegistry: Adding type registration boolean -> org.hibernate.type.BooleanType@ff2266c
2020-11-25 20:53:40,329 DEBUG  [main] BasicTypeRegistry: Adding type registration boolean -> org.hibernate.type.BooleanType@ff2266c
2020-11-25 20:53:40,329 DEBUG  [main] BasicTypeRegistry: Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@ff2266c
2020-11-25 20:53:40,329 DEBUG  [main] BasicTypeRegistry: Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@1d585fb
2020-11-25 20:53:40,330 DEBUG  [main] BasicTypeRegistry: Adding type registration true_false -> org.hibernate.type.TrueFalseType@7c8f047a
2020-11-25 20:53:40,330 DEBUG  [main] BasicTypeRegistry: Adding type registration yes_no -> org.hibernate.type.YesNoType@d949bc4
2020-11-25 20:53:40,330 DEBUG  [main] BasicTypeRegistry: Adding type registration byte -> org.hibernate.type.ByteType@29c25bbc
2020-11-25 20:53:40,330 DEBUG  [main] BasicTypeRegistry: Adding type registration byte -> org.hibernate.type.ByteType@29c25bbc
2020-11-25 20:53:40,330 DEBUG  [main] BasicTypeRegistry: Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@29c25bbc
2020-11-25 20:53:40,330 DEBUG  [main] BasicTypeRegistry: Adding type registration character -> org.hibernate.type.CharacterType@403f7aa2
2020-11-25 20:53:40,330 DEBUG  [main] BasicTypeRegistry: Adding type registration char -> org.hibernate.type.CharacterType@403f7aa2
2020-11-25 20:53:40,330 DEBUG  [main] BasicTypeRegistry: Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@403f7aa2
2020-11-25 20:53:40,331 DEBUG  [main] BasicTypeRegistry: Adding type registration short -> org.hibernate.type.ShortType@38cb1606
2020-11-25 20:53:40,331 DEBUG  [main] BasicTypeRegistry: Adding type registration short -> org.hibernate.type.ShortType@38cb1606
2020-11-25 20:53:40,331 DEBUG  [main] BasicTypeRegistry: Adding type registration java.lang.Short -> org.hibernate.type.ShortType@38cb1606
2020-11-25 20:53:40,331 DEBUG  [main] BasicTypeRegistry: Adding type registration integer -> org.hibernate.type.IntegerType@5d3b6585
2020-11-25 20:53:40,331 DEBUG  [main] BasicTypeRegistry: Adding type registration int -> org.hibernate.type.IntegerType@5d3b6585
2020-11-25 20:53:40,331 DEBUG  [main] BasicTypeRegistry: Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@5d3b6585
2020-11-25 20:53:40,331 DEBUG  [main] BasicTypeRegistry: Adding type registration long -> org.hibernate.type.LongType@4fea5ee0
2020-11-25 20:53:40,331 DEBUG  [main] BasicTypeRegistry: Adding type registration long -> org.hibernate.type.LongType@4fea5ee0
2020-11-25 20:53:40,331 DEBUG  [main] BasicTypeRegistry: Adding type registration java.lang.Long -> org.hibernate.type.LongType@4fea5ee0
2020-11-25 20:53:40,331 DEBUG  [main] BasicTypeRegistry: Adding type registration float -> org.hibernate.type.FloatType@7b3085a3
2020-11-25 20:53:40,332 DEBUG  [main] BasicTypeRegistry: Adding type registration float -> org.hibernate.type.FloatType@7b3085a3
2020-11-25 20:53:40,332 DEBUG  [main] BasicTypeRegistry: Adding type registration java.lang.Float -> org.hibernate.type.FloatType@7b3085a3
2020-11-25 20:53:40,332 DEBUG  [main] BasicTypeRegistry: Adding type registration double -> org.hibernate.type.DoubleType@5a7a6d34
2020-11-25 20:53:40,332 DEBUG  [main] BasicTypeRegistry: Adding type registration double -> org.hibernate.type.DoubleType@5a7a6d34
2020-11-25 20:53:40,332 DEBUG  [main] BasicTypeRegistry: Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@5a7a6d34
2020-11-25 20:53:40,332 DEBUG  [main] BasicTypeRegistry: Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@5ae66c98
2020-11-25 20:53:40,332 DEBUG  [main] BasicTypeRegistry: Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@5ae66c98
2020-11-25 20:53:40,332 DEBUG  [main] BasicTypeRegistry: Adding type registration big_integer -> org.hibernate.type.BigIntegerType@223cbf0d
2020-11-25 20:53:40,332 DEBUG  [main] BasicTypeRegistry: Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@223cbf0d
2020-11-25 20:53:40,332 DEBUG  [main] BasicTypeRegistry: Adding type registration string -> org.hibernate.type.StringType@4f581211
2020-11-25 20:53:40,332 DEBUG  [main] BasicTypeRegistry: Adding type registration java.lang.String -> org.hibernate.type.StringType@4f581211
2020-11-25 20:53:40,332 DEBUG  [main] BasicTypeRegistry: Adding type registration nstring -> org.hibernate.type.StringNVarcharType@6697f3d
2020-11-25 20:53:40,332 DEBUG  [main] BasicTypeRegistry: Adding type registration ncharacter -> org.hibernate.type.CharacterNCharType@f1d1463
2020-11-25 20:53:40,332 DEBUG  [main] BasicTypeRegistry: Adding type registration url -> org.hibernate.type.UrlType@44ddb518
2020-11-25 20:53:40,332 DEBUG  [main] BasicTypeRegistry: Adding type registration java.net.URL -> org.hibernate.type.UrlType@44ddb518
2020-11-25 20:53:40,332 DEBUG  [main] BasicTypeRegistry: Adding type registration Duration -> org.hibernate.type.DurationType@49e0b123
2020-11-25 20:53:40,333 DEBUG  [main] BasicTypeRegistry: Adding type registration java.time.Duration -> org.hibernate.type.DurationType@49e0b123
2020-11-25 20:53:40,333 DEBUG  [main] BasicTypeRegistry: Adding type registration Instant -> org.hibernate.type.InstantType@40a28bda
2020-11-25 20:53:40,333 DEBUG  [main] BasicTypeRegistry: Adding type registration java.time.Instant -> org.hibernate.type.InstantType@40a28bda
2020-11-25 20:53:40,333 DEBUG  [main] BasicTypeRegistry: Adding type registration LocalDateTime -> org.hibernate.type.LocalDateTimeType@33430fc
2020-11-25 20:53:40,333 DEBUG  [main] BasicTypeRegistry: Adding type registration java.time.LocalDateTime -> org.hibernate.type.LocalDateTimeType@33430fc
2020-11-25 20:53:40,333 DEBUG  [main] BasicTypeRegistry: Adding type registration LocalDate -> org.hibernate.type.LocalDateType@d7055be
2020-11-25 20:53:40,333 DEBUG  [main] BasicTypeRegistry: Adding type registration java.time.LocalDate -> org.hibernate.type.LocalDateType@d7055be
2020-11-25 20:53:40,334 DEBUG  [main] BasicTypeRegistry: Adding type registration LocalTime -> org.hibernate.type.LocalTimeType@3c7d8a4
2020-11-25 20:53:40,335 DEBUG  [main] BasicTypeRegistry: Adding type registration java.time.LocalTime -> org.hibernate.type.LocalTimeType@3c7d8a4
2020-11-25 20:53:40,335 DEBUG  [main] BasicTypeRegistry: Adding type registration OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@7a117dc2
2020-11-25 20:53:40,339 DEBUG  [main] BasicTypeRegistry: Adding type registration java.time.OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@7a117dc2
2020-11-25 20:53:40,340 DEBUG  [main] BasicTypeRegistry: Adding type registration OffsetTime -> org.hibernate.type.OffsetTimeType@3c64339f
2020-11-25 20:53:40,340 DEBUG  [main] BasicTypeRegistry: Adding type registration java.time.OffsetTime -> org.hibernate.type.OffsetTimeType@3c64339f
2020-11-25 20:53:40,340 DEBUG  [main] BasicTypeRegistry: Adding type registration ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@30c8c6ab
2020-11-25 20:53:40,340 DEBUG  [main] BasicTypeRegistry: Adding type registration java.time.ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@30c8c6ab
2020-11-25 20:53:40,340 DEBUG  [main] BasicTypeRegistry: Adding type registration date -> org.hibernate.type.DateType@61c5fd78
2020-11-25 20:53:40,340 DEBUG  [main] BasicTypeRegistry: Adding type registration java.sql.Date -> org.hibernate.type.DateType@61c5fd78
2020-11-25 20:53:40,340 DEBUG  [main] BasicTypeRegistry: Adding type registration time -> org.hibernate.type.TimeType@77856cc5
2020-11-25 20:53:40,341 DEBUG  [main] BasicTypeRegistry: Adding type registration java.sql.Time -> org.hibernate.type.TimeType@77856cc5
2020-11-25 20:53:40,342 DEBUG  [main] BasicTypeRegistry: Adding type registration timestamp -> org.hibernate.type.TimestampType@12166229
2020-11-25 20:53:40,342 DEBUG  [main] BasicTypeRegistry: Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@12166229
2020-11-25 20:53:40,342 DEBUG  [main] BasicTypeRegistry: Adding type registration java.util.Date -> org.hibernate.type.TimestampType@12166229
2020-11-25 20:53:40,342 DEBUG  [main] BasicTypeRegistry: Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@2b4829aa
2020-11-25 20:53:40,342 DEBUG  [main] BasicTypeRegistry: Adding type registration calendar -> org.hibernate.type.CalendarType@3ec082a1
2020-11-25 20:53:40,343 DEBUG  [main] BasicTypeRegistry: Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@3ec082a1
2020-11-25 20:53:40,343 DEBUG  [main] BasicTypeRegistry: Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@3ec082a1
2020-11-25 20:53:40,343 DEBUG  [main] BasicTypeRegistry: Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@429f0ca8
2020-11-25 20:53:40,343 DEBUG  [main] BasicTypeRegistry: Adding type registration locale -> org.hibernate.type.LocaleType@11c3ce6a
2020-11-25 20:53:40,343 DEBUG  [main] BasicTypeRegistry: Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@11c3ce6a
2020-11-25 20:53:40,343 DEBUG  [main] BasicTypeRegistry: Adding type registration currency -> org.hibernate.type.CurrencyType@28519bfb
2020-11-25 20:53:40,343 DEBUG  [main] BasicTypeRegistry: Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@28519bfb
2020-11-25 20:53:40,343 DEBUG  [main] BasicTypeRegistry: Adding type registration timezone -> org.hibernate.type.TimeZoneType@7aa15a80
2020-11-25 20:53:40,343 DEBUG  [main] BasicTypeRegistry: Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@7aa15a80
2020-11-25 20:53:40,343 DEBUG  [main] BasicTypeRegistry: Adding type registration class -> org.hibernate.type.ClassType@48d5ca17
2020-11-25 20:53:40,343 DEBUG  [main] BasicTypeRegistry: Adding type registration java.lang.Class -> org.hibernate.type.ClassType@48d5ca17
2020-11-25 20:53:40,344 DEBUG  [main] BasicTypeRegistry: Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@79b8ecb
2020-11-25 20:53:40,344 DEBUG  [main] BasicTypeRegistry: Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@79b8ecb
2020-11-25 20:53:40,344 DEBUG  [main] BasicTypeRegistry: Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@c0013b8
2020-11-25 20:53:40,344 DEBUG  [main] BasicTypeRegistry: Adding type registration binary -> org.hibernate.type.BinaryType@2a42019a
2020-11-25 20:53:40,344 DEBUG  [main] BasicTypeRegistry: Adding type registration byte[] -> org.hibernate.type.BinaryType@2a42019a
2020-11-25 20:53:40,344 DEBUG  [main] BasicTypeRegistry: Adding type registration [B -> org.hibernate.type.BinaryType@2a42019a
2020-11-25 20:53:40,344 DEBUG  [main] BasicTypeRegistry: Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@495da9a7
2020-11-25 20:53:40,344 DEBUG  [main] BasicTypeRegistry: Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@495da9a7
2020-11-25 20:53:40,344 DEBUG  [main] BasicTypeRegistry: Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@495da9a7
2020-11-25 20:53:40,344 DEBUG  [main] BasicTypeRegistry: Adding type registration row_version -> org.hibernate.type.RowVersionType@35becbd4
2020-11-25 20:53:40,344 DEBUG  [main] BasicTypeRegistry: Adding type registration image -> org.hibernate.type.ImageType@30fa8a6b
2020-11-25 20:53:40,344 DEBUG  [main] BasicTypeRegistry: Adding type registration characters -> org.hibernate.type.CharArrayType@4c8d45cf
2020-11-25 20:53:40,344 DEBUG  [main] BasicTypeRegistry: Adding type registration char[] -> org.hibernate.type.CharArrayType@4c8d45cf
2020-11-25 20:53:40,344 DEBUG  [main] BasicTypeRegistry: Adding type registration [C -> org.hibernate.type.CharArrayType@4c8d45cf
2020-11-25 20:53:40,345 DEBUG  [main] BasicTypeRegistry: Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@5b490d5e
2020-11-25 20:53:40,345 DEBUG  [main] BasicTypeRegistry: Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@5b490d5e
2020-11-25 20:53:40,345 DEBUG  [main] BasicTypeRegistry: Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@5b490d5e
2020-11-25 20:53:40,345 DEBUG  [main] BasicTypeRegistry: Adding type registration text -> org.hibernate.type.TextType@18b04526
2020-11-25 20:53:40,346 DEBUG  [main] BasicTypeRegistry: Adding type registration ntext -> org.hibernate.type.NTextType@246df37b
2020-11-25 20:53:40,346 DEBUG  [main] BasicTypeRegistry: Adding type registration blob -> org.hibernate.type.BlobType@56881196
2020-11-25 20:53:40,346 DEBUG  [main] BasicTypeRegistry: Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@56881196
2020-11-25 20:53:40,346 DEBUG  [main] BasicTypeRegistry: Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@131c0b6f
2020-11-25 20:53:40,346 DEBUG  [main] BasicTypeRegistry: Adding type registration clob -> org.hibernate.type.ClobType@7fc1fd31
2020-11-25 20:53:40,347 DEBUG  [main] BasicTypeRegistry: Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@7fc1fd31
2020-11-25 20:53:40,347 DEBUG  [main] BasicTypeRegistry: Adding type registration nclob -> org.hibernate.type.NClobType@70777a65
2020-11-25 20:53:40,347 DEBUG  [main] BasicTypeRegistry: Adding type registration java.sql.NClob -> org.hibernate.type.NClobType@70777a65
2020-11-25 20:53:40,347 DEBUG  [main] BasicTypeRegistry: Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@2f6f4ac4
2020-11-25 20:53:40,348 DEBUG  [main] BasicTypeRegistry: Adding type registration materialized_nclob -> org.hibernate.type.MaterializedNClobType@7d685f4e
2020-11-25 20:53:40,348 DEBUG  [main] BasicTypeRegistry: Adding type registration serializable -> org.hibernate.type.SerializableType@319aa9ee
2020-11-25 20:53:40,348 DEBUG  [main] BasicTypeRegistry: Adding type registration object -> org.hibernate.type.ObjectType@54234569
2020-11-25 20:53:40,348 DEBUG  [main] BasicTypeRegistry: Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@54234569
2020-11-25 20:53:40,348 DEBUG  [main] BasicTypeRegistry: Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@7eb3ba2
2020-11-25 20:53:40,348 DEBUG  [main] BasicTypeRegistry: Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@404f1907
2020-11-25 20:53:40,348 DEBUG  [main] BasicTypeRegistry: Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@2447d039
2020-11-25 20:53:40,348 DEBUG  [main] BasicTypeRegistry: Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@12e035a8
2020-11-25 20:53:40,352 DEBUG  [main] BasicTypeRegistry: Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@4c082a7d
2020-11-25 20:53:40,353 DEBUG  [main] BasicTypeRegistry: Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@74b795da
2020-11-25 20:53:40,353 DEBUG  [main] BasicTypeRegistry: Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@6e6b556d
2020-11-25 20:53:40,353 DEBUG  [main] BasicTypeRegistry: Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@7d35707d
2020-11-25 20:53:40,376 DEBUG  [main] TypeConfiguration$Scope: Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@63cde372] to MetadataBuildingContext [org.hibernate.boot.internal.MetadataBuildingContextRootImpl@6aff891f]
2020-11-25 20:53:40,395 DEBUG  [main] EnumType: Using NAMED-based conversion for Enum com.sf.back.entities.Kind
2020-11-25 20:53:40,505 DEBUG  [main] EnumType: Using NAMED-based conversion for Enum com.sf.back.entities.Kind
2020-11-25 20:53:40,555 DEBUG  [main] TypeConfiguration$Scope: Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@63cde372] to SessionFactoryImpl [org.hibernate.internal.SessionFactoryImpl@24c00206]
2020-11-25 20:53:40,557 DEBUG  [main] EnumType: Using NAMED-based conversion for Enum com.sf.back.entities.Kind
2020-11-25 20:53:40,558 DEBUG  [main] EnumType: Using NAMED-based conversion for Enum com.sf.back.entities.Kind
2020-11-25 20:53:40,583 DEBUG  [main] EnumType: Using NAMED-based conversion for Enum com.sf.back.entities.Kind
2020-11-25 20:53:40,584 DEBUG  [main] EnumType: Using NAMED-based conversion for Enum com.sf.back.entities.Kind
2020-11-25 20:53:40,623 DEBUG  [main] EnumType: Using NAMED-based conversion for Enum com.sf.back.entities.Kind
2020-11-25 20:53:40,623 DEBUG  [main] EnumType: Using NAMED-based conversion for Enum com.sf.back.entities.Kind
2020-11-25 20:53:40,626 DEBUG  [main] EnumType: Using NAMED-based conversion for Enum com.sf.back.entities.Kind
2020-11-25 20:53:40,634 TRACE  [main] TypeConfiguration$Scope: Handling #sessionFactoryCreated from [org.hibernate.internal.SessionFactoryImpl@24c00206] for TypeConfiguration
2020-11-25 20:53:40,820 WARN   [main] JpaBaseConfiguration$JpaWebConfiguration: spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2020-11-25 20:53:40,963 WARN   [main] GenericWebApplicationContext: Exception encountered during context initialization - cancelling refresh attempt: org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'groovyMarkupConfigurer' defined in class path resource [org/springframework/boot/autoconfigure/groovy/template/GroovyTemplateAutoConfiguration$GroovyMarkupConfiguration.class]: Invocation of init method failed; nested exception is java.lang.reflect.InaccessibleObjectException: Unable to make jdk.internal.loader.ClassLoaders$AppClassLoader(jdk.internal.loader.ClassLoaders$PlatformClassLoader,jdk.internal.loader.URLClassPath) accessible: module java.base does not "opens jdk.internal.loader" to unnamed module @60fa3495
2020-11-25 20:53:40,972 TRACE  [main] TypeConfiguration$Scope: Handling #sessionFactoryClosed from [org.hibernate.internal.SessionFactoryImpl@24c00206] for TypeConfiguration
2020-11-25 20:53:40,972 DEBUG  [main] TypeConfiguration$Scope: Un-scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration$Scope@682ec8d] from SessionFactory [org.hibernate.internal.SessionFactoryImpl@24c00206]
2020-11-25 20:53:40,990 ERROR  [main] SpringApplication: Application run failed
org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'groovyMarkupConfigurer' defined in class path resource [org/springframework/boot/autoconfigure/groovy/template/GroovyTemplateAutoConfiguration$GroovyMarkupConfiguration.class]: Invocation of init method failed; nested exception is java.lang.reflect.InaccessibleObjectException: Unable to make jdk.internal.loader.ClassLoaders$AppClassLoader(jdk.internal.loader.ClassLoaders$PlatformClassLoader,jdk.internal.loader.URLClassPath) accessible: module java.base does not "opens jdk.internal.loader" to unnamed module @60fa3495
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1803)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:595)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:517)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:323)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:222)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:321)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:202)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(DefaultListableBeanFactory.java:879)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:878)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:550)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:747)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:397)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:315)
	at org.springframework.boot.test.context.SpringBootContextLoader.loadContext(SpringBootContextLoader.java:125)
	at org.springframework.test.context.cache.DefaultCacheAwareContextLoaderDelegate.loadContextInternal(DefaultCacheAwareContextLoaderDelegate.java:99)
	at org.springframework.test.context.cache.DefaultCacheAwareContextLoaderDelegate.loadContext(DefaultCacheAwareContextLoaderDelegate.java:124)
	at org.springframework.test.context.support.DefaultTestContext.getApplicationContext(DefaultTestContext.java:123)
	at org.springframework.test.context.web.ServletTestExecutionListener.setUpRequestContextIfNecessary(ServletTestExecutionListener.java:190)
	at org.springframework.test.context.web.ServletTestExecutionListener.prepareTestInstance(ServletTestExecutionListener.java:132)
	at org.springframework.test.context.TestContextManager.prepareTestInstance(TestContextManager.java:244)
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner.createTest(SpringJUnit4ClassRunner.java:227)
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner$1.runReflectiveCall(SpringJUnit4ClassRunner.java:289)
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner.methodBlock(SpringJUnit4ClassRunner.java:291)
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner.runChild(SpringJUnit4ClassRunner.java:246)
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner.runChild(SpringJUnit4ClassRunner.java:97)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:290)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:71)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:58)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268)
	at org.junit.internal.runners.statements.RunBefores.evaluate(RunBefores.java:26)
	at org.springframework.test.context.junit4.statements.RunBeforeTestClassCallbacks.evaluate(RunBeforeTestClassCallbacks.java:61)
	at org.junit.internal.runners.statements.RunAfters.evaluate(RunAfters.java:27)
	at org.springframework.test.context.junit4.statements.RunAfterTestClassCallbacks.evaluate(RunAfterTestClassCallbacks.java:70)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:363)
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner.run(SpringJUnit4ClassRunner.java:190)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:137)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:115)
	at org.junit.vintage.engine.execution.RunnerExecutor.execute(RunnerExecutor.java:40)
	at java.base/java.util.stream.ForEachOps$ForEachOp$OfRef.accept(ForEachOps.java:183)
	at java.base/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:195)
	at java.base/java.util.Iterator.forEachRemaining(Iterator.java:133)
	at java.base/java.util.Spliterators$IteratorSpliterator.forEachRemaining(Spliterators.java:1801)
	at java.base/java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:484)
	at java.base/java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:474)
	at java.base/java.util.stream.ForEachOps$ForEachOp.evaluateSequential(ForEachOps.java:150)
	at java.base/java.util.stream.ForEachOps$ForEachOp$OfRef.evaluateSequential(ForEachOps.java:173)
	at java.base/java.util.stream.AbstractPipeline.evaluate(AbstractPipeline.java:234)
	at java.base/java.util.stream.ReferencePipeline.forEach(ReferencePipeline.java:497)
	at org.junit.vintage.engine.VintageTestEngine.executeAllChildren(VintageTestEngine.java:80)
	at org.junit.vintage.engine.VintageTestEngine.execute(VintageTestEngine.java:71)
	at org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:220)
	at org.junit.platform.launcher.core.DefaultLauncher.lambda$execute$6(DefaultLauncher.java:188)
	at org.junit.platform.launcher.core.DefaultLauncher.withInterceptedStreams(DefaultLauncher.java:202)
	at org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:181)
	at org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:128)
	at org.apache.maven.surefire.junitplatform.JUnitPlatformProvider.invokeAllTests(JUnitPlatformProvider.java:150)
	at org.apache.maven.surefire.junitplatform.JUnitPlatformProvider.invoke(JUnitPlatformProvider.java:124)
	at org.apache.maven.surefire.booter.ForkedBooter.invokeProviderInSameClassLoader(ForkedBooter.java:384)
	at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:345)
	at org.apache.maven.surefire.booter.ForkedBooter.execute(ForkedBooter.java:126)
	at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:418)
Caused by: java.lang.reflect.InaccessibleObjectException: Unable to make jdk.internal.loader.ClassLoaders$AppClassLoader(jdk.internal.loader.ClassLoaders$PlatformClassLoader,jdk.internal.loader.URLClassPath) accessible: module java.base does not "opens jdk.internal.loader" to unnamed module @60fa3495
	at java.base/java.lang.reflect.AccessibleObject.checkCanSetAccessible(AccessibleObject.java:344)
	at java.base/java.lang.reflect.AccessibleObject.checkCanSetAccessible(AccessibleObject.java:284)
	at java.base/java.lang.reflect.Constructor.checkCanSetAccessible(Constructor.java:189)
	at java.base/java.lang.reflect.Constructor.setAccessible(Constructor.java:182)
	at org.codehaus.groovy.reflection.CachedConstructor$1.run(CachedConstructor.java:44)
	at java.base/java.security.AccessController.doPrivileged(AccessController.java:312)
	at org.codehaus.groovy.reflection.CachedConstructor.<init>(CachedConstructor.java:42)
	at org.codehaus.groovy.reflection.CachedClass$2.initValue(CachedClass.java:79)
	at org.codehaus.groovy.reflection.CachedClass$2.initValue(CachedClass.java:69)
	at org.codehaus.groovy.util.LazyReference.getLocked(LazyReference.java:49)
	at org.codehaus.groovy.util.LazyReference.get(LazyReference.java:36)
	at org.codehaus.groovy.reflection.CachedClass.getConstructors(CachedClass.java:268)
	at groovy.lang.MetaClassImpl.<init>(MetaClassImpl.java:218)
	at groovy.lang.MetaClassImpl.<init>(MetaClassImpl.java:228)
	at groovy.lang.MetaClassRegistry$MetaClassCreationHandle.createNormalMetaClass(MetaClassRegistry.java:171)
	at groovy.lang.MetaClassRegistry$MetaClassCreationHandle.createWithCustomLookup(MetaClassRegistry.java:161)
	at groovy.lang.MetaClassRegistry$MetaClassCreationHandle.create(MetaClassRegistry.java:144)
	at org.codehaus.groovy.reflection.ClassInfo.getMetaClassUnderLock(ClassInfo.java:253)
	at org.codehaus.groovy.reflection.ClassInfo.getMetaClass(ClassInfo.java:285)
	at org.codehaus.groovy.reflection.ClassInfo.getMetaClass(ClassInfo.java:295)
	at org.codehaus.groovy.runtime.metaclass.MetaClassRegistryImpl.getMetaClass(MetaClassRegistryImpl.java:261)
	at org.codehaus.groovy.runtime.InvokerHelper.getMetaClass(InvokerHelper.java:873)
	at org.codehaus.groovy.runtime.InvokerHelper.invokePojoMethod(InvokerHelper.java:906)
	at org.codehaus.groovy.runtime.InvokerHelper.invokeMethod(InvokerHelper.java:898)
	at org.codehaus.groovy.runtime.typehandling.DefaultTypeTransformation.castToBoolean(DefaultTypeTransformation.java:185)
	at org.codehaus.groovy.runtime.typehandling.DefaultTypeTransformation.booleanUnbox(DefaultTypeTransformation.java:74)
	at org.codehaus.groovy.control.customizers.ASTTransformationCustomizer.findASTTranformationClass(ASTTransformationCustomizer.groovy:209)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:567)
	at org.codehaus.groovy.reflection.CachedMethod.invoke(CachedMethod.java:93)
	at org.codehaus.groovy.runtime.callsite.StaticMetaMethodSite$StaticMetaMethodSiteNoUnwrapNoCoerce.invoke(StaticMetaMethodSite.java:151)
	at org.codehaus.groovy.runtime.callsite.StaticMetaMethodSite.callStatic(StaticMetaMethodSite.java:102)
	at org.codehaus.groovy.runtime.callsite.AbstractCallSite.callStatic(AbstractCallSite.java:214)
	at org.codehaus.groovy.control.customizers.ASTTransformationCustomizer.findPhase(ASTTransformationCustomizer.groovy:226)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:567)
	at org.codehaus.groovy.reflection.CachedMethod.invoke(CachedMethod.java:93)
	at org.codehaus.groovy.runtime.callsite.StaticMetaMethodSite$StaticMetaMethodSiteNoUnwrapNoCoerce.invoke(StaticMetaMethodSite.java:151)
	at org.codehaus.groovy.runtime.callsite.StaticMetaMethodSite.callStatic(StaticMetaMethodSite.java:102)
	at org.codehaus.groovy.runtime.callsite.AbstractCallSite.callStatic(AbstractCallSite.java:214)
	at org.codehaus.groovy.control.customizers.ASTTransformationCustomizer.<init>(ASTTransformationCustomizer.groovy:180)
	at org.codehaus.groovy.control.customizers.ASTTransformationCustomizer.<init>(ASTTransformationCustomizer.groovy:188)
	at groovy.text.markup.MarkupTemplateEngine.<init>(MarkupTemplateEngine.java:94)
	at org.springframework.web.servlet.view.groovy.GroovyMarkupConfigurer.createTemplateEngine(GroovyMarkupConfigurer.java:160)
	at org.springframework.web.servlet.view.groovy.GroovyMarkupConfigurer.afterPropertiesSet(GroovyMarkupConfigurer.java:153)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1862)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1799)
	... 62 common frames omitted
2020-11-25 20:53:40,992 ERROR  [main] TestContextManager: Caught exception while allowing TestExecutionListener [org.springframework.test.context.web.ServletTestExecutionListener@170b27a7] to prepare test instance [com.sf.math.algebra.solvers.PolynomialSolverIntervalTest@25ebe548]
java.lang.IllegalStateException: Failed to load ApplicationContext
	at org.springframework.test.context.cache.DefaultCacheAwareContextLoaderDelegate.loadContext(DefaultCacheAwareContextLoaderDelegate.java:132)
	at org.springframework.test.context.support.DefaultTestContext.getApplicationContext(DefaultTestContext.java:123)
	at org.springframework.test.context.web.ServletTestExecutionListener.setUpRequestContextIfNecessary(ServletTestExecutionListener.java:190)
	at org.springframework.test.context.web.ServletTestExecutionListener.prepareTestInstance(ServletTestExecutionListener.java:132)
	at org.springframework.test.context.TestContextManager.prepareTestInstance(TestContextManager.java:244)
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner.createTest(SpringJUnit4ClassRunner.java:227)
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner$1.runReflectiveCall(SpringJUnit4ClassRunner.java:289)
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner.methodBlock(SpringJUnit4ClassRunner.java:291)
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner.runChild(SpringJUnit4ClassRunner.java:246)
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner.runChild(SpringJUnit4ClassRunner.java:97)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:290)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:71)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:58)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268)
	at org.junit.internal.runners.statements.RunBefores.evaluate(RunBefores.java:26)
	at org.springframework.test.context.junit4.statements.RunBeforeTestClassCallbacks.evaluate(RunBeforeTestClassCallbacks.java:61)
	at org.junit.internal.runners.statements.RunAfters.evaluate(RunAfters.java:27)
	at org.springframework.test.context.junit4.statements.RunAfterTestClassCallbacks.evaluate(RunAfterTestClassCallbacks.java:70)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:363)
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner.run(SpringJUnit4ClassRunner.java:190)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:137)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:115)
	at org.junit.vintage.engine.execution.RunnerExecutor.execute(RunnerExecutor.java:40)
	at java.base/java.util.stream.ForEachOps$ForEachOp$OfRef.accept(ForEachOps.java:183)
	at java.base/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:195)
	at java.base/java.util.Iterator.forEachRemaining(Iterator.java:133)
	at java.base/java.util.Spliterators$IteratorSpliterator.forEachRemaining(Spliterators.java:1801)
	at java.base/java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:484)
	at java.base/java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:474)
	at java.base/java.util.stream.ForEachOps$ForEachOp.evaluateSequential(ForEachOps.java:150)
	at java.base/java.util.stream.ForEachOps$ForEachOp$OfRef.evaluateSequential(ForEachOps.java:173)
	at java.base/java.util.stream.AbstractPipeline.evaluate(AbstractPipeline.java:234)
	at java.base/java.util.stream.ReferencePipeline.forEach(ReferencePipeline.java:497)
	at org.junit.vintage.engine.VintageTestEngine.executeAllChildren(VintageTestEngine.java:80)
	at org.junit.vintage.engine.VintageTestEngine.execute(VintageTestEngine.java:71)
	at org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:220)
	at org.junit.platform.launcher.core.DefaultLauncher.lambda$execute$6(DefaultLauncher.java:188)
	at org.junit.platform.launcher.core.DefaultLauncher.withInterceptedStreams(DefaultLauncher.java:202)
	at org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:181)
	at org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:128)
	at org.apache.maven.surefire.junitplatform.JUnitPlatformProvider.invokeAllTests(JUnitPlatformProvider.java:150)
	at org.apache.maven.surefire.junitplatform.JUnitPlatformProvider.invoke(JUnitPlatformProvider.java:124)
	at org.apache.maven.surefire.booter.ForkedBooter.invokeProviderInSameClassLoader(ForkedBooter.java:384)
	at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:345)
	at org.apache.maven.surefire.booter.ForkedBooter.execute(ForkedBooter.java:126)
	at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:418)
Caused by: org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'groovyMarkupConfigurer' defined in class path resource [org/springframework/boot/autoconfigure/groovy/template/GroovyTemplateAutoConfiguration$GroovyMarkupConfiguration.class]: Invocation of init method failed; nested exception is java.lang.reflect.InaccessibleObjectException: Unable to make jdk.internal.loader.ClassLoaders$AppClassLoader(jdk.internal.loader.ClassLoaders$PlatformClassLoader,jdk.internal.loader.URLClassPath) accessible: module java.base does not "opens jdk.internal.loader" to unnamed module @60fa3495
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1803)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:595)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:517)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:323)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:222)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:321)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:202)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(DefaultListableBeanFactory.java:879)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:878)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:550)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:747)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:397)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:315)
	at org.springframework.boot.test.context.SpringBootContextLoader.loadContext(SpringBootContextLoader.java:125)
	at org.springframework.test.context.cache.DefaultCacheAwareContextLoaderDelegate.loadContextInternal(DefaultCacheAwareContextLoaderDelegate.java:99)
	at org.springframework.test.context.cache.DefaultCacheAwareContextLoaderDelegate.loadContext(DefaultCacheAwareContextLoaderDelegate.java:124)
	... 47 common frames omitted
Caused by: java.lang.reflect.InaccessibleObjectException: Unable to make jdk.internal.loader.ClassLoaders$AppClassLoader(jdk.internal.loader.ClassLoaders$PlatformClassLoader,jdk.internal.loader.URLClassPath) accessible: module java.base does not "opens jdk.internal.loader" to unnamed module @60fa3495
	at java.base/java.lang.reflect.AccessibleObject.checkCanSetAccessible(AccessibleObject.java:344)
	at java.base/java.lang.reflect.AccessibleObject.checkCanSetAccessible(AccessibleObject.java:284)
	at java.base/java.lang.reflect.Constructor.checkCanSetAccessible(Constructor.java:189)
	at java.base/java.lang.reflect.Constructor.setAccessible(Constructor.java:182)
	at org.codehaus.groovy.reflection.CachedConstructor$1.run(CachedConstructor.java:44)
	at java.base/java.security.AccessController.doPrivileged(AccessController.java:312)
	at org.codehaus.groovy.reflection.CachedConstructor.<init>(CachedConstructor.java:42)
	at org.codehaus.groovy.reflection.CachedClass$2.initValue(CachedClass.java:79)
	at org.codehaus.groovy.reflection.CachedClass$2.initValue(CachedClass.java:69)
	at org.codehaus.groovy.util.LazyReference.getLocked(LazyReference.java:49)
	at org.codehaus.groovy.util.LazyReference.get(LazyReference.java:36)
	at org.codehaus.groovy.reflection.CachedClass.getConstructors(CachedClass.java:268)
	at groovy.lang.MetaClassImpl.<init>(MetaClassImpl.java:218)
	at groovy.lang.MetaClassImpl.<init>(MetaClassImpl.java:228)
	at groovy.lang.MetaClassRegistry$MetaClassCreationHandle.createNormalMetaClass(MetaClassRegistry.java:171)
	at groovy.lang.MetaClassRegistry$MetaClassCreationHandle.createWithCustomLookup(MetaClassRegistry.java:161)
	at groovy.lang.MetaClassRegistry$MetaClassCreationHandle.create(MetaClassRegistry.java:144)
	at org.codehaus.groovy.reflection.ClassInfo.getMetaClassUnderLock(ClassInfo.java:253)
	at org.codehaus.groovy.reflection.ClassInfo.getMetaClass(ClassInfo.java:285)
	at org.codehaus.groovy.reflection.ClassInfo.getMetaClass(ClassInfo.java:295)
	at org.codehaus.groovy.runtime.metaclass.MetaClassRegistryImpl.getMetaClass(MetaClassRegistryImpl.java:261)
	at org.codehaus.groovy.runtime.InvokerHelper.getMetaClass(InvokerHelper.java:873)
	at org.codehaus.groovy.runtime.InvokerHelper.invokePojoMethod(InvokerHelper.java:906)
	at org.codehaus.groovy.runtime.InvokerHelper.invokeMethod(InvokerHelper.java:898)
	at org.codehaus.groovy.runtime.typehandling.DefaultTypeTransformation.castToBoolean(DefaultTypeTransformation.java:185)
	at org.codehaus.groovy.runtime.typehandling.DefaultTypeTransformation.booleanUnbox(DefaultTypeTransformation.java:74)
	at org.codehaus.groovy.control.customizers.ASTTransformationCustomizer.findASTTranformationClass(ASTTransformationCustomizer.groovy:209)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:567)
	at org.codehaus.groovy.reflection.CachedMethod.invoke(CachedMethod.java:93)
	at org.codehaus.groovy.runtime.callsite.StaticMetaMethodSite$StaticMetaMethodSiteNoUnwrapNoCoerce.invoke(StaticMetaMethodSite.java:151)
	at org.codehaus.groovy.runtime.callsite.StaticMetaMethodSite.callStatic(StaticMetaMethodSite.java:102)
	at org.codehaus.groovy.runtime.callsite.AbstractCallSite.callStatic(AbstractCallSite.java:214)
	at org.codehaus.groovy.control.customizers.ASTTransformationCustomizer.findPhase(ASTTransformationCustomizer.groovy:226)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:567)
	at org.codehaus.groovy.reflection.CachedMethod.invoke(CachedMethod.java:93)
	at org.codehaus.groovy.runtime.callsite.StaticMetaMethodSite$StaticMetaMethodSiteNoUnwrapNoCoerce.invoke(StaticMetaMethodSite.java:151)
	at org.codehaus.groovy.runtime.callsite.StaticMetaMethodSite.callStatic(StaticMetaMethodSite.java:102)
	at org.codehaus.groovy.runtime.callsite.AbstractCallSite.callStatic(AbstractCallSite.java:214)
	at org.codehaus.groovy.control.customizers.ASTTransformationCustomizer.<init>(ASTTransformationCustomizer.groovy:180)
	at org.codehaus.groovy.control.customizers.ASTTransformationCustomizer.<init>(ASTTransformationCustomizer.groovy:188)
	at groovy.text.markup.MarkupTemplateEngine.<init>(MarkupTemplateEngine.java:94)
	at org.springframework.web.servlet.view.groovy.GroovyMarkupConfigurer.createTemplateEngine(GroovyMarkupConfigurer.java:160)
	at org.springframework.web.servlet.view.groovy.GroovyMarkupConfigurer.afterPropertiesSet(GroovyMarkupConfigurer.java:153)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1862)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1799)
	... 62 common frames omitted
2020-11-25 20:53:41,629 DEBUG  [main] BasicTypeRegistry: Adding type registration boolean -> org.hibernate.type.BooleanType@ff2266c
2020-11-25 20:53:41,635 DEBUG  [main] BasicTypeRegistry: Adding type registration boolean -> org.hibernate.type.BooleanType@ff2266c
2020-11-25 20:53:41,636 DEBUG  [main] BasicTypeRegistry: Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@ff2266c
2020-11-25 20:53:41,636 DEBUG  [main] BasicTypeRegistry: Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@1d585fb
2020-11-25 20:53:41,636 DEBUG  [main] BasicTypeRegistry: Adding type registration true_false -> org.hibernate.type.TrueFalseType@7c8f047a
2020-11-25 20:53:41,637 DEBUG  [main] BasicTypeRegistry: Adding type registration yes_no -> org.hibernate.type.YesNoType@d949bc4
2020-11-25 20:53:41,637 DEBUG  [main] BasicTypeRegistry: Adding type registration byte -> org.hibernate.type.ByteType@29c25bbc
2020-11-25 20:53:41,637 DEBUG  [main] BasicTypeRegistry: Adding type registration byte -> org.hibernate.type.ByteType@29c25bbc
2020-11-25 20:53:41,638 DEBUG  [main] BasicTypeRegistry: Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@29c25bbc
2020-11-25 20:53:41,638 DEBUG  [main] BasicTypeRegistry: Adding type registration character -> org.hibernate.type.CharacterType@403f7aa2
2020-11-25 20:53:41,638 DEBUG  [main] BasicTypeRegistry: Adding type registration char -> org.hibernate.type.CharacterType@403f7aa2
2020-11-25 20:53:41,639 DEBUG  [main] BasicTypeRegistry: Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@403f7aa2
2020-11-25 20:53:41,639 DEBUG  [main] BasicTypeRegistry: Adding type registration short -> org.hibernate.type.ShortType@38cb1606
2020-11-25 20:53:41,639 DEBUG  [main] BasicTypeRegistry: Adding type registration short -> org.hibernate.type.ShortType@38cb1606
2020-11-25 20:53:41,640 DEBUG  [main] BasicTypeRegistry: Adding type registration java.lang.Short -> org.hibernate.type.ShortType@38cb1606
2020-11-25 20:53:41,640 DEBUG  [main] BasicTypeRegistry: Adding type registration integer -> org.hibernate.type.IntegerType@5d3b6585
2020-11-25 20:53:41,640 DEBUG  [main] BasicTypeRegistry: Adding type registration int -> org.hibernate.type.IntegerType@5d3b6585
2020-11-25 20:53:41,641 DEBUG  [main] BasicTypeRegistry: Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@5d3b6585
2020-11-25 20:53:41,641 DEBUG  [main] BasicTypeRegistry: Adding type registration long -> org.hibernate.type.LongType@4fea5ee0
2020-11-25 20:53:41,641 DEBUG  [main] BasicTypeRegistry: Adding type registration long -> org.hibernate.type.LongType@4fea5ee0
2020-11-25 20:53:41,642 DEBUG  [main] BasicTypeRegistry: Adding type registration java.lang.Long -> org.hibernate.type.LongType@4fea5ee0
2020-11-25 20:53:41,642 DEBUG  [main] BasicTypeRegistry: Adding type registration float -> org.hibernate.type.FloatType@7b3085a3
2020-11-25 20:53:41,642 DEBUG  [main] BasicTypeRegistry: Adding type registration float -> org.hibernate.type.FloatType@7b3085a3
2020-11-25 20:53:41,643 DEBUG  [main] BasicTypeRegistry: Adding type registration java.lang.Float -> org.hibernate.type.FloatType@7b3085a3
2020-11-25 20:53:41,643 DEBUG  [main] BasicTypeRegistry: Adding type registration double -> org.hibernate.type.DoubleType@5a7a6d34
2020-11-25 20:53:41,643 DEBUG  [main] BasicTypeRegistry: Adding type registration double -> org.hibernate.type.DoubleType@5a7a6d34
2020-11-25 20:53:41,644 DEBUG  [main] BasicTypeRegistry: Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@5a7a6d34
2020-11-25 20:53:41,644 DEBUG  [main] BasicTypeRegistry: Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@5ae66c98
2020-11-25 20:53:41,644 DEBUG  [main] BasicTypeRegistry: Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@5ae66c98
2020-11-25 20:53:41,645 DEBUG  [main] BasicTypeRegistry: Adding type registration big_integer -> org.hibernate.type.BigIntegerType@223cbf0d
2020-11-25 20:53:41,645 DEBUG  [main] BasicTypeRegistry: Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@223cbf0d
2020-11-25 20:53:41,645 DEBUG  [main] BasicTypeRegistry: Adding type registration string -> org.hibernate.type.StringType@4f581211
2020-11-25 20:53:41,645 DEBUG  [main] BasicTypeRegistry: Adding type registration java.lang.String -> org.hibernate.type.StringType@4f581211
2020-11-25 20:53:41,645 DEBUG  [main] BasicTypeRegistry: Adding type registration nstring -> org.hibernate.type.StringNVarcharType@6697f3d
2020-11-25 20:53:41,645 DEBUG  [main] BasicTypeRegistry: Adding type registration ncharacter -> org.hibernate.type.CharacterNCharType@f1d1463
2020-11-25 20:53:41,646 DEBUG  [main] BasicTypeRegistry: Adding type registration url -> org.hibernate.type.UrlType@44ddb518
2020-11-25 20:53:41,646 DEBUG  [main] BasicTypeRegistry: Adding type registration java.net.URL -> org.hibernate.type.UrlType@44ddb518
2020-11-25 20:53:41,646 DEBUG  [main] BasicTypeRegistry: Adding type registration Duration -> org.hibernate.type.DurationType@49e0b123
2020-11-25 20:53:41,646 DEBUG  [main] BasicTypeRegistry: Adding type registration java.time.Duration -> org.hibernate.type.DurationType@49e0b123
2020-11-25 20:53:41,646 DEBUG  [main] BasicTypeRegistry: Adding type registration Instant -> org.hibernate.type.InstantType@40a28bda
2020-11-25 20:53:41,646 DEBUG  [main] BasicTypeRegistry: Adding type registration java.time.Instant -> org.hibernate.type.InstantType@40a28bda
2020-11-25 20:53:41,646 DEBUG  [main] BasicTypeRegistry: Adding type registration LocalDateTime -> org.hibernate.type.LocalDateTimeType@33430fc
2020-11-25 20:53:41,647 DEBUG  [main] BasicTypeRegistry: Adding type registration java.time.LocalDateTime -> org.hibernate.type.LocalDateTimeType@33430fc
2020-11-25 20:53:41,647 DEBUG  [main] BasicTypeRegistry: Adding type registration LocalDate -> org.hibernate.type.LocalDateType@d7055be
2020-11-25 20:53:41,647 DEBUG  [main] BasicTypeRegistry: Adding type registration java.time.LocalDate -> org.hibernate.type.LocalDateType@d7055be
2020-11-25 20:53:41,647 DEBUG  [main] BasicTypeRegistry: Adding type registration LocalTime -> org.hibernate.type.LocalTimeType@3c7d8a4
2020-11-25 20:53:41,647 DEBUG  [main] BasicTypeRegistry: Adding type registration java.time.LocalTime -> org.hibernate.type.LocalTimeType@3c7d8a4
2020-11-25 20:53:41,648 DEBUG  [main] BasicTypeRegistry: Adding type registration OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@7a117dc2
2020-11-25 20:53:41,648 DEBUG  [main] BasicTypeRegistry: Adding type registration java.time.OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@7a117dc2
2020-11-25 20:53:41,648 DEBUG  [main] BasicTypeRegistry: Adding type registration OffsetTime -> org.hibernate.type.OffsetTimeType@3c64339f
2020-11-25 20:53:41,648 DEBUG  [main] BasicTypeRegistry: Adding type registration java.time.OffsetTime -> org.hibernate.type.OffsetTimeType@3c64339f
2020-11-25 20:53:41,648 DEBUG  [main] BasicTypeRegistry: Adding type registration ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@30c8c6ab
2020-11-25 20:53:41,649 DEBUG  [main] BasicTypeRegistry: Adding type registration java.time.ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@30c8c6ab
2020-11-25 20:53:41,649 DEBUG  [main] BasicTypeRegistry: Adding type registration date -> org.hibernate.type.DateType@61c5fd78
2020-11-25 20:53:41,649 DEBUG  [main] BasicTypeRegistry: Adding type registration java.sql.Date -> org.hibernate.type.DateType@61c5fd78
2020-11-25 20:53:41,650 DEBUG  [main] BasicTypeRegistry: Adding type registration time -> org.hibernate.type.TimeType@77856cc5
2020-11-25 20:53:41,650 DEBUG  [main] BasicTypeRegistry: Adding type registration java.sql.Time -> org.hibernate.type.TimeType@77856cc5
2020-11-25 20:53:41,650 DEBUG  [main] BasicTypeRegistry: Adding type registration timestamp -> org.hibernate.type.TimestampType@12166229
2020-11-25 20:53:41,651 DEBUG  [main] BasicTypeRegistry: Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@12166229
2020-11-25 20:53:41,651 DEBUG  [main] BasicTypeRegistry: Adding type registration java.util.Date -> org.hibernate.type.TimestampType@12166229
2020-11-25 20:53:41,651 DEBUG  [main] BasicTypeRegistry: Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@2b4829aa
2020-11-25 20:53:41,652 DEBUG  [main] BasicTypeRegistry: Adding type registration calendar -> org.hibernate.type.CalendarType@3ec082a1
2020-11-25 20:53:41,652 DEBUG  [main] BasicTypeRegistry: Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@3ec082a1
2020-11-25 20:53:41,652 DEBUG  [main] BasicTypeRegistry: Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@3ec082a1
2020-11-25 20:53:41,653 DEBUG  [main] BasicTypeRegistry: Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@429f0ca8
2020-11-25 20:53:41,653 DEBUG  [main] BasicTypeRegistry: Adding type registration locale -> org.hibernate.type.LocaleType@11c3ce6a
2020-11-25 20:53:41,653 DEBUG  [main] BasicTypeRegistry: Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@11c3ce6a
2020-11-25 20:53:41,653 DEBUG  [main] BasicTypeRegistry: Adding type registration currency -> org.hibernate.type.CurrencyType@28519bfb
2020-11-25 20:53:41,653 DEBUG  [main] BasicTypeRegistry: Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@28519bfb
2020-11-25 20:53:41,654 DEBUG  [main] BasicTypeRegistry: Adding type registration timezone -> org.hibernate.type.TimeZoneType@7aa15a80
2020-11-25 20:53:41,654 DEBUG  [main] BasicTypeRegistry: Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@7aa15a80
2020-11-25 20:53:41,654 DEBUG  [main] BasicTypeRegistry: Adding type registration class -> org.hibernate.type.ClassType@48d5ca17
2020-11-25 20:53:41,655 DEBUG  [main] BasicTypeRegistry: Adding type registration java.lang.Class -> org.hibernate.type.ClassType@48d5ca17
2020-11-25 20:53:41,655 DEBUG  [main] BasicTypeRegistry: Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@79b8ecb
2020-11-25 20:53:41,655 DEBUG  [main] BasicTypeRegistry: Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@79b8ecb
2020-11-25 20:53:41,655 DEBUG  [main] BasicTypeRegistry: Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@c0013b8
2020-11-25 20:53:41,656 DEBUG  [main] BasicTypeRegistry: Adding type registration binary -> org.hibernate.type.BinaryType@2a42019a
2020-11-25 20:53:41,656 DEBUG  [main] BasicTypeRegistry: Adding type registration byte[] -> org.hibernate.type.BinaryType@2a42019a
2020-11-25 20:53:41,656 DEBUG  [main] BasicTypeRegistry: Adding type registration [B -> org.hibernate.type.BinaryType@2a42019a
2020-11-25 20:53:41,657 DEBUG  [main] BasicTypeRegistry: Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@495da9a7
2020-11-25 20:53:41,657 DEBUG  [main] BasicTypeRegistry: Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@495da9a7
2020-11-25 20:53:41,658 DEBUG  [main] BasicTypeRegistry: Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@495da9a7
2020-11-25 20:53:41,659 DEBUG  [main] BasicTypeRegistry: Adding type registration row_version -> org.hibernate.type.RowVersionType@35becbd4
2020-11-25 20:53:41,659 DEBUG  [main] BasicTypeRegistry: Adding type registration image -> org.hibernate.type.ImageType@30fa8a6b
2020-11-25 20:53:41,660 DEBUG  [main] BasicTypeRegistry: Adding type registration characters -> org.hibernate.type.CharArrayType@4c8d45cf
2020-11-25 20:53:41,660 DEBUG  [main] BasicTypeRegistry: Adding type registration char[] -> org.hibernate.type.CharArrayType@4c8d45cf
2020-11-25 20:53:41,665 DEBUG  [main] BasicTypeRegistry: Adding type registration [C -> org.hibernate.type.CharArrayType@4c8d45cf
2020-11-25 20:53:41,665 DEBUG  [main] BasicTypeRegistry: Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@5b490d5e
2020-11-25 20:53:41,666 DEBUG  [main] BasicTypeRegistry: Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@5b490d5e
2020-11-25 20:53:41,669 DEBUG  [main] BasicTypeRegistry: Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@5b490d5e
2020-11-25 20:53:41,670 DEBUG  [main] BasicTypeRegistry: Adding type registration text -> org.hibernate.type.TextType@18b04526
2020-11-25 20:53:41,670 DEBUG  [main] BasicTypeRegistry: Adding type registration ntext -> org.hibernate.type.NTextType@246df37b
2020-11-25 20:53:41,671 DEBUG  [main] BasicTypeRegistry: Adding type registration blob -> org.hibernate.type.BlobType@56881196
2020-11-25 20:53:41,671 DEBUG  [main] BasicTypeRegistry: Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@56881196
2020-11-25 20:53:41,671 DEBUG  [main] BasicTypeRegistry: Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@131c0b6f
2020-11-25 20:53:41,672 DEBUG  [main] BasicTypeRegistry: Adding type registration clob -> org.hibernate.type.ClobType@7fc1fd31
2020-11-25 20:53:41,672 DEBUG  [main] BasicTypeRegistry: Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@7fc1fd31
2020-11-25 20:53:41,672 DEBUG  [main] BasicTypeRegistry: Adding type registration nclob -> org.hibernate.type.NClobType@70777a65
2020-11-25 20:53:41,672 DEBUG  [main] BasicTypeRegistry: Adding type registration java.sql.NClob -> org.hibernate.type.NClobType@70777a65
2020-11-25 20:53:41,672 DEBUG  [main] BasicTypeRegistry: Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@2f6f4ac4
2020-11-25 20:53:41,672 DEBUG  [main] BasicTypeRegistry: Adding type registration materialized_nclob -> org.hibernate.type.MaterializedNClobType@7d685f4e
2020-11-25 20:53:41,673 DEBUG  [main] BasicTypeRegistry: Adding type registration serializable -> org.hibernate.type.SerializableType@319aa9ee
2020-11-25 20:53:41,673 DEBUG  [main] BasicTypeRegistry: Adding type registration object -> org.hibernate.type.ObjectType@54234569
2020-11-25 20:53:41,673 DEBUG  [main] BasicTypeRegistry: Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@54234569
2020-11-25 20:53:41,673 DEBUG  [main] BasicTypeRegistry: Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@37500808
2020-11-25 20:53:41,673 DEBUG  [main] BasicTypeRegistry: Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@daa6654
2020-11-25 20:53:41,673 DEBUG  [main] BasicTypeRegistry: Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@6fd33f5a
2020-11-25 20:53:41,673 DEBUG  [main] BasicTypeRegistry: Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@596707f5
2020-11-25 20:53:41,674 DEBUG  [main] BasicTypeRegistry: Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@6ec05499
2020-11-25 20:53:41,674 DEBUG  [main] BasicTypeRegistry: Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@308617d3
2020-11-25 20:53:41,674 DEBUG  [main] BasicTypeRegistry: Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@4659d776
2020-11-25 20:53:41,674 DEBUG  [main] BasicTypeRegistry: Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@276038e7
2020-11-25 20:53:41,693 DEBUG  [main] TypeConfiguration$Scope: Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@26664caa] to MetadataBuildingContext [org.hibernate.boot.internal.MetadataBuildingContextRootImpl@6b3eb57]
2020-11-25 20:53:41,726 DEBUG  [main] EnumType: Using NAMED-based conversion for Enum com.sf.back.entities.Kind
2020-11-25 20:53:41,731 DEBUG  [main] EnumType: Using NAMED-based conversion for Enum com.sf.back.entities.Kind
2020-11-25 20:53:41,749 DEBUG  [main] TypeConfiguration$Scope: Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@26664caa] to SessionFactoryImpl [org.hibernate.internal.SessionFactoryImpl@47690183]
2020-11-25 20:53:41,750 DEBUG  [main] EnumType: Using NAMED-based conversion for Enum com.sf.back.entities.Kind
2020-11-25 20:53:41,750 DEBUG  [main] EnumType: Using NAMED-based conversion for Enum com.sf.back.entities.Kind
2020-11-25 20:53:41,769 DEBUG  [main] EnumType: Using NAMED-based conversion for Enum com.sf.back.entities.Kind
2020-11-25 20:53:41,769 DEBUG  [main] EnumType: Using NAMED-based conversion for Enum com.sf.back.entities.Kind
2020-11-25 20:53:41,800 DEBUG  [main] EnumType: Using NAMED-based conversion for Enum com.sf.back.entities.Kind
2020-11-25 20:53:41,800 DEBUG  [main] EnumType: Using NAMED-based conversion for Enum com.sf.back.entities.Kind
2020-11-25 20:53:41,812 DEBUG  [main] EnumType: Using NAMED-based conversion for Enum com.sf.back.entities.Kind
2020-11-25 20:53:41,821 TRACE  [main] TypeConfiguration$Scope: Handling #sessionFactoryCreated from [org.hibernate.internal.SessionFactoryImpl@47690183] for TypeConfiguration
2020-11-25 20:53:41,978 WARN   [main] JpaBaseConfiguration$JpaWebConfiguration: spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2020-11-25 20:53:42,131 WARN   [main] GenericWebApplicationContext: Exception encountered during context initialization - cancelling refresh attempt: org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'groovyMarkupConfigurer' defined in class path resource [org/springframework/boot/autoconfigure/groovy/template/GroovyTemplateAutoConfiguration$GroovyMarkupConfiguration.class]: Invocation of init method failed; nested exception is java.lang.reflect.InaccessibleObjectException: Unable to make jdk.internal.loader.ClassLoaders$AppClassLoader(jdk.internal.loader.ClassLoaders$PlatformClassLoader,jdk.internal.loader.URLClassPath) accessible: module java.base does not "opens jdk.internal.loader" to unnamed module @60fa3495
2020-11-25 20:53:42,141 TRACE  [main] TypeConfiguration$Scope: Handling #sessionFactoryClosed from [org.hibernate.internal.SessionFactoryImpl@47690183] for TypeConfiguration
2020-11-25 20:53:42,141 DEBUG  [main] TypeConfiguration$Scope: Un-scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration$Scope@38e10ff0] from SessionFactory [org.hibernate.internal.SessionFactoryImpl@47690183]
2020-11-25 20:53:42,210 ERROR  [main] SpringApplication: Application run failed
org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'groovyMarkupConfigurer' defined in class path resource [org/springframework/boot/autoconfigure/groovy/template/GroovyTemplateAutoConfiguration$GroovyMarkupConfiguration.class]: Invocation of init method failed; nested exception is java.lang.reflect.InaccessibleObjectException: Unable to make jdk.internal.loader.ClassLoaders$AppClassLoader(jdk.internal.loader.ClassLoaders$PlatformClassLoader,jdk.internal.loader.URLClassPath) accessible: module java.base does not "opens jdk.internal.loader" to unnamed module @60fa3495
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1803)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:595)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:517)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:323)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:222)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:321)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:202)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(DefaultListableBeanFactory.java:879)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:878)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:550)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:747)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:397)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:315)
	at org.springframework.boot.test.context.SpringBootContextLoader.loadContext(SpringBootContextLoader.java:125)
	at org.springframework.test.context.cache.DefaultCacheAwareContextLoaderDelegate.loadContextInternal(DefaultCacheAwareContextLoaderDelegate.java:99)
	at org.springframework.test.context.cache.DefaultCacheAwareContextLoaderDelegate.loadContext(DefaultCacheAwareContextLoaderDelegate.java:124)
	at org.springframework.test.context.support.DefaultTestContext.getApplicationContext(DefaultTestContext.java:123)
	at org.springframework.test.context.web.ServletTestExecutionListener.setUpRequestContextIfNecessary(ServletTestExecutionListener.java:190)
	at org.springframework.test.context.web.ServletTestExecutionListener.prepareTestInstance(ServletTestExecutionListener.java:132)
	at org.springframework.test.context.TestContextManager.prepareTestInstance(TestContextManager.java:244)
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner.createTest(SpringJUnit4ClassRunner.java:227)
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner$1.runReflectiveCall(SpringJUnit4ClassRunner.java:289)
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner.methodBlock(SpringJUnit4ClassRunner.java:291)
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner.runChild(SpringJUnit4ClassRunner.java:246)
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner.runChild(SpringJUnit4ClassRunner.java:97)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:290)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:71)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:58)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268)
	at org.junit.internal.runners.statements.RunBefores.evaluate(RunBefores.java:26)
	at org.springframework.test.context.junit4.statements.RunBeforeTestClassCallbacks.evaluate(RunBeforeTestClassCallbacks.java:61)
	at org.junit.internal.runners.statements.RunAfters.evaluate(RunAfters.java:27)
	at org.springframework.test.context.junit4.statements.RunAfterTestClassCallbacks.evaluate(RunAfterTestClassCallbacks.java:70)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:363)
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner.run(SpringJUnit4ClassRunner.java:190)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:137)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:115)
	at org.junit.vintage.engine.execution.RunnerExecutor.execute(RunnerExecutor.java:40)
	at java.base/java.util.stream.ForEachOps$ForEachOp$OfRef.accept(ForEachOps.java:183)
	at java.base/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:195)
	at java.base/java.util.Iterator.forEachRemaining(Iterator.java:133)
	at java.base/java.util.Spliterators$IteratorSpliterator.forEachRemaining(Spliterators.java:1801)
	at java.base/java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:484)
	at java.base/java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:474)
	at java.base/java.util.stream.ForEachOps$ForEachOp.evaluateSequential(ForEachOps.java:150)
	at java.base/java.util.stream.ForEachOps$ForEachOp$OfRef.evaluateSequential(ForEachOps.java:173)
	at java.base/java.util.stream.AbstractPipeline.evaluate(AbstractPipeline.java:234)
	at java.base/java.util.stream.ReferencePipeline.forEach(ReferencePipeline.java:497)
	at org.junit.vintage.engine.VintageTestEngine.executeAllChildren(VintageTestEngine.java:80)
	at org.junit.vintage.engine.VintageTestEngine.execute(VintageTestEngine.java:71)
	at org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:220)
	at org.junit.platform.launcher.core.DefaultLauncher.lambda$execute$6(DefaultLauncher.java:188)
	at org.junit.platform.launcher.core.DefaultLauncher.withInterceptedStreams(DefaultLauncher.java:202)
	at org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:181)
	at org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:128)
	at org.apache.maven.surefire.junitplatform.JUnitPlatformProvider.invokeAllTests(JUnitPlatformProvider.java:150)
	at org.apache.maven.surefire.junitplatform.JUnitPlatformProvider.invoke(JUnitPlatformProvider.java:124)
	at org.apache.maven.surefire.booter.ForkedBooter.invokeProviderInSameClassLoader(ForkedBooter.java:384)
	at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:345)
	at org.apache.maven.surefire.booter.ForkedBooter.execute(ForkedBooter.java:126)
	at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:418)
Caused by: java.lang.reflect.InaccessibleObjectException: Unable to make jdk.internal.loader.ClassLoaders$AppClassLoader(jdk.internal.loader.ClassLoaders$PlatformClassLoader,jdk.internal.loader.URLClassPath) accessible: module java.base does not "opens jdk.internal.loader" to unnamed module @60fa3495
	at java.base/java.lang.reflect.AccessibleObject.checkCanSetAccessible(AccessibleObject.java:344)
	at java.base/java.lang.reflect.AccessibleObject.checkCanSetAccessible(AccessibleObject.java:284)
	at java.base/java.lang.reflect.Constructor.checkCanSetAccessible(Constructor.java:189)
	at java.base/java.lang.reflect.Constructor.setAccessible(Constructor.java:182)
	at org.codehaus.groovy.reflection.CachedConstructor$1.run(CachedConstructor.java:44)
	at java.base/java.security.AccessController.doPrivileged(AccessController.java:312)
	at org.codehaus.groovy.reflection.CachedConstructor.<init>(CachedConstructor.java:42)
	at org.codehaus.groovy.reflection.CachedClass$2.initValue(CachedClass.java:79)
	at org.codehaus.groovy.reflection.CachedClass$2.initValue(CachedClass.java:69)
	at org.codehaus.groovy.util.LazyReference.getLocked(LazyReference.java:49)
	at org.codehaus.groovy.util.LazyReference.get(LazyReference.java:36)
	at org.codehaus.groovy.reflection.CachedClass.getConstructors(CachedClass.java:268)
	at groovy.lang.MetaClassImpl.<init>(MetaClassImpl.java:218)
	at groovy.lang.MetaClassImpl.<init>(MetaClassImpl.java:228)
	at groovy.lang.MetaClassRegistry$MetaClassCreationHandle.createNormalMetaClass(MetaClassRegistry.java:171)
	at groovy.lang.MetaClassRegistry$MetaClassCreationHandle.createWithCustomLookup(MetaClassRegistry.java:161)
	at groovy.lang.MetaClassRegistry$MetaClassCreationHandle.create(MetaClassRegistry.java:144)
	at org.codehaus.groovy.reflection.ClassInfo.getMetaClassUnderLock(ClassInfo.java:253)
	at org.codehaus.groovy.reflection.ClassInfo.getMetaClass(ClassInfo.java:285)
	at org.codehaus.groovy.reflection.ClassInfo.getMetaClass(ClassInfo.java:295)
	at org.codehaus.groovy.runtime.metaclass.MetaClassRegistryImpl.getMetaClass(MetaClassRegistryImpl.java:261)
	at org.codehaus.groovy.runtime.InvokerHelper.getMetaClass(InvokerHelper.java:873)
	at org.codehaus.groovy.runtime.InvokerHelper.invokePojoMethod(InvokerHelper.java:906)
	at org.codehaus.groovy.runtime.InvokerHelper.invokeMethod(InvokerHelper.java:898)
	at org.codehaus.groovy.runtime.typehandling.DefaultTypeTransformation.castToBoolean(DefaultTypeTransformation.java:185)
	at org.codehaus.groovy.runtime.typehandling.DefaultTypeTransformation.booleanUnbox(DefaultTypeTransformation.java:74)
	at org.codehaus.groovy.control.customizers.ASTTransformationCustomizer.findASTTranformationClass(ASTTransformationCustomizer.groovy:209)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:567)
	at org.codehaus.groovy.reflection.CachedMethod.invoke(CachedMethod.java:93)
	at org.codehaus.groovy.runtime.callsite.StaticMetaMethodSite$StaticMetaMethodSiteNoUnwrapNoCoerce.invoke(StaticMetaMethodSite.java:151)
	at org.codehaus.groovy.runtime.callsite.StaticMetaMethodSite.callStatic(StaticMetaMethodSite.java:102)
	at org.codehaus.groovy.runtime.callsite.AbstractCallSite.callStatic(AbstractCallSite.java:214)
	at org.codehaus.groovy.control.customizers.ASTTransformationCustomizer.findPhase(ASTTransformationCustomizer.groovy:226)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:567)
	at org.codehaus.groovy.reflection.CachedMethod.invoke(CachedMethod.java:93)
	at org.codehaus.groovy.runtime.callsite.StaticMetaMethodSite$StaticMetaMethodSiteNoUnwrapNoCoerce.invoke(StaticMetaMethodSite.java:151)
	at org.codehaus.groovy.runtime.callsite.StaticMetaMethodSite.callStatic(StaticMetaMethodSite.java:102)
	at org.codehaus.groovy.runtime.callsite.AbstractCallSite.callStatic(AbstractCallSite.java:214)
	at org.codehaus.groovy.control.customizers.ASTTransformationCustomizer.<init>(ASTTransformationCustomizer.groovy:180)
	at org.codehaus.groovy.control.customizers.ASTTransformationCustomizer.<init>(ASTTransformationCustomizer.groovy:188)
	at groovy.text.markup.MarkupTemplateEngine.<init>(MarkupTemplateEngine.java:94)
	at org.springframework.web.servlet.view.groovy.GroovyMarkupConfigurer.createTemplateEngine(GroovyMarkupConfigurer.java:160)
	at org.springframework.web.servlet.view.groovy.GroovyMarkupConfigurer.afterPropertiesSet(GroovyMarkupConfigurer.java:153)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1862)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1799)
	... 62 common frames omitted
2020-11-25 20:53:42,217 ERROR  [main] TestContextManager: Caught exception while allowing TestExecutionListener [org.springframework.test.context.web.ServletTestExecutionListener@170b27a7] to prepare test instance [com.sf.math.algebra.solvers.PolynomialSolverIntervalTest@58d8059b]
java.lang.IllegalStateException: Failed to load ApplicationContext
	at org.springframework.test.context.cache.DefaultCacheAwareContextLoaderDelegate.loadContext(DefaultCacheAwareContextLoaderDelegate.java:132)
	at org.springframework.test.context.support.DefaultTestContext.getApplicationContext(DefaultTestContext.java:123)
	at org.springframework.test.context.web.ServletTestExecutionListener.setUpRequestContextIfNecessary(ServletTestExecutionListener.java:190)
	at org.springframework.test.context.web.ServletTestExecutionListener.prepareTestInstance(ServletTestExecutionListener.java:132)
	at org.springframework.test.context.TestContextManager.prepareTestInstance(TestContextManager.java:244)
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner.createTest(SpringJUnit4ClassRunner.java:227)
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner$1.runReflectiveCall(SpringJUnit4ClassRunner.java:289)
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner.methodBlock(SpringJUnit4ClassRunner.java:291)
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner.runChild(SpringJUnit4ClassRunner.java:246)
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner.runChild(SpringJUnit4ClassRunner.java:97)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:290)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:71)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:58)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268)
	at org.junit.internal.runners.statements.RunBefores.evaluate(RunBefores.java:26)
	at org.springframework.test.context.junit4.statements.RunBeforeTestClassCallbacks.evaluate(RunBeforeTestClassCallbacks.java:61)
	at org.junit.internal.runners.statements.RunAfters.evaluate(RunAfters.java:27)
	at org.springframework.test.context.junit4.statements.RunAfterTestClassCallbacks.evaluate(RunAfterTestClassCallbacks.java:70)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:363)
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner.run(SpringJUnit4ClassRunner.java:190)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:137)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:115)
	at org.junit.vintage.engine.execution.RunnerExecutor.execute(RunnerExecutor.java:40)
	at java.base/java.util.stream.ForEachOps$ForEachOp$OfRef.accept(ForEachOps.java:183)
	at java.base/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:195)
	at java.base/java.util.Iterator.forEachRemaining(Iterator.java:133)
	at java.base/java.util.Spliterators$IteratorSpliterator.forEachRemaining(Spliterators.java:1801)
	at java.base/java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:484)
	at java.base/java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:474)
	at java.base/java.util.stream.ForEachOps$ForEachOp.evaluateSequential(ForEachOps.java:150)
	at java.base/java.util.stream.ForEachOps$ForEachOp$OfRef.evaluateSequential(ForEachOps.java:173)
	at java.base/java.util.stream.AbstractPipeline.evaluate(AbstractPipeline.java:234)
	at java.base/java.util.stream.ReferencePipeline.forEach(ReferencePipeline.java:497)
	at org.junit.vintage.engine.VintageTestEngine.executeAllChildren(VintageTestEngine.java:80)
	at org.junit.vintage.engine.VintageTestEngine.execute(VintageTestEngine.java:71)
	at org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:220)
	at org.junit.platform.launcher.core.DefaultLauncher.lambda$execute$6(DefaultLauncher.java:188)
	at org.junit.platform.launcher.core.DefaultLauncher.withInterceptedStreams(DefaultLauncher.java:202)
	at org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:181)
	at org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:128)
	at org.apache.maven.surefire.junitplatform.JUnitPlatformProvider.invokeAllTests(JUnitPlatformProvider.java:150)
	at org.apache.maven.surefire.junitplatform.JUnitPlatformProvider.invoke(JUnitPlatformProvider.java:124)
	at org.apache.maven.surefire.booter.ForkedBooter.invokeProviderInSameClassLoader(ForkedBooter.java:384)
	at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:345)
	at org.apache.maven.surefire.booter.ForkedBooter.execute(ForkedBooter.java:126)
	at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:418)
Caused by: org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'groovyMarkupConfigurer' defined in class path resource [org/springframework/boot/autoconfigure/groovy/template/GroovyTemplateAutoConfiguration$GroovyMarkupConfiguration.class]: Invocation of init method failed; nested exception is java.lang.reflect.InaccessibleObjectException: Unable to make jdk.internal.loader.ClassLoaders$AppClassLoader(jdk.internal.loader.ClassLoaders$PlatformClassLoader,jdk.internal.loader.URLClassPath) accessible: module java.base does not "opens jdk.internal.loader" to unnamed module @60fa3495
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1803)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:595)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:517)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:323)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:222)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:321)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:202)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(DefaultListableBeanFactory.java:879)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:878)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:550)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:747)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:397)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:315)
	at org.springframework.boot.test.context.SpringBootContextLoader.loadContext(SpringBootContextLoader.java:125)
	at org.springframework.test.context.cache.DefaultCacheAwareContextLoaderDelegate.loadContextInternal(DefaultCacheAwareContextLoaderDelegate.java:99)
	at org.springframework.test.context.cache.DefaultCacheAwareContextLoaderDelegate.loadContext(DefaultCacheAwareContextLoaderDelegate.java:124)
	... 47 common frames omitted
Caused by: java.lang.reflect.InaccessibleObjectException: Unable to make jdk.internal.loader.ClassLoaders$AppClassLoader(jdk.internal.loader.ClassLoaders$PlatformClassLoader,jdk.internal.loader.URLClassPath) accessible: module java.base does not "opens jdk.internal.loader" to unnamed module @60fa3495
	at java.base/java.lang.reflect.AccessibleObject.checkCanSetAccessible(AccessibleObject.java:344)
	at java.base/java.lang.reflect.AccessibleObject.checkCanSetAccessible(AccessibleObject.java:284)
	at java.base/java.lang.reflect.Constructor.checkCanSetAccessible(Constructor.java:189)
	at java.base/java.lang.reflect.Constructor.setAccessible(Constructor.java:182)
	at org.codehaus.groovy.reflection.CachedConstructor$1.run(CachedConstructor.java:44)
	at java.base/java.security.AccessController.doPrivileged(AccessController.java:312)
	at org.codehaus.groovy.reflection.CachedConstructor.<init>(CachedConstructor.java:42)
	at org.codehaus.groovy.reflection.CachedClass$2.initValue(CachedClass.java:79)
	at org.codehaus.groovy.reflection.CachedClass$2.initValue(CachedClass.java:69)
	at org.codehaus.groovy.util.LazyReference.getLocked(LazyReference.java:49)
	at org.codehaus.groovy.util.LazyReference.get(LazyReference.java:36)
	at org.codehaus.groovy.reflection.CachedClass.getConstructors(CachedClass.java:268)
	at groovy.lang.MetaClassImpl.<init>(MetaClassImpl.java:218)
	at groovy.lang.MetaClassImpl.<init>(MetaClassImpl.java:228)
	at groovy.lang.MetaClassRegistry$MetaClassCreationHandle.createNormalMetaClass(MetaClassRegistry.java:171)
	at groovy.lang.MetaClassRegistry$MetaClassCreationHandle.createWithCustomLookup(MetaClassRegistry.java:161)
	at groovy.lang.MetaClassRegistry$MetaClassCreationHandle.create(MetaClassRegistry.java:144)
	at org.codehaus.groovy.reflection.ClassInfo.getMetaClassUnderLock(ClassInfo.java:253)
	at org.codehaus.groovy.reflection.ClassInfo.getMetaClass(ClassInfo.java:285)
	at org.codehaus.groovy.reflection.ClassInfo.getMetaClass(ClassInfo.java:295)
	at org.codehaus.groovy.runtime.metaclass.MetaClassRegistryImpl.getMetaClass(MetaClassRegistryImpl.java:261)
	at org.codehaus.groovy.runtime.InvokerHelper.getMetaClass(InvokerHelper.java:873)
	at org.codehaus.groovy.runtime.InvokerHelper.invokePojoMethod(InvokerHelper.java:906)
	at org.codehaus.groovy.runtime.InvokerHelper.invokeMethod(InvokerHelper.java:898)
	at org.codehaus.groovy.runtime.typehandling.DefaultTypeTransformation.castToBoolean(DefaultTypeTransformation.java:185)
	at org.codehaus.groovy.runtime.typehandling.DefaultTypeTransformation.booleanUnbox(DefaultTypeTransformation.java:74)
	at org.codehaus.groovy.control.customizers.ASTTransformationCustomizer.findASTTranformationClass(ASTTransformationCustomizer.groovy:209)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:567)
	at org.codehaus.groovy.reflection.CachedMethod.invoke(CachedMethod.java:93)
	at org.codehaus.groovy.runtime.callsite.StaticMetaMethodSite$StaticMetaMethodSiteNoUnwrapNoCoerce.invoke(StaticMetaMethodSite.java:151)
	at org.codehaus.groovy.runtime.callsite.StaticMetaMethodSite.callStatic(StaticMetaMethodSite.java:102)
	at org.codehaus.groovy.runtime.callsite.AbstractCallSite.callStatic(AbstractCallSite.java:214)
	at org.codehaus.groovy.control.customizers.ASTTransformationCustomizer.findPhase(ASTTransformationCustomizer.groovy:226)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:567)
	at org.codehaus.groovy.reflection.CachedMethod.invoke(CachedMethod.java:93)
	at org.codehaus.groovy.runtime.callsite.StaticMetaMethodSite$StaticMetaMethodSiteNoUnwrapNoCoerce.invoke(StaticMetaMethodSite.java:151)
	at org.codehaus.groovy.runtime.callsite.StaticMetaMethodSite.callStatic(StaticMetaMethodSite.java:102)
	at org.codehaus.groovy.runtime.callsite.AbstractCallSite.callStatic(AbstractCallSite.java:214)
	at org.codehaus.groovy.control.customizers.ASTTransformationCustomizer.<init>(ASTTransformationCustomizer.groovy:180)
	at org.codehaus.groovy.control.customizers.ASTTransformationCustomizer.<init>(ASTTransformationCustomizer.groovy:188)
	at groovy.text.markup.MarkupTemplateEngine.<init>(MarkupTemplateEngine.java:94)
	at org.springframework.web.servlet.view.groovy.GroovyMarkupConfigurer.createTemplateEngine(GroovyMarkupConfigurer.java:160)
	at org.springframework.web.servlet.view.groovy.GroovyMarkupConfigurer.afterPropertiesSet(GroovyMarkupConfigurer.java:153)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1862)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1799)
	... 62 common frames omitted
2020-11-25 20:53:43,055 DEBUG  [main] BasicTypeRegistry: Adding type registration boolean -> org.hibernate.type.BooleanType@ff2266c
2020-11-25 20:53:43,065 DEBUG  [main] BasicTypeRegistry: Adding type registration boolean -> org.hibernate.type.BooleanType@ff2266c
2020-11-25 20:53:43,066 DEBUG  [main] BasicTypeRegistry: Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@ff2266c
2020-11-25 20:53:43,066 DEBUG  [main] BasicTypeRegistry: Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@1d585fb
2020-11-25 20:53:43,066 DEBUG  [main] BasicTypeRegistry: Adding type registration true_false -> org.hibernate.type.TrueFalseType@7c8f047a
2020-11-25 20:53:43,066 DEBUG  [main] BasicTypeRegistry: Adding type registration yes_no -> org.hibernate.type.YesNoType@d949bc4
2020-11-25 20:53:43,066 DEBUG  [main] BasicTypeRegistry: Adding type registration byte -> org.hibernate.type.ByteType@29c25bbc
2020-11-25 20:53:43,067 DEBUG  [main] BasicTypeRegistry: Adding type registration byte -> org.hibernate.type.ByteType@29c25bbc
2020-11-25 20:53:43,067 DEBUG  [main] BasicTypeRegistry: Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@29c25bbc
2020-11-25 20:53:43,067 DEBUG  [main] BasicTypeRegistry: Adding type registration character -> org.hibernate.type.CharacterType@403f7aa2
2020-11-25 20:53:43,067 DEBUG  [main] BasicTypeRegistry: Adding type registration char -> org.hibernate.type.CharacterType@403f7aa2
2020-11-25 20:53:43,067 DEBUG  [main] BasicTypeRegistry: Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@403f7aa2
2020-11-25 20:53:43,067 DEBUG  [main] BasicTypeRegistry: Adding type registration short -> org.hibernate.type.ShortType@38cb1606
2020-11-25 20:53:43,067 DEBUG  [main] BasicTypeRegistry: Adding type registration short -> org.hibernate.type.ShortType@38cb1606
2020-11-25 20:53:43,067 DEBUG  [main] BasicTypeRegistry: Adding type registration java.lang.Short -> org.hibernate.type.ShortType@38cb1606
2020-11-25 20:53:43,068 DEBUG  [main] BasicTypeRegistry: Adding type registration integer -> org.hibernate.type.IntegerType@5d3b6585
2020-11-25 20:53:43,068 DEBUG  [main] BasicTypeRegistry: Adding type registration int -> org.hibernate.type.IntegerType@5d3b6585
2020-11-25 20:53:43,068 DEBUG  [main] BasicTypeRegistry: Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@5d3b6585
2020-11-25 20:53:43,068 DEBUG  [main] BasicTypeRegistry: Adding type registration long -> org.hibernate.type.LongType@4fea5ee0
2020-11-25 20:53:43,068 DEBUG  [main] BasicTypeRegistry: Adding type registration long -> org.hibernate.type.LongType@4fea5ee0
2020-11-25 20:53:43,068 DEBUG  [main] BasicTypeRegistry: Adding type registration java.lang.Long -> org.hibernate.type.LongType@4fea5ee0
2020-11-25 20:53:43,068 DEBUG  [main] BasicTypeRegistry: Adding type registration float -> org.hibernate.type.FloatType@7b3085a3
2020-11-25 20:53:43,069 DEBUG  [main] BasicTypeRegistry: Adding type registration float -> org.hibernate.type.FloatType@7b3085a3
2020-11-25 20:53:43,069 DEBUG  [main] BasicTypeRegistry: Adding type registration java.lang.Float -> org.hibernate.type.FloatType@7b3085a3
2020-11-25 20:53:43,069 DEBUG  [main] BasicTypeRegistry: Adding type registration double -> org.hibernate.type.DoubleType@5a7a6d34
2020-11-25 20:53:43,069 DEBUG  [main] BasicTypeRegistry: Adding type registration double -> org.hibernate.type.DoubleType@5a7a6d34
2020-11-25 20:53:43,069 DEBUG  [main] BasicTypeRegistry: Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@5a7a6d34
2020-11-25 20:53:43,069 DEBUG  [main] BasicTypeRegistry: Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@5ae66c98
2020-11-25 20:53:43,069 DEBUG  [main] BasicTypeRegistry: Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@5ae66c98
2020-11-25 20:53:43,070 DEBUG  [main] BasicTypeRegistry: Adding type registration big_integer -> org.hibernate.type.BigIntegerType@223cbf0d
2020-11-25 20:53:43,070 DEBUG  [main] BasicTypeRegistry: Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@223cbf0d
2020-11-25 20:53:43,070 DEBUG  [main] BasicTypeRegistry: Adding type registration string -> org.hibernate.type.StringType@4f581211
2020-11-25 20:53:43,071 DEBUG  [main] BasicTypeRegistry: Adding type registration java.lang.String -> org.hibernate.type.StringType@4f581211
2020-11-25 20:53:43,071 DEBUG  [main] BasicTypeRegistry: Adding type registration nstring -> org.hibernate.type.StringNVarcharType@6697f3d
2020-11-25 20:53:43,071 DEBUG  [main] BasicTypeRegistry: Adding type registration ncharacter -> org.hibernate.type.CharacterNCharType@f1d1463
2020-11-25 20:53:43,071 DEBUG  [main] BasicTypeRegistry: Adding type registration url -> org.hibernate.type.UrlType@44ddb518
2020-11-25 20:53:43,072 DEBUG  [main] BasicTypeRegistry: Adding type registration java.net.URL -> org.hibernate.type.UrlType@44ddb518
2020-11-25 20:53:43,074 DEBUG  [main] BasicTypeRegistry: Adding type registration Duration -> org.hibernate.type.DurationType@49e0b123
2020-11-25 20:53:43,074 DEBUG  [main] BasicTypeRegistry: Adding type registration java.time.Duration -> org.hibernate.type.DurationType@49e0b123
2020-11-25 20:53:43,074 DEBUG  [main] BasicTypeRegistry: Adding type registration Instant -> org.hibernate.type.InstantType@40a28bda
2020-11-25 20:53:43,075 DEBUG  [main] BasicTypeRegistry: Adding type registration java.time.Instant -> org.hibernate.type.InstantType@40a28bda
2020-11-25 20:53:43,075 DEBUG  [main] BasicTypeRegistry: Adding type registration LocalDateTime -> org.hibernate.type.LocalDateTimeType@33430fc
2020-11-25 20:53:43,075 DEBUG  [main] BasicTypeRegistry: Adding type registration java.time.LocalDateTime -> org.hibernate.type.LocalDateTimeType@33430fc
2020-11-25 20:53:43,075 DEBUG  [main] BasicTypeRegistry: Adding type registration LocalDate -> org.hibernate.type.LocalDateType@d7055be
2020-11-25 20:53:43,075 DEBUG  [main] BasicTypeRegistry: Adding type registration java.time.LocalDate -> org.hibernate.type.LocalDateType@d7055be
2020-11-25 20:53:43,075 DEBUG  [main] BasicTypeRegistry: Adding type registration LocalTime -> org.hibernate.type.LocalTimeType@3c7d8a4
2020-11-25 20:53:43,075 DEBUG  [main] BasicTypeRegistry: Adding type registration java.time.LocalTime -> org.hibernate.type.LocalTimeType@3c7d8a4
2020-11-25 20:53:43,075 DEBUG  [main] BasicTypeRegistry: Adding type registration OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@7a117dc2
2020-11-25 20:53:43,076 DEBUG  [main] BasicTypeRegistry: Adding type registration java.time.OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@7a117dc2
2020-11-25 20:53:43,076 DEBUG  [main] BasicTypeRegistry: Adding type registration OffsetTime -> org.hibernate.type.OffsetTimeType@3c64339f
2020-11-25 20:53:43,076 DEBUG  [main] BasicTypeRegistry: Adding type registration java.time.OffsetTime -> org.hibernate.type.OffsetTimeType@3c64339f
2020-11-25 20:53:43,076 DEBUG  [main] BasicTypeRegistry: Adding type registration ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@30c8c6ab
2020-11-25 20:53:43,076 DEBUG  [main] BasicTypeRegistry: Adding type registration java.time.ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@30c8c6ab
2020-11-25 20:53:43,076 DEBUG  [main] BasicTypeRegistry: Adding type registration date -> org.hibernate.type.DateType@61c5fd78
2020-11-25 20:53:43,076 DEBUG  [main] BasicTypeRegistry: Adding type registration java.sql.Date -> org.hibernate.type.DateType@61c5fd78
2020-11-25 20:53:43,077 DEBUG  [main] BasicTypeRegistry: Adding type registration time -> org.hibernate.type.TimeType@77856cc5
2020-11-25 20:53:43,077 DEBUG  [main] BasicTypeRegistry: Adding type registration java.sql.Time -> org.hibernate.type.TimeType@77856cc5
2020-11-25 20:53:43,077 DEBUG  [main] BasicTypeRegistry: Adding type registration timestamp -> org.hibernate.type.TimestampType@12166229
2020-11-25 20:53:43,077 DEBUG  [main] BasicTypeRegistry: Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@12166229
2020-11-25 20:53:43,078 DEBUG  [main] BasicTypeRegistry: Adding type registration java.util.Date -> org.hibernate.type.TimestampType@12166229
2020-11-25 20:53:43,078 DEBUG  [main] BasicTypeRegistry: Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@2b4829aa
2020-11-25 20:53:43,078 DEBUG  [main] BasicTypeRegistry: Adding type registration calendar -> org.hibernate.type.CalendarType@3ec082a1
2020-11-25 20:53:43,078 DEBUG  [main] BasicTypeRegistry: Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@3ec082a1
2020-11-25 20:53:43,078 DEBUG  [main] BasicTypeRegistry: Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@3ec082a1
2020-11-25 20:53:43,078 DEBUG  [main] BasicTypeRegistry: Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@429f0ca8
2020-11-25 20:53:43,078 DEBUG  [main] BasicTypeRegistry: Adding type registration locale -> org.hibernate.type.LocaleType@11c3ce6a
2020-11-25 20:53:43,079 DEBUG  [main] BasicTypeRegistry: Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@11c3ce6a
2020-11-25 20:53:43,079 DEBUG  [main] BasicTypeRegistry: Adding type registration currency -> org.hibernate.type.CurrencyType@28519bfb
2020-11-25 20:53:43,079 DEBUG  [main] BasicTypeRegistry: Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@28519bfb
2020-11-25 20:53:43,079 DEBUG  [main] BasicTypeRegistry: Adding type registration timezone -> org.hibernate.type.TimeZoneType@7aa15a80
2020-11-25 20:53:43,079 DEBUG  [main] BasicTypeRegistry: Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@7aa15a80
2020-11-25 20:53:43,079 DEBUG  [main] BasicTypeRegistry: Adding type registration class -> org.hibernate.type.ClassType@48d5ca17
2020-11-25 20:53:43,079 DEBUG  [main] BasicTypeRegistry: Adding type registration java.lang.Class -> org.hibernate.type.ClassType@48d5ca17
2020-11-25 20:53:43,080 DEBUG  [main] BasicTypeRegistry: Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@79b8ecb
2020-11-25 20:53:43,080 DEBUG  [main] BasicTypeRegistry: Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@79b8ecb
2020-11-25 20:53:43,080 DEBUG  [main] BasicTypeRegistry: Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@c0013b8
2020-11-25 20:53:43,081 DEBUG  [main] BasicTypeRegistry: Adding type registration binary -> org.hibernate.type.BinaryType@2a42019a
2020-11-25 20:53:43,081 DEBUG  [main] BasicTypeRegistry: Adding type registration byte[] -> org.hibernate.type.BinaryType@2a42019a
2020-11-25 20:53:43,081 DEBUG  [main] BasicTypeRegistry: Adding type registration [B -> org.hibernate.type.BinaryType@2a42019a
2020-11-25 20:53:43,081 DEBUG  [main] BasicTypeRegistry: Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@495da9a7
2020-11-25 20:53:43,082 DEBUG  [main] BasicTypeRegistry: Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@495da9a7
2020-11-25 20:53:43,082 DEBUG  [main] BasicTypeRegistry: Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@495da9a7
2020-11-25 20:53:43,082 DEBUG  [main] BasicTypeRegistry: Adding type registration row_version -> org.hibernate.type.RowVersionType@35becbd4
2020-11-25 20:53:43,082 DEBUG  [main] BasicTypeRegistry: Adding type registration image -> org.hibernate.type.ImageType@30fa8a6b
2020-11-25 20:53:43,083 DEBUG  [main] BasicTypeRegistry: Adding type registration characters -> org.hibernate.type.CharArrayType@4c8d45cf
2020-11-25 20:53:43,083 DEBUG  [main] BasicTypeRegistry: Adding type registration char[] -> org.hibernate.type.CharArrayType@4c8d45cf
2020-11-25 20:53:43,083 DEBUG  [main] BasicTypeRegistry: Adding type registration [C -> org.hibernate.type.CharArrayType@4c8d45cf
2020-11-25 20:53:43,084 DEBUG  [main] BasicTypeRegistry: Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@5b490d5e
2020-11-25 20:53:43,084 DEBUG  [main] BasicTypeRegistry: Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@5b490d5e
2020-11-25 20:53:43,084 DEBUG  [main] BasicTypeRegistry: Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@5b490d5e
2020-11-25 20:53:43,084 DEBUG  [main] BasicTypeRegistry: Adding type registration text -> org.hibernate.type.TextType@18b04526
2020-11-25 20:53:43,084 DEBUG  [main] BasicTypeRegistry: Adding type registration ntext -> org.hibernate.type.NTextType@246df37b
2020-11-25 20:53:43,084 DEBUG  [main] BasicTypeRegistry: Adding type registration blob -> org.hibernate.type.BlobType@56881196
2020-11-25 20:53:43,084 DEBUG  [main] BasicTypeRegistry: Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@56881196
2020-11-25 20:53:43,084 DEBUG  [main] BasicTypeRegistry: Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@131c0b6f
2020-11-25 20:53:43,084 DEBUG  [main] BasicTypeRegistry: Adding type registration clob -> org.hibernate.type.ClobType@7fc1fd31
2020-11-25 20:53:43,084 DEBUG  [main] BasicTypeRegistry: Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@7fc1fd31
2020-11-25 20:53:43,085 DEBUG  [main] BasicTypeRegistry: Adding type registration nclob -> org.hibernate.type.NClobType@70777a65
2020-11-25 20:53:43,085 DEBUG  [main] BasicTypeRegistry: Adding type registration java.sql.NClob -> org.hibernate.type.NClobType@70777a65
2020-11-25 20:53:43,085 DEBUG  [main] BasicTypeRegistry: Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@2f6f4ac4
2020-11-25 20:53:43,085 DEBUG  [main] BasicTypeRegistry: Adding type registration materialized_nclob -> org.hibernate.type.MaterializedNClobType@7d685f4e
2020-11-25 20:53:43,085 DEBUG  [main] BasicTypeRegistry: Adding type registration serializable -> org.hibernate.type.SerializableType@319aa9ee
2020-11-25 20:53:43,085 DEBUG  [main] BasicTypeRegistry: Adding type registration object -> org.hibernate.type.ObjectType@54234569
2020-11-25 20:53:43,085 DEBUG  [main] BasicTypeRegistry: Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@54234569
2020-11-25 20:53:43,085 DEBUG  [main] BasicTypeRegistry: Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@45e65f8
2020-11-25 20:53:43,085 DEBUG  [main] BasicTypeRegistry: Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@7538033f
2020-11-25 20:53:43,085 DEBUG  [main] BasicTypeRegistry: Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@25a65e20
2020-11-25 20:53:43,086 DEBUG  [main] BasicTypeRegistry: Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@c5a82d6
2020-11-25 20:53:43,086 DEBUG  [main] BasicTypeRegistry: Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@7bdc5700
2020-11-25 20:53:43,086 DEBUG  [main] BasicTypeRegistry: Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@4e4892bf
2020-11-25 20:53:43,086 DEBUG  [main] BasicTypeRegistry: Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@59889208
2020-11-25 20:53:43,086 DEBUG  [main] BasicTypeRegistry: Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@11cf7dd
2020-11-25 20:53:43,122 DEBUG  [main] TypeConfiguration$Scope: Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@1c1ab84e] to MetadataBuildingContext [org.hibernate.boot.internal.MetadataBuildingContextRootImpl@1b00f65a]
2020-11-25 20:53:43,132 DEBUG  [main] EnumType: Using NAMED-based conversion for Enum com.sf.back.entities.Kind
2020-11-25 20:53:43,134 DEBUG  [main] EnumType: Using NAMED-based conversion for Enum com.sf.back.entities.Kind
2020-11-25 20:53:43,149 DEBUG  [main] TypeConfiguration$Scope: Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@1c1ab84e] to SessionFactoryImpl [org.hibernate.internal.SessionFactoryImpl@39783d83]
2020-11-25 20:53:43,150 DEBUG  [main] EnumType: Using NAMED-based conversion for Enum com.sf.back.entities.Kind
2020-11-25 20:53:43,150 DEBUG  [main] EnumType: Using NAMED-based conversion for Enum com.sf.back.entities.Kind
2020-11-25 20:53:43,171 DEBUG  [main] EnumType: Using NAMED-based conversion for Enum com.sf.back.entities.Kind
2020-11-25 20:53:43,172 DEBUG  [main] EnumType: Using NAMED-based conversion for Enum com.sf.back.entities.Kind
2020-11-25 20:53:43,186 DEBUG  [main] EnumType: Using NAMED-based conversion for Enum com.sf.back.entities.Kind
2020-11-25 20:53:43,186 DEBUG  [main] EnumType: Using NAMED-based conversion for Enum com.sf.back.entities.Kind
2020-11-25 20:53:43,191 DEBUG  [main] EnumType: Using NAMED-based conversion for Enum com.sf.back.entities.Kind
2020-11-25 20:53:43,207 TRACE  [main] TypeConfiguration$Scope: Handling #sessionFactoryCreated from [org.hibernate.internal.SessionFactoryImpl@39783d83] for TypeConfiguration
2020-11-25 20:53:43,393 WARN   [main] JpaBaseConfiguration$JpaWebConfiguration: spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2020-11-25 20:53:43,581 WARN   [main] GenericWebApplicationContext: Exception encountered during context initialization - cancelling refresh attempt: org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'groovyMarkupConfigurer' defined in class path resource [org/springframework/boot/autoconfigure/groovy/template/GroovyTemplateAutoConfiguration$GroovyMarkupConfiguration.class]: Invocation of init method failed; nested exception is java.lang.reflect.InaccessibleObjectException: Unable to make jdk.internal.loader.ClassLoaders$AppClassLoader(jdk.internal.loader.ClassLoaders$PlatformClassLoader,jdk.internal.loader.URLClassPath) accessible: module java.base does not "opens jdk.internal.loader" to unnamed module @60fa3495
2020-11-25 20:53:43,588 TRACE  [main] TypeConfiguration$Scope: Handling #sessionFactoryClosed from [org.hibernate.internal.SessionFactoryImpl@39783d83] for TypeConfiguration
2020-11-25 20:53:43,588 DEBUG  [main] TypeConfiguration$Scope: Un-scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration$Scope@49e11ca7] from SessionFactory [org.hibernate.internal.SessionFactoryImpl@39783d83]
2020-11-25 20:53:43,613 ERROR  [main] SpringApplication: Application run failed
org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'groovyMarkupConfigurer' defined in class path resource [org/springframework/boot/autoconfigure/groovy/template/GroovyTemplateAutoConfiguration$GroovyMarkupConfiguration.class]: Invocation of init method failed; nested exception is java.lang.reflect.InaccessibleObjectException: Unable to make jdk.internal.loader.ClassLoaders$AppClassLoader(jdk.internal.loader.ClassLoaders$PlatformClassLoader,jdk.internal.loader.URLClassPath) accessible: module java.base does not "opens jdk.internal.loader" to unnamed module @60fa3495
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1803)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:595)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:517)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:323)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:222)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:321)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:202)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(DefaultListableBeanFactory.java:879)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:878)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:550)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:747)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:397)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:315)
	at org.springframework.boot.test.context.SpringBootContextLoader.loadContext(SpringBootContextLoader.java:125)
	at org.springframework.test.context.cache.DefaultCacheAwareContextLoaderDelegate.loadContextInternal(DefaultCacheAwareContextLoaderDelegate.java:99)
	at org.springframework.test.context.cache.DefaultCacheAwareContextLoaderDelegate.loadContext(DefaultCacheAwareContextLoaderDelegate.java:124)
	at org.springframework.test.context.support.DefaultTestContext.getApplicationContext(DefaultTestContext.java:123)
	at org.springframework.test.context.web.ServletTestExecutionListener.setUpRequestContextIfNecessary(ServletTestExecutionListener.java:190)
	at org.springframework.test.context.web.ServletTestExecutionListener.prepareTestInstance(ServletTestExecutionListener.java:132)
	at org.springframework.test.context.TestContextManager.prepareTestInstance(TestContextManager.java:244)
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner.createTest(SpringJUnit4ClassRunner.java:227)
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner$1.runReflectiveCall(SpringJUnit4ClassRunner.java:289)
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner.methodBlock(SpringJUnit4ClassRunner.java:291)
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner.runChild(SpringJUnit4ClassRunner.java:246)
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner.runChild(SpringJUnit4ClassRunner.java:97)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:290)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:71)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:58)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268)
	at org.junit.internal.runners.statements.RunBefores.evaluate(RunBefores.java:26)
	at org.springframework.test.context.junit4.statements.RunBeforeTestClassCallbacks.evaluate(RunBeforeTestClassCallbacks.java:61)
	at org.junit.internal.runners.statements.RunAfters.evaluate(RunAfters.java:27)
	at org.springframework.test.context.junit4.statements.RunAfterTestClassCallbacks.evaluate(RunAfterTestClassCallbacks.java:70)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:363)
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner.run(SpringJUnit4ClassRunner.java:190)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:137)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:115)
	at org.junit.vintage.engine.execution.RunnerExecutor.execute(RunnerExecutor.java:40)
	at java.base/java.util.stream.ForEachOps$ForEachOp$OfRef.accept(ForEachOps.java:183)
	at java.base/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:195)
	at java.base/java.util.Iterator.forEachRemaining(Iterator.java:133)
	at java.base/java.util.Spliterators$IteratorSpliterator.forEachRemaining(Spliterators.java:1801)
	at java.base/java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:484)
	at java.base/java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:474)
	at java.base/java.util.stream.ForEachOps$ForEachOp.evaluateSequential(ForEachOps.java:150)
	at java.base/java.util.stream.ForEachOps$ForEachOp$OfRef.evaluateSequential(ForEachOps.java:173)
	at java.base/java.util.stream.AbstractPipeline.evaluate(AbstractPipeline.java:234)
	at java.base/java.util.stream.ReferencePipeline.forEach(ReferencePipeline.java:497)
	at org.junit.vintage.engine.VintageTestEngine.executeAllChildren(VintageTestEngine.java:80)
	at org.junit.vintage.engine.VintageTestEngine.execute(VintageTestEngine.java:71)
	at org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:220)
	at org.junit.platform.launcher.core.DefaultLauncher.lambda$execute$6(DefaultLauncher.java:188)
	at org.junit.platform.launcher.core.DefaultLauncher.withInterceptedStreams(DefaultLauncher.java:202)
	at org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:181)
	at org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:128)
	at org.apache.maven.surefire.junitplatform.JUnitPlatformProvider.invokeAllTests(JUnitPlatformProvider.java:150)
	at org.apache.maven.surefire.junitplatform.JUnitPlatformProvider.invoke(JUnitPlatformProvider.java:124)
	at org.apache.maven.surefire.booter.ForkedBooter.invokeProviderInSameClassLoader(ForkedBooter.java:384)
	at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:345)
	at org.apache.maven.surefire.booter.ForkedBooter.execute(ForkedBooter.java:126)
	at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:418)
Caused by: java.lang.reflect.InaccessibleObjectException: Unable to make jdk.internal.loader.ClassLoaders$AppClassLoader(jdk.internal.loader.ClassLoaders$PlatformClassLoader,jdk.internal.loader.URLClassPath) accessible: module java.base does not "opens jdk.internal.loader" to unnamed module @60fa3495
	at java.base/java.lang.reflect.AccessibleObject.checkCanSetAccessible(AccessibleObject.java:344)
	at java.base/java.lang.reflect.AccessibleObject.checkCanSetAccessible(AccessibleObject.java:284)
	at java.base/java.lang.reflect.Constructor.checkCanSetAccessible(Constructor.java:189)
	at java.base/java.lang.reflect.Constructor.setAccessible(Constructor.java:182)
	at org.codehaus.groovy.reflection.CachedConstructor$1.run(CachedConstructor.java:44)
	at java.base/java.security.AccessController.doPrivileged(AccessController.java:312)
	at org.codehaus.groovy.reflection.CachedConstructor.<init>(CachedConstructor.java:42)
	at org.codehaus.groovy.reflection.CachedClass$2.initValue(CachedClass.java:79)
	at org.codehaus.groovy.reflection.CachedClass$2.initValue(CachedClass.java:69)
	at org.codehaus.groovy.util.LazyReference.getLocked(LazyReference.java:49)
	at org.codehaus.groovy.util.LazyReference.get(LazyReference.java:36)
	at org.codehaus.groovy.reflection.CachedClass.getConstructors(CachedClass.java:268)
	at groovy.lang.MetaClassImpl.<init>(MetaClassImpl.java:218)
	at groovy.lang.MetaClassImpl.<init>(MetaClassImpl.java:228)
	at groovy.lang.MetaClassRegistry$MetaClassCreationHandle.createNormalMetaClass(MetaClassRegistry.java:171)
	at groovy.lang.MetaClassRegistry$MetaClassCreationHandle.createWithCustomLookup(MetaClassRegistry.java:161)
	at groovy.lang.MetaClassRegistry$MetaClassCreationHandle.create(MetaClassRegistry.java:144)
	at org.codehaus.groovy.reflection.ClassInfo.getMetaClassUnderLock(ClassInfo.java:253)
	at org.codehaus.groovy.reflection.ClassInfo.getMetaClass(ClassInfo.java:285)
	at org.codehaus.groovy.reflection.ClassInfo.getMetaClass(ClassInfo.java:295)
	at org.codehaus.groovy.runtime.metaclass.MetaClassRegistryImpl.getMetaClass(MetaClassRegistryImpl.java:261)
	at org.codehaus.groovy.runtime.InvokerHelper.getMetaClass(InvokerHelper.java:873)
	at org.codehaus.groovy.runtime.InvokerHelper.invokePojoMethod(InvokerHelper.java:906)
	at org.codehaus.groovy.runtime.InvokerHelper.invokeMethod(InvokerHelper.java:898)
	at org.codehaus.groovy.runtime.typehandling.DefaultTypeTransformation.castToBoolean(DefaultTypeTransformation.java:185)
	at org.codehaus.groovy.runtime.typehandling.DefaultTypeTransformation.booleanUnbox(DefaultTypeTransformation.java:74)
	at org.codehaus.groovy.control.customizers.ASTTransformationCustomizer.findASTTranformationClass(ASTTransformationCustomizer.groovy:209)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:567)
	at org.codehaus.groovy.reflection.CachedMethod.invoke(CachedMethod.java:93)
	at org.codehaus.groovy.runtime.callsite.StaticMetaMethodSite$StaticMetaMethodSiteNoUnwrapNoCoerce.invoke(StaticMetaMethodSite.java:151)
	at org.codehaus.groovy.runtime.callsite.StaticMetaMethodSite.callStatic(StaticMetaMethodSite.java:102)
	at org.codehaus.groovy.runtime.callsite.AbstractCallSite.callStatic(AbstractCallSite.java:214)
	at org.codehaus.groovy.control.customizers.ASTTransformationCustomizer.findPhase(ASTTransformationCustomizer.groovy:226)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:567)
	at org.codehaus.groovy.reflection.CachedMethod.invoke(CachedMethod.java:93)
	at org.codehaus.groovy.runtime.callsite.StaticMetaMethodSite$StaticMetaMethodSiteNoUnwrapNoCoerce.invoke(StaticMetaMethodSite.java:151)
	at org.codehaus.groovy.runtime.callsite.StaticMetaMethodSite.callStatic(StaticMetaMethodSite.java:102)
	at org.codehaus.groovy.runtime.callsite.AbstractCallSite.callStatic(AbstractCallSite.java:214)
	at org.codehaus.groovy.control.customizers.ASTTransformationCustomizer.<init>(ASTTransformationCustomizer.groovy:180)
	at org.codehaus.groovy.control.customizers.ASTTransformationCustomizer.<init>(ASTTransformationCustomizer.groovy:188)
	at groovy.text.markup.MarkupTemplateEngine.<init>(MarkupTemplateEngine.java:94)
	at org.springframework.web.servlet.view.groovy.GroovyMarkupConfigurer.createTemplateEngine(GroovyMarkupConfigurer.java:160)
	at org.springframework.web.servlet.view.groovy.GroovyMarkupConfigurer.afterPropertiesSet(GroovyMarkupConfigurer.java:153)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1862)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1799)
	... 62 common frames omitted
2020-11-25 20:53:43,615 ERROR  [main] TestContextManager: Caught exception while allowing TestExecutionListener [org.springframework.test.context.web.ServletTestExecutionListener@170b27a7] to prepare test instance [com.sf.math.algebra.solvers.PolynomialSolverIntervalTest@65beeceb]
java.lang.IllegalStateException: Failed to load ApplicationContext
	at org.springframework.test.context.cache.DefaultCacheAwareContextLoaderDelegate.loadContext(DefaultCacheAwareContextLoaderDelegate.java:132)
	at org.springframework.test.context.support.DefaultTestContext.getApplicationContext(DefaultTestContext.java:123)
	at org.springframework.test.context.web.ServletTestExecutionListener.setUpRequestContextIfNecessary(ServletTestExecutionListener.java:190)
	at org.springframework.test.context.web.ServletTestExecutionListener.prepareTestInstance(ServletTestExecutionListener.java:132)
	at org.springframework.test.context.TestContextManager.prepareTestInstance(TestContextManager.java:244)
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner.createTest(SpringJUnit4ClassRunner.java:227)
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner$1.runReflectiveCall(SpringJUnit4ClassRunner.java:289)
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner.methodBlock(SpringJUnit4ClassRunner.java:291)
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner.runChild(SpringJUnit4ClassRunner.java:246)
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner.runChild(SpringJUnit4ClassRunner.java:97)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:290)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:71)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:58)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268)
	at org.junit.internal.runners.statements.RunBefores.evaluate(RunBefores.java:26)
	at org.springframework.test.context.junit4.statements.RunBeforeTestClassCallbacks.evaluate(RunBeforeTestClassCallbacks.java:61)
	at org.junit.internal.runners.statements.RunAfters.evaluate(RunAfters.java:27)
	at org.springframework.test.context.junit4.statements.RunAfterTestClassCallbacks.evaluate(RunAfterTestClassCallbacks.java:70)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:363)
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner.run(SpringJUnit4ClassRunner.java:190)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:137)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:115)
	at org.junit.vintage.engine.execution.RunnerExecutor.execute(RunnerExecutor.java:40)
	at java.base/java.util.stream.ForEachOps$ForEachOp$OfRef.accept(ForEachOps.java:183)
	at java.base/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:195)
	at java.base/java.util.Iterator.forEachRemaining(Iterator.java:133)
	at java.base/java.util.Spliterators$IteratorSpliterator.forEachRemaining(Spliterators.java:1801)
	at java.base/java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:484)
	at java.base/java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:474)
	at java.base/java.util.stream.ForEachOps$ForEachOp.evaluateSequential(ForEachOps.java:150)
	at java.base/java.util.stream.ForEachOps$ForEachOp$OfRef.evaluateSequential(ForEachOps.java:173)
	at java.base/java.util.stream.AbstractPipeline.evaluate(AbstractPipeline.java:234)
	at java.base/java.util.stream.ReferencePipeline.forEach(ReferencePipeline.java:497)
	at org.junit.vintage.engine.VintageTestEngine.executeAllChildren(VintageTestEngine.java:80)
	at org.junit.vintage.engine.VintageTestEngine.execute(VintageTestEngine.java:71)
	at org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:220)
	at org.junit.platform.launcher.core.DefaultLauncher.lambda$execute$6(DefaultLauncher.java:188)
	at org.junit.platform.launcher.core.DefaultLauncher.withInterceptedStreams(DefaultLauncher.java:202)
	at org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:181)
	at org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:128)
	at org.apache.maven.surefire.junitplatform.JUnitPlatformProvider.invokeAllTests(JUnitPlatformProvider.java:150)
	at org.apache.maven.surefire.junitplatform.JUnitPlatformProvider.invoke(JUnitPlatformProvider.java:124)
	at org.apache.maven.surefire.booter.ForkedBooter.invokeProviderInSameClassLoader(ForkedBooter.java:384)
	at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:345)
	at org.apache.maven.surefire.booter.ForkedBooter.execute(ForkedBooter.java:126)
	at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:418)
Caused by: org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'groovyMarkupConfigurer' defined in class path resource [org/springframework/boot/autoconfigure/groovy/template/GroovyTemplateAutoConfiguration$GroovyMarkupConfiguration.class]: Invocation of init method failed; nested exception is java.lang.reflect.InaccessibleObjectException: Unable to make jdk.internal.loader.ClassLoaders$AppClassLoader(jdk.internal.loader.ClassLoaders$PlatformClassLoader,jdk.internal.loader.URLClassPath) accessible: module java.base does not "opens jdk.internal.loader" to unnamed module @60fa3495
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1803)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:595)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:517)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:323)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:222)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:321)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:202)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(DefaultListableBeanFactory.java:879)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:878)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:550)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:747)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:397)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:315)
	at org.springframework.boot.test.context.SpringBootContextLoader.loadContext(SpringBootContextLoader.java:125)
	at org.springframework.test.context.cache.DefaultCacheAwareContextLoaderDelegate.loadContextInternal(DefaultCacheAwareContextLoaderDelegate.java:99)
	at org.springframework.test.context.cache.DefaultCacheAwareContextLoaderDelegate.loadContext(DefaultCacheAwareContextLoaderDelegate.java:124)
	... 47 common frames omitted
Caused by: java.lang.reflect.InaccessibleObjectException: Unable to make jdk.internal.loader.ClassLoaders$AppClassLoader(jdk.internal.loader.ClassLoaders$PlatformClassLoader,jdk.internal.loader.URLClassPath) accessible: module java.base does not "opens jdk.internal.loader" to unnamed module @60fa3495
	at java.base/java.lang.reflect.AccessibleObject.checkCanSetAccessible(AccessibleObject.java:344)
	at java.base/java.lang.reflect.AccessibleObject.checkCanSetAccessible(AccessibleObject.java:284)
	at java.base/java.lang.reflect.Constructor.checkCanSetAccessible(Constructor.java:189)
	at java.base/java.lang.reflect.Constructor.setAccessible(Constructor.java:182)
	at org.codehaus.groovy.reflection.CachedConstructor$1.run(CachedConstructor.java:44)
	at java.base/java.security.AccessController.doPrivileged(AccessController.java:312)
	at org.codehaus.groovy.reflection.CachedConstructor.<init>(CachedConstructor.java:42)
	at org.codehaus.groovy.reflection.CachedClass$2.initValue(CachedClass.java:79)
	at org.codehaus.groovy.reflection.CachedClass$2.initValue(CachedClass.java:69)
	at org.codehaus.groovy.util.LazyReference.getLocked(LazyReference.java:49)
	at org.codehaus.groovy.util.LazyReference.get(LazyReference.java:36)
	at org.codehaus.groovy.reflection.CachedClass.getConstructors(CachedClass.java:268)
	at groovy.lang.MetaClassImpl.<init>(MetaClassImpl.java:218)
	at groovy.lang.MetaClassImpl.<init>(MetaClassImpl.java:228)
	at groovy.lang.MetaClassRegistry$MetaClassCreationHandle.createNormalMetaClass(MetaClassRegistry.java:171)
	at groovy.lang.MetaClassRegistry$MetaClassCreationHandle.createWithCustomLookup(MetaClassRegistry.java:161)
	at groovy.lang.MetaClassRegistry$MetaClassCreationHandle.create(MetaClassRegistry.java:144)
	at org.codehaus.groovy.reflection.ClassInfo.getMetaClassUnderLock(ClassInfo.java:253)
	at org.codehaus.groovy.reflection.ClassInfo.getMetaClass(ClassInfo.java:285)
	at org.codehaus.groovy.reflection.ClassInfo.getMetaClass(ClassInfo.java:295)
	at org.codehaus.groovy.runtime.metaclass.MetaClassRegistryImpl.getMetaClass(MetaClassRegistryImpl.java:261)
	at org.codehaus.groovy.runtime.InvokerHelper.getMetaClass(InvokerHelper.java:873)
	at org.codehaus.groovy.runtime.InvokerHelper.invokePojoMethod(InvokerHelper.java:906)
	at org.codehaus.groovy.runtime.InvokerHelper.invokeMethod(InvokerHelper.java:898)
	at org.codehaus.groovy.runtime.typehandling.DefaultTypeTransformation.castToBoolean(DefaultTypeTransformation.java:185)
	at org.codehaus.groovy.runtime.typehandling.DefaultTypeTransformation.booleanUnbox(DefaultTypeTransformation.java:74)
	at org.codehaus.groovy.control.customizers.ASTTransformationCustomizer.findASTTranformationClass(ASTTransformationCustomizer.groovy:209)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:567)
	at org.codehaus.groovy.reflection.CachedMethod.invoke(CachedMethod.java:93)
	at org.codehaus.groovy.runtime.callsite.StaticMetaMethodSite$StaticMetaMethodSiteNoUnwrapNoCoerce.invoke(StaticMetaMethodSite.java:151)
	at org.codehaus.groovy.runtime.callsite.StaticMetaMethodSite.callStatic(StaticMetaMethodSite.java:102)
	at org.codehaus.groovy.runtime.callsite.AbstractCallSite.callStatic(AbstractCallSite.java:214)
	at org.codehaus.groovy.control.customizers.ASTTransformationCustomizer.findPhase(ASTTransformationCustomizer.groovy:226)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:567)
	at org.codehaus.groovy.reflection.CachedMethod.invoke(CachedMethod.java:93)
	at org.codehaus.groovy.runtime.callsite.StaticMetaMethodSite$StaticMetaMethodSiteNoUnwrapNoCoerce.invoke(StaticMetaMethodSite.java:151)
	at org.codehaus.groovy.runtime.callsite.StaticMetaMethodSite.callStatic(StaticMetaMethodSite.java:102)
	at org.codehaus.groovy.runtime.callsite.AbstractCallSite.callStatic(AbstractCallSite.java:214)
	at org.codehaus.groovy.control.customizers.ASTTransformationCustomizer.<init>(ASTTransformationCustomizer.groovy:180)
	at org.codehaus.groovy.control.customizers.ASTTransformationCustomizer.<init>(ASTTransformationCustomizer.groovy:188)
	at groovy.text.markup.MarkupTemplateEngine.<init>(MarkupTemplateEngine.java:94)
	at org.springframework.web.servlet.view.groovy.GroovyMarkupConfigurer.createTemplateEngine(GroovyMarkupConfigurer.java:160)
	at org.springframework.web.servlet.view.groovy.GroovyMarkupConfigurer.afterPropertiesSet(GroovyMarkupConfigurer.java:153)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1862)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1799)
	... 62 common frames omitted
2020-11-25 20:53:45,401 DEBUG  [main] BasicTypeRegistry: Adding type registration boolean -> org.hibernate.type.BooleanType@ff2266c
2020-11-25 20:53:45,405 DEBUG  [main] BasicTypeRegistry: Adding type registration boolean -> org.hibernate.type.BooleanType@ff2266c
2020-11-25 20:53:45,405 DEBUG  [main] BasicTypeRegistry: Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@ff2266c
2020-11-25 20:53:45,406 DEBUG  [main] BasicTypeRegistry: Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@1d585fb
2020-11-25 20:53:45,406 DEBUG  [main] BasicTypeRegistry: Adding type registration true_false -> org.hibernate.type.TrueFalseType@7c8f047a
2020-11-25 20:53:45,406 DEBUG  [main] BasicTypeRegistry: Adding type registration yes_no -> org.hibernate.type.YesNoType@d949bc4
2020-11-25 20:53:45,406 DEBUG  [main] BasicTypeRegistry: Adding type registration byte -> org.hibernate.type.ByteType@29c25bbc
2020-11-25 20:53:45,406 DEBUG  [main] BasicTypeRegistry: Adding type registration byte -> org.hibernate.type.ByteType@29c25bbc
2020-11-25 20:53:45,406 DEBUG  [main] BasicTypeRegistry: Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@29c25bbc
2020-11-25 20:53:45,407 DEBUG  [main] BasicTypeRegistry: Adding type registration character -> org.hibernate.type.CharacterType@403f7aa2
2020-11-25 20:53:45,407 DEBUG  [main] BasicTypeRegistry: Adding type registration char -> org.hibernate.type.CharacterType@403f7aa2
2020-11-25 20:53:45,407 DEBUG  [main] BasicTypeRegistry: Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@403f7aa2
2020-11-25 20:53:45,407 DEBUG  [main] BasicTypeRegistry: Adding type registration short -> org.hibernate.type.ShortType@38cb1606
2020-11-25 20:53:45,407 DEBUG  [main] BasicTypeRegistry: Adding type registration short -> org.hibernate.type.ShortType@38cb1606
2020-11-25 20:53:45,408 DEBUG  [main] BasicTypeRegistry: Adding type registration java.lang.Short -> org.hibernate.type.ShortType@38cb1606
2020-11-25 20:53:45,408 DEBUG  [main] BasicTypeRegistry: Adding type registration integer -> org.hibernate.type.IntegerType@5d3b6585
2020-11-25 20:53:45,408 DEBUG  [main] BasicTypeRegistry: Adding type registration int -> org.hibernate.type.IntegerType@5d3b6585
2020-11-25 20:53:45,408 DEBUG  [main] BasicTypeRegistry: Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@5d3b6585
2020-11-25 20:53:45,408 DEBUG  [main] BasicTypeRegistry: Adding type registration long -> org.hibernate.type.LongType@4fea5ee0
2020-11-25 20:53:45,408 DEBUG  [main] BasicTypeRegistry: Adding type registration long -> org.hibernate.type.LongType@4fea5ee0
2020-11-25 20:53:45,408 DEBUG  [main] BasicTypeRegistry: Adding type registration java.lang.Long -> org.hibernate.type.LongType@4fea5ee0
2020-11-25 20:53:45,408 DEBUG  [main] BasicTypeRegistry: Adding type registration float -> org.hibernate.type.FloatType@7b3085a3
2020-11-25 20:53:45,408 DEBUG  [main] BasicTypeRegistry: Adding type registration float -> org.hibernate.type.FloatType@7b3085a3
2020-11-25 20:53:45,409 DEBUG  [main] BasicTypeRegistry: Adding type registration java.lang.Float -> org.hibernate.type.FloatType@7b3085a3
2020-11-25 20:53:45,409 DEBUG  [main] BasicTypeRegistry: Adding type registration double -> org.hibernate.type.DoubleType@5a7a6d34
2020-11-25 20:53:45,409 DEBUG  [main] BasicTypeRegistry: Adding type registration double -> org.hibernate.type.DoubleType@5a7a6d34
2020-11-25 20:53:45,409 DEBUG  [main] BasicTypeRegistry: Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@5a7a6d34
2020-11-25 20:53:45,409 DEBUG  [main] BasicTypeRegistry: Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@5ae66c98
2020-11-25 20:53:45,409 DEBUG  [main] BasicTypeRegistry: Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@5ae66c98
2020-11-25 20:53:45,409 DEBUG  [main] BasicTypeRegistry: Adding type registration big_integer -> org.hibernate.type.BigIntegerType@223cbf0d
2020-11-25 20:53:45,409 DEBUG  [main] BasicTypeRegistry: Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@223cbf0d
2020-11-25 20:53:45,410 DEBUG  [main] BasicTypeRegistry: Adding type registration string -> org.hibernate.type.StringType@4f581211
2020-11-25 20:53:45,410 DEBUG  [main] BasicTypeRegistry: Adding type registration java.lang.String -> org.hibernate.type.StringType@4f581211
2020-11-25 20:53:45,410 DEBUG  [main] BasicTypeRegistry: Adding type registration nstring -> org.hibernate.type.StringNVarcharType@6697f3d
2020-11-25 20:53:45,410 DEBUG  [main] BasicTypeRegistry: Adding type registration ncharacter -> org.hibernate.type.CharacterNCharType@f1d1463
2020-11-25 20:53:45,410 DEBUG  [main] BasicTypeRegistry: Adding type registration url -> org.hibernate.type.UrlType@44ddb518
2020-11-25 20:53:45,410 DEBUG  [main] BasicTypeRegistry: Adding type registration java.net.URL -> org.hibernate.type.UrlType@44ddb518
2020-11-25 20:53:45,410 DEBUG  [main] BasicTypeRegistry: Adding type registration Duration -> org.hibernate.type.DurationType@49e0b123
2020-11-25 20:53:45,411 DEBUG  [main] BasicTypeRegistry: Adding type registration java.time.Duration -> org.hibernate.type.DurationType@49e0b123
2020-11-25 20:53:45,411 DEBUG  [main] BasicTypeRegistry: Adding type registration Instant -> org.hibernate.type.InstantType@40a28bda
2020-11-25 20:53:45,411 DEBUG  [main] BasicTypeRegistry: Adding type registration java.time.Instant -> org.hibernate.type.InstantType@40a28bda
2020-11-25 20:53:45,411 DEBUG  [main] BasicTypeRegistry: Adding type registration LocalDateTime -> org.hibernate.type.LocalDateTimeType@33430fc
2020-11-25 20:53:45,411 DEBUG  [main] BasicTypeRegistry: Adding type registration java.time.LocalDateTime -> org.hibernate.type.LocalDateTimeType@33430fc
2020-11-25 20:53:45,411 DEBUG  [main] BasicTypeRegistry: Adding type registration LocalDate -> org.hibernate.type.LocalDateType@d7055be
2020-11-25 20:53:45,411 DEBUG  [main] BasicTypeRegistry: Adding type registration java.time.LocalDate -> org.hibernate.type.LocalDateType@d7055be
2020-11-25 20:53:45,411 DEBUG  [main] BasicTypeRegistry: Adding type registration LocalTime -> org.hibernate.type.LocalTimeType@3c7d8a4
2020-11-25 20:53:45,411 DEBUG  [main] BasicTypeRegistry: Adding type registration java.time.LocalTime -> org.hibernate.type.LocalTimeType@3c7d8a4
2020-11-25 20:53:45,412 DEBUG  [main] BasicTypeRegistry: Adding type registration OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@7a117dc2
2020-11-25 20:53:45,412 DEBUG  [main] BasicTypeRegistry: Adding type registration java.time.OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@7a117dc2
2020-11-25 20:53:45,412 DEBUG  [main] BasicTypeRegistry: Adding type registration OffsetTime -> org.hibernate.type.OffsetTimeType@3c64339f
2020-11-25 20:53:45,412 DEBUG  [main] BasicTypeRegistry: Adding type registration java.time.OffsetTime -> org.hibernate.type.OffsetTimeType@3c64339f
2020-11-25 20:53:45,412 DEBUG  [main] BasicTypeRegistry: Adding type registration ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@30c8c6ab
2020-11-25 20:53:45,413 DEBUG  [main] BasicTypeRegistry: Adding type registration java.time.ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@30c8c6ab
2020-11-25 20:53:45,413 DEBUG  [main] BasicTypeRegistry: Adding type registration date -> org.hibernate.type.DateType@61c5fd78
2020-11-25 20:53:45,413 DEBUG  [main] BasicTypeRegistry: Adding type registration java.sql.Date -> org.hibernate.type.DateType@61c5fd78
2020-11-25 20:53:45,413 DEBUG  [main] BasicTypeRegistry: Adding type registration time -> org.hibernate.type.TimeType@77856cc5
2020-11-25 20:53:45,413 DEBUG  [main] BasicTypeRegistry: Adding type registration java.sql.Time -> org.hibernate.type.TimeType@77856cc5
2020-11-25 20:53:45,413 DEBUG  [main] BasicTypeRegistry: Adding type registration timestamp -> org.hibernate.type.TimestampType@12166229
2020-11-25 20:53:45,413 DEBUG  [main] BasicTypeRegistry: Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@12166229
2020-11-25 20:53:45,413 DEBUG  [main] BasicTypeRegistry: Adding type registration java.util.Date -> org.hibernate.type.TimestampType@12166229
2020-11-25 20:53:45,413 DEBUG  [main] BasicTypeRegistry: Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@2b4829aa
2020-11-25 20:53:45,420 DEBUG  [main] BasicTypeRegistry: Adding type registration calendar -> org.hibernate.type.CalendarType@3ec082a1
2020-11-25 20:53:45,420 DEBUG  [main] BasicTypeRegistry: Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@3ec082a1
2020-11-25 20:53:45,421 DEBUG  [main] BasicTypeRegistry: Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@3ec082a1
2020-11-25 20:53:45,421 DEBUG  [main] BasicTypeRegistry: Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@429f0ca8
2020-11-25 20:53:45,421 DEBUG  [main] BasicTypeRegistry: Adding type registration locale -> org.hibernate.type.LocaleType@11c3ce6a
2020-11-25 20:53:45,422 DEBUG  [main] BasicTypeRegistry: Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@11c3ce6a
2020-11-25 20:53:45,422 DEBUG  [main] BasicTypeRegistry: Adding type registration currency -> org.hibernate.type.CurrencyType@28519bfb
2020-11-25 20:53:45,422 DEBUG  [main] BasicTypeRegistry: Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@28519bfb
2020-11-25 20:53:45,423 DEBUG  [main] BasicTypeRegistry: Adding type registration timezone -> org.hibernate.type.TimeZoneType@7aa15a80
2020-11-25 20:53:45,423 DEBUG  [main] BasicTypeRegistry: Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@7aa15a80
2020-11-25 20:53:45,423 DEBUG  [main] BasicTypeRegistry: Adding type registration class -> org.hibernate.type.ClassType@48d5ca17
2020-11-25 20:53:45,424 DEBUG  [main] BasicTypeRegistry: Adding type registration java.lang.Class -> org.hibernate.type.ClassType@48d5ca17
2020-11-25 20:53:45,424 DEBUG  [main] BasicTypeRegistry: Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@79b8ecb
2020-11-25 20:53:45,425 DEBUG  [main] BasicTypeRegistry: Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@79b8ecb
2020-11-25 20:53:45,425 DEBUG  [main] BasicTypeRegistry: Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@c0013b8
2020-11-25 20:53:45,425 DEBUG  [main] BasicTypeRegistry: Adding type registration binary -> org.hibernate.type.BinaryType@2a42019a
2020-11-25 20:53:45,426 DEBUG  [main] BasicTypeRegistry: Adding type registration byte[] -> org.hibernate.type.BinaryType@2a42019a
2020-11-25 20:53:45,426 DEBUG  [main] BasicTypeRegistry: Adding type registration [B -> org.hibernate.type.BinaryType@2a42019a
2020-11-25 20:53:45,426 DEBUG  [main] BasicTypeRegistry: Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@495da9a7
2020-11-25 20:53:45,427 DEBUG  [main] BasicTypeRegistry: Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@495da9a7
2020-11-25 20:53:45,427 DEBUG  [main] BasicTypeRegistry: Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@495da9a7
2020-11-25 20:53:45,427 DEBUG  [main] BasicTypeRegistry: Adding type registration row_version -> org.hibernate.type.RowVersionType@35becbd4
2020-11-25 20:53:45,429 DEBUG  [main] BasicTypeRegistry: Adding type registration image -> org.hibernate.type.ImageType@30fa8a6b
2020-11-25 20:53:45,430 DEBUG  [main] BasicTypeRegistry: Adding type registration characters -> org.hibernate.type.CharArrayType@4c8d45cf
2020-11-25 20:53:45,430 DEBUG  [main] BasicTypeRegistry: Adding type registration char[] -> org.hibernate.type.CharArrayType@4c8d45cf
2020-11-25 20:53:45,430 DEBUG  [main] BasicTypeRegistry: Adding type registration [C -> org.hibernate.type.CharArrayType@4c8d45cf
2020-11-25 20:53:45,430 DEBUG  [main] BasicTypeRegistry: Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@5b490d5e
2020-11-25 20:53:45,431 DEBUG  [main] BasicTypeRegistry: Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@5b490d5e
2020-11-25 20:53:45,431 DEBUG  [main] BasicTypeRegistry: Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@5b490d5e
2020-11-25 20:53:45,431 DEBUG  [main] BasicTypeRegistry: Adding type registration text -> org.hibernate.type.TextType@18b04526
2020-11-25 20:53:45,431 DEBUG  [main] BasicTypeRegistry: Adding type registration ntext -> org.hibernate.type.NTextType@246df37b
2020-11-25 20:53:45,431 DEBUG  [main] BasicTypeRegistry: Adding type registration blob -> org.hibernate.type.BlobType@56881196
2020-11-25 20:53:45,432 DEBUG  [main] BasicTypeRegistry: Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@56881196
2020-11-25 20:53:45,432 DEBUG  [main] BasicTypeRegistry: Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@131c0b6f
2020-11-25 20:53:45,432 DEBUG  [main] BasicTypeRegistry: Adding type registration clob -> org.hibernate.type.ClobType@7fc1fd31
2020-11-25 20:53:45,433 DEBUG  [main] BasicTypeRegistry: Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@7fc1fd31
2020-11-25 20:53:45,433 DEBUG  [main] BasicTypeRegistry: Adding type registration nclob -> org.hibernate.type.NClobType@70777a65
2020-11-25 20:53:45,433 DEBUG  [main] BasicTypeRegistry: Adding type registration java.sql.NClob -> org.hibernate.type.NClobType@70777a65
2020-11-25 20:53:45,433 DEBUG  [main] BasicTypeRegistry: Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@2f6f4ac4
2020-11-25 20:53:45,434 DEBUG  [main] BasicTypeRegistry: Adding type registration materialized_nclob -> org.hibernate.type.MaterializedNClobType@7d685f4e
2020-11-25 20:53:45,434 DEBUG  [main] BasicTypeRegistry: Adding type registration serializable -> org.hibernate.type.SerializableType@319aa9ee
2020-11-25 20:53:45,434 DEBUG  [main] BasicTypeRegistry: Adding type registration object -> org.hibernate.type.ObjectType@54234569
2020-11-25 20:53:45,435 DEBUG  [main] BasicTypeRegistry: Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@54234569
2020-11-25 20:53:45,435 DEBUG  [main] BasicTypeRegistry: Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@6dd65379
2020-11-25 20:53:45,435 DEBUG  [main] BasicTypeRegistry: Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@3b2eead8
2020-11-25 20:53:45,436 DEBUG  [main] BasicTypeRegistry: Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@1603d1fb
2020-11-25 20:53:45,436 DEBUG  [main] BasicTypeRegistry: Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@11757914
2020-11-25 20:53:45,436 DEBUG  [main] BasicTypeRegistry: Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@4e67bdd8
2020-11-25 20:53:45,436 DEBUG  [main] BasicTypeRegistry: Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@2d3f6e6
2020-11-25 20:53:45,436 DEBUG  [main] BasicTypeRegistry: Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@a57734e
2020-11-25 20:53:45,436 DEBUG  [main] BasicTypeRegistry: Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@30d016c9
2020-11-25 20:53:45,448 DEBUG  [main] TypeConfiguration$Scope: Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@51ce22e3] to MetadataBuildingContext [org.hibernate.boot.internal.MetadataBuildingContextRootImpl@1b5359a1]
2020-11-25 20:53:45,456 DEBUG  [main] EnumType: Using NAMED-based conversion for Enum com.sf.back.entities.Kind
2020-11-25 20:53:45,459 DEBUG  [main] EnumType: Using NAMED-based conversion for Enum com.sf.back.entities.Kind
2020-11-25 20:53:45,492 DEBUG  [main] TypeConfiguration$Scope: Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@51ce22e3] to SessionFactoryImpl [org.hibernate.internal.SessionFactoryImpl@2ffa8ce5]
2020-11-25 20:53:45,493 DEBUG  [main] EnumType: Using NAMED-based conversion for Enum com.sf.back.entities.Kind
2020-11-25 20:53:45,494 DEBUG  [main] EnumType: Using NAMED-based conversion for Enum com.sf.back.entities.Kind
2020-11-25 20:53:45,511 DEBUG  [main] EnumType: Using NAMED-based conversion for Enum com.sf.back.entities.Kind
2020-11-25 20:53:45,512 DEBUG  [main] EnumType: Using NAMED-based conversion for Enum com.sf.back.entities.Kind
2020-11-25 20:53:45,556 DEBUG  [main] EnumType: Using NAMED-based conversion for Enum com.sf.back.entities.Kind
2020-11-25 20:53:45,557 DEBUG  [main] EnumType: Using NAMED-based conversion for Enum com.sf.back.entities.Kind
2020-11-25 20:53:45,566 DEBUG  [main] EnumType: Using NAMED-based conversion for Enum com.sf.back.entities.Kind
2020-11-25 20:53:45,577 TRACE  [main] TypeConfiguration$Scope: Handling #sessionFactoryCreated from [org.hibernate.internal.SessionFactoryImpl@2ffa8ce5] for TypeConfiguration
2020-11-25 20:53:45,899 WARN   [main] JpaBaseConfiguration$JpaWebConfiguration: spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2020-11-25 20:53:46,024 WARN   [main] GenericWebApplicationContext: Exception encountered during context initialization - cancelling refresh attempt: org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'groovyMarkupConfigurer' defined in class path resource [org/springframework/boot/autoconfigure/groovy/template/GroovyTemplateAutoConfiguration$GroovyMarkupConfiguration.class]: Invocation of init method failed; nested exception is java.lang.reflect.InaccessibleObjectException: Unable to make jdk.internal.loader.ClassLoaders$AppClassLoader(jdk.internal.loader.ClassLoaders$PlatformClassLoader,jdk.internal.loader.URLClassPath) accessible: module java.base does not "opens jdk.internal.loader" to unnamed module @60fa3495
2020-11-25 20:53:46,026 TRACE  [main] TypeConfiguration$Scope: Handling #sessionFactoryClosed from [org.hibernate.internal.SessionFactoryImpl@2ffa8ce5] for TypeConfiguration
2020-11-25 20:53:46,027 DEBUG  [main] TypeConfiguration$Scope: Un-scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration$Scope@7df7cc64] from SessionFactory [org.hibernate.internal.SessionFactoryImpl@2ffa8ce5]
2020-11-25 20:53:46,038 ERROR  [main] SpringApplication: Application run failed
org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'groovyMarkupConfigurer' defined in class path resource [org/springframework/boot/autoconfigure/groovy/template/GroovyTemplateAutoConfiguration$GroovyMarkupConfiguration.class]: Invocation of init method failed; nested exception is java.lang.reflect.InaccessibleObjectException: Unable to make jdk.internal.loader.ClassLoaders$AppClassLoader(jdk.internal.loader.ClassLoaders$PlatformClassLoader,jdk.internal.loader.URLClassPath) accessible: module java.base does not "opens jdk.internal.loader" to unnamed module @60fa3495
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1803)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:595)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:517)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:323)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:222)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:321)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:202)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(DefaultListableBeanFactory.java:879)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:878)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:550)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:747)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:397)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:315)
	at org.springframework.boot.test.context.SpringBootContextLoader.loadContext(SpringBootContextLoader.java:125)
	at org.springframework.test.context.cache.DefaultCacheAwareContextLoaderDelegate.loadContextInternal(DefaultCacheAwareContextLoaderDelegate.java:99)
	at org.springframework.test.context.cache.DefaultCacheAwareContextLoaderDelegate.loadContext(DefaultCacheAwareContextLoaderDelegate.java:124)
	at org.springframework.test.context.support.DefaultTestContext.getApplicationContext(DefaultTestContext.java:123)
	at org.springframework.test.context.web.ServletTestExecutionListener.setUpRequestContextIfNecessary(ServletTestExecutionListener.java:190)
	at org.springframework.test.context.web.ServletTestExecutionListener.prepareTestInstance(ServletTestExecutionListener.java:132)
	at org.springframework.test.context.TestContextManager.prepareTestInstance(TestContextManager.java:244)
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner.createTest(SpringJUnit4ClassRunner.java:227)
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner$1.runReflectiveCall(SpringJUnit4ClassRunner.java:289)
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner.methodBlock(SpringJUnit4ClassRunner.java:291)
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner.runChild(SpringJUnit4ClassRunner.java:246)
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner.runChild(SpringJUnit4ClassRunner.java:97)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:290)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:71)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:58)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268)
	at org.junit.internal.runners.statements.RunBefores.evaluate(RunBefores.java:26)
	at org.springframework.test.context.junit4.statements.RunBeforeTestClassCallbacks.evaluate(RunBeforeTestClassCallbacks.java:61)
	at org.junit.internal.runners.statements.RunAfters.evaluate(RunAfters.java:27)
	at org.springframework.test.context.junit4.statements.RunAfterTestClassCallbacks.evaluate(RunAfterTestClassCallbacks.java:70)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:363)
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner.run(SpringJUnit4ClassRunner.java:190)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:137)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:115)
	at org.junit.vintage.engine.execution.RunnerExecutor.execute(RunnerExecutor.java:40)
	at java.base/java.util.stream.ForEachOps$ForEachOp$OfRef.accept(ForEachOps.java:183)
	at java.base/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:195)
	at java.base/java.util.Iterator.forEachRemaining(Iterator.java:133)
	at java.base/java.util.Spliterators$IteratorSpliterator.forEachRemaining(Spliterators.java:1801)
	at java.base/java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:484)
	at java.base/java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:474)
	at java.base/java.util.stream.ForEachOps$ForEachOp.evaluateSequential(ForEachOps.java:150)
	at java.base/java.util.stream.ForEachOps$ForEachOp$OfRef.evaluateSequential(ForEachOps.java:173)
	at java.base/java.util.stream.AbstractPipeline.evaluate(AbstractPipeline.java:234)
	at java.base/java.util.stream.ReferencePipeline.forEach(ReferencePipeline.java:497)
	at org.junit.vintage.engine.VintageTestEngine.executeAllChildren(VintageTestEngine.java:80)
	at org.junit.vintage.engine.VintageTestEngine.execute(VintageTestEngine.java:71)
	at org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:220)
	at org.junit.platform.launcher.core.DefaultLauncher.lambda$execute$6(DefaultLauncher.java:188)
	at org.junit.platform.launcher.core.DefaultLauncher.withInterceptedStreams(DefaultLauncher.java:202)
	at org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:181)
	at org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:128)
	at org.apache.maven.surefire.junitplatform.JUnitPlatformProvider.invokeAllTests(JUnitPlatformProvider.java:150)
	at org.apache.maven.surefire.junitplatform.JUnitPlatformProvider.invoke(JUnitPlatformProvider.java:124)
	at org.apache.maven.surefire.booter.ForkedBooter.invokeProviderInSameClassLoader(ForkedBooter.java:384)
	at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:345)
	at org.apache.maven.surefire.booter.ForkedBooter.execute(ForkedBooter.java:126)
	at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:418)
Caused by: java.lang.reflect.InaccessibleObjectException: Unable to make jdk.internal.loader.ClassLoaders$AppClassLoader(jdk.internal.loader.ClassLoaders$PlatformClassLoader,jdk.internal.loader.URLClassPath) accessible: module java.base does not "opens jdk.internal.loader" to unnamed module @60fa3495
	at java.base/java.lang.reflect.AccessibleObject.checkCanSetAccessible(AccessibleObject.java:344)
	at java.base/java.lang.reflect.AccessibleObject.checkCanSetAccessible(AccessibleObject.java:284)
	at java.base/java.lang.reflect.Constructor.checkCanSetAccessible(Constructor.java:189)
	at java.base/java.lang.reflect.Constructor.setAccessible(Constructor.java:182)
	at org.codehaus.groovy.reflection.CachedConstructor$1.run(CachedConstructor.java:44)
	at java.base/java.security.AccessController.doPrivileged(AccessController.java:312)
	at org.codehaus.groovy.reflection.CachedConstructor.<init>(CachedConstructor.java:42)
	at org.codehaus.groovy.reflection.CachedClass$2.initValue(CachedClass.java:79)
	at org.codehaus.groovy.reflection.CachedClass$2.initValue(CachedClass.java:69)
	at org.codehaus.groovy.util.LazyReference.getLocked(LazyReference.java:49)
	at org.codehaus.groovy.util.LazyReference.get(LazyReference.java:36)
	at org.codehaus.groovy.reflection.CachedClass.getConstructors(CachedClass.java:268)
	at groovy.lang.MetaClassImpl.<init>(MetaClassImpl.java:218)
	at groovy.lang.MetaClassImpl.<init>(MetaClassImpl.java:228)
	at groovy.lang.MetaClassRegistry$MetaClassCreationHandle.createNormalMetaClass(MetaClassRegistry.java:171)
	at groovy.lang.MetaClassRegistry$MetaClassCreationHandle.createWithCustomLookup(MetaClassRegistry.java:161)
	at groovy.lang.MetaClassRegistry$MetaClassCreationHandle.create(MetaClassRegistry.java:144)
	at org.codehaus.groovy.reflection.ClassInfo.getMetaClassUnderLock(ClassInfo.java:253)
	at org.codehaus.groovy.reflection.ClassInfo.getMetaClass(ClassInfo.java:285)
	at org.codehaus.groovy.reflection.ClassInfo.getMetaClass(ClassInfo.java:295)
	at org.codehaus.groovy.runtime.metaclass.MetaClassRegistryImpl.getMetaClass(MetaClassRegistryImpl.java:261)
	at org.codehaus.groovy.runtime.InvokerHelper.getMetaClass(InvokerHelper.java:873)
	at org.codehaus.groovy.runtime.InvokerHelper.invokePojoMethod(InvokerHelper.java:906)
	at org.codehaus.groovy.runtime.InvokerHelper.invokeMethod(InvokerHelper.java:898)
	at org.codehaus.groovy.runtime.typehandling.DefaultTypeTransformation.castToBoolean(DefaultTypeTransformation.java:185)
	at org.codehaus.groovy.runtime.typehandling.DefaultTypeTransformation.booleanUnbox(DefaultTypeTransformation.java:74)
	at org.codehaus.groovy.control.customizers.ASTTransformationCustomizer.findASTTranformationClass(ASTTransformationCustomizer.groovy:209)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:567)
	at org.codehaus.groovy.reflection.CachedMethod.invoke(CachedMethod.java:93)
	at org.codehaus.groovy.runtime.callsite.StaticMetaMethodSite$StaticMetaMethodSiteNoUnwrapNoCoerce.invoke(StaticMetaMethodSite.java:151)
	at org.codehaus.groovy.runtime.callsite.StaticMetaMethodSite.callStatic(StaticMetaMethodSite.java:102)
	at org.codehaus.groovy.runtime.callsite.AbstractCallSite.callStatic(AbstractCallSite.java:214)
	at org.codehaus.groovy.control.customizers.ASTTransformationCustomizer.findPhase(ASTTransformationCustomizer.groovy:226)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:567)
	at org.codehaus.groovy.reflection.CachedMethod.invoke(CachedMethod.java:93)
	at org.codehaus.groovy.runtime.callsite.StaticMetaMethodSite$StaticMetaMethodSiteNoUnwrapNoCoerce.invoke(StaticMetaMethodSite.java:151)
	at org.codehaus.groovy.runtime.callsite.StaticMetaMethodSite.callStatic(StaticMetaMethodSite.java:102)
	at org.codehaus.groovy.runtime.callsite.AbstractCallSite.callStatic(AbstractCallSite.java:214)
	at org.codehaus.groovy.control.customizers.ASTTransformationCustomizer.<init>(ASTTransformationCustomizer.groovy:180)
	at org.codehaus.groovy.control.customizers.ASTTransformationCustomizer.<init>(ASTTransformationCustomizer.groovy:188)
	at groovy.text.markup.MarkupTemplateEngine.<init>(MarkupTemplateEngine.java:94)
	at org.springframework.web.servlet.view.groovy.GroovyMarkupConfigurer.createTemplateEngine(GroovyMarkupConfigurer.java:160)
	at org.springframework.web.servlet.view.groovy.GroovyMarkupConfigurer.afterPropertiesSet(GroovyMarkupConfigurer.java:153)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1862)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1799)
	... 62 common frames omitted
2020-11-25 20:53:46,039 ERROR  [main] TestContextManager: Caught exception while allowing TestExecutionListener [org.springframework.test.context.web.ServletTestExecutionListener@701dbfbd] to prepare test instance [com.sf.service.ProblemServiceTest@46f31564]
java.lang.IllegalStateException: Failed to load ApplicationContext
	at org.springframework.test.context.cache.DefaultCacheAwareContextLoaderDelegate.loadContext(DefaultCacheAwareContextLoaderDelegate.java:132)
	at org.springframework.test.context.support.DefaultTestContext.getApplicationContext(DefaultTestContext.java:123)
	at org.springframework.test.context.web.ServletTestExecutionListener.setUpRequestContextIfNecessary(ServletTestExecutionListener.java:190)
	at org.springframework.test.context.web.ServletTestExecutionListener.prepareTestInstance(ServletTestExecutionListener.java:132)
	at org.springframework.test.context.TestContextManager.prepareTestInstance(TestContextManager.java:244)
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner.createTest(SpringJUnit4ClassRunner.java:227)
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner$1.runReflectiveCall(SpringJUnit4ClassRunner.java:289)
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner.methodBlock(SpringJUnit4ClassRunner.java:291)
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner.runChild(SpringJUnit4ClassRunner.java:246)
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner.runChild(SpringJUnit4ClassRunner.java:97)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:290)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:71)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:58)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268)
	at org.junit.internal.runners.statements.RunBefores.evaluate(RunBefores.java:26)
	at org.springframework.test.context.junit4.statements.RunBeforeTestClassCallbacks.evaluate(RunBeforeTestClassCallbacks.java:61)
	at org.junit.internal.runners.statements.RunAfters.evaluate(RunAfters.java:27)
	at org.springframework.test.context.junit4.statements.RunAfterTestClassCallbacks.evaluate(RunAfterTestClassCallbacks.java:70)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:363)
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner.run(SpringJUnit4ClassRunner.java:190)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:137)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:115)
	at org.junit.vintage.engine.execution.RunnerExecutor.execute(RunnerExecutor.java:40)
	at java.base/java.util.stream.ForEachOps$ForEachOp$OfRef.accept(ForEachOps.java:183)
	at java.base/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:195)
	at java.base/java.util.Iterator.forEachRemaining(Iterator.java:133)
	at java.base/java.util.Spliterators$IteratorSpliterator.forEachRemaining(Spliterators.java:1801)
	at java.base/java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:484)
	at java.base/java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:474)
	at java.base/java.util.stream.ForEachOps$ForEachOp.evaluateSequential(ForEachOps.java:150)
	at java.base/java.util.stream.ForEachOps$ForEachOp$OfRef.evaluateSequential(ForEachOps.java:173)
	at java.base/java.util.stream.AbstractPipeline.evaluate(AbstractPipeline.java:234)
	at java.base/java.util.stream.ReferencePipeline.forEach(ReferencePipeline.java:497)
	at org.junit.vintage.engine.VintageTestEngine.executeAllChildren(VintageTestEngine.java:80)
	at org.junit.vintage.engine.VintageTestEngine.execute(VintageTestEngine.java:71)
	at org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:220)
	at org.junit.platform.launcher.core.DefaultLauncher.lambda$execute$6(DefaultLauncher.java:188)
	at org.junit.platform.launcher.core.DefaultLauncher.withInterceptedStreams(DefaultLauncher.java:202)
	at org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:181)
	at org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:128)
	at org.apache.maven.surefire.junitplatform.JUnitPlatformProvider.invokeAllTests(JUnitPlatformProvider.java:150)
	at org.apache.maven.surefire.junitplatform.JUnitPlatformProvider.invoke(JUnitPlatformProvider.java:124)
	at org.apache.maven.surefire.booter.ForkedBooter.invokeProviderInSameClassLoader(ForkedBooter.java:384)
	at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:345)
	at org.apache.maven.surefire.booter.ForkedBooter.execute(ForkedBooter.java:126)
	at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:418)
Caused by: org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'groovyMarkupConfigurer' defined in class path resource [org/springframework/boot/autoconfigure/groovy/template/GroovyTemplateAutoConfiguration$GroovyMarkupConfiguration.class]: Invocation of init method failed; nested exception is java.lang.reflect.InaccessibleObjectException: Unable to make jdk.internal.loader.ClassLoaders$AppClassLoader(jdk.internal.loader.ClassLoaders$PlatformClassLoader,jdk.internal.loader.URLClassPath) accessible: module java.base does not "opens jdk.internal.loader" to unnamed module @60fa3495
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1803)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:595)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:517)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:323)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:222)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:321)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:202)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(DefaultListableBeanFactory.java:879)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:878)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:550)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:747)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:397)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:315)
	at org.springframework.boot.test.context.SpringBootContextLoader.loadContext(SpringBootContextLoader.java:125)
	at org.springframework.test.context.cache.DefaultCacheAwareContextLoaderDelegate.loadContextInternal(DefaultCacheAwareContextLoaderDelegate.java:99)
	at org.springframework.test.context.cache.DefaultCacheAwareContextLoaderDelegate.loadContext(DefaultCacheAwareContextLoaderDelegate.java:124)
	... 47 common frames omitted
Caused by: java.lang.reflect.InaccessibleObjectException: Unable to make jdk.internal.loader.ClassLoaders$AppClassLoader(jdk.internal.loader.ClassLoaders$PlatformClassLoader,jdk.internal.loader.URLClassPath) accessible: module java.base does not "opens jdk.internal.loader" to unnamed module @60fa3495
	at java.base/java.lang.reflect.AccessibleObject.checkCanSetAccessible(AccessibleObject.java:344)
	at java.base/java.lang.reflect.AccessibleObject.checkCanSetAccessible(AccessibleObject.java:284)
	at java.base/java.lang.reflect.Constructor.checkCanSetAccessible(Constructor.java:189)
	at java.base/java.lang.reflect.Constructor.setAccessible(Constructor.java:182)
	at org.codehaus.groovy.reflection.CachedConstructor$1.run(CachedConstructor.java:44)
	at java.base/java.security.AccessController.doPrivileged(AccessController.java:312)
	at org.codehaus.groovy.reflection.CachedConstructor.<init>(CachedConstructor.java:42)
	at org.codehaus.groovy.reflection.CachedClass$2.initValue(CachedClass.java:79)
	at org.codehaus.groovy.reflection.CachedClass$2.initValue(CachedClass.java:69)
	at org.codehaus.groovy.util.LazyReference.getLocked(LazyReference.java:49)
	at org.codehaus.groovy.util.LazyReference.get(LazyReference.java:36)
	at org.codehaus.groovy.reflection.CachedClass.getConstructors(CachedClass.java:268)
	at groovy.lang.MetaClassImpl.<init>(MetaClassImpl.java:218)
	at groovy.lang.MetaClassImpl.<init>(MetaClassImpl.java:228)
	at groovy.lang.MetaClassRegistry$MetaClassCreationHandle.createNormalMetaClass(MetaClassRegistry.java:171)
	at groovy.lang.MetaClassRegistry$MetaClassCreationHandle.createWithCustomLookup(MetaClassRegistry.java:161)
	at groovy.lang.MetaClassRegistry$MetaClassCreationHandle.create(MetaClassRegistry.java:144)
	at org.codehaus.groovy.reflection.ClassInfo.getMetaClassUnderLock(ClassInfo.java:253)
	at org.codehaus.groovy.reflection.ClassInfo.getMetaClass(ClassInfo.java:285)
	at org.codehaus.groovy.reflection.ClassInfo.getMetaClass(ClassInfo.java:295)
	at org.codehaus.groovy.runtime.metaclass.MetaClassRegistryImpl.getMetaClass(MetaClassRegistryImpl.java:261)
	at org.codehaus.groovy.runtime.InvokerHelper.getMetaClass(InvokerHelper.java:873)
	at org.codehaus.groovy.runtime.InvokerHelper.invokePojoMethod(InvokerHelper.java:906)
	at org.codehaus.groovy.runtime.InvokerHelper.invokeMethod(InvokerHelper.java:898)
	at org.codehaus.groovy.runtime.typehandling.DefaultTypeTransformation.castToBoolean(DefaultTypeTransformation.java:185)
	at org.codehaus.groovy.runtime.typehandling.DefaultTypeTransformation.booleanUnbox(DefaultTypeTransformation.java:74)
	at org.codehaus.groovy.control.customizers.ASTTransformationCustomizer.findASTTranformationClass(ASTTransformationCustomizer.groovy:209)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:567)
	at org.codehaus.groovy.reflection.CachedMethod.invoke(CachedMethod.java:93)
	at org.codehaus.groovy.runtime.callsite.StaticMetaMethodSite$StaticMetaMethodSiteNoUnwrapNoCoerce.invoke(StaticMetaMethodSite.java:151)
	at org.codehaus.groovy.runtime.callsite.StaticMetaMethodSite.callStatic(StaticMetaMethodSite.java:102)
	at org.codehaus.groovy.runtime.callsite.AbstractCallSite.callStatic(AbstractCallSite.java:214)
	at org.codehaus.groovy.control.customizers.ASTTransformationCustomizer.findPhase(ASTTransformationCustomizer.groovy:226)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:567)
	at org.codehaus.groovy.reflection.CachedMethod.invoke(CachedMethod.java:93)
	at org.codehaus.groovy.runtime.callsite.StaticMetaMethodSite$StaticMetaMethodSiteNoUnwrapNoCoerce.invoke(StaticMetaMethodSite.java:151)
	at org.codehaus.groovy.runtime.callsite.StaticMetaMethodSite.callStatic(StaticMetaMethodSite.java:102)
	at org.codehaus.groovy.runtime.callsite.AbstractCallSite.callStatic(AbstractCallSite.java:214)
	at org.codehaus.groovy.control.customizers.ASTTransformationCustomizer.<init>(ASTTransformationCustomizer.groovy:180)
	at org.codehaus.groovy.control.customizers.ASTTransformationCustomizer.<init>(ASTTransformationCustomizer.groovy:188)
	at groovy.text.markup.MarkupTemplateEngine.<init>(MarkupTemplateEngine.java:94)
	at org.springframework.web.servlet.view.groovy.GroovyMarkupConfigurer.createTemplateEngine(GroovyMarkupConfigurer.java:160)
	at org.springframework.web.servlet.view.groovy.GroovyMarkupConfigurer.afterPropertiesSet(GroovyMarkupConfigurer.java:153)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1862)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1799)
	... 62 common frames omitted
2020-11-25 20:53:46,530 DEBUG  [main] BasicTypeRegistry: Adding type registration boolean -> org.hibernate.type.BooleanType@ff2266c
2020-11-25 20:53:46,533 DEBUG  [main] BasicTypeRegistry: Adding type registration boolean -> org.hibernate.type.BooleanType@ff2266c
2020-11-25 20:53:46,533 DEBUG  [main] BasicTypeRegistry: Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@ff2266c
2020-11-25 20:53:46,534 DEBUG  [main] BasicTypeRegistry: Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@1d585fb
2020-11-25 20:53:46,534 DEBUG  [main] BasicTypeRegistry: Adding type registration true_false -> org.hibernate.type.TrueFalseType@7c8f047a
2020-11-25 20:53:46,535 DEBUG  [main] BasicTypeRegistry: Adding type registration yes_no -> org.hibernate.type.YesNoType@d949bc4
2020-11-25 20:53:46,535 DEBUG  [main] BasicTypeRegistry: Adding type registration byte -> org.hibernate.type.ByteType@29c25bbc
2020-11-25 20:53:46,535 DEBUG  [main] BasicTypeRegistry: Adding type registration byte -> org.hibernate.type.ByteType@29c25bbc
2020-11-25 20:53:46,536 DEBUG  [main] BasicTypeRegistry: Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@29c25bbc
2020-11-25 20:53:46,536 DEBUG  [main] BasicTypeRegistry: Adding type registration character -> org.hibernate.type.CharacterType@403f7aa2
2020-11-25 20:53:46,536 DEBUG  [main] BasicTypeRegistry: Adding type registration char -> org.hibernate.type.CharacterType@403f7aa2
2020-11-25 20:53:46,537 DEBUG  [main] BasicTypeRegistry: Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@403f7aa2
2020-11-25 20:53:46,537 DEBUG  [main] BasicTypeRegistry: Adding type registration short -> org.hibernate.type.ShortType@38cb1606
2020-11-25 20:53:46,537 DEBUG  [main] BasicTypeRegistry: Adding type registration short -> org.hibernate.type.ShortType@38cb1606
2020-11-25 20:53:46,538 DEBUG  [main] BasicTypeRegistry: Adding type registration java.lang.Short -> org.hibernate.type.ShortType@38cb1606
2020-11-25 20:53:46,538 DEBUG  [main] BasicTypeRegistry: Adding type registration integer -> org.hibernate.type.IntegerType@5d3b6585
2020-11-25 20:53:46,539 DEBUG  [main] BasicTypeRegistry: Adding type registration int -> org.hibernate.type.IntegerType@5d3b6585
2020-11-25 20:53:46,539 DEBUG  [main] BasicTypeRegistry: Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@5d3b6585
2020-11-25 20:53:46,539 DEBUG  [main] BasicTypeRegistry: Adding type registration long -> org.hibernate.type.LongType@4fea5ee0
2020-11-25 20:53:46,540 DEBUG  [main] BasicTypeRegistry: Adding type registration long -> org.hibernate.type.LongType@4fea5ee0
2020-11-25 20:53:46,540 DEBUG  [main] BasicTypeRegistry: Adding type registration java.lang.Long -> org.hibernate.type.LongType@4fea5ee0
2020-11-25 20:53:46,540 DEBUG  [main] BasicTypeRegistry: Adding type registration float -> org.hibernate.type.FloatType@7b3085a3
2020-11-25 20:53:46,541 DEBUG  [main] BasicTypeRegistry: Adding type registration float -> org.hibernate.type.FloatType@7b3085a3
2020-11-25 20:53:46,541 DEBUG  [main] BasicTypeRegistry: Adding type registration java.lang.Float -> org.hibernate.type.FloatType@7b3085a3
2020-11-25 20:53:46,541 DEBUG  [main] BasicTypeRegistry: Adding type registration double -> org.hibernate.type.DoubleType@5a7a6d34
2020-11-25 20:53:46,542 DEBUG  [main] BasicTypeRegistry: Adding type registration double -> org.hibernate.type.DoubleType@5a7a6d34
2020-11-25 20:53:46,542 DEBUG  [main] BasicTypeRegistry: Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@5a7a6d34
2020-11-25 20:53:46,542 DEBUG  [main] BasicTypeRegistry: Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@5ae66c98
2020-11-25 20:53:46,542 DEBUG  [main] BasicTypeRegistry: Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@5ae66c98
2020-11-25 20:53:46,542 DEBUG  [main] BasicTypeRegistry: Adding type registration big_integer -> org.hibernate.type.BigIntegerType@223cbf0d
2020-11-25 20:53:46,542 DEBUG  [main] BasicTypeRegistry: Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@223cbf0d
2020-11-25 20:53:46,542 DEBUG  [main] BasicTypeRegistry: Adding type registration string -> org.hibernate.type.StringType@4f581211
2020-11-25 20:53:46,543 DEBUG  [main] BasicTypeRegistry: Adding type registration java.lang.String -> org.hibernate.type.StringType@4f581211
2020-11-25 20:53:46,543 DEBUG  [main] BasicTypeRegistry: Adding type registration nstring -> org.hibernate.type.StringNVarcharType@6697f3d
2020-11-25 20:53:46,543 DEBUG  [main] BasicTypeRegistry: Adding type registration ncharacter -> org.hibernate.type.CharacterNCharType@f1d1463
2020-11-25 20:53:46,543 DEBUG  [main] BasicTypeRegistry: Adding type registration url -> org.hibernate.type.UrlType@44ddb518
2020-11-25 20:53:46,543 DEBUG  [main] BasicTypeRegistry: Adding type registration java.net.URL -> org.hibernate.type.UrlType@44ddb518
2020-11-25 20:53:46,543 DEBUG  [main] BasicTypeRegistry: Adding type registration Duration -> org.hibernate.type.DurationType@49e0b123
2020-11-25 20:53:46,543 DEBUG  [main] BasicTypeRegistry: Adding type registration java.time.Duration -> org.hibernate.type.DurationType@49e0b123
2020-11-25 20:53:46,544 DEBUG  [main] BasicTypeRegistry: Adding type registration Instant -> org.hibernate.type.InstantType@40a28bda
2020-11-25 20:53:46,544 DEBUG  [main] BasicTypeRegistry: Adding type registration java.time.Instant -> org.hibernate.type.InstantType@40a28bda
2020-11-25 20:53:46,544 DEBUG  [main] BasicTypeRegistry: Adding type registration LocalDateTime -> org.hibernate.type.LocalDateTimeType@33430fc
2020-11-25 20:53:46,544 DEBUG  [main] BasicTypeRegistry: Adding type registration java.time.LocalDateTime -> org.hibernate.type.LocalDateTimeType@33430fc
2020-11-25 20:53:46,544 DEBUG  [main] BasicTypeRegistry: Adding type registration LocalDate -> org.hibernate.type.LocalDateType@d7055be
2020-11-25 20:53:46,544 DEBUG  [main] BasicTypeRegistry: Adding type registration java.time.LocalDate -> org.hibernate.type.LocalDateType@d7055be
2020-11-25 20:53:46,545 DEBUG  [main] BasicTypeRegistry: Adding type registration LocalTime -> org.hibernate.type.LocalTimeType@3c7d8a4
2020-11-25 20:53:46,545 DEBUG  [main] BasicTypeRegistry: Adding type registration java.time.LocalTime -> org.hibernate.type.LocalTimeType@3c7d8a4
2020-11-25 20:53:46,545 DEBUG  [main] BasicTypeRegistry: Adding type registration OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@7a117dc2
2020-11-25 20:53:46,545 DEBUG  [main] BasicTypeRegistry: Adding type registration java.time.OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@7a117dc2
2020-11-25 20:53:46,545 DEBUG  [main] BasicTypeRegistry: Adding type registration OffsetTime -> org.hibernate.type.OffsetTimeType@3c64339f
2020-11-25 20:53:46,545 DEBUG  [main] BasicTypeRegistry: Adding type registration java.time.OffsetTime -> org.hibernate.type.OffsetTimeType@3c64339f
2020-11-25 20:53:46,545 DEBUG  [main] BasicTypeRegistry: Adding type registration ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@30c8c6ab
2020-11-25 20:53:46,546 DEBUG  [main] BasicTypeRegistry: Adding type registration java.time.ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@30c8c6ab
2020-11-25 20:53:46,546 DEBUG  [main] BasicTypeRegistry: Adding type registration date -> org.hibernate.type.DateType@61c5fd78
2020-11-25 20:53:46,546 DEBUG  [main] BasicTypeRegistry: Adding type registration java.sql.Date -> org.hibernate.type.DateType@61c5fd78
2020-11-25 20:53:46,546 DEBUG  [main] BasicTypeRegistry: Adding type registration time -> org.hibernate.type.TimeType@77856cc5
2020-11-25 20:53:46,546 DEBUG  [main] BasicTypeRegistry: Adding type registration java.sql.Time -> org.hibernate.type.TimeType@77856cc5
2020-11-25 20:53:46,546 DEBUG  [main] BasicTypeRegistry: Adding type registration timestamp -> org.hibernate.type.TimestampType@12166229
2020-11-25 20:53:46,546 DEBUG  [main] BasicTypeRegistry: Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@12166229
2020-11-25 20:53:46,547 DEBUG  [main] BasicTypeRegistry: Adding type registration java.util.Date -> org.hibernate.type.TimestampType@12166229
2020-11-25 20:53:46,547 DEBUG  [main] BasicTypeRegistry: Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@2b4829aa
2020-11-25 20:53:46,547 DEBUG  [main] BasicTypeRegistry: Adding type registration calendar -> org.hibernate.type.CalendarType@3ec082a1
2020-11-25 20:53:46,547 DEBUG  [main] BasicTypeRegistry: Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@3ec082a1
2020-11-25 20:53:46,547 DEBUG  [main] BasicTypeRegistry: Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@3ec082a1
2020-11-25 20:53:46,548 DEBUG  [main] BasicTypeRegistry: Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@429f0ca8
2020-11-25 20:53:46,548 DEBUG  [main] BasicTypeRegistry: Adding type registration locale -> org.hibernate.type.LocaleType@11c3ce6a
2020-11-25 20:53:46,548 DEBUG  [main] BasicTypeRegistry: Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@11c3ce6a
2020-11-25 20:53:46,548 DEBUG  [main] BasicTypeRegistry: Adding type registration currency -> org.hibernate.type.CurrencyType@28519bfb
2020-11-25 20:53:46,548 DEBUG  [main] BasicTypeRegistry: Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@28519bfb
2020-11-25 20:53:46,548 DEBUG  [main] BasicTypeRegistry: Adding type registration timezone -> org.hibernate.type.TimeZoneType@7aa15a80
2020-11-25 20:53:46,548 DEBUG  [main] BasicTypeRegistry: Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@7aa15a80
2020-11-25 20:53:46,549 DEBUG  [main] BasicTypeRegistry: Adding type registration class -> org.hibernate.type.ClassType@48d5ca17
2020-11-25 20:53:46,549 DEBUG  [main] BasicTypeRegistry: Adding type registration java.lang.Class -> org.hibernate.type.ClassType@48d5ca17
2020-11-25 20:53:46,549 DEBUG  [main] BasicTypeRegistry: Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@79b8ecb
2020-11-25 20:53:46,549 DEBUG  [main] BasicTypeRegistry: Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@79b8ecb
2020-11-25 20:53:46,549 DEBUG  [main] BasicTypeRegistry: Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@c0013b8
2020-11-25 20:53:46,549 DEBUG  [main] BasicTypeRegistry: Adding type registration binary -> org.hibernate.type.BinaryType@2a42019a
2020-11-25 20:53:46,549 DEBUG  [main] BasicTypeRegistry: Adding type registration byte[] -> org.hibernate.type.BinaryType@2a42019a
2020-11-25 20:53:46,550 DEBUG  [main] BasicTypeRegistry: Adding type registration [B -> org.hibernate.type.BinaryType@2a42019a
2020-11-25 20:53:46,550 DEBUG  [main] BasicTypeRegistry: Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@495da9a7
2020-11-25 20:53:46,550 DEBUG  [main] BasicTypeRegistry: Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@495da9a7
2020-11-25 20:53:46,550 DEBUG  [main] BasicTypeRegistry: Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@495da9a7
2020-11-25 20:53:46,550 DEBUG  [main] BasicTypeRegistry: Adding type registration row_version -> org.hibernate.type.RowVersionType@35becbd4
2020-11-25 20:53:46,550 DEBUG  [main] BasicTypeRegistry: Adding type registration image -> org.hibernate.type.ImageType@30fa8a6b
2020-11-25 20:53:46,550 DEBUG  [main] BasicTypeRegistry: Adding type registration characters -> org.hibernate.type.CharArrayType@4c8d45cf
2020-11-25 20:53:46,550 DEBUG  [main] BasicTypeRegistry: Adding type registration char[] -> org.hibernate.type.CharArrayType@4c8d45cf
2020-11-25 20:53:46,551 DEBUG  [main] BasicTypeRegistry: Adding type registration [C -> org.hibernate.type.CharArrayType@4c8d45cf
2020-11-25 20:53:46,551 DEBUG  [main] BasicTypeRegistry: Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@5b490d5e
2020-11-25 20:53:46,551 DEBUG  [main] BasicTypeRegistry: Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@5b490d5e
2020-11-25 20:53:46,551 DEBUG  [main] BasicTypeRegistry: Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@5b490d5e
2020-11-25 20:53:46,551 DEBUG  [main] BasicTypeRegistry: Adding type registration text -> org.hibernate.type.TextType@18b04526
2020-11-25 20:53:46,551 DEBUG  [main] BasicTypeRegistry: Adding type registration ntext -> org.hibernate.type.NTextType@246df37b
2020-11-25 20:53:46,551 DEBUG  [main] BasicTypeRegistry: Adding type registration blob -> org.hibernate.type.BlobType@56881196
2020-11-25 20:53:46,552 DEBUG  [main] BasicTypeRegistry: Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@56881196
2020-11-25 20:53:46,552 DEBUG  [main] BasicTypeRegistry: Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@131c0b6f
2020-11-25 20:53:46,552 DEBUG  [main] BasicTypeRegistry: Adding type registration clob -> org.hibernate.type.ClobType@7fc1fd31
2020-11-25 20:53:46,553 DEBUG  [main] BasicTypeRegistry: Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@7fc1fd31
2020-11-25 20:53:46,553 DEBUG  [main] BasicTypeRegistry: Adding type registration nclob -> org.hibernate.type.NClobType@70777a65
2020-11-25 20:53:46,553 DEBUG  [main] BasicTypeRegistry: Adding type registration java.sql.NClob -> org.hibernate.type.NClobType@70777a65
2020-11-25 20:53:46,553 DEBUG  [main] BasicTypeRegistry: Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@2f6f4ac4
2020-11-25 20:53:46,554 DEBUG  [main] BasicTypeRegistry: Adding type registration materialized_nclob -> org.hibernate.type.MaterializedNClobType@7d685f4e
2020-11-25 20:53:46,554 DEBUG  [main] BasicTypeRegistry: Adding type registration serializable -> org.hibernate.type.SerializableType@319aa9ee
2020-11-25 20:53:46,554 DEBUG  [main] BasicTypeRegistry: Adding type registration object -> org.hibernate.type.ObjectType@54234569
2020-11-25 20:53:46,554 DEBUG  [main] BasicTypeRegistry: Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@54234569
2020-11-25 20:53:46,554 DEBUG  [main] BasicTypeRegistry: Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@39383f9c
2020-11-25 20:53:46,554 DEBUG  [main] BasicTypeRegistry: Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@2f9404a7
2020-11-25 20:53:46,554 DEBUG  [main] BasicTypeRegistry: Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@273cefd5
2020-11-25 20:53:46,555 DEBUG  [main] BasicTypeRegistry: Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@2347ca7a
2020-11-25 20:53:46,555 DEBUG  [main] BasicTypeRegistry: Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@5b7bd551
2020-11-25 20:53:46,555 DEBUG  [main] BasicTypeRegistry: Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@54c543a5
2020-11-25 20:53:46,555 DEBUG  [main] BasicTypeRegistry: Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@14c75caf
2020-11-25 20:53:46,555 DEBUG  [main] BasicTypeRegistry: Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@9ce4057
2020-11-25 20:53:46,567 DEBUG  [main] TypeConfiguration$Scope: Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@7677a485] to MetadataBuildingContext [org.hibernate.boot.internal.MetadataBuildingContextRootImpl@88d92e5]
2020-11-25 20:53:46,576 DEBUG  [main] EnumType: Using NAMED-based conversion for Enum com.sf.back.entities.Kind
2020-11-25 20:53:46,578 DEBUG  [main] EnumType: Using NAMED-based conversion for Enum com.sf.back.entities.Kind
2020-11-25 20:53:46,591 DEBUG  [main] TypeConfiguration$Scope: Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@7677a485] to SessionFactoryImpl [org.hibernate.internal.SessionFactoryImpl@6f88d401]
2020-11-25 20:53:46,591 DEBUG  [main] EnumType: Using NAMED-based conversion for Enum com.sf.back.entities.Kind
2020-11-25 20:53:46,591 DEBUG  [main] EnumType: Using NAMED-based conversion for Enum com.sf.back.entities.Kind
2020-11-25 20:53:46,611 DEBUG  [main] EnumType: Using NAMED-based conversion for Enum com.sf.back.entities.Kind
2020-11-25 20:53:46,612 DEBUG  [main] EnumType: Using NAMED-based conversion for Enum com.sf.back.entities.Kind
2020-11-25 20:53:46,640 DEBUG  [main] EnumType: Using NAMED-based conversion for Enum com.sf.back.entities.Kind
2020-11-25 20:53:46,640 DEBUG  [main] EnumType: Using NAMED-based conversion for Enum com.sf.back.entities.Kind
2020-11-25 20:53:46,645 DEBUG  [main] EnumType: Using NAMED-based conversion for Enum com.sf.back.entities.Kind
2020-11-25 20:53:46,657 TRACE  [main] TypeConfiguration$Scope: Handling #sessionFactoryCreated from [org.hibernate.internal.SessionFactoryImpl@6f88d401] for TypeConfiguration
2020-11-25 20:53:46,764 WARN   [main] JpaBaseConfiguration$JpaWebConfiguration: spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2020-11-25 20:53:46,914 WARN   [main] GenericWebApplicationContext: Exception encountered during context initialization - cancelling refresh attempt: org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'groovyMarkupConfigurer' defined in class path resource [org/springframework/boot/autoconfigure/groovy/template/GroovyTemplateAutoConfiguration$GroovyMarkupConfiguration.class]: Invocation of init method failed; nested exception is java.lang.reflect.InaccessibleObjectException: Unable to make jdk.internal.loader.ClassLoaders$AppClassLoader(jdk.internal.loader.ClassLoaders$PlatformClassLoader,jdk.internal.loader.URLClassPath) accessible: module java.base does not "opens jdk.internal.loader" to unnamed module @60fa3495
2020-11-25 20:53:46,918 TRACE  [main] TypeConfiguration$Scope: Handling #sessionFactoryClosed from [org.hibernate.internal.SessionFactoryImpl@6f88d401] for TypeConfiguration
2020-11-25 20:53:46,918 DEBUG  [main] TypeConfiguration$Scope: Un-scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration$Scope@46a4370c] from SessionFactory [org.hibernate.internal.SessionFactoryImpl@6f88d401]
2020-11-25 20:53:46,929 ERROR  [main] SpringApplication: Application run failed
org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'groovyMarkupConfigurer' defined in class path resource [org/springframework/boot/autoconfigure/groovy/template/GroovyTemplateAutoConfiguration$GroovyMarkupConfiguration.class]: Invocation of init method failed; nested exception is java.lang.reflect.InaccessibleObjectException: Unable to make jdk.internal.loader.ClassLoaders$AppClassLoader(jdk.internal.loader.ClassLoaders$PlatformClassLoader,jdk.internal.loader.URLClassPath) accessible: module java.base does not "opens jdk.internal.loader" to unnamed module @60fa3495
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1803)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:595)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:517)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:323)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:222)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:321)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:202)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(DefaultListableBeanFactory.java:879)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:878)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:550)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:747)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:397)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:315)
	at org.springframework.boot.test.context.SpringBootContextLoader.loadContext(SpringBootContextLoader.java:125)
	at org.springframework.test.context.cache.DefaultCacheAwareContextLoaderDelegate.loadContextInternal(DefaultCacheAwareContextLoaderDelegate.java:99)
	at org.springframework.test.context.cache.DefaultCacheAwareContextLoaderDelegate.loadContext(DefaultCacheAwareContextLoaderDelegate.java:124)
	at org.springframework.test.context.support.DefaultTestContext.getApplicationContext(DefaultTestContext.java:123)
	at org.springframework.test.context.web.ServletTestExecutionListener.setUpRequestContextIfNecessary(ServletTestExecutionListener.java:190)
	at org.springframework.test.context.web.ServletTestExecutionListener.prepareTestInstance(ServletTestExecutionListener.java:132)
	at org.springframework.test.context.TestContextManager.prepareTestInstance(TestContextManager.java:244)
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner.createTest(SpringJUnit4ClassRunner.java:227)
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner$1.runReflectiveCall(SpringJUnit4ClassRunner.java:289)
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner.methodBlock(SpringJUnit4ClassRunner.java:291)
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner.runChild(SpringJUnit4ClassRunner.java:246)
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner.runChild(SpringJUnit4ClassRunner.java:97)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:290)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:71)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:58)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268)
	at org.junit.internal.runners.statements.RunBefores.evaluate(RunBefores.java:26)
	at org.springframework.test.context.junit4.statements.RunBeforeTestClassCallbacks.evaluate(RunBeforeTestClassCallbacks.java:61)
	at org.junit.internal.runners.statements.RunAfters.evaluate(RunAfters.java:27)
	at org.springframework.test.context.junit4.statements.RunAfterTestClassCallbacks.evaluate(RunAfterTestClassCallbacks.java:70)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:363)
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner.run(SpringJUnit4ClassRunner.java:190)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:137)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:115)
	at org.junit.vintage.engine.execution.RunnerExecutor.execute(RunnerExecutor.java:40)
	at java.base/java.util.stream.ForEachOps$ForEachOp$OfRef.accept(ForEachOps.java:183)
	at java.base/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:195)
	at java.base/java.util.Iterator.forEachRemaining(Iterator.java:133)
	at java.base/java.util.Spliterators$IteratorSpliterator.forEachRemaining(Spliterators.java:1801)
	at java.base/java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:484)
	at java.base/java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:474)
	at java.base/java.util.stream.ForEachOps$ForEachOp.evaluateSequential(ForEachOps.java:150)
	at java.base/java.util.stream.ForEachOps$ForEachOp$OfRef.evaluateSequential(ForEachOps.java:173)
	at java.base/java.util.stream.AbstractPipeline.evaluate(AbstractPipeline.java:234)
	at java.base/java.util.stream.ReferencePipeline.forEach(ReferencePipeline.java:497)
	at org.junit.vintage.engine.VintageTestEngine.executeAllChildren(VintageTestEngine.java:80)
	at org.junit.vintage.engine.VintageTestEngine.execute(VintageTestEngine.java:71)
	at org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:220)
	at org.junit.platform.launcher.core.DefaultLauncher.lambda$execute$6(DefaultLauncher.java:188)
	at org.junit.platform.launcher.core.DefaultLauncher.withInterceptedStreams(DefaultLauncher.java:202)
	at org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:181)
	at org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:128)
	at org.apache.maven.surefire.junitplatform.JUnitPlatformProvider.invokeAllTests(JUnitPlatformProvider.java:150)
	at org.apache.maven.surefire.junitplatform.JUnitPlatformProvider.invoke(JUnitPlatformProvider.java:124)
	at org.apache.maven.surefire.booter.ForkedBooter.invokeProviderInSameClassLoader(ForkedBooter.java:384)
	at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:345)
	at org.apache.maven.surefire.booter.ForkedBooter.execute(ForkedBooter.java:126)
	at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:418)
Caused by: java.lang.reflect.InaccessibleObjectException: Unable to make jdk.internal.loader.ClassLoaders$AppClassLoader(jdk.internal.loader.ClassLoaders$PlatformClassLoader,jdk.internal.loader.URLClassPath) accessible: module java.base does not "opens jdk.internal.loader" to unnamed module @60fa3495
	at java.base/java.lang.reflect.AccessibleObject.checkCanSetAccessible(AccessibleObject.java:344)
	at java.base/java.lang.reflect.AccessibleObject.checkCanSetAccessible(AccessibleObject.java:284)
	at java.base/java.lang.reflect.Constructor.checkCanSetAccessible(Constructor.java:189)
	at java.base/java.lang.reflect.Constructor.setAccessible(Constructor.java:182)
	at org.codehaus.groovy.reflection.CachedConstructor$1.run(CachedConstructor.java:44)
	at java.base/java.security.AccessController.doPrivileged(AccessController.java:312)
	at org.codehaus.groovy.reflection.CachedConstructor.<init>(CachedConstructor.java:42)
	at org.codehaus.groovy.reflection.CachedClass$2.initValue(CachedClass.java:79)
	at org.codehaus.groovy.reflection.CachedClass$2.initValue(CachedClass.java:69)
	at org.codehaus.groovy.util.LazyReference.getLocked(LazyReference.java:49)
	at org.codehaus.groovy.util.LazyReference.get(LazyReference.java:36)
	at org.codehaus.groovy.reflection.CachedClass.getConstructors(CachedClass.java:268)
	at groovy.lang.MetaClassImpl.<init>(MetaClassImpl.java:218)
	at groovy.lang.MetaClassImpl.<init>(MetaClassImpl.java:228)
	at groovy.lang.MetaClassRegistry$MetaClassCreationHandle.createNormalMetaClass(MetaClassRegistry.java:171)
	at groovy.lang.MetaClassRegistry$MetaClassCreationHandle.createWithCustomLookup(MetaClassRegistry.java:161)
	at groovy.lang.MetaClassRegistry$MetaClassCreationHandle.create(MetaClassRegistry.java:144)
	at org.codehaus.groovy.reflection.ClassInfo.getMetaClassUnderLock(ClassInfo.java:253)
	at org.codehaus.groovy.reflection.ClassInfo.getMetaClass(ClassInfo.java:285)
	at org.codehaus.groovy.reflection.ClassInfo.getMetaClass(ClassInfo.java:295)
	at org.codehaus.groovy.runtime.metaclass.MetaClassRegistryImpl.getMetaClass(MetaClassRegistryImpl.java:261)
	at org.codehaus.groovy.runtime.InvokerHelper.getMetaClass(InvokerHelper.java:873)
	at org.codehaus.groovy.runtime.InvokerHelper.invokePojoMethod(InvokerHelper.java:906)
	at org.codehaus.groovy.runtime.InvokerHelper.invokeMethod(InvokerHelper.java:898)
	at org.codehaus.groovy.runtime.typehandling.DefaultTypeTransformation.castToBoolean(DefaultTypeTransformation.java:185)
	at org.codehaus.groovy.runtime.typehandling.DefaultTypeTransformation.booleanUnbox(DefaultTypeTransformation.java:74)
	at org.codehaus.groovy.control.customizers.ASTTransformationCustomizer.findASTTranformationClass(ASTTransformationCustomizer.groovy:209)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:567)
	at org.codehaus.groovy.reflection.CachedMethod.invoke(CachedMethod.java:93)
	at org.codehaus.groovy.runtime.callsite.StaticMetaMethodSite$StaticMetaMethodSiteNoUnwrapNoCoerce.invoke(StaticMetaMethodSite.java:151)
	at org.codehaus.groovy.runtime.callsite.StaticMetaMethodSite.callStatic(StaticMetaMethodSite.java:102)
	at org.codehaus.groovy.runtime.callsite.AbstractCallSite.callStatic(AbstractCallSite.java:214)
	at org.codehaus.groovy.control.customizers.ASTTransformationCustomizer.findPhase(ASTTransformationCustomizer.groovy:226)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:567)
	at org.codehaus.groovy.reflection.CachedMethod.invoke(CachedMethod.java:93)
	at org.codehaus.groovy.runtime.callsite.StaticMetaMethodSite$StaticMetaMethodSiteNoUnwrapNoCoerce.invoke(StaticMetaMethodSite.java:151)
	at org.codehaus.groovy.runtime.callsite.StaticMetaMethodSite.callStatic(StaticMetaMethodSite.java:102)
	at org.codehaus.groovy.runtime.callsite.AbstractCallSite.callStatic(AbstractCallSite.java:214)
	at org.codehaus.groovy.control.customizers.ASTTransformationCustomizer.<init>(ASTTransformationCustomizer.groovy:180)
	at org.codehaus.groovy.control.customizers.ASTTransformationCustomizer.<init>(ASTTransformationCustomizer.groovy:188)
	at groovy.text.markup.MarkupTemplateEngine.<init>(MarkupTemplateEngine.java:94)
	at org.springframework.web.servlet.view.groovy.GroovyMarkupConfigurer.createTemplateEngine(GroovyMarkupConfigurer.java:160)
	at org.springframework.web.servlet.view.groovy.GroovyMarkupConfigurer.afterPropertiesSet(GroovyMarkupConfigurer.java:153)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1862)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1799)
	... 62 common frames omitted
2020-11-25 20:53:46,930 ERROR  [main] TestContextManager: Caught exception while allowing TestExecutionListener [org.springframework.test.context.web.ServletTestExecutionListener@701dbfbd] to prepare test instance [com.sf.service.ProblemServiceTest@1ce803d6]
java.lang.IllegalStateException: Failed to load ApplicationContext
	at org.springframework.test.context.cache.DefaultCacheAwareContextLoaderDelegate.loadContext(DefaultCacheAwareContextLoaderDelegate.java:132)
	at org.springframework.test.context.support.DefaultTestContext.getApplicationContext(DefaultTestContext.java:123)
	at org.springframework.test.context.web.ServletTestExecutionListener.setUpRequestContextIfNecessary(ServletTestExecutionListener.java:190)
	at org.springframework.test.context.web.ServletTestExecutionListener.prepareTestInstance(ServletTestExecutionListener.java:132)
	at org.springframework.test.context.TestContextManager.prepareTestInstance(TestContextManager.java:244)
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner.createTest(SpringJUnit4ClassRunner.java:227)
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner$1.runReflectiveCall(SpringJUnit4ClassRunner.java:289)
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner.methodBlock(SpringJUnit4ClassRunner.java:291)
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner.runChild(SpringJUnit4ClassRunner.java:246)
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner.runChild(SpringJUnit4ClassRunner.java:97)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:290)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:71)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:58)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268)
	at org.junit.internal.runners.statements.RunBefores.evaluate(RunBefores.java:26)
	at org.springframework.test.context.junit4.statements.RunBeforeTestClassCallbacks.evaluate(RunBeforeTestClassCallbacks.java:61)
	at org.junit.internal.runners.statements.RunAfters.evaluate(RunAfters.java:27)
	at org.springframework.test.context.junit4.statements.RunAfterTestClassCallbacks.evaluate(RunAfterTestClassCallbacks.java:70)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:363)
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner.run(SpringJUnit4ClassRunner.java:190)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:137)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:115)
	at org.junit.vintage.engine.execution.RunnerExecutor.execute(RunnerExecutor.java:40)
	at java.base/java.util.stream.ForEachOps$ForEachOp$OfRef.accept(ForEachOps.java:183)
	at java.base/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:195)
	at java.base/java.util.Iterator.forEachRemaining(Iterator.java:133)
	at java.base/java.util.Spliterators$IteratorSpliterator.forEachRemaining(Spliterators.java:1801)
	at java.base/java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:484)
	at java.base/java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:474)
	at java.base/java.util.stream.ForEachOps$ForEachOp.evaluateSequential(ForEachOps.java:150)
	at java.base/java.util.stream.ForEachOps$ForEachOp$OfRef.evaluateSequential(ForEachOps.java:173)
	at java.base/java.util.stream.AbstractPipeline.evaluate(AbstractPipeline.java:234)
	at java.base/java.util.stream.ReferencePipeline.forEach(ReferencePipeline.java:497)
	at org.junit.vintage.engine.VintageTestEngine.executeAllChildren(VintageTestEngine.java:80)
	at org.junit.vintage.engine.VintageTestEngine.execute(VintageTestEngine.java:71)
	at org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:220)
	at org.junit.platform.launcher.core.DefaultLauncher.lambda$execute$6(DefaultLauncher.java:188)
	at org.junit.platform.launcher.core.DefaultLauncher.withInterceptedStreams(DefaultLauncher.java:202)
	at org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:181)
	at org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:128)
	at org.apache.maven.surefire.junitplatform.JUnitPlatformProvider.invokeAllTests(JUnitPlatformProvider.java:150)
	at org.apache.maven.surefire.junitplatform.JUnitPlatformProvider.invoke(JUnitPlatformProvider.java:124)
	at org.apache.maven.surefire.booter.ForkedBooter.invokeProviderInSameClassLoader(ForkedBooter.java:384)
	at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:345)
	at org.apache.maven.surefire.booter.ForkedBooter.execute(ForkedBooter.java:126)
	at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:418)
Caused by: org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'groovyMarkupConfigurer' defined in class path resource [org/springframework/boot/autoconfigure/groovy/template/GroovyTemplateAutoConfiguration$GroovyMarkupConfiguration.class]: Invocation of init method failed; nested exception is java.lang.reflect.InaccessibleObjectException: Unable to make jdk.internal.loader.ClassLoaders$AppClassLoader(jdk.internal.loader.ClassLoaders$PlatformClassLoader,jdk.internal.loader.URLClassPath) accessible: module java.base does not "opens jdk.internal.loader" to unnamed module @60fa3495
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1803)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:595)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:517)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:323)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:222)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:321)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:202)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(DefaultListableBeanFactory.java:879)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:878)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:550)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:747)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:397)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:315)
	at org.springframework.boot.test.context.SpringBootContextLoader.loadContext(SpringBootContextLoader.java:125)
	at org.springframework.test.context.cache.DefaultCacheAwareContextLoaderDelegate.loadContextInternal(DefaultCacheAwareContextLoaderDelegate.java:99)
	at org.springframework.test.context.cache.DefaultCacheAwareContextLoaderDelegate.loadContext(DefaultCacheAwareContextLoaderDelegate.java:124)
	... 47 common frames omitted
Caused by: java.lang.reflect.InaccessibleObjectException: Unable to make jdk.internal.loader.ClassLoaders$AppClassLoader(jdk.internal.loader.ClassLoaders$PlatformClassLoader,jdk.internal.loader.URLClassPath) accessible: module java.base does not "opens jdk.internal.loader" to unnamed module @60fa3495
	at java.base/java.lang.reflect.AccessibleObject.checkCanSetAccessible(AccessibleObject.java:344)
	at java.base/java.lang.reflect.AccessibleObject.checkCanSetAccessible(AccessibleObject.java:284)
	at java.base/java.lang.reflect.Constructor.checkCanSetAccessible(Constructor.java:189)
	at java.base/java.lang.reflect.Constructor.setAccessible(Constructor.java:182)
	at org.codehaus.groovy.reflection.CachedConstructor$1.run(CachedConstructor.java:44)
	at java.base/java.security.AccessController.doPrivileged(AccessController.java:312)
	at org.codehaus.groovy.reflection.CachedConstructor.<init>(CachedConstructor.java:42)
	at org.codehaus.groovy.reflection.CachedClass$2.initValue(CachedClass.java:79)
	at org.codehaus.groovy.reflection.CachedClass$2.initValue(CachedClass.java:69)
	at org.codehaus.groovy.util.LazyReference.getLocked(LazyReference.java:49)
	at org.codehaus.groovy.util.LazyReference.get(LazyReference.java:36)
	at org.codehaus.groovy.reflection.CachedClass.getConstructors(CachedClass.java:268)
	at groovy.lang.MetaClassImpl.<init>(MetaClassImpl.java:218)
	at groovy.lang.MetaClassImpl.<init>(MetaClassImpl.java:228)
	at groovy.lang.MetaClassRegistry$MetaClassCreationHandle.createNormalMetaClass(MetaClassRegistry.java:171)
	at groovy.lang.MetaClassRegistry$MetaClassCreationHandle.createWithCustomLookup(MetaClassRegistry.java:161)
	at groovy.lang.MetaClassRegistry$MetaClassCreationHandle.create(MetaClassRegistry.java:144)
	at org.codehaus.groovy.reflection.ClassInfo.getMetaClassUnderLock(ClassInfo.java:253)
	at org.codehaus.groovy.reflection.ClassInfo.getMetaClass(ClassInfo.java:285)
	at org.codehaus.groovy.reflection.ClassInfo.getMetaClass(ClassInfo.java:295)
	at org.codehaus.groovy.runtime.metaclass.MetaClassRegistryImpl.getMetaClass(MetaClassRegistryImpl.java:261)
	at org.codehaus.groovy.runtime.InvokerHelper.getMetaClass(InvokerHelper.java:873)
	at org.codehaus.groovy.runtime.InvokerHelper.invokePojoMethod(InvokerHelper.java:906)
	at org.codehaus.groovy.runtime.InvokerHelper.invokeMethod(InvokerHelper.java:898)
	at org.codehaus.groovy.runtime.typehandling.DefaultTypeTransformation.castToBoolean(DefaultTypeTransformation.java:185)
	at org.codehaus.groovy.runtime.typehandling.DefaultTypeTransformation.booleanUnbox(DefaultTypeTransformation.java:74)
	at org.codehaus.groovy.control.customizers.ASTTransformationCustomizer.findASTTranformationClass(ASTTransformationCustomizer.groovy:209)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:567)
	at org.codehaus.groovy.reflection.CachedMethod.invoke(CachedMethod.java:93)
	at org.codehaus.groovy.runtime.callsite.StaticMetaMethodSite$StaticMetaMethodSiteNoUnwrapNoCoerce.invoke(StaticMetaMethodSite.java:151)
	at org.codehaus.groovy.runtime.callsite.StaticMetaMethodSite.callStatic(StaticMetaMethodSite.java:102)
	at org.codehaus.groovy.runtime.callsite.AbstractCallSite.callStatic(AbstractCallSite.java:214)
	at org.codehaus.groovy.control.customizers.ASTTransformationCustomizer.findPhase(ASTTransformationCustomizer.groovy:226)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:567)
	at org.codehaus.groovy.reflection.CachedMethod.invoke(CachedMethod.java:93)
	at org.codehaus.groovy.runtime.callsite.StaticMetaMethodSite$StaticMetaMethodSiteNoUnwrapNoCoerce.invoke(StaticMetaMethodSite.java:151)
	at org.codehaus.groovy.runtime.callsite.StaticMetaMethodSite.callStatic(StaticMetaMethodSite.java:102)
	at org.codehaus.groovy.runtime.callsite.AbstractCallSite.callStatic(AbstractCallSite.java:214)
	at org.codehaus.groovy.control.customizers.ASTTransformationCustomizer.<init>(ASTTransformationCustomizer.groovy:180)
	at org.codehaus.groovy.control.customizers.ASTTransformationCustomizer.<init>(ASTTransformationCustomizer.groovy:188)
	at groovy.text.markup.MarkupTemplateEngine.<init>(MarkupTemplateEngine.java:94)
	at org.springframework.web.servlet.view.groovy.GroovyMarkupConfigurer.createTemplateEngine(GroovyMarkupConfigurer.java:160)
	at org.springframework.web.servlet.view.groovy.GroovyMarkupConfigurer.afterPropertiesSet(GroovyMarkupConfigurer.java:153)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1862)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1799)
	... 62 common frames omitted
2020-11-25 20:53:47,438 DEBUG  [main] BasicTypeRegistry: Adding type registration boolean -> org.hibernate.type.BooleanType@ff2266c
2020-11-25 20:53:47,440 DEBUG  [main] BasicTypeRegistry: Adding type registration boolean -> org.hibernate.type.BooleanType@ff2266c
2020-11-25 20:53:47,441 DEBUG  [main] BasicTypeRegistry: Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@ff2266c
2020-11-25 20:53:47,441 DEBUG  [main] BasicTypeRegistry: Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@1d585fb
2020-11-25 20:53:47,441 DEBUG  [main] BasicTypeRegistry: Adding type registration true_false -> org.hibernate.type.TrueFalseType@7c8f047a
2020-11-25 20:53:47,441 DEBUG  [main] BasicTypeRegistry: Adding type registration yes_no -> org.hibernate.type.YesNoType@d949bc4
2020-11-25 20:53:47,441 DEBUG  [main] BasicTypeRegistry: Adding type registration byte -> org.hibernate.type.ByteType@29c25bbc
2020-11-25 20:53:47,441 DEBUG  [main] BasicTypeRegistry: Adding type registration byte -> org.hibernate.type.ByteType@29c25bbc
2020-11-25 20:53:47,441 DEBUG  [main] BasicTypeRegistry: Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@29c25bbc
2020-11-25 20:53:47,441 DEBUG  [main] BasicTypeRegistry: Adding type registration character -> org.hibernate.type.CharacterType@403f7aa2
2020-11-25 20:53:47,441 DEBUG  [main] BasicTypeRegistry: Adding type registration char -> org.hibernate.type.CharacterType@403f7aa2
2020-11-25 20:53:47,441 DEBUG  [main] BasicTypeRegistry: Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@403f7aa2
2020-11-25 20:53:47,441 DEBUG  [main] BasicTypeRegistry: Adding type registration short -> org.hibernate.type.ShortType@38cb1606
2020-11-25 20:53:47,441 DEBUG  [main] BasicTypeRegistry: Adding type registration short -> org.hibernate.type.ShortType@38cb1606
2020-11-25 20:53:47,441 DEBUG  [main] BasicTypeRegistry: Adding type registration java.lang.Short -> org.hibernate.type.ShortType@38cb1606
2020-11-25 20:53:47,441 DEBUG  [main] BasicTypeRegistry: Adding type registration integer -> org.hibernate.type.IntegerType@5d3b6585
2020-11-25 20:53:47,441 DEBUG  [main] BasicTypeRegistry: Adding type registration int -> org.hibernate.type.IntegerType@5d3b6585
2020-11-25 20:53:47,441 DEBUG  [main] BasicTypeRegistry: Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@5d3b6585
2020-11-25 20:53:47,442 DEBUG  [main] BasicTypeRegistry: Adding type registration long -> org.hibernate.type.LongType@4fea5ee0
2020-11-25 20:53:47,442 DEBUG  [main] BasicTypeRegistry: Adding type registration long -> org.hibernate.type.LongType@4fea5ee0
2020-11-25 20:53:47,442 DEBUG  [main] BasicTypeRegistry: Adding type registration java.lang.Long -> org.hibernate.type.LongType@4fea5ee0
2020-11-25 20:53:47,442 DEBUG  [main] BasicTypeRegistry: Adding type registration float -> org.hibernate.type.FloatType@7b3085a3
2020-11-25 20:53:47,442 DEBUG  [main] BasicTypeRegistry: Adding type registration float -> org.hibernate.type.FloatType@7b3085a3
2020-11-25 20:53:47,442 DEBUG  [main] BasicTypeRegistry: Adding type registration java.lang.Float -> org.hibernate.type.FloatType@7b3085a3
2020-11-25 20:53:47,442 DEBUG  [main] BasicTypeRegistry: Adding type registration double -> org.hibernate.type.DoubleType@5a7a6d34
2020-11-25 20:53:47,442 DEBUG  [main] BasicTypeRegistry: Adding type registration double -> org.hibernate.type.DoubleType@5a7a6d34
2020-11-25 20:53:47,442 DEBUG  [main] BasicTypeRegistry: Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@5a7a6d34
2020-11-25 20:53:47,442 DEBUG  [main] BasicTypeRegistry: Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@5ae66c98
2020-11-25 20:53:47,442 DEBUG  [main] BasicTypeRegistry: Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@5ae66c98
2020-11-25 20:53:47,442 DEBUG  [main] BasicTypeRegistry: Adding type registration big_integer -> org.hibernate.type.BigIntegerType@223cbf0d
2020-11-25 20:53:47,442 DEBUG  [main] BasicTypeRegistry: Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@223cbf0d
2020-11-25 20:53:47,442 DEBUG  [main] BasicTypeRegistry: Adding type registration string -> org.hibernate.type.StringType@4f581211
2020-11-25 20:53:47,443 DEBUG  [main] BasicTypeRegistry: Adding type registration java.lang.String -> org.hibernate.type.StringType@4f581211
2020-11-25 20:53:47,443 DEBUG  [main] BasicTypeRegistry: Adding type registration nstring -> org.hibernate.type.StringNVarcharType@6697f3d
2020-11-25 20:53:47,443 DEBUG  [main] BasicTypeRegistry: Adding type registration ncharacter -> org.hibernate.type.CharacterNCharType@f1d1463
2020-11-25 20:53:47,443 DEBUG  [main] BasicTypeRegistry: Adding type registration url -> org.hibernate.type.UrlType@44ddb518
2020-11-25 20:53:47,443 DEBUG  [main] BasicTypeRegistry: Adding type registration java.net.URL -> org.hibernate.type.UrlType@44ddb518
2020-11-25 20:53:47,443 DEBUG  [main] BasicTypeRegistry: Adding type registration Duration -> org.hibernate.type.DurationType@49e0b123
2020-11-25 20:53:47,443 DEBUG  [main] BasicTypeRegistry: Adding type registration java.time.Duration -> org.hibernate.type.DurationType@49e0b123
2020-11-25 20:53:47,444 DEBUG  [main] BasicTypeRegistry: Adding type registration Instant -> org.hibernate.type.InstantType@40a28bda
2020-11-25 20:53:47,444 DEBUG  [main] BasicTypeRegistry: Adding type registration java.time.Instant -> org.hibernate.type.InstantType@40a28bda
2020-11-25 20:53:47,444 DEBUG  [main] BasicTypeRegistry: Adding type registration LocalDateTime -> org.hibernate.type.LocalDateTimeType@33430fc
2020-11-25 20:53:47,444 DEBUG  [main] BasicTypeRegistry: Adding type registration java.time.LocalDateTime -> org.hibernate.type.LocalDateTimeType@33430fc
2020-11-25 20:53:47,444 DEBUG  [main] BasicTypeRegistry: Adding type registration LocalDate -> org.hibernate.type.LocalDateType@d7055be
2020-11-25 20:53:47,444 DEBUG  [main] BasicTypeRegistry: Adding type registration java.time.LocalDate -> org.hibernate.type.LocalDateType@d7055be
2020-11-25 20:53:47,444 DEBUG  [main] BasicTypeRegistry: Adding type registration LocalTime -> org.hibernate.type.LocalTimeType@3c7d8a4
2020-11-25 20:53:47,444 DEBUG  [main] BasicTypeRegistry: Adding type registration java.time.LocalTime -> org.hibernate.type.LocalTimeType@3c7d8a4
2020-11-25 20:53:47,444 DEBUG  [main] BasicTypeRegistry: Adding type registration OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@7a117dc2
2020-11-25 20:53:47,444 DEBUG  [main] BasicTypeRegistry: Adding type registration java.time.OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@7a117dc2
2020-11-25 20:53:47,445 DEBUG  [main] BasicTypeRegistry: Adding type registration OffsetTime -> org.hibernate.type.OffsetTimeType@3c64339f
2020-11-25 20:53:47,445 DEBUG  [main] BasicTypeRegistry: Adding type registration java.time.OffsetTime -> org.hibernate.type.OffsetTimeType@3c64339f
2020-11-25 20:53:47,445 DEBUG  [main] BasicTypeRegistry: Adding type registration ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@30c8c6ab
2020-11-25 20:53:47,445 DEBUG  [main] BasicTypeRegistry: Adding type registration java.time.ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@30c8c6ab
2020-11-25 20:53:47,445 DEBUG  [main] BasicTypeRegistry: Adding type registration date -> org.hibernate.type.DateType@61c5fd78
2020-11-25 20:53:47,445 DEBUG  [main] BasicTypeRegistry: Adding type registration java.sql.Date -> org.hibernate.type.DateType@61c5fd78
2020-11-25 20:53:47,446 DEBUG  [main] BasicTypeRegistry: Adding type registration time -> org.hibernate.type.TimeType@77856cc5
2020-11-25 20:53:47,446 DEBUG  [main] BasicTypeRegistry: Adding type registration java.sql.Time -> org.hibernate.type.TimeType@77856cc5
2020-11-25 20:53:47,446 DEBUG  [main] BasicTypeRegistry: Adding type registration timestamp -> org.hibernate.type.TimestampType@12166229
2020-11-25 20:53:47,446 DEBUG  [main] BasicTypeRegistry: Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@12166229
2020-11-25 20:53:47,446 DEBUG  [main] BasicTypeRegistry: Adding type registration java.util.Date -> org.hibernate.type.TimestampType@12166229
2020-11-25 20:53:47,446 DEBUG  [main] BasicTypeRegistry: Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@2b4829aa
2020-11-25 20:53:47,446 DEBUG  [main] BasicTypeRegistry: Adding type registration calendar -> org.hibernate.type.CalendarType@3ec082a1
2020-11-25 20:53:47,447 DEBUG  [main] BasicTypeRegistry: Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@3ec082a1
2020-11-25 20:53:47,447 DEBUG  [main] BasicTypeRegistry: Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@3ec082a1
2020-11-25 20:53:47,448 DEBUG  [main] BasicTypeRegistry: Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@429f0ca8
2020-11-25 20:53:47,448 DEBUG  [main] BasicTypeRegistry: Adding type registration locale -> org.hibernate.type.LocaleType@11c3ce6a
2020-11-25 20:53:47,448 DEBUG  [main] BasicTypeRegistry: Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@11c3ce6a
2020-11-25 20:53:47,448 DEBUG  [main] BasicTypeRegistry: Adding type registration currency -> org.hibernate.type.CurrencyType@28519bfb
2020-11-25 20:53:47,448 DEBUG  [main] BasicTypeRegistry: Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@28519bfb
2020-11-25 20:53:47,448 DEBUG  [main] BasicTypeRegistry: Adding type registration timezone -> org.hibernate.type.TimeZoneType@7aa15a80
2020-11-25 20:53:47,448 DEBUG  [main] BasicTypeRegistry: Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@7aa15a80
2020-11-25 20:53:47,449 DEBUG  [main] BasicTypeRegistry: Adding type registration class -> org.hibernate.type.ClassType@48d5ca17
2020-11-25 20:53:47,449 DEBUG  [main] BasicTypeRegistry: Adding type registration java.lang.Class -> org.hibernate.type.ClassType@48d5ca17
2020-11-25 20:53:47,449 DEBUG  [main] BasicTypeRegistry: Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@79b8ecb
2020-11-25 20:53:47,449 DEBUG  [main] BasicTypeRegistry: Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@79b8ecb
2020-11-25 20:53:47,449 DEBUG  [main] BasicTypeRegistry: Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@c0013b8
2020-11-25 20:53:47,449 DEBUG  [main] BasicTypeRegistry: Adding type registration binary -> org.hibernate.type.BinaryType@2a42019a
2020-11-25 20:53:47,450 DEBUG  [main] BasicTypeRegistry: Adding type registration byte[] -> org.hibernate.type.BinaryType@2a42019a
2020-11-25 20:53:47,450 DEBUG  [main] BasicTypeRegistry: Adding type registration [B -> org.hibernate.type.BinaryType@2a42019a
2020-11-25 20:53:47,450 DEBUG  [main] BasicTypeRegistry: Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@495da9a7
2020-11-25 20:53:47,450 DEBUG  [main] BasicTypeRegistry: Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@495da9a7
2020-11-25 20:53:47,450 DEBUG  [main] BasicTypeRegistry: Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@495da9a7
2020-11-25 20:53:47,450 DEBUG  [main] BasicTypeRegistry: Adding type registration row_version -> org.hibernate.type.RowVersionType@35becbd4
2020-11-25 20:53:47,451 DEBUG  [main] BasicTypeRegistry: Adding type registration image -> org.hibernate.type.ImageType@30fa8a6b
2020-11-25 20:53:47,451 DEBUG  [main] BasicTypeRegistry: Adding type registration characters -> org.hibernate.type.CharArrayType@4c8d45cf
2020-11-25 20:53:47,451 DEBUG  [main] BasicTypeRegistry: Adding type registration char[] -> org.hibernate.type.CharArrayType@4c8d45cf
2020-11-25 20:53:47,451 DEBUG  [main] BasicTypeRegistry: Adding type registration [C -> org.hibernate.type.CharArrayType@4c8d45cf
2020-11-25 20:53:47,451 DEBUG  [main] BasicTypeRegistry: Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@5b490d5e
2020-11-25 20:53:47,451 DEBUG  [main] BasicTypeRegistry: Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@5b490d5e
2020-11-25 20:53:47,451 DEBUG  [main] BasicTypeRegistry: Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@5b490d5e
2020-11-25 20:53:47,452 DEBUG  [main] BasicTypeRegistry: Adding type registration text -> org.hibernate.type.TextType@18b04526
2020-11-25 20:53:47,452 DEBUG  [main] BasicTypeRegistry: Adding type registration ntext -> org.hibernate.type.NTextType@246df37b
2020-11-25 20:53:47,452 DEBUG  [main] BasicTypeRegistry: Adding type registration blob -> org.hibernate.type.BlobType@56881196
2020-11-25 20:53:47,452 DEBUG  [main] BasicTypeRegistry: Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@56881196
2020-11-25 20:53:47,452 DEBUG  [main] BasicTypeRegistry: Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@131c0b6f
2020-11-25 20:53:47,452 DEBUG  [main] BasicTypeRegistry: Adding type registration clob -> org.hibernate.type.ClobType@7fc1fd31
2020-11-25 20:53:47,452 DEBUG  [main] BasicTypeRegistry: Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@7fc1fd31
2020-11-25 20:53:47,452 DEBUG  [main] BasicTypeRegistry: Adding type registration nclob -> org.hibernate.type.NClobType@70777a65
2020-11-25 20:53:47,453 DEBUG  [main] BasicTypeRegistry: Adding type registration java.sql.NClob -> org.hibernate.type.NClobType@70777a65
2020-11-25 20:53:47,453 DEBUG  [main] BasicTypeRegistry: Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@2f6f4ac4
2020-11-25 20:53:47,453 DEBUG  [main] BasicTypeRegistry: Adding type registration materialized_nclob -> org.hibernate.type.MaterializedNClobType@7d685f4e
2020-11-25 20:53:47,453 DEBUG  [main] BasicTypeRegistry: Adding type registration serializable -> org.hibernate.type.SerializableType@319aa9ee
2020-11-25 20:53:47,453 DEBUG  [main] BasicTypeRegistry: Adding type registration object -> org.hibernate.type.ObjectType@54234569
2020-11-25 20:53:47,453 DEBUG  [main] BasicTypeRegistry: Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@54234569
2020-11-25 20:53:47,453 DEBUG  [main] BasicTypeRegistry: Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@1b96f15e
2020-11-25 20:53:47,453 DEBUG  [main] BasicTypeRegistry: Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@4eb42e05
2020-11-25 20:53:47,453 DEBUG  [main] BasicTypeRegistry: Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@417cdc6c
2020-11-25 20:53:47,453 DEBUG  [main] BasicTypeRegistry: Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@48409124
2020-11-25 20:53:47,454 DEBUG  [main] BasicTypeRegistry: Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@64709573
2020-11-25 20:53:47,454 DEBUG  [main] BasicTypeRegistry: Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@bdb4bfe
2020-11-25 20:53:47,454 DEBUG  [main] BasicTypeRegistry: Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@2ce37955
2020-11-25 20:53:47,454 DEBUG  [main] BasicTypeRegistry: Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@60e6045c
2020-11-25 20:53:47,468 DEBUG  [main] TypeConfiguration$Scope: Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@2291c14a] to MetadataBuildingContext [org.hibernate.boot.internal.MetadataBuildingContextRootImpl@565d2dab]
2020-11-25 20:53:47,477 DEBUG  [main] EnumType: Using NAMED-based conversion for Enum com.sf.back.entities.Kind
2020-11-25 20:53:47,480 DEBUG  [main] EnumType: Using NAMED-based conversion for Enum com.sf.back.entities.Kind
2020-11-25 20:53:47,496 DEBUG  [main] TypeConfiguration$Scope: Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@2291c14a] to SessionFactoryImpl [org.hibernate.internal.SessionFactoryImpl@1b2574d0]
2020-11-25 20:53:47,497 DEBUG  [main] EnumType: Using NAMED-based conversion for Enum com.sf.back.entities.Kind
2020-11-25 20:53:47,497 DEBUG  [main] EnumType: Using NAMED-based conversion for Enum com.sf.back.entities.Kind
2020-11-25 20:53:47,515 DEBUG  [main] EnumType: Using NAMED-based conversion for Enum com.sf.back.entities.Kind
2020-11-25 20:53:47,515 DEBUG  [main] EnumType: Using NAMED-based conversion for Enum com.sf.back.entities.Kind
2020-11-25 20:53:47,543 DEBUG  [main] EnumType: Using NAMED-based conversion for Enum com.sf.back.entities.Kind
2020-11-25 20:53:47,543 DEBUG  [main] EnumType: Using NAMED-based conversion for Enum com.sf.back.entities.Kind
2020-11-25 20:53:47,561 DEBUG  [main] EnumType: Using NAMED-based conversion for Enum com.sf.back.entities.Kind
2020-11-25 20:53:47,572 TRACE  [main] TypeConfiguration$Scope: Handling #sessionFactoryCreated from [org.hibernate.internal.SessionFactoryImpl@1b2574d0] for TypeConfiguration
2020-11-25 20:53:47,690 WARN   [main] JpaBaseConfiguration$JpaWebConfiguration: spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2020-11-25 20:53:47,764 WARN   [main] GenericWebApplicationContext: Exception encountered during context initialization - cancelling refresh attempt: org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'groovyMarkupConfigurer' defined in class path resource [org/springframework/boot/autoconfigure/groovy/template/GroovyTemplateAutoConfiguration$GroovyMarkupConfiguration.class]: Invocation of init method failed; nested exception is java.lang.reflect.InaccessibleObjectException: Unable to make jdk.internal.loader.ClassLoaders$AppClassLoader(jdk.internal.loader.ClassLoaders$PlatformClassLoader,jdk.internal.loader.URLClassPath) accessible: module java.base does not "opens jdk.internal.loader" to unnamed module @60fa3495
2020-11-25 20:53:47,766 TRACE  [main] TypeConfiguration$Scope: Handling #sessionFactoryClosed from [org.hibernate.internal.SessionFactoryImpl@1b2574d0] for TypeConfiguration
2020-11-25 20:53:47,766 DEBUG  [main] TypeConfiguration$Scope: Un-scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration$Scope@534b0af3] from SessionFactory [org.hibernate.internal.SessionFactoryImpl@1b2574d0]
2020-11-25 20:53:47,770 ERROR  [main] SpringApplication: Application run failed
org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'groovyMarkupConfigurer' defined in class path resource [org/springframework/boot/autoconfigure/groovy/template/GroovyTemplateAutoConfiguration$GroovyMarkupConfiguration.class]: Invocation of init method failed; nested exception is java.lang.reflect.InaccessibleObjectException: Unable to make jdk.internal.loader.ClassLoaders$AppClassLoader(jdk.internal.loader.ClassLoaders$PlatformClassLoader,jdk.internal.loader.URLClassPath) accessible: module java.base does not "opens jdk.internal.loader" to unnamed module @60fa3495
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1803)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:595)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:517)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:323)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:222)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:321)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:202)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(DefaultListableBeanFactory.java:879)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:878)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:550)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:747)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:397)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:315)
	at org.springframework.boot.test.context.SpringBootContextLoader.loadContext(SpringBootContextLoader.java:125)
	at org.springframework.test.context.cache.DefaultCacheAwareContextLoaderDelegate.loadContextInternal(DefaultCacheAwareContextLoaderDelegate.java:99)
	at org.springframework.test.context.cache.DefaultCacheAwareContextLoaderDelegate.loadContext(DefaultCacheAwareContextLoaderDelegate.java:124)
	at org.springframework.test.context.support.DefaultTestContext.getApplicationContext(DefaultTestContext.java:123)
	at org.springframework.test.context.web.ServletTestExecutionListener.setUpRequestContextIfNecessary(ServletTestExecutionListener.java:190)
	at org.springframework.test.context.web.ServletTestExecutionListener.prepareTestInstance(ServletTestExecutionListener.java:132)
	at org.springframework.test.context.TestContextManager.prepareTestInstance(TestContextManager.java:244)
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner.createTest(SpringJUnit4ClassRunner.java:227)
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner$1.runReflectiveCall(SpringJUnit4ClassRunner.java:289)
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner.methodBlock(SpringJUnit4ClassRunner.java:291)
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner.runChild(SpringJUnit4ClassRunner.java:246)
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner.runChild(SpringJUnit4ClassRunner.java:97)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:290)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:71)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:58)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268)
	at org.junit.internal.runners.statements.RunBefores.evaluate(RunBefores.java:26)
	at org.springframework.test.context.junit4.statements.RunBeforeTestClassCallbacks.evaluate(RunBeforeTestClassCallbacks.java:61)
	at org.junit.internal.runners.statements.RunAfters.evaluate(RunAfters.java:27)
	at org.springframework.test.context.junit4.statements.RunAfterTestClassCallbacks.evaluate(RunAfterTestClassCallbacks.java:70)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:363)
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner.run(SpringJUnit4ClassRunner.java:190)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:137)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:115)
	at org.junit.vintage.engine.execution.RunnerExecutor.execute(RunnerExecutor.java:40)
	at java.base/java.util.stream.ForEachOps$ForEachOp$OfRef.accept(ForEachOps.java:183)
	at java.base/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:195)
	at java.base/java.util.Iterator.forEachRemaining(Iterator.java:133)
	at java.base/java.util.Spliterators$IteratorSpliterator.forEachRemaining(Spliterators.java:1801)
	at java.base/java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:484)
	at java.base/java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:474)
	at java.base/java.util.stream.ForEachOps$ForEachOp.evaluateSequential(ForEachOps.java:150)
	at java.base/java.util.stream.ForEachOps$ForEachOp$OfRef.evaluateSequential(ForEachOps.java:173)
	at java.base/java.util.stream.AbstractPipeline.evaluate(AbstractPipeline.java:234)
	at java.base/java.util.stream.ReferencePipeline.forEach(ReferencePipeline.java:497)
	at org.junit.vintage.engine.VintageTestEngine.executeAllChildren(VintageTestEngine.java:80)
	at org.junit.vintage.engine.VintageTestEngine.execute(VintageTestEngine.java:71)
	at org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:220)
	at org.junit.platform.launcher.core.DefaultLauncher.lambda$execute$6(DefaultLauncher.java:188)
	at org.junit.platform.launcher.core.DefaultLauncher.withInterceptedStreams(DefaultLauncher.java:202)
	at org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:181)
	at org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:128)
	at org.apache.maven.surefire.junitplatform.JUnitPlatformProvider.invokeAllTests(JUnitPlatformProvider.java:150)
	at org.apache.maven.surefire.junitplatform.JUnitPlatformProvider.invoke(JUnitPlatformProvider.java:124)
	at org.apache.maven.surefire.booter.ForkedBooter.invokeProviderInSameClassLoader(ForkedBooter.java:384)
	at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:345)
	at org.apache.maven.surefire.booter.ForkedBooter.execute(ForkedBooter.java:126)
	at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:418)
Caused by: java.lang.reflect.InaccessibleObjectException: Unable to make jdk.internal.loader.ClassLoaders$AppClassLoader(jdk.internal.loader.ClassLoaders$PlatformClassLoader,jdk.internal.loader.URLClassPath) accessible: module java.base does not "opens jdk.internal.loader" to unnamed module @60fa3495
	at java.base/java.lang.reflect.AccessibleObject.checkCanSetAccessible(AccessibleObject.java:344)
	at java.base/java.lang.reflect.AccessibleObject.checkCanSetAccessible(AccessibleObject.java:284)
	at java.base/java.lang.reflect.Constructor.checkCanSetAccessible(Constructor.java:189)
	at java.base/java.lang.reflect.Constructor.setAccessible(Constructor.java:182)
	at org.codehaus.groovy.reflection.CachedConstructor$1.run(CachedConstructor.java:44)
	at java.base/java.security.AccessController.doPrivileged(AccessController.java:312)
	at org.codehaus.groovy.reflection.CachedConstructor.<init>(CachedConstructor.java:42)
	at org.codehaus.groovy.reflection.CachedClass$2.initValue(CachedClass.java:79)
	at org.codehaus.groovy.reflection.CachedClass$2.initValue(CachedClass.java:69)
	at org.codehaus.groovy.util.LazyReference.getLocked(LazyReference.java:49)
	at org.codehaus.groovy.util.LazyReference.get(LazyReference.java:36)
	at org.codehaus.groovy.reflection.CachedClass.getConstructors(CachedClass.java:268)
	at groovy.lang.MetaClassImpl.<init>(MetaClassImpl.java:218)
	at groovy.lang.MetaClassImpl.<init>(MetaClassImpl.java:228)
	at groovy.lang.MetaClassRegistry$MetaClassCreationHandle.createNormalMetaClass(MetaClassRegistry.java:171)
	at groovy.lang.MetaClassRegistry$MetaClassCreationHandle.createWithCustomLookup(MetaClassRegistry.java:161)
	at groovy.lang.MetaClassRegistry$MetaClassCreationHandle.create(MetaClassRegistry.java:144)
	at org.codehaus.groovy.reflection.ClassInfo.getMetaClassUnderLock(ClassInfo.java:253)
	at org.codehaus.groovy.reflection.ClassInfo.getMetaClass(ClassInfo.java:285)
	at org.codehaus.groovy.reflection.ClassInfo.getMetaClass(ClassInfo.java:295)
	at org.codehaus.groovy.runtime.metaclass.MetaClassRegistryImpl.getMetaClass(MetaClassRegistryImpl.java:261)
	at org.codehaus.groovy.runtime.InvokerHelper.getMetaClass(InvokerHelper.java:873)
	at org.codehaus.groovy.runtime.InvokerHelper.invokePojoMethod(InvokerHelper.java:906)
	at org.codehaus.groovy.runtime.InvokerHelper.invokeMethod(InvokerHelper.java:898)
	at org.codehaus.groovy.runtime.typehandling.DefaultTypeTransformation.castToBoolean(DefaultTypeTransformation.java:185)
	at org.codehaus.groovy.runtime.typehandling.DefaultTypeTransformation.booleanUnbox(DefaultTypeTransformation.java:74)
	at org.codehaus.groovy.control.customizers.ASTTransformationCustomizer.findASTTranformationClass(ASTTransformationCustomizer.groovy:209)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:567)
	at org.codehaus.groovy.reflection.CachedMethod.invoke(CachedMethod.java:93)
	at org.codehaus.groovy.runtime.callsite.StaticMetaMethodSite$StaticMetaMethodSiteNoUnwrapNoCoerce.invoke(StaticMetaMethodSite.java:151)
	at org.codehaus.groovy.runtime.callsite.StaticMetaMethodSite.callStatic(StaticMetaMethodSite.java:102)
	at org.codehaus.groovy.runtime.callsite.AbstractCallSite.callStatic(AbstractCallSite.java:214)
	at org.codehaus.groovy.control.customizers.ASTTransformationCustomizer.findPhase(ASTTransformationCustomizer.groovy:226)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:567)
	at org.codehaus.groovy.reflection.CachedMethod.invoke(CachedMethod.java:93)
	at org.codehaus.groovy.runtime.callsite.StaticMetaMethodSite$StaticMetaMethodSiteNoUnwrapNoCoerce.invoke(StaticMetaMethodSite.java:151)
	at org.codehaus.groovy.runtime.callsite.StaticMetaMethodSite.callStatic(StaticMetaMethodSite.java:102)
	at org.codehaus.groovy.runtime.callsite.AbstractCallSite.callStatic(AbstractCallSite.java:214)
	at org.codehaus.groovy.control.customizers.ASTTransformationCustomizer.<init>(ASTTransformationCustomizer.groovy:180)
	at org.codehaus.groovy.control.customizers.ASTTransformationCustomizer.<init>(ASTTransformationCustomizer.groovy:188)
	at groovy.text.markup.MarkupTemplateEngine.<init>(MarkupTemplateEngine.java:94)
	at org.springframework.web.servlet.view.groovy.GroovyMarkupConfigurer.createTemplateEngine(GroovyMarkupConfigurer.java:160)
	at org.springframework.web.servlet.view.groovy.GroovyMarkupConfigurer.afterPropertiesSet(GroovyMarkupConfigurer.java:153)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1862)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1799)
	... 62 common frames omitted
2020-11-25 20:53:47,770 ERROR  [main] TestContextManager: Caught exception while allowing TestExecutionListener [org.springframework.test.context.web.ServletTestExecutionListener@701dbfbd] to prepare test instance [com.sf.service.ProblemServiceTest@43ab3f26]
java.lang.IllegalStateException: Failed to load ApplicationContext
	at org.springframework.test.context.cache.DefaultCacheAwareContextLoaderDelegate.loadContext(DefaultCacheAwareContextLoaderDelegate.java:132)
	at org.springframework.test.context.support.DefaultTestContext.getApplicationContext(DefaultTestContext.java:123)
	at org.springframework.test.context.web.ServletTestExecutionListener.setUpRequestContextIfNecessary(ServletTestExecutionListener.java:190)
	at org.springframework.test.context.web.ServletTestExecutionListener.prepareTestInstance(ServletTestExecutionListener.java:132)
	at org.springframework.test.context.TestContextManager.prepareTestInstance(TestContextManager.java:244)
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner.createTest(SpringJUnit4ClassRunner.java:227)
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner$1.runReflectiveCall(SpringJUnit4ClassRunner.java:289)
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner.methodBlock(SpringJUnit4ClassRunner.java:291)
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner.runChild(SpringJUnit4ClassRunner.java:246)
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner.runChild(SpringJUnit4ClassRunner.java:97)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:290)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:71)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:58)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268)
	at org.junit.internal.runners.statements.RunBefores.evaluate(RunBefores.java:26)
	at org.springframework.test.context.junit4.statements.RunBeforeTestClassCallbacks.evaluate(RunBeforeTestClassCallbacks.java:61)
	at org.junit.internal.runners.statements.RunAfters.evaluate(RunAfters.java:27)
	at org.springframework.test.context.junit4.statements.RunAfterTestClassCallbacks.evaluate(RunAfterTestClassCallbacks.java:70)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:363)
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner.run(SpringJUnit4ClassRunner.java:190)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:137)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:115)
	at org.junit.vintage.engine.execution.RunnerExecutor.execute(RunnerExecutor.java:40)
	at java.base/java.util.stream.ForEachOps$ForEachOp$OfRef.accept(ForEachOps.java:183)
	at java.base/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:195)
	at java.base/java.util.Iterator.forEachRemaining(Iterator.java:133)
	at java.base/java.util.Spliterators$IteratorSpliterator.forEachRemaining(Spliterators.java:1801)
	at java.base/java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:484)
	at java.base/java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:474)
	at java.base/java.util.stream.ForEachOps$ForEachOp.evaluateSequential(ForEachOps.java:150)
	at java.base/java.util.stream.ForEachOps$ForEachOp$OfRef.evaluateSequential(ForEachOps.java:173)
	at java.base/java.util.stream.AbstractPipeline.evaluate(AbstractPipeline.java:234)
	at java.base/java.util.stream.ReferencePipeline.forEach(ReferencePipeline.java:497)
	at org.junit.vintage.engine.VintageTestEngine.executeAllChildren(VintageTestEngine.java:80)
	at org.junit.vintage.engine.VintageTestEngine.execute(VintageTestEngine.java:71)
	at org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:220)
	at org.junit.platform.launcher.core.DefaultLauncher.lambda$execute$6(DefaultLauncher.java:188)
	at org.junit.platform.launcher.core.DefaultLauncher.withInterceptedStreams(DefaultLauncher.java:202)
	at org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:181)
	at org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:128)
	at org.apache.maven.surefire.junitplatform.JUnitPlatformProvider.invokeAllTests(JUnitPlatformProvider.java:150)
	at org.apache.maven.surefire.junitplatform.JUnitPlatformProvider.invoke(JUnitPlatformProvider.java:124)
	at org.apache.maven.surefire.booter.ForkedBooter.invokeProviderInSameClassLoader(ForkedBooter.java:384)
	at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:345)
	at org.apache.maven.surefire.booter.ForkedBooter.execute(ForkedBooter.java:126)
	at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:418)
Caused by: org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'groovyMarkupConfigurer' defined in class path resource [org/springframework/boot/autoconfigure/groovy/template/GroovyTemplateAutoConfiguration$GroovyMarkupConfiguration.class]: Invocation of init method failed; nested exception is java.lang.reflect.InaccessibleObjectException: Unable to make jdk.internal.loader.ClassLoaders$AppClassLoader(jdk.internal.loader.ClassLoaders$PlatformClassLoader,jdk.internal.loader.URLClassPath) accessible: module java.base does not "opens jdk.internal.loader" to unnamed module @60fa3495
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1803)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:595)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:517)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:323)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:222)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:321)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:202)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(DefaultListableBeanFactory.java:879)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:878)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:550)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:747)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:397)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:315)
	at org.springframework.boot.test.context.SpringBootContextLoader.loadContext(SpringBootContextLoader.java:125)
	at org.springframework.test.context.cache.DefaultCacheAwareContextLoaderDelegate.loadContextInternal(DefaultCacheAwareContextLoaderDelegate.java:99)
	at org.springframework.test.context.cache.DefaultCacheAwareContextLoaderDelegate.loadContext(DefaultCacheAwareContextLoaderDelegate.java:124)
	... 47 common frames omitted
Caused by: java.lang.reflect.InaccessibleObjectException: Unable to make jdk.internal.loader.ClassLoaders$AppClassLoader(jdk.internal.loader.ClassLoaders$PlatformClassLoader,jdk.internal.loader.URLClassPath) accessible: module java.base does not "opens jdk.internal.loader" to unnamed module @60fa3495
	at java.base/java.lang.reflect.AccessibleObject.checkCanSetAccessible(AccessibleObject.java:344)
	at java.base/java.lang.reflect.AccessibleObject.checkCanSetAccessible(AccessibleObject.java:284)
	at java.base/java.lang.reflect.Constructor.checkCanSetAccessible(Constructor.java:189)
	at java.base/java.lang.reflect.Constructor.setAccessible(Constructor.java:182)
	at org.codehaus.groovy.reflection.CachedConstructor$1.run(CachedConstructor.java:44)
	at java.base/java.security.AccessController.doPrivileged(AccessController.java:312)
	at org.codehaus.groovy.reflection.CachedConstructor.<init>(CachedConstructor.java:42)
	at org.codehaus.groovy.reflection.CachedClass$2.initValue(CachedClass.java:79)
	at org.codehaus.groovy.reflection.CachedClass$2.initValue(CachedClass.java:69)
	at org.codehaus.groovy.util.LazyReference.getLocked(LazyReference.java:49)
	at org.codehaus.groovy.util.LazyReference.get(LazyReference.java:36)
	at org.codehaus.groovy.reflection.CachedClass.getConstructors(CachedClass.java:268)
	at groovy.lang.MetaClassImpl.<init>(MetaClassImpl.java:218)
	at groovy.lang.MetaClassImpl.<init>(MetaClassImpl.java:228)
	at groovy.lang.MetaClassRegistry$MetaClassCreationHandle.createNormalMetaClass(MetaClassRegistry.java:171)
	at groovy.lang.MetaClassRegistry$MetaClassCreationHandle.createWithCustomLookup(MetaClassRegistry.java:161)
	at groovy.lang.MetaClassRegistry$MetaClassCreationHandle.create(MetaClassRegistry.java:144)
	at org.codehaus.groovy.reflection.ClassInfo.getMetaClassUnderLock(ClassInfo.java:253)
	at org.codehaus.groovy.reflection.ClassInfo.getMetaClass(ClassInfo.java:285)
	at org.codehaus.groovy.reflection.ClassInfo.getMetaClass(ClassInfo.java:295)
	at org.codehaus.groovy.runtime.metaclass.MetaClassRegistryImpl.getMetaClass(MetaClassRegistryImpl.java:261)
	at org.codehaus.groovy.runtime.InvokerHelper.getMetaClass(InvokerHelper.java:873)
	at org.codehaus.groovy.runtime.InvokerHelper.invokePojoMethod(InvokerHelper.java:906)
	at org.codehaus.groovy.runtime.InvokerHelper.invokeMethod(InvokerHelper.java:898)
	at org.codehaus.groovy.runtime.typehandling.DefaultTypeTransformation.castToBoolean(DefaultTypeTransformation.java:185)
	at org.codehaus.groovy.runtime.typehandling.DefaultTypeTransformation.booleanUnbox(DefaultTypeTransformation.java:74)
	at org.codehaus.groovy.control.customizers.ASTTransformationCustomizer.findASTTranformationClass(ASTTransformationCustomizer.groovy:209)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:567)
	at org.codehaus.groovy.reflection.CachedMethod.invoke(CachedMethod.java:93)
	at org.codehaus.groovy.runtime.callsite.StaticMetaMethodSite$StaticMetaMethodSiteNoUnwrapNoCoerce.invoke(StaticMetaMethodSite.java:151)
	at org.codehaus.groovy.runtime.callsite.StaticMetaMethodSite.callStatic(StaticMetaMethodSite.java:102)
	at org.codehaus.groovy.runtime.callsite.AbstractCallSite.callStatic(AbstractCallSite.java:214)
	at org.codehaus.groovy.control.customizers.ASTTransformationCustomizer.findPhase(ASTTransformationCustomizer.groovy:226)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:567)
	at org.codehaus.groovy.reflection.CachedMethod.invoke(CachedMethod.java:93)
	at org.codehaus.groovy.runtime.callsite.StaticMetaMethodSite$StaticMetaMethodSiteNoUnwrapNoCoerce.invoke(StaticMetaMethodSite.java:151)
	at org.codehaus.groovy.runtime.callsite.StaticMetaMethodSite.callStatic(StaticMetaMethodSite.java:102)
	at org.codehaus.groovy.runtime.callsite.AbstractCallSite.callStatic(AbstractCallSite.java:214)
	at org.codehaus.groovy.control.customizers.ASTTransformationCustomizer.<init>(ASTTransformationCustomizer.groovy:180)
	at org.codehaus.groovy.control.customizers.ASTTransformationCustomizer.<init>(ASTTransformationCustomizer.groovy:188)
	at groovy.text.markup.MarkupTemplateEngine.<init>(MarkupTemplateEngine.java:94)
	at org.springframework.web.servlet.view.groovy.GroovyMarkupConfigurer.createTemplateEngine(GroovyMarkupConfigurer.java:160)
	at org.springframework.web.servlet.view.groovy.GroovyMarkupConfigurer.afterPropertiesSet(GroovyMarkupConfigurer.java:153)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1862)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1799)
	... 62 common frames omitted
2020-11-25 20:53:48,116 DEBUG  [main] BasicTypeRegistry: Adding type registration boolean -> org.hibernate.type.BooleanType@ff2266c
2020-11-25 20:53:48,121 DEBUG  [main] BasicTypeRegistry: Adding type registration boolean -> org.hibernate.type.BooleanType@ff2266c
2020-11-25 20:53:48,121 DEBUG  [main] BasicTypeRegistry: Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@ff2266c
2020-11-25 20:53:48,121 DEBUG  [main] BasicTypeRegistry: Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@1d585fb
2020-11-25 20:53:48,121 DEBUG  [main] BasicTypeRegistry: Adding type registration true_false -> org.hibernate.type.TrueFalseType@7c8f047a
2020-11-25 20:53:48,121 DEBUG  [main] BasicTypeRegistry: Adding type registration yes_no -> org.hibernate.type.YesNoType@d949bc4
2020-11-25 20:53:48,121 DEBUG  [main] BasicTypeRegistry: Adding type registration byte -> org.hibernate.type.ByteType@29c25bbc
2020-11-25 20:53:48,121 DEBUG  [main] BasicTypeRegistry: Adding type registration byte -> org.hibernate.type.ByteType@29c25bbc
2020-11-25 20:53:48,121 DEBUG  [main] BasicTypeRegistry: Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@29c25bbc
2020-11-25 20:53:48,121 DEBUG  [main] BasicTypeRegistry: Adding type registration character -> org.hibernate.type.CharacterType@403f7aa2
2020-11-25 20:53:48,121 DEBUG  [main] BasicTypeRegistry: Adding type registration char -> org.hibernate.type.CharacterType@403f7aa2
2020-11-25 20:53:48,121 DEBUG  [main] BasicTypeRegistry: Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@403f7aa2
2020-11-25 20:53:48,122 DEBUG  [main] BasicTypeRegistry: Adding type registration short -> org.hibernate.type.ShortType@38cb1606
2020-11-25 20:53:48,122 DEBUG  [main] BasicTypeRegistry: Adding type registration short -> org.hibernate.type.ShortType@38cb1606
2020-11-25 20:53:48,122 DEBUG  [main] BasicTypeRegistry: Adding type registration java.lang.Short -> org.hibernate.type.ShortType@38cb1606
2020-11-25 20:53:48,122 DEBUG  [main] BasicTypeRegistry: Adding type registration integer -> org.hibernate.type.IntegerType@5d3b6585
2020-11-25 20:53:48,122 DEBUG  [main] BasicTypeRegistry: Adding type registration int -> org.hibernate.type.IntegerType@5d3b6585
2020-11-25 20:53:48,122 DEBUG  [main] BasicTypeRegistry: Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@5d3b6585
2020-11-25 20:53:48,122 DEBUG  [main] BasicTypeRegistry: Adding type registration long -> org.hibernate.type.LongType@4fea5ee0
2020-11-25 20:53:48,122 DEBUG  [main] BasicTypeRegistry: Adding type registration long -> org.hibernate.type.LongType@4fea5ee0
2020-11-25 20:53:48,122 DEBUG  [main] BasicTypeRegistry: Adding type registration java.lang.Long -> org.hibernate.type.LongType@4fea5ee0
2020-11-25 20:53:48,122 DEBUG  [main] BasicTypeRegistry: Adding type registration float -> org.hibernate.type.FloatType@7b3085a3
2020-11-25 20:53:48,122 DEBUG  [main] BasicTypeRegistry: Adding type registration float -> org.hibernate.type.FloatType@7b3085a3
2020-11-25 20:53:48,122 DEBUG  [main] BasicTypeRegistry: Adding type registration java.lang.Float -> org.hibernate.type.FloatType@7b3085a3
2020-11-25 20:53:48,123 DEBUG  [main] BasicTypeRegistry: Adding type registration double -> org.hibernate.type.DoubleType@5a7a6d34
2020-11-25 20:53:48,123 DEBUG  [main] BasicTypeRegistry: Adding type registration double -> org.hibernate.type.DoubleType@5a7a6d34
2020-11-25 20:53:48,123 DEBUG  [main] BasicTypeRegistry: Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@5a7a6d34
2020-11-25 20:53:48,123 DEBUG  [main] BasicTypeRegistry: Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@5ae66c98
2020-11-25 20:53:48,123 DEBUG  [main] BasicTypeRegistry: Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@5ae66c98
2020-11-25 20:53:48,124 DEBUG  [main] BasicTypeRegistry: Adding type registration big_integer -> org.hibernate.type.BigIntegerType@223cbf0d
2020-11-25 20:53:48,124 DEBUG  [main] BasicTypeRegistry: Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@223cbf0d
2020-11-25 20:53:48,124 DEBUG  [main] BasicTypeRegistry: Adding type registration string -> org.hibernate.type.StringType@4f581211
2020-11-25 20:53:48,124 DEBUG  [main] BasicTypeRegistry: Adding type registration java.lang.String -> org.hibernate.type.StringType@4f581211
2020-11-25 20:53:48,124 DEBUG  [main] BasicTypeRegistry: Adding type registration nstring -> org.hibernate.type.StringNVarcharType@6697f3d
2020-11-25 20:53:48,124 DEBUG  [main] BasicTypeRegistry: Adding type registration ncharacter -> org.hibernate.type.CharacterNCharType@f1d1463
2020-11-25 20:53:48,124 DEBUG  [main] BasicTypeRegistry: Adding type registration url -> org.hibernate.type.UrlType@44ddb518
2020-11-25 20:53:48,124 DEBUG  [main] BasicTypeRegistry: Adding type registration java.net.URL -> org.hibernate.type.UrlType@44ddb518
2020-11-25 20:53:48,125 DEBUG  [main] BasicTypeRegistry: Adding type registration Duration -> org.hibernate.type.DurationType@49e0b123
2020-11-25 20:53:48,125 DEBUG  [main] BasicTypeRegistry: Adding type registration java.time.Duration -> org.hibernate.type.DurationType@49e0b123
2020-11-25 20:53:48,125 DEBUG  [main] BasicTypeRegistry: Adding type registration Instant -> org.hibernate.type.InstantType@40a28bda
2020-11-25 20:53:48,125 DEBUG  [main] BasicTypeRegistry: Adding type registration java.time.Instant -> org.hibernate.type.InstantType@40a28bda
2020-11-25 20:53:48,125 DEBUG  [main] BasicTypeRegistry: Adding type registration LocalDateTime -> org.hibernate.type.LocalDateTimeType@33430fc
2020-11-25 20:53:48,125 DEBUG  [main] BasicTypeRegistry: Adding type registration java.time.LocalDateTime -> org.hibernate.type.LocalDateTimeType@33430fc
2020-11-25 20:53:48,125 DEBUG  [main] BasicTypeRegistry: Adding type registration LocalDate -> org.hibernate.type.LocalDateType@d7055be
2020-11-25 20:53:48,125 DEBUG  [main] BasicTypeRegistry: Adding type registration java.time.LocalDate -> org.hibernate.type.LocalDateType@d7055be
2020-11-25 20:53:48,125 DEBUG  [main] BasicTypeRegistry: Adding type registration LocalTime -> org.hibernate.type.LocalTimeType@3c7d8a4
2020-11-25 20:53:48,125 DEBUG  [main] BasicTypeRegistry: Adding type registration java.time.LocalTime -> org.hibernate.type.LocalTimeType@3c7d8a4
2020-11-25 20:53:48,125 DEBUG  [main] BasicTypeRegistry: Adding type registration OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@7a117dc2
2020-11-25 20:53:48,126 DEBUG  [main] BasicTypeRegistry: Adding type registration java.time.OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@7a117dc2
2020-11-25 20:53:48,126 DEBUG  [main] BasicTypeRegistry: Adding type registration OffsetTime -> org.hibernate.type.OffsetTimeType@3c64339f
2020-11-25 20:53:48,126 DEBUG  [main] BasicTypeRegistry: Adding type registration java.time.OffsetTime -> org.hibernate.type.OffsetTimeType@3c64339f
2020-11-25 20:53:48,126 DEBUG  [main] BasicTypeRegistry: Adding type registration ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@30c8c6ab
2020-11-25 20:53:48,126 DEBUG  [main] BasicTypeRegistry: Adding type registration java.time.ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@30c8c6ab
2020-11-25 20:53:48,126 DEBUG  [main] BasicTypeRegistry: Adding type registration date -> org.hibernate.type.DateType@61c5fd78
2020-11-25 20:53:48,126 DEBUG  [main] BasicTypeRegistry: Adding type registration java.sql.Date -> org.hibernate.type.DateType@61c5fd78
2020-11-25 20:53:48,126 DEBUG  [main] BasicTypeRegistry: Adding type registration time -> org.hibernate.type.TimeType@77856cc5
2020-11-25 20:53:48,126 DEBUG  [main] BasicTypeRegistry: Adding type registration java.sql.Time -> org.hibernate.type.TimeType@77856cc5
2020-11-25 20:53:48,126 DEBUG  [main] BasicTypeRegistry: Adding type registration timestamp -> org.hibernate.type.TimestampType@12166229
2020-11-25 20:53:48,126 DEBUG  [main] BasicTypeRegistry: Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@12166229
2020-11-25 20:53:48,127 DEBUG  [main] BasicTypeRegistry: Adding type registration java.util.Date -> org.hibernate.type.TimestampType@12166229
2020-11-25 20:53:48,127 DEBUG  [main] BasicTypeRegistry: Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@2b4829aa
2020-11-25 20:53:48,127 DEBUG  [main] BasicTypeRegistry: Adding type registration calendar -> org.hibernate.type.CalendarType@3ec082a1
2020-11-25 20:53:48,127 DEBUG  [main] BasicTypeRegistry: Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@3ec082a1
2020-11-25 20:53:48,127 DEBUG  [main] BasicTypeRegistry: Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@3ec082a1
2020-11-25 20:53:48,127 DEBUG  [main] BasicTypeRegistry: Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@429f0ca8
2020-11-25 20:53:48,128 DEBUG  [main] BasicTypeRegistry: Adding type registration locale -> org.hibernate.type.LocaleType@11c3ce6a
2020-11-25 20:53:48,128 DEBUG  [main] BasicTypeRegistry: Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@11c3ce6a
2020-11-25 20:53:48,128 DEBUG  [main] BasicTypeRegistry: Adding type registration currency -> org.hibernate.type.CurrencyType@28519bfb
2020-11-25 20:53:48,128 DEBUG  [main] BasicTypeRegistry: Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@28519bfb
2020-11-25 20:53:48,128 DEBUG  [main] BasicTypeRegistry: Adding type registration timezone -> org.hibernate.type.TimeZoneType@7aa15a80
2020-11-25 20:53:48,128 DEBUG  [main] BasicTypeRegistry: Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@7aa15a80
2020-11-25 20:53:48,128 DEBUG  [main] BasicTypeRegistry: Adding type registration class -> org.hibernate.type.ClassType@48d5ca17
2020-11-25 20:53:48,128 DEBUG  [main] BasicTypeRegistry: Adding type registration java.lang.Class -> org.hibernate.type.ClassType@48d5ca17
2020-11-25 20:53:48,128 DEBUG  [main] BasicTypeRegistry: Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@79b8ecb
2020-11-25 20:53:48,128 DEBUG  [main] BasicTypeRegistry: Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@79b8ecb
2020-11-25 20:53:48,128 DEBUG  [main] BasicTypeRegistry: Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@c0013b8
2020-11-25 20:53:48,129 DEBUG  [main] BasicTypeRegistry: Adding type registration binary -> org.hibernate.type.BinaryType@2a42019a
2020-11-25 20:53:48,129 DEBUG  [main] BasicTypeRegistry: Adding type registration byte[] -> org.hibernate.type.BinaryType@2a42019a
2020-11-25 20:53:48,129 DEBUG  [main] BasicTypeRegistry: Adding type registration [B -> org.hibernate.type.BinaryType@2a42019a
2020-11-25 20:53:48,129 DEBUG  [main] BasicTypeRegistry: Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@495da9a7
2020-11-25 20:53:48,129 DEBUG  [main] BasicTypeRegistry: Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@495da9a7
2020-11-25 20:53:48,129 DEBUG  [main] BasicTypeRegistry: Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@495da9a7
2020-11-25 20:53:48,129 DEBUG  [main] BasicTypeRegistry: Adding type registration row_version -> org.hibernate.type.RowVersionType@35becbd4
2020-11-25 20:53:48,129 DEBUG  [main] BasicTypeRegistry: Adding type registration image -> org.hibernate.type.ImageType@30fa8a6b
2020-11-25 20:53:48,129 DEBUG  [main] BasicTypeRegistry: Adding type registration characters -> org.hibernate.type.CharArrayType@4c8d45cf
2020-11-25 20:53:48,130 DEBUG  [main] BasicTypeRegistry: Adding type registration char[] -> org.hibernate.type.CharArrayType@4c8d45cf
2020-11-25 20:53:48,130 DEBUG  [main] BasicTypeRegistry: Adding type registration [C -> org.hibernate.type.CharArrayType@4c8d45cf
2020-11-25 20:53:48,131 DEBUG  [main] BasicTypeRegistry: Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@5b490d5e
2020-11-25 20:53:48,131 DEBUG  [main] BasicTypeRegistry: Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@5b490d5e
2020-11-25 20:53:48,132 DEBUG  [main] BasicTypeRegistry: Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@5b490d5e
2020-11-25 20:53:48,132 DEBUG  [main] BasicTypeRegistry: Adding type registration text -> org.hibernate.type.TextType@18b04526
2020-11-25 20:53:48,132 DEBUG  [main] BasicTypeRegistry: Adding type registration ntext -> org.hibernate.type.NTextType@246df37b
2020-11-25 20:53:48,132 DEBUG  [main] BasicTypeRegistry: Adding type registration blob -> org.hibernate.type.BlobType@56881196
2020-11-25 20:53:48,132 DEBUG  [main] BasicTypeRegistry: Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@56881196
2020-11-25 20:53:48,132 DEBUG  [main] BasicTypeRegistry: Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@131c0b6f
2020-11-25 20:53:48,133 DEBUG  [main] BasicTypeRegistry: Adding type registration clob -> org.hibernate.type.ClobType@7fc1fd31
2020-11-25 20:53:48,133 DEBUG  [main] BasicTypeRegistry: Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@7fc1fd31
2020-11-25 20:53:48,133 DEBUG  [main] BasicTypeRegistry: Adding type registration nclob -> org.hibernate.type.NClobType@70777a65
2020-11-25 20:53:48,134 DEBUG  [main] BasicTypeRegistry: Adding type registration java.sql.NClob -> org.hibernate.type.NClobType@70777a65
2020-11-25 20:53:48,149 DEBUG  [main] BasicTypeRegistry: Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@2f6f4ac4
2020-11-25 20:53:48,150 DEBUG  [main] BasicTypeRegistry: Adding type registration materialized_nclob -> org.hibernate.type.MaterializedNClobType@7d685f4e
2020-11-25 20:53:48,150 DEBUG  [main] BasicTypeRegistry: Adding type registration serializable -> org.hibernate.type.SerializableType@319aa9ee
2020-11-25 20:53:48,150 DEBUG  [main] BasicTypeRegistry: Adding type registration object -> org.hibernate.type.ObjectType@54234569
2020-11-25 20:53:48,150 DEBUG  [main] BasicTypeRegistry: Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@54234569
2020-11-25 20:53:48,150 DEBUG  [main] BasicTypeRegistry: Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@636b198
2020-11-25 20:53:48,151 DEBUG  [main] BasicTypeRegistry: Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@114a18d6
2020-11-25 20:53:48,151 DEBUG  [main] BasicTypeRegistry: Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@241e5fe6
2020-11-25 20:53:48,151 DEBUG  [main] BasicTypeRegistry: Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@636aef2e
2020-11-25 20:53:48,151 DEBUG  [main] BasicTypeRegistry: Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@506328aa
2020-11-25 20:53:48,151 DEBUG  [main] BasicTypeRegistry: Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@11ae16d8
2020-11-25 20:53:48,151 DEBUG  [main] BasicTypeRegistry: Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@47198a64
2020-11-25 20:53:48,151 DEBUG  [main] BasicTypeRegistry: Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@733e1e36
2020-11-25 20:53:48,166 DEBUG  [main] TypeConfiguration$Scope: Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@1d215a52] to MetadataBuildingContext [org.hibernate.boot.internal.MetadataBuildingContextRootImpl@409e4611]
2020-11-25 20:53:48,176 DEBUG  [main] EnumType: Using NAMED-based conversion for Enum com.sf.back.entities.Kind
2020-11-25 20:53:48,179 DEBUG  [main] EnumType: Using NAMED-based conversion for Enum com.sf.back.entities.Kind
2020-11-25 20:53:48,192 DEBUG  [main] TypeConfiguration$Scope: Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@1d215a52] to SessionFactoryImpl [org.hibernate.internal.SessionFactoryImpl@29b8a9a9]
2020-11-25 20:53:48,194 DEBUG  [main] EnumType: Using NAMED-based conversion for Enum com.sf.back.entities.Kind
2020-11-25 20:53:48,194 DEBUG  [main] EnumType: Using NAMED-based conversion for Enum com.sf.back.entities.Kind
2020-11-25 20:53:48,208 DEBUG  [main] EnumType: Using NAMED-based conversion for Enum com.sf.back.entities.Kind
2020-11-25 20:53:48,209 DEBUG  [main] EnumType: Using NAMED-based conversion for Enum com.sf.back.entities.Kind
2020-11-25 20:53:48,223 DEBUG  [main] EnumType: Using NAMED-based conversion for Enum com.sf.back.entities.Kind
2020-11-25 20:53:48,224 DEBUG  [main] EnumType: Using NAMED-based conversion for Enum com.sf.back.entities.Kind
2020-11-25 20:53:48,228 DEBUG  [main] EnumType: Using NAMED-based conversion for Enum com.sf.back.entities.Kind
2020-11-25 20:53:48,238 TRACE  [main] TypeConfiguration$Scope: Handling #sessionFactoryCreated from [org.hibernate.internal.SessionFactoryImpl@29b8a9a9] for TypeConfiguration
2020-11-25 20:53:48,339 WARN   [main] JpaBaseConfiguration$JpaWebConfiguration: spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2020-11-25 20:53:48,440 WARN   [main] GenericWebApplicationContext: Exception encountered during context initialization - cancelling refresh attempt: org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'groovyMarkupConfigurer' defined in class path resource [org/springframework/boot/autoconfigure/groovy/template/GroovyTemplateAutoConfiguration$GroovyMarkupConfiguration.class]: Invocation of init method failed; nested exception is java.lang.reflect.InaccessibleObjectException: Unable to make jdk.internal.loader.ClassLoaders$AppClassLoader(jdk.internal.loader.ClassLoaders$PlatformClassLoader,jdk.internal.loader.URLClassPath) accessible: module java.base does not "opens jdk.internal.loader" to unnamed module @60fa3495
2020-11-25 20:53:48,442 TRACE  [main] TypeConfiguration$Scope: Handling #sessionFactoryClosed from [org.hibernate.internal.SessionFactoryImpl@29b8a9a9] for TypeConfiguration
2020-11-25 20:53:48,442 DEBUG  [main] TypeConfiguration$Scope: Un-scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration$Scope@2c5ff4a5] from SessionFactory [org.hibernate.internal.SessionFactoryImpl@29b8a9a9]
2020-11-25 20:53:48,447 ERROR  [main] SpringApplication: Application run failed
org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'groovyMarkupConfigurer' defined in class path resource [org/springframework/boot/autoconfigure/groovy/template/GroovyTemplateAutoConfiguration$GroovyMarkupConfiguration.class]: Invocation of init method failed; nested exception is java.lang.reflect.InaccessibleObjectException: Unable to make jdk.internal.loader.ClassLoaders$AppClassLoader(jdk.internal.loader.ClassLoaders$PlatformClassLoader,jdk.internal.loader.URLClassPath) accessible: module java.base does not "opens jdk.internal.loader" to unnamed module @60fa3495
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1803)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:595)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:517)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:323)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:222)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:321)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:202)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(DefaultListableBeanFactory.java:879)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:878)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:550)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:747)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:397)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:315)
	at org.springframework.boot.test.context.SpringBootContextLoader.loadContext(SpringBootContextLoader.java:125)
	at org.springframework.test.context.cache.DefaultCacheAwareContextLoaderDelegate.loadContextInternal(DefaultCacheAwareContextLoaderDelegate.java:99)
	at org.springframework.test.context.cache.DefaultCacheAwareContextLoaderDelegate.loadContext(DefaultCacheAwareContextLoaderDelegate.java:124)
	at org.springframework.test.context.support.DefaultTestContext.getApplicationContext(DefaultTestContext.java:123)
	at org.springframework.test.context.web.ServletTestExecutionListener.setUpRequestContextIfNecessary(ServletTestExecutionListener.java:190)
	at org.springframework.test.context.web.ServletTestExecutionListener.prepareTestInstance(ServletTestExecutionListener.java:132)
	at org.springframework.test.context.TestContextManager.prepareTestInstance(TestContextManager.java:244)
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner.createTest(SpringJUnit4ClassRunner.java:227)
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner$1.runReflectiveCall(SpringJUnit4ClassRunner.java:289)
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner.methodBlock(SpringJUnit4ClassRunner.java:291)
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner.runChild(SpringJUnit4ClassRunner.java:246)
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner.runChild(SpringJUnit4ClassRunner.java:97)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:290)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:71)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:58)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268)
	at org.junit.internal.runners.statements.RunBefores.evaluate(RunBefores.java:26)
	at org.springframework.test.context.junit4.statements.RunBeforeTestClassCallbacks.evaluate(RunBeforeTestClassCallbacks.java:61)
	at org.junit.internal.runners.statements.RunAfters.evaluate(RunAfters.java:27)
	at org.springframework.test.context.junit4.statements.RunAfterTestClassCallbacks.evaluate(RunAfterTestClassCallbacks.java:70)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:363)
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner.run(SpringJUnit4ClassRunner.java:190)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:137)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:115)
	at org.junit.vintage.engine.execution.RunnerExecutor.execute(RunnerExecutor.java:40)
	at java.base/java.util.stream.ForEachOps$ForEachOp$OfRef.accept(ForEachOps.java:183)
	at java.base/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:195)
	at java.base/java.util.Iterator.forEachRemaining(Iterator.java:133)
	at java.base/java.util.Spliterators$IteratorSpliterator.forEachRemaining(Spliterators.java:1801)
	at java.base/java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:484)
	at java.base/java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:474)
	at java.base/java.util.stream.ForEachOps$ForEachOp.evaluateSequential(ForEachOps.java:150)
	at java.base/java.util.stream.ForEachOps$ForEachOp$OfRef.evaluateSequential(ForEachOps.java:173)
	at java.base/java.util.stream.AbstractPipeline.evaluate(AbstractPipeline.java:234)
	at java.base/java.util.stream.ReferencePipeline.forEach(ReferencePipeline.java:497)
	at org.junit.vintage.engine.VintageTestEngine.executeAllChildren(VintageTestEngine.java:80)
	at org.junit.vintage.engine.VintageTestEngine.execute(VintageTestEngine.java:71)
	at org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:220)
	at org.junit.platform.launcher.core.DefaultLauncher.lambda$execute$6(DefaultLauncher.java:188)
	at org.junit.platform.launcher.core.DefaultLauncher.withInterceptedStreams(DefaultLauncher.java:202)
	at org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:181)
	at org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:128)
	at org.apache.maven.surefire.junitplatform.JUnitPlatformProvider.invokeAllTests(JUnitPlatformProvider.java:150)
	at org.apache.maven.surefire.junitplatform.JUnitPlatformProvider.invoke(JUnitPlatformProvider.java:124)
	at org.apache.maven.surefire.booter.ForkedBooter.invokeProviderInSameClassLoader(ForkedBooter.java:384)
	at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:345)
	at org.apache.maven.surefire.booter.ForkedBooter.execute(ForkedBooter.java:126)
	at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:418)
Caused by: java.lang.reflect.InaccessibleObjectException: Unable to make jdk.internal.loader.ClassLoaders$AppClassLoader(jdk.internal.loader.ClassLoaders$PlatformClassLoader,jdk.internal.loader.URLClassPath) accessible: module java.base does not "opens jdk.internal.loader" to unnamed module @60fa3495
	at java.base/java.lang.reflect.AccessibleObject.checkCanSetAccessible(AccessibleObject.java:344)
	at java.base/java.lang.reflect.AccessibleObject.checkCanSetAccessible(AccessibleObject.java:284)
	at java.base/java.lang.reflect.Constructor.checkCanSetAccessible(Constructor.java:189)
	at java.base/java.lang.reflect.Constructor.setAccessible(Constructor.java:182)
	at org.codehaus.groovy.reflection.CachedConstructor$1.run(CachedConstructor.java:44)
	at java.base/java.security.AccessController.doPrivileged(AccessController.java:312)
	at org.codehaus.groovy.reflection.CachedConstructor.<init>(CachedConstructor.java:42)
	at org.codehaus.groovy.reflection.CachedClass$2.initValue(CachedClass.java:79)
	at org.codehaus.groovy.reflection.CachedClass$2.initValue(CachedClass.java:69)
	at org.codehaus.groovy.util.LazyReference.getLocked(LazyReference.java:49)
	at org.codehaus.groovy.util.LazyReference.get(LazyReference.java:36)
	at org.codehaus.groovy.reflection.CachedClass.getConstructors(CachedClass.java:268)
	at groovy.lang.MetaClassImpl.<init>(MetaClassImpl.java:218)
	at groovy.lang.MetaClassImpl.<init>(MetaClassImpl.java:228)
	at groovy.lang.MetaClassRegistry$MetaClassCreationHandle.createNormalMetaClass(MetaClassRegistry.java:171)
	at groovy.lang.MetaClassRegistry$MetaClassCreationHandle.createWithCustomLookup(MetaClassRegistry.java:161)
	at groovy.lang.MetaClassRegistry$MetaClassCreationHandle.create(MetaClassRegistry.java:144)
	at org.codehaus.groovy.reflection.ClassInfo.getMetaClassUnderLock(ClassInfo.java:253)
	at org.codehaus.groovy.reflection.ClassInfo.getMetaClass(ClassInfo.java:285)
	at org.codehaus.groovy.reflection.ClassInfo.getMetaClass(ClassInfo.java:295)
	at org.codehaus.groovy.runtime.metaclass.MetaClassRegistryImpl.getMetaClass(MetaClassRegistryImpl.java:261)
	at org.codehaus.groovy.runtime.InvokerHelper.getMetaClass(InvokerHelper.java:873)
	at org.codehaus.groovy.runtime.InvokerHelper.invokePojoMethod(InvokerHelper.java:906)
	at org.codehaus.groovy.runtime.InvokerHelper.invokeMethod(InvokerHelper.java:898)
	at org.codehaus.groovy.runtime.typehandling.DefaultTypeTransformation.castToBoolean(DefaultTypeTransformation.java:185)
	at org.codehaus.groovy.runtime.typehandling.DefaultTypeTransformation.booleanUnbox(DefaultTypeTransformation.java:74)
	at org.codehaus.groovy.control.customizers.ASTTransformationCustomizer.findASTTranformationClass(ASTTransformationCustomizer.groovy:209)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:567)
	at org.codehaus.groovy.reflection.CachedMethod.invoke(CachedMethod.java:93)
	at org.codehaus.groovy.runtime.callsite.StaticMetaMethodSite$StaticMetaMethodSiteNoUnwrapNoCoerce.invoke(StaticMetaMethodSite.java:151)
	at org.codehaus.groovy.runtime.callsite.StaticMetaMethodSite.callStatic(StaticMetaMethodSite.java:102)
	at org.codehaus.groovy.runtime.callsite.AbstractCallSite.callStatic(AbstractCallSite.java:214)
	at org.codehaus.groovy.control.customizers.ASTTransformationCustomizer.findPhase(ASTTransformationCustomizer.groovy:226)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:567)
	at org.codehaus.groovy.reflection.CachedMethod.invoke(CachedMethod.java:93)
	at org.codehaus.groovy.runtime.callsite.StaticMetaMethodSite$StaticMetaMethodSiteNoUnwrapNoCoerce.invoke(StaticMetaMethodSite.java:151)
	at org.codehaus.groovy.runtime.callsite.StaticMetaMethodSite.callStatic(StaticMetaMethodSite.java:102)
	at org.codehaus.groovy.runtime.callsite.AbstractCallSite.callStatic(AbstractCallSite.java:214)
	at org.codehaus.groovy.control.customizers.ASTTransformationCustomizer.<init>(ASTTransformationCustomizer.groovy:180)
	at org.codehaus.groovy.control.customizers.ASTTransformationCustomizer.<init>(ASTTransformationCustomizer.groovy:188)
	at groovy.text.markup.MarkupTemplateEngine.<init>(MarkupTemplateEngine.java:94)
	at org.springframework.web.servlet.view.groovy.GroovyMarkupConfigurer.createTemplateEngine(GroovyMarkupConfigurer.java:160)
	at org.springframework.web.servlet.view.groovy.GroovyMarkupConfigurer.afterPropertiesSet(GroovyMarkupConfigurer.java:153)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1862)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1799)
	... 62 common frames omitted
2020-11-25 20:53:48,448 ERROR  [main] TestContextManager: Caught exception while allowing TestExecutionListener [org.springframework.test.context.web.ServletTestExecutionListener@701dbfbd] to prepare test instance [com.sf.service.ProblemServiceTest@11f18d60]
java.lang.IllegalStateException: Failed to load ApplicationContext
	at org.springframework.test.context.cache.DefaultCacheAwareContextLoaderDelegate.loadContext(DefaultCacheAwareContextLoaderDelegate.java:132)
	at org.springframework.test.context.support.DefaultTestContext.getApplicationContext(DefaultTestContext.java:123)
	at org.springframework.test.context.web.ServletTestExecutionListener.setUpRequestContextIfNecessary(ServletTestExecutionListener.java:190)
	at org.springframework.test.context.web.ServletTestExecutionListener.prepareTestInstance(ServletTestExecutionListener.java:132)
	at org.springframework.test.context.TestContextManager.prepareTestInstance(TestContextManager.java:244)
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner.createTest(SpringJUnit4ClassRunner.java:227)
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner$1.runReflectiveCall(SpringJUnit4ClassRunner.java:289)
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner.methodBlock(SpringJUnit4ClassRunner.java:291)
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner.runChild(SpringJUnit4ClassRunner.java:246)
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner.runChild(SpringJUnit4ClassRunner.java:97)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:290)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:71)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:58)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268)
	at org.junit.internal.runners.statements.RunBefores.evaluate(RunBefores.java:26)
	at org.springframework.test.context.junit4.statements.RunBeforeTestClassCallbacks.evaluate(RunBeforeTestClassCallbacks.java:61)
	at org.junit.internal.runners.statements.RunAfters.evaluate(RunAfters.java:27)
	at org.springframework.test.context.junit4.statements.RunAfterTestClassCallbacks.evaluate(RunAfterTestClassCallbacks.java:70)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:363)
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner.run(SpringJUnit4ClassRunner.java:190)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:137)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:115)
	at org.junit.vintage.engine.execution.RunnerExecutor.execute(RunnerExecutor.java:40)
	at java.base/java.util.stream.ForEachOps$ForEachOp$OfRef.accept(ForEachOps.java:183)
	at java.base/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:195)
	at java.base/java.util.Iterator.forEachRemaining(Iterator.java:133)
	at java.base/java.util.Spliterators$IteratorSpliterator.forEachRemaining(Spliterators.java:1801)
	at java.base/java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:484)
	at java.base/java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:474)
	at java.base/java.util.stream.ForEachOps$ForEachOp.evaluateSequential(ForEachOps.java:150)
	at java.base/java.util.stream.ForEachOps$ForEachOp$OfRef.evaluateSequential(ForEachOps.java:173)
	at java.base/java.util.stream.AbstractPipeline.evaluate(AbstractPipeline.java:234)
	at java.base/java.util.stream.ReferencePipeline.forEach(ReferencePipeline.java:497)
	at org.junit.vintage.engine.VintageTestEngine.executeAllChildren(VintageTestEngine.java:80)
	at org.junit.vintage.engine.VintageTestEngine.execute(VintageTestEngine.java:71)
	at org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:220)
	at org.junit.platform.launcher.core.DefaultLauncher.lambda$execute$6(DefaultLauncher.java:188)
	at org.junit.platform.launcher.core.DefaultLauncher.withInterceptedStreams(DefaultLauncher.java:202)
	at org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:181)
	at org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:128)
	at org.apache.maven.surefire.junitplatform.JUnitPlatformProvider.invokeAllTests(JUnitPlatformProvider.java:150)
	at org.apache.maven.surefire.junitplatform.JUnitPlatformProvider.invoke(JUnitPlatformProvider.java:124)
	at org.apache.maven.surefire.booter.ForkedBooter.invokeProviderInSameClassLoader(ForkedBooter.java:384)
	at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:345)
	at org.apache.maven.surefire.booter.ForkedBooter.execute(ForkedBooter.java:126)
	at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:418)
Caused by: org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'groovyMarkupConfigurer' defined in class path resource [org/springframework/boot/autoconfigure/groovy/template/GroovyTemplateAutoConfiguration$GroovyMarkupConfiguration.class]: Invocation of init method failed; nested exception is java.lang.reflect.InaccessibleObjectException: Unable to make jdk.internal.loader.ClassLoaders$AppClassLoader(jdk.internal.loader.ClassLoaders$PlatformClassLoader,jdk.internal.loader.URLClassPath) accessible: module java.base does not "opens jdk.internal.loader" to unnamed module @60fa3495
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1803)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:595)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:517)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:323)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:222)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:321)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:202)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(DefaultListableBeanFactory.java:879)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:878)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:550)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:747)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:397)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:315)
	at org.springframework.boot.test.context.SpringBootContextLoader.loadContext(SpringBootContextLoader.java:125)
	at org.springframework.test.context.cache.DefaultCacheAwareContextLoaderDelegate.loadContextInternal(DefaultCacheAwareContextLoaderDelegate.java:99)
	at org.springframework.test.context.cache.DefaultCacheAwareContextLoaderDelegate.loadContext(DefaultCacheAwareContextLoaderDelegate.java:124)
	... 47 common frames omitted
Caused by: java.lang.reflect.InaccessibleObjectException: Unable to make jdk.internal.loader.ClassLoaders$AppClassLoader(jdk.internal.loader.ClassLoaders$PlatformClassLoader,jdk.internal.loader.URLClassPath) accessible: module java.base does not "opens jdk.internal.loader" to unnamed module @60fa3495
	at java.base/java.lang.reflect.AccessibleObject.checkCanSetAccessible(AccessibleObject.java:344)
	at java.base/java.lang.reflect.AccessibleObject.checkCanSetAccessible(AccessibleObject.java:284)
	at java.base/java.lang.reflect.Constructor.checkCanSetAccessible(Constructor.java:189)
	at java.base/java.lang.reflect.Constructor.setAccessible(Constructor.java:182)
	at org.codehaus.groovy.reflection.CachedConstructor$1.run(CachedConstructor.java:44)
	at java.base/java.security.AccessController.doPrivileged(AccessController.java:312)
	at org.codehaus.groovy.reflection.CachedConstructor.<init>(CachedConstructor.java:42)
	at org.codehaus.groovy.reflection.CachedClass$2.initValue(CachedClass.java:79)
	at org.codehaus.groovy.reflection.CachedClass$2.initValue(CachedClass.java:69)
	at org.codehaus.groovy.util.LazyReference.getLocked(LazyReference.java:49)
	at org.codehaus.groovy.util.LazyReference.get(LazyReference.java:36)
	at org.codehaus.groovy.reflection.CachedClass.getConstructors(CachedClass.java:268)
	at groovy.lang.MetaClassImpl.<init>(MetaClassImpl.java:218)
	at groovy.lang.MetaClassImpl.<init>(MetaClassImpl.java:228)
	at groovy.lang.MetaClassRegistry$MetaClassCreationHandle.createNormalMetaClass(MetaClassRegistry.java:171)
	at groovy.lang.MetaClassRegistry$MetaClassCreationHandle.createWithCustomLookup(MetaClassRegistry.java:161)
	at groovy.lang.MetaClassRegistry$MetaClassCreationHandle.create(MetaClassRegistry.java:144)
	at org.codehaus.groovy.reflection.ClassInfo.getMetaClassUnderLock(ClassInfo.java:253)
	at org.codehaus.groovy.reflection.ClassInfo.getMetaClass(ClassInfo.java:285)
	at org.codehaus.groovy.reflection.ClassInfo.getMetaClass(ClassInfo.java:295)
	at org.codehaus.groovy.runtime.metaclass.MetaClassRegistryImpl.getMetaClass(MetaClassRegistryImpl.java:261)
	at org.codehaus.groovy.runtime.InvokerHelper.getMetaClass(InvokerHelper.java:873)
	at org.codehaus.groovy.runtime.InvokerHelper.invokePojoMethod(InvokerHelper.java:906)
	at org.codehaus.groovy.runtime.InvokerHelper.invokeMethod(InvokerHelper.java:898)
	at org.codehaus.groovy.runtime.typehandling.DefaultTypeTransformation.castToBoolean(DefaultTypeTransformation.java:185)
	at org.codehaus.groovy.runtime.typehandling.DefaultTypeTransformation.booleanUnbox(DefaultTypeTransformation.java:74)
	at org.codehaus.groovy.control.customizers.ASTTransformationCustomizer.findASTTranformationClass(ASTTransformationCustomizer.groovy:209)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:567)
	at org.codehaus.groovy.reflection.CachedMethod.invoke(CachedMethod.java:93)
	at org.codehaus.groovy.runtime.callsite.StaticMetaMethodSite$StaticMetaMethodSiteNoUnwrapNoCoerce.invoke(StaticMetaMethodSite.java:151)
	at org.codehaus.groovy.runtime.callsite.StaticMetaMethodSite.callStatic(StaticMetaMethodSite.java:102)
	at org.codehaus.groovy.runtime.callsite.AbstractCallSite.callStatic(AbstractCallSite.java:214)
	at org.codehaus.groovy.control.customizers.ASTTransformationCustomizer.findPhase(ASTTransformationCustomizer.groovy:226)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:567)
	at org.codehaus.groovy.reflection.CachedMethod.invoke(CachedMethod.java:93)
	at org.codehaus.groovy.runtime.callsite.StaticMetaMethodSite$StaticMetaMethodSiteNoUnwrapNoCoerce.invoke(StaticMetaMethodSite.java:151)
	at org.codehaus.groovy.runtime.callsite.StaticMetaMethodSite.callStatic(StaticMetaMethodSite.java:102)
	at org.codehaus.groovy.runtime.callsite.AbstractCallSite.callStatic(AbstractCallSite.java:214)
	at org.codehaus.groovy.control.customizers.ASTTransformationCustomizer.<init>(ASTTransformationCustomizer.groovy:180)
	at org.codehaus.groovy.control.customizers.ASTTransformationCustomizer.<init>(ASTTransformationCustomizer.groovy:188)
	at groovy.text.markup.MarkupTemplateEngine.<init>(MarkupTemplateEngine.java:94)
	at org.springframework.web.servlet.view.groovy.GroovyMarkupConfigurer.createTemplateEngine(GroovyMarkupConfigurer.java:160)
	at org.springframework.web.servlet.view.groovy.GroovyMarkupConfigurer.afterPropertiesSet(GroovyMarkupConfigurer.java:153)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1862)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1799)
	... 62 common frames omitted
2020-11-25 20:53:48,937 DEBUG  [main] BasicTypeRegistry: Adding type registration boolean -> org.hibernate.type.BooleanType@ff2266c
2020-11-25 20:53:48,940 DEBUG  [main] BasicTypeRegistry: Adding type registration boolean -> org.hibernate.type.BooleanType@ff2266c
2020-11-25 20:53:48,940 DEBUG  [main] BasicTypeRegistry: Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@ff2266c
2020-11-25 20:53:48,940 DEBUG  [main] BasicTypeRegistry: Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@1d585fb
2020-11-25 20:53:48,940 DEBUG  [main] BasicTypeRegistry: Adding type registration true_false -> org.hibernate.type.TrueFalseType@7c8f047a
2020-11-25 20:53:48,940 DEBUG  [main] BasicTypeRegistry: Adding type registration yes_no -> org.hibernate.type.YesNoType@d949bc4
2020-11-25 20:53:48,940 DEBUG  [main] BasicTypeRegistry: Adding type registration byte -> org.hibernate.type.ByteType@29c25bbc
2020-11-25 20:53:48,940 DEBUG  [main] BasicTypeRegistry: Adding type registration byte -> org.hibernate.type.ByteType@29c25bbc
2020-11-25 20:53:48,940 DEBUG  [main] BasicTypeRegistry: Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@29c25bbc
2020-11-25 20:53:48,940 DEBUG  [main] BasicTypeRegistry: Adding type registration character -> org.hibernate.type.CharacterType@403f7aa2
2020-11-25 20:53:48,941 DEBUG  [main] BasicTypeRegistry: Adding type registration char -> org.hibernate.type.CharacterType@403f7aa2
2020-11-25 20:53:48,941 DEBUG  [main] BasicTypeRegistry: Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@403f7aa2
2020-11-25 20:53:48,941 DEBUG  [main] BasicTypeRegistry: Adding type registration short -> org.hibernate.type.ShortType@38cb1606
2020-11-25 20:53:48,941 DEBUG  [main] BasicTypeRegistry: Adding type registration short -> org.hibernate.type.ShortType@38cb1606
2020-11-25 20:53:48,941 DEBUG  [main] BasicTypeRegistry: Adding type registration java.lang.Short -> org.hibernate.type.ShortType@38cb1606
2020-11-25 20:53:48,941 DEBUG  [main] BasicTypeRegistry: Adding type registration integer -> org.hibernate.type.IntegerType@5d3b6585
2020-11-25 20:53:48,941 DEBUG  [main] BasicTypeRegistry: Adding type registration int -> org.hibernate.type.IntegerType@5d3b6585
2020-11-25 20:53:48,941 DEBUG  [main] BasicTypeRegistry: Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@5d3b6585
2020-11-25 20:53:48,941 DEBUG  [main] BasicTypeRegistry: Adding type registration long -> org.hibernate.type.LongType@4fea5ee0
2020-11-25 20:53:48,941 DEBUG  [main] BasicTypeRegistry: Adding type registration long -> org.hibernate.type.LongType@4fea5ee0
2020-11-25 20:53:48,942 DEBUG  [main] BasicTypeRegistry: Adding type registration java.lang.Long -> org.hibernate.type.LongType@4fea5ee0
2020-11-25 20:53:48,942 DEBUG  [main] BasicTypeRegistry: Adding type registration float -> org.hibernate.type.FloatType@7b3085a3
2020-11-25 20:53:48,942 DEBUG  [main] BasicTypeRegistry: Adding type registration float -> org.hibernate.type.FloatType@7b3085a3
2020-11-25 20:53:48,942 DEBUG  [main] BasicTypeRegistry: Adding type registration java.lang.Float -> org.hibernate.type.FloatType@7b3085a3
2020-11-25 20:53:48,942 DEBUG  [main] BasicTypeRegistry: Adding type registration double -> org.hibernate.type.DoubleType@5a7a6d34
2020-11-25 20:53:48,942 DEBUG  [main] BasicTypeRegistry: Adding type registration double -> org.hibernate.type.DoubleType@5a7a6d34
2020-11-25 20:53:48,942 DEBUG  [main] BasicTypeRegistry: Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@5a7a6d34
2020-11-25 20:53:48,943 DEBUG  [main] BasicTypeRegistry: Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@5ae66c98
2020-11-25 20:53:48,944 DEBUG  [main] BasicTypeRegistry: Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@5ae66c98
2020-11-25 20:53:48,944 DEBUG  [main] BasicTypeRegistry: Adding type registration big_integer -> org.hibernate.type.BigIntegerType@223cbf0d
2020-11-25 20:53:48,944 DEBUG  [main] BasicTypeRegistry: Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@223cbf0d
2020-11-25 20:53:48,944 DEBUG  [main] BasicTypeRegistry: Adding type registration string -> org.hibernate.type.StringType@4f581211
2020-11-25 20:53:48,944 DEBUG  [main] BasicTypeRegistry: Adding type registration java.lang.String -> org.hibernate.type.StringType@4f581211
2020-11-25 20:53:48,944 DEBUG  [main] BasicTypeRegistry: Adding type registration nstring -> org.hibernate.type.StringNVarcharType@6697f3d
2020-11-25 20:53:48,944 DEBUG  [main] BasicTypeRegistry: Adding type registration ncharacter -> org.hibernate.type.CharacterNCharType@f1d1463
2020-11-25 20:53:48,944 DEBUG  [main] BasicTypeRegistry: Adding type registration url -> org.hibernate.type.UrlType@44ddb518
2020-11-25 20:53:48,945 DEBUG  [main] BasicTypeRegistry: Adding type registration java.net.URL -> org.hibernate.type.UrlType@44ddb518
2020-11-25 20:53:48,946 DEBUG  [main] BasicTypeRegistry: Adding type registration Duration -> org.hibernate.type.DurationType@49e0b123
2020-11-25 20:53:48,946 DEBUG  [main] BasicTypeRegistry: Adding type registration java.time.Duration -> org.hibernate.type.DurationType@49e0b123
2020-11-25 20:53:48,946 DEBUG  [main] BasicTypeRegistry: Adding type registration Instant -> org.hibernate.type.InstantType@40a28bda
2020-11-25 20:53:48,946 DEBUG  [main] BasicTypeRegistry: Adding type registration java.time.Instant -> org.hibernate.type.InstantType@40a28bda
2020-11-25 20:53:48,946 DEBUG  [main] BasicTypeRegistry: Adding type registration LocalDateTime -> org.hibernate.type.LocalDateTimeType@33430fc
2020-11-25 20:53:48,946 DEBUG  [main] BasicTypeRegistry: Adding type registration java.time.LocalDateTime -> org.hibernate.type.LocalDateTimeType@33430fc
2020-11-25 20:53:48,946 DEBUG  [main] BasicTypeRegistry: Adding type registration LocalDate -> org.hibernate.type.LocalDateType@d7055be
2020-11-25 20:53:48,947 DEBUG  [main] BasicTypeRegistry: Adding type registration java.time.LocalDate -> org.hibernate.type.LocalDateType@d7055be
2020-11-25 20:53:48,947 DEBUG  [main] BasicTypeRegistry: Adding type registration LocalTime -> org.hibernate.type.LocalTimeType@3c7d8a4
2020-11-25 20:53:48,948 DEBUG  [main] BasicTypeRegistry: Adding type registration java.time.LocalTime -> org.hibernate.type.LocalTimeType@3c7d8a4
2020-11-25 20:53:48,949 DEBUG  [main] BasicTypeRegistry: Adding type registration OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@7a117dc2
2020-11-25 20:53:48,949 DEBUG  [main] BasicTypeRegistry: Adding type registration java.time.OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@7a117dc2
2020-11-25 20:53:48,949 DEBUG  [main] BasicTypeRegistry: Adding type registration OffsetTime -> org.hibernate.type.OffsetTimeType@3c64339f
2020-11-25 20:53:48,949 DEBUG  [main] BasicTypeRegistry: Adding type registration java.time.OffsetTime -> org.hibernate.type.OffsetTimeType@3c64339f
2020-11-25 20:53:48,949 DEBUG  [main] BasicTypeRegistry: Adding type registration ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@30c8c6ab
2020-11-25 20:53:48,949 DEBUG  [main] BasicTypeRegistry: Adding type registration java.time.ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@30c8c6ab
2020-11-25 20:53:48,950 DEBUG  [main] BasicTypeRegistry: Adding type registration date -> org.hibernate.type.DateType@61c5fd78
2020-11-25 20:53:48,950 DEBUG  [main] BasicTypeRegistry: Adding type registration java.sql.Date -> org.hibernate.type.DateType@61c5fd78
2020-11-25 20:53:48,950 DEBUG  [main] BasicTypeRegistry: Adding type registration time -> org.hibernate.type.TimeType@77856cc5
2020-11-25 20:53:48,950 DEBUG  [main] BasicTypeRegistry: Adding type registration java.sql.Time -> org.hibernate.type.TimeType@77856cc5
2020-11-25 20:53:48,954 DEBUG  [main] BasicTypeRegistry: Adding type registration timestamp -> org.hibernate.type.TimestampType@12166229
2020-11-25 20:53:48,954 DEBUG  [main] BasicTypeRegistry: Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@12166229
2020-11-25 20:53:48,954 DEBUG  [main] BasicTypeRegistry: Adding type registration java.util.Date -> org.hibernate.type.TimestampType@12166229
2020-11-25 20:53:48,955 DEBUG  [main] BasicTypeRegistry: Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@2b4829aa
2020-11-25 20:53:48,955 DEBUG  [main] BasicTypeRegistry: Adding type registration calendar -> org.hibernate.type.CalendarType@3ec082a1
2020-11-25 20:53:48,955 DEBUG  [main] BasicTypeRegistry: Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@3ec082a1
2020-11-25 20:53:48,955 DEBUG  [main] BasicTypeRegistry: Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@3ec082a1
2020-11-25 20:53:48,955 DEBUG  [main] BasicTypeRegistry: Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@429f0ca8
2020-11-25 20:53:48,956 DEBUG  [main] BasicTypeRegistry: Adding type registration locale -> org.hibernate.type.LocaleType@11c3ce6a
2020-11-25 20:53:48,956 DEBUG  [main] BasicTypeRegistry: Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@11c3ce6a
2020-11-25 20:53:48,956 DEBUG  [main] BasicTypeRegistry: Adding type registration currency -> org.hibernate.type.CurrencyType@28519bfb
2020-11-25 20:53:48,956 DEBUG  [main] BasicTypeRegistry: Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@28519bfb
2020-11-25 20:53:48,956 DEBUG  [main] BasicTypeRegistry: Adding type registration timezone -> org.hibernate.type.TimeZoneType@7aa15a80
2020-11-25 20:53:48,956 DEBUG  [main] BasicTypeRegistry: Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@7aa15a80
2020-11-25 20:53:48,956 DEBUG  [main] BasicTypeRegistry: Adding type registration class -> org.hibernate.type.ClassType@48d5ca17
2020-11-25 20:53:48,956 DEBUG  [main] BasicTypeRegistry: Adding type registration java.lang.Class -> org.hibernate.type.ClassType@48d5ca17
2020-11-25 20:53:48,956 DEBUG  [main] BasicTypeRegistry: Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@79b8ecb
2020-11-25 20:53:48,956 DEBUG  [main] BasicTypeRegistry: Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@79b8ecb
2020-11-25 20:53:48,956 DEBUG  [main] BasicTypeRegistry: Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@c0013b8
2020-11-25 20:53:48,956 DEBUG  [main] BasicTypeRegistry: Adding type registration binary -> org.hibernate.type.BinaryType@2a42019a
2020-11-25 20:53:48,956 DEBUG  [main] BasicTypeRegistry: Adding type registration byte[] -> org.hibernate.type.BinaryType@2a42019a
2020-11-25 20:53:48,957 DEBUG  [main] BasicTypeRegistry: Adding type registration [B -> org.hibernate.type.BinaryType@2a42019a
2020-11-25 20:53:48,957 DEBUG  [main] BasicTypeRegistry: Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@495da9a7
2020-11-25 20:53:48,957 DEBUG  [main] BasicTypeRegistry: Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@495da9a7
2020-11-25 20:53:48,957 DEBUG  [main] BasicTypeRegistry: Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@495da9a7
2020-11-25 20:53:48,957 DEBUG  [main] BasicTypeRegistry: Adding type registration row_version -> org.hibernate.type.RowVersionType@35becbd4
2020-11-25 20:53:48,957 DEBUG  [main] BasicTypeRegistry: Adding type registration image -> org.hibernate.type.ImageType@30fa8a6b
2020-11-25 20:53:48,957 DEBUG  [main] BasicTypeRegistry: Adding type registration characters -> org.hibernate.type.CharArrayType@4c8d45cf
2020-11-25 20:53:48,957 DEBUG  [main] BasicTypeRegistry: Adding type registration char[] -> org.hibernate.type.CharArrayType@4c8d45cf
2020-11-25 20:53:48,957 DEBUG  [main] BasicTypeRegistry: Adding type registration [C -> org.hibernate.type.CharArrayType@4c8d45cf
2020-11-25 20:53:48,957 DEBUG  [main] BasicTypeRegistry: Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@5b490d5e
2020-11-25 20:53:48,957 DEBUG  [main] BasicTypeRegistry: Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@5b490d5e
2020-11-25 20:53:48,958 DEBUG  [main] BasicTypeRegistry: Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@5b490d5e
2020-11-25 20:53:48,960 DEBUG  [main] BasicTypeRegistry: Adding type registration text -> org.hibernate.type.TextType@18b04526
2020-11-25 20:53:48,960 DEBUG  [main] BasicTypeRegistry: Adding type registration ntext -> org.hibernate.type.NTextType@246df37b
2020-11-25 20:53:48,960 DEBUG  [main] BasicTypeRegistry: Adding type registration blob -> org.hibernate.type.BlobType@56881196
2020-11-25 20:53:48,960 DEBUG  [main] BasicTypeRegistry: Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@56881196
2020-11-25 20:53:48,960 DEBUG  [main] BasicTypeRegistry: Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@131c0b6f
2020-11-25 20:53:48,960 DEBUG  [main] BasicTypeRegistry: Adding type registration clob -> org.hibernate.type.ClobType@7fc1fd31
2020-11-25 20:53:48,960 DEBUG  [main] BasicTypeRegistry: Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@7fc1fd31
2020-11-25 20:53:48,960 DEBUG  [main] BasicTypeRegistry: Adding type registration nclob -> org.hibernate.type.NClobType@70777a65
2020-11-25 20:53:48,960 DEBUG  [main] BasicTypeRegistry: Adding type registration java.sql.NClob -> org.hibernate.type.NClobType@70777a65
2020-11-25 20:53:48,961 DEBUG  [main] BasicTypeRegistry: Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@2f6f4ac4
2020-11-25 20:53:48,961 DEBUG  [main] BasicTypeRegistry: Adding type registration materialized_nclob -> org.hibernate.type.MaterializedNClobType@7d685f4e
2020-11-25 20:53:48,961 DEBUG  [main] BasicTypeRegistry: Adding type registration serializable -> org.hibernate.type.SerializableType@319aa9ee
2020-11-25 20:53:48,961 DEBUG  [main] BasicTypeRegistry: Adding type registration object -> org.hibernate.type.ObjectType@54234569
2020-11-25 20:53:48,961 DEBUG  [main] BasicTypeRegistry: Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@54234569
2020-11-25 20:53:48,961 DEBUG  [main] BasicTypeRegistry: Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@4effd9f8
2020-11-25 20:53:48,961 DEBUG  [main] BasicTypeRegistry: Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@78e73f67
2020-11-25 20:53:48,961 DEBUG  [main] BasicTypeRegistry: Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@212c969a
2020-11-25 20:53:48,961 DEBUG  [main] BasicTypeRegistry: Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@7d76036a
2020-11-25 20:53:48,962 DEBUG  [main] BasicTypeRegistry: Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@4d763525
2020-11-25 20:53:48,962 DEBUG  [main] BasicTypeRegistry: Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@cab37eb
2020-11-25 20:53:48,962 DEBUG  [main] BasicTypeRegistry: Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@49f6e8a2
2020-11-25 20:53:48,962 DEBUG  [main] BasicTypeRegistry: Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@4d6cfa5
2020-11-25 20:53:48,979 DEBUG  [main] TypeConfiguration$Scope: Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@35eda194] to MetadataBuildingContext [org.hibernate.boot.internal.MetadataBuildingContextRootImpl@6b308b7c]
2020-11-25 20:53:48,993 DEBUG  [main] EnumType: Using NAMED-based conversion for Enum com.sf.back.entities.Kind
2020-11-25 20:53:48,996 DEBUG  [main] EnumType: Using NAMED-based conversion for Enum com.sf.back.entities.Kind
2020-11-25 20:53:49,014 DEBUG  [main] TypeConfiguration$Scope: Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@35eda194] to SessionFactoryImpl [org.hibernate.internal.SessionFactoryImpl@34d81096]
2020-11-25 20:53:49,014 DEBUG  [main] EnumType: Using NAMED-based conversion for Enum com.sf.back.entities.Kind
2020-11-25 20:53:49,015 DEBUG  [main] EnumType: Using NAMED-based conversion for Enum com.sf.back.entities.Kind
2020-11-25 20:53:49,034 DEBUG  [main] EnumType: Using NAMED-based conversion for Enum com.sf.back.entities.Kind
2020-11-25 20:53:49,034 DEBUG  [main] EnumType: Using NAMED-based conversion for Enum com.sf.back.entities.Kind
2020-11-25 20:53:49,055 DEBUG  [main] EnumType: Using NAMED-based conversion for Enum com.sf.back.entities.Kind
2020-11-25 20:53:49,055 DEBUG  [main] EnumType: Using NAMED-based conversion for Enum com.sf.back.entities.Kind
2020-11-25 20:53:49,060 DEBUG  [main] EnumType: Using NAMED-based conversion for Enum com.sf.back.entities.Kind
2020-11-25 20:53:49,070 TRACE  [main] TypeConfiguration$Scope: Handling #sessionFactoryCreated from [org.hibernate.internal.SessionFactoryImpl@34d81096] for TypeConfiguration
2020-11-25 20:53:49,168 WARN   [main] JpaBaseConfiguration$JpaWebConfiguration: spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2020-11-25 20:53:49,248 WARN   [main] GenericWebApplicationContext: Exception encountered during context initialization - cancelling refresh attempt: org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'groovyMarkupConfigurer' defined in class path resource [org/springframework/boot/autoconfigure/groovy/template/GroovyTemplateAutoConfiguration$GroovyMarkupConfiguration.class]: Invocation of init method failed; nested exception is java.lang.reflect.InaccessibleObjectException: Unable to make jdk.internal.loader.ClassLoaders$AppClassLoader(jdk.internal.loader.ClassLoaders$PlatformClassLoader,jdk.internal.loader.URLClassPath) accessible: module java.base does not "opens jdk.internal.loader" to unnamed module @60fa3495
2020-11-25 20:53:49,250 TRACE  [main] TypeConfiguration$Scope: Handling #sessionFactoryClosed from [org.hibernate.internal.SessionFactoryImpl@34d81096] for TypeConfiguration
2020-11-25 20:53:49,250 DEBUG  [main] TypeConfiguration$Scope: Un-scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration$Scope@3dd3f773] from SessionFactory [org.hibernate.internal.SessionFactoryImpl@34d81096]
2020-11-25 20:53:49,255 ERROR  [main] SpringApplication: Application run failed
org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'groovyMarkupConfigurer' defined in class path resource [org/springframework/boot/autoconfigure/groovy/template/GroovyTemplateAutoConfiguration$GroovyMarkupConfiguration.class]: Invocation of init method failed; nested exception is java.lang.reflect.InaccessibleObjectException: Unable to make jdk.internal.loader.ClassLoaders$AppClassLoader(jdk.internal.loader.ClassLoaders$PlatformClassLoader,jdk.internal.loader.URLClassPath) accessible: module java.base does not "opens jdk.internal.loader" to unnamed module @60fa3495
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1803)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:595)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:517)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:323)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:222)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:321)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:202)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(DefaultListableBeanFactory.java:879)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:878)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:550)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:747)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:397)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:315)
	at org.springframework.boot.test.context.SpringBootContextLoader.loadContext(SpringBootContextLoader.java:125)
	at org.springframework.test.context.cache.DefaultCacheAwareContextLoaderDelegate.loadContextInternal(DefaultCacheAwareContextLoaderDelegate.java:99)
	at org.springframework.test.context.cache.DefaultCacheAwareContextLoaderDelegate.loadContext(DefaultCacheAwareContextLoaderDelegate.java:124)
	at org.springframework.test.context.support.DefaultTestContext.getApplicationContext(DefaultTestContext.java:123)
	at org.springframework.test.context.web.ServletTestExecutionListener.setUpRequestContextIfNecessary(ServletTestExecutionListener.java:190)
	at org.springframework.test.context.web.ServletTestExecutionListener.prepareTestInstance(ServletTestExecutionListener.java:132)
	at org.springframework.test.context.TestContextManager.prepareTestInstance(TestContextManager.java:244)
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner.createTest(SpringJUnit4ClassRunner.java:227)
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner$1.runReflectiveCall(SpringJUnit4ClassRunner.java:289)
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner.methodBlock(SpringJUnit4ClassRunner.java:291)
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner.runChild(SpringJUnit4ClassRunner.java:246)
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner.runChild(SpringJUnit4ClassRunner.java:97)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:290)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:71)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:58)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268)
	at org.junit.internal.runners.statements.RunBefores.evaluate(RunBefores.java:26)
	at org.springframework.test.context.junit4.statements.RunBeforeTestClassCallbacks.evaluate(RunBeforeTestClassCallbacks.java:61)
	at org.junit.internal.runners.statements.RunAfters.evaluate(RunAfters.java:27)
	at org.springframework.test.context.junit4.statements.RunAfterTestClassCallbacks.evaluate(RunAfterTestClassCallbacks.java:70)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:363)
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner.run(SpringJUnit4ClassRunner.java:190)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:137)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:115)
	at org.junit.vintage.engine.execution.RunnerExecutor.execute(RunnerExecutor.java:40)
	at java.base/java.util.stream.ForEachOps$ForEachOp$OfRef.accept(ForEachOps.java:183)
	at java.base/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:195)
	at java.base/java.util.Iterator.forEachRemaining(Iterator.java:133)
	at java.base/java.util.Spliterators$IteratorSpliterator.forEachRemaining(Spliterators.java:1801)
	at java.base/java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:484)
	at java.base/java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:474)
	at java.base/java.util.stream.ForEachOps$ForEachOp.evaluateSequential(ForEachOps.java:150)
	at java.base/java.util.stream.ForEachOps$ForEachOp$OfRef.evaluateSequential(ForEachOps.java:173)
	at java.base/java.util.stream.AbstractPipeline.evaluate(AbstractPipeline.java:234)
	at java.base/java.util.stream.ReferencePipeline.forEach(ReferencePipeline.java:497)
	at org.junit.vintage.engine.VintageTestEngine.executeAllChildren(VintageTestEngine.java:80)
	at org.junit.vintage.engine.VintageTestEngine.execute(VintageTestEngine.java:71)
	at org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:220)
	at org.junit.platform.launcher.core.DefaultLauncher.lambda$execute$6(DefaultLauncher.java:188)
	at org.junit.platform.launcher.core.DefaultLauncher.withInterceptedStreams(DefaultLauncher.java:202)
	at org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:181)
	at org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:128)
	at org.apache.maven.surefire.junitplatform.JUnitPlatformProvider.invokeAllTests(JUnitPlatformProvider.java:150)
	at org.apache.maven.surefire.junitplatform.JUnitPlatformProvider.invoke(JUnitPlatformProvider.java:124)
	at org.apache.maven.surefire.booter.ForkedBooter.invokeProviderInSameClassLoader(ForkedBooter.java:384)
	at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:345)
	at org.apache.maven.surefire.booter.ForkedBooter.execute(ForkedBooter.java:126)
	at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:418)
Caused by: java.lang.reflect.InaccessibleObjectException: Unable to make jdk.internal.loader.ClassLoaders$AppClassLoader(jdk.internal.loader.ClassLoaders$PlatformClassLoader,jdk.internal.loader.URLClassPath) accessible: module java.base does not "opens jdk.internal.loader" to unnamed module @60fa3495
	at java.base/java.lang.reflect.AccessibleObject.checkCanSetAccessible(AccessibleObject.java:344)
	at java.base/java.lang.reflect.AccessibleObject.checkCanSetAccessible(AccessibleObject.java:284)
	at java.base/java.lang.reflect.Constructor.checkCanSetAccessible(Constructor.java:189)
	at java.base/java.lang.reflect.Constructor.setAccessible(Constructor.java:182)
	at org.codehaus.groovy.reflection.CachedConstructor$1.run(CachedConstructor.java:44)
	at java.base/java.security.AccessController.doPrivileged(AccessController.java:312)
	at org.codehaus.groovy.reflection.CachedConstructor.<init>(CachedConstructor.java:42)
	at org.codehaus.groovy.reflection.CachedClass$2.initValue(CachedClass.java:79)
	at org.codehaus.groovy.reflection.CachedClass$2.initValue(CachedClass.java:69)
	at org.codehaus.groovy.util.LazyReference.getLocked(LazyReference.java:49)
	at org.codehaus.groovy.util.LazyReference.get(LazyReference.java:36)
	at org.codehaus.groovy.reflection.CachedClass.getConstructors(CachedClass.java:268)
	at groovy.lang.MetaClassImpl.<init>(MetaClassImpl.java:218)
	at groovy.lang.MetaClassImpl.<init>(MetaClassImpl.java:228)
	at groovy.lang.MetaClassRegistry$MetaClassCreationHandle.createNormalMetaClass(MetaClassRegistry.java:171)
	at groovy.lang.MetaClassRegistry$MetaClassCreationHandle.createWithCustomLookup(MetaClassRegistry.java:161)
	at groovy.lang.MetaClassRegistry$MetaClassCreationHandle.create(MetaClassRegistry.java:144)
	at org.codehaus.groovy.reflection.ClassInfo.getMetaClassUnderLock(ClassInfo.java:253)
	at org.codehaus.groovy.reflection.ClassInfo.getMetaClass(ClassInfo.java:285)
	at org.codehaus.groovy.reflection.ClassInfo.getMetaClass(ClassInfo.java:295)
	at org.codehaus.groovy.runtime.metaclass.MetaClassRegistryImpl.getMetaClass(MetaClassRegistryImpl.java:261)
	at org.codehaus.groovy.runtime.InvokerHelper.getMetaClass(InvokerHelper.java:873)
	at org.codehaus.groovy.runtime.InvokerHelper.invokePojoMethod(InvokerHelper.java:906)
	at org.codehaus.groovy.runtime.InvokerHelper.invokeMethod(InvokerHelper.java:898)
	at org.codehaus.groovy.runtime.typehandling.DefaultTypeTransformation.castToBoolean(DefaultTypeTransformation.java:185)
	at org.codehaus.groovy.runtime.typehandling.DefaultTypeTransformation.booleanUnbox(DefaultTypeTransformation.java:74)
	at org.codehaus.groovy.control.customizers.ASTTransformationCustomizer.findASTTranformationClass(ASTTransformationCustomizer.groovy:209)
	at jdk.internal.reflect.GeneratedMethodAccessor358.invoke(Unknown Source)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:567)
	at org.codehaus.groovy.reflection.CachedMethod.invoke(CachedMethod.java:93)
	at org.codehaus.groovy.runtime.callsite.StaticMetaMethodSite$StaticMetaMethodSiteNoUnwrapNoCoerce.invoke(StaticMetaMethodSite.java:151)
	at org.codehaus.groovy.runtime.callsite.StaticMetaMethodSite.callStatic(StaticMetaMethodSite.java:102)
	at org.codehaus.groovy.runtime.callsite.AbstractCallSite.callStatic(AbstractCallSite.java:214)
	at org.codehaus.groovy.control.customizers.ASTTransformationCustomizer.findPhase(ASTTransformationCustomizer.groovy:226)
	at jdk.internal.reflect.GeneratedMethodAccessor357.invoke(Unknown Source)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:567)
	at org.codehaus.groovy.reflection.CachedMethod.invoke(CachedMethod.java:93)
	at org.codehaus.groovy.runtime.callsite.StaticMetaMethodSite$StaticMetaMethodSiteNoUnwrapNoCoerce.invoke(StaticMetaMethodSite.java:151)
	at org.codehaus.groovy.runtime.callsite.StaticMetaMethodSite.callStatic(StaticMetaMethodSite.java:102)
	at org.codehaus.groovy.runtime.callsite.AbstractCallSite.callStatic(AbstractCallSite.java:214)
	at org.codehaus.groovy.control.customizers.ASTTransformationCustomizer.<init>(ASTTransformationCustomizer.groovy:180)
	at org.codehaus.groovy.control.customizers.ASTTransformationCustomizer.<init>(ASTTransformationCustomizer.groovy:188)
	at groovy.text.markup.MarkupTemplateEngine.<init>(MarkupTemplateEngine.java:94)
	at org.springframework.web.servlet.view.groovy.GroovyMarkupConfigurer.createTemplateEngine(GroovyMarkupConfigurer.java:160)
	at org.springframework.web.servlet.view.groovy.GroovyMarkupConfigurer.afterPropertiesSet(GroovyMarkupConfigurer.java:153)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1862)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1799)
	... 62 common frames omitted
2020-11-25 20:53:49,256 ERROR  [main] TestContextManager: Caught exception while allowing TestExecutionListener [org.springframework.test.context.web.ServletTestExecutionListener@701dbfbd] to prepare test instance [com.sf.service.ProblemServiceTest@406b6988]
java.lang.IllegalStateException: Failed to load ApplicationContext
	at org.springframework.test.context.cache.DefaultCacheAwareContextLoaderDelegate.loadContext(DefaultCacheAwareContextLoaderDelegate.java:132)
	at org.springframework.test.context.support.DefaultTestContext.getApplicationContext(DefaultTestContext.java:123)
	at org.springframework.test.context.web.ServletTestExecutionListener.setUpRequestContextIfNecessary(ServletTestExecutionListener.java:190)
	at org.springframework.test.context.web.ServletTestExecutionListener.prepareTestInstance(ServletTestExecutionListener.java:132)
	at org.springframework.test.context.TestContextManager.prepareTestInstance(TestContextManager.java:244)
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner.createTest(SpringJUnit4ClassRunner.java:227)
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner$1.runReflectiveCall(SpringJUnit4ClassRunner.java:289)
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner.methodBlock(SpringJUnit4ClassRunner.java:291)
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner.runChild(SpringJUnit4ClassRunner.java:246)
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner.runChild(SpringJUnit4ClassRunner.java:97)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:290)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:71)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:58)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268)
	at org.junit.internal.runners.statements.RunBefores.evaluate(RunBefores.java:26)
	at org.springframework.test.context.junit4.statements.RunBeforeTestClassCallbacks.evaluate(RunBeforeTestClassCallbacks.java:61)
	at org.junit.internal.runners.statements.RunAfters.evaluate(RunAfters.java:27)
	at org.springframework.test.context.junit4.statements.RunAfterTestClassCallbacks.evaluate(RunAfterTestClassCallbacks.java:70)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:363)
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner.run(SpringJUnit4ClassRunner.java:190)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:137)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:115)
	at org.junit.vintage.engine.execution.RunnerExecutor.execute(RunnerExecutor.java:40)
	at java.base/java.util.stream.ForEachOps$ForEachOp$OfRef.accept(ForEachOps.java:183)
	at java.base/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:195)
	at java.base/java.util.Iterator.forEachRemaining(Iterator.java:133)
	at java.base/java.util.Spliterators$IteratorSpliterator.forEachRemaining(Spliterators.java:1801)
	at java.base/java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:484)
	at java.base/java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:474)
	at java.base/java.util.stream.ForEachOps$ForEachOp.evaluateSequential(ForEachOps.java:150)
	at java.base/java.util.stream.ForEachOps$ForEachOp$OfRef.evaluateSequential(ForEachOps.java:173)
	at java.base/java.util.stream.AbstractPipeline.evaluate(AbstractPipeline.java:234)
	at java.base/java.util.stream.ReferencePipeline.forEach(ReferencePipeline.java:497)
	at org.junit.vintage.engine.VintageTestEngine.executeAllChildren(VintageTestEngine.java:80)
	at org.junit.vintage.engine.VintageTestEngine.execute(VintageTestEngine.java:71)
	at org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:220)
	at org.junit.platform.launcher.core.DefaultLauncher.lambda$execute$6(DefaultLauncher.java:188)
	at org.junit.platform.launcher.core.DefaultLauncher.withInterceptedStreams(DefaultLauncher.java:202)
	at org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:181)
	at org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:128)
	at org.apache.maven.surefire.junitplatform.JUnitPlatformProvider.invokeAllTests(JUnitPlatformProvider.java:150)
	at org.apache.maven.surefire.junitplatform.JUnitPlatformProvider.invoke(JUnitPlatformProvider.java:124)
	at org.apache.maven.surefire.booter.ForkedBooter.invokeProviderInSameClassLoader(ForkedBooter.java:384)
	at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:345)
	at org.apache.maven.surefire.booter.ForkedBooter.execute(ForkedBooter.java:126)
	at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:418)
Caused by: org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'groovyMarkupConfigurer' defined in class path resource [org/springframework/boot/autoconfigure/groovy/template/GroovyTemplateAutoConfiguration$GroovyMarkupConfiguration.class]: Invocation of init method failed; nested exception is java.lang.reflect.InaccessibleObjectException: Unable to make jdk.internal.loader.ClassLoaders$AppClassLoader(jdk.internal.loader.ClassLoaders$PlatformClassLoader,jdk.internal.loader.URLClassPath) accessible: module java.base does not "opens jdk.internal.loader" to unnamed module @60fa3495
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1803)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:595)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:517)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:323)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:222)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:321)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:202)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(DefaultListableBeanFactory.java:879)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:878)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:550)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:747)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:397)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:315)
	at org.springframework.boot.test.context.SpringBootContextLoader.loadContext(SpringBootContextLoader.java:125)
	at org.springframework.test.context.cache.DefaultCacheAwareContextLoaderDelegate.loadContextInternal(DefaultCacheAwareContextLoaderDelegate.java:99)
	at org.springframework.test.context.cache.DefaultCacheAwareContextLoaderDelegate.loadContext(DefaultCacheAwareContextLoaderDelegate.java:124)
	... 47 common frames omitted
Caused by: java.lang.reflect.InaccessibleObjectException: Unable to make jdk.internal.loader.ClassLoaders$AppClassLoader(jdk.internal.loader.ClassLoaders$PlatformClassLoader,jdk.internal.loader.URLClassPath) accessible: module java.base does not "opens jdk.internal.loader" to unnamed module @60fa3495
	at java.base/java.lang.reflect.AccessibleObject.checkCanSetAccessible(AccessibleObject.java:344)
	at java.base/java.lang.reflect.AccessibleObject.checkCanSetAccessible(AccessibleObject.java:284)
	at java.base/java.lang.reflect.Constructor.checkCanSetAccessible(Constructor.java:189)
	at java.base/java.lang.reflect.Constructor.setAccessible(Constructor.java:182)
	at org.codehaus.groovy.reflection.CachedConstructor$1.run(CachedConstructor.java:44)
	at java.base/java.security.AccessController.doPrivileged(AccessController.java:312)
	at org.codehaus.groovy.reflection.CachedConstructor.<init>(CachedConstructor.java:42)
	at org.codehaus.groovy.reflection.CachedClass$2.initValue(CachedClass.java:79)
	at org.codehaus.groovy.reflection.CachedClass$2.initValue(CachedClass.java:69)
	at org.codehaus.groovy.util.LazyReference.getLocked(LazyReference.java:49)
	at org.codehaus.groovy.util.LazyReference.get(LazyReference.java:36)
	at org.codehaus.groovy.reflection.CachedClass.getConstructors(CachedClass.java:268)
	at groovy.lang.MetaClassImpl.<init>(MetaClassImpl.java:218)
	at groovy.lang.MetaClassImpl.<init>(MetaClassImpl.java:228)
	at groovy.lang.MetaClassRegistry$MetaClassCreationHandle.createNormalMetaClass(MetaClassRegistry.java:171)
	at groovy.lang.MetaClassRegistry$MetaClassCreationHandle.createWithCustomLookup(MetaClassRegistry.java:161)
	at groovy.lang.MetaClassRegistry$MetaClassCreationHandle.create(MetaClassRegistry.java:144)
	at org.codehaus.groovy.reflection.ClassInfo.getMetaClassUnderLock(ClassInfo.java:253)
	at org.codehaus.groovy.reflection.ClassInfo.getMetaClass(ClassInfo.java:285)
	at org.codehaus.groovy.reflection.ClassInfo.getMetaClass(ClassInfo.java:295)
	at org.codehaus.groovy.runtime.metaclass.MetaClassRegistryImpl.getMetaClass(MetaClassRegistryImpl.java:261)
	at org.codehaus.groovy.runtime.InvokerHelper.getMetaClass(InvokerHelper.java:873)
	at org.codehaus.groovy.runtime.InvokerHelper.invokePojoMethod(InvokerHelper.java:906)
	at org.codehaus.groovy.runtime.InvokerHelper.invokeMethod(InvokerHelper.java:898)
	at org.codehaus.groovy.runtime.typehandling.DefaultTypeTransformation.castToBoolean(DefaultTypeTransformation.java:185)
	at org.codehaus.groovy.runtime.typehandling.DefaultTypeTransformation.booleanUnbox(DefaultTypeTransformation.java:74)
	at org.codehaus.groovy.control.customizers.ASTTransformationCustomizer.findASTTranformationClass(ASTTransformationCustomizer.groovy:209)
	at jdk.internal.reflect.GeneratedMethodAccessor358.invoke(Unknown Source)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:567)
	at org.codehaus.groovy.reflection.CachedMethod.invoke(CachedMethod.java:93)
	at org.codehaus.groovy.runtime.callsite.StaticMetaMethodSite$StaticMetaMethodSiteNoUnwrapNoCoerce.invoke(StaticMetaMethodSite.java:151)
	at org.codehaus.groovy.runtime.callsite.StaticMetaMethodSite.callStatic(StaticMetaMethodSite.java:102)
	at org.codehaus.groovy.runtime.callsite.AbstractCallSite.callStatic(AbstractCallSite.java:214)
	at org.codehaus.groovy.control.customizers.ASTTransformationCustomizer.findPhase(ASTTransformationCustomizer.groovy:226)
	at jdk.internal.reflect.GeneratedMethodAccessor357.invoke(Unknown Source)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:567)
	at org.codehaus.groovy.reflection.CachedMethod.invoke(CachedMethod.java:93)
	at org.codehaus.groovy.runtime.callsite.StaticMetaMethodSite$StaticMetaMethodSiteNoUnwrapNoCoerce.invoke(StaticMetaMethodSite.java:151)
	at org.codehaus.groovy.runtime.callsite.StaticMetaMethodSite.callStatic(StaticMetaMethodSite.java:102)
	at org.codehaus.groovy.runtime.callsite.AbstractCallSite.callStatic(AbstractCallSite.java:214)
	at org.codehaus.groovy.control.customizers.ASTTransformationCustomizer.<init>(ASTTransformationCustomizer.groovy:180)
	at org.codehaus.groovy.control.customizers.ASTTransformationCustomizer.<init>(ASTTransformationCustomizer.groovy:188)
	at groovy.text.markup.MarkupTemplateEngine.<init>(MarkupTemplateEngine.java:94)
	at org.springframework.web.servlet.view.groovy.GroovyMarkupConfigurer.createTemplateEngine(GroovyMarkupConfigurer.java:160)
	at org.springframework.web.servlet.view.groovy.GroovyMarkupConfigurer.afterPropertiesSet(GroovyMarkupConfigurer.java:153)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1862)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1799)
	... 62 common frames omitted
2020-11-25 20:53:49,567 DEBUG  [main] BasicTypeRegistry: Adding type registration boolean -> org.hibernate.type.BooleanType@ff2266c
2020-11-25 20:53:49,570 DEBUG  [main] BasicTypeRegistry: Adding type registration boolean -> org.hibernate.type.BooleanType@ff2266c
2020-11-25 20:53:49,571 DEBUG  [main] BasicTypeRegistry: Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@ff2266c
2020-11-25 20:53:49,571 DEBUG  [main] BasicTypeRegistry: Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@1d585fb
2020-11-25 20:53:49,571 DEBUG  [main] BasicTypeRegistry: Adding type registration true_false -> org.hibernate.type.TrueFalseType@7c8f047a
2020-11-25 20:53:49,572 DEBUG  [main] BasicTypeRegistry: Adding type registration yes_no -> org.hibernate.type.YesNoType@d949bc4
2020-11-25 20:53:49,572 DEBUG  [main] BasicTypeRegistry: Adding type registration byte -> org.hibernate.type.ByteType@29c25bbc
2020-11-25 20:53:49,572 DEBUG  [main] BasicTypeRegistry: Adding type registration byte -> org.hibernate.type.ByteType@29c25bbc
2020-11-25 20:53:49,572 DEBUG  [main] BasicTypeRegistry: Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@29c25bbc
2020-11-25 20:53:49,572 DEBUG  [main] BasicTypeRegistry: Adding type registration character -> org.hibernate.type.CharacterType@403f7aa2
2020-11-25 20:53:49,572 DEBUG  [main] BasicTypeRegistry: Adding type registration char -> org.hibernate.type.CharacterType@403f7aa2
2020-11-25 20:53:49,572 DEBUG  [main] BasicTypeRegistry: Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@403f7aa2
2020-11-25 20:53:49,572 DEBUG  [main] BasicTypeRegistry: Adding type registration short -> org.hibernate.type.ShortType@38cb1606
2020-11-25 20:53:49,572 DEBUG  [main] BasicTypeRegistry: Adding type registration short -> org.hibernate.type.ShortType@38cb1606
2020-11-25 20:53:49,572 DEBUG  [main] BasicTypeRegistry: Adding type registration java.lang.Short -> org.hibernate.type.ShortType@38cb1606
2020-11-25 20:53:49,572 DEBUG  [main] BasicTypeRegistry: Adding type registration integer -> org.hibernate.type.IntegerType@5d3b6585
2020-11-25 20:53:49,572 DEBUG  [main] BasicTypeRegistry: Adding type registration int -> org.hibernate.type.IntegerType@5d3b6585
2020-11-25 20:53:49,573 DEBUG  [main] BasicTypeRegistry: Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@5d3b6585
2020-11-25 20:53:49,573 DEBUG  [main] BasicTypeRegistry: Adding type registration long -> org.hibernate.type.LongType@4fea5ee0
2020-11-25 20:53:49,573 DEBUG  [main] BasicTypeRegistry: Adding type registration long -> org.hibernate.type.LongType@4fea5ee0
2020-11-25 20:53:49,573 DEBUG  [main] BasicTypeRegistry: Adding type registration java.lang.Long -> org.hibernate.type.LongType@4fea5ee0
2020-11-25 20:53:49,573 DEBUG  [main] BasicTypeRegistry: Adding type registration float -> org.hibernate.type.FloatType@7b3085a3
2020-11-25 20:53:49,573 DEBUG  [main] BasicTypeRegistry: Adding type registration float -> org.hibernate.type.FloatType@7b3085a3
2020-11-25 20:53:49,573 DEBUG  [main] BasicTypeRegistry: Adding type registration java.lang.Float -> org.hibernate.type.FloatType@7b3085a3
2020-11-25 20:53:49,573 DEBUG  [main] BasicTypeRegistry: Adding type registration double -> org.hibernate.type.DoubleType@5a7a6d34
2020-11-25 20:53:49,573 DEBUG  [main] BasicTypeRegistry: Adding type registration double -> org.hibernate.type.DoubleType@5a7a6d34
2020-11-25 20:53:49,573 DEBUG  [main] BasicTypeRegistry: Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@5a7a6d34
2020-11-25 20:53:49,573 DEBUG  [main] BasicTypeRegistry: Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@5ae66c98
2020-11-25 20:53:49,573 DEBUG  [main] BasicTypeRegistry: Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@5ae66c98
2020-11-25 20:53:49,574 DEBUG  [main] BasicTypeRegistry: Adding type registration big_integer -> org.hibernate.type.BigIntegerType@223cbf0d
2020-11-25 20:53:49,574 DEBUG  [main] BasicTypeRegistry: Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@223cbf0d
2020-11-25 20:53:49,574 DEBUG  [main] BasicTypeRegistry: Adding type registration string -> org.hibernate.type.StringType@4f581211
2020-11-25 20:53:49,574 DEBUG  [main] BasicTypeRegistry: Adding type registration java.lang.String -> org.hibernate.type.StringType@4f581211
2020-11-25 20:53:49,574 DEBUG  [main] BasicTypeRegistry: Adding type registration nstring -> org.hibernate.type.StringNVarcharType@6697f3d
2020-11-25 20:53:49,574 DEBUG  [main] BasicTypeRegistry: Adding type registration ncharacter -> org.hibernate.type.CharacterNCharType@f1d1463
2020-11-25 20:53:49,574 DEBUG  [main] BasicTypeRegistry: Adding type registration url -> org.hibernate.type.UrlType@44ddb518
2020-11-25 20:53:49,574 DEBUG  [main] BasicTypeRegistry: Adding type registration java.net.URL -> org.hibernate.type.UrlType@44ddb518
2020-11-25 20:53:49,574 DEBUG  [main] BasicTypeRegistry: Adding type registration Duration -> org.hibernate.type.DurationType@49e0b123
2020-11-25 20:53:49,574 DEBUG  [main] BasicTypeRegistry: Adding type registration java.time.Duration -> org.hibernate.type.DurationType@49e0b123
2020-11-25 20:53:49,574 DEBUG  [main] BasicTypeRegistry: Adding type registration Instant -> org.hibernate.type.InstantType@40a28bda
2020-11-25 20:53:49,574 DEBUG  [main] BasicTypeRegistry: Adding type registration java.time.Instant -> org.hibernate.type.InstantType@40a28bda
2020-11-25 20:53:49,574 DEBUG  [main] BasicTypeRegistry: Adding type registration LocalDateTime -> org.hibernate.type.LocalDateTimeType@33430fc
2020-11-25 20:53:49,575 DEBUG  [main] BasicTypeRegistry: Adding type registration java.time.LocalDateTime -> org.hibernate.type.LocalDateTimeType@33430fc
2020-11-25 20:53:49,575 DEBUG  [main] BasicTypeRegistry: Adding type registration LocalDate -> org.hibernate.type.LocalDateType@d7055be
2020-11-25 20:53:49,575 DEBUG  [main] BasicTypeRegistry: Adding type registration java.time.LocalDate -> org.hibernate.type.LocalDateType@d7055be
2020-11-25 20:53:49,575 DEBUG  [main] BasicTypeRegistry: Adding type registration LocalTime -> org.hibernate.type.LocalTimeType@3c7d8a4
2020-11-25 20:53:49,575 DEBUG  [main] BasicTypeRegistry: Adding type registration java.time.LocalTime -> org.hibernate.type.LocalTimeType@3c7d8a4
2020-11-25 20:53:49,575 DEBUG  [main] BasicTypeRegistry: Adding type registration OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@7a117dc2
2020-11-25 20:53:49,575 DEBUG  [main] BasicTypeRegistry: Adding type registration java.time.OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@7a117dc2
2020-11-25 20:53:49,575 DEBUG  [main] BasicTypeRegistry: Adding type registration OffsetTime -> org.hibernate.type.OffsetTimeType@3c64339f
2020-11-25 20:53:49,575 DEBUG  [main] BasicTypeRegistry: Adding type registration java.time.OffsetTime -> org.hibernate.type.OffsetTimeType@3c64339f
2020-11-25 20:53:49,575 DEBUG  [main] BasicTypeRegistry: Adding type registration ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@30c8c6ab
2020-11-25 20:53:49,575 DEBUG  [main] BasicTypeRegistry: Adding type registration java.time.ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@30c8c6ab
2020-11-25 20:53:49,576 DEBUG  [main] BasicTypeRegistry: Adding type registration date -> org.hibernate.type.DateType@61c5fd78
2020-11-25 20:53:49,576 DEBUG  [main] BasicTypeRegistry: Adding type registration java.sql.Date -> org.hibernate.type.DateType@61c5fd78
2020-11-25 20:53:49,576 DEBUG  [main] BasicTypeRegistry: Adding type registration time -> org.hibernate.type.TimeType@77856cc5
2020-11-25 20:53:49,576 DEBUG  [main] BasicTypeRegistry: Adding type registration java.sql.Time -> org.hibernate.type.TimeType@77856cc5
2020-11-25 20:53:49,576 DEBUG  [main] BasicTypeRegistry: Adding type registration timestamp -> org.hibernate.type.TimestampType@12166229
2020-11-25 20:53:49,576 DEBUG  [main] BasicTypeRegistry: Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@12166229
2020-11-25 20:53:49,576 DEBUG  [main] BasicTypeRegistry: Adding type registration java.util.Date -> org.hibernate.type.TimestampType@12166229
2020-11-25 20:53:49,577 DEBUG  [main] BasicTypeRegistry: Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@2b4829aa
2020-11-25 20:53:49,577 DEBUG  [main] BasicTypeRegistry: Adding type registration calendar -> org.hibernate.type.CalendarType@3ec082a1
2020-11-25 20:53:49,578 DEBUG  [main] BasicTypeRegistry: Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@3ec082a1
2020-11-25 20:53:49,578 DEBUG  [main] BasicTypeRegistry: Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@3ec082a1
2020-11-25 20:53:49,578 DEBUG  [main] BasicTypeRegistry: Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@429f0ca8
2020-11-25 20:53:49,579 DEBUG  [main] BasicTypeRegistry: Adding type registration locale -> org.hibernate.type.LocaleType@11c3ce6a
2020-11-25 20:53:49,579 DEBUG  [main] BasicTypeRegistry: Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@11c3ce6a
2020-11-25 20:53:49,579 DEBUG  [main] BasicTypeRegistry: Adding type registration currency -> org.hibernate.type.CurrencyType@28519bfb
2020-11-25 20:53:49,580 DEBUG  [main] BasicTypeRegistry: Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@28519bfb
2020-11-25 20:53:49,581 DEBUG  [main] BasicTypeRegistry: Adding type registration timezone -> org.hibernate.type.TimeZoneType@7aa15a80
2020-11-25 20:53:49,581 DEBUG  [main] BasicTypeRegistry: Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@7aa15a80
2020-11-25 20:53:49,582 DEBUG  [main] BasicTypeRegistry: Adding type registration class -> org.hibernate.type.ClassType@48d5ca17
2020-11-25 20:53:49,582 DEBUG  [main] BasicTypeRegistry: Adding type registration java.lang.Class -> org.hibernate.type.ClassType@48d5ca17
2020-11-25 20:53:49,582 DEBUG  [main] BasicTypeRegistry: Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@79b8ecb
2020-11-25 20:53:49,582 DEBUG  [main] BasicTypeRegistry: Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@79b8ecb
2020-11-25 20:53:49,582 DEBUG  [main] BasicTypeRegistry: Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@c0013b8
2020-11-25 20:53:49,582 DEBUG  [main] BasicTypeRegistry: Adding type registration binary -> org.hibernate.type.BinaryType@2a42019a
2020-11-25 20:53:49,582 DEBUG  [main] BasicTypeRegistry: Adding type registration byte[] -> org.hibernate.type.BinaryType@2a42019a
2020-11-25 20:53:49,582 DEBUG  [main] BasicTypeRegistry: Adding type registration [B -> org.hibernate.type.BinaryType@2a42019a
2020-11-25 20:53:49,582 DEBUG  [main] BasicTypeRegistry: Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@495da9a7
2020-11-25 20:53:49,582 DEBUG  [main] BasicTypeRegistry: Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@495da9a7
2020-11-25 20:53:49,582 DEBUG  [main] BasicTypeRegistry: Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@495da9a7
2020-11-25 20:53:49,583 DEBUG  [main] BasicTypeRegistry: Adding type registration row_version -> org.hibernate.type.RowVersionType@35becbd4
2020-11-25 20:53:49,583 DEBUG  [main] BasicTypeRegistry: Adding type registration image -> org.hibernate.type.ImageType@30fa8a6b
2020-11-25 20:53:49,583 DEBUG  [main] BasicTypeRegistry: Adding type registration characters -> org.hibernate.type.CharArrayType@4c8d45cf
2020-11-25 20:53:49,583 DEBUG  [main] BasicTypeRegistry: Adding type registration char[] -> org.hibernate.type.CharArrayType@4c8d45cf
2020-11-25 20:53:49,583 DEBUG  [main] BasicTypeRegistry: Adding type registration [C -> org.hibernate.type.CharArrayType@4c8d45cf
2020-11-25 20:53:49,583 DEBUG  [main] BasicTypeRegistry: Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@5b490d5e
2020-11-25 20:53:49,583 DEBUG  [main] BasicTypeRegistry: Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@5b490d5e
2020-11-25 20:53:49,583 DEBUG  [main] BasicTypeRegistry: Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@5b490d5e
2020-11-25 20:53:49,583 DEBUG  [main] BasicTypeRegistry: Adding type registration text -> org.hibernate.type.TextType@18b04526
2020-11-25 20:53:49,583 DEBUG  [main] BasicTypeRegistry: Adding type registration ntext -> org.hibernate.type.NTextType@246df37b
2020-11-25 20:53:49,583 DEBUG  [main] BasicTypeRegistry: Adding type registration blob -> org.hibernate.type.BlobType@56881196
2020-11-25 20:53:49,583 DEBUG  [main] BasicTypeRegistry: Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@56881196
2020-11-25 20:53:49,584 DEBUG  [main] BasicTypeRegistry: Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@131c0b6f
2020-11-25 20:53:49,584 DEBUG  [main] BasicTypeRegistry: Adding type registration clob -> org.hibernate.type.ClobType@7fc1fd31
2020-11-25 20:53:49,584 DEBUG  [main] BasicTypeRegistry: Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@7fc1fd31
2020-11-25 20:53:49,584 DEBUG  [main] BasicTypeRegistry: Adding type registration nclob -> org.hibernate.type.NClobType@70777a65
2020-11-25 20:53:49,584 DEBUG  [main] BasicTypeRegistry: Adding type registration java.sql.NClob -> org.hibernate.type.NClobType@70777a65
2020-11-25 20:53:49,584 DEBUG  [main] BasicTypeRegistry: Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@2f6f4ac4
2020-11-25 20:53:49,584 DEBUG  [main] BasicTypeRegistry: Adding type registration materialized_nclob -> org.hibernate.type.MaterializedNClobType@7d685f4e
2020-11-25 20:53:49,584 DEBUG  [main] BasicTypeRegistry: Adding type registration serializable -> org.hibernate.type.SerializableType@319aa9ee
2020-11-25 20:53:49,584 DEBUG  [main] BasicTypeRegistry: Adding type registration object -> org.hibernate.type.ObjectType@54234569
2020-11-25 20:53:49,585 DEBUG  [main] BasicTypeRegistry: Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@54234569
2020-11-25 20:53:49,585 DEBUG  [main] BasicTypeRegistry: Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@65d24964
2020-11-25 20:53:49,585 DEBUG  [main] BasicTypeRegistry: Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@7e820b3b
2020-11-25 20:53:49,585 DEBUG  [main] BasicTypeRegistry: Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@3c012884
2020-11-25 20:53:49,585 DEBUG  [main] BasicTypeRegistry: Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@f7473b2
2020-11-25 20:53:49,585 DEBUG  [main] BasicTypeRegistry: Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@789a8251
2020-11-25 20:53:49,585 DEBUG  [main] BasicTypeRegistry: Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@162f85aa
2020-11-25 20:53:49,585 DEBUG  [main] BasicTypeRegistry: Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@23dfcae3
2020-11-25 20:53:49,585 DEBUG  [main] BasicTypeRegistry: Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@f9ad4c9
2020-11-25 20:53:49,596 DEBUG  [main] TypeConfiguration$Scope: Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@9cdbf65] to MetadataBuildingContext [org.hibernate.boot.internal.MetadataBuildingContextRootImpl@72d0cbc9]
2020-11-25 20:53:49,611 DEBUG  [main] EnumType: Using NAMED-based conversion for Enum com.sf.back.entities.Kind
2020-11-25 20:53:49,616 DEBUG  [main] EnumType: Using NAMED-based conversion for Enum com.sf.back.entities.Kind
2020-11-25 20:53:49,634 DEBUG  [main] TypeConfiguration$Scope: Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@9cdbf65] to SessionFactoryImpl [org.hibernate.internal.SessionFactoryImpl@31e1a699]
2020-11-25 20:53:49,636 DEBUG  [main] EnumType: Using NAMED-based conversion for Enum com.sf.back.entities.Kind
2020-11-25 20:53:49,636 DEBUG  [main] EnumType: Using NAMED-based conversion for Enum com.sf.back.entities.Kind
2020-11-25 20:53:49,651 DEBUG  [main] EnumType: Using NAMED-based conversion for Enum com.sf.back.entities.Kind
2020-11-25 20:53:49,652 DEBUG  [main] EnumType: Using NAMED-based conversion for Enum com.sf.back.entities.Kind
2020-11-25 20:53:49,672 DEBUG  [main] EnumType: Using NAMED-based conversion for Enum com.sf.back.entities.Kind
2020-11-25 20:53:49,672 DEBUG  [main] EnumType: Using NAMED-based conversion for Enum com.sf.back.entities.Kind
2020-11-25 20:53:49,675 DEBUG  [main] EnumType: Using NAMED-based conversion for Enum com.sf.back.entities.Kind
2020-11-25 20:53:49,684 TRACE  [main] TypeConfiguration$Scope: Handling #sessionFactoryCreated from [org.hibernate.internal.SessionFactoryImpl@31e1a699] for TypeConfiguration
2020-11-25 20:53:49,755 WARN   [main] JpaBaseConfiguration$JpaWebConfiguration: spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2020-11-25 20:53:49,851 WARN   [main] GenericWebApplicationContext: Exception encountered during context initialization - cancelling refresh attempt: org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'groovyMarkupConfigurer' defined in class path resource [org/springframework/boot/autoconfigure/groovy/template/GroovyTemplateAutoConfiguration$GroovyMarkupConfiguration.class]: Invocation of init method failed; nested exception is java.lang.reflect.InaccessibleObjectException: Unable to make jdk.internal.loader.ClassLoaders$AppClassLoader(jdk.internal.loader.ClassLoaders$PlatformClassLoader,jdk.internal.loader.URLClassPath) accessible: module java.base does not "opens jdk.internal.loader" to unnamed module @60fa3495
2020-11-25 20:53:49,853 TRACE  [main] TypeConfiguration$Scope: Handling #sessionFactoryClosed from [org.hibernate.internal.SessionFactoryImpl@31e1a699] for TypeConfiguration
2020-11-25 20:53:49,853 DEBUG  [main] TypeConfiguration$Scope: Un-scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration$Scope@7541dbee] from SessionFactory [org.hibernate.internal.SessionFactoryImpl@31e1a699]
2020-11-25 20:53:49,857 ERROR  [main] SpringApplication: Application run failed
org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'groovyMarkupConfigurer' defined in class path resource [org/springframework/boot/autoconfigure/groovy/template/GroovyTemplateAutoConfiguration$GroovyMarkupConfiguration.class]: Invocation of init method failed; nested exception is java.lang.reflect.InaccessibleObjectException: Unable to make jdk.internal.loader.ClassLoaders$AppClassLoader(jdk.internal.loader.ClassLoaders$PlatformClassLoader,jdk.internal.loader.URLClassPath) accessible: module java.base does not "opens jdk.internal.loader" to unnamed module @60fa3495
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1803)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:595)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:517)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:323)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:222)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:321)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:202)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(DefaultListableBeanFactory.java:879)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:878)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:550)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:747)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:397)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:315)
	at org.springframework.boot.test.context.SpringBootContextLoader.loadContext(SpringBootContextLoader.java:125)
	at org.springframework.test.context.cache.DefaultCacheAwareContextLoaderDelegate.loadContextInternal(DefaultCacheAwareContextLoaderDelegate.java:99)
	at org.springframework.test.context.cache.DefaultCacheAwareContextLoaderDelegate.loadContext(DefaultCacheAwareContextLoaderDelegate.java:124)
	at org.springframework.test.context.support.DefaultTestContext.getApplicationContext(DefaultTestContext.java:123)
	at org.springframework.test.context.web.ServletTestExecutionListener.setUpRequestContextIfNecessary(ServletTestExecutionListener.java:190)
	at org.springframework.test.context.web.ServletTestExecutionListener.prepareTestInstance(ServletTestExecutionListener.java:132)
	at org.springframework.test.context.TestContextManager.prepareTestInstance(TestContextManager.java:244)
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner.createTest(SpringJUnit4ClassRunner.java:227)
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner$1.runReflectiveCall(SpringJUnit4ClassRunner.java:289)
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner.methodBlock(SpringJUnit4ClassRunner.java:291)
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner.runChild(SpringJUnit4ClassRunner.java:246)
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner.runChild(SpringJUnit4ClassRunner.java:97)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:290)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:71)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:58)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268)
	at org.junit.internal.runners.statements.RunBefores.evaluate(RunBefores.java:26)
	at org.springframework.test.context.junit4.statements.RunBeforeTestClassCallbacks.evaluate(RunBeforeTestClassCallbacks.java:61)
	at org.junit.internal.runners.statements.RunAfters.evaluate(RunAfters.java:27)
	at org.springframework.test.context.junit4.statements.RunAfterTestClassCallbacks.evaluate(RunAfterTestClassCallbacks.java:70)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:363)
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner.run(SpringJUnit4ClassRunner.java:190)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:137)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:115)
	at org.junit.vintage.engine.execution.RunnerExecutor.execute(RunnerExecutor.java:40)
	at java.base/java.util.stream.ForEachOps$ForEachOp$OfRef.accept(ForEachOps.java:183)
	at java.base/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:195)
	at java.base/java.util.Iterator.forEachRemaining(Iterator.java:133)
	at java.base/java.util.Spliterators$IteratorSpliterator.forEachRemaining(Spliterators.java:1801)
	at java.base/java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:484)
	at java.base/java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:474)
	at java.base/java.util.stream.ForEachOps$ForEachOp.evaluateSequential(ForEachOps.java:150)
	at java.base/java.util.stream.ForEachOps$ForEachOp$OfRef.evaluateSequential(ForEachOps.java:173)
	at java.base/java.util.stream.AbstractPipeline.evaluate(AbstractPipeline.java:234)
	at java.base/java.util.stream.ReferencePipeline.forEach(ReferencePipeline.java:497)
	at org.junit.vintage.engine.VintageTestEngine.executeAllChildren(VintageTestEngine.java:80)
	at org.junit.vintage.engine.VintageTestEngine.execute(VintageTestEngine.java:71)
	at org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:220)
	at org.junit.platform.launcher.core.DefaultLauncher.lambda$execute$6(DefaultLauncher.java:188)
	at org.junit.platform.launcher.core.DefaultLauncher.withInterceptedStreams(DefaultLauncher.java:202)
	at org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:181)
	at org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:128)
	at org.apache.maven.surefire.junitplatform.JUnitPlatformProvider.invokeAllTests(JUnitPlatformProvider.java:150)
	at org.apache.maven.surefire.junitplatform.JUnitPlatformProvider.invoke(JUnitPlatformProvider.java:124)
	at org.apache.maven.surefire.booter.ForkedBooter.invokeProviderInSameClassLoader(ForkedBooter.java:384)
	at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:345)
	at org.apache.maven.surefire.booter.ForkedBooter.execute(ForkedBooter.java:126)
	at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:418)
Caused by: java.lang.reflect.InaccessibleObjectException: Unable to make jdk.internal.loader.ClassLoaders$AppClassLoader(jdk.internal.loader.ClassLoaders$PlatformClassLoader,jdk.internal.loader.URLClassPath) accessible: module java.base does not "opens jdk.internal.loader" to unnamed module @60fa3495
	at java.base/java.lang.reflect.AccessibleObject.checkCanSetAccessible(AccessibleObject.java:344)
	at java.base/java.lang.reflect.AccessibleObject.checkCanSetAccessible(AccessibleObject.java:284)
	at java.base/java.lang.reflect.Constructor.checkCanSetAccessible(Constructor.java:189)
	at java.base/java.lang.reflect.Constructor.setAccessible(Constructor.java:182)
	at org.codehaus.groovy.reflection.CachedConstructor$1.run(CachedConstructor.java:44)
	at java.base/java.security.AccessController.doPrivileged(AccessController.java:312)
	at org.codehaus.groovy.reflection.CachedConstructor.<init>(CachedConstructor.java:42)
	at org.codehaus.groovy.reflection.CachedClass$2.initValue(CachedClass.java:79)
	at org.codehaus.groovy.reflection.CachedClass$2.initValue(CachedClass.java:69)
	at org.codehaus.groovy.util.LazyReference.getLocked(LazyReference.java:49)
	at org.codehaus.groovy.util.LazyReference.get(LazyReference.java:36)
	at org.codehaus.groovy.reflection.CachedClass.getConstructors(CachedClass.java:268)
	at groovy.lang.MetaClassImpl.<init>(MetaClassImpl.java:218)
	at groovy.lang.MetaClassImpl.<init>(MetaClassImpl.java:228)
	at groovy.lang.MetaClassRegistry$MetaClassCreationHandle.createNormalMetaClass(MetaClassRegistry.java:171)
	at groovy.lang.MetaClassRegistry$MetaClassCreationHandle.createWithCustomLookup(MetaClassRegistry.java:161)
	at groovy.lang.MetaClassRegistry$MetaClassCreationHandle.create(MetaClassRegistry.java:144)
	at org.codehaus.groovy.reflection.ClassInfo.getMetaClassUnderLock(ClassInfo.java:253)
	at org.codehaus.groovy.reflection.ClassInfo.getMetaClass(ClassInfo.java:285)
	at org.codehaus.groovy.reflection.ClassInfo.getMetaClass(ClassInfo.java:295)
	at org.codehaus.groovy.runtime.metaclass.MetaClassRegistryImpl.getMetaClass(MetaClassRegistryImpl.java:261)
	at org.codehaus.groovy.runtime.InvokerHelper.getMetaClass(InvokerHelper.java:873)
	at org.codehaus.groovy.runtime.InvokerHelper.invokePojoMethod(InvokerHelper.java:906)
	at org.codehaus.groovy.runtime.InvokerHelper.invokeMethod(InvokerHelper.java:898)
	at org.codehaus.groovy.runtime.typehandling.DefaultTypeTransformation.castToBoolean(DefaultTypeTransformation.java:185)
	at org.codehaus.groovy.runtime.typehandling.DefaultTypeTransformation.booleanUnbox(DefaultTypeTransformation.java:74)
	at org.codehaus.groovy.control.customizers.ASTTransformationCustomizer.findASTTranformationClass(ASTTransformationCustomizer.groovy:209)
	at jdk.internal.reflect.GeneratedMethodAccessor358.invoke(Unknown Source)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:567)
	at org.codehaus.groovy.reflection.CachedMethod.invoke(CachedMethod.java:93)
	at org.codehaus.groovy.runtime.callsite.StaticMetaMethodSite$StaticMetaMethodSiteNoUnwrapNoCoerce.invoke(StaticMetaMethodSite.java:151)
	at org.codehaus.groovy.runtime.callsite.StaticMetaMethodSite.callStatic(StaticMetaMethodSite.java:102)
	at org.codehaus.groovy.runtime.callsite.AbstractCallSite.callStatic(AbstractCallSite.java:214)
	at org.codehaus.groovy.control.customizers.ASTTransformationCustomizer.findPhase(ASTTransformationCustomizer.groovy:226)
	at jdk.internal.reflect.GeneratedMethodAccessor357.invoke(Unknown Source)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:567)
	at org.codehaus.groovy.reflection.CachedMethod.invoke(CachedMethod.java:93)
	at org.codehaus.groovy.runtime.callsite.StaticMetaMethodSite$StaticMetaMethodSiteNoUnwrapNoCoerce.invoke(StaticMetaMethodSite.java:151)
	at org.codehaus.groovy.runtime.callsite.StaticMetaMethodSite.callStatic(StaticMetaMethodSite.java:102)
	at org.codehaus.groovy.runtime.callsite.AbstractCallSite.callStatic(AbstractCallSite.java:214)
	at org.codehaus.groovy.control.customizers.ASTTransformationCustomizer.<init>(ASTTransformationCustomizer.groovy:180)
	at org.codehaus.groovy.control.customizers.ASTTransformationCustomizer.<init>(ASTTransformationCustomizer.groovy:188)
	at groovy.text.markup.MarkupTemplateEngine.<init>(MarkupTemplateEngine.java:94)
	at org.springframework.web.servlet.view.groovy.GroovyMarkupConfigurer.createTemplateEngine(GroovyMarkupConfigurer.java:160)
	at org.springframework.web.servlet.view.groovy.GroovyMarkupConfigurer.afterPropertiesSet(GroovyMarkupConfigurer.java:153)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1862)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1799)
	... 62 common frames omitted
2020-11-25 20:53:49,858 ERROR  [main] TestContextManager: Caught exception while allowing TestExecutionListener [org.springframework.test.context.web.ServletTestExecutionListener@701dbfbd] to prepare test instance [com.sf.service.ProblemServiceTest@7f8b5188]
java.lang.IllegalStateException: Failed to load ApplicationContext
	at org.springframework.test.context.cache.DefaultCacheAwareContextLoaderDelegate.loadContext(DefaultCacheAwareContextLoaderDelegate.java:132)
	at org.springframework.test.context.support.DefaultTestContext.getApplicationContext(DefaultTestContext.java:123)
	at org.springframework.test.context.web.ServletTestExecutionListener.setUpRequestContextIfNecessary(ServletTestExecutionListener.java:190)
	at org.springframework.test.context.web.ServletTestExecutionListener.prepareTestInstance(ServletTestExecutionListener.java:132)
	at org.springframework.test.context.TestContextManager.prepareTestInstance(TestContextManager.java:244)
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner.createTest(SpringJUnit4ClassRunner.java:227)
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner$1.runReflectiveCall(SpringJUnit4ClassRunner.java:289)
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner.methodBlock(SpringJUnit4ClassRunner.java:291)
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner.runChild(SpringJUnit4ClassRunner.java:246)
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner.runChild(SpringJUnit4ClassRunner.java:97)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:290)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:71)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:58)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268)
	at org.junit.internal.runners.statements.RunBefores.evaluate(RunBefores.java:26)
	at org.springframework.test.context.junit4.statements.RunBeforeTestClassCallbacks.evaluate(RunBeforeTestClassCallbacks.java:61)
	at org.junit.internal.runners.statements.RunAfters.evaluate(RunAfters.java:27)
	at org.springframework.test.context.junit4.statements.RunAfterTestClassCallbacks.evaluate(RunAfterTestClassCallbacks.java:70)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:363)
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner.run(SpringJUnit4ClassRunner.java:190)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:137)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:115)
	at org.junit.vintage.engine.execution.RunnerExecutor.execute(RunnerExecutor.java:40)
	at java.base/java.util.stream.ForEachOps$ForEachOp$OfRef.accept(ForEachOps.java:183)
	at java.base/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:195)
	at java.base/java.util.Iterator.forEachRemaining(Iterator.java:133)
	at java.base/java.util.Spliterators$IteratorSpliterator.forEachRemaining(Spliterators.java:1801)
	at java.base/java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:484)
	at java.base/java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:474)
	at java.base/java.util.stream.ForEachOps$ForEachOp.evaluateSequential(ForEachOps.java:150)
	at java.base/java.util.stream.ForEachOps$ForEachOp$OfRef.evaluateSequential(ForEachOps.java:173)
	at java.base/java.util.stream.AbstractPipeline.evaluate(AbstractPipeline.java:234)
	at java.base/java.util.stream.ReferencePipeline.forEach(ReferencePipeline.java:497)
	at org.junit.vintage.engine.VintageTestEngine.executeAllChildren(VintageTestEngine.java:80)
	at org.junit.vintage.engine.VintageTestEngine.execute(VintageTestEngine.java:71)
	at org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:220)
	at org.junit.platform.launcher.core.DefaultLauncher.lambda$execute$6(DefaultLauncher.java:188)
	at org.junit.platform.launcher.core.DefaultLauncher.withInterceptedStreams(DefaultLauncher.java:202)
	at org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:181)
	at org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:128)
	at org.apache.maven.surefire.junitplatform.JUnitPlatformProvider.invokeAllTests(JUnitPlatformProvider.java:150)
	at org.apache.maven.surefire.junitplatform.JUnitPlatformProvider.invoke(JUnitPlatformProvider.java:124)
	at org.apache.maven.surefire.booter.ForkedBooter.invokeProviderInSameClassLoader(ForkedBooter.java:384)
	at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:345)
	at org.apache.maven.surefire.booter.ForkedBooter.execute(ForkedBooter.java:126)
	at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:418)
Caused by: org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'groovyMarkupConfigurer' defined in class path resource [org/springframework/boot/autoconfigure/groovy/template/GroovyTemplateAutoConfiguration$GroovyMarkupConfiguration.class]: Invocation of init method failed; nested exception is java.lang.reflect.InaccessibleObjectException: Unable to make jdk.internal.loader.ClassLoaders$AppClassLoader(jdk.internal.loader.ClassLoaders$PlatformClassLoader,jdk.internal.loader.URLClassPath) accessible: module java.base does not "opens jdk.internal.loader" to unnamed module @60fa3495
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1803)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:595)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:517)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:323)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:222)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:321)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:202)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(DefaultListableBeanFactory.java:879)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:878)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:550)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:747)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:397)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:315)
	at org.springframework.boot.test.context.SpringBootContextLoader.loadContext(SpringBootContextLoader.java:125)
	at org.springframework.test.context.cache.DefaultCacheAwareContextLoaderDelegate.loadContextInternal(DefaultCacheAwareContextLoaderDelegate.java:99)
	at org.springframework.test.context.cache.DefaultCacheAwareContextLoaderDelegate.loadContext(DefaultCacheAwareContextLoaderDelegate.java:124)
	... 47 common frames omitted
Caused by: java.lang.reflect.InaccessibleObjectException: Unable to make jdk.internal.loader.ClassLoaders$AppClassLoader(jdk.internal.loader.ClassLoaders$PlatformClassLoader,jdk.internal.loader.URLClassPath) accessible: module java.base does not "opens jdk.internal.loader" to unnamed module @60fa3495
	at java.base/java.lang.reflect.AccessibleObject.checkCanSetAccessible(AccessibleObject.java:344)
	at java.base/java.lang.reflect.AccessibleObject.checkCanSetAccessible(AccessibleObject.java:284)
	at java.base/java.lang.reflect.Constructor.checkCanSetAccessible(Constructor.java:189)
	at java.base/java.lang.reflect.Constructor.setAccessible(Constructor.java:182)
	at org.codehaus.groovy.reflection.CachedConstructor$1.run(CachedConstructor.java:44)
	at java.base/java.security.AccessController.doPrivileged(AccessController.java:312)
	at org.codehaus.groovy.reflection.CachedConstructor.<init>(CachedConstructor.java:42)
	at org.codehaus.groovy.reflection.CachedClass$2.initValue(CachedClass.java:79)
	at org.codehaus.groovy.reflection.CachedClass$2.initValue(CachedClass.java:69)
	at org.codehaus.groovy.util.LazyReference.getLocked(LazyReference.java:49)
	at org.codehaus.groovy.util.LazyReference.get(LazyReference.java:36)
	at org.codehaus.groovy.reflection.CachedClass.getConstructors(CachedClass.java:268)
	at groovy.lang.MetaClassImpl.<init>(MetaClassImpl.java:218)
	at groovy.lang.MetaClassImpl.<init>(MetaClassImpl.java:228)
	at groovy.lang.MetaClassRegistry$MetaClassCreationHandle.createNormalMetaClass(MetaClassRegistry.java:171)
	at groovy.lang.MetaClassRegistry$MetaClassCreationHandle.createWithCustomLookup(MetaClassRegistry.java:161)
	at groovy.lang.MetaClassRegistry$MetaClassCreationHandle.create(MetaClassRegistry.java:144)
	at org.codehaus.groovy.reflection.ClassInfo.getMetaClassUnderLock(ClassInfo.java:253)
	at org.codehaus.groovy.reflection.ClassInfo.getMetaClass(ClassInfo.java:285)
	at org.codehaus.groovy.reflection.ClassInfo.getMetaClass(ClassInfo.java:295)
	at org.codehaus.groovy.runtime.metaclass.MetaClassRegistryImpl.getMetaClass(MetaClassRegistryImpl.java:261)
	at org.codehaus.groovy.runtime.InvokerHelper.getMetaClass(InvokerHelper.java:873)
	at org.codehaus.groovy.runtime.InvokerHelper.invokePojoMethod(InvokerHelper.java:906)
	at org.codehaus.groovy.runtime.InvokerHelper.invokeMethod(InvokerHelper.java:898)
	at org.codehaus.groovy.runtime.typehandling.DefaultTypeTransformation.castToBoolean(DefaultTypeTransformation.java:185)
	at org.codehaus.groovy.runtime.typehandling.DefaultTypeTransformation.booleanUnbox(DefaultTypeTransformation.java:74)
	at org.codehaus.groovy.control.customizers.ASTTransformationCustomizer.findASTTranformationClass(ASTTransformationCustomizer.groovy:209)
	at jdk.internal.reflect.GeneratedMethodAccessor358.invoke(Unknown Source)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:567)
	at org.codehaus.groovy.reflection.CachedMethod.invoke(CachedMethod.java:93)
	at org.codehaus.groovy.runtime.callsite.StaticMetaMethodSite$StaticMetaMethodSiteNoUnwrapNoCoerce.invoke(StaticMetaMethodSite.java:151)
	at org.codehaus.groovy.runtime.callsite.StaticMetaMethodSite.callStatic(StaticMetaMethodSite.java:102)
	at org.codehaus.groovy.runtime.callsite.AbstractCallSite.callStatic(AbstractCallSite.java:214)
	at org.codehaus.groovy.control.customizers.ASTTransformationCustomizer.findPhase(ASTTransformationCustomizer.groovy:226)
	at jdk.internal.reflect.GeneratedMethodAccessor357.invoke(Unknown Source)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:567)
	at org.codehaus.groovy.reflection.CachedMethod.invoke(CachedMethod.java:93)
	at org.codehaus.groovy.runtime.callsite.StaticMetaMethodSite$StaticMetaMethodSiteNoUnwrapNoCoerce.invoke(StaticMetaMethodSite.java:151)
	at org.codehaus.groovy.runtime.callsite.StaticMetaMethodSite.callStatic(StaticMetaMethodSite.java:102)
	at org.codehaus.groovy.runtime.callsite.AbstractCallSite.callStatic(AbstractCallSite.java:214)
	at org.codehaus.groovy.control.customizers.ASTTransformationCustomizer.<init>(ASTTransformationCustomizer.groovy:180)
	at org.codehaus.groovy.control.customizers.ASTTransformationCustomizer.<init>(ASTTransformationCustomizer.groovy:188)
	at groovy.text.markup.MarkupTemplateEngine.<init>(MarkupTemplateEngine.java:94)
	at org.springframework.web.servlet.view.groovy.GroovyMarkupConfigurer.createTemplateEngine(GroovyMarkupConfigurer.java:160)
	at org.springframework.web.servlet.view.groovy.GroovyMarkupConfigurer.afterPropertiesSet(GroovyMarkupConfigurer.java:153)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1862)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1799)
	... 62 common frames omitted
2020-11-25 20:53:50,806 DEBUG  [main] BasicTypeRegistry: Adding type registration boolean -> org.hibernate.type.BooleanType@ff2266c
2020-11-25 20:53:50,810 DEBUG  [main] BasicTypeRegistry: Adding type registration boolean -> org.hibernate.type.BooleanType@ff2266c
2020-11-25 20:53:50,810 DEBUG  [main] BasicTypeRegistry: Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@ff2266c
2020-11-25 20:53:50,811 DEBUG  [main] BasicTypeRegistry: Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@1d585fb
2020-11-25 20:53:50,812 DEBUG  [main] BasicTypeRegistry: Adding type registration true_false -> org.hibernate.type.TrueFalseType@7c8f047a
2020-11-25 20:53:50,812 DEBUG  [main] BasicTypeRegistry: Adding type registration yes_no -> org.hibernate.type.YesNoType@d949bc4
2020-11-25 20:53:50,813 DEBUG  [main] BasicTypeRegistry: Adding type registration byte -> org.hibernate.type.ByteType@29c25bbc
2020-11-25 20:53:50,813 DEBUG  [main] BasicTypeRegistry: Adding type registration byte -> org.hibernate.type.ByteType@29c25bbc
2020-11-25 20:53:50,814 DEBUG  [main] BasicTypeRegistry: Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@29c25bbc
2020-11-25 20:53:50,814 DEBUG  [main] BasicTypeRegistry: Adding type registration character -> org.hibernate.type.CharacterType@403f7aa2
2020-11-25 20:53:50,814 DEBUG  [main] BasicTypeRegistry: Adding type registration char -> org.hibernate.type.CharacterType@403f7aa2
2020-11-25 20:53:50,814 DEBUG  [main] BasicTypeRegistry: Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@403f7aa2
2020-11-25 20:53:50,820 DEBUG  [main] BasicTypeRegistry: Adding type registration short -> org.hibernate.type.ShortType@38cb1606
2020-11-25 20:53:50,820 DEBUG  [main] BasicTypeRegistry: Adding type registration short -> org.hibernate.type.ShortType@38cb1606
2020-11-25 20:53:50,820 DEBUG  [main] BasicTypeRegistry: Adding type registration java.lang.Short -> org.hibernate.type.ShortType@38cb1606
2020-11-25 20:53:50,821 DEBUG  [main] BasicTypeRegistry: Adding type registration integer -> org.hibernate.type.IntegerType@5d3b6585
2020-11-25 20:53:50,821 DEBUG  [main] BasicTypeRegistry: Adding type registration int -> org.hibernate.type.IntegerType@5d3b6585
2020-11-25 20:53:50,821 DEBUG  [main] BasicTypeRegistry: Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@5d3b6585
2020-11-25 20:53:50,821 DEBUG  [main] BasicTypeRegistry: Adding type registration long -> org.hibernate.type.LongType@4fea5ee0
2020-11-25 20:53:50,821 DEBUG  [main] BasicTypeRegistry: Adding type registration long -> org.hibernate.type.LongType@4fea5ee0
2020-11-25 20:53:50,821 DEBUG  [main] BasicTypeRegistry: Adding type registration java.lang.Long -> org.hibernate.type.LongType@4fea5ee0
2020-11-25 20:53:50,822 DEBUG  [main] BasicTypeRegistry: Adding type registration float -> org.hibernate.type.FloatType@7b3085a3
2020-11-25 20:53:50,822 DEBUG  [main] BasicTypeRegistry: Adding type registration float -> org.hibernate.type.FloatType@7b3085a3
2020-11-25 20:53:50,822 DEBUG  [main] BasicTypeRegistry: Adding type registration java.lang.Float -> org.hibernate.type.FloatType@7b3085a3
2020-11-25 20:53:50,822 DEBUG  [main] BasicTypeRegistry: Adding type registration double -> org.hibernate.type.DoubleType@5a7a6d34
2020-11-25 20:53:50,823 DEBUG  [main] BasicTypeRegistry: Adding type registration double -> org.hibernate.type.DoubleType@5a7a6d34
2020-11-25 20:53:50,823 DEBUG  [main] BasicTypeRegistry: Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@5a7a6d34
2020-11-25 20:53:50,823 DEBUG  [main] BasicTypeRegistry: Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@5ae66c98
2020-11-25 20:53:50,823 DEBUG  [main] BasicTypeRegistry: Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@5ae66c98
2020-11-25 20:53:50,824 DEBUG  [main] BasicTypeRegistry: Adding type registration big_integer -> org.hibernate.type.BigIntegerType@223cbf0d
2020-11-25 20:53:50,824 DEBUG  [main] BasicTypeRegistry: Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@223cbf0d
2020-11-25 20:53:50,824 DEBUG  [main] BasicTypeRegistry: Adding type registration string -> org.hibernate.type.StringType@4f581211
2020-11-25 20:53:50,825 DEBUG  [main] BasicTypeRegistry: Adding type registration java.lang.String -> org.hibernate.type.StringType@4f581211
2020-11-25 20:53:50,825 DEBUG  [main] BasicTypeRegistry: Adding type registration nstring -> org.hibernate.type.StringNVarcharType@6697f3d
2020-11-25 20:53:50,825 DEBUG  [main] BasicTypeRegistry: Adding type registration ncharacter -> org.hibernate.type.CharacterNCharType@f1d1463
2020-11-25 20:53:50,825 DEBUG  [main] BasicTypeRegistry: Adding type registration url -> org.hibernate.type.UrlType@44ddb518
2020-11-25 20:53:50,826 DEBUG  [main] BasicTypeRegistry: Adding type registration java.net.URL -> org.hibernate.type.UrlType@44ddb518
2020-11-25 20:53:50,826 DEBUG  [main] BasicTypeRegistry: Adding type registration Duration -> org.hibernate.type.DurationType@49e0b123
2020-11-25 20:53:50,826 DEBUG  [main] BasicTypeRegistry: Adding type registration java.time.Duration -> org.hibernate.type.DurationType@49e0b123
2020-11-25 20:53:50,826 DEBUG  [main] BasicTypeRegistry: Adding type registration Instant -> org.hibernate.type.InstantType@40a28bda
2020-11-25 20:53:50,826 DEBUG  [main] BasicTypeRegistry: Adding type registration java.time.Instant -> org.hibernate.type.InstantType@40a28bda
2020-11-25 20:53:50,826 DEBUG  [main] BasicTypeRegistry: Adding type registration LocalDateTime -> org.hibernate.type.LocalDateTimeType@33430fc
2020-11-25 20:53:50,827 DEBUG  [main] BasicTypeRegistry: Adding type registration java.time.LocalDateTime -> org.hibernate.type.LocalDateTimeType@33430fc
2020-11-25 20:53:50,827 DEBUG  [main] BasicTypeRegistry: Adding type registration LocalDate -> org.hibernate.type.LocalDateType@d7055be
2020-11-25 20:53:50,827 DEBUG  [main] BasicTypeRegistry: Adding type registration java.time.LocalDate -> org.hibernate.type.LocalDateType@d7055be
2020-11-25 20:53:50,827 DEBUG  [main] BasicTypeRegistry: Adding type registration LocalTime -> org.hibernate.type.LocalTimeType@3c7d8a4
2020-11-25 20:53:50,827 DEBUG  [main] BasicTypeRegistry: Adding type registration java.time.LocalTime -> org.hibernate.type.LocalTimeType@3c7d8a4
2020-11-25 20:53:50,827 DEBUG  [main] BasicTypeRegistry: Adding type registration OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@7a117dc2
2020-11-25 20:53:50,828 DEBUG  [main] BasicTypeRegistry: Adding type registration java.time.OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@7a117dc2
2020-11-25 20:53:50,828 DEBUG  [main] BasicTypeRegistry: Adding type registration OffsetTime -> org.hibernate.type.OffsetTimeType@3c64339f
2020-11-25 20:53:50,828 DEBUG  [main] BasicTypeRegistry: Adding type registration java.time.OffsetTime -> org.hibernate.type.OffsetTimeType@3c64339f
2020-11-25 20:53:50,828 DEBUG  [main] BasicTypeRegistry: Adding type registration ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@30c8c6ab
2020-11-25 20:53:50,828 DEBUG  [main] BasicTypeRegistry: Adding type registration java.time.ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@30c8c6ab
2020-11-25 20:53:50,828 DEBUG  [main] BasicTypeRegistry: Adding type registration date -> org.hibernate.type.DateType@61c5fd78
2020-11-25 20:53:50,828 DEBUG  [main] BasicTypeRegistry: Adding type registration java.sql.Date -> org.hibernate.type.DateType@61c5fd78
2020-11-25 20:53:50,828 DEBUG  [main] BasicTypeRegistry: Adding type registration time -> org.hibernate.type.TimeType@77856cc5
2020-11-25 20:53:50,829 DEBUG  [main] BasicTypeRegistry: Adding type registration java.sql.Time -> org.hibernate.type.TimeType@77856cc5
2020-11-25 20:53:50,829 DEBUG  [main] BasicTypeRegistry: Adding type registration timestamp -> org.hibernate.type.TimestampType@12166229
2020-11-25 20:53:50,829 DEBUG  [main] BasicTypeRegistry: Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@12166229
2020-11-25 20:53:50,829 DEBUG  [main] BasicTypeRegistry: Adding type registration java.util.Date -> org.hibernate.type.TimestampType@12166229
2020-11-25 20:53:50,829 DEBUG  [main] BasicTypeRegistry: Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@2b4829aa
2020-11-25 20:53:50,830 DEBUG  [main] BasicTypeRegistry: Adding type registration calendar -> org.hibernate.type.CalendarType@3ec082a1
2020-11-25 20:53:50,830 DEBUG  [main] BasicTypeRegistry: Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@3ec082a1
2020-11-25 20:53:50,830 DEBUG  [main] BasicTypeRegistry: Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@3ec082a1
2020-11-25 20:53:50,831 DEBUG  [main] BasicTypeRegistry: Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@429f0ca8
2020-11-25 20:53:50,831 DEBUG  [main] BasicTypeRegistry: Adding type registration locale -> org.hibernate.type.LocaleType@11c3ce6a
2020-11-25 20:53:50,831 DEBUG  [main] BasicTypeRegistry: Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@11c3ce6a
2020-11-25 20:53:50,831 DEBUG  [main] BasicTypeRegistry: Adding type registration currency -> org.hibernate.type.CurrencyType@28519bfb
2020-11-25 20:53:50,831 DEBUG  [main] BasicTypeRegistry: Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@28519bfb
2020-11-25 20:53:50,832 DEBUG  [main] BasicTypeRegistry: Adding type registration timezone -> org.hibernate.type.TimeZoneType@7aa15a80
2020-11-25 20:53:50,832 DEBUG  [main] BasicTypeRegistry: Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@7aa15a80
2020-11-25 20:53:50,832 DEBUG  [main] BasicTypeRegistry: Adding type registration class -> org.hibernate.type.ClassType@48d5ca17
2020-11-25 20:53:50,832 DEBUG  [main] BasicTypeRegistry: Adding type registration java.lang.Class -> org.hibernate.type.ClassType@48d5ca17
2020-11-25 20:53:50,832 DEBUG  [main] BasicTypeRegistry: Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@79b8ecb
2020-11-25 20:53:50,832 DEBUG  [main] BasicTypeRegistry: Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@79b8ecb
2020-11-25 20:53:50,832 DEBUG  [main] BasicTypeRegistry: Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@c0013b8
2020-11-25 20:53:50,833 DEBUG  [main] BasicTypeRegistry: Adding type registration binary -> org.hibernate.type.BinaryType@2a42019a
2020-11-25 20:53:50,833 DEBUG  [main] BasicTypeRegistry: Adding type registration byte[] -> org.hibernate.type.BinaryType@2a42019a
2020-11-25 20:53:50,833 DEBUG  [main] BasicTypeRegistry: Adding type registration [B -> org.hibernate.type.BinaryType@2a42019a
2020-11-25 20:53:50,833 DEBUG  [main] BasicTypeRegistry: Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@495da9a7
2020-11-25 20:53:50,833 DEBUG  [main] BasicTypeRegistry: Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@495da9a7
2020-11-25 20:53:50,833 DEBUG  [main] BasicTypeRegistry: Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@495da9a7
2020-11-25 20:53:50,833 DEBUG  [main] BasicTypeRegistry: Adding type registration row_version -> org.hibernate.type.RowVersionType@35becbd4
2020-11-25 20:53:50,834 DEBUG  [main] BasicTypeRegistry: Adding type registration image -> org.hibernate.type.ImageType@30fa8a6b
2020-11-25 20:53:50,834 DEBUG  [main] BasicTypeRegistry: Adding type registration characters -> org.hibernate.type.CharArrayType@4c8d45cf
2020-11-25 20:53:50,834 DEBUG  [main] BasicTypeRegistry: Adding type registration char[] -> org.hibernate.type.CharArrayType@4c8d45cf
2020-11-25 20:53:50,834 DEBUG  [main] BasicTypeRegistry: Adding type registration [C -> org.hibernate.type.CharArrayType@4c8d45cf
2020-11-25 20:53:50,834 DEBUG  [main] BasicTypeRegistry: Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@5b490d5e
2020-11-25 20:53:50,835 DEBUG  [main] BasicTypeRegistry: Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@5b490d5e
2020-11-25 20:53:50,835 DEBUG  [main] BasicTypeRegistry: Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@5b490d5e
2020-11-25 20:53:50,835 DEBUG  [main] BasicTypeRegistry: Adding type registration text -> org.hibernate.type.TextType@18b04526
2020-11-25 20:53:50,836 DEBUG  [main] BasicTypeRegistry: Adding type registration ntext -> org.hibernate.type.NTextType@246df37b
2020-11-25 20:53:50,836 DEBUG  [main] BasicTypeRegistry: Adding type registration blob -> org.hibernate.type.BlobType@56881196
2020-11-25 20:53:50,836 DEBUG  [main] BasicTypeRegistry: Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@56881196
2020-11-25 20:53:50,837 DEBUG  [main] BasicTypeRegistry: Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@131c0b6f
2020-11-25 20:53:50,837 DEBUG  [main] BasicTypeRegistry: Adding type registration clob -> org.hibernate.type.ClobType@7fc1fd31
2020-11-25 20:53:50,837 DEBUG  [main] BasicTypeRegistry: Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@7fc1fd31
2020-11-25 20:53:50,838 DEBUG  [main] BasicTypeRegistry: Adding type registration nclob -> org.hibernate.type.NClobType@70777a65
2020-11-25 20:53:50,839 DEBUG  [main] BasicTypeRegistry: Adding type registration java.sql.NClob -> org.hibernate.type.NClobType@70777a65
2020-11-25 20:53:50,839 DEBUG  [main] BasicTypeRegistry: Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@2f6f4ac4
2020-11-25 20:53:50,839 DEBUG  [main] BasicTypeRegistry: Adding type registration materialized_nclob -> org.hibernate.type.MaterializedNClobType@7d685f4e
2020-11-25 20:53:50,839 DEBUG  [main] BasicTypeRegistry: Adding type registration serializable -> org.hibernate.type.SerializableType@319aa9ee
2020-11-25 20:53:50,840 DEBUG  [main] BasicTypeRegistry: Adding type registration object -> org.hibernate.type.ObjectType@54234569
2020-11-25 20:53:50,840 DEBUG  [main] BasicTypeRegistry: Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@54234569
2020-11-25 20:53:50,840 DEBUG  [main] BasicTypeRegistry: Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@15f7a4c2
2020-11-25 20:53:50,841 DEBUG  [main] BasicTypeRegistry: Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@ae06bd1
2020-11-25 20:53:50,841 DEBUG  [main] BasicTypeRegistry: Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@34be49c0
2020-11-25 20:53:50,841 DEBUG  [main] BasicTypeRegistry: Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@5735f981
2020-11-25 20:53:50,841 DEBUG  [main] BasicTypeRegistry: Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@7f4c8611
2020-11-25 20:53:50,841 DEBUG  [main] BasicTypeRegistry: Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@767bd4ca
2020-11-25 20:53:50,841 DEBUG  [main] BasicTypeRegistry: Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@30cd738c
2020-11-25 20:53:50,841 DEBUG  [main] BasicTypeRegistry: Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@484c6de5
2020-11-25 20:53:50,859 DEBUG  [main] TypeConfiguration$Scope: Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@392b7436] to MetadataBuildingContext [org.hibernate.boot.internal.MetadataBuildingContextRootImpl@1cf6971b]
2020-11-25 20:53:50,883 DEBUG  [main] EnumType: Using NAMED-based conversion for Enum com.sf.back.entities.Kind
2020-11-25 20:53:50,886 DEBUG  [main] EnumType: Using NAMED-based conversion for Enum com.sf.back.entities.Kind
2020-11-25 20:53:50,899 DEBUG  [main] TypeConfiguration$Scope: Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@392b7436] to SessionFactoryImpl [org.hibernate.internal.SessionFactoryImpl@18626c8c]
2020-11-25 20:53:50,900 DEBUG  [main] EnumType: Using NAMED-based conversion for Enum com.sf.back.entities.Kind
2020-11-25 20:53:50,900 DEBUG  [main] EnumType: Using NAMED-based conversion for Enum com.sf.back.entities.Kind
2020-11-25 20:53:50,932 DEBUG  [main] EnumType: Using NAMED-based conversion for Enum com.sf.back.entities.Kind
2020-11-25 20:53:50,932 DEBUG  [main] EnumType: Using NAMED-based conversion for Enum com.sf.back.entities.Kind
2020-11-25 20:53:50,962 DEBUG  [main] EnumType: Using NAMED-based conversion for Enum com.sf.back.entities.Kind
2020-11-25 20:53:50,962 DEBUG  [main] EnumType: Using NAMED-based conversion for Enum com.sf.back.entities.Kind
2020-11-25 20:53:50,971 DEBUG  [main] EnumType: Using NAMED-based conversion for Enum com.sf.back.entities.Kind
2020-11-25 20:53:50,981 TRACE  [main] TypeConfiguration$Scope: Handling #sessionFactoryCreated from [org.hibernate.internal.SessionFactoryImpl@18626c8c] for TypeConfiguration
2020-11-25 20:53:51,114 WARN   [main] JpaBaseConfiguration$JpaWebConfiguration: spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2020-11-25 20:53:51,342 WARN   [main] GenericWebApplicationContext: Exception encountered during context initialization - cancelling refresh attempt: org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'groovyMarkupConfigurer' defined in class path resource [org/springframework/boot/autoconfigure/groovy/template/GroovyTemplateAutoConfiguration$GroovyMarkupConfiguration.class]: Invocation of init method failed; nested exception is java.lang.reflect.InaccessibleObjectException: Unable to make jdk.internal.loader.ClassLoaders$AppClassLoader(jdk.internal.loader.ClassLoaders$PlatformClassLoader,jdk.internal.loader.URLClassPath) accessible: module java.base does not "opens jdk.internal.loader" to unnamed module @60fa3495
2020-11-25 20:53:51,344 TRACE  [main] TypeConfiguration$Scope: Handling #sessionFactoryClosed from [org.hibernate.internal.SessionFactoryImpl@18626c8c] for TypeConfiguration
2020-11-25 20:53:51,344 DEBUG  [main] TypeConfiguration$Scope: Un-scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration$Scope@67ea360f] from SessionFactory [org.hibernate.internal.SessionFactoryImpl@18626c8c]
2020-11-25 20:53:51,382 ERROR  [main] SpringApplication: Application run failed
org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'groovyMarkupConfigurer' defined in class path resource [org/springframework/boot/autoconfigure/groovy/template/GroovyTemplateAutoConfiguration$GroovyMarkupConfiguration.class]: Invocation of init method failed; nested exception is java.lang.reflect.InaccessibleObjectException: Unable to make jdk.internal.loader.ClassLoaders$AppClassLoader(jdk.internal.loader.ClassLoaders$PlatformClassLoader,jdk.internal.loader.URLClassPath) accessible: module java.base does not "opens jdk.internal.loader" to unnamed module @60fa3495
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1803)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:595)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:517)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:323)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:222)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:321)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:202)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(DefaultListableBeanFactory.java:879)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:878)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:550)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:747)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:397)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:315)
	at org.springframework.boot.test.context.SpringBootContextLoader.loadContext(SpringBootContextLoader.java:125)
	at org.springframework.test.context.cache.DefaultCacheAwareContextLoaderDelegate.loadContextInternal(DefaultCacheAwareContextLoaderDelegate.java:99)
	at org.springframework.test.context.cache.DefaultCacheAwareContextLoaderDelegate.loadContext(DefaultCacheAwareContextLoaderDelegate.java:124)
	at org.springframework.test.context.support.DefaultTestContext.getApplicationContext(DefaultTestContext.java:123)
	at org.springframework.test.context.web.ServletTestExecutionListener.setUpRequestContextIfNecessary(ServletTestExecutionListener.java:190)
	at org.springframework.test.context.web.ServletTestExecutionListener.prepareTestInstance(ServletTestExecutionListener.java:132)
	at org.springframework.test.context.TestContextManager.prepareTestInstance(TestContextManager.java:244)
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner.createTest(SpringJUnit4ClassRunner.java:227)
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner$1.runReflectiveCall(SpringJUnit4ClassRunner.java:289)
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner.methodBlock(SpringJUnit4ClassRunner.java:291)
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner.runChild(SpringJUnit4ClassRunner.java:246)
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner.runChild(SpringJUnit4ClassRunner.java:97)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:290)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:71)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:58)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268)
	at org.junit.internal.runners.statements.RunBefores.evaluate(RunBefores.java:26)
	at org.springframework.test.context.junit4.statements.RunBeforeTestClassCallbacks.evaluate(RunBeforeTestClassCallbacks.java:61)
	at org.junit.internal.runners.statements.RunAfters.evaluate(RunAfters.java:27)
	at org.springframework.test.context.junit4.statements.RunAfterTestClassCallbacks.evaluate(RunAfterTestClassCallbacks.java:70)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:363)
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner.run(SpringJUnit4ClassRunner.java:190)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:137)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:115)
	at org.junit.vintage.engine.execution.RunnerExecutor.execute(RunnerExecutor.java:40)
	at java.base/java.util.stream.ForEachOps$ForEachOp$OfRef.accept(ForEachOps.java:183)
	at java.base/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:195)
	at java.base/java.util.Iterator.forEachRemaining(Iterator.java:133)
	at java.base/java.util.Spliterators$IteratorSpliterator.forEachRemaining(Spliterators.java:1801)
	at java.base/java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:484)
	at java.base/java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:474)
	at java.base/java.util.stream.ForEachOps$ForEachOp.evaluateSequential(ForEachOps.java:150)
	at java.base/java.util.stream.ForEachOps$ForEachOp$OfRef.evaluateSequential(ForEachOps.java:173)
	at java.base/java.util.stream.AbstractPipeline.evaluate(AbstractPipeline.java:234)
	at java.base/java.util.stream.ReferencePipeline.forEach(ReferencePipeline.java:497)
	at org.junit.vintage.engine.VintageTestEngine.executeAllChildren(VintageTestEngine.java:80)
	at org.junit.vintage.engine.VintageTestEngine.execute(VintageTestEngine.java:71)
	at org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:220)
	at org.junit.platform.launcher.core.DefaultLauncher.lambda$execute$6(DefaultLauncher.java:188)
	at org.junit.platform.launcher.core.DefaultLauncher.withInterceptedStreams(DefaultLauncher.java:202)
	at org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:181)
	at org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:128)
	at org.apache.maven.surefire.junitplatform.JUnitPlatformProvider.invokeAllTests(JUnitPlatformProvider.java:150)
	at org.apache.maven.surefire.junitplatform.JUnitPlatformProvider.invoke(JUnitPlatformProvider.java:124)
	at org.apache.maven.surefire.booter.ForkedBooter.invokeProviderInSameClassLoader(ForkedBooter.java:384)
	at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:345)
	at org.apache.maven.surefire.booter.ForkedBooter.execute(ForkedBooter.java:126)
	at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:418)
Caused by: java.lang.reflect.InaccessibleObjectException: Unable to make jdk.internal.loader.ClassLoaders$AppClassLoader(jdk.internal.loader.ClassLoaders$PlatformClassLoader,jdk.internal.loader.URLClassPath) accessible: module java.base does not "opens jdk.internal.loader" to unnamed module @60fa3495
	at java.base/java.lang.reflect.AccessibleObject.checkCanSetAccessible(AccessibleObject.java:344)
	at java.base/java.lang.reflect.AccessibleObject.checkCanSetAccessible(AccessibleObject.java:284)
	at java.base/java.lang.reflect.Constructor.checkCanSetAccessible(Constructor.java:189)
	at java.base/java.lang.reflect.Constructor.setAccessible(Constructor.java:182)
	at org.codehaus.groovy.reflection.CachedConstructor$1.run(CachedConstructor.java:44)
	at java.base/java.security.AccessController.doPrivileged(AccessController.java:312)
	at org.codehaus.groovy.reflection.CachedConstructor.<init>(CachedConstructor.java:42)
	at org.codehaus.groovy.reflection.CachedClass$2.initValue(CachedClass.java:79)
	at org.codehaus.groovy.reflection.CachedClass$2.initValue(CachedClass.java:69)
	at org.codehaus.groovy.util.LazyReference.getLocked(LazyReference.java:49)
	at org.codehaus.groovy.util.LazyReference.get(LazyReference.java:36)
	at org.codehaus.groovy.reflection.CachedClass.getConstructors(CachedClass.java:268)
	at groovy.lang.MetaClassImpl.<init>(MetaClassImpl.java:218)
	at groovy.lang.MetaClassImpl.<init>(MetaClassImpl.java:228)
	at groovy.lang.MetaClassRegistry$MetaClassCreationHandle.createNormalMetaClass(MetaClassRegistry.java:171)
	at groovy.lang.MetaClassRegistry$MetaClassCreationHandle.createWithCustomLookup(MetaClassRegistry.java:161)
	at groovy.lang.MetaClassRegistry$MetaClassCreationHandle.create(MetaClassRegistry.java:144)
	at org.codehaus.groovy.reflection.ClassInfo.getMetaClassUnderLock(ClassInfo.java:253)
	at org.codehaus.groovy.reflection.ClassInfo.getMetaClass(ClassInfo.java:285)
	at org.codehaus.groovy.reflection.ClassInfo.getMetaClass(ClassInfo.java:295)
	at org.codehaus.groovy.runtime.metaclass.MetaClassRegistryImpl.getMetaClass(MetaClassRegistryImpl.java:261)
	at org.codehaus.groovy.runtime.InvokerHelper.getMetaClass(InvokerHelper.java:873)
	at org.codehaus.groovy.runtime.InvokerHelper.invokePojoMethod(InvokerHelper.java:906)
	at org.codehaus.groovy.runtime.InvokerHelper.invokeMethod(InvokerHelper.java:898)
	at org.codehaus.groovy.runtime.typehandling.DefaultTypeTransformation.castToBoolean(DefaultTypeTransformation.java:185)
	at org.codehaus.groovy.runtime.typehandling.DefaultTypeTransformation.booleanUnbox(DefaultTypeTransformation.java:74)
	at org.codehaus.groovy.control.customizers.ASTTransformationCustomizer.findASTTranformationClass(ASTTransformationCustomizer.groovy:209)
	at jdk.internal.reflect.GeneratedMethodAccessor358.invoke(Unknown Source)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:567)
	at org.codehaus.groovy.reflection.CachedMethod.invoke(CachedMethod.java:93)
	at org.codehaus.groovy.runtime.callsite.StaticMetaMethodSite$StaticMetaMethodSiteNoUnwrapNoCoerce.invoke(StaticMetaMethodSite.java:151)
	at org.codehaus.groovy.runtime.callsite.StaticMetaMethodSite.callStatic(StaticMetaMethodSite.java:102)
	at org.codehaus.groovy.runtime.callsite.AbstractCallSite.callStatic(AbstractCallSite.java:214)
	at org.codehaus.groovy.control.customizers.ASTTransformationCustomizer.findPhase(ASTTransformationCustomizer.groovy:226)
	at jdk.internal.reflect.GeneratedMethodAccessor357.invoke(Unknown Source)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:567)
	at org.codehaus.groovy.reflection.CachedMethod.invoke(CachedMethod.java:93)
	at org.codehaus.groovy.runtime.callsite.StaticMetaMethodSite$StaticMetaMethodSiteNoUnwrapNoCoerce.invoke(StaticMetaMethodSite.java:151)
	at org.codehaus.groovy.runtime.callsite.StaticMetaMethodSite.callStatic(StaticMetaMethodSite.java:102)
	at org.codehaus.groovy.runtime.callsite.AbstractCallSite.callStatic(AbstractCallSite.java:214)
	at org.codehaus.groovy.control.customizers.ASTTransformationCustomizer.<init>(ASTTransformationCustomizer.groovy:180)
	at org.codehaus.groovy.control.customizers.ASTTransformationCustomizer.<init>(ASTTransformationCustomizer.groovy:188)
	at groovy.text.markup.MarkupTemplateEngine.<init>(MarkupTemplateEngine.java:94)
	at org.springframework.web.servlet.view.groovy.GroovyMarkupConfigurer.createTemplateEngine(GroovyMarkupConfigurer.java:160)
	at org.springframework.web.servlet.view.groovy.GroovyMarkupConfigurer.afterPropertiesSet(GroovyMarkupConfigurer.java:153)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1862)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1799)
	... 62 common frames omitted
2020-11-25 20:53:51,382 ERROR  [main] TestContextManager: Caught exception while allowing TestExecutionListener [org.springframework.test.context.web.ServletTestExecutionListener@701dbfbd] to prepare test instance [com.sf.service.ProblemServiceTest@16abeca6]
java.lang.IllegalStateException: Failed to load ApplicationContext
	at org.springframework.test.context.cache.DefaultCacheAwareContextLoaderDelegate.loadContext(DefaultCacheAwareContextLoaderDelegate.java:132)
	at org.springframework.test.context.support.DefaultTestContext.getApplicationContext(DefaultTestContext.java:123)
	at org.springframework.test.context.web.ServletTestExecutionListener.setUpRequestContextIfNecessary(ServletTestExecutionListener.java:190)
	at org.springframework.test.context.web.ServletTestExecutionListener.prepareTestInstance(ServletTestExecutionListener.java:132)
	at org.springframework.test.context.TestContextManager.prepareTestInstance(TestContextManager.java:244)
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner.createTest(SpringJUnit4ClassRunner.java:227)
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner$1.runReflectiveCall(SpringJUnit4ClassRunner.java:289)
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner.methodBlock(SpringJUnit4ClassRunner.java:291)
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner.runChild(SpringJUnit4ClassRunner.java:246)
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner.runChild(SpringJUnit4ClassRunner.java:97)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:290)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:71)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:58)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268)
	at org.junit.internal.runners.statements.RunBefores.evaluate(RunBefores.java:26)
	at org.springframework.test.context.junit4.statements.RunBeforeTestClassCallbacks.evaluate(RunBeforeTestClassCallbacks.java:61)
	at org.junit.internal.runners.statements.RunAfters.evaluate(RunAfters.java:27)
	at org.springframework.test.context.junit4.statements.RunAfterTestClassCallbacks.evaluate(RunAfterTestClassCallbacks.java:70)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:363)
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner.run(SpringJUnit4ClassRunner.java:190)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:137)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:115)
	at org.junit.vintage.engine.execution.RunnerExecutor.execute(RunnerExecutor.java:40)
	at java.base/java.util.stream.ForEachOps$ForEachOp$OfRef.accept(ForEachOps.java:183)
	at java.base/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:195)
	at java.base/java.util.Iterator.forEachRemaining(Iterator.java:133)
	at java.base/java.util.Spliterators$IteratorSpliterator.forEachRemaining(Spliterators.java:1801)
	at java.base/java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:484)
	at java.base/java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:474)
	at java.base/java.util.stream.ForEachOps$ForEachOp.evaluateSequential(ForEachOps.java:150)
	at java.base/java.util.stream.ForEachOps$ForEachOp$OfRef.evaluateSequential(ForEachOps.java:173)
	at java.base/java.util.stream.AbstractPipeline.evaluate(AbstractPipeline.java:234)
	at java.base/java.util.stream.ReferencePipeline.forEach(ReferencePipeline.java:497)
	at org.junit.vintage.engine.VintageTestEngine.executeAllChildren(VintageTestEngine.java:80)
	at org.junit.vintage.engine.VintageTestEngine.execute(VintageTestEngine.java:71)
	at org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:220)
	at org.junit.platform.launcher.core.DefaultLauncher.lambda$execute$6(DefaultLauncher.java:188)
	at org.junit.platform.launcher.core.DefaultLauncher.withInterceptedStreams(DefaultLauncher.java:202)
	at org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:181)
	at org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:128)
	at org.apache.maven.surefire.junitplatform.JUnitPlatformProvider.invokeAllTests(JUnitPlatformProvider.java:150)
	at org.apache.maven.surefire.junitplatform.JUnitPlatformProvider.invoke(JUnitPlatformProvider.java:124)
	at org.apache.maven.surefire.booter.ForkedBooter.invokeProviderInSameClassLoader(ForkedBooter.java:384)
	at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:345)
	at org.apache.maven.surefire.booter.ForkedBooter.execute(ForkedBooter.java:126)
	at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:418)
Caused by: org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'groovyMarkupConfigurer' defined in class path resource [org/springframework/boot/autoconfigure/groovy/template/GroovyTemplateAutoConfiguration$GroovyMarkupConfiguration.class]: Invocation of init method failed; nested exception is java.lang.reflect.InaccessibleObjectException: Unable to make jdk.internal.loader.ClassLoaders$AppClassLoader(jdk.internal.loader.ClassLoaders$PlatformClassLoader,jdk.internal.loader.URLClassPath) accessible: module java.base does not "opens jdk.internal.loader" to unnamed module @60fa3495
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1803)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:595)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:517)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:323)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:222)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:321)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:202)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(DefaultListableBeanFactory.java:879)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:878)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:550)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:747)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:397)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:315)
	at org.springframework.boot.test.context.SpringBootContextLoader.loadContext(SpringBootContextLoader.java:125)
	at org.springframework.test.context.cache.DefaultCacheAwareContextLoaderDelegate.loadContextInternal(DefaultCacheAwareContextLoaderDelegate.java:99)
	at org.springframework.test.context.cache.DefaultCacheAwareContextLoaderDelegate.loadContext(DefaultCacheAwareContextLoaderDelegate.java:124)
	... 47 common frames omitted
Caused by: java.lang.reflect.InaccessibleObjectException: Unable to make jdk.internal.loader.ClassLoaders$AppClassLoader(jdk.internal.loader.ClassLoaders$PlatformClassLoader,jdk.internal.loader.URLClassPath) accessible: module java.base does not "opens jdk.internal.loader" to unnamed module @60fa3495
	at java.base/java.lang.reflect.AccessibleObject.checkCanSetAccessible(AccessibleObject.java:344)
	at java.base/java.lang.reflect.AccessibleObject.checkCanSetAccessible(AccessibleObject.java:284)
	at java.base/java.lang.reflect.Constructor.checkCanSetAccessible(Constructor.java:189)
	at java.base/java.lang.reflect.Constructor.setAccessible(Constructor.java:182)
	at org.codehaus.groovy.reflection.CachedConstructor$1.run(CachedConstructor.java:44)
	at java.base/java.security.AccessController.doPrivileged(AccessController.java:312)
	at org.codehaus.groovy.reflection.CachedConstructor.<init>(CachedConstructor.java:42)
	at org.codehaus.groovy.reflection.CachedClass$2.initValue(CachedClass.java:79)
	at org.codehaus.groovy.reflection.CachedClass$2.initValue(CachedClass.java:69)
	at org.codehaus.groovy.util.LazyReference.getLocked(LazyReference.java:49)
	at org.codehaus.groovy.util.LazyReference.get(LazyReference.java:36)
	at org.codehaus.groovy.reflection.CachedClass.getConstructors(CachedClass.java:268)
	at groovy.lang.MetaClassImpl.<init>(MetaClassImpl.java:218)
	at groovy.lang.MetaClassImpl.<init>(MetaClassImpl.java:228)
	at groovy.lang.MetaClassRegistry$MetaClassCreationHandle.createNormalMetaClass(MetaClassRegistry.java:171)
	at groovy.lang.MetaClassRegistry$MetaClassCreationHandle.createWithCustomLookup(MetaClassRegistry.java:161)
	at groovy.lang.MetaClassRegistry$MetaClassCreationHandle.create(MetaClassRegistry.java:144)
	at org.codehaus.groovy.reflection.ClassInfo.getMetaClassUnderLock(ClassInfo.java:253)
	at org.codehaus.groovy.reflection.ClassInfo.getMetaClass(ClassInfo.java:285)
	at org.codehaus.groovy.reflection.ClassInfo.getMetaClass(ClassInfo.java:295)
	at org.codehaus.groovy.runtime.metaclass.MetaClassRegistryImpl.getMetaClass(MetaClassRegistryImpl.java:261)
	at org.codehaus.groovy.runtime.InvokerHelper.getMetaClass(InvokerHelper.java:873)
	at org.codehaus.groovy.runtime.InvokerHelper.invokePojoMethod(InvokerHelper.java:906)
	at org.codehaus.groovy.runtime.InvokerHelper.invokeMethod(InvokerHelper.java:898)
	at org.codehaus.groovy.runtime.typehandling.DefaultTypeTransformation.castToBoolean(DefaultTypeTransformation.java:185)
	at org.codehaus.groovy.runtime.typehandling.DefaultTypeTransformation.booleanUnbox(DefaultTypeTransformation.java:74)
	at org.codehaus.groovy.control.customizers.ASTTransformationCustomizer.findASTTranformationClass(ASTTransformationCustomizer.groovy:209)
	at jdk.internal.reflect.GeneratedMethodAccessor358.invoke(Unknown Source)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:567)
	at org.codehaus.groovy.reflection.CachedMethod.invoke(CachedMethod.java:93)
	at org.codehaus.groovy.runtime.callsite.StaticMetaMethodSite$StaticMetaMethodSiteNoUnwrapNoCoerce.invoke(StaticMetaMethodSite.java:151)
	at org.codehaus.groovy.runtime.callsite.StaticMetaMethodSite.callStatic(StaticMetaMethodSite.java:102)
	at org.codehaus.groovy.runtime.callsite.AbstractCallSite.callStatic(AbstractCallSite.java:214)
	at org.codehaus.groovy.control.customizers.ASTTransformationCustomizer.findPhase(ASTTransformationCustomizer.groovy:226)
	at jdk.internal.reflect.GeneratedMethodAccessor357.invoke(Unknown Source)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:567)
	at org.codehaus.groovy.reflection.CachedMethod.invoke(CachedMethod.java:93)
	at org.codehaus.groovy.runtime.callsite.StaticMetaMethodSite$StaticMetaMethodSiteNoUnwrapNoCoerce.invoke(StaticMetaMethodSite.java:151)
	at org.codehaus.groovy.runtime.callsite.StaticMetaMethodSite.callStatic(StaticMetaMethodSite.java:102)
	at org.codehaus.groovy.runtime.callsite.AbstractCallSite.callStatic(AbstractCallSite.java:214)
	at org.codehaus.groovy.control.customizers.ASTTransformationCustomizer.<init>(ASTTransformationCustomizer.groovy:180)
	at org.codehaus.groovy.control.customizers.ASTTransformationCustomizer.<init>(ASTTransformationCustomizer.groovy:188)
	at groovy.text.markup.MarkupTemplateEngine.<init>(MarkupTemplateEngine.java:94)
	at org.springframework.web.servlet.view.groovy.GroovyMarkupConfigurer.createTemplateEngine(GroovyMarkupConfigurer.java:160)
	at org.springframework.web.servlet.view.groovy.GroovyMarkupConfigurer.afterPropertiesSet(GroovyMarkupConfigurer.java:153)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1862)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1799)
	... 62 common frames omitted
2020-11-25 20:53:52,444 DEBUG  [main] BasicTypeRegistry: Adding type registration boolean -> org.hibernate.type.BooleanType@ff2266c
2020-11-25 20:53:52,448 DEBUG  [main] BasicTypeRegistry: Adding type registration boolean -> org.hibernate.type.BooleanType@ff2266c
2020-11-25 20:53:52,448 DEBUG  [main] BasicTypeRegistry: Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@ff2266c
2020-11-25 20:53:52,449 DEBUG  [main] BasicTypeRegistry: Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@1d585fb
2020-11-25 20:53:52,449 DEBUG  [main] BasicTypeRegistry: Adding type registration true_false -> org.hibernate.type.TrueFalseType@7c8f047a
2020-11-25 20:53:52,449 DEBUG  [main] BasicTypeRegistry: Adding type registration yes_no -> org.hibernate.type.YesNoType@d949bc4
2020-11-25 20:53:52,449 DEBUG  [main] BasicTypeRegistry: Adding type registration byte -> org.hibernate.type.ByteType@29c25bbc
2020-11-25 20:53:52,449 DEBUG  [main] BasicTypeRegistry: Adding type registration byte -> org.hibernate.type.ByteType@29c25bbc
2020-11-25 20:53:52,449 DEBUG  [main] BasicTypeRegistry: Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@29c25bbc
2020-11-25 20:53:52,449 DEBUG  [main] BasicTypeRegistry: Adding type registration character -> org.hibernate.type.CharacterType@403f7aa2
2020-11-25 20:53:52,449 DEBUG  [main] BasicTypeRegistry: Adding type registration char -> org.hibernate.type.CharacterType@403f7aa2
2020-11-25 20:53:52,449 DEBUG  [main] BasicTypeRegistry: Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@403f7aa2
2020-11-25 20:53:52,450 DEBUG  [main] BasicTypeRegistry: Adding type registration short -> org.hibernate.type.ShortType@38cb1606
2020-11-25 20:53:52,450 DEBUG  [main] BasicTypeRegistry: Adding type registration short -> org.hibernate.type.ShortType@38cb1606
2020-11-25 20:53:52,450 DEBUG  [main] BasicTypeRegistry: Adding type registration java.lang.Short -> org.hibernate.type.ShortType@38cb1606
2020-11-25 20:53:52,450 DEBUG  [main] BasicTypeRegistry: Adding type registration integer -> org.hibernate.type.IntegerType@5d3b6585
2020-11-25 20:53:52,450 DEBUG  [main] BasicTypeRegistry: Adding type registration int -> org.hibernate.type.IntegerType@5d3b6585
2020-11-25 20:53:52,450 DEBUG  [main] BasicTypeRegistry: Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@5d3b6585
2020-11-25 20:53:52,450 DEBUG  [main] BasicTypeRegistry: Adding type registration long -> org.hibernate.type.LongType@4fea5ee0
2020-11-25 20:53:52,450 DEBUG  [main] BasicTypeRegistry: Adding type registration long -> org.hibernate.type.LongType@4fea5ee0
2020-11-25 20:53:52,451 DEBUG  [main] BasicTypeRegistry: Adding type registration java.lang.Long -> org.hibernate.type.LongType@4fea5ee0
2020-11-25 20:53:52,451 DEBUG  [main] BasicTypeRegistry: Adding type registration float -> org.hibernate.type.FloatType@7b3085a3
2020-11-25 20:53:52,451 DEBUG  [main] BasicTypeRegistry: Adding type registration float -> org.hibernate.type.FloatType@7b3085a3
2020-11-25 20:53:52,451 DEBUG  [main] BasicTypeRegistry: Adding type registration java.lang.Float -> org.hibernate.type.FloatType@7b3085a3
2020-11-25 20:53:52,451 DEBUG  [main] BasicTypeRegistry: Adding type registration double -> org.hibernate.type.DoubleType@5a7a6d34
2020-11-25 20:53:52,451 DEBUG  [main] BasicTypeRegistry: Adding type registration double -> org.hibernate.type.DoubleType@5a7a6d34
2020-11-25 20:53:52,451 DEBUG  [main] BasicTypeRegistry: Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@5a7a6d34
2020-11-25 20:53:52,452 DEBUG  [main] BasicTypeRegistry: Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@5ae66c98
2020-11-25 20:53:52,452 DEBUG  [main] BasicTypeRegistry: Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@5ae66c98
2020-11-25 20:53:52,452 DEBUG  [main] BasicTypeRegistry: Adding type registration big_integer -> org.hibernate.type.BigIntegerType@223cbf0d
2020-11-25 20:53:52,452 DEBUG  [main] BasicTypeRegistry: Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@223cbf0d
2020-11-25 20:53:52,452 DEBUG  [main] BasicTypeRegistry: Adding type registration string -> org.hibernate.type.StringType@4f581211
2020-11-25 20:53:52,452 DEBUG  [main] BasicTypeRegistry: Adding type registration java.lang.String -> org.hibernate.type.StringType@4f581211
2020-11-25 20:53:52,453 DEBUG  [main] BasicTypeRegistry: Adding type registration nstring -> org.hibernate.type.StringNVarcharType@6697f3d
2020-11-25 20:53:52,453 DEBUG  [main] BasicTypeRegistry: Adding type registration ncharacter -> org.hibernate.type.CharacterNCharType@f1d1463
2020-11-25 20:53:52,453 DEBUG  [main] BasicTypeRegistry: Adding type registration url -> org.hibernate.type.UrlType@44ddb518
2020-11-25 20:53:52,453 DEBUG  [main] BasicTypeRegistry: Adding type registration java.net.URL -> org.hibernate.type.UrlType@44ddb518
2020-11-25 20:53:52,453 DEBUG  [main] BasicTypeRegistry: Adding type registration Duration -> org.hibernate.type.DurationType@49e0b123
2020-11-25 20:53:52,453 DEBUG  [main] BasicTypeRegistry: Adding type registration java.time.Duration -> org.hibernate.type.DurationType@49e0b123
2020-11-25 20:53:52,453 DEBUG  [main] BasicTypeRegistry: Adding type registration Instant -> org.hibernate.type.InstantType@40a28bda
2020-11-25 20:53:52,453 DEBUG  [main] BasicTypeRegistry: Adding type registration java.time.Instant -> org.hibernate.type.InstantType@40a28bda
2020-11-25 20:53:52,453 DEBUG  [main] BasicTypeRegistry: Adding type registration LocalDateTime -> org.hibernate.type.LocalDateTimeType@33430fc
2020-11-25 20:53:52,454 DEBUG  [main] BasicTypeRegistry: Adding type registration java.time.LocalDateTime -> org.hibernate.type.LocalDateTimeType@33430fc
2020-11-25 20:53:52,454 DEBUG  [main] BasicTypeRegistry: Adding type registration LocalDate -> org.hibernate.type.LocalDateType@d7055be
2020-11-25 20:53:52,454 DEBUG  [main] BasicTypeRegistry: Adding type registration java.time.LocalDate -> org.hibernate.type.LocalDateType@d7055be
2020-11-25 20:53:52,454 DEBUG  [main] BasicTypeRegistry: Adding type registration LocalTime -> org.hibernate.type.LocalTimeType@3c7d8a4
2020-11-25 20:53:52,454 DEBUG  [main] BasicTypeRegistry: Adding type registration java.time.LocalTime -> org.hibernate.type.LocalTimeType@3c7d8a4
2020-11-25 20:53:52,454 DEBUG  [main] BasicTypeRegistry: Adding type registration OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@7a117dc2
2020-11-25 20:53:52,454 DEBUG  [main] BasicTypeRegistry: Adding type registration java.time.OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@7a117dc2
2020-11-25 20:53:52,454 DEBUG  [main] BasicTypeRegistry: Adding type registration OffsetTime -> org.hibernate.type.OffsetTimeType@3c64339f
2020-11-25 20:53:52,454 DEBUG  [main] BasicTypeRegistry: Adding type registration java.time.OffsetTime -> org.hibernate.type.OffsetTimeType@3c64339f
2020-11-25 20:53:52,454 DEBUG  [main] BasicTypeRegistry: Adding type registration ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@30c8c6ab
2020-11-25 20:53:52,454 DEBUG  [main] BasicTypeRegistry: Adding type registration java.time.ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@30c8c6ab
2020-11-25 20:53:52,454 DEBUG  [main] BasicTypeRegistry: Adding type registration date -> org.hibernate.type.DateType@61c5fd78
2020-11-25 20:53:52,455 DEBUG  [main] BasicTypeRegistry: Adding type registration java.sql.Date -> org.hibernate.type.DateType@61c5fd78
2020-11-25 20:53:52,455 DEBUG  [main] BasicTypeRegistry: Adding type registration time -> org.hibernate.type.TimeType@77856cc5
2020-11-25 20:53:52,455 DEBUG  [main] BasicTypeRegistry: Adding type registration java.sql.Time -> org.hibernate.type.TimeType@77856cc5
2020-11-25 20:53:52,455 DEBUG  [main] BasicTypeRegistry: Adding type registration timestamp -> org.hibernate.type.TimestampType@12166229
2020-11-25 20:53:52,455 DEBUG  [main] BasicTypeRegistry: Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@12166229
2020-11-25 20:53:52,455 DEBUG  [main] BasicTypeRegistry: Adding type registration java.util.Date -> org.hibernate.type.TimestampType@12166229
2020-11-25 20:53:52,455 DEBUG  [main] BasicTypeRegistry: Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@2b4829aa
2020-11-25 20:53:52,455 DEBUG  [main] BasicTypeRegistry: Adding type registration calendar -> org.hibernate.type.CalendarType@3ec082a1
2020-11-25 20:53:52,455 DEBUG  [main] BasicTypeRegistry: Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@3ec082a1
2020-11-25 20:53:52,455 DEBUG  [main] BasicTypeRegistry: Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@3ec082a1
2020-11-25 20:53:52,455 DEBUG  [main] BasicTypeRegistry: Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@429f0ca8
2020-11-25 20:53:52,455 DEBUG  [main] BasicTypeRegistry: Adding type registration locale -> org.hibernate.type.LocaleType@11c3ce6a
2020-11-25 20:53:52,455 DEBUG  [main] BasicTypeRegistry: Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@11c3ce6a
2020-11-25 20:53:52,455 DEBUG  [main] BasicTypeRegistry: Adding type registration currency -> org.hibernate.type.CurrencyType@28519bfb
2020-11-25 20:53:52,455 DEBUG  [main] BasicTypeRegistry: Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@28519bfb
2020-11-25 20:53:52,456 DEBUG  [main] BasicTypeRegistry: Adding type registration timezone -> org.hibernate.type.TimeZoneType@7aa15a80
2020-11-25 20:53:52,456 DEBUG  [main] BasicTypeRegistry: Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@7aa15a80
2020-11-25 20:53:52,456 DEBUG  [main] BasicTypeRegistry: Adding type registration class -> org.hibernate.type.ClassType@48d5ca17
2020-11-25 20:53:52,456 DEBUG  [main] BasicTypeRegistry: Adding type registration java.lang.Class -> org.hibernate.type.ClassType@48d5ca17
2020-11-25 20:53:52,456 DEBUG  [main] BasicTypeRegistry: Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@79b8ecb
2020-11-25 20:53:52,456 DEBUG  [main] BasicTypeRegistry: Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@79b8ecb
2020-11-25 20:53:52,456 DEBUG  [main] BasicTypeRegistry: Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@c0013b8
2020-11-25 20:53:52,456 DEBUG  [main] BasicTypeRegistry: Adding type registration binary -> org.hibernate.type.BinaryType@2a42019a
2020-11-25 20:53:52,457 DEBUG  [main] BasicTypeRegistry: Adding type registration byte[] -> org.hibernate.type.BinaryType@2a42019a
2020-11-25 20:53:52,457 DEBUG  [main] BasicTypeRegistry: Adding type registration [B -> org.hibernate.type.BinaryType@2a42019a
2020-11-25 20:53:52,457 DEBUG  [main] BasicTypeRegistry: Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@495da9a7
2020-11-25 20:53:52,457 DEBUG  [main] BasicTypeRegistry: Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@495da9a7
2020-11-25 20:53:52,457 DEBUG  [main] BasicTypeRegistry: Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@495da9a7
2020-11-25 20:53:52,457 DEBUG  [main] BasicTypeRegistry: Adding type registration row_version -> org.hibernate.type.RowVersionType@35becbd4
2020-11-25 20:53:52,457 DEBUG  [main] BasicTypeRegistry: Adding type registration image -> org.hibernate.type.ImageType@30fa8a6b
2020-11-25 20:53:52,458 DEBUG  [main] BasicTypeRegistry: Adding type registration characters -> org.hibernate.type.CharArrayType@4c8d45cf
2020-11-25 20:53:52,458 DEBUG  [main] BasicTypeRegistry: Adding type registration char[] -> org.hibernate.type.CharArrayType@4c8d45cf
2020-11-25 20:53:52,458 DEBUG  [main] BasicTypeRegistry: Adding type registration [C -> org.hibernate.type.CharArrayType@4c8d45cf
2020-11-25 20:53:52,458 DEBUG  [main] BasicTypeRegistry: Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@5b490d5e
2020-11-25 20:53:52,458 DEBUG  [main] BasicTypeRegistry: Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@5b490d5e
2020-11-25 20:53:52,458 DEBUG  [main] BasicTypeRegistry: Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@5b490d5e
2020-11-25 20:53:52,458 DEBUG  [main] BasicTypeRegistry: Adding type registration text -> org.hibernate.type.TextType@18b04526
2020-11-25 20:53:52,458 DEBUG  [main] BasicTypeRegistry: Adding type registration ntext -> org.hibernate.type.NTextType@246df37b
2020-11-25 20:53:52,459 DEBUG  [main] BasicTypeRegistry: Adding type registration blob -> org.hibernate.type.BlobType@56881196
2020-11-25 20:53:52,459 DEBUG  [main] BasicTypeRegistry: Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@56881196
2020-11-25 20:53:52,459 DEBUG  [main] BasicTypeRegistry: Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@131c0b6f
2020-11-25 20:53:52,459 DEBUG  [main] BasicTypeRegistry: Adding type registration clob -> org.hibernate.type.ClobType@7fc1fd31
2020-11-25 20:53:52,459 DEBUG  [main] BasicTypeRegistry: Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@7fc1fd31
2020-11-25 20:53:52,460 DEBUG  [main] BasicTypeRegistry: Adding type registration nclob -> org.hibernate.type.NClobType@70777a65
2020-11-25 20:53:52,460 DEBUG  [main] BasicTypeRegistry: Adding type registration java.sql.NClob -> org.hibernate.type.NClobType@70777a65
2020-11-25 20:53:52,460 DEBUG  [main] BasicTypeRegistry: Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@2f6f4ac4
2020-11-25 20:53:52,460 DEBUG  [main] BasicTypeRegistry: Adding type registration materialized_nclob -> org.hibernate.type.MaterializedNClobType@7d685f4e
2020-11-25 20:53:52,460 DEBUG  [main] BasicTypeRegistry: Adding type registration serializable -> org.hibernate.type.SerializableType@319aa9ee
2020-11-25 20:53:52,460 DEBUG  [main] BasicTypeRegistry: Adding type registration object -> org.hibernate.type.ObjectType@54234569
2020-11-25 20:53:52,460 DEBUG  [main] BasicTypeRegistry: Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@54234569
2020-11-25 20:53:52,460 DEBUG  [main] BasicTypeRegistry: Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@6a8965a
2020-11-25 20:53:52,461 DEBUG  [main] BasicTypeRegistry: Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@3144dd1a
2020-11-25 20:53:52,461 DEBUG  [main] BasicTypeRegistry: Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@5246f452
2020-11-25 20:53:52,461 DEBUG  [main] BasicTypeRegistry: Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@604f8e79
2020-11-25 20:53:52,461 DEBUG  [main] BasicTypeRegistry: Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@2217de6c
2020-11-25 20:53:52,461 DEBUG  [main] BasicTypeRegistry: Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@352c7b39
2020-11-25 20:53:52,461 DEBUG  [main] BasicTypeRegistry: Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@50adedaa
2020-11-25 20:53:52,461 DEBUG  [main] BasicTypeRegistry: Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@4c8d8d80
2020-11-25 20:53:52,485 DEBUG  [main] TypeConfiguration$Scope: Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@3ca370ae] to MetadataBuildingContext [org.hibernate.boot.internal.MetadataBuildingContextRootImpl@366ccef0]
2020-11-25 20:53:52,500 DEBUG  [main] EnumType: Using NAMED-based conversion for Enum com.sf.back.entities.Kind
2020-11-25 20:53:52,504 DEBUG  [main] EnumType: Using NAMED-based conversion for Enum com.sf.back.entities.Kind
2020-11-25 20:53:52,535 DEBUG  [main] TypeConfiguration$Scope: Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@3ca370ae] to SessionFactoryImpl [org.hibernate.internal.SessionFactoryImpl@131879fc]
2020-11-25 20:53:52,536 DEBUG  [main] EnumType: Using NAMED-based conversion for Enum com.sf.back.entities.Kind
2020-11-25 20:53:52,536 DEBUG  [main] EnumType: Using NAMED-based conversion for Enum com.sf.back.entities.Kind
2020-11-25 20:53:52,551 DEBUG  [main] EnumType: Using NAMED-based conversion for Enum com.sf.back.entities.Kind
2020-11-25 20:53:52,551 DEBUG  [main] EnumType: Using NAMED-based conversion for Enum com.sf.back.entities.Kind
2020-11-25 20:53:52,575 DEBUG  [main] EnumType: Using NAMED-based conversion for Enum com.sf.back.entities.Kind
2020-11-25 20:53:52,575 DEBUG  [main] EnumType: Using NAMED-based conversion for Enum com.sf.back.entities.Kind
2020-11-25 20:53:52,588 DEBUG  [main] EnumType: Using NAMED-based conversion for Enum com.sf.back.entities.Kind
2020-11-25 20:53:52,599 TRACE  [main] TypeConfiguration$Scope: Handling #sessionFactoryCreated from [org.hibernate.internal.SessionFactoryImpl@131879fc] for TypeConfiguration
2020-11-25 20:53:52,712 WARN   [main] JpaBaseConfiguration$JpaWebConfiguration: spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2020-11-25 20:53:52,848 WARN   [main] GenericWebApplicationContext: Exception encountered during context initialization - cancelling refresh attempt: org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'groovyMarkupConfigurer' defined in class path resource [org/springframework/boot/autoconfigure/groovy/template/GroovyTemplateAutoConfiguration$GroovyMarkupConfiguration.class]: Invocation of init method failed; nested exception is java.lang.reflect.InaccessibleObjectException: Unable to make jdk.internal.loader.ClassLoaders$AppClassLoader(jdk.internal.loader.ClassLoaders$PlatformClassLoader,jdk.internal.loader.URLClassPath) accessible: module java.base does not "opens jdk.internal.loader" to unnamed module @60fa3495
2020-11-25 20:53:52,850 TRACE  [main] TypeConfiguration$Scope: Handling #sessionFactoryClosed from [org.hibernate.internal.SessionFactoryImpl@131879fc] for TypeConfiguration
2020-11-25 20:53:52,850 DEBUG  [main] TypeConfiguration$Scope: Un-scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration$Scope@6d27716d] from SessionFactory [org.hibernate.internal.SessionFactoryImpl@131879fc]
2020-11-25 20:53:52,897 ERROR  [main] SpringApplication: Application run failed
org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'groovyMarkupConfigurer' defined in class path resource [org/springframework/boot/autoconfigure/groovy/template/GroovyTemplateAutoConfiguration$GroovyMarkupConfiguration.class]: Invocation of init method failed; nested exception is java.lang.reflect.InaccessibleObjectException: Unable to make jdk.internal.loader.ClassLoaders$AppClassLoader(jdk.internal.loader.ClassLoaders$PlatformClassLoader,jdk.internal.loader.URLClassPath) accessible: module java.base does not "opens jdk.internal.loader" to unnamed module @60fa3495
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1803)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:595)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:517)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:323)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:222)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:321)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:202)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(DefaultListableBeanFactory.java:879)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:878)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:550)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:747)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:397)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:315)
	at org.springframework.boot.test.context.SpringBootContextLoader.loadContext(SpringBootContextLoader.java:125)
	at org.springframework.test.context.cache.DefaultCacheAwareContextLoaderDelegate.loadContextInternal(DefaultCacheAwareContextLoaderDelegate.java:99)
	at org.springframework.test.context.cache.DefaultCacheAwareContextLoaderDelegate.loadContext(DefaultCacheAwareContextLoaderDelegate.java:124)
	at org.springframework.test.context.support.DefaultTestContext.getApplicationContext(DefaultTestContext.java:123)
	at org.springframework.test.context.web.ServletTestExecutionListener.setUpRequestContextIfNecessary(ServletTestExecutionListener.java:190)
	at org.springframework.test.context.web.ServletTestExecutionListener.prepareTestInstance(ServletTestExecutionListener.java:132)
	at org.springframework.test.context.TestContextManager.prepareTestInstance(TestContextManager.java:244)
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner.createTest(SpringJUnit4ClassRunner.java:227)
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner$1.runReflectiveCall(SpringJUnit4ClassRunner.java:289)
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner.methodBlock(SpringJUnit4ClassRunner.java:291)
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner.runChild(SpringJUnit4ClassRunner.java:246)
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner.runChild(SpringJUnit4ClassRunner.java:97)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:290)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:71)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:58)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268)
	at org.junit.internal.runners.statements.RunBefores.evaluate(RunBefores.java:26)
	at org.springframework.test.context.junit4.statements.RunBeforeTestClassCallbacks.evaluate(RunBeforeTestClassCallbacks.java:61)
	at org.junit.internal.runners.statements.RunAfters.evaluate(RunAfters.java:27)
	at org.springframework.test.context.junit4.statements.RunAfterTestClassCallbacks.evaluate(RunAfterTestClassCallbacks.java:70)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:363)
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner.run(SpringJUnit4ClassRunner.java:190)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:137)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:115)
	at org.junit.vintage.engine.execution.RunnerExecutor.execute(RunnerExecutor.java:40)
	at java.base/java.util.stream.ForEachOps$ForEachOp$OfRef.accept(ForEachOps.java:183)
	at java.base/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:195)
	at java.base/java.util.Iterator.forEachRemaining(Iterator.java:133)
	at java.base/java.util.Spliterators$IteratorSpliterator.forEachRemaining(Spliterators.java:1801)
	at java.base/java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:484)
	at java.base/java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:474)
	at java.base/java.util.stream.ForEachOps$ForEachOp.evaluateSequential(ForEachOps.java:150)
	at java.base/java.util.stream.ForEachOps$ForEachOp$OfRef.evaluateSequential(ForEachOps.java:173)
	at java.base/java.util.stream.AbstractPipeline.evaluate(AbstractPipeline.java:234)
	at java.base/java.util.stream.ReferencePipeline.forEach(ReferencePipeline.java:497)
	at org.junit.vintage.engine.VintageTestEngine.executeAllChildren(VintageTestEngine.java:80)
	at org.junit.vintage.engine.VintageTestEngine.execute(VintageTestEngine.java:71)
	at org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:220)
	at org.junit.platform.launcher.core.DefaultLauncher.lambda$execute$6(DefaultLauncher.java:188)
	at org.junit.platform.launcher.core.DefaultLauncher.withInterceptedStreams(DefaultLauncher.java:202)
	at org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:181)
	at org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:128)
	at org.apache.maven.surefire.junitplatform.JUnitPlatformProvider.invokeAllTests(JUnitPlatformProvider.java:150)
	at org.apache.maven.surefire.junitplatform.JUnitPlatformProvider.invoke(JUnitPlatformProvider.java:124)
	at org.apache.maven.surefire.booter.ForkedBooter.invokeProviderInSameClassLoader(ForkedBooter.java:384)
	at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:345)
	at org.apache.maven.surefire.booter.ForkedBooter.execute(ForkedBooter.java:126)
	at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:418)
Caused by: java.lang.reflect.InaccessibleObjectException: Unable to make jdk.internal.loader.ClassLoaders$AppClassLoader(jdk.internal.loader.ClassLoaders$PlatformClassLoader,jdk.internal.loader.URLClassPath) accessible: module java.base does not "opens jdk.internal.loader" to unnamed module @60fa3495
	at java.base/java.lang.reflect.AccessibleObject.checkCanSetAccessible(AccessibleObject.java:344)
	at java.base/java.lang.reflect.AccessibleObject.checkCanSetAccessible(AccessibleObject.java:284)
	at java.base/java.lang.reflect.Constructor.checkCanSetAccessible(Constructor.java:189)
	at java.base/java.lang.reflect.Constructor.setAccessible(Constructor.java:182)
	at org.codehaus.groovy.reflection.CachedConstructor$1.run(CachedConstructor.java:44)
	at java.base/java.security.AccessController.doPrivileged(AccessController.java:312)
	at org.codehaus.groovy.reflection.CachedConstructor.<init>(CachedConstructor.java:42)
	at org.codehaus.groovy.reflection.CachedClass$2.initValue(CachedClass.java:79)
	at org.codehaus.groovy.reflection.CachedClass$2.initValue(CachedClass.java:69)
	at org.codehaus.groovy.util.LazyReference.getLocked(LazyReference.java:49)
	at org.codehaus.groovy.util.LazyReference.get(LazyReference.java:36)
	at org.codehaus.groovy.reflection.CachedClass.getConstructors(CachedClass.java:268)
	at groovy.lang.MetaClassImpl.<init>(MetaClassImpl.java:218)
	at groovy.lang.MetaClassImpl.<init>(MetaClassImpl.java:228)
	at groovy.lang.MetaClassRegistry$MetaClassCreationHandle.createNormalMetaClass(MetaClassRegistry.java:171)
	at groovy.lang.MetaClassRegistry$MetaClassCreationHandle.createWithCustomLookup(MetaClassRegistry.java:161)
	at groovy.lang.MetaClassRegistry$MetaClassCreationHandle.create(MetaClassRegistry.java:144)
	at org.codehaus.groovy.reflection.ClassInfo.getMetaClassUnderLock(ClassInfo.java:253)
	at org.codehaus.groovy.reflection.ClassInfo.getMetaClass(ClassInfo.java:285)
	at org.codehaus.groovy.reflection.ClassInfo.getMetaClass(ClassInfo.java:295)
	at org.codehaus.groovy.runtime.metaclass.MetaClassRegistryImpl.getMetaClass(MetaClassRegistryImpl.java:261)
	at org.codehaus.groovy.runtime.InvokerHelper.getMetaClass(InvokerHelper.java:873)
	at org.codehaus.groovy.runtime.InvokerHelper.invokePojoMethod(InvokerHelper.java:906)
	at org.codehaus.groovy.runtime.InvokerHelper.invokeMethod(InvokerHelper.java:898)
	at org.codehaus.groovy.runtime.typehandling.DefaultTypeTransformation.castToBoolean(DefaultTypeTransformation.java:185)
	at org.codehaus.groovy.runtime.typehandling.DefaultTypeTransformation.booleanUnbox(DefaultTypeTransformation.java:74)
	at org.codehaus.groovy.control.customizers.ASTTransformationCustomizer.findASTTranformationClass(ASTTransformationCustomizer.groovy:209)
	at jdk.internal.reflect.GeneratedMethodAccessor358.invoke(Unknown Source)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:567)
	at org.codehaus.groovy.reflection.CachedMethod.invoke(CachedMethod.java:93)
	at org.codehaus.groovy.runtime.callsite.StaticMetaMethodSite$StaticMetaMethodSiteNoUnwrapNoCoerce.invoke(StaticMetaMethodSite.java:151)
	at org.codehaus.groovy.runtime.callsite.StaticMetaMethodSite.callStatic(StaticMetaMethodSite.java:102)
	at org.codehaus.groovy.runtime.callsite.AbstractCallSite.callStatic(AbstractCallSite.java:214)
	at org.codehaus.groovy.control.customizers.ASTTransformationCustomizer.findPhase(ASTTransformationCustomizer.groovy:226)
	at jdk.internal.reflect.GeneratedMethodAccessor357.invoke(Unknown Source)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:567)
	at org.codehaus.groovy.reflection.CachedMethod.invoke(CachedMethod.java:93)
	at org.codehaus.groovy.runtime.callsite.StaticMetaMethodSite$StaticMetaMethodSiteNoUnwrapNoCoerce.invoke(StaticMetaMethodSite.java:151)
	at org.codehaus.groovy.runtime.callsite.StaticMetaMethodSite.callStatic(StaticMetaMethodSite.java:102)
	at org.codehaus.groovy.runtime.callsite.AbstractCallSite.callStatic(AbstractCallSite.java:214)
	at org.codehaus.groovy.control.customizers.ASTTransformationCustomizer.<init>(ASTTransformationCustomizer.groovy:180)
	at org.codehaus.groovy.control.customizers.ASTTransformationCustomizer.<init>(ASTTransformationCustomizer.groovy:188)
	at groovy.text.markup.MarkupTemplateEngine.<init>(MarkupTemplateEngine.java:94)
	at org.springframework.web.servlet.view.groovy.GroovyMarkupConfigurer.createTemplateEngine(GroovyMarkupConfigurer.java:160)
	at org.springframework.web.servlet.view.groovy.GroovyMarkupConfigurer.afterPropertiesSet(GroovyMarkupConfigurer.java:153)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1862)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1799)
	... 62 common frames omitted
2020-11-25 20:53:52,899 ERROR  [main] TestContextManager: Caught exception while allowing TestExecutionListener [org.springframework.test.context.web.ServletTestExecutionListener@701dbfbd] to prepare test instance [com.sf.service.ProblemServiceTest@6ee59636]
java.lang.IllegalStateException: Failed to load ApplicationContext
	at org.springframework.test.context.cache.DefaultCacheAwareContextLoaderDelegate.loadContext(DefaultCacheAwareContextLoaderDelegate.java:132)
	at org.springframework.test.context.support.DefaultTestContext.getApplicationContext(DefaultTestContext.java:123)
	at org.springframework.test.context.web.ServletTestExecutionListener.setUpRequestContextIfNecessary(ServletTestExecutionListener.java:190)
	at org.springframework.test.context.web.ServletTestExecutionListener.prepareTestInstance(ServletTestExecutionListener.java:132)
	at org.springframework.test.context.TestContextManager.prepareTestInstance(TestContextManager.java:244)
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner.createTest(SpringJUnit4ClassRunner.java:227)
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner$1.runReflectiveCall(SpringJUnit4ClassRunner.java:289)
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner.methodBlock(SpringJUnit4ClassRunner.java:291)
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner.runChild(SpringJUnit4ClassRunner.java:246)
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner.runChild(SpringJUnit4ClassRunner.java:97)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:290)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:71)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:58)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268)
	at org.junit.internal.runners.statements.RunBefores.evaluate(RunBefores.java:26)
	at org.springframework.test.context.junit4.statements.RunBeforeTestClassCallbacks.evaluate(RunBeforeTestClassCallbacks.java:61)
	at org.junit.internal.runners.statements.RunAfters.evaluate(RunAfters.java:27)
	at org.springframework.test.context.junit4.statements.RunAfterTestClassCallbacks.evaluate(RunAfterTestClassCallbacks.java:70)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:363)
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner.run(SpringJUnit4ClassRunner.java:190)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:137)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:115)
	at org.junit.vintage.engine.execution.RunnerExecutor.execute(RunnerExecutor.java:40)
	at java.base/java.util.stream.ForEachOps$ForEachOp$OfRef.accept(ForEachOps.java:183)
	at java.base/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:195)
	at java.base/java.util.Iterator.forEachRemaining(Iterator.java:133)
	at java.base/java.util.Spliterators$IteratorSpliterator.forEachRemaining(Spliterators.java:1801)
	at java.base/java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:484)
	at java.base/java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:474)
	at java.base/java.util.stream.ForEachOps$ForEachOp.evaluateSequential(ForEachOps.java:150)
	at java.base/java.util.stream.ForEachOps$ForEachOp$OfRef.evaluateSequential(ForEachOps.java:173)
	at java.base/java.util.stream.AbstractPipeline.evaluate(AbstractPipeline.java:234)
	at java.base/java.util.stream.ReferencePipeline.forEach(ReferencePipeline.java:497)
	at org.junit.vintage.engine.VintageTestEngine.executeAllChildren(VintageTestEngine.java:80)
	at org.junit.vintage.engine.VintageTestEngine.execute(VintageTestEngine.java:71)
	at org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:220)
	at org.junit.platform.launcher.core.DefaultLauncher.lambda$execute$6(DefaultLauncher.java:188)
	at org.junit.platform.launcher.core.DefaultLauncher.withInterceptedStreams(DefaultLauncher.java:202)
	at org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:181)
	at org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:128)
	at org.apache.maven.surefire.junitplatform.JUnitPlatformProvider.invokeAllTests(JUnitPlatformProvider.java:150)
	at org.apache.maven.surefire.junitplatform.JUnitPlatformProvider.invoke(JUnitPlatformProvider.java:124)
	at org.apache.maven.surefire.booter.ForkedBooter.invokeProviderInSameClassLoader(ForkedBooter.java:384)
	at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:345)
	at org.apache.maven.surefire.booter.ForkedBooter.execute(ForkedBooter.java:126)
	at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:418)
Caused by: org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'groovyMarkupConfigurer' defined in class path resource [org/springframework/boot/autoconfigure/groovy/template/GroovyTemplateAutoConfiguration$GroovyMarkupConfiguration.class]: Invocation of init method failed; nested exception is java.lang.reflect.InaccessibleObjectException: Unable to make jdk.internal.loader.ClassLoaders$AppClassLoader(jdk.internal.loader.ClassLoaders$PlatformClassLoader,jdk.internal.loader.URLClassPath) accessible: module java.base does not "opens jdk.internal.loader" to unnamed module @60fa3495
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1803)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:595)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:517)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:323)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:222)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:321)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:202)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(DefaultListableBeanFactory.java:879)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:878)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:550)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:747)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:397)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:315)
	at org.springframework.boot.test.context.SpringBootContextLoader.loadContext(SpringBootContextLoader.java:125)
	at org.springframework.test.context.cache.DefaultCacheAwareContextLoaderDelegate.loadContextInternal(DefaultCacheAwareContextLoaderDelegate.java:99)
	at org.springframework.test.context.cache.DefaultCacheAwareContextLoaderDelegate.loadContext(DefaultCacheAwareContextLoaderDelegate.java:124)
	... 47 common frames omitted
Caused by: java.lang.reflect.InaccessibleObjectException: Unable to make jdk.internal.loader.ClassLoaders$AppClassLoader(jdk.internal.loader.ClassLoaders$PlatformClassLoader,jdk.internal.loader.URLClassPath) accessible: module java.base does not "opens jdk.internal.loader" to unnamed module @60fa3495
	at java.base/java.lang.reflect.AccessibleObject.checkCanSetAccessible(AccessibleObject.java:344)
	at java.base/java.lang.reflect.AccessibleObject.checkCanSetAccessible(AccessibleObject.java:284)
	at java.base/java.lang.reflect.Constructor.checkCanSetAccessible(Constructor.java:189)
	at java.base/java.lang.reflect.Constructor.setAccessible(Constructor.java:182)
	at org.codehaus.groovy.reflection.CachedConstructor$1.run(CachedConstructor.java:44)
	at java.base/java.security.AccessController.doPrivileged(AccessController.java:312)
	at org.codehaus.groovy.reflection.CachedConstructor.<init>(CachedConstructor.java:42)
	at org.codehaus.groovy.reflection.CachedClass$2.initValue(CachedClass.java:79)
	at org.codehaus.groovy.reflection.CachedClass$2.initValue(CachedClass.java:69)
	at org.codehaus.groovy.util.LazyReference.getLocked(LazyReference.java:49)
	at org.codehaus.groovy.util.LazyReference.get(LazyReference.java:36)
	at org.codehaus.groovy.reflection.CachedClass.getConstructors(CachedClass.java:268)
	at groovy.lang.MetaClassImpl.<init>(MetaClassImpl.java:218)
	at groovy.lang.MetaClassImpl.<init>(MetaClassImpl.java:228)
	at groovy.lang.MetaClassRegistry$MetaClassCreationHandle.createNormalMetaClass(MetaClassRegistry.java:171)
	at groovy.lang.MetaClassRegistry$MetaClassCreationHandle.createWithCustomLookup(MetaClassRegistry.java:161)
	at groovy.lang.MetaClassRegistry$MetaClassCreationHandle.create(MetaClassRegistry.java:144)
	at org.codehaus.groovy.reflection.ClassInfo.getMetaClassUnderLock(ClassInfo.java:253)
	at org.codehaus.groovy.reflection.ClassInfo.getMetaClass(ClassInfo.java:285)
	at org.codehaus.groovy.reflection.ClassInfo.getMetaClass(ClassInfo.java:295)
	at org.codehaus.groovy.runtime.metaclass.MetaClassRegistryImpl.getMetaClass(MetaClassRegistryImpl.java:261)
	at org.codehaus.groovy.runtime.InvokerHelper.getMetaClass(InvokerHelper.java:873)
	at org.codehaus.groovy.runtime.InvokerHelper.invokePojoMethod(InvokerHelper.java:906)
	at org.codehaus.groovy.runtime.InvokerHelper.invokeMethod(InvokerHelper.java:898)
	at org.codehaus.groovy.runtime.typehandling.DefaultTypeTransformation.castToBoolean(DefaultTypeTransformation.java:185)
	at org.codehaus.groovy.runtime.typehandling.DefaultTypeTransformation.booleanUnbox(DefaultTypeTransformation.java:74)
	at org.codehaus.groovy.control.customizers.ASTTransformationCustomizer.findASTTranformationClass(ASTTransformationCustomizer.groovy:209)
	at jdk.internal.reflect.GeneratedMethodAccessor358.invoke(Unknown Source)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:567)
	at org.codehaus.groovy.reflection.CachedMethod.invoke(CachedMethod.java:93)
	at org.codehaus.groovy.runtime.callsite.StaticMetaMethodSite$StaticMetaMethodSiteNoUnwrapNoCoerce.invoke(StaticMetaMethodSite.java:151)
	at org.codehaus.groovy.runtime.callsite.StaticMetaMethodSite.callStatic(StaticMetaMethodSite.java:102)
	at org.codehaus.groovy.runtime.callsite.AbstractCallSite.callStatic(AbstractCallSite.java:214)
	at org.codehaus.groovy.control.customizers.ASTTransformationCustomizer.findPhase(ASTTransformationCustomizer.groovy:226)
	at jdk.internal.reflect.GeneratedMethodAccessor357.invoke(Unknown Source)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:567)
	at org.codehaus.groovy.reflection.CachedMethod.invoke(CachedMethod.java:93)
	at org.codehaus.groovy.runtime.callsite.StaticMetaMethodSite$StaticMetaMethodSiteNoUnwrapNoCoerce.invoke(StaticMetaMethodSite.java:151)
	at org.codehaus.groovy.runtime.callsite.StaticMetaMethodSite.callStatic(StaticMetaMethodSite.java:102)
	at org.codehaus.groovy.runtime.callsite.AbstractCallSite.callStatic(AbstractCallSite.java:214)
	at org.codehaus.groovy.control.customizers.ASTTransformationCustomizer.<init>(ASTTransformationCustomizer.groovy:180)
	at org.codehaus.groovy.control.customizers.ASTTransformationCustomizer.<init>(ASTTransformationCustomizer.groovy:188)
	at groovy.text.markup.MarkupTemplateEngine.<init>(MarkupTemplateEngine.java:94)
	at org.springframework.web.servlet.view.groovy.GroovyMarkupConfigurer.createTemplateEngine(GroovyMarkupConfigurer.java:160)
	at org.springframework.web.servlet.view.groovy.GroovyMarkupConfigurer.afterPropertiesSet(GroovyMarkupConfigurer.java:153)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1862)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1799)
	... 62 common frames omitted
2020-11-25 20:53:53,283 DEBUG  [main] BasicTypeRegistry: Adding type registration boolean -> org.hibernate.type.BooleanType@ff2266c
2020-11-25 20:53:53,286 DEBUG  [main] BasicTypeRegistry: Adding type registration boolean -> org.hibernate.type.BooleanType@ff2266c
2020-11-25 20:53:53,286 DEBUG  [main] BasicTypeRegistry: Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@ff2266c
2020-11-25 20:53:53,286 DEBUG  [main] BasicTypeRegistry: Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@1d585fb
2020-11-25 20:53:53,286 DEBUG  [main] BasicTypeRegistry: Adding type registration true_false -> org.hibernate.type.TrueFalseType@7c8f047a
2020-11-25 20:53:53,286 DEBUG  [main] BasicTypeRegistry: Adding type registration yes_no -> org.hibernate.type.YesNoType@d949bc4
2020-11-25 20:53:53,286 DEBUG  [main] BasicTypeRegistry: Adding type registration byte -> org.hibernate.type.ByteType@29c25bbc
2020-11-25 20:53:53,286 DEBUG  [main] BasicTypeRegistry: Adding type registration byte -> org.hibernate.type.ByteType@29c25bbc
2020-11-25 20:53:53,286 DEBUG  [main] BasicTypeRegistry: Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@29c25bbc
2020-11-25 20:53:53,286 DEBUG  [main] BasicTypeRegistry: Adding type registration character -> org.hibernate.type.CharacterType@403f7aa2
2020-11-25 20:53:53,286 DEBUG  [main] BasicTypeRegistry: Adding type registration char -> org.hibernate.type.CharacterType@403f7aa2
2020-11-25 20:53:53,286 DEBUG  [main] BasicTypeRegistry: Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@403f7aa2
2020-11-25 20:53:53,287 DEBUG  [main] BasicTypeRegistry: Adding type registration short -> org.hibernate.type.ShortType@38cb1606
2020-11-25 20:53:53,287 DEBUG  [main] BasicTypeRegistry: Adding type registration short -> org.hibernate.type.ShortType@38cb1606
2020-11-25 20:53:53,287 DEBUG  [main] BasicTypeRegistry: Adding type registration java.lang.Short -> org.hibernate.type.ShortType@38cb1606
2020-11-25 20:53:53,287 DEBUG  [main] BasicTypeRegistry: Adding type registration integer -> org.hibernate.type.IntegerType@5d3b6585
2020-11-25 20:53:53,287 DEBUG  [main] BasicTypeRegistry: Adding type registration int -> org.hibernate.type.IntegerType@5d3b6585
2020-11-25 20:53:53,287 DEBUG  [main] BasicTypeRegistry: Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@5d3b6585
2020-11-25 20:53:53,287 DEBUG  [main] BasicTypeRegistry: Adding type registration long -> org.hibernate.type.LongType@4fea5ee0
2020-11-25 20:53:53,287 DEBUG  [main] BasicTypeRegistry: Adding type registration long -> org.hibernate.type.LongType@4fea5ee0
2020-11-25 20:53:53,288 DEBUG  [main] BasicTypeRegistry: Adding type registration java.lang.Long -> org.hibernate.type.LongType@4fea5ee0
2020-11-25 20:53:53,288 DEBUG  [main] BasicTypeRegistry: Adding type registration float -> org.hibernate.type.FloatType@7b3085a3
2020-11-25 20:53:53,288 DEBUG  [main] BasicTypeRegistry: Adding type registration float -> org.hibernate.type.FloatType@7b3085a3
2020-11-25 20:53:53,288 DEBUG  [main] BasicTypeRegistry: Adding type registration java.lang.Float -> org.hibernate.type.FloatType@7b3085a3
2020-11-25 20:53:53,288 DEBUG  [main] BasicTypeRegistry: Adding type registration double -> org.hibernate.type.DoubleType@5a7a6d34
2020-11-25 20:53:53,288 DEBUG  [main] BasicTypeRegistry: Adding type registration double -> org.hibernate.type.DoubleType@5a7a6d34
2020-11-25 20:53:53,288 DEBUG  [main] BasicTypeRegistry: Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@5a7a6d34
2020-11-25 20:53:53,289 DEBUG  [main] BasicTypeRegistry: Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@5ae66c98
2020-11-25 20:53:53,289 DEBUG  [main] BasicTypeRegistry: Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@5ae66c98
2020-11-25 20:53:53,289 DEBUG  [main] BasicTypeRegistry: Adding type registration big_integer -> org.hibernate.type.BigIntegerType@223cbf0d
2020-11-25 20:53:53,289 DEBUG  [main] BasicTypeRegistry: Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@223cbf0d
2020-11-25 20:53:53,289 DEBUG  [main] BasicTypeRegistry: Adding type registration string -> org.hibernate.type.StringType@4f581211
2020-11-25 20:53:53,289 DEBUG  [main] BasicTypeRegistry: Adding type registration java.lang.String -> org.hibernate.type.StringType@4f581211
2020-11-25 20:53:53,289 DEBUG  [main] BasicTypeRegistry: Adding type registration nstring -> org.hibernate.type.StringNVarcharType@6697f3d
2020-11-25 20:53:53,289 DEBUG  [main] BasicTypeRegistry: Adding type registration ncharacter -> org.hibernate.type.CharacterNCharType@f1d1463
2020-11-25 20:53:53,289 DEBUG  [main] BasicTypeRegistry: Adding type registration url -> org.hibernate.type.UrlType@44ddb518
2020-11-25 20:53:53,289 DEBUG  [main] BasicTypeRegistry: Adding type registration java.net.URL -> org.hibernate.type.UrlType@44ddb518
2020-11-25 20:53:53,290 DEBUG  [main] BasicTypeRegistry: Adding type registration Duration -> org.hibernate.type.DurationType@49e0b123
2020-11-25 20:53:53,290 DEBUG  [main] BasicTypeRegistry: Adding type registration java.time.Duration -> org.hibernate.type.DurationType@49e0b123
2020-11-25 20:53:53,290 DEBUG  [main] BasicTypeRegistry: Adding type registration Instant -> org.hibernate.type.InstantType@40a28bda
2020-11-25 20:53:53,290 DEBUG  [main] BasicTypeRegistry: Adding type registration java.time.Instant -> org.hibernate.type.InstantType@40a28bda
2020-11-25 20:53:53,290 DEBUG  [main] BasicTypeRegistry: Adding type registration LocalDateTime -> org.hibernate.type.LocalDateTimeType@33430fc
2020-11-25 20:53:53,290 DEBUG  [main] BasicTypeRegistry: Adding type registration java.time.LocalDateTime -> org.hibernate.type.LocalDateTimeType@33430fc
2020-11-25 20:53:53,291 DEBUG  [main] BasicTypeRegistry: Adding type registration LocalDate -> org.hibernate.type.LocalDateType@d7055be
2020-11-25 20:53:53,291 DEBUG  [main] BasicTypeRegistry: Adding type registration java.time.LocalDate -> org.hibernate.type.LocalDateType@d7055be
2020-11-25 20:53:53,291 DEBUG  [main] BasicTypeRegistry: Adding type registration LocalTime -> org.hibernate.type.LocalTimeType@3c7d8a4
2020-11-25 20:53:53,291 DEBUG  [main] BasicTypeRegistry: Adding type registration java.time.LocalTime -> org.hibernate.type.LocalTimeType@3c7d8a4
2020-11-25 20:53:53,291 DEBUG  [main] BasicTypeRegistry: Adding type registration OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@7a117dc2
2020-11-25 20:53:53,291 DEBUG  [main] BasicTypeRegistry: Adding type registration java.time.OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@7a117dc2
2020-11-25 20:53:53,291 DEBUG  [main] BasicTypeRegistry: Adding type registration OffsetTime -> org.hibernate.type.OffsetTimeType@3c64339f
2020-11-25 20:53:53,291 DEBUG  [main] BasicTypeRegistry: Adding type registration java.time.OffsetTime -> org.hibernate.type.OffsetTimeType@3c64339f
2020-11-25 20:53:53,292 DEBUG  [main] BasicTypeRegistry: Adding type registration ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@30c8c6ab
2020-11-25 20:53:53,292 DEBUG  [main] BasicTypeRegistry: Adding type registration java.time.ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@30c8c6ab
2020-11-25 20:53:53,292 DEBUG  [main] BasicTypeRegistry: Adding type registration date -> org.hibernate.type.DateType@61c5fd78
2020-11-25 20:53:53,292 DEBUG  [main] BasicTypeRegistry: Adding type registration java.sql.Date -> org.hibernate.type.DateType@61c5fd78
2020-11-25 20:53:53,292 DEBUG  [main] BasicTypeRegistry: Adding type registration time -> org.hibernate.type.TimeType@77856cc5
2020-11-25 20:53:53,292 DEBUG  [main] BasicTypeRegistry: Adding type registration java.sql.Time -> org.hibernate.type.TimeType@77856cc5
2020-11-25 20:53:53,293 DEBUG  [main] BasicTypeRegistry: Adding type registration timestamp -> org.hibernate.type.TimestampType@12166229
2020-11-25 20:53:53,293 DEBUG  [main] BasicTypeRegistry: Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@12166229
2020-11-25 20:53:53,293 DEBUG  [main] BasicTypeRegistry: Adding type registration java.util.Date -> org.hibernate.type.TimestampType@12166229
2020-11-25 20:53:53,293 DEBUG  [main] BasicTypeRegistry: Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@2b4829aa
2020-11-25 20:53:53,293 DEBUG  [main] BasicTypeRegistry: Adding type registration calendar -> org.hibernate.type.CalendarType@3ec082a1
2020-11-25 20:53:53,293 DEBUG  [main] BasicTypeRegistry: Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@3ec082a1
2020-11-25 20:53:53,294 DEBUG  [main] BasicTypeRegistry: Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@3ec082a1
2020-11-25 20:53:53,294 DEBUG  [main] BasicTypeRegistry: Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@429f0ca8
2020-11-25 20:53:53,294 DEBUG  [main] BasicTypeRegistry: Adding type registration locale -> org.hibernate.type.LocaleType@11c3ce6a
2020-11-25 20:53:53,294 DEBUG  [main] BasicTypeRegistry: Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@11c3ce6a
2020-11-25 20:53:53,294 DEBUG  [main] BasicTypeRegistry: Adding type registration currency -> org.hibernate.type.CurrencyType@28519bfb
2020-11-25 20:53:53,294 DEBUG  [main] BasicTypeRegistry: Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@28519bfb
2020-11-25 20:53:53,294 DEBUG  [main] BasicTypeRegistry: Adding type registration timezone -> org.hibernate.type.TimeZoneType@7aa15a80
2020-11-25 20:53:53,295 DEBUG  [main] BasicTypeRegistry: Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@7aa15a80
2020-11-25 20:53:53,295 DEBUG  [main] BasicTypeRegistry: Adding type registration class -> org.hibernate.type.ClassType@48d5ca17
2020-11-25 20:53:53,295 DEBUG  [main] BasicTypeRegistry: Adding type registration java.lang.Class -> org.hibernate.type.ClassType@48d5ca17
2020-11-25 20:53:53,295 DEBUG  [main] BasicTypeRegistry: Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@79b8ecb
2020-11-25 20:53:53,295 DEBUG  [main] BasicTypeRegistry: Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@79b8ecb
2020-11-25 20:53:53,295 DEBUG  [main] BasicTypeRegistry: Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@c0013b8
2020-11-25 20:53:53,295 DEBUG  [main] BasicTypeRegistry: Adding type registration binary -> org.hibernate.type.BinaryType@2a42019a
2020-11-25 20:53:53,296 DEBUG  [main] BasicTypeRegistry: Adding type registration byte[] -> org.hibernate.type.BinaryType@2a42019a
2020-11-25 20:53:53,296 DEBUG  [main] BasicTypeRegistry: Adding type registration [B -> org.hibernate.type.BinaryType@2a42019a
2020-11-25 20:53:53,296 DEBUG  [main] BasicTypeRegistry: Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@495da9a7
2020-11-25 20:53:53,296 DEBUG  [main] BasicTypeRegistry: Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@495da9a7
2020-11-25 20:53:53,296 DEBUG  [main] BasicTypeRegistry: Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@495da9a7
2020-11-25 20:53:53,296 DEBUG  [main] BasicTypeRegistry: Adding type registration row_version -> org.hibernate.type.RowVersionType@35becbd4
2020-11-25 20:53:53,296 DEBUG  [main] BasicTypeRegistry: Adding type registration image -> org.hibernate.type.ImageType@30fa8a6b
2020-11-25 20:53:53,296 DEBUG  [main] BasicTypeRegistry: Adding type registration characters -> org.hibernate.type.CharArrayType@4c8d45cf
2020-11-25 20:53:53,296 DEBUG  [main] BasicTypeRegistry: Adding type registration char[] -> org.hibernate.type.CharArrayType@4c8d45cf
2020-11-25 20:53:53,296 DEBUG  [main] BasicTypeRegistry: Adding type registration [C -> org.hibernate.type.CharArrayType@4c8d45cf
2020-11-25 20:53:53,296 DEBUG  [main] BasicTypeRegistry: Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@5b490d5e
2020-11-25 20:53:53,296 DEBUG  [main] BasicTypeRegistry: Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@5b490d5e
2020-11-25 20:53:53,297 DEBUG  [main] BasicTypeRegistry: Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@5b490d5e
2020-11-25 20:53:53,297 DEBUG  [main] BasicTypeRegistry: Adding type registration text -> org.hibernate.type.TextType@18b04526
2020-11-25 20:53:53,297 DEBUG  [main] BasicTypeRegistry: Adding type registration ntext -> org.hibernate.type.NTextType@246df37b
2020-11-25 20:53:53,297 DEBUG  [main] BasicTypeRegistry: Adding type registration blob -> org.hibernate.type.BlobType@56881196
2020-11-25 20:53:53,297 DEBUG  [main] BasicTypeRegistry: Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@56881196
2020-11-25 20:53:53,297 DEBUG  [main] BasicTypeRegistry: Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@131c0b6f
2020-11-25 20:53:53,298 DEBUG  [main] BasicTypeRegistry: Adding type registration clob -> org.hibernate.type.ClobType@7fc1fd31
2020-11-25 20:53:53,298 DEBUG  [main] BasicTypeRegistry: Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@7fc1fd31
2020-11-25 20:53:53,298 DEBUG  [main] BasicTypeRegistry: Adding type registration nclob -> org.hibernate.type.NClobType@70777a65
2020-11-25 20:53:53,298 DEBUG  [main] BasicTypeRegistry: Adding type registration java.sql.NClob -> org.hibernate.type.NClobType@70777a65
2020-11-25 20:53:53,298 DEBUG  [main] BasicTypeRegistry: Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@2f6f4ac4
2020-11-25 20:53:53,298 DEBUG  [main] BasicTypeRegistry: Adding type registration materialized_nclob -> org.hibernate.type.MaterializedNClobType@7d685f4e
2020-11-25 20:53:53,298 DEBUG  [main] BasicTypeRegistry: Adding type registration serializable -> org.hibernate.type.SerializableType@319aa9ee
2020-11-25 20:53:53,298 DEBUG  [main] BasicTypeRegistry: Adding type registration object -> org.hibernate.type.ObjectType@54234569
2020-11-25 20:53:53,298 DEBUG  [main] BasicTypeRegistry: Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@54234569
2020-11-25 20:53:53,298 DEBUG  [main] BasicTypeRegistry: Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@6f750dea
2020-11-25 20:53:53,298 DEBUG  [main] BasicTypeRegistry: Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@5db16956
2020-11-25 20:53:53,299 DEBUG  [main] BasicTypeRegistry: Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@7976560c
2020-11-25 20:53:53,299 DEBUG  [main] BasicTypeRegistry: Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@5a2dbab3
2020-11-25 20:53:53,299 DEBUG  [main] BasicTypeRegistry: Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@1df0f641
2020-11-25 20:53:53,299 DEBUG  [main] BasicTypeRegistry: Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@4bddc770
2020-11-25 20:53:53,299 DEBUG  [main] BasicTypeRegistry: Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@d03e31
2020-11-25 20:53:53,299 DEBUG  [main] BasicTypeRegistry: Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@371ff4ba
2020-11-25 20:53:53,308 DEBUG  [main] TypeConfiguration$Scope: Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@33638e3f] to MetadataBuildingContext [org.hibernate.boot.internal.MetadataBuildingContextRootImpl@14d2b5bf]
2020-11-25 20:53:53,318 DEBUG  [main] EnumType: Using NAMED-based conversion for Enum com.sf.back.entities.Kind
2020-11-25 20:53:53,320 DEBUG  [main] EnumType: Using NAMED-based conversion for Enum com.sf.back.entities.Kind
2020-11-25 20:53:53,331 DEBUG  [main] TypeConfiguration$Scope: Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@33638e3f] to SessionFactoryImpl [org.hibernate.internal.SessionFactoryImpl@1475268a]
2020-11-25 20:53:53,332 DEBUG  [main] EnumType: Using NAMED-based conversion for Enum com.sf.back.entities.Kind
2020-11-25 20:53:53,332 DEBUG  [main] EnumType: Using NAMED-based conversion for Enum com.sf.back.entities.Kind
2020-11-25 20:53:53,343 DEBUG  [main] EnumType: Using NAMED-based conversion for Enum com.sf.back.entities.Kind
2020-11-25 20:53:53,344 DEBUG  [main] EnumType: Using NAMED-based conversion for Enum com.sf.back.entities.Kind
2020-11-25 20:53:53,355 DEBUG  [main] EnumType: Using NAMED-based conversion for Enum com.sf.back.entities.Kind
2020-11-25 20:53:53,356 DEBUG  [main] EnumType: Using NAMED-based conversion for Enum com.sf.back.entities.Kind
2020-11-25 20:53:53,360 DEBUG  [main] EnumType: Using NAMED-based conversion for Enum com.sf.back.entities.Kind
2020-11-25 20:53:53,366 TRACE  [main] TypeConfiguration$Scope: Handling #sessionFactoryCreated from [org.hibernate.internal.SessionFactoryImpl@1475268a] for TypeConfiguration
2020-11-25 20:53:53,423 WARN   [main] JpaBaseConfiguration$JpaWebConfiguration: spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2020-11-25 20:53:53,492 WARN   [main] GenericWebApplicationContext: Exception encountered during context initialization - cancelling refresh attempt: org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'groovyMarkupConfigurer' defined in class path resource [org/springframework/boot/autoconfigure/groovy/template/GroovyTemplateAutoConfiguration$GroovyMarkupConfiguration.class]: Invocation of init method failed; nested exception is java.lang.reflect.InaccessibleObjectException: Unable to make jdk.internal.loader.ClassLoaders$AppClassLoader(jdk.internal.loader.ClassLoaders$PlatformClassLoader,jdk.internal.loader.URLClassPath) accessible: module java.base does not "opens jdk.internal.loader" to unnamed module @60fa3495
2020-11-25 20:53:53,494 TRACE  [main] TypeConfiguration$Scope: Handling #sessionFactoryClosed from [org.hibernate.internal.SessionFactoryImpl@1475268a] for TypeConfiguration
2020-11-25 20:53:53,495 DEBUG  [main] TypeConfiguration$Scope: Un-scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration$Scope@3bbcc15] from SessionFactory [org.hibernate.internal.SessionFactoryImpl@1475268a]
2020-11-25 20:53:53,499 ERROR  [main] SpringApplication: Application run failed
org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'groovyMarkupConfigurer' defined in class path resource [org/springframework/boot/autoconfigure/groovy/template/GroovyTemplateAutoConfiguration$GroovyMarkupConfiguration.class]: Invocation of init method failed; nested exception is java.lang.reflect.InaccessibleObjectException: Unable to make jdk.internal.loader.ClassLoaders$AppClassLoader(jdk.internal.loader.ClassLoaders$PlatformClassLoader,jdk.internal.loader.URLClassPath) accessible: module java.base does not "opens jdk.internal.loader" to unnamed module @60fa3495
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1803)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:595)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:517)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:323)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:222)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:321)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:202)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(DefaultListableBeanFactory.java:879)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:878)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:550)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:747)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:397)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:315)
	at org.springframework.boot.test.context.SpringBootContextLoader.loadContext(SpringBootContextLoader.java:125)
	at org.springframework.test.context.cache.DefaultCacheAwareContextLoaderDelegate.loadContextInternal(DefaultCacheAwareContextLoaderDelegate.java:99)
	at org.springframework.test.context.cache.DefaultCacheAwareContextLoaderDelegate.loadContext(DefaultCacheAwareContextLoaderDelegate.java:124)
	at org.springframework.test.context.support.DefaultTestContext.getApplicationContext(DefaultTestContext.java:123)
	at org.springframework.test.context.web.ServletTestExecutionListener.setUpRequestContextIfNecessary(ServletTestExecutionListener.java:190)
	at org.springframework.test.context.web.ServletTestExecutionListener.prepareTestInstance(ServletTestExecutionListener.java:132)
	at org.springframework.test.context.TestContextManager.prepareTestInstance(TestContextManager.java:244)
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner.createTest(SpringJUnit4ClassRunner.java:227)
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner$1.runReflectiveCall(SpringJUnit4ClassRunner.java:289)
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner.methodBlock(SpringJUnit4ClassRunner.java:291)
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner.runChild(SpringJUnit4ClassRunner.java:246)
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner.runChild(SpringJUnit4ClassRunner.java:97)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:290)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:71)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:58)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268)
	at org.springframework.test.context.junit4.statements.RunBeforeTestClassCallbacks.evaluate(RunBeforeTestClassCallbacks.java:61)
	at org.springframework.test.context.junit4.statements.RunAfterTestClassCallbacks.evaluate(RunAfterTestClassCallbacks.java:70)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:363)
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner.run(SpringJUnit4ClassRunner.java:190)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:137)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:115)
	at org.junit.vintage.engine.execution.RunnerExecutor.execute(RunnerExecutor.java:40)
	at java.base/java.util.stream.ForEachOps$ForEachOp$OfRef.accept(ForEachOps.java:183)
	at java.base/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:195)
	at java.base/java.util.Iterator.forEachRemaining(Iterator.java:133)
	at java.base/java.util.Spliterators$IteratorSpliterator.forEachRemaining(Spliterators.java:1801)
	at java.base/java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:484)
	at java.base/java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:474)
	at java.base/java.util.stream.ForEachOps$ForEachOp.evaluateSequential(ForEachOps.java:150)
	at java.base/java.util.stream.ForEachOps$ForEachOp$OfRef.evaluateSequential(ForEachOps.java:173)
	at java.base/java.util.stream.AbstractPipeline.evaluate(AbstractPipeline.java:234)
	at java.base/java.util.stream.ReferencePipeline.forEach(ReferencePipeline.java:497)
	at org.junit.vintage.engine.VintageTestEngine.executeAllChildren(VintageTestEngine.java:80)
	at org.junit.vintage.engine.VintageTestEngine.execute(VintageTestEngine.java:71)
	at org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:220)
	at org.junit.platform.launcher.core.DefaultLauncher.lambda$execute$6(DefaultLauncher.java:188)
	at org.junit.platform.launcher.core.DefaultLauncher.withInterceptedStreams(DefaultLauncher.java:202)
	at org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:181)
	at org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:128)
	at org.apache.maven.surefire.junitplatform.JUnitPlatformProvider.invokeAllTests(JUnitPlatformProvider.java:150)
	at org.apache.maven.surefire.junitplatform.JUnitPlatformProvider.invoke(JUnitPlatformProvider.java:124)
	at org.apache.maven.surefire.booter.ForkedBooter.invokeProviderInSameClassLoader(ForkedBooter.java:384)
	at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:345)
	at org.apache.maven.surefire.booter.ForkedBooter.execute(ForkedBooter.java:126)
	at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:418)
Caused by: java.lang.reflect.InaccessibleObjectException: Unable to make jdk.internal.loader.ClassLoaders$AppClassLoader(jdk.internal.loader.ClassLoaders$PlatformClassLoader,jdk.internal.loader.URLClassPath) accessible: module java.base does not "opens jdk.internal.loader" to unnamed module @60fa3495
	at java.base/java.lang.reflect.AccessibleObject.checkCanSetAccessible(AccessibleObject.java:344)
	at java.base/java.lang.reflect.AccessibleObject.checkCanSetAccessible(AccessibleObject.java:284)
	at java.base/java.lang.reflect.Constructor.checkCanSetAccessible(Constructor.java:189)
	at java.base/java.lang.reflect.Constructor.setAccessible(Constructor.java:182)
	at org.codehaus.groovy.reflection.CachedConstructor$1.run(CachedConstructor.java:44)
	at java.base/java.security.AccessController.doPrivileged(AccessController.java:312)
	at org.codehaus.groovy.reflection.CachedConstructor.<init>(CachedConstructor.java:42)
	at org.codehaus.groovy.reflection.CachedClass$2.initValue(CachedClass.java:79)
	at org.codehaus.groovy.reflection.CachedClass$2.initValue(CachedClass.java:69)
	at org.codehaus.groovy.util.LazyReference.getLocked(LazyReference.java:49)
	at org.codehaus.groovy.util.LazyReference.get(LazyReference.java:36)
	at org.codehaus.groovy.reflection.CachedClass.getConstructors(CachedClass.java:268)
	at groovy.lang.MetaClassImpl.<init>(MetaClassImpl.java:218)
	at groovy.lang.MetaClassImpl.<init>(MetaClassImpl.java:228)
	at groovy.lang.MetaClassRegistry$MetaClassCreationHandle.createNormalMetaClass(MetaClassRegistry.java:171)
	at groovy.lang.MetaClassRegistry$MetaClassCreationHandle.createWithCustomLookup(MetaClassRegistry.java:161)
	at groovy.lang.MetaClassRegistry$MetaClassCreationHandle.create(MetaClassRegistry.java:144)
	at org.codehaus.groovy.reflection.ClassInfo.getMetaClassUnderLock(ClassInfo.java:253)
	at org.codehaus.groovy.reflection.ClassInfo.getMetaClass(ClassInfo.java:285)
	at org.codehaus.groovy.reflection.ClassInfo.getMetaClass(ClassInfo.java:295)
	at org.codehaus.groovy.runtime.metaclass.MetaClassRegistryImpl.getMetaClass(MetaClassRegistryImpl.java:261)
	at org.codehaus.groovy.runtime.InvokerHelper.getMetaClass(InvokerHelper.java:873)
	at org.codehaus.groovy.runtime.InvokerHelper.invokePojoMethod(InvokerHelper.java:906)
	at org.codehaus.groovy.runtime.InvokerHelper.invokeMethod(InvokerHelper.java:898)
	at org.codehaus.groovy.runtime.typehandling.DefaultTypeTransformation.castToBoolean(DefaultTypeTransformation.java:185)
	at org.codehaus.groovy.runtime.typehandling.DefaultTypeTransformation.booleanUnbox(DefaultTypeTransformation.java:74)
	at org.codehaus.groovy.control.customizers.ASTTransformationCustomizer.findASTTranformationClass(ASTTransformationCustomizer.groovy:209)
	at jdk.internal.reflect.GeneratedMethodAccessor358.invoke(Unknown Source)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:567)
	at org.codehaus.groovy.reflection.CachedMethod.invoke(CachedMethod.java:93)
	at org.codehaus.groovy.runtime.callsite.StaticMetaMethodSite$StaticMetaMethodSiteNoUnwrapNoCoerce.invoke(StaticMetaMethodSite.java:151)
	at org.codehaus.groovy.runtime.callsite.StaticMetaMethodSite.callStatic(StaticMetaMethodSite.java:102)
	at org.codehaus.groovy.runtime.callsite.AbstractCallSite.callStatic(AbstractCallSite.java:214)
	at org.codehaus.groovy.control.customizers.ASTTransformationCustomizer.findPhase(ASTTransformationCustomizer.groovy:226)
	at jdk.internal.reflect.GeneratedMethodAccessor357.invoke(Unknown Source)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:567)
	at org.codehaus.groovy.reflection.CachedMethod.invoke(CachedMethod.java:93)
	at org.codehaus.groovy.runtime.callsite.StaticMetaMethodSite$StaticMetaMethodSiteNoUnwrapNoCoerce.invoke(StaticMetaMethodSite.java:151)
	at org.codehaus.groovy.runtime.callsite.StaticMetaMethodSite.callStatic(StaticMetaMethodSite.java:102)
	at org.codehaus.groovy.runtime.callsite.AbstractCallSite.callStatic(AbstractCallSite.java:214)
	at org.codehaus.groovy.control.customizers.ASTTransformationCustomizer.<init>(ASTTransformationCustomizer.groovy:180)
	at org.codehaus.groovy.control.customizers.ASTTransformationCustomizer.<init>(ASTTransformationCustomizer.groovy:188)
	at groovy.text.markup.MarkupTemplateEngine.<init>(MarkupTemplateEngine.java:94)
	at org.springframework.web.servlet.view.groovy.GroovyMarkupConfigurer.createTemplateEngine(GroovyMarkupConfigurer.java:160)
	at org.springframework.web.servlet.view.groovy.GroovyMarkupConfigurer.afterPropertiesSet(GroovyMarkupConfigurer.java:153)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1862)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1799)
	... 60 common frames omitted
2020-11-25 20:53:53,500 ERROR  [main] TestContextManager: Caught exception while allowing TestExecutionListener [org.springframework.test.context.web.ServletTestExecutionListener@1bafc65f] to prepare test instance [com.sf.VaadinMathSolver.VaadinMathSolverApplicationTests@5f36046]
java.lang.IllegalStateException: Failed to load ApplicationContext
	at org.springframework.test.context.cache.DefaultCacheAwareContextLoaderDelegate.loadContext(DefaultCacheAwareContextLoaderDelegate.java:132)
	at org.springframework.test.context.support.DefaultTestContext.getApplicationContext(DefaultTestContext.java:123)
	at org.springframework.test.context.web.ServletTestExecutionListener.setUpRequestContextIfNecessary(ServletTestExecutionListener.java:190)
	at org.springframework.test.context.web.ServletTestExecutionListener.prepareTestInstance(ServletTestExecutionListener.java:132)
	at org.springframework.test.context.TestContextManager.prepareTestInstance(TestContextManager.java:244)
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner.createTest(SpringJUnit4ClassRunner.java:227)
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner$1.runReflectiveCall(SpringJUnit4ClassRunner.java:289)
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner.methodBlock(SpringJUnit4ClassRunner.java:291)
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner.runChild(SpringJUnit4ClassRunner.java:246)
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner.runChild(SpringJUnit4ClassRunner.java:97)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:290)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:71)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:58)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268)
	at org.springframework.test.context.junit4.statements.RunBeforeTestClassCallbacks.evaluate(RunBeforeTestClassCallbacks.java:61)
	at org.springframework.test.context.junit4.statements.RunAfterTestClassCallbacks.evaluate(RunAfterTestClassCallbacks.java:70)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:363)
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner.run(SpringJUnit4ClassRunner.java:190)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:137)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:115)
	at org.junit.vintage.engine.execution.RunnerExecutor.execute(RunnerExecutor.java:40)
	at java.base/java.util.stream.ForEachOps$ForEachOp$OfRef.accept(ForEachOps.java:183)
	at java.base/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:195)
	at java.base/java.util.Iterator.forEachRemaining(Iterator.java:133)
	at java.base/java.util.Spliterators$IteratorSpliterator.forEachRemaining(Spliterators.java:1801)
	at java.base/java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:484)
	at java.base/java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:474)
	at java.base/java.util.stream.ForEachOps$ForEachOp.evaluateSequential(ForEachOps.java:150)
	at java.base/java.util.stream.ForEachOps$ForEachOp$OfRef.evaluateSequential(ForEachOps.java:173)
	at java.base/java.util.stream.AbstractPipeline.evaluate(AbstractPipeline.java:234)
	at java.base/java.util.stream.ReferencePipeline.forEach(ReferencePipeline.java:497)
	at org.junit.vintage.engine.VintageTestEngine.executeAllChildren(VintageTestEngine.java:80)
	at org.junit.vintage.engine.VintageTestEngine.execute(VintageTestEngine.java:71)
	at org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:220)
	at org.junit.platform.launcher.core.DefaultLauncher.lambda$execute$6(DefaultLauncher.java:188)
	at org.junit.platform.launcher.core.DefaultLauncher.withInterceptedStreams(DefaultLauncher.java:202)
	at org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:181)
	at org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:128)
	at org.apache.maven.surefire.junitplatform.JUnitPlatformProvider.invokeAllTests(JUnitPlatformProvider.java:150)
	at org.apache.maven.surefire.junitplatform.JUnitPlatformProvider.invoke(JUnitPlatformProvider.java:124)
	at org.apache.maven.surefire.booter.ForkedBooter.invokeProviderInSameClassLoader(ForkedBooter.java:384)
	at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:345)
	at org.apache.maven.surefire.booter.ForkedBooter.execute(ForkedBooter.java:126)
	at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:418)
Caused by: org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'groovyMarkupConfigurer' defined in class path resource [org/springframework/boot/autoconfigure/groovy/template/GroovyTemplateAutoConfiguration$GroovyMarkupConfiguration.class]: Invocation of init method failed; nested exception is java.lang.reflect.InaccessibleObjectException: Unable to make jdk.internal.loader.ClassLoaders$AppClassLoader(jdk.internal.loader.ClassLoaders$PlatformClassLoader,jdk.internal.loader.URLClassPath) accessible: module java.base does not "opens jdk.internal.loader" to unnamed module @60fa3495
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1803)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:595)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:517)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:323)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:222)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:321)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:202)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(DefaultListableBeanFactory.java:879)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:878)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:550)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:747)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:397)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:315)
	at org.springframework.boot.test.context.SpringBootContextLoader.loadContext(SpringBootContextLoader.java:125)
	at org.springframework.test.context.cache.DefaultCacheAwareContextLoaderDelegate.loadContextInternal(DefaultCacheAwareContextLoaderDelegate.java:99)
	at org.springframework.test.context.cache.DefaultCacheAwareContextLoaderDelegate.loadContext(DefaultCacheAwareContextLoaderDelegate.java:124)
	... 45 common frames omitted
Caused by: java.lang.reflect.InaccessibleObjectException: Unable to make jdk.internal.loader.ClassLoaders$AppClassLoader(jdk.internal.loader.ClassLoaders$PlatformClassLoader,jdk.internal.loader.URLClassPath) accessible: module java.base does not "opens jdk.internal.loader" to unnamed module @60fa3495
	at java.base/java.lang.reflect.AccessibleObject.checkCanSetAccessible(AccessibleObject.java:344)
	at java.base/java.lang.reflect.AccessibleObject.checkCanSetAccessible(AccessibleObject.java:284)
	at java.base/java.lang.reflect.Constructor.checkCanSetAccessible(Constructor.java:189)
	at java.base/java.lang.reflect.Constructor.setAccessible(Constructor.java:182)
	at org.codehaus.groovy.reflection.CachedConstructor$1.run(CachedConstructor.java:44)
	at java.base/java.security.AccessController.doPrivileged(AccessController.java:312)
	at org.codehaus.groovy.reflection.CachedConstructor.<init>(CachedConstructor.java:42)
	at org.codehaus.groovy.reflection.CachedClass$2.initValue(CachedClass.java:79)
	at org.codehaus.groovy.reflection.CachedClass$2.initValue(CachedClass.java:69)
	at org.codehaus.groovy.util.LazyReference.getLocked(LazyReference.java:49)
	at org.codehaus.groovy.util.LazyReference.get(LazyReference.java:36)
	at org.codehaus.groovy.reflection.CachedClass.getConstructors(CachedClass.java:268)
	at groovy.lang.MetaClassImpl.<init>(MetaClassImpl.java:218)
	at groovy.lang.MetaClassImpl.<init>(MetaClassImpl.java:228)
	at groovy.lang.MetaClassRegistry$MetaClassCreationHandle.createNormalMetaClass(MetaClassRegistry.java:171)
	at groovy.lang.MetaClassRegistry$MetaClassCreationHandle.createWithCustomLookup(MetaClassRegistry.java:161)
	at groovy.lang.MetaClassRegistry$MetaClassCreationHandle.create(MetaClassRegistry.java:144)
	at org.codehaus.groovy.reflection.ClassInfo.getMetaClassUnderLock(ClassInfo.java:253)
	at org.codehaus.groovy.reflection.ClassInfo.getMetaClass(ClassInfo.java:285)
	at org.codehaus.groovy.reflection.ClassInfo.getMetaClass(ClassInfo.java:295)
	at org.codehaus.groovy.runtime.metaclass.MetaClassRegistryImpl.getMetaClass(MetaClassRegistryImpl.java:261)
	at org.codehaus.groovy.runtime.InvokerHelper.getMetaClass(InvokerHelper.java:873)
	at org.codehaus.groovy.runtime.InvokerHelper.invokePojoMethod(InvokerHelper.java:906)
	at org.codehaus.groovy.runtime.InvokerHelper.invokeMethod(InvokerHelper.java:898)
	at org.codehaus.groovy.runtime.typehandling.DefaultTypeTransformation.castToBoolean(DefaultTypeTransformation.java:185)
	at org.codehaus.groovy.runtime.typehandling.DefaultTypeTransformation.booleanUnbox(DefaultTypeTransformation.java:74)
	at org.codehaus.groovy.control.customizers.ASTTransformationCustomizer.findASTTranformationClass(ASTTransformationCustomizer.groovy:209)
	at jdk.internal.reflect.GeneratedMethodAccessor358.invoke(Unknown Source)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:567)
	at org.codehaus.groovy.reflection.CachedMethod.invoke(CachedMethod.java:93)
	at org.codehaus.groovy.runtime.callsite.StaticMetaMethodSite$StaticMetaMethodSiteNoUnwrapNoCoerce.invoke(StaticMetaMethodSite.java:151)
	at org.codehaus.groovy.runtime.callsite.StaticMetaMethodSite.callStatic(StaticMetaMethodSite.java:102)
	at org.codehaus.groovy.runtime.callsite.AbstractCallSite.callStatic(AbstractCallSite.java:214)
	at org.codehaus.groovy.control.customizers.ASTTransformationCustomizer.findPhase(ASTTransformationCustomizer.groovy:226)
	at jdk.internal.reflect.GeneratedMethodAccessor357.invoke(Unknown Source)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:567)
	at org.codehaus.groovy.reflection.CachedMethod.invoke(CachedMethod.java:93)
	at org.codehaus.groovy.runtime.callsite.StaticMetaMethodSite$StaticMetaMethodSiteNoUnwrapNoCoerce.invoke(StaticMetaMethodSite.java:151)
	at org.codehaus.groovy.runtime.callsite.StaticMetaMethodSite.callStatic(StaticMetaMethodSite.java:102)
	at org.codehaus.groovy.runtime.callsite.AbstractCallSite.callStatic(AbstractCallSite.java:214)
	at org.codehaus.groovy.control.customizers.ASTTransformationCustomizer.<init>(ASTTransformationCustomizer.groovy:180)
	at org.codehaus.groovy.control.customizers.ASTTransformationCustomizer.<init>(ASTTransformationCustomizer.groovy:188)
	at groovy.text.markup.MarkupTemplateEngine.<init>(MarkupTemplateEngine.java:94)
	at org.springframework.web.servlet.view.groovy.GroovyMarkupConfigurer.createTemplateEngine(GroovyMarkupConfigurer.java:160)
	at org.springframework.web.servlet.view.groovy.GroovyMarkupConfigurer.afterPropertiesSet(GroovyMarkupConfigurer.java:153)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1862)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1799)
	... 60 common frames omitted
2020-11-25 21:06:17,113 DEBUG  [main] BasicTypeRegistry: Adding type registration boolean -> org.hibernate.type.BooleanType@73a49597
2020-11-25 21:06:17,154 DEBUG  [main] BasicTypeRegistry: Adding type registration boolean -> org.hibernate.type.BooleanType@73a49597
2020-11-25 21:06:17,155 DEBUG  [main] BasicTypeRegistry: Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@73a49597
2020-11-25 21:06:17,156 DEBUG  [main] BasicTypeRegistry: Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@37f41a81
2020-11-25 21:06:17,157 DEBUG  [main] BasicTypeRegistry: Adding type registration true_false -> org.hibernate.type.TrueFalseType@12548f9a
2020-11-25 21:06:17,158 DEBUG  [main] BasicTypeRegistry: Adding type registration yes_no -> org.hibernate.type.YesNoType@2e4d4d22
2020-11-25 21:06:17,160 DEBUG  [main] BasicTypeRegistry: Adding type registration byte -> org.hibernate.type.ByteType@305881b8
2020-11-25 21:06:17,160 DEBUG  [main] BasicTypeRegistry: Adding type registration byte -> org.hibernate.type.ByteType@305881b8
2020-11-25 21:06:17,160 DEBUG  [main] BasicTypeRegistry: Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@305881b8
2020-11-25 21:06:17,162 DEBUG  [main] BasicTypeRegistry: Adding type registration character -> org.hibernate.type.CharacterType@72f35a31
2020-11-25 21:06:17,162 DEBUG  [main] BasicTypeRegistry: Adding type registration char -> org.hibernate.type.CharacterType@72f35a31
2020-11-25 21:06:17,162 DEBUG  [main] BasicTypeRegistry: Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@72f35a31
2020-11-25 21:06:17,164 DEBUG  [main] BasicTypeRegistry: Adding type registration short -> org.hibernate.type.ShortType@4377ed24
2020-11-25 21:06:17,165 DEBUG  [main] BasicTypeRegistry: Adding type registration short -> org.hibernate.type.ShortType@4377ed24
2020-11-25 21:06:17,165 DEBUG  [main] BasicTypeRegistry: Adding type registration java.lang.Short -> org.hibernate.type.ShortType@4377ed24
2020-11-25 21:06:17,168 DEBUG  [main] BasicTypeRegistry: Adding type registration integer -> org.hibernate.type.IntegerType@b339a08
2020-11-25 21:06:17,169 DEBUG  [main] BasicTypeRegistry: Adding type registration int -> org.hibernate.type.IntegerType@b339a08
2020-11-25 21:06:17,170 DEBUG  [main] BasicTypeRegistry: Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@b339a08
2020-11-25 21:06:17,176 DEBUG  [main] BasicTypeRegistry: Adding type registration long -> org.hibernate.type.LongType@36d7a68a
2020-11-25 21:06:17,177 DEBUG  [main] BasicTypeRegistry: Adding type registration long -> org.hibernate.type.LongType@36d7a68a
2020-11-25 21:06:17,177 DEBUG  [main] BasicTypeRegistry: Adding type registration java.lang.Long -> org.hibernate.type.LongType@36d7a68a
2020-11-25 21:06:17,178 DEBUG  [main] BasicTypeRegistry: Adding type registration float -> org.hibernate.type.FloatType@4d664323
2020-11-25 21:06:17,179 DEBUG  [main] BasicTypeRegistry: Adding type registration float -> org.hibernate.type.FloatType@4d664323
2020-11-25 21:06:17,179 DEBUG  [main] BasicTypeRegistry: Adding type registration java.lang.Float -> org.hibernate.type.FloatType@4d664323
2020-11-25 21:06:17,180 DEBUG  [main] BasicTypeRegistry: Adding type registration double -> org.hibernate.type.DoubleType@1b4ba615
2020-11-25 21:06:17,181 DEBUG  [main] BasicTypeRegistry: Adding type registration double -> org.hibernate.type.DoubleType@1b4ba615
2020-11-25 21:06:17,181 DEBUG  [main] BasicTypeRegistry: Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@1b4ba615
2020-11-25 21:06:17,183 DEBUG  [main] BasicTypeRegistry: Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@3c743d40
2020-11-25 21:06:17,183 DEBUG  [main] BasicTypeRegistry: Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@3c743d40
2020-11-25 21:06:17,185 DEBUG  [main] BasicTypeRegistry: Adding type registration big_integer -> org.hibernate.type.BigIntegerType@1607d391
2020-11-25 21:06:17,186 DEBUG  [main] BasicTypeRegistry: Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@1607d391
2020-11-25 21:06:17,187 DEBUG  [main] BasicTypeRegistry: Adding type registration string -> org.hibernate.type.StringType@23bd2f6e
2020-11-25 21:06:17,188 DEBUG  [main] BasicTypeRegistry: Adding type registration java.lang.String -> org.hibernate.type.StringType@23bd2f6e
2020-11-25 21:06:17,188 DEBUG  [main] BasicTypeRegistry: Adding type registration nstring -> org.hibernate.type.StringNVarcharType@54997f67
2020-11-25 21:06:17,189 DEBUG  [main] BasicTypeRegistry: Adding type registration ncharacter -> org.hibernate.type.CharacterNCharType@76b05c0
2020-11-25 21:06:17,191 DEBUG  [main] BasicTypeRegistry: Adding type registration url -> org.hibernate.type.UrlType@3f1d6a13
2020-11-25 21:06:17,191 DEBUG  [main] BasicTypeRegistry: Adding type registration java.net.URL -> org.hibernate.type.UrlType@3f1d6a13
2020-11-25 21:06:17,192 DEBUG  [main] BasicTypeRegistry: Adding type registration Duration -> org.hibernate.type.DurationType@5f1f0ee6
2020-11-25 21:06:17,192 DEBUG  [main] BasicTypeRegistry: Adding type registration java.time.Duration -> org.hibernate.type.DurationType@5f1f0ee6
2020-11-25 21:06:17,194 DEBUG  [main] BasicTypeRegistry: Adding type registration Instant -> org.hibernate.type.InstantType@5e1d1524
2020-11-25 21:06:17,196 DEBUG  [main] BasicTypeRegistry: Adding type registration java.time.Instant -> org.hibernate.type.InstantType@5e1d1524
2020-11-25 21:06:17,198 DEBUG  [main] BasicTypeRegistry: Adding type registration LocalDateTime -> org.hibernate.type.LocalDateTimeType@7ec508e6
2020-11-25 21:06:17,198 DEBUG  [main] BasicTypeRegistry: Adding type registration java.time.LocalDateTime -> org.hibernate.type.LocalDateTimeType@7ec508e6
2020-11-25 21:06:17,200 DEBUG  [main] BasicTypeRegistry: Adding type registration LocalDate -> org.hibernate.type.LocalDateType@d0fabc8
2020-11-25 21:06:17,200 DEBUG  [main] BasicTypeRegistry: Adding type registration java.time.LocalDate -> org.hibernate.type.LocalDateType@d0fabc8
2020-11-25 21:06:17,202 DEBUG  [main] BasicTypeRegistry: Adding type registration LocalTime -> org.hibernate.type.LocalTimeType@68454ed5
2020-11-25 21:06:17,202 DEBUG  [main] BasicTypeRegistry: Adding type registration java.time.LocalTime -> org.hibernate.type.LocalTimeType@68454ed5
2020-11-25 21:06:17,204 DEBUG  [main] BasicTypeRegistry: Adding type registration OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@2248d140
2020-11-25 21:06:17,204 DEBUG  [main] BasicTypeRegistry: Adding type registration java.time.OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@2248d140
2020-11-25 21:06:17,205 DEBUG  [main] BasicTypeRegistry: Adding type registration OffsetTime -> org.hibernate.type.OffsetTimeType@1bb4c431
2020-11-25 21:06:17,205 DEBUG  [main] BasicTypeRegistry: Adding type registration java.time.OffsetTime -> org.hibernate.type.OffsetTimeType@1bb4c431
2020-11-25 21:06:17,207 DEBUG  [main] BasicTypeRegistry: Adding type registration ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@54687fd0
2020-11-25 21:06:17,207 DEBUG  [main] BasicTypeRegistry: Adding type registration java.time.ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@54687fd0
2020-11-25 21:06:17,208 DEBUG  [main] BasicTypeRegistry: Adding type registration date -> org.hibernate.type.DateType@369a95a5
2020-11-25 21:06:17,208 DEBUG  [main] BasicTypeRegistry: Adding type registration java.sql.Date -> org.hibernate.type.DateType@369a95a5
2020-11-25 21:06:17,210 DEBUG  [main] BasicTypeRegistry: Adding type registration time -> org.hibernate.type.TimeType@6f4adaab
2020-11-25 21:06:17,210 DEBUG  [main] BasicTypeRegistry: Adding type registration java.sql.Time -> org.hibernate.type.TimeType@6f4adaab
2020-11-25 21:06:17,211 DEBUG  [main] BasicTypeRegistry: Adding type registration timestamp -> org.hibernate.type.TimestampType@2ac05a33
2020-11-25 21:06:17,211 DEBUG  [main] BasicTypeRegistry: Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@2ac05a33
2020-11-25 21:06:17,212 DEBUG  [main] BasicTypeRegistry: Adding type registration java.util.Date -> org.hibernate.type.TimestampType@2ac05a33
2020-11-25 21:06:17,213 DEBUG  [main] BasicTypeRegistry: Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@6aaa678d
2020-11-25 21:06:17,215 DEBUG  [main] BasicTypeRegistry: Adding type registration calendar -> org.hibernate.type.CalendarType@97beeaf
2020-11-25 21:06:17,215 DEBUG  [main] BasicTypeRegistry: Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@97beeaf
2020-11-25 21:06:17,215 DEBUG  [main] BasicTypeRegistry: Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@97beeaf
2020-11-25 21:06:17,216 DEBUG  [main] BasicTypeRegistry: Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@4c6fc3e7
2020-11-25 21:06:17,217 DEBUG  [main] BasicTypeRegistry: Adding type registration locale -> org.hibernate.type.LocaleType@1f6f0fe2
2020-11-25 21:06:17,218 DEBUG  [main] BasicTypeRegistry: Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@1f6f0fe2
2020-11-25 21:06:17,219 DEBUG  [main] BasicTypeRegistry: Adding type registration currency -> org.hibernate.type.CurrencyType@5b5b9521
2020-11-25 21:06:17,219 DEBUG  [main] BasicTypeRegistry: Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@5b5b9521
2020-11-25 21:06:17,220 DEBUG  [main] BasicTypeRegistry: Adding type registration timezone -> org.hibernate.type.TimeZoneType@3d718248
2020-11-25 21:06:17,221 DEBUG  [main] BasicTypeRegistry: Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@3d718248
2020-11-25 21:06:17,222 DEBUG  [main] BasicTypeRegistry: Adding type registration class -> org.hibernate.type.ClassType@38ebc866
2020-11-25 21:06:17,222 DEBUG  [main] BasicTypeRegistry: Adding type registration java.lang.Class -> org.hibernate.type.ClassType@38ebc866
2020-11-25 21:06:17,223 DEBUG  [main] BasicTypeRegistry: Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@949d347
2020-11-25 21:06:17,223 DEBUG  [main] BasicTypeRegistry: Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@949d347
2020-11-25 21:06:17,223 DEBUG  [main] BasicTypeRegistry: Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@2b90cc1
2020-11-25 21:06:17,224 DEBUG  [main] BasicTypeRegistry: Adding type registration binary -> org.hibernate.type.BinaryType@54556723
2020-11-25 21:06:17,225 DEBUG  [main] BasicTypeRegistry: Adding type registration byte[] -> org.hibernate.type.BinaryType@54556723
2020-11-25 21:06:17,225 DEBUG  [main] BasicTypeRegistry: Adding type registration [B -> org.hibernate.type.BinaryType@54556723
2020-11-25 21:06:17,226 DEBUG  [main] BasicTypeRegistry: Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@3534651a
2020-11-25 21:06:17,226 DEBUG  [main] BasicTypeRegistry: Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@3534651a
2020-11-25 21:06:17,226 DEBUG  [main] BasicTypeRegistry: Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@3534651a
2020-11-25 21:06:17,227 DEBUG  [main] BasicTypeRegistry: Adding type registration row_version -> org.hibernate.type.RowVersionType@65259c53
2020-11-25 21:06:17,228 DEBUG  [main] BasicTypeRegistry: Adding type registration image -> org.hibernate.type.ImageType@6c1f15df
2020-11-25 21:06:17,229 DEBUG  [main] BasicTypeRegistry: Adding type registration characters -> org.hibernate.type.CharArrayType@670a4738
2020-11-25 21:06:17,229 DEBUG  [main] BasicTypeRegistry: Adding type registration char[] -> org.hibernate.type.CharArrayType@670a4738
2020-11-25 21:06:17,230 DEBUG  [main] BasicTypeRegistry: Adding type registration [C -> org.hibernate.type.CharArrayType@670a4738
2020-11-25 21:06:17,231 DEBUG  [main] BasicTypeRegistry: Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@f237ae7
2020-11-25 21:06:17,231 DEBUG  [main] BasicTypeRegistry: Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@f237ae7
2020-11-25 21:06:17,231 DEBUG  [main] BasicTypeRegistry: Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@f237ae7
2020-11-25 21:06:17,232 DEBUG  [main] BasicTypeRegistry: Adding type registration text -> org.hibernate.type.TextType@6339e604
2020-11-25 21:06:17,234 DEBUG  [main] BasicTypeRegistry: Adding type registration ntext -> org.hibernate.type.NTextType@1f4d38f9
2020-11-25 21:06:17,236 DEBUG  [main] BasicTypeRegistry: Adding type registration blob -> org.hibernate.type.BlobType@4a58e0e9
2020-11-25 21:06:17,236 DEBUG  [main] BasicTypeRegistry: Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@4a58e0e9
2020-11-25 21:06:17,237 DEBUG  [main] BasicTypeRegistry: Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@25e95af1
2020-11-25 21:06:17,239 DEBUG  [main] BasicTypeRegistry: Adding type registration clob -> org.hibernate.type.ClobType@57b33c29
2020-11-25 21:06:17,239 DEBUG  [main] BasicTypeRegistry: Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@57b33c29
2020-11-25 21:06:17,241 DEBUG  [main] BasicTypeRegistry: Adding type registration nclob -> org.hibernate.type.NClobType@44e08a7a
2020-11-25 21:06:17,242 DEBUG  [main] BasicTypeRegistry: Adding type registration java.sql.NClob -> org.hibernate.type.NClobType@44e08a7a
2020-11-25 21:06:17,243 DEBUG  [main] BasicTypeRegistry: Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@795faad
2020-11-25 21:06:17,244 DEBUG  [main] BasicTypeRegistry: Adding type registration materialized_nclob -> org.hibernate.type.MaterializedNClobType@36511772
2020-11-25 21:06:17,245 DEBUG  [main] BasicTypeRegistry: Adding type registration serializable -> org.hibernate.type.SerializableType@3e5ebdfe
2020-11-25 21:06:17,248 DEBUG  [main] BasicTypeRegistry: Adding type registration object -> org.hibernate.type.ObjectType@1cb44a2f
2020-11-25 21:06:17,248 DEBUG  [main] BasicTypeRegistry: Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@1cb44a2f
2020-11-25 21:06:17,249 DEBUG  [main] BasicTypeRegistry: Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@212e39ee
2020-11-25 21:06:17,249 DEBUG  [main] BasicTypeRegistry: Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@638d2ce3
2020-11-25 21:06:17,249 DEBUG  [main] BasicTypeRegistry: Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@79617c3d
2020-11-25 21:06:17,250 DEBUG  [main] BasicTypeRegistry: Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@49cceb19
2020-11-25 21:06:17,250 DEBUG  [main] BasicTypeRegistry: Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@197d5a87
2020-11-25 21:06:17,250 DEBUG  [main] BasicTypeRegistry: Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@131d977f
2020-11-25 21:06:17,250 DEBUG  [main] BasicTypeRegistry: Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@616f81b5
2020-11-25 21:06:17,251 DEBUG  [main] BasicTypeRegistry: Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@4f552aa2
2020-11-25 21:06:17,873 DEBUG  [main] TypeConfiguration$Scope: Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@13ebccd] to MetadataBuildingContext [org.hibernate.boot.internal.MetadataBuildingContextRootImpl@4e80960a]
2020-11-25 21:06:18,224 DEBUG  [main] EnumType: Using NAMED-based conversion for Enum com.sf.back.entities.Kind
2020-11-25 21:06:18,362 DEBUG  [main] EnumType: Using NAMED-based conversion for Enum com.sf.back.entities.Kind
2020-11-25 21:06:18,549 DEBUG  [main] TypeConfiguration$Scope: Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@13ebccd] to SessionFactoryImpl [org.hibernate.internal.SessionFactoryImpl@f5f8de2]
2020-11-25 21:06:18,652 DEBUG  [main] EnumType: Using NAMED-based conversion for Enum com.sf.back.entities.Kind
2020-11-25 21:06:18,655 DEBUG  [main] EnumType: Using NAMED-based conversion for Enum com.sf.back.entities.Kind
2020-11-25 21:06:18,829 DEBUG  [main] EnumType: Using NAMED-based conversion for Enum com.sf.back.entities.Kind
2020-11-25 21:06:18,830 DEBUG  [main] EnumType: Using NAMED-based conversion for Enum com.sf.back.entities.Kind
2020-11-25 21:06:19,064 DEBUG  [main] EnumType: Using NAMED-based conversion for Enum com.sf.back.entities.Kind
2020-11-25 21:06:19,065 DEBUG  [main] EnumType: Using NAMED-based conversion for Enum com.sf.back.entities.Kind
2020-11-25 21:06:19,114 DEBUG  [main] EnumType: Using NAMED-based conversion for Enum com.sf.back.entities.Kind
2020-11-25 21:06:19,151 TRACE  [main] TypeConfiguration$Scope: Handling #sessionFactoryCreated from [org.hibernate.internal.SessionFactoryImpl@f5f8de2] for TypeConfiguration
2020-11-25 21:06:19,962 WARN   [main] GlobalSettings: Dozer configuration file not found: dozer.properties.  Using defaults for all Dozer global properties.
2020-11-25 21:06:20,821 WARN   [main] JpaBaseConfiguration$JpaWebConfiguration: spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2020-11-25 21:06:21,536 WARN   [main] GroovyTemplateAutoConfiguration: Cannot find template location: classpath:/templates/ (please add some templates, check your Groovy configuration, or set spring.groovy.template.check-template-location=false)
2020-11-25 21:06:22,071 TRACE  [main] BasicBinder: binding parameter [1] as [BLOB] - [[70, 105, 110, 100, 32, 97, 108, 108, 32, 114, 111, 111, 116, 115, 32, 111, 102, 32, 103, 105, 118, 101, 110, 32, 112, 111, 108, 121, 110, 111, 109, 105, 97, 108]]
2020-11-25 21:06:22,073 TRACE  [main] BasicBinder: binding parameter [2] as [BOOLEAN] - [false]
2020-11-25 21:06:22,073 TRACE  [main] BasicBinder: binding parameter [3] as [VARCHAR] - [POLYNOMIAL]
2020-11-25 21:06:22,074 TRACE  [main] BasicBinder: binding parameter [4] as [INTEGER] - [1]
2020-11-25 21:06:22,075 TRACE  [main] BasicBinder: binding parameter [5] as [BIGINT] - [null]
2020-11-25 21:06:22,076 TRACE  [main] BasicBinder: binding parameter [6] as [INTEGER] - [6]
2020-11-25 21:06:22,090 TRACE  [main] BasicBinder: binding parameter [1] as [BLOB] - [null]
2020-11-25 21:06:22,091 TRACE  [main] BasicBinder: binding parameter [2] as [DOUBLE] - [1.0]
2020-11-25 21:06:22,091 TRACE  [main] BasicBinder: binding parameter [3] as [INTEGER] - [0]
2020-11-25 21:06:22,092 TRACE  [main] BasicBinder: binding parameter [4] as [BOOLEAN] - [true]
2020-11-25 21:06:22,092 TRACE  [main] BasicBinder: binding parameter [5] as [INTEGER] - [0]
2020-11-25 21:06:22,093 TRACE  [main] BasicBinder: binding parameter [6] as [BIGINT] - [1]
2020-11-25 21:06:22,095 TRACE  [main] BasicBinder: binding parameter [1] as [BLOB] - [null]
2020-11-25 21:06:22,095 TRACE  [main] BasicBinder: binding parameter [2] as [DOUBLE] - [2.0]
2020-11-25 21:06:22,096 TRACE  [main] BasicBinder: binding parameter [3] as [INTEGER] - [0]
2020-11-25 21:06:22,096 TRACE  [main] BasicBinder: binding parameter [4] as [BOOLEAN] - [true]
2020-11-25 21:06:22,096 TRACE  [main] BasicBinder: binding parameter [5] as [INTEGER] - [1]
2020-11-25 21:06:22,096 TRACE  [main] BasicBinder: binding parameter [6] as [BIGINT] - [1]
2020-11-25 21:06:22,097 TRACE  [main] BasicBinder: binding parameter [1] as [BLOB] - [null]
2020-11-25 21:06:22,098 TRACE  [main] BasicBinder: binding parameter [2] as [DOUBLE] - [1.0]
2020-11-25 21:06:22,098 TRACE  [main] BasicBinder: binding parameter [3] as [INTEGER] - [0]
2020-11-25 21:06:22,099 TRACE  [main] BasicBinder: binding parameter [4] as [BOOLEAN] - [true]
2020-11-25 21:06:22,099 TRACE  [main] BasicBinder: binding parameter [5] as [INTEGER] - [2]
2020-11-25 21:06:22,099 TRACE  [main] BasicBinder: binding parameter [6] as [BIGINT] - [1]
2020-11-25 21:06:22,101 TRACE  [main] BasicBinder: binding parameter [1] as [BLOB] - [null]
2020-11-25 21:06:22,102 TRACE  [main] BasicBinder: binding parameter [2] as [DOUBLE] - [1.0]
2020-11-25 21:06:22,102 TRACE  [main] BasicBinder: binding parameter [3] as [INTEGER] - [0]
2020-11-25 21:06:22,102 TRACE  [main] BasicBinder: binding parameter [4] as [BOOLEAN] - [false]
2020-11-25 21:06:22,103 TRACE  [main] BasicBinder: binding parameter [5] as [INTEGER] - [0]
2020-11-25 21:06:22,103 TRACE  [main] BasicBinder: binding parameter [6] as [BIGINT] - [1]
2020-11-25 21:06:22,107 TRACE  [main] BasicBinder: binding parameter [1] as [BLOB] - [null]
2020-11-25 21:06:22,107 TRACE  [main] BasicBinder: binding parameter [2] as [DOUBLE] - [1.0]
2020-11-25 21:06:22,107 TRACE  [main] BasicBinder: binding parameter [3] as [INTEGER] - [0]
2020-11-25 21:06:22,107 TRACE  [main] BasicBinder: binding parameter [4] as [BOOLEAN] - [false]
2020-11-25 21:06:22,108 TRACE  [main] BasicBinder: binding parameter [5] as [INTEGER] - [1]
2020-11-25 21:06:22,108 TRACE  [main] BasicBinder: binding parameter [6] as [BIGINT] - [1]
2020-11-25 21:06:27,419 DEBUG  [main] BasicTypeRegistry: Adding type registration boolean -> org.hibernate.type.BooleanType@73a49597
2020-11-25 21:06:27,419 DEBUG  [main] BasicTypeRegistry: Adding type registration boolean -> org.hibernate.type.BooleanType@73a49597
2020-11-25 21:06:27,420 DEBUG  [main] BasicTypeRegistry: Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@73a49597
2020-11-25 21:06:27,420 DEBUG  [main] BasicTypeRegistry: Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@37f41a81
2020-11-25 21:06:27,420 DEBUG  [main] BasicTypeRegistry: Adding type registration true_false -> org.hibernate.type.TrueFalseType@12548f9a
2020-11-25 21:06:27,420 DEBUG  [main] BasicTypeRegistry: Adding type registration yes_no -> org.hibernate.type.YesNoType@2e4d4d22
2020-11-25 21:06:27,420 DEBUG  [main] BasicTypeRegistry: Adding type registration byte -> org.hibernate.type.ByteType@305881b8
2020-11-25 21:06:27,421 DEBUG  [main] BasicTypeRegistry: Adding type registration byte -> org.hibernate.type.ByteType@305881b8
2020-11-25 21:06:27,421 DEBUG  [main] BasicTypeRegistry: Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@305881b8
2020-11-25 21:06:27,421 DEBUG  [main] BasicTypeRegistry: Adding type registration character -> org.hibernate.type.CharacterType@72f35a31
2020-11-25 21:06:27,421 DEBUG  [main] BasicTypeRegistry: Adding type registration char -> org.hibernate.type.CharacterType@72f35a31
2020-11-25 21:06:27,422 DEBUG  [main] BasicTypeRegistry: Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@72f35a31
2020-11-25 21:06:27,423 DEBUG  [main] BasicTypeRegistry: Adding type registration short -> org.hibernate.type.ShortType@4377ed24
2020-11-25 21:06:27,425 DEBUG  [main] BasicTypeRegistry: Adding type registration short -> org.hibernate.type.ShortType@4377ed24
2020-11-25 21:06:27,426 DEBUG  [main] BasicTypeRegistry: Adding type registration java.lang.Short -> org.hibernate.type.ShortType@4377ed24
2020-11-25 21:06:27,427 DEBUG  [main] BasicTypeRegistry: Adding type registration integer -> org.hibernate.type.IntegerType@b339a08
2020-11-25 21:06:27,427 DEBUG  [main] BasicTypeRegistry: Adding type registration int -> org.hibernate.type.IntegerType@b339a08
2020-11-25 21:06:27,429 DEBUG  [main] BasicTypeRegistry: Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@b339a08
2020-11-25 21:06:27,429 DEBUG  [main] BasicTypeRegistry: Adding type registration long -> org.hibernate.type.LongType@36d7a68a
2020-11-25 21:06:27,429 DEBUG  [main] BasicTypeRegistry: Adding type registration long -> org.hibernate.type.LongType@36d7a68a
2020-11-25 21:06:27,429 DEBUG  [main] BasicTypeRegistry: Adding type registration java.lang.Long -> org.hibernate.type.LongType@36d7a68a
2020-11-25 21:06:27,429 DEBUG  [main] BasicTypeRegistry: Adding type registration float -> org.hibernate.type.FloatType@4d664323
2020-11-25 21:06:27,430 DEBUG  [main] BasicTypeRegistry: Adding type registration float -> org.hibernate.type.FloatType@4d664323
2020-11-25 21:06:27,430 DEBUG  [main] BasicTypeRegistry: Adding type registration java.lang.Float -> org.hibernate.type.FloatType@4d664323
2020-11-25 21:06:27,431 DEBUG  [main] BasicTypeRegistry: Adding type registration double -> org.hibernate.type.DoubleType@1b4ba615
2020-11-25 21:06:27,432 DEBUG  [main] BasicTypeRegistry: Adding type registration double -> org.hibernate.type.DoubleType@1b4ba615
2020-11-25 21:06:27,433 DEBUG  [main] BasicTypeRegistry: Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@1b4ba615
2020-11-25 21:06:27,434 DEBUG  [main] BasicTypeRegistry: Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@3c743d40
2020-11-25 21:06:27,434 DEBUG  [main] BasicTypeRegistry: Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@3c743d40
2020-11-25 21:06:27,435 DEBUG  [main] BasicTypeRegistry: Adding type registration big_integer -> org.hibernate.type.BigIntegerType@1607d391
2020-11-25 21:06:27,435 DEBUG  [main] BasicTypeRegistry: Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@1607d391
2020-11-25 21:06:27,436 DEBUG  [main] BasicTypeRegistry: Adding type registration string -> org.hibernate.type.StringType@23bd2f6e
2020-11-25 21:06:27,436 DEBUG  [main] BasicTypeRegistry: Adding type registration java.lang.String -> org.hibernate.type.StringType@23bd2f6e
2020-11-25 21:06:27,437 DEBUG  [main] BasicTypeRegistry: Adding type registration nstring -> org.hibernate.type.StringNVarcharType@54997f67
2020-11-25 21:06:27,437 DEBUG  [main] BasicTypeRegistry: Adding type registration ncharacter -> org.hibernate.type.CharacterNCharType@76b05c0
2020-11-25 21:06:27,437 DEBUG  [main] BasicTypeRegistry: Adding type registration url -> org.hibernate.type.UrlType@3f1d6a13
2020-11-25 21:06:27,437 DEBUG  [main] BasicTypeRegistry: Adding type registration java.net.URL -> org.hibernate.type.UrlType@3f1d6a13
2020-11-25 21:06:27,438 DEBUG  [main] BasicTypeRegistry: Adding type registration Duration -> org.hibernate.type.DurationType@5f1f0ee6
2020-11-25 21:06:27,438 DEBUG  [main] BasicTypeRegistry: Adding type registration java.time.Duration -> org.hibernate.type.DurationType@5f1f0ee6
2020-11-25 21:06:27,439 DEBUG  [main] BasicTypeRegistry: Adding type registration Instant -> org.hibernate.type.InstantType@5e1d1524
2020-11-25 21:06:27,439 DEBUG  [main] BasicTypeRegistry: Adding type registration java.time.Instant -> org.hibernate.type.InstantType@5e1d1524
2020-11-25 21:06:27,439 DEBUG  [main] BasicTypeRegistry: Adding type registration LocalDateTime -> org.hibernate.type.LocalDateTimeType@7ec508e6
2020-11-25 21:06:27,440 DEBUG  [main] BasicTypeRegistry: Adding type registration java.time.LocalDateTime -> org.hibernate.type.LocalDateTimeType@7ec508e6
2020-11-25 21:06:27,440 DEBUG  [main] BasicTypeRegistry: Adding type registration LocalDate -> org.hibernate.type.LocalDateType@d0fabc8
2020-11-25 21:06:27,441 DEBUG  [main] BasicTypeRegistry: Adding type registration java.time.LocalDate -> org.hibernate.type.LocalDateType@d0fabc8
2020-11-25 21:06:27,441 DEBUG  [main] BasicTypeRegistry: Adding type registration LocalTime -> org.hibernate.type.LocalTimeType@68454ed5
2020-11-25 21:06:27,441 DEBUG  [main] BasicTypeRegistry: Adding type registration java.time.LocalTime -> org.hibernate.type.LocalTimeType@68454ed5
2020-11-25 21:06:27,442 DEBUG  [main] BasicTypeRegistry: Adding type registration OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@2248d140
2020-11-25 21:06:27,442 DEBUG  [main] BasicTypeRegistry: Adding type registration java.time.OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@2248d140
2020-11-25 21:06:27,442 DEBUG  [main] BasicTypeRegistry: Adding type registration OffsetTime -> org.hibernate.type.OffsetTimeType@1bb4c431
2020-11-25 21:06:27,442 DEBUG  [main] BasicTypeRegistry: Adding type registration java.time.OffsetTime -> org.hibernate.type.OffsetTimeType@1bb4c431
2020-11-25 21:06:27,443 DEBUG  [main] BasicTypeRegistry: Adding type registration ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@54687fd0
2020-11-25 21:06:27,443 DEBUG  [main] BasicTypeRegistry: Adding type registration java.time.ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@54687fd0
2020-11-25 21:06:27,443 DEBUG  [main] BasicTypeRegistry: Adding type registration date -> org.hibernate.type.DateType@369a95a5
2020-11-25 21:06:27,444 DEBUG  [main] BasicTypeRegistry: Adding type registration java.sql.Date -> org.hibernate.type.DateType@369a95a5
2020-11-25 21:06:27,444 DEBUG  [main] BasicTypeRegistry: Adding type registration time -> org.hibernate.type.TimeType@6f4adaab
2020-11-25 21:06:27,446 DEBUG  [main] BasicTypeRegistry: Adding type registration java.sql.Time -> org.hibernate.type.TimeType@6f4adaab
2020-11-25 21:06:27,447 DEBUG  [main] BasicTypeRegistry: Adding type registration timestamp -> org.hibernate.type.TimestampType@2ac05a33
2020-11-25 21:06:27,447 DEBUG  [main] BasicTypeRegistry: Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@2ac05a33
2020-11-25 21:06:27,447 DEBUG  [main] BasicTypeRegistry: Adding type registration java.util.Date -> org.hibernate.type.TimestampType@2ac05a33
2020-11-25 21:06:27,447 DEBUG  [main] BasicTypeRegistry: Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@6aaa678d
2020-11-25 21:06:27,448 DEBUG  [main] BasicTypeRegistry: Adding type registration calendar -> org.hibernate.type.CalendarType@97beeaf
2020-11-25 21:06:27,448 DEBUG  [main] BasicTypeRegistry: Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@97beeaf
2020-11-25 21:06:27,448 DEBUG  [main] BasicTypeRegistry: Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@97beeaf
2020-11-25 21:06:27,448 DEBUG  [main] BasicTypeRegistry: Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@4c6fc3e7
2020-11-25 21:06:27,449 DEBUG  [main] BasicTypeRegistry: Adding type registration locale -> org.hibernate.type.LocaleType@1f6f0fe2
2020-11-25 21:06:27,449 DEBUG  [main] BasicTypeRegistry: Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@1f6f0fe2
2020-11-25 21:06:27,450 DEBUG  [main] BasicTypeRegistry: Adding type registration currency -> org.hibernate.type.CurrencyType@5b5b9521
2020-11-25 21:06:27,450 DEBUG  [main] BasicTypeRegistry: Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@5b5b9521
2020-11-25 21:06:27,450 DEBUG  [main] BasicTypeRegistry: Adding type registration timezone -> org.hibernate.type.TimeZoneType@3d718248
2020-11-25 21:06:27,450 DEBUG  [main] BasicTypeRegistry: Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@3d718248
2020-11-25 21:06:27,451 DEBUG  [main] BasicTypeRegistry: Adding type registration class -> org.hibernate.type.ClassType@38ebc866
2020-11-25 21:06:27,451 DEBUG  [main] BasicTypeRegistry: Adding type registration java.lang.Class -> org.hibernate.type.ClassType@38ebc866
2020-11-25 21:06:27,451 DEBUG  [main] BasicTypeRegistry: Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@949d347
2020-11-25 21:06:27,451 DEBUG  [main] BasicTypeRegistry: Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@949d347
2020-11-25 21:06:27,451 DEBUG  [main] BasicTypeRegistry: Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@2b90cc1
2020-11-25 21:06:27,451 DEBUG  [main] BasicTypeRegistry: Adding type registration binary -> org.hibernate.type.BinaryType@54556723
2020-11-25 21:06:27,452 DEBUG  [main] BasicTypeRegistry: Adding type registration byte[] -> org.hibernate.type.BinaryType@54556723
2020-11-25 21:06:27,452 DEBUG  [main] BasicTypeRegistry: Adding type registration [B -> org.hibernate.type.BinaryType@54556723
2020-11-25 21:06:27,452 DEBUG  [main] BasicTypeRegistry: Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@3534651a
2020-11-25 21:06:27,452 DEBUG  [main] BasicTypeRegistry: Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@3534651a
2020-11-25 21:06:27,452 DEBUG  [main] BasicTypeRegistry: Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@3534651a
2020-11-25 21:06:27,453 DEBUG  [main] BasicTypeRegistry: Adding type registration row_version -> org.hibernate.type.RowVersionType@65259c53
2020-11-25 21:06:27,453 DEBUG  [main] BasicTypeRegistry: Adding type registration image -> org.hibernate.type.ImageType@6c1f15df
2020-11-25 21:06:27,453 DEBUG  [main] BasicTypeRegistry: Adding type registration characters -> org.hibernate.type.CharArrayType@670a4738
2020-11-25 21:06:27,454 DEBUG  [main] BasicTypeRegistry: Adding type registration char[] -> org.hibernate.type.CharArrayType@670a4738
2020-11-25 21:06:27,454 DEBUG  [main] BasicTypeRegistry: Adding type registration [C -> org.hibernate.type.CharArrayType@670a4738
2020-11-25 21:06:27,454 DEBUG  [main] BasicTypeRegistry: Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@f237ae7
2020-11-25 21:06:27,457 DEBUG  [main] BasicTypeRegistry: Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@f237ae7
2020-11-25 21:06:27,457 DEBUG  [main] BasicTypeRegistry: Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@f237ae7
2020-11-25 21:06:27,458 DEBUG  [main] BasicTypeRegistry: Adding type registration text -> org.hibernate.type.TextType@6339e604
2020-11-25 21:06:27,458 DEBUG  [main] BasicTypeRegistry: Adding type registration ntext -> org.hibernate.type.NTextType@1f4d38f9
2020-11-25 21:06:27,460 DEBUG  [main] BasicTypeRegistry: Adding type registration blob -> org.hibernate.type.BlobType@4a58e0e9
2020-11-25 21:06:27,470 DEBUG  [main] BasicTypeRegistry: Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@4a58e0e9
2020-11-25 21:06:27,471 DEBUG  [main] BasicTypeRegistry: Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@25e95af1
2020-11-25 21:06:27,473 DEBUG  [main] BasicTypeRegistry: Adding type registration clob -> org.hibernate.type.ClobType@57b33c29
2020-11-25 21:06:27,474 DEBUG  [main] BasicTypeRegistry: Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@57b33c29
2020-11-25 21:06:27,474 DEBUG  [main] BasicTypeRegistry: Adding type registration nclob -> org.hibernate.type.NClobType@44e08a7a
2020-11-25 21:06:27,474 DEBUG  [main] BasicTypeRegistry: Adding type registration java.sql.NClob -> org.hibernate.type.NClobType@44e08a7a
2020-11-25 21:06:27,474 DEBUG  [main] BasicTypeRegistry: Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@795faad
2020-11-25 21:06:27,475 DEBUG  [main] BasicTypeRegistry: Adding type registration materialized_nclob -> org.hibernate.type.MaterializedNClobType@36511772
2020-11-25 21:06:27,475 DEBUG  [main] BasicTypeRegistry: Adding type registration serializable -> org.hibernate.type.SerializableType@3e5ebdfe
2020-11-25 21:06:27,475 DEBUG  [main] BasicTypeRegistry: Adding type registration object -> org.hibernate.type.ObjectType@1cb44a2f
2020-11-25 21:06:27,476 DEBUG  [main] BasicTypeRegistry: Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@1cb44a2f
2020-11-25 21:06:27,476 DEBUG  [main] BasicTypeRegistry: Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@36c45b54
2020-11-25 21:06:27,476 DEBUG  [main] BasicTypeRegistry: Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@2d6a6887
2020-11-25 21:06:27,477 DEBUG  [main] BasicTypeRegistry: Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@3e5d10fc
2020-11-25 21:06:27,477 DEBUG  [main] BasicTypeRegistry: Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@5da08e9a
2020-11-25 21:06:27,477 DEBUG  [main] BasicTypeRegistry: Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@49aa6081
2020-11-25 21:06:27,477 DEBUG  [main] BasicTypeRegistry: Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@377a1763
2020-11-25 21:06:27,477 DEBUG  [main] BasicTypeRegistry: Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@61f62b80
2020-11-25 21:06:27,477 DEBUG  [main] BasicTypeRegistry: Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@387bbd7a
2020-11-25 21:06:27,497 DEBUG  [main] TypeConfiguration$Scope: Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@669ae205] to MetadataBuildingContext [org.hibernate.boot.internal.MetadataBuildingContextRootImpl@19984625]
2020-11-25 21:06:27,512 DEBUG  [main] EnumType: Using NAMED-based conversion for Enum com.sf.back.entities.Kind
2020-11-25 21:06:27,516 DEBUG  [main] EnumType: Using NAMED-based conversion for Enum com.sf.back.entities.Kind
2020-11-25 21:06:27,543 DEBUG  [main] TypeConfiguration$Scope: Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@669ae205] to SessionFactoryImpl [org.hibernate.internal.SessionFactoryImpl@bc85538]
2020-11-25 21:06:27,544 DEBUG  [main] EnumType: Using NAMED-based conversion for Enum com.sf.back.entities.Kind
2020-11-25 21:06:27,544 DEBUG  [main] EnumType: Using NAMED-based conversion for Enum com.sf.back.entities.Kind
2020-11-25 21:06:27,545 DEBUG  [main] EnumType: Using NAMED-based conversion for Enum com.sf.back.entities.Kind
2020-11-25 21:06:27,546 DEBUG  [main] EnumType: Using NAMED-based conversion for Enum com.sf.back.entities.Kind
2020-11-25 21:06:27,556 DEBUG  [main] EnumType: Using NAMED-based conversion for Enum com.sf.back.entities.Kind
2020-11-25 21:06:27,556 DEBUG  [main] EnumType: Using NAMED-based conversion for Enum com.sf.back.entities.Kind
2020-11-25 21:06:27,567 DEBUG  [main] EnumType: Using NAMED-based conversion for Enum com.sf.back.entities.Kind
2020-11-25 21:06:27,577 TRACE  [main] TypeConfiguration$Scope: Handling #sessionFactoryCreated from [org.hibernate.internal.SessionFactoryImpl@bc85538] for TypeConfiguration
2020-11-25 21:06:27,862 WARN   [main] JpaBaseConfiguration$JpaWebConfiguration: spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2020-11-25 21:06:28,075 WARN   [main] GroovyTemplateAutoConfiguration: Cannot find template location: classpath:/templates/ (please add some templates, check your Groovy configuration, or set spring.groovy.template.check-template-location=false)
2020-11-25 21:06:28,160 TRACE  [main] BasicBinder: binding parameter [1] as [BLOB] - [[70, 105, 110, 100, 32, 97, 108, 108, 32, 114, 111, 111, 116, 115, 32, 111, 102, 32, 103, 105, 118, 101, 110, 32, 112, 111, 108, 121, 110, 111, 109, 105, 97, 108]]
2020-11-25 21:06:28,161 TRACE  [main] BasicBinder: binding parameter [2] as [BOOLEAN] - [false]
2020-11-25 21:06:28,161 TRACE  [main] BasicBinder: binding parameter [3] as [VARCHAR] - [POLYNOMIAL]
2020-11-25 21:06:28,162 TRACE  [main] BasicBinder: binding parameter [4] as [INTEGER] - [1]
2020-11-25 21:06:28,162 TRACE  [main] BasicBinder: binding parameter [5] as [BIGINT] - [null]
2020-11-25 21:06:28,163 TRACE  [main] BasicBinder: binding parameter [6] as [INTEGER] - [6]
2020-11-25 21:06:28,164 TRACE  [main] BasicBinder: binding parameter [1] as [BLOB] - [null]
2020-11-25 21:06:28,165 TRACE  [main] BasicBinder: binding parameter [2] as [DOUBLE] - [1.0]
2020-11-25 21:06:28,165 TRACE  [main] BasicBinder: binding parameter [3] as [INTEGER] - [0]
2020-11-25 21:06:28,165 TRACE  [main] BasicBinder: binding parameter [4] as [BOOLEAN] - [true]
2020-11-25 21:06:28,166 TRACE  [main] BasicBinder: binding parameter [5] as [INTEGER] - [0]
2020-11-25 21:06:28,166 TRACE  [main] BasicBinder: binding parameter [6] as [BIGINT] - [1]
2020-11-25 21:06:28,169 TRACE  [main] BasicBinder: binding parameter [1] as [BLOB] - [null]
2020-11-25 21:06:28,170 TRACE  [main] BasicBinder: binding parameter [2] as [DOUBLE] - [2.0]
2020-11-25 21:06:28,170 TRACE  [main] BasicBinder: binding parameter [3] as [INTEGER] - [0]
2020-11-25 21:06:28,170 TRACE  [main] BasicBinder: binding parameter [4] as [BOOLEAN] - [true]
2020-11-25 21:06:28,170 TRACE  [main] BasicBinder: binding parameter [5] as [INTEGER] - [1]
2020-11-25 21:06:28,170 TRACE  [main] BasicBinder: binding parameter [6] as [BIGINT] - [1]
2020-11-25 21:06:28,173 TRACE  [main] BasicBinder: binding parameter [1] as [BLOB] - [null]
2020-11-25 21:06:28,174 TRACE  [main] BasicBinder: binding parameter [2] as [DOUBLE] - [1.0]
2020-11-25 21:06:28,184 TRACE  [main] BasicBinder: binding parameter [3] as [INTEGER] - [0]
2020-11-25 21:06:28,184 TRACE  [main] BasicBinder: binding parameter [4] as [BOOLEAN] - [true]
2020-11-25 21:06:28,186 TRACE  [main] BasicBinder: binding parameter [5] as [INTEGER] - [2]
2020-11-25 21:06:28,187 TRACE  [main] BasicBinder: binding parameter [6] as [BIGINT] - [1]
2020-11-25 21:06:28,190 TRACE  [main] BasicBinder: binding parameter [1] as [BLOB] - [null]
2020-11-25 21:06:28,191 TRACE  [main] BasicBinder: binding parameter [2] as [DOUBLE] - [1.0]
2020-11-25 21:06:28,192 TRACE  [main] BasicBinder: binding parameter [3] as [INTEGER] - [0]
2020-11-25 21:06:28,193 TRACE  [main] BasicBinder: binding parameter [4] as [BOOLEAN] - [false]
2020-11-25 21:06:28,193 TRACE  [main] BasicBinder: binding parameter [5] as [INTEGER] - [0]
2020-11-25 21:06:28,193 TRACE  [main] BasicBinder: binding parameter [6] as [BIGINT] - [1]
2020-11-25 21:06:28,197 TRACE  [main] BasicBinder: binding parameter [1] as [BLOB] - [null]
2020-11-25 21:06:28,200 TRACE  [main] BasicBinder: binding parameter [2] as [DOUBLE] - [1.0]
2020-11-25 21:06:28,201 TRACE  [main] BasicBinder: binding parameter [3] as [INTEGER] - [0]
2020-11-25 21:06:28,201 TRACE  [main] BasicBinder: binding parameter [4] as [BOOLEAN] - [false]
2020-11-25 21:06:28,202 TRACE  [main] BasicBinder: binding parameter [5] as [INTEGER] - [1]
2020-11-25 21:06:28,202 TRACE  [main] BasicBinder: binding parameter [6] as [BIGINT] - [1]
2020-11-25 21:06:28,321 TRACE  [main] BasicBinder: binding parameter [1] as [BIGINT] - [2]
2020-11-25 21:06:28,326 TRACE  [main] BasicExtractor: extracted value ([id1_1_2_] : [BIGINT]) - [null]
2020-11-25 21:06:28,328 TRACE  [main] BasicExtractor: extracted value ([id1_0_4_] : [BIGINT]) - [null]
2020-11-25 21:06:28,336 TRACE  [main] BasicExtractor: extracted value ([descript2_1_0_] : [BLOB]) - [[112, 114, 111, 98, 108, 101, 109, 100, 101, 115, 99, 114, 105, 112, 116, 105, 111, 110]]
2020-11-25 21:06:28,337 TRACE  [main] BasicExtractor: extracted value ([is_solve3_1_0_] : [BOOLEAN]) - [null]
2020-11-25 21:06:28,337 TRACE  [main] BasicExtractor: extracted value ([kind4_1_0_] : [VARCHAR]) - [POLYNOMIAL]
2020-11-25 21:06:28,338 TRACE  [main] BasicExtractor: extracted value ([matrix_d5_1_0_] : [INTEGER]) - [1]
2020-11-25 21:06:28,339 TRACE  [main] BasicExtractor: extracted value ([parent_p7_1_0_] : [BIGINT]) - [null]
2020-11-25 21:06:28,339 TRACE  [main] BasicExtractor: extracted value ([problem_6_1_0_] : [INTEGER]) - [22]
2020-11-25 21:06:28,340 TRACE  [main] BasicExtractor: extracted value ([problem_7_0_3_] : [BIGINT]) - [null]
2020-11-25 21:06:28,340 TRACE  [main] BasicExtractor: extracted value ([parent_p7_1_1_] : [BIGINT]) - [null]
2020-11-25 21:06:28,348 TRACE  [main] CollectionType: Created collection wrapper: [com.sf.back.entities.Problem.matrixes#2]
2020-11-25 21:06:28,352 TRACE  [main] BasicBinder: binding parameter [1] as [BIGINT] - [2]
2020-11-25 21:06:28,353 TRACE  [main] BasicExtractor: extracted value ([id1_0_1_] : [BIGINT]) - [6]
2020-11-25 21:06:28,353 TRACE  [main] BasicExtractor: extracted value ([binary_v2_0_1_] : [BLOB]) - [null]
2020-11-25 21:06:28,364 TRACE  [main] BasicExtractor: extracted value ([float_va3_0_1_] : [DOUBLE]) - [1.0]
2020-11-25 21:06:28,364 TRACE  [main] BasicExtractor: extracted value ([i4_0_1_] : [INTEGER]) - [0]
2020-11-25 21:06:28,365 TRACE  [main] BasicExtractor: extracted value ([is_condi5_0_1_] : [BOOLEAN]) - [true]
2020-11-25 21:06:28,365 TRACE  [main] BasicExtractor: extracted value ([j6_0_1_] : [INTEGER]) - [0]
2020-11-25 21:06:28,365 TRACE  [main] BasicExtractor: extracted value ([problem_7_0_1_] : [BIGINT]) - [2]
2020-11-25 21:06:28,366 TRACE  [main] BasicExtractor: extracted value ([problem_7_0_0_] : [BIGINT]) - [2]
2020-11-25 21:06:28,366 TRACE  [main] BasicExtractor: extracted value ([id1_0_0_] : [BIGINT]) - [6]
2020-11-25 21:06:28,367 TRACE  [main] BasicExtractor: extracted value ([id1_0_1_] : [BIGINT]) - [7]
2020-11-25 21:06:28,368 TRACE  [main] BasicExtractor: extracted value ([binary_v2_0_1_] : [BLOB]) - [null]
2020-11-25 21:06:28,368 TRACE  [main] BasicExtractor: extracted value ([float_va3_0_1_] : [DOUBLE]) - [2.718281828459045]
2020-11-25 21:06:28,368 TRACE  [main] BasicExtractor: extracted value ([i4_0_1_] : [INTEGER]) - [0]
2020-11-25 21:06:28,368 TRACE  [main] BasicExtractor: extracted value ([is_condi5_0_1_] : [BOOLEAN]) - [true]
2020-11-25 21:06:28,368 TRACE  [main] BasicExtractor: extracted value ([j6_0_1_] : [INTEGER]) - [1]
2020-11-25 21:06:28,369 TRACE  [main] BasicExtractor: extracted value ([problem_7_0_1_] : [BIGINT]) - [2]
2020-11-25 21:06:28,369 TRACE  [main] BasicExtractor: extracted value ([problem_7_0_0_] : [BIGINT]) - [2]
2020-11-25 21:06:28,369 TRACE  [main] BasicExtractor: extracted value ([id1_0_0_] : [BIGINT]) - [7]
2020-11-25 21:06:28,369 TRACE  [main] BasicExtractor: extracted value ([id1_0_1_] : [BIGINT]) - [8]
2020-11-25 21:06:28,370 TRACE  [main] BasicExtractor: extracted value ([binary_v2_0_1_] : [BLOB]) - [null]
2020-11-25 21:06:28,370 TRACE  [main] BasicExtractor: extracted value ([float_va3_0_1_] : [DOUBLE]) - [7.38905609893065]
2020-11-25 21:06:28,370 TRACE  [main] BasicExtractor: extracted value ([i4_0_1_] : [INTEGER]) - [0]
2020-11-25 21:06:28,370 TRACE  [main] BasicExtractor: extracted value ([is_condi5_0_1_] : [BOOLEAN]) - [true]
2020-11-25 21:06:28,370 TRACE  [main] BasicExtractor: extracted value ([j6_0_1_] : [INTEGER]) - [2]
2020-11-25 21:06:28,372 TRACE  [main] BasicExtractor: extracted value ([problem_7_0_1_] : [BIGINT]) - [2]
2020-11-25 21:06:28,372 TRACE  [main] BasicExtractor: extracted value ([problem_7_0_0_] : [BIGINT]) - [2]
2020-11-25 21:06:28,372 TRACE  [main] BasicExtractor: extracted value ([id1_0_0_] : [BIGINT]) - [8]
2020-11-25 21:06:28,373 TRACE  [main] BasicExtractor: extracted value ([id1_0_1_] : [BIGINT]) - [9]
2020-11-25 21:06:28,373 TRACE  [main] BasicExtractor: extracted value ([binary_v2_0_1_] : [BLOB]) - [null]
2020-11-25 21:06:28,373 TRACE  [main] BasicExtractor: extracted value ([float_va3_0_1_] : [DOUBLE]) - [20.085536923187668]
2020-11-25 21:06:28,374 TRACE  [main] BasicExtractor: extracted value ([i4_0_1_] : [INTEGER]) - [0]
2020-11-25 21:06:28,374 TRACE  [main] BasicExtractor: extracted value ([is_condi5_0_1_] : [BOOLEAN]) - [true]
2020-11-25 21:06:28,374 TRACE  [main] BasicExtractor: extracted value ([j6_0_1_] : [INTEGER]) - [3]
2020-11-25 21:06:28,374 TRACE  [main] BasicExtractor: extracted value ([problem_7_0_1_] : [BIGINT]) - [2]
2020-11-25 21:06:28,375 TRACE  [main] BasicExtractor: extracted value ([problem_7_0_0_] : [BIGINT]) - [2]
2020-11-25 21:06:28,375 TRACE  [main] BasicExtractor: extracted value ([id1_0_0_] : [BIGINT]) - [9]
2020-11-25 21:06:28,375 TRACE  [main] BasicExtractor: extracted value ([id1_0_1_] : [BIGINT]) - [10]
2020-11-25 21:06:28,375 TRACE  [main] BasicExtractor: extracted value ([binary_v2_0_1_] : [BLOB]) - [null]
2020-11-25 21:06:28,376 TRACE  [main] BasicExtractor: extracted value ([float_va3_0_1_] : [DOUBLE]) - [54.598150033144236]
2020-11-25 21:06:28,376 TRACE  [main] BasicExtractor: extracted value ([i4_0_1_] : [INTEGER]) - [0]
2020-11-25 21:06:28,376 TRACE  [main] BasicExtractor: extracted value ([is_condi5_0_1_] : [BOOLEAN]) - [true]
2020-11-25 21:06:28,376 TRACE  [main] BasicExtractor: extracted value ([j6_0_1_] : [INTEGER]) - [4]
2020-11-25 21:06:28,376 TRACE  [main] BasicExtractor: extracted value ([problem_7_0_1_] : [BIGINT]) - [2]
2020-11-25 21:06:28,376 TRACE  [main] BasicExtractor: extracted value ([problem_7_0_0_] : [BIGINT]) - [2]
2020-11-25 21:06:28,376 TRACE  [main] BasicExtractor: extracted value ([id1_0_0_] : [BIGINT]) - [10]
2020-11-25 21:06:28,378 TRACE  [main] BasicExtractor: extracted value ([id1_0_1_] : [BIGINT]) - [11]
2020-11-25 21:06:28,378 TRACE  [main] BasicExtractor: extracted value ([binary_v2_0_1_] : [BLOB]) - [null]
2020-11-25 21:06:28,378 TRACE  [main] BasicExtractor: extracted value ([float_va3_0_1_] : [DOUBLE]) - [148.4131591025766]
2020-11-25 21:06:28,379 TRACE  [main] BasicExtractor: extracted value ([i4_0_1_] : [INTEGER]) - [0]
2020-11-25 21:06:28,379 TRACE  [main] BasicExtractor: extracted value ([is_condi5_0_1_] : [BOOLEAN]) - [true]
2020-11-25 21:06:28,379 TRACE  [main] BasicExtractor: extracted value ([j6_0_1_] : [INTEGER]) - [5]
2020-11-25 21:06:28,379 TRACE  [main] BasicExtractor: extracted value ([problem_7_0_1_] : [BIGINT]) - [2]
2020-11-25 21:06:28,380 TRACE  [main] BasicExtractor: extracted value ([problem_7_0_0_] : [BIGINT]) - [2]
2020-11-25 21:06:28,380 TRACE  [main] BasicExtractor: extracted value ([id1_0_0_] : [BIGINT]) - [11]
2020-11-25 21:06:28,477 TRACE  [main] BasicBinder: binding parameter [1] as [BIGINT] - [2]
2020-11-25 21:06:28,479 TRACE  [main] BasicExtractor: extracted value ([id1_1_2_] : [BIGINT]) - [null]
2020-11-25 21:06:28,479 TRACE  [main] BasicExtractor: extracted value ([id1_0_4_] : [BIGINT]) - [null]
2020-11-25 21:06:28,480 TRACE  [main] BasicExtractor: extracted value ([descript2_1_0_] : [BLOB]) - [[112, 114, 111, 98, 108, 101, 109, 100, 101, 115, 99, 114, 105, 112, 116, 105, 111, 110]]
2020-11-25 21:06:28,480 TRACE  [main] BasicExtractor: extracted value ([is_solve3_1_0_] : [BOOLEAN]) - [null]
2020-11-25 21:06:28,480 TRACE  [main] BasicExtractor: extracted value ([kind4_1_0_] : [VARCHAR]) - [POLYNOMIAL]
2020-11-25 21:06:28,480 TRACE  [main] BasicExtractor: extracted value ([matrix_d5_1_0_] : [INTEGER]) - [1]
2020-11-25 21:06:28,480 TRACE  [main] BasicExtractor: extracted value ([parent_p7_1_0_] : [BIGINT]) - [null]
2020-11-25 21:06:28,481 TRACE  [main] BasicExtractor: extracted value ([problem_6_1_0_] : [INTEGER]) - [22]
2020-11-25 21:06:28,481 TRACE  [main] BasicExtractor: extracted value ([problem_7_0_3_] : [BIGINT]) - [null]
2020-11-25 21:06:28,481 TRACE  [main] BasicExtractor: extracted value ([parent_p7_1_1_] : [BIGINT]) - [null]
2020-11-25 21:06:28,482 TRACE  [main] CollectionType: Created collection wrapper: [com.sf.back.entities.Problem.matrixes#2]
2020-11-25 21:06:28,483 TRACE  [main] BasicBinder: binding parameter [1] as [BIGINT] - [2]
2020-11-25 21:06:28,483 TRACE  [main] BasicExtractor: extracted value ([id1_0_1_] : [BIGINT]) - [6]
2020-11-25 21:06:28,484 TRACE  [main] BasicExtractor: extracted value ([binary_v2_0_1_] : [BLOB]) - [null]
2020-11-25 21:06:28,484 TRACE  [main] BasicExtractor: extracted value ([float_va3_0_1_] : [DOUBLE]) - [1.0]
2020-11-25 21:06:28,484 TRACE  [main] BasicExtractor: extracted value ([i4_0_1_] : [INTEGER]) - [0]
2020-11-25 21:06:28,485 TRACE  [main] BasicExtractor: extracted value ([is_condi5_0_1_] : [BOOLEAN]) - [true]
2020-11-25 21:06:28,485 TRACE  [main] BasicExtractor: extracted value ([j6_0_1_] : [INTEGER]) - [0]
2020-11-25 21:06:28,485 TRACE  [main] BasicExtractor: extracted value ([problem_7_0_1_] : [BIGINT]) - [2]
2020-11-25 21:06:28,485 TRACE  [main] BasicExtractor: extracted value ([problem_7_0_0_] : [BIGINT]) - [2]
2020-11-25 21:06:28,485 TRACE  [main] BasicExtractor: extracted value ([id1_0_0_] : [BIGINT]) - [6]
2020-11-25 21:06:28,486 TRACE  [main] BasicExtractor: extracted value ([id1_0_1_] : [BIGINT]) - [7]
2020-11-25 21:06:28,486 TRACE  [main] BasicExtractor: extracted value ([binary_v2_0_1_] : [BLOB]) - [null]
2020-11-25 21:06:28,486 TRACE  [main] BasicExtractor: extracted value ([float_va3_0_1_] : [DOUBLE]) - [2.718281828459045]
2020-11-25 21:06:28,486 TRACE  [main] BasicExtractor: extracted value ([i4_0_1_] : [INTEGER]) - [0]
2020-11-25 21:06:28,486 TRACE  [main] BasicExtractor: extracted value ([is_condi5_0_1_] : [BOOLEAN]) - [true]
2020-11-25 21:06:28,487 TRACE  [main] BasicExtractor: extracted value ([j6_0_1_] : [INTEGER]) - [1]
2020-11-25 21:06:28,487 TRACE  [main] BasicExtractor: extracted value ([problem_7_0_1_] : [BIGINT]) - [2]
2020-11-25 21:06:28,487 TRACE  [main] BasicExtractor: extracted value ([problem_7_0_0_] : [BIGINT]) - [2]
2020-11-25 21:06:28,487 TRACE  [main] BasicExtractor: extracted value ([id1_0_0_] : [BIGINT]) - [7]
2020-11-25 21:06:28,488 TRACE  [main] BasicExtractor: extracted value ([id1_0_1_] : [BIGINT]) - [8]
2020-11-25 21:06:28,488 TRACE  [main] BasicExtractor: extracted value ([binary_v2_0_1_] : [BLOB]) - [null]
2020-11-25 21:06:28,488 TRACE  [main] BasicExtractor: extracted value ([float_va3_0_1_] : [DOUBLE]) - [7.38905609893065]
2020-11-25 21:06:28,488 TRACE  [main] BasicExtractor: extracted value ([i4_0_1_] : [INTEGER]) - [0]
2020-11-25 21:06:28,488 TRACE  [main] BasicExtractor: extracted value ([is_condi5_0_1_] : [BOOLEAN]) - [true]
2020-11-25 21:06:28,488 TRACE  [main] BasicExtractor: extracted value ([j6_0_1_] : [INTEGER]) - [2]
2020-11-25 21:06:28,489 TRACE  [main] BasicExtractor: extracted value ([problem_7_0_1_] : [BIGINT]) - [2]
2020-11-25 21:06:28,489 TRACE  [main] BasicExtractor: extracted value ([problem_7_0_0_] : [BIGINT]) - [2]
2020-11-25 21:06:28,489 TRACE  [main] BasicExtractor: extracted value ([id1_0_0_] : [BIGINT]) - [8]
2020-11-25 21:06:28,489 TRACE  [main] BasicExtractor: extracted value ([id1_0_1_] : [BIGINT]) - [9]
2020-11-25 21:06:28,490 TRACE  [main] BasicExtractor: extracted value ([binary_v2_0_1_] : [BLOB]) - [null]
2020-11-25 21:06:28,490 TRACE  [main] BasicExtractor: extracted value ([float_va3_0_1_] : [DOUBLE]) - [20.085536923187668]
2020-11-25 21:06:28,490 TRACE  [main] BasicExtractor: extracted value ([i4_0_1_] : [INTEGER]) - [0]
2020-11-25 21:06:28,490 TRACE  [main] BasicExtractor: extracted value ([is_condi5_0_1_] : [BOOLEAN]) - [true]
2020-11-25 21:06:28,490 TRACE  [main] BasicExtractor: extracted value ([j6_0_1_] : [INTEGER]) - [3]
2020-11-25 21:06:28,491 TRACE  [main] BasicExtractor: extracted value ([problem_7_0_1_] : [BIGINT]) - [2]
2020-11-25 21:06:28,491 TRACE  [main] BasicExtractor: extracted value ([problem_7_0_0_] : [BIGINT]) - [2]
2020-11-25 21:06:28,491 TRACE  [main] BasicExtractor: extracted value ([id1_0_0_] : [BIGINT]) - [9]
2020-11-25 21:06:28,491 TRACE  [main] BasicExtractor: extracted value ([id1_0_1_] : [BIGINT]) - [10]
2020-11-25 21:06:28,491 TRACE  [main] BasicExtractor: extracted value ([binary_v2_0_1_] : [BLOB]) - [null]
2020-11-25 21:06:28,492 TRACE  [main] BasicExtractor: extracted value ([float_va3_0_1_] : [DOUBLE]) - [54.598150033144236]
2020-11-25 21:06:28,492 TRACE  [main] BasicExtractor: extracted value ([i4_0_1_] : [INTEGER]) - [0]
2020-11-25 21:06:28,492 TRACE  [main] BasicExtractor: extracted value ([is_condi5_0_1_] : [BOOLEAN]) - [true]
2020-11-25 21:06:28,492 TRACE  [main] BasicExtractor: extracted value ([j6_0_1_] : [INTEGER]) - [4]
2020-11-25 21:06:28,492 TRACE  [main] BasicExtractor: extracted value ([problem_7_0_1_] : [BIGINT]) - [2]
2020-11-25 21:06:28,492 TRACE  [main] BasicExtractor: extracted value ([problem_7_0_0_] : [BIGINT]) - [2]
2020-11-25 21:06:28,492 TRACE  [main] BasicExtractor: extracted value ([id1_0_0_] : [BIGINT]) - [10]
2020-11-25 21:06:28,493 TRACE  [main] BasicExtractor: extracted value ([id1_0_1_] : [BIGINT]) - [11]
2020-11-25 21:06:28,493 TRACE  [main] BasicExtractor: extracted value ([binary_v2_0_1_] : [BLOB]) - [null]
2020-11-25 21:06:28,493 TRACE  [main] BasicExtractor: extracted value ([float_va3_0_1_] : [DOUBLE]) - [148.4131591025766]
2020-11-25 21:06:28,493 TRACE  [main] BasicExtractor: extracted value ([i4_0_1_] : [INTEGER]) - [0]
2020-11-25 21:06:28,493 TRACE  [main] BasicExtractor: extracted value ([is_condi5_0_1_] : [BOOLEAN]) - [true]
2020-11-25 21:06:28,493 TRACE  [main] BasicExtractor: extracted value ([j6_0_1_] : [INTEGER]) - [5]
2020-11-25 21:06:28,494 TRACE  [main] BasicExtractor: extracted value ([problem_7_0_1_] : [BIGINT]) - [2]
2020-11-25 21:06:28,494 TRACE  [main] BasicExtractor: extracted value ([problem_7_0_0_] : [BIGINT]) - [2]
2020-11-25 21:06:28,494 TRACE  [main] BasicExtractor: extracted value ([id1_0_0_] : [BIGINT]) - [11]
2020-11-25 21:06:28,522 TRACE  [main] BasicBinder: binding parameter [1] as [BLOB] - [[100, 101, 115, 99, 114, 105, 112, 116, 105, 111, 110, 100, 101, 115, 99, 114, 105, 112, 116, 105, 111, 110]]
2020-11-25 21:06:28,523 TRACE  [main] BasicBinder: binding parameter [2] as [BOOLEAN] - [null]
2020-11-25 21:06:28,523 TRACE  [main] BasicBinder: binding parameter [3] as [VARCHAR] - [POLYNOMIAL]
2020-11-25 21:06:28,523 TRACE  [main] BasicBinder: binding parameter [4] as [INTEGER] - [1]
2020-11-25 21:06:28,523 TRACE  [main] BasicBinder: binding parameter [5] as [BIGINT] - [null]
2020-11-25 21:06:28,523 TRACE  [main] BasicBinder: binding parameter [6] as [INTEGER] - [22]
2020-11-25 21:06:28,524 TRACE  [main] BasicBinder: binding parameter [7] as [BIGINT] - [2]
2020-11-25 21:06:28,531 TRACE  [main] BasicBinder: binding parameter [1] as [BLOB] - [null]
2020-11-25 21:06:28,532 TRACE  [main] BasicBinder: binding parameter [2] as [DOUBLE] - [1.01]
2020-11-25 21:06:28,532 TRACE  [main] BasicBinder: binding parameter [3] as [INTEGER] - [0]
2020-11-25 21:06:28,532 TRACE  [main] BasicBinder: binding parameter [4] as [BOOLEAN] - [true]
2020-11-25 21:06:28,532 TRACE  [main] BasicBinder: binding parameter [5] as [INTEGER] - [0]
2020-11-25 21:06:28,533 TRACE  [main] BasicBinder: binding parameter [6] as [BIGINT] - [2]
2020-11-25 21:06:28,535 TRACE  [main] BasicBinder: binding parameter [7] as [BIGINT] - [6]
2020-11-25 21:06:28,539 TRACE  [main] BasicBinder: binding parameter [1] as [BIGINT] - [2]
2020-11-25 21:06:28,539 TRACE  [main] BasicExtractor: extracted value ([id1_1_2_] : [BIGINT]) - [null]
2020-11-25 21:06:28,540 TRACE  [main] BasicExtractor: extracted value ([id1_0_4_] : [BIGINT]) - [null]
2020-11-25 21:06:28,540 TRACE  [main] BasicExtractor: extracted value ([descript2_1_0_] : [BLOB]) - [[100, 101, 115, 99, 114, 105, 112, 116, 105, 111, 110, 100, 101, 115, 99, 114, 105, 112, 116, 105, 111, 110]]
2020-11-25 21:06:28,540 TRACE  [main] BasicExtractor: extracted value ([is_solve3_1_0_] : [BOOLEAN]) - [null]
2020-11-25 21:06:28,541 TRACE  [main] BasicExtractor: extracted value ([kind4_1_0_] : [VARCHAR]) - [POLYNOMIAL]
2020-11-25 21:06:28,541 TRACE  [main] BasicExtractor: extracted value ([matrix_d5_1_0_] : [INTEGER]) - [1]
2020-11-25 21:06:28,541 TRACE  [main] BasicExtractor: extracted value ([parent_p7_1_0_] : [BIGINT]) - [null]
2020-11-25 21:06:28,542 TRACE  [main] BasicExtractor: extracted value ([problem_6_1_0_] : [INTEGER]) - [22]
2020-11-25 21:06:28,542 TRACE  [main] BasicExtractor: extracted value ([problem_7_0_3_] : [BIGINT]) - [null]
2020-11-25 21:06:28,542 TRACE  [main] BasicExtractor: extracted value ([parent_p7_1_1_] : [BIGINT]) - [null]
2020-11-25 21:06:28,543 TRACE  [main] CollectionType: Created collection wrapper: [com.sf.back.entities.Problem.matrixes#2]
2020-11-25 21:06:28,543 TRACE  [main] BasicBinder: binding parameter [1] as [BIGINT] - [2]
2020-11-25 21:06:28,544 TRACE  [main] BasicExtractor: extracted value ([id1_0_1_] : [BIGINT]) - [6]
2020-11-25 21:06:28,544 TRACE  [main] BasicExtractor: extracted value ([binary_v2_0_1_] : [BLOB]) - [null]
2020-11-25 21:06:28,544 TRACE  [main] BasicExtractor: extracted value ([float_va3_0_1_] : [DOUBLE]) - [1.01]
2020-11-25 21:06:28,544 TRACE  [main] BasicExtractor: extracted value ([i4_0_1_] : [INTEGER]) - [0]
2020-11-25 21:06:28,544 TRACE  [main] BasicExtractor: extracted value ([is_condi5_0_1_] : [BOOLEAN]) - [true]
2020-11-25 21:06:28,545 TRACE  [main] BasicExtractor: extracted value ([j6_0_1_] : [INTEGER]) - [0]
2020-11-25 21:06:28,545 TRACE  [main] BasicExtractor: extracted value ([problem_7_0_1_] : [BIGINT]) - [2]
2020-11-25 21:06:28,545 TRACE  [main] BasicExtractor: extracted value ([problem_7_0_0_] : [BIGINT]) - [2]
2020-11-25 21:06:28,546 TRACE  [main] BasicExtractor: extracted value ([id1_0_0_] : [BIGINT]) - [6]
2020-11-25 21:06:28,546 TRACE  [main] BasicExtractor: extracted value ([id1_0_1_] : [BIGINT]) - [7]
2020-11-25 21:06:28,546 TRACE  [main] BasicExtractor: extracted value ([binary_v2_0_1_] : [BLOB]) - [null]
2020-11-25 21:06:28,546 TRACE  [main] BasicExtractor: extracted value ([float_va3_0_1_] : [DOUBLE]) - [2.718281828459045]
2020-11-25 21:06:28,546 TRACE  [main] BasicExtractor: extracted value ([i4_0_1_] : [INTEGER]) - [0]
2020-11-25 21:06:28,547 TRACE  [main] BasicExtractor: extracted value ([is_condi5_0_1_] : [BOOLEAN]) - [true]
2020-11-25 21:06:28,547 TRACE  [main] BasicExtractor: extracted value ([j6_0_1_] : [INTEGER]) - [1]
2020-11-25 21:06:28,547 TRACE  [main] BasicExtractor: extracted value ([problem_7_0_1_] : [BIGINT]) - [2]
2020-11-25 21:06:28,548 TRACE  [main] BasicExtractor: extracted value ([problem_7_0_0_] : [BIGINT]) - [2]
2020-11-25 21:06:28,548 TRACE  [main] BasicExtractor: extracted value ([id1_0_0_] : [BIGINT]) - [7]
2020-11-25 21:06:28,548 TRACE  [main] BasicExtractor: extracted value ([id1_0_1_] : [BIGINT]) - [8]
2020-11-25 21:06:28,548 TRACE  [main] BasicExtractor: extracted value ([binary_v2_0_1_] : [BLOB]) - [null]
2020-11-25 21:06:28,548 TRACE  [main] BasicExtractor: extracted value ([float_va3_0_1_] : [DOUBLE]) - [7.38905609893065]
2020-11-25 21:06:28,549 TRACE  [main] BasicExtractor: extracted value ([i4_0_1_] : [INTEGER]) - [0]
2020-11-25 21:06:28,549 TRACE  [main] BasicExtractor: extracted value ([is_condi5_0_1_] : [BOOLEAN]) - [true]
2020-11-25 21:06:28,550 TRACE  [main] BasicExtractor: extracted value ([j6_0_1_] : [INTEGER]) - [2]
2020-11-25 21:06:28,551 TRACE  [main] BasicExtractor: extracted value ([problem_7_0_1_] : [BIGINT]) - [2]
2020-11-25 21:06:28,552 TRACE  [main] BasicExtractor: extracted value ([problem_7_0_0_] : [BIGINT]) - [2]
2020-11-25 21:06:28,552 TRACE  [main] BasicExtractor: extracted value ([id1_0_0_] : [BIGINT]) - [8]
2020-11-25 21:06:28,553 TRACE  [main] BasicExtractor: extracted value ([id1_0_1_] : [BIGINT]) - [9]
2020-11-25 21:06:28,553 TRACE  [main] BasicExtractor: extracted value ([binary_v2_0_1_] : [BLOB]) - [null]
2020-11-25 21:06:28,553 TRACE  [main] BasicExtractor: extracted value ([float_va3_0_1_] : [DOUBLE]) - [20.085536923187668]
2020-11-25 21:06:28,553 TRACE  [main] BasicExtractor: extracted value ([i4_0_1_] : [INTEGER]) - [0]
2020-11-25 21:06:28,554 TRACE  [main] BasicExtractor: extracted value ([is_condi5_0_1_] : [BOOLEAN]) - [true]
2020-11-25 21:06:28,554 TRACE  [main] BasicExtractor: extracted value ([j6_0_1_] : [INTEGER]) - [3]
2020-11-25 21:06:28,554 TRACE  [main] BasicExtractor: extracted value ([problem_7_0_1_] : [BIGINT]) - [2]
2020-11-25 21:06:28,555 TRACE  [main] BasicExtractor: extracted value ([problem_7_0_0_] : [BIGINT]) - [2]
2020-11-25 21:06:28,555 TRACE  [main] BasicExtractor: extracted value ([id1_0_0_] : [BIGINT]) - [9]
2020-11-25 21:06:28,555 TRACE  [main] BasicExtractor: extracted value ([id1_0_1_] : [BIGINT]) - [10]
2020-11-25 21:06:28,555 TRACE  [main] BasicExtractor: extracted value ([binary_v2_0_1_] : [BLOB]) - [null]
2020-11-25 21:06:28,555 TRACE  [main] BasicExtractor: extracted value ([float_va3_0_1_] : [DOUBLE]) - [54.598150033144236]
2020-11-25 21:06:28,555 TRACE  [main] BasicExtractor: extracted value ([i4_0_1_] : [INTEGER]) - [0]
2020-11-25 21:06:28,555 TRACE  [main] BasicExtractor: extracted value ([is_condi5_0_1_] : [BOOLEAN]) - [true]
2020-11-25 21:06:28,556 TRACE  [main] BasicExtractor: extracted value ([j6_0_1_] : [INTEGER]) - [4]
2020-11-25 21:06:28,556 TRACE  [main] BasicExtractor: extracted value ([problem_7_0_1_] : [BIGINT]) - [2]
2020-11-25 21:06:28,556 TRACE  [main] BasicExtractor: extracted value ([problem_7_0_0_] : [BIGINT]) - [2]
2020-11-25 21:06:28,556 TRACE  [main] BasicExtractor: extracted value ([id1_0_0_] : [BIGINT]) - [10]
2020-11-25 21:06:28,556 TRACE  [main] BasicExtractor: extracted value ([id1_0_1_] : [BIGINT]) - [11]
2020-11-25 21:06:28,557 TRACE  [main] BasicExtractor: extracted value ([binary_v2_0_1_] : [BLOB]) - [null]
2020-11-25 21:06:28,557 TRACE  [main] BasicExtractor: extracted value ([float_va3_0_1_] : [DOUBLE]) - [148.4131591025766]
2020-11-25 21:06:28,557 TRACE  [main] BasicExtractor: extracted value ([i4_0_1_] : [INTEGER]) - [0]
2020-11-25 21:06:28,557 TRACE  [main] BasicExtractor: extracted value ([is_condi5_0_1_] : [BOOLEAN]) - [true]
2020-11-25 21:06:28,557 TRACE  [main] BasicExtractor: extracted value ([j6_0_1_] : [INTEGER]) - [5]
2020-11-25 21:06:28,558 TRACE  [main] BasicExtractor: extracted value ([problem_7_0_1_] : [BIGINT]) - [2]
2020-11-25 21:06:28,558 TRACE  [main] BasicExtractor: extracted value ([problem_7_0_0_] : [BIGINT]) - [2]
2020-11-25 21:06:28,558 TRACE  [main] BasicExtractor: extracted value ([id1_0_0_] : [BIGINT]) - [11]
2020-11-25 21:06:28,576 TRACE  [main] BasicBinder: binding parameter [1] as [BLOB] - [[100, 101, 115, 99, 114, 105, 112, 116, 105, 111, 110]]
2020-11-25 21:06:28,576 TRACE  [main] BasicBinder: binding parameter [2] as [BOOLEAN] - [false]
2020-11-25 21:06:28,576 TRACE  [main] BasicBinder: binding parameter [3] as [VARCHAR] - [POLYNOMIAL]
2020-11-25 21:06:28,576 TRACE  [main] BasicBinder: binding parameter [4] as [INTEGER] - [12]
2020-11-25 21:06:28,576 TRACE  [main] BasicBinder: binding parameter [5] as [BIGINT] - [null]
2020-11-25 21:06:28,577 TRACE  [main] BasicBinder: binding parameter [6] as [INTEGER] - [null]
2020-11-25 21:06:28,579 TRACE  [main] BasicBinder: binding parameter [1] as [BLOB] - [null]
2020-11-25 21:06:28,579 TRACE  [main] BasicBinder: binding parameter [2] as [DOUBLE] - [0.0]
2020-11-25 21:06:28,579 TRACE  [main] BasicBinder: binding parameter [3] as [INTEGER] - [0]
2020-11-25 21:06:28,579 TRACE  [main] BasicBinder: binding parameter [4] as [BOOLEAN] - [true]
2020-11-25 21:06:28,579 TRACE  [main] BasicBinder: binding parameter [5] as [INTEGER] - [0]
2020-11-25 21:06:28,580 TRACE  [main] BasicBinder: binding parameter [6] as [BIGINT] - [4]
2020-11-25 21:06:28,581 TRACE  [main] BasicBinder: binding parameter [1] as [BLOB] - [null]
2020-11-25 21:06:28,582 TRACE  [main] BasicBinder: binding parameter [2] as [DOUBLE] - [1.0]
2020-11-25 21:06:28,582 TRACE  [main] BasicBinder: binding parameter [3] as [INTEGER] - [0]
2020-11-25 21:06:28,582 TRACE  [main] BasicBinder: binding parameter [4] as [BOOLEAN] - [true]
2020-11-25 21:06:28,582 TRACE  [main] BasicBinder: binding parameter [5] as [INTEGER] - [1]
2020-11-25 21:06:28,583 TRACE  [main] BasicBinder: binding parameter [6] as [BIGINT] - [4]
2020-11-25 21:06:28,584 TRACE  [main] BasicBinder: binding parameter [1] as [BLOB] - [null]
2020-11-25 21:06:28,584 TRACE  [main] BasicBinder: binding parameter [2] as [DOUBLE] - [2.0]
2020-11-25 21:06:28,585 TRACE  [main] BasicBinder: binding parameter [3] as [INTEGER] - [0]
2020-11-25 21:06:28,585 TRACE  [main] BasicBinder: binding parameter [4] as [BOOLEAN] - [true]
2020-11-25 21:06:28,585 TRACE  [main] BasicBinder: binding parameter [5] as [INTEGER] - [2]
2020-11-25 21:06:28,585 TRACE  [main] BasicBinder: binding parameter [6] as [BIGINT] - [4]
2020-11-25 21:06:28,586 TRACE  [main] BasicBinder: binding parameter [1] as [BLOB] - [null]
2020-11-25 21:06:28,587 TRACE  [main] BasicBinder: binding parameter [2] as [DOUBLE] - [3.0]
2020-11-25 21:06:28,587 TRACE  [main] BasicBinder: binding parameter [3] as [INTEGER] - [0]
2020-11-25 21:06:28,587 TRACE  [main] BasicBinder: binding parameter [4] as [BOOLEAN] - [true]
2020-11-25 21:06:28,587 TRACE  [main] BasicBinder: binding parameter [5] as [INTEGER] - [3]
2020-11-25 21:06:28,587 TRACE  [main] BasicBinder: binding parameter [6] as [BIGINT] - [4]
2020-11-25 21:06:28,588 TRACE  [main] BasicBinder: binding parameter [1] as [BLOB] - [null]
2020-11-25 21:06:28,589 TRACE  [main] BasicBinder: binding parameter [2] as [DOUBLE] - [4.0]
2020-11-25 21:06:28,589 TRACE  [main] BasicBinder: binding parameter [3] as [INTEGER] - [0]
2020-11-25 21:06:28,589 TRACE  [main] BasicBinder: binding parameter [4] as [BOOLEAN] - [true]
2020-11-25 21:06:28,589 TRACE  [main] BasicBinder: binding parameter [5] as [INTEGER] - [4]
2020-11-25 21:06:28,589 TRACE  [main] BasicBinder: binding parameter [6] as [BIGINT] - [4]
2020-11-25 21:06:28,590 TRACE  [main] BasicBinder: binding parameter [1] as [BLOB] - [null]
2020-11-25 21:06:28,591 TRACE  [main] BasicBinder: binding parameter [2] as [DOUBLE] - [5.0]
2020-11-25 21:06:28,591 TRACE  [main] BasicBinder: binding parameter [3] as [INTEGER] - [0]
2020-11-25 21:06:28,591 TRACE  [main] BasicBinder: binding parameter [4] as [BOOLEAN] - [true]
2020-11-25 21:06:28,591 TRACE  [main] BasicBinder: binding parameter [5] as [INTEGER] - [5]
2020-11-25 21:06:28,591 TRACE  [main] BasicBinder: binding parameter [6] as [BIGINT] - [4]
2020-11-25 21:06:28,593 TRACE  [main] BasicBinder: binding parameter [1] as [BLOB] - [null]
2020-11-25 21:06:28,593 TRACE  [main] BasicBinder: binding parameter [2] as [DOUBLE] - [6.0]
2020-11-25 21:06:28,593 TRACE  [main] BasicBinder: binding parameter [3] as [INTEGER] - [0]
2020-11-25 21:06:28,593 TRACE  [main] BasicBinder: binding parameter [4] as [BOOLEAN] - [true]
2020-11-25 21:06:28,594 TRACE  [main] BasicBinder: binding parameter [5] as [INTEGER] - [6]
2020-11-25 21:06:28,594 TRACE  [main] BasicBinder: binding parameter [6] as [BIGINT] - [4]
2020-11-25 21:06:28,595 TRACE  [main] BasicBinder: binding parameter [1] as [BLOB] - [null]
2020-11-25 21:06:28,595 TRACE  [main] BasicBinder: binding parameter [2] as [DOUBLE] - [7.0]
2020-11-25 21:06:28,596 TRACE  [main] BasicBinder: binding parameter [3] as [INTEGER] - [0]
2020-11-25 21:06:28,596 TRACE  [main] BasicBinder: binding parameter [4] as [BOOLEAN] - [true]
2020-11-25 21:06:28,596 TRACE  [main] BasicBinder: binding parameter [5] as [INTEGER] - [7]
2020-11-25 21:06:28,596 TRACE  [main] BasicBinder: binding parameter [6] as [BIGINT] - [4]
2020-11-25 21:06:28,597 TRACE  [main] BasicBinder: binding parameter [1] as [BLOB] - [null]
2020-11-25 21:06:28,598 TRACE  [main] BasicBinder: binding parameter [2] as [DOUBLE] - [8.0]
2020-11-25 21:06:28,598 TRACE  [main] BasicBinder: binding parameter [3] as [INTEGER] - [0]
2020-11-25 21:06:28,598 TRACE  [main] BasicBinder: binding parameter [4] as [BOOLEAN] - [true]
2020-11-25 21:06:28,598 TRACE  [main] BasicBinder: binding parameter [5] as [INTEGER] - [8]
2020-11-25 21:06:28,598 TRACE  [main] BasicBinder: binding parameter [6] as [BIGINT] - [4]
2020-11-25 21:06:28,601 TRACE  [main] BasicBinder: binding parameter [1] as [BLOB] - [null]
2020-11-25 21:06:28,601 TRACE  [main] BasicBinder: binding parameter [2] as [DOUBLE] - [9.0]
2020-11-25 21:06:28,602 TRACE  [main] BasicBinder: binding parameter [3] as [INTEGER] - [0]
2020-11-25 21:06:28,602 TRACE  [main] BasicBinder: binding parameter [4] as [BOOLEAN] - [true]
2020-11-25 21:06:28,602 TRACE  [main] BasicBinder: binding parameter [5] as [INTEGER] - [9]
2020-11-25 21:06:28,602 TRACE  [main] BasicBinder: binding parameter [6] as [BIGINT] - [4]
2020-11-25 21:06:28,745 TRACE  [main] BasicExtractor: extracted value ([id1_1_] : [BIGINT]) - [1]
2020-11-25 21:06:28,745 TRACE  [main] BasicExtractor: extracted value ([descript2_1_] : [BLOB]) - [[70, 105, 110, 100, 32, 97, 108, 108, 32, 114, 111, 111, 116, 115, 32, 111, 102, 32, 103, 105, 118, 101, 110, 32, 112, 111, 108, 121, 110, 111, 109, 105, 97, 108]]
2020-11-25 21:06:28,745 TRACE  [main] BasicExtractor: extracted value ([is_solve3_1_] : [BOOLEAN]) - [false]
2020-11-25 21:06:28,746 TRACE  [main] BasicExtractor: extracted value ([kind4_1_] : [VARCHAR]) - [POLYNOMIAL]
2020-11-25 21:06:28,746 TRACE  [main] BasicExtractor: extracted value ([matrix_d5_1_] : [INTEGER]) - [1]
2020-11-25 21:06:28,746 TRACE  [main] BasicExtractor: extracted value ([parent_p7_1_] : [BIGINT]) - [null]
2020-11-25 21:06:28,746 TRACE  [main] BasicExtractor: extracted value ([problem_6_1_] : [INTEGER]) - [6]
2020-11-25 21:06:28,747 TRACE  [main] BasicExtractor: extracted value ([id1_1_] : [BIGINT]) - [2]
2020-11-25 21:06:28,747 TRACE  [main] BasicExtractor: extracted value ([descript2_1_] : [BLOB]) - [[100, 101, 115, 99, 114, 105, 112, 116, 105, 111, 110, 100, 101, 115, 99, 114, 105, 112, 116, 105, 111, 110]]
2020-11-25 21:06:28,747 TRACE  [main] BasicExtractor: extracted value ([is_solve3_1_] : [BOOLEAN]) - [null]
2020-11-25 21:06:28,747 TRACE  [main] BasicExtractor: extracted value ([kind4_1_] : [VARCHAR]) - [POLYNOMIAL]
2020-11-25 21:06:28,747 TRACE  [main] BasicExtractor: extracted value ([matrix_d5_1_] : [INTEGER]) - [1]
2020-11-25 21:06:28,748 TRACE  [main] BasicExtractor: extracted value ([parent_p7_1_] : [BIGINT]) - [null]
2020-11-25 21:06:28,748 TRACE  [main] BasicExtractor: extracted value ([problem_6_1_] : [INTEGER]) - [22]
2020-11-25 21:06:28,748 TRACE  [main] BasicExtractor: extracted value ([id1_1_] : [BIGINT]) - [3]
2020-11-25 21:06:28,748 TRACE  [main] BasicExtractor: extracted value ([descript2_1_] : [BLOB]) - [[112, 114, 111, 98, 108, 101, 109, 100, 101, 115, 99, 114, 105, 112, 116, 105, 111, 110]]
2020-11-25 21:06:28,748 TRACE  [main] BasicExtractor: extracted value ([is_solve3_1_] : [BOOLEAN]) - [null]
2020-11-25 21:06:28,749 TRACE  [main] BasicExtractor: extracted value ([kind4_1_] : [VARCHAR]) - [POLYNOMIAL]
2020-11-25 21:06:28,749 TRACE  [main] BasicExtractor: extracted value ([matrix_d5_1_] : [INTEGER]) - [1]
2020-11-25 21:06:28,749 TRACE  [main] BasicExtractor: extracted value ([parent_p7_1_] : [BIGINT]) - [null]
2020-11-25 21:06:28,749 TRACE  [main] BasicExtractor: extracted value ([problem_6_1_] : [INTEGER]) - [22]
2020-11-25 21:06:28,749 TRACE  [main] BasicExtractor: extracted value ([id1_1_] : [BIGINT]) - [4]
2020-11-25 21:06:28,750 TRACE  [main] BasicExtractor: extracted value ([descript2_1_] : [BLOB]) - [[100, 101, 115, 99, 114, 105, 112, 116, 105, 111, 110]]
2020-11-25 21:06:28,751 TRACE  [main] BasicExtractor: extracted value ([is_solve3_1_] : [BOOLEAN]) - [false]
2020-11-25 21:06:28,751 TRACE  [main] BasicExtractor: extracted value ([kind4_1_] : [VARCHAR]) - [POLYNOMIAL]
2020-11-25 21:06:28,751 TRACE  [main] BasicExtractor: extracted value ([matrix_d5_1_] : [INTEGER]) - [12]
2020-11-25 21:06:28,752 TRACE  [main] BasicExtractor: extracted value ([parent_p7_1_] : [BIGINT]) - [null]
2020-11-25 21:06:28,752 TRACE  [main] BasicExtractor: extracted value ([problem_6_1_] : [INTEGER]) - [null]
2020-11-25 21:06:28,752 TRACE  [main] BasicExtractor: extracted value ([id1_1_] : [BIGINT]) - [5]
2020-11-25 21:06:28,752 TRACE  [main] BasicExtractor: extracted value ([descript2_1_] : [BLOB]) - [[112, 114, 111, 98, 108, 101, 109, 100, 101, 115, 99, 114, 105, 112, 116, 105, 111, 110]]
2020-11-25 21:06:28,752 TRACE  [main] BasicExtractor: extracted value ([is_solve3_1_] : [BOOLEAN]) - [null]
2020-11-25 21:06:28,753 TRACE  [main] BasicExtractor: extracted value ([kind4_1_] : [VARCHAR]) - [POLYNOMIAL]
2020-11-25 21:06:28,753 TRACE  [main] BasicExtractor: extracted value ([matrix_d5_1_] : [INTEGER]) - [1]
2020-11-25 21:06:28,753 TRACE  [main] BasicExtractor: extracted value ([parent_p7_1_] : [BIGINT]) - [null]
2020-11-25 21:06:28,754 TRACE  [main] BasicExtractor: extracted value ([problem_6_1_] : [INTEGER]) - [22]
2020-11-25 21:06:28,754 TRACE  [main] CollectionType: Created collection wrapper: [com.sf.back.entities.Problem.children#1]
2020-11-25 21:06:28,755 TRACE  [main] CollectionType: Created collection wrapper: [com.sf.back.entities.Problem.matrixes#1]
2020-11-25 21:06:28,755 TRACE  [main] CollectionType: Created collection wrapper: [com.sf.back.entities.Problem.children#2]
2020-11-25 21:06:28,755 TRACE  [main] CollectionType: Created collection wrapper: [com.sf.back.entities.Problem.matrixes#2]
2020-11-25 21:06:28,756 TRACE  [main] CollectionType: Created collection wrapper: [com.sf.back.entities.Problem.children#3]
2020-11-25 21:06:28,756 TRACE  [main] CollectionType: Created collection wrapper: [com.sf.back.entities.Problem.matrixes#3]
2020-11-25 21:06:28,756 TRACE  [main] CollectionType: Created collection wrapper: [com.sf.back.entities.Problem.children#4]
2020-11-25 21:06:28,757 TRACE  [main] CollectionType: Created collection wrapper: [com.sf.back.entities.Problem.matrixes#4]
2020-11-25 21:06:28,757 TRACE  [main] CollectionType: Created collection wrapper: [com.sf.back.entities.Problem.children#5]
2020-11-25 21:06:28,757 TRACE  [main] CollectionType: Created collection wrapper: [com.sf.back.entities.Problem.matrixes#5]
2020-11-25 21:06:28,758 TRACE  [main] BasicBinder: binding parameter [1] as [BIGINT] - [5]
2020-11-25 21:06:28,759 TRACE  [main] BasicExtractor: extracted value ([id1_0_1_] : [BIGINT]) - [28]
2020-11-25 21:06:28,760 TRACE  [main] BasicExtractor: extracted value ([binary_v2_0_1_] : [BLOB]) - [null]
2020-11-25 21:06:28,760 TRACE  [main] BasicExtractor: extracted value ([float_va3_0_1_] : [DOUBLE]) - [1.0]
2020-11-25 21:06:28,760 TRACE  [main] BasicExtractor: extracted value ([i4_0_1_] : [INTEGER]) - [0]
2020-11-25 21:06:28,760 TRACE  [main] BasicExtractor: extracted value ([is_condi5_0_1_] : [BOOLEAN]) - [true]
2020-11-25 21:06:28,760 TRACE  [main] BasicExtractor: extracted value ([j6_0_1_] : [INTEGER]) - [0]
2020-11-25 21:06:28,761 TRACE  [main] BasicExtractor: extracted value ([problem_7_0_1_] : [BIGINT]) - [5]
2020-11-25 21:06:28,761 TRACE  [main] BasicExtractor: extracted value ([problem_7_0_0_] : [BIGINT]) - [5]
2020-11-25 21:06:28,761 TRACE  [main] BasicExtractor: extracted value ([id1_0_0_] : [BIGINT]) - [28]
2020-11-25 21:06:28,762 TRACE  [main] BasicExtractor: extracted value ([id1_0_1_] : [BIGINT]) - [29]
2020-11-25 21:06:28,762 TRACE  [main] BasicExtractor: extracted value ([binary_v2_0_1_] : [BLOB]) - [null]
2020-11-25 21:06:28,762 TRACE  [main] BasicExtractor: extracted value ([float_va3_0_1_] : [DOUBLE]) - [2.718281828459045]
2020-11-25 21:06:28,762 TRACE  [main] BasicExtractor: extracted value ([i4_0_1_] : [INTEGER]) - [0]
2020-11-25 21:06:28,762 TRACE  [main] BasicExtractor: extracted value ([is_condi5_0_1_] : [BOOLEAN]) - [true]
2020-11-25 21:06:28,762 TRACE  [main] BasicExtractor: extracted value ([j6_0_1_] : [INTEGER]) - [1]
2020-11-25 21:06:28,763 TRACE  [main] BasicExtractor: extracted value ([problem_7_0_1_] : [BIGINT]) - [5]
2020-11-25 21:06:28,763 TRACE  [main] BasicExtractor: extracted value ([problem_7_0_0_] : [BIGINT]) - [5]
2020-11-25 21:06:28,763 TRACE  [main] BasicExtractor: extracted value ([id1_0_0_] : [BIGINT]) - [29]
2020-11-25 21:06:28,763 TRACE  [main] BasicExtractor: extracted value ([id1_0_1_] : [BIGINT]) - [30]
2020-11-25 21:06:28,763 TRACE  [main] BasicExtractor: extracted value ([binary_v2_0_1_] : [BLOB]) - [null]
2020-11-25 21:06:28,764 TRACE  [main] BasicExtractor: extracted value ([float_va3_0_1_] : [DOUBLE]) - [7.38905609893065]
2020-11-25 21:06:28,764 TRACE  [main] BasicExtractor: extracted value ([i4_0_1_] : [INTEGER]) - [0]
2020-11-25 21:06:28,764 TRACE  [main] BasicExtractor: extracted value ([is_condi5_0_1_] : [BOOLEAN]) - [true]
2020-11-25 21:06:28,764 TRACE  [main] BasicExtractor: extracted value ([j6_0_1_] : [INTEGER]) - [2]
2020-11-25 21:06:28,764 TRACE  [main] BasicExtractor: extracted value ([problem_7_0_1_] : [BIGINT]) - [5]
2020-11-25 21:06:28,764 TRACE  [main] BasicExtractor: extracted value ([problem_7_0_0_] : [BIGINT]) - [5]
2020-11-25 21:06:28,764 TRACE  [main] BasicExtractor: extracted value ([id1_0_0_] : [BIGINT]) - [30]
2020-11-25 21:06:28,765 TRACE  [main] BasicExtractor: extracted value ([id1_0_1_] : [BIGINT]) - [31]
2020-11-25 21:06:28,765 TRACE  [main] BasicExtractor: extracted value ([binary_v2_0_1_] : [BLOB]) - [null]
2020-11-25 21:06:28,765 TRACE  [main] BasicExtractor: extracted value ([float_va3_0_1_] : [DOUBLE]) - [20.085536923187668]
2020-11-25 21:06:28,765 TRACE  [main] BasicExtractor: extracted value ([i4_0_1_] : [INTEGER]) - [0]
2020-11-25 21:06:28,766 TRACE  [main] BasicExtractor: extracted value ([is_condi5_0_1_] : [BOOLEAN]) - [true]
2020-11-25 21:06:28,766 TRACE  [main] BasicExtractor: extracted value ([j6_0_1_] : [INTEGER]) - [3]
2020-11-25 21:06:28,766 TRACE  [main] BasicExtractor: extracted value ([problem_7_0_1_] : [BIGINT]) - [5]
2020-11-25 21:06:28,766 TRACE  [main] BasicExtractor: extracted value ([problem_7_0_0_] : [BIGINT]) - [5]
2020-11-25 21:06:28,766 TRACE  [main] BasicExtractor: extracted value ([id1_0_0_] : [BIGINT]) - [31]
2020-11-25 21:06:28,768 TRACE  [main] BasicExtractor: extracted value ([id1_0_1_] : [BIGINT]) - [32]
2020-11-25 21:06:28,768 TRACE  [main] BasicExtractor: extracted value ([binary_v2_0_1_] : [BLOB]) - [null]
2020-11-25 21:06:28,769 TRACE  [main] BasicExtractor: extracted value ([float_va3_0_1_] : [DOUBLE]) - [54.598150033144236]
2020-11-25 21:06:28,769 TRACE  [main] BasicExtractor: extracted value ([i4_0_1_] : [INTEGER]) - [0]
2020-11-25 21:06:28,769 TRACE  [main] BasicExtractor: extracted value ([is_condi5_0_1_] : [BOOLEAN]) - [true]
2020-11-25 21:06:28,769 TRACE  [main] BasicExtractor: extracted value ([j6_0_1_] : [INTEGER]) - [4]
2020-11-25 21:06:28,769 TRACE  [main] BasicExtractor: extracted value ([problem_7_0_1_] : [BIGINT]) - [5]
2020-11-25 21:06:28,769 TRACE  [main] BasicExtractor: extracted value ([problem_7_0_0_] : [BIGINT]) - [5]
2020-11-25 21:06:28,770 TRACE  [main] BasicExtractor: extracted value ([id1_0_0_] : [BIGINT]) - [32]
2020-11-25 21:06:28,770 TRACE  [main] BasicExtractor: extracted value ([id1_0_1_] : [BIGINT]) - [33]
2020-11-25 21:06:28,770 TRACE  [main] BasicExtractor: extracted value ([binary_v2_0_1_] : [BLOB]) - [null]
2020-11-25 21:06:28,770 TRACE  [main] BasicExtractor: extracted value ([float_va3_0_1_] : [DOUBLE]) - [148.4131591025766]
2020-11-25 21:06:28,771 TRACE  [main] BasicExtractor: extracted value ([i4_0_1_] : [INTEGER]) - [0]
2020-11-25 21:06:28,771 TRACE  [main] BasicExtractor: extracted value ([is_condi5_0_1_] : [BOOLEAN]) - [true]
2020-11-25 21:06:28,771 TRACE  [main] BasicExtractor: extracted value ([j6_0_1_] : [INTEGER]) - [5]
2020-11-25 21:06:28,771 TRACE  [main] BasicExtractor: extracted value ([problem_7_0_1_] : [BIGINT]) - [5]
2020-11-25 21:06:28,771 TRACE  [main] BasicExtractor: extracted value ([problem_7_0_0_] : [BIGINT]) - [5]
2020-11-25 21:06:28,772 TRACE  [main] BasicExtractor: extracted value ([id1_0_0_] : [BIGINT]) - [33]
2020-11-25 21:06:28,775 TRACE  [main] BasicBinder: binding parameter [1] as [BIGINT] - [5]
2020-11-25 21:06:28,776 TRACE  [main] BasicBinder: binding parameter [1] as [BIGINT] - [4]
2020-11-25 21:06:28,777 TRACE  [main] BasicExtractor: extracted value ([id1_0_1_] : [BIGINT]) - [18]
2020-11-25 21:06:28,778 TRACE  [main] BasicExtractor: extracted value ([binary_v2_0_1_] : [BLOB]) - [null]
2020-11-25 21:06:28,778 TRACE  [main] BasicExtractor: extracted value ([float_va3_0_1_] : [DOUBLE]) - [0.0]
2020-11-25 21:06:28,778 TRACE  [main] BasicExtractor: extracted value ([i4_0_1_] : [INTEGER]) - [0]
2020-11-25 21:06:28,778 TRACE  [main] BasicExtractor: extracted value ([is_condi5_0_1_] : [BOOLEAN]) - [true]
2020-11-25 21:06:28,778 TRACE  [main] BasicExtractor: extracted value ([j6_0_1_] : [INTEGER]) - [0]
2020-11-25 21:06:28,778 TRACE  [main] BasicExtractor: extracted value ([problem_7_0_1_] : [BIGINT]) - [4]
2020-11-25 21:06:28,779 TRACE  [main] BasicExtractor: extracted value ([problem_7_0_0_] : [BIGINT]) - [4]
2020-11-25 21:06:28,779 TRACE  [main] BasicExtractor: extracted value ([id1_0_0_] : [BIGINT]) - [18]
2020-11-25 21:06:28,779 TRACE  [main] BasicExtractor: extracted value ([id1_0_1_] : [BIGINT]) - [19]
2020-11-25 21:06:28,780 TRACE  [main] BasicExtractor: extracted value ([binary_v2_0_1_] : [BLOB]) - [null]
2020-11-25 21:06:28,780 TRACE  [main] BasicExtractor: extracted value ([float_va3_0_1_] : [DOUBLE]) - [1.0]
2020-11-25 21:06:28,780 TRACE  [main] BasicExtractor: extracted value ([i4_0_1_] : [INTEGER]) - [0]
2020-11-25 21:06:28,780 TRACE  [main] BasicExtractor: extracted value ([is_condi5_0_1_] : [BOOLEAN]) - [true]
2020-11-25 21:06:28,780 TRACE  [main] BasicExtractor: extracted value ([j6_0_1_] : [INTEGER]) - [1]
2020-11-25 21:06:28,780 TRACE  [main] BasicExtractor: extracted value ([problem_7_0_1_] : [BIGINT]) - [4]
2020-11-25 21:06:28,780 TRACE  [main] BasicExtractor: extracted value ([problem_7_0_0_] : [BIGINT]) - [4]
2020-11-25 21:06:28,781 TRACE  [main] BasicExtractor: extracted value ([id1_0_0_] : [BIGINT]) - [19]
2020-11-25 21:06:28,781 TRACE  [main] BasicExtractor: extracted value ([id1_0_1_] : [BIGINT]) - [20]
2020-11-25 21:06:28,782 TRACE  [main] BasicExtractor: extracted value ([binary_v2_0_1_] : [BLOB]) - [null]
2020-11-25 21:06:28,782 TRACE  [main] BasicExtractor: extracted value ([float_va3_0_1_] : [DOUBLE]) - [2.0]
2020-11-25 21:06:28,782 TRACE  [main] BasicExtractor: extracted value ([i4_0_1_] : [INTEGER]) - [0]
2020-11-25 21:06:28,782 TRACE  [main] BasicExtractor: extracted value ([is_condi5_0_1_] : [BOOLEAN]) - [true]
2020-11-25 21:06:28,782 TRACE  [main] BasicExtractor: extracted value ([j6_0_1_] : [INTEGER]) - [2]
2020-11-25 21:06:28,782 TRACE  [main] BasicExtractor: extracted value ([problem_7_0_1_] : [BIGINT]) - [4]
2020-11-25 21:06:28,783 TRACE  [main] BasicExtractor: extracted value ([problem_7_0_0_] : [BIGINT]) - [4]
2020-11-25 21:06:28,783 TRACE  [main] BasicExtractor: extracted value ([id1_0_0_] : [BIGINT]) - [20]
2020-11-25 21:06:28,783 TRACE  [main] BasicExtractor: extracted value ([id1_0_1_] : [BIGINT]) - [21]
2020-11-25 21:06:28,784 TRACE  [main] BasicExtractor: extracted value ([binary_v2_0_1_] : [BLOB]) - [null]
2020-11-25 21:06:28,784 TRACE  [main] BasicExtractor: extracted value ([float_va3_0_1_] : [DOUBLE]) - [3.0]
2020-11-25 21:06:28,784 TRACE  [main] BasicExtractor: extracted value ([i4_0_1_] : [INTEGER]) - [0]
2020-11-25 21:06:28,784 TRACE  [main] BasicExtractor: extracted value ([is_condi5_0_1_] : [BOOLEAN]) - [true]
2020-11-25 21:06:28,784 TRACE  [main] BasicExtractor: extracted value ([j6_0_1_] : [INTEGER]) - [3]
2020-11-25 21:06:28,785 TRACE  [main] BasicExtractor: extracted value ([problem_7_0_1_] : [BIGINT]) - [4]
2020-11-25 21:06:28,785 TRACE  [main] BasicExtractor: extracted value ([problem_7_0_0_] : [BIGINT]) - [4]
2020-11-25 21:06:28,785 TRACE  [main] BasicExtractor: extracted value ([id1_0_0_] : [BIGINT]) - [21]
2020-11-25 21:06:28,786 TRACE  [main] BasicExtractor: extracted value ([id1_0_1_] : [BIGINT]) - [22]
2020-11-25 21:06:28,788 TRACE  [main] BasicExtractor: extracted value ([binary_v2_0_1_] : [BLOB]) - [null]
2020-11-25 21:06:28,788 TRACE  [main] BasicExtractor: extracted value ([float_va3_0_1_] : [DOUBLE]) - [4.0]
2020-11-25 21:06:28,788 TRACE  [main] BasicExtractor: extracted value ([i4_0_1_] : [INTEGER]) - [0]
2020-11-25 21:06:28,788 TRACE  [main] BasicExtractor: extracted value ([is_condi5_0_1_] : [BOOLEAN]) - [true]
2020-11-25 21:06:28,788 TRACE  [main] BasicExtractor: extracted value ([j6_0_1_] : [INTEGER]) - [4]
2020-11-25 21:06:28,789 TRACE  [main] BasicExtractor: extracted value ([problem_7_0_1_] : [BIGINT]) - [4]
2020-11-25 21:06:28,789 TRACE  [main] BasicExtractor: extracted value ([problem_7_0_0_] : [BIGINT]) - [4]
2020-11-25 21:06:28,789 TRACE  [main] BasicExtractor: extracted value ([id1_0_0_] : [BIGINT]) - [22]
2020-11-25 21:06:28,789 TRACE  [main] BasicExtractor: extracted value ([id1_0_1_] : [BIGINT]) - [23]
2020-11-25 21:06:28,790 TRACE  [main] BasicExtractor: extracted value ([binary_v2_0_1_] : [BLOB]) - [null]
2020-11-25 21:06:28,790 TRACE  [main] BasicExtractor: extracted value ([float_va3_0_1_] : [DOUBLE]) - [5.0]
2020-11-25 21:06:28,790 TRACE  [main] BasicExtractor: extracted value ([i4_0_1_] : [INTEGER]) - [0]
2020-11-25 21:06:28,790 TRACE  [main] BasicExtractor: extracted value ([is_condi5_0_1_] : [BOOLEAN]) - [true]
2020-11-25 21:06:28,790 TRACE  [main] BasicExtractor: extracted value ([j6_0_1_] : [INTEGER]) - [5]
2020-11-25 21:06:28,790 TRACE  [main] BasicExtractor: extracted value ([problem_7_0_1_] : [BIGINT]) - [4]
2020-11-25 21:06:28,791 TRACE  [main] BasicExtractor: extracted value ([problem_7_0_0_] : [BIGINT]) - [4]
2020-11-25 21:06:28,791 TRACE  [main] BasicExtractor: extracted value ([id1_0_0_] : [BIGINT]) - [23]
2020-11-25 21:06:28,791 TRACE  [main] BasicExtractor: extracted value ([id1_0_1_] : [BIGINT]) - [24]
2020-11-25 21:06:28,792 TRACE  [main] BasicExtractor: extracted value ([binary_v2_0_1_] : [BLOB]) - [null]
2020-11-25 21:06:28,792 TRACE  [main] BasicExtractor: extracted value ([float_va3_0_1_] : [DOUBLE]) - [6.0]
2020-11-25 21:06:28,793 TRACE  [main] BasicExtractor: extracted value ([i4_0_1_] : [INTEGER]) - [0]
2020-11-25 21:06:28,793 TRACE  [main] BasicExtractor: extracted value ([is_condi5_0_1_] : [BOOLEAN]) - [true]
2020-11-25 21:06:28,793 TRACE  [main] BasicExtractor: extracted value ([j6_0_1_] : [INTEGER]) - [6]
2020-11-25 21:06:28,794 TRACE  [main] BasicExtractor: extracted value ([problem_7_0_1_] : [BIGINT]) - [4]
2020-11-25 21:06:28,794 TRACE  [main] BasicExtractor: extracted value ([problem_7_0_0_] : [BIGINT]) - [4]
2020-11-25 21:06:28,794 TRACE  [main] BasicExtractor: extracted value ([id1_0_0_] : [BIGINT]) - [24]
2020-11-25 21:06:28,795 TRACE  [main] BasicExtractor: extracted value ([id1_0_1_] : [BIGINT]) - [25]
2020-11-25 21:06:28,795 TRACE  [main] BasicExtractor: extracted value ([binary_v2_0_1_] : [BLOB]) - [null]
2020-11-25 21:06:28,795 TRACE  [main] BasicExtractor: extracted value ([float_va3_0_1_] : [DOUBLE]) - [7.0]
2020-11-25 21:06:28,795 TRACE  [main] BasicExtractor: extracted value ([i4_0_1_] : [INTEGER]) - [0]
2020-11-25 21:06:28,795 TRACE  [main] BasicExtractor: extracted value ([is_condi5_0_1_] : [BOOLEAN]) - [true]
2020-11-25 21:06:28,795 TRACE  [main] BasicExtractor: extracted value ([j6_0_1_] : [INTEGER]) - [7]
2020-11-25 21:06:28,796 TRACE  [main] BasicExtractor: extracted value ([problem_7_0_1_] : [BIGINT]) - [4]
2020-11-25 21:06:28,796 TRACE  [main] BasicExtractor: extracted value ([problem_7_0_0_] : [BIGINT]) - [4]
2020-11-25 21:06:28,796 TRACE  [main] BasicExtractor: extracted value ([id1_0_0_] : [BIGINT]) - [25]
2020-11-25 21:06:28,796 TRACE  [main] BasicExtractor: extracted value ([id1_0_1_] : [BIGINT]) - [26]
2020-11-25 21:06:28,796 TRACE  [main] BasicExtractor: extracted value ([binary_v2_0_1_] : [BLOB]) - [null]
2020-11-25 21:06:28,796 TRACE  [main] BasicExtractor: extracted value ([float_va3_0_1_] : [DOUBLE]) - [8.0]
2020-11-25 21:06:28,797 TRACE  [main] BasicExtractor: extracted value ([i4_0_1_] : [INTEGER]) - [0]
2020-11-25 21:06:28,797 TRACE  [main] BasicExtractor: extracted value ([is_condi5_0_1_] : [BOOLEAN]) - [true]
2020-11-25 21:06:28,797 TRACE  [main] BasicExtractor: extracted value ([j6_0_1_] : [INTEGER]) - [8]
2020-11-25 21:06:28,797 TRACE  [main] BasicExtractor: extracted value ([problem_7_0_1_] : [BIGINT]) - [4]
2020-11-25 21:06:28,797 TRACE  [main] BasicExtractor: extracted value ([problem_7_0_0_] : [BIGINT]) - [4]
2020-11-25 21:06:28,798 TRACE  [main] BasicExtractor: extracted value ([id1_0_0_] : [BIGINT]) - [26]
2020-11-25 21:06:28,799 TRACE  [main] BasicExtractor: extracted value ([id1_0_1_] : [BIGINT]) - [27]
2020-11-25 21:06:28,799 TRACE  [main] BasicExtractor: extracted value ([binary_v2_0_1_] : [BLOB]) - [null]
2020-11-25 21:06:28,799 TRACE  [main] BasicExtractor: extracted value ([float_va3_0_1_] : [DOUBLE]) - [9.0]
2020-11-25 21:06:28,799 TRACE  [main] BasicExtractor: extracted value ([i4_0_1_] : [INTEGER]) - [0]
2020-11-25 21:06:28,799 TRACE  [main] BasicExtractor: extracted value ([is_condi5_0_1_] : [BOOLEAN]) - [true]
2020-11-25 21:06:28,799 TRACE  [main] BasicExtractor: extracted value ([j6_0_1_] : [INTEGER]) - [9]
2020-11-25 21:06:28,800 TRACE  [main] BasicExtractor: extracted value ([problem_7_0_1_] : [BIGINT]) - [4]
2020-11-25 21:06:28,800 TRACE  [main] BasicExtractor: extracted value ([problem_7_0_0_] : [BIGINT]) - [4]
2020-11-25 21:06:28,800 TRACE  [main] BasicExtractor: extracted value ([id1_0_0_] : [BIGINT]) - [27]
2020-11-25 21:06:28,802 TRACE  [main] BasicBinder: binding parameter [1] as [BIGINT] - [4]
2020-11-25 21:06:28,803 TRACE  [main] BasicBinder: binding parameter [1] as [BIGINT] - [3]
2020-11-25 21:06:28,804 TRACE  [main] BasicExtractor: extracted value ([id1_0_1_] : [BIGINT]) - [12]
2020-11-25 21:06:28,805 TRACE  [main] BasicExtractor: extracted value ([binary_v2_0_1_] : [BLOB]) - [null]
2020-11-25 21:06:28,805 TRACE  [main] BasicExtractor: extracted value ([float_va3_0_1_] : [DOUBLE]) - [1.0]
2020-11-25 21:06:28,805 TRACE  [main] BasicExtractor: extracted value ([i4_0_1_] : [INTEGER]) - [0]
2020-11-25 21:06:28,805 TRACE  [main] BasicExtractor: extracted value ([is_condi5_0_1_] : [BOOLEAN]) - [true]
2020-11-25 21:06:28,805 TRACE  [main] BasicExtractor: extracted value ([j6_0_1_] : [INTEGER]) - [0]
2020-11-25 21:06:28,806 TRACE  [main] BasicExtractor: extracted value ([problem_7_0_1_] : [BIGINT]) - [3]
2020-11-25 21:06:28,806 TRACE  [main] BasicExtractor: extracted value ([problem_7_0_0_] : [BIGINT]) - [3]
2020-11-25 21:06:28,806 TRACE  [main] BasicExtractor: extracted value ([id1_0_0_] : [BIGINT]) - [12]
2020-11-25 21:06:28,806 TRACE  [main] BasicExtractor: extracted value ([id1_0_1_] : [BIGINT]) - [13]
2020-11-25 21:06:28,807 TRACE  [main] BasicExtractor: extracted value ([binary_v2_0_1_] : [BLOB]) - [null]
2020-11-25 21:06:28,807 TRACE  [main] BasicExtractor: extracted value ([float_va3_0_1_] : [DOUBLE]) - [2.718281828459045]
2020-11-25 21:06:28,807 TRACE  [main] BasicExtractor: extracted value ([i4_0_1_] : [INTEGER]) - [0]
2020-11-25 21:06:28,807 TRACE  [main] BasicExtractor: extracted value ([is_condi5_0_1_] : [BOOLEAN]) - [true]
2020-11-25 21:06:28,807 TRACE  [main] BasicExtractor: extracted value ([j6_0_1_] : [INTEGER]) - [1]
2020-11-25 21:06:28,807 TRACE  [main] BasicExtractor: extracted value ([problem_7_0_1_] : [BIGINT]) - [3]
2020-11-25 21:06:28,808 TRACE  [main] BasicExtractor: extracted value ([problem_7_0_0_] : [BIGINT]) - [3]
2020-11-25 21:06:28,808 TRACE  [main] BasicExtractor: extracted value ([id1_0_0_] : [BIGINT]) - [13]
2020-11-25 21:06:28,808 TRACE  [main] BasicExtractor: extracted value ([id1_0_1_] : [BIGINT]) - [14]
2020-11-25 21:06:28,808 TRACE  [main] BasicExtractor: extracted value ([binary_v2_0_1_] : [BLOB]) - [null]
2020-11-25 21:06:28,808 TRACE  [main] BasicExtractor: extracted value ([float_va3_0_1_] : [DOUBLE]) - [7.38905609893065]
2020-11-25 21:06:28,808 TRACE  [main] BasicExtractor: extracted value ([i4_0_1_] : [INTEGER]) - [0]
2020-11-25 21:06:28,809 TRACE  [main] BasicExtractor: extracted value ([is_condi5_0_1_] : [BOOLEAN]) - [true]
2020-11-25 21:06:28,809 TRACE  [main] BasicExtractor: extracted value ([j6_0_1_] : [INTEGER]) - [2]
2020-11-25 21:06:28,809 TRACE  [main] BasicExtractor: extracted value ([problem_7_0_1_] : [BIGINT]) - [3]
2020-11-25 21:06:28,809 TRACE  [main] BasicExtractor: extracted value ([problem_7_0_0_] : [BIGINT]) - [3]
2020-11-25 21:06:28,809 TRACE  [main] BasicExtractor: extracted value ([id1_0_0_] : [BIGINT]) - [14]
2020-11-25 21:06:28,810 TRACE  [main] BasicExtractor: extracted value ([id1_0_1_] : [BIGINT]) - [15]
2020-11-25 21:06:28,810 TRACE  [main] BasicExtractor: extracted value ([binary_v2_0_1_] : [BLOB]) - [null]
2020-11-25 21:06:28,810 TRACE  [main] BasicExtractor: extracted value ([float_va3_0_1_] : [DOUBLE]) - [20.085536923187668]
2020-11-25 21:06:28,811 TRACE  [main] BasicExtractor: extracted value ([i4_0_1_] : [INTEGER]) - [0]
2020-11-25 21:06:28,811 TRACE  [main] BasicExtractor: extracted value ([is_condi5_0_1_] : [BOOLEAN]) - [true]
2020-11-25 21:06:28,811 TRACE  [main] BasicExtractor: extracted value ([j6_0_1_] : [INTEGER]) - [3]
2020-11-25 21:06:28,811 TRACE  [main] BasicExtractor: extracted value ([problem_7_0_1_] : [BIGINT]) - [3]
2020-11-25 21:06:28,811 TRACE  [main] BasicExtractor: extracted value ([problem_7_0_0_] : [BIGINT]) - [3]
2020-11-25 21:06:28,811 TRACE  [main] BasicExtractor: extracted value ([id1_0_0_] : [BIGINT]) - [15]
2020-11-25 21:06:28,812 TRACE  [main] BasicExtractor: extracted value ([id1_0_1_] : [BIGINT]) - [16]
2020-11-25 21:06:28,812 TRACE  [main] BasicExtractor: extracted value ([binary_v2_0_1_] : [BLOB]) - [null]
2020-11-25 21:06:28,812 TRACE  [main] BasicExtractor: extracted value ([float_va3_0_1_] : [DOUBLE]) - [54.598150033144236]
2020-11-25 21:06:28,812 TRACE  [main] BasicExtractor: extracted value ([i4_0_1_] : [INTEGER]) - [0]
2020-11-25 21:06:28,812 TRACE  [main] BasicExtractor: extracted value ([is_condi5_0_1_] : [BOOLEAN]) - [true]
2020-11-25 21:06:28,812 TRACE  [main] BasicExtractor: extracted value ([j6_0_1_] : [INTEGER]) - [4]
2020-11-25 21:06:28,812 TRACE  [main] BasicExtractor: extracted value ([problem_7_0_1_] : [BIGINT]) - [3]
2020-11-25 21:06:28,813 TRACE  [main] BasicExtractor: extracted value ([problem_7_0_0_] : [BIGINT]) - [3]
2020-11-25 21:06:28,813 TRACE  [main] BasicExtractor: extracted value ([id1_0_0_] : [BIGINT]) - [16]
2020-11-25 21:06:28,813 TRACE  [main] BasicExtractor: extracted value ([id1_0_1_] : [BIGINT]) - [17]
2020-11-25 21:06:28,813 TRACE  [main] BasicExtractor: extracted value ([binary_v2_0_1_] : [BLOB]) - [null]
2020-11-25 21:06:28,814 TRACE  [main] BasicExtractor: extracted value ([float_va3_0_1_] : [DOUBLE]) - [148.4131591025766]
2020-11-25 21:06:28,814 TRACE  [main] BasicExtractor: extracted value ([i4_0_1_] : [INTEGER]) - [0]
2020-11-25 21:06:28,814 TRACE  [main] BasicExtractor: extracted value ([is_condi5_0_1_] : [BOOLEAN]) - [true]
2020-11-25 21:06:28,814 TRACE  [main] BasicExtractor: extracted value ([j6_0_1_] : [INTEGER]) - [5]
2020-11-25 21:06:28,814 TRACE  [main] BasicExtractor: extracted value ([problem_7_0_1_] : [BIGINT]) - [3]
2020-11-25 21:06:28,814 TRACE  [main] BasicExtractor: extracted value ([problem_7_0_0_] : [BIGINT]) - [3]
2020-11-25 21:06:28,815 TRACE  [main] BasicExtractor: extracted value ([id1_0_0_] : [BIGINT]) - [17]
2020-11-25 21:06:28,815 TRACE  [main] BasicBinder: binding parameter [1] as [BIGINT] - [3]
2020-11-25 21:06:28,817 TRACE  [main] BasicBinder: binding parameter [1] as [BIGINT] - [2]
2020-11-25 21:06:28,818 TRACE  [main] BasicExtractor: extracted value ([id1_0_1_] : [BIGINT]) - [6]
2020-11-25 21:06:28,818 TRACE  [main] BasicExtractor: extracted value ([binary_v2_0_1_] : [BLOB]) - [null]
2020-11-25 21:06:28,819 TRACE  [main] BasicExtractor: extracted value ([float_va3_0_1_] : [DOUBLE]) - [1.01]
2020-11-25 21:06:28,819 TRACE  [main] BasicExtractor: extracted value ([i4_0_1_] : [INTEGER]) - [0]
2020-11-25 21:06:28,819 TRACE  [main] BasicExtractor: extracted value ([is_condi5_0_1_] : [BOOLEAN]) - [true]
2020-11-25 21:06:28,819 TRACE  [main] BasicExtractor: extracted value ([j6_0_1_] : [INTEGER]) - [0]
2020-11-25 21:06:28,819 TRACE  [main] BasicExtractor: extracted value ([problem_7_0_1_] : [BIGINT]) - [2]
2020-11-25 21:06:28,819 TRACE  [main] BasicExtractor: extracted value ([problem_7_0_0_] : [BIGINT]) - [2]
2020-11-25 21:06:28,820 TRACE  [main] BasicExtractor: extracted value ([id1_0_0_] : [BIGINT]) - [6]
2020-11-25 21:06:28,820 TRACE  [main] BasicExtractor: extracted value ([id1_0_1_] : [BIGINT]) - [7]
2020-11-25 21:06:28,820 TRACE  [main] BasicExtractor: extracted value ([binary_v2_0_1_] : [BLOB]) - [null]
2020-11-25 21:06:28,821 TRACE  [main] BasicExtractor: extracted value ([float_va3_0_1_] : [DOUBLE]) - [2.718281828459045]
2020-11-25 21:06:28,821 TRACE  [main] BasicExtractor: extracted value ([i4_0_1_] : [INTEGER]) - [0]
2020-11-25 21:06:28,821 TRACE  [main] BasicExtractor: extracted value ([is_condi5_0_1_] : [BOOLEAN]) - [true]
2020-11-25 21:06:28,821 TRACE  [main] BasicExtractor: extracted value ([j6_0_1_] : [INTEGER]) - [1]
2020-11-25 21:06:28,821 TRACE  [main] BasicExtractor: extracted value ([problem_7_0_1_] : [BIGINT]) - [2]
2020-11-25 21:06:28,821 TRACE  [main] BasicExtractor: extracted value ([problem_7_0_0_] : [BIGINT]) - [2]
2020-11-25 21:06:28,822 TRACE  [main] BasicExtractor: extracted value ([id1_0_0_] : [BIGINT]) - [7]
2020-11-25 21:06:28,822 TRACE  [main] BasicExtractor: extracted value ([id1_0_1_] : [BIGINT]) - [8]
2020-11-25 21:06:28,822 TRACE  [main] BasicExtractor: extracted value ([binary_v2_0_1_] : [BLOB]) - [null]
2020-11-25 21:06:28,822 TRACE  [main] BasicExtractor: extracted value ([float_va3_0_1_] : [DOUBLE]) - [7.38905609893065]
2020-11-25 21:06:28,822 TRACE  [main] BasicExtractor: extracted value ([i4_0_1_] : [INTEGER]) - [0]
2020-11-25 21:06:28,823 TRACE  [main] BasicExtractor: extracted value ([is_condi5_0_1_] : [BOOLEAN]) - [true]
2020-11-25 21:06:28,823 TRACE  [main] BasicExtractor: extracted value ([j6_0_1_] : [INTEGER]) - [2]
2020-11-25 21:06:28,823 TRACE  [main] BasicExtractor: extracted value ([problem_7_0_1_] : [BIGINT]) - [2]
2020-11-25 21:06:28,823 TRACE  [main] BasicExtractor: extracted value ([problem_7_0_0_] : [BIGINT]) - [2]
2020-11-25 21:06:28,823 TRACE  [main] BasicExtractor: extracted value ([id1_0_0_] : [BIGINT]) - [8]
2020-11-25 21:06:28,824 TRACE  [main] BasicExtractor: extracted value ([id1_0_1_] : [BIGINT]) - [9]
2020-11-25 21:06:28,824 TRACE  [main] BasicExtractor: extracted value ([binary_v2_0_1_] : [BLOB]) - [null]
2020-11-25 21:06:28,824 TRACE  [main] BasicExtractor: extracted value ([float_va3_0_1_] : [DOUBLE]) - [20.085536923187668]
2020-11-25 21:06:28,824 TRACE  [main] BasicExtractor: extracted value ([i4_0_1_] : [INTEGER]) - [0]
2020-11-25 21:06:28,824 TRACE  [main] BasicExtractor: extracted value ([is_condi5_0_1_] : [BOOLEAN]) - [true]
2020-11-25 21:06:28,824 TRACE  [main] BasicExtractor: extracted value ([j6_0_1_] : [INTEGER]) - [3]
2020-11-25 21:06:28,825 TRACE  [main] BasicExtractor: extracted value ([problem_7_0_1_] : [BIGINT]) - [2]
2020-11-25 21:06:28,825 TRACE  [main] BasicExtractor: extracted value ([problem_7_0_0_] : [BIGINT]) - [2]
2020-11-25 21:06:28,825 TRACE  [main] BasicExtractor: extracted value ([id1_0_0_] : [BIGINT]) - [9]
2020-11-25 21:06:28,825 TRACE  [main] BasicExtractor: extracted value ([id1_0_1_] : [BIGINT]) - [10]
2020-11-25 21:06:28,825 TRACE  [main] BasicExtractor: extracted value ([binary_v2_0_1_] : [BLOB]) - [null]
2020-11-25 21:06:28,826 TRACE  [main] BasicExtractor: extracted value ([float_va3_0_1_] : [DOUBLE]) - [54.598150033144236]
2020-11-25 21:06:28,826 TRACE  [main] BasicExtractor: extracted value ([i4_0_1_] : [INTEGER]) - [0]
2020-11-25 21:06:28,826 TRACE  [main] BasicExtractor: extracted value ([is_condi5_0_1_] : [BOOLEAN]) - [true]
2020-11-25 21:06:28,826 TRACE  [main] BasicExtractor: extracted value ([j6_0_1_] : [INTEGER]) - [4]
2020-11-25 21:06:28,826 TRACE  [main] BasicExtractor: extracted value ([problem_7_0_1_] : [BIGINT]) - [2]
2020-11-25 21:06:28,826 TRACE  [main] BasicExtractor: extracted value ([problem_7_0_0_] : [BIGINT]) - [2]
2020-11-25 21:06:28,827 TRACE  [main] BasicExtractor: extracted value ([id1_0_0_] : [BIGINT]) - [10]
2020-11-25 21:06:28,827 TRACE  [main] BasicExtractor: extracted value ([id1_0_1_] : [BIGINT]) - [11]
2020-11-25 21:06:28,827 TRACE  [main] BasicExtractor: extracted value ([binary_v2_0_1_] : [BLOB]) - [null]
2020-11-25 21:06:28,828 TRACE  [main] BasicExtractor: extracted value ([float_va3_0_1_] : [DOUBLE]) - [148.4131591025766]
2020-11-25 21:06:28,828 TRACE  [main] BasicExtractor: extracted value ([i4_0_1_] : [INTEGER]) - [0]
2020-11-25 21:06:28,828 TRACE  [main] BasicExtractor: extracted value ([is_condi5_0_1_] : [BOOLEAN]) - [true]
2020-11-25 21:06:28,828 TRACE  [main] BasicExtractor: extracted value ([j6_0_1_] : [INTEGER]) - [5]
2020-11-25 21:06:28,828 TRACE  [main] BasicExtractor: extracted value ([problem_7_0_1_] : [BIGINT]) - [2]
2020-11-25 21:06:28,828 TRACE  [main] BasicExtractor: extracted value ([problem_7_0_0_] : [BIGINT]) - [2]
2020-11-25 21:06:28,829 TRACE  [main] BasicExtractor: extracted value ([id1_0_0_] : [BIGINT]) - [11]
2020-11-25 21:06:28,830 TRACE  [main] BasicBinder: binding parameter [1] as [BIGINT] - [2]
2020-11-25 21:06:28,831 TRACE  [main] BasicBinder: binding parameter [1] as [BIGINT] - [1]
2020-11-25 21:06:28,832 TRACE  [main] BasicExtractor: extracted value ([id1_0_1_] : [BIGINT]) - [1]
2020-11-25 21:06:28,833 TRACE  [main] BasicExtractor: extracted value ([binary_v2_0_1_] : [BLOB]) - [null]
2020-11-25 21:06:28,833 TRACE  [main] BasicExtractor: extracted value ([float_va3_0_1_] : [DOUBLE]) - [1.0]
2020-11-25 21:06:28,833 TRACE  [main] BasicExtractor: extracted value ([i4_0_1_] : [INTEGER]) - [0]
2020-11-25 21:06:28,833 TRACE  [main] BasicExtractor: extracted value ([is_condi5_0_1_] : [BOOLEAN]) - [true]
2020-11-25 21:06:28,833 TRACE  [main] BasicExtractor: extracted value ([j6_0_1_] : [INTEGER]) - [0]
2020-11-25 21:06:28,834 TRACE  [main] BasicExtractor: extracted value ([problem_7_0_1_] : [BIGINT]) - [1]
2020-11-25 21:06:28,834 TRACE  [main] BasicExtractor: extracted value ([problem_7_0_0_] : [BIGINT]) - [1]
2020-11-25 21:06:28,834 TRACE  [main] BasicExtractor: extracted value ([id1_0_0_] : [BIGINT]) - [1]
2020-11-25 21:06:28,834 TRACE  [main] BasicExtractor: extracted value ([id1_0_1_] : [BIGINT]) - [2]
2020-11-25 21:06:28,835 TRACE  [main] BasicExtractor: extracted value ([binary_v2_0_1_] : [BLOB]) - [null]
2020-11-25 21:06:28,835 TRACE  [main] BasicExtractor: extracted value ([float_va3_0_1_] : [DOUBLE]) - [2.0]
2020-11-25 21:06:28,835 TRACE  [main] BasicExtractor: extracted value ([i4_0_1_] : [INTEGER]) - [0]
2020-11-25 21:06:28,835 TRACE  [main] BasicExtractor: extracted value ([is_condi5_0_1_] : [BOOLEAN]) - [true]
2020-11-25 21:06:28,835 TRACE  [main] BasicExtractor: extracted value ([j6_0_1_] : [INTEGER]) - [1]
2020-11-25 21:06:28,835 TRACE  [main] BasicExtractor: extracted value ([problem_7_0_1_] : [BIGINT]) - [1]
2020-11-25 21:06:28,835 TRACE  [main] BasicExtractor: extracted value ([problem_7_0_0_] : [BIGINT]) - [1]
2020-11-25 21:06:28,836 TRACE  [main] BasicExtractor: extracted value ([id1_0_0_] : [BIGINT]) - [2]
2020-11-25 21:06:28,836 TRACE  [main] BasicExtractor: extracted value ([id1_0_1_] : [BIGINT]) - [3]
2020-11-25 21:06:28,836 TRACE  [main] BasicExtractor: extracted value ([binary_v2_0_1_] : [BLOB]) - [null]
2020-11-25 21:06:28,836 TRACE  [main] BasicExtractor: extracted value ([float_va3_0_1_] : [DOUBLE]) - [1.0]
2020-11-25 21:06:28,836 TRACE  [main] BasicExtractor: extracted value ([i4_0_1_] : [INTEGER]) - [0]
2020-11-25 21:06:28,836 TRACE  [main] BasicExtractor: extracted value ([is_condi5_0_1_] : [BOOLEAN]) - [true]
2020-11-25 21:06:28,836 TRACE  [main] BasicExtractor: extracted value ([j6_0_1_] : [INTEGER]) - [2]
2020-11-25 21:06:28,836 TRACE  [main] BasicExtractor: extracted value ([problem_7_0_1_] : [BIGINT]) - [1]
2020-11-25 21:06:28,837 TRACE  [main] BasicExtractor: extracted value ([problem_7_0_0_] : [BIGINT]) - [1]
2020-11-25 21:06:28,837 TRACE  [main] BasicExtractor: extracted value ([id1_0_0_] : [BIGINT]) - [3]
2020-11-25 21:06:28,838 TRACE  [main] BasicExtractor: extracted value ([id1_0_1_] : [BIGINT]) - [4]
2020-11-25 21:06:28,838 TRACE  [main] BasicExtractor: extracted value ([binary_v2_0_1_] : [BLOB]) - [null]
2020-11-25 21:06:28,838 TRACE  [main] BasicExtractor: extracted value ([float_va3_0_1_] : [DOUBLE]) - [1.0]
2020-11-25 21:06:28,838 TRACE  [main] BasicExtractor: extracted value ([i4_0_1_] : [INTEGER]) - [0]
2020-11-25 21:06:28,838 TRACE  [main] BasicExtractor: extracted value ([is_condi5_0_1_] : [BOOLEAN]) - [false]
2020-11-25 21:06:28,839 TRACE  [main] BasicExtractor: extracted value ([j6_0_1_] : [INTEGER]) - [0]
2020-11-25 21:06:28,839 TRACE  [main] BasicExtractor: extracted value ([problem_7_0_1_] : [BIGINT]) - [1]
2020-11-25 21:06:28,839 TRACE  [main] BasicExtractor: extracted value ([problem_7_0_0_] : [BIGINT]) - [1]
2020-11-25 21:06:28,839 TRACE  [main] BasicExtractor: extracted value ([id1_0_0_] : [BIGINT]) - [4]
2020-11-25 21:06:28,839 TRACE  [main] BasicExtractor: extracted value ([id1_0_1_] : [BIGINT]) - [5]
2020-11-25 21:06:28,840 TRACE  [main] BasicExtractor: extracted value ([binary_v2_0_1_] : [BLOB]) - [null]
2020-11-25 21:06:28,841 TRACE  [main] BasicExtractor: extracted value ([float_va3_0_1_] : [DOUBLE]) - [1.0]
2020-11-25 21:06:28,841 TRACE  [main] BasicExtractor: extracted value ([i4_0_1_] : [INTEGER]) - [0]
2020-11-25 21:06:28,841 TRACE  [main] BasicExtractor: extracted value ([is_condi5_0_1_] : [BOOLEAN]) - [false]
2020-11-25 21:06:28,841 TRACE  [main] BasicExtractor: extracted value ([j6_0_1_] : [INTEGER]) - [1]
2020-11-25 21:06:28,841 TRACE  [main] BasicExtractor: extracted value ([problem_7_0_1_] : [BIGINT]) - [1]
2020-11-25 21:06:28,842 TRACE  [main] BasicExtractor: extracted value ([problem_7_0_0_] : [BIGINT]) - [1]
2020-11-25 21:06:28,842 TRACE  [main] BasicExtractor: extracted value ([id1_0_0_] : [BIGINT]) - [5]
2020-11-25 21:06:28,843 TRACE  [main] BasicBinder: binding parameter [1] as [BIGINT] - [1]
2020-11-25 21:06:28,865 TRACE  [main] BasicBinder: binding parameter [1] as [BIGINT] - [7]
2020-11-25 21:06:28,866 TRACE  [main] BasicExtractor: extracted value ([id1_1_2_] : [BIGINT]) - [null]
2020-11-25 21:06:28,866 TRACE  [main] BasicExtractor: extracted value ([id1_0_4_] : [BIGINT]) - [null]
2020-11-25 21:06:28,867 TRACE  [main] BasicExtractor: extracted value ([descript2_1_0_] : [BLOB]) - [[112, 114, 111, 98, 108, 101, 109, 100, 101, 115, 99, 114, 105, 112, 116, 105, 111, 110]]
2020-11-25 21:06:28,868 TRACE  [main] BasicExtractor: extracted value ([is_solve3_1_0_] : [BOOLEAN]) - [true]
2020-11-25 21:06:28,868 TRACE  [main] BasicExtractor: extracted value ([kind4_1_0_] : [VARCHAR]) - [POLYNOMIAL]
2020-11-25 21:06:28,868 TRACE  [main] BasicExtractor: extracted value ([matrix_d5_1_0_] : [INTEGER]) - [1]
2020-11-25 21:06:28,868 TRACE  [main] BasicExtractor: extracted value ([parent_p7_1_0_] : [BIGINT]) - [null]
2020-11-25 21:06:28,869 TRACE  [main] BasicExtractor: extracted value ([problem_6_1_0_] : [INTEGER]) - [0]
2020-11-25 21:06:28,869 TRACE  [main] BasicExtractor: extracted value ([problem_7_0_3_] : [BIGINT]) - [null]
2020-11-25 21:06:28,869 TRACE  [main] BasicExtractor: extracted value ([parent_p7_1_1_] : [BIGINT]) - [null]
2020-11-25 21:06:28,869 TRACE  [main] CollectionType: Created collection wrapper: [com.sf.back.entities.Problem.matrixes#7]
2020-11-25 21:06:28,870 TRACE  [main] BasicBinder: binding parameter [1] as [BIGINT] - [7]
2020-11-25 21:06:28,871 TRACE  [main] BasicExtractor: extracted value ([id1_0_1_] : [BIGINT]) - [40]
2020-11-25 21:06:28,871 TRACE  [main] BasicExtractor: extracted value ([binary_v2_0_1_] : [BLOB]) - [null]
2020-11-25 21:06:28,871 TRACE  [main] BasicExtractor: extracted value ([float_va3_0_1_] : [DOUBLE]) - [1.0]
2020-11-25 21:06:28,872 TRACE  [main] BasicExtractor: extracted value ([i4_0_1_] : [INTEGER]) - [0]
2020-11-25 21:06:28,872 TRACE  [main] BasicExtractor: extracted value ([is_condi5_0_1_] : [BOOLEAN]) - [true]
2020-11-25 21:06:28,872 TRACE  [main] BasicExtractor: extracted value ([j6_0_1_] : [INTEGER]) - [0]
2020-11-25 21:06:28,872 TRACE  [main] BasicExtractor: extracted value ([problem_7_0_1_] : [BIGINT]) - [7]
2020-11-25 21:06:28,872 TRACE  [main] BasicExtractor: extracted value ([problem_7_0_0_] : [BIGINT]) - [7]
2020-11-25 21:06:28,872 TRACE  [main] BasicExtractor: extracted value ([id1_0_0_] : [BIGINT]) - [40]
2020-11-25 21:06:28,873 TRACE  [main] BasicExtractor: extracted value ([id1_0_1_] : [BIGINT]) - [41]
2020-11-25 21:06:28,873 TRACE  [main] BasicExtractor: extracted value ([binary_v2_0_1_] : [BLOB]) - [null]
2020-11-25 21:06:28,873 TRACE  [main] BasicExtractor: extracted value ([float_va3_0_1_] : [DOUBLE]) - [-3.0]
2020-11-25 21:06:28,873 TRACE  [main] BasicExtractor: extracted value ([i4_0_1_] : [INTEGER]) - [0]
2020-11-25 21:06:28,873 TRACE  [main] BasicExtractor: extracted value ([is_condi5_0_1_] : [BOOLEAN]) - [true]
2020-11-25 21:06:28,874 TRACE  [main] BasicExtractor: extracted value ([j6_0_1_] : [INTEGER]) - [1]
2020-11-25 21:06:28,874 TRACE  [main] BasicExtractor: extracted value ([problem_7_0_1_] : [BIGINT]) - [7]
2020-11-25 21:06:28,874 TRACE  [main] BasicExtractor: extracted value ([problem_7_0_0_] : [BIGINT]) - [7]
2020-11-25 21:06:28,874 TRACE  [main] BasicExtractor: extracted value ([id1_0_0_] : [BIGINT]) - [41]
2020-11-25 21:06:28,874 TRACE  [main] BasicExtractor: extracted value ([id1_0_1_] : [BIGINT]) - [42]
2020-11-25 21:06:28,875 TRACE  [main] BasicExtractor: extracted value ([binary_v2_0_1_] : [BLOB]) - [null]
2020-11-25 21:06:28,875 TRACE  [main] BasicExtractor: extracted value ([float_va3_0_1_] : [DOUBLE]) - [2.0]
2020-11-25 21:06:28,875 TRACE  [main] BasicExtractor: extracted value ([i4_0_1_] : [INTEGER]) - [0]
2020-11-25 21:06:28,875 TRACE  [main] BasicExtractor: extracted value ([is_condi5_0_1_] : [BOOLEAN]) - [true]
2020-11-25 21:06:28,875 TRACE  [main] BasicExtractor: extracted value ([j6_0_1_] : [INTEGER]) - [2]
2020-11-25 21:06:28,875 TRACE  [main] BasicExtractor: extracted value ([problem_7_0_1_] : [BIGINT]) - [7]
2020-11-25 21:06:28,875 TRACE  [main] BasicExtractor: extracted value ([problem_7_0_0_] : [BIGINT]) - [7]
2020-11-25 21:06:28,876 TRACE  [main] BasicExtractor: extracted value ([id1_0_0_] : [BIGINT]) - [42]
2020-11-25 21:06:28,876 TRACE  [main] BasicExtractor: extracted value ([id1_0_1_] : [BIGINT]) - [43]
2020-11-25 21:06:28,876 TRACE  [main] BasicExtractor: extracted value ([binary_v2_0_1_] : [BLOB]) - [null]
2020-11-25 21:06:28,876 TRACE  [main] BasicExtractor: extracted value ([float_va3_0_1_] : [DOUBLE]) - [1.0]
2020-11-25 21:06:28,876 TRACE  [main] BasicExtractor: extracted value ([i4_0_1_] : [INTEGER]) - [0]
2020-11-25 21:06:28,876 TRACE  [main] BasicExtractor: extracted value ([is_condi5_0_1_] : [BOOLEAN]) - [false]
2020-11-25 21:06:28,876 TRACE  [main] BasicExtractor: extracted value ([j6_0_1_] : [INTEGER]) - [0]
2020-11-25 21:06:28,876 TRACE  [main] BasicExtractor: extracted value ([problem_7_0_1_] : [BIGINT]) - [7]
2020-11-25 21:06:28,877 TRACE  [main] BasicExtractor: extracted value ([problem_7_0_0_] : [BIGINT]) - [7]
2020-11-25 21:06:28,877 TRACE  [main] BasicExtractor: extracted value ([id1_0_0_] : [BIGINT]) - [43]
2020-11-25 21:06:28,877 TRACE  [main] BasicExtractor: extracted value ([id1_0_1_] : [BIGINT]) - [44]
2020-11-25 21:06:28,877 TRACE  [main] BasicExtractor: extracted value ([binary_v2_0_1_] : [BLOB]) - [null]
2020-11-25 21:06:28,877 TRACE  [main] BasicExtractor: extracted value ([float_va3_0_1_] : [DOUBLE]) - [2.0]
2020-11-25 21:06:28,878 TRACE  [main] BasicExtractor: extracted value ([i4_0_1_] : [INTEGER]) - [0]
2020-11-25 21:06:28,878 TRACE  [main] BasicExtractor: extracted value ([is_condi5_0_1_] : [BOOLEAN]) - [false]
2020-11-25 21:06:28,878 TRACE  [main] BasicExtractor: extracted value ([j6_0_1_] : [INTEGER]) - [1]
2020-11-25 21:06:28,878 TRACE  [main] BasicExtractor: extracted value ([problem_7_0_1_] : [BIGINT]) - [7]
2020-11-25 21:06:28,878 TRACE  [main] BasicExtractor: extracted value ([problem_7_0_0_] : [BIGINT]) - [7]
2020-11-25 21:06:28,878 TRACE  [main] BasicExtractor: extracted value ([id1_0_0_] : [BIGINT]) - [44]
2020-11-25 21:06:28,917 TRACE  [main] BasicBinder: binding parameter [1] as [BOOLEAN] - [false]
2020-11-25 21:06:28,917 TRACE  [main] BasicBinder: binding parameter [2] as [BIGINT] - [7]
2020-11-25 21:06:28,918 TRACE  [main] BasicExtractor: extracted value ([id1_0_] : [BIGINT]) - [43]
2020-11-25 21:06:28,918 TRACE  [main] BasicExtractor: extracted value ([binary_v2_0_] : [BLOB]) - [null]
2020-11-25 21:06:28,918 TRACE  [main] BasicExtractor: extracted value ([float_va3_0_] : [DOUBLE]) - [1.0]
2020-11-25 21:06:28,919 TRACE  [main] BasicExtractor: extracted value ([i4_0_] : [INTEGER]) - [0]
2020-11-25 21:06:28,919 TRACE  [main] BasicExtractor: extracted value ([is_condi5_0_] : [BOOLEAN]) - [false]
2020-11-25 21:06:28,919 TRACE  [main] BasicExtractor: extracted value ([j6_0_] : [INTEGER]) - [0]
2020-11-25 21:06:28,920 TRACE  [main] BasicExtractor: extracted value ([problem_7_0_] : [BIGINT]) - [7]
2020-11-25 21:06:28,920 TRACE  [main] BasicExtractor: extracted value ([id1_0_] : [BIGINT]) - [44]
2020-11-25 21:06:28,921 TRACE  [main] BasicExtractor: extracted value ([binary_v2_0_] : [BLOB]) - [null]
2020-11-25 21:06:28,922 TRACE  [main] BasicExtractor: extracted value ([float_va3_0_] : [DOUBLE]) - [2.0]
2020-11-25 21:06:28,922 TRACE  [main] BasicExtractor: extracted value ([i4_0_] : [INTEGER]) - [0]
2020-11-25 21:06:28,922 TRACE  [main] BasicExtractor: extracted value ([is_condi5_0_] : [BOOLEAN]) - [false]
2020-11-25 21:06:28,922 TRACE  [main] BasicExtractor: extracted value ([j6_0_] : [INTEGER]) - [1]
2020-11-25 21:06:28,923 TRACE  [main] BasicExtractor: extracted value ([problem_7_0_] : [BIGINT]) - [7]
2020-11-25 21:06:28,924 TRACE  [main] BasicBinder: binding parameter [1] as [BIGINT] - [7]
2020-11-25 21:06:28,924 TRACE  [main] BasicExtractor: extracted value ([id1_1_2_] : [BIGINT]) - [null]
2020-11-25 21:06:28,925 TRACE  [main] BasicExtractor: extracted value ([id1_0_4_] : [BIGINT]) - [null]
2020-11-25 21:06:28,925 TRACE  [main] BasicExtractor: extracted value ([descript2_1_0_] : [BLOB]) - [[112, 114, 111, 98, 108, 101, 109, 100, 101, 115, 99, 114, 105, 112, 116, 105, 111, 110]]
2020-11-25 21:06:28,925 TRACE  [main] BasicExtractor: extracted value ([is_solve3_1_0_] : [BOOLEAN]) - [true]
2020-11-25 21:06:28,925 TRACE  [main] BasicExtractor: extracted value ([kind4_1_0_] : [VARCHAR]) - [POLYNOMIAL]
2020-11-25 21:06:28,925 TRACE  [main] BasicExtractor: extracted value ([matrix_d5_1_0_] : [INTEGER]) - [1]
2020-11-25 21:06:28,926 TRACE  [main] BasicExtractor: extracted value ([parent_p7_1_0_] : [BIGINT]) - [null]
2020-11-25 21:06:28,926 TRACE  [main] BasicExtractor: extracted value ([problem_6_1_0_] : [INTEGER]) - [0]
2020-11-25 21:06:28,926 TRACE  [main] BasicExtractor: extracted value ([problem_7_0_3_] : [BIGINT]) - [null]
2020-11-25 21:06:28,926 TRACE  [main] BasicExtractor: extracted value ([parent_p7_1_1_] : [BIGINT]) - [null]
2020-11-25 21:06:28,927 TRACE  [main] CollectionType: Created collection wrapper: [com.sf.back.entities.Problem.matrixes#7]
2020-11-25 21:06:28,927 TRACE  [main] BasicBinder: binding parameter [1] as [BIGINT] - [7]
2020-11-25 21:06:28,928 TRACE  [main] BasicExtractor: extracted value ([id1_0_1_] : [BIGINT]) - [40]
2020-11-25 21:06:28,928 TRACE  [main] BasicExtractor: extracted value ([binary_v2_0_1_] : [BLOB]) - [null]
2020-11-25 21:06:28,929 TRACE  [main] BasicExtractor: extracted value ([float_va3_0_1_] : [DOUBLE]) - [1.0]
2020-11-25 21:06:28,929 TRACE  [main] BasicExtractor: extracted value ([i4_0_1_] : [INTEGER]) - [0]
2020-11-25 21:06:28,929 TRACE  [main] BasicExtractor: extracted value ([is_condi5_0_1_] : [BOOLEAN]) - [true]
2020-11-25 21:06:28,929 TRACE  [main] BasicExtractor: extracted value ([j6_0_1_] : [INTEGER]) - [0]
2020-11-25 21:06:28,929 TRACE  [main] BasicExtractor: extracted value ([problem_7_0_1_] : [BIGINT]) - [7]
2020-11-25 21:06:28,929 TRACE  [main] BasicExtractor: extracted value ([problem_7_0_0_] : [BIGINT]) - [7]
2020-11-25 21:06:28,929 TRACE  [main] BasicExtractor: extracted value ([id1_0_0_] : [BIGINT]) - [40]
2020-11-25 21:06:28,929 TRACE  [main] BasicExtractor: extracted value ([id1_0_1_] : [BIGINT]) - [41]
2020-11-25 21:06:28,930 TRACE  [main] BasicExtractor: extracted value ([binary_v2_0_1_] : [BLOB]) - [null]
2020-11-25 21:06:28,930 TRACE  [main] BasicExtractor: extracted value ([float_va3_0_1_] : [DOUBLE]) - [-3.0]
2020-11-25 21:06:28,930 TRACE  [main] BasicExtractor: extracted value ([i4_0_1_] : [INTEGER]) - [0]
2020-11-25 21:06:28,930 TRACE  [main] BasicExtractor: extracted value ([is_condi5_0_1_] : [BOOLEAN]) - [true]
2020-11-25 21:06:28,930 TRACE  [main] BasicExtractor: extracted value ([j6_0_1_] : [INTEGER]) - [1]
2020-11-25 21:06:28,930 TRACE  [main] BasicExtractor: extracted value ([problem_7_0_1_] : [BIGINT]) - [7]
2020-11-25 21:06:28,930 TRACE  [main] BasicExtractor: extracted value ([problem_7_0_0_] : [BIGINT]) - [7]
2020-11-25 21:06:28,930 TRACE  [main] BasicExtractor: extracted value ([id1_0_0_] : [BIGINT]) - [41]
2020-11-25 21:06:28,931 TRACE  [main] BasicExtractor: extracted value ([id1_0_1_] : [BIGINT]) - [42]
2020-11-25 21:06:28,931 TRACE  [main] BasicExtractor: extracted value ([binary_v2_0_1_] : [BLOB]) - [null]
2020-11-25 21:06:28,931 TRACE  [main] BasicExtractor: extracted value ([float_va3_0_1_] : [DOUBLE]) - [2.0]
2020-11-25 21:06:28,931 TRACE  [main] BasicExtractor: extracted value ([i4_0_1_] : [INTEGER]) - [0]
2020-11-25 21:06:28,931 TRACE  [main] BasicExtractor: extracted value ([is_condi5_0_1_] : [BOOLEAN]) - [true]
2020-11-25 21:06:28,931 TRACE  [main] BasicExtractor: extracted value ([j6_0_1_] : [INTEGER]) - [2]
2020-11-25 21:06:28,931 TRACE  [main] BasicExtractor: extracted value ([problem_7_0_1_] : [BIGINT]) - [7]
2020-11-25 21:06:28,931 TRACE  [main] BasicExtractor: extracted value ([problem_7_0_0_] : [BIGINT]) - [7]
2020-11-25 21:06:28,932 TRACE  [main] BasicExtractor: extracted value ([id1_0_0_] : [BIGINT]) - [42]
2020-11-25 21:06:28,932 TRACE  [main] BasicExtractor: extracted value ([id1_0_1_] : [BIGINT]) - [43]
2020-11-25 21:06:28,932 TRACE  [main] BasicExtractor: extracted value ([problem_7_0_0_] : [BIGINT]) - [7]
2020-11-25 21:06:28,932 TRACE  [main] BasicExtractor: extracted value ([id1_0_0_] : [BIGINT]) - [43]
2020-11-25 21:06:28,932 TRACE  [main] BasicExtractor: extracted value ([id1_0_1_] : [BIGINT]) - [44]
2020-11-25 21:06:28,933 TRACE  [main] BasicExtractor: extracted value ([problem_7_0_0_] : [BIGINT]) - [7]
2020-11-25 21:06:28,933 TRACE  [main] BasicExtractor: extracted value ([id1_0_0_] : [BIGINT]) - [44]
2020-11-25 21:06:28,953 TRACE  [main] BasicBinder: binding parameter [1] as [BIGINT] - [8]
2020-11-25 21:06:28,955 TRACE  [main] BasicExtractor: extracted value ([id1_1_2_] : [BIGINT]) - [null]
2020-11-25 21:06:28,956 TRACE  [main] BasicExtractor: extracted value ([id1_0_4_] : [BIGINT]) - [null]
2020-11-25 21:06:28,956 TRACE  [main] BasicExtractor: extracted value ([descript2_1_0_] : [BLOB]) - [[112, 114, 111, 98, 108, 101, 109, 100, 101, 115, 99, 114, 105, 112, 116, 105, 111, 110]]
2020-11-25 21:06:28,956 TRACE  [main] BasicExtractor: extracted value ([is_solve3_1_0_] : [BOOLEAN]) - [null]
2020-11-25 21:06:28,956 TRACE  [main] BasicExtractor: extracted value ([kind4_1_0_] : [VARCHAR]) - [POLYNOMIAL]
2020-11-25 21:06:28,956 TRACE  [main] BasicExtractor: extracted value ([matrix_d5_1_0_] : [INTEGER]) - [1]
2020-11-25 21:06:28,957 TRACE  [main] BasicExtractor: extracted value ([parent_p7_1_0_] : [BIGINT]) - [null]
2020-11-25 21:06:28,957 TRACE  [main] BasicExtractor: extracted value ([problem_6_1_0_] : [INTEGER]) - [22]
2020-11-25 21:06:28,957 TRACE  [main] BasicExtractor: extracted value ([problem_7_0_3_] : [BIGINT]) - [null]
2020-11-25 21:06:28,957 TRACE  [main] BasicExtractor: extracted value ([parent_p7_1_1_] : [BIGINT]) - [null]
2020-11-25 21:06:28,959 TRACE  [main] CollectionType: Created collection wrapper: [com.sf.back.entities.Problem.matrixes#8]
2020-11-25 21:06:28,960 TRACE  [main] BasicBinder: binding parameter [1] as [BIGINT] - [8]
2020-11-25 21:06:28,960 TRACE  [main] BasicExtractor: extracted value ([id1_0_1_] : [BIGINT]) - [45]
2020-11-25 21:06:28,960 TRACE  [main] BasicExtractor: extracted value ([binary_v2_0_1_] : [BLOB]) - [null]
2020-11-25 21:06:28,961 TRACE  [main] BasicExtractor: extracted value ([float_va3_0_1_] : [DOUBLE]) - [1.0]
2020-11-25 21:06:28,961 TRACE  [main] BasicExtractor: extracted value ([i4_0_1_] : [INTEGER]) - [0]
2020-11-25 21:06:28,961 TRACE  [main] BasicExtractor: extracted value ([is_condi5_0_1_] : [BOOLEAN]) - [true]
2020-11-25 21:06:28,961 TRACE  [main] BasicExtractor: extracted value ([j6_0_1_] : [INTEGER]) - [0]
2020-11-25 21:06:28,961 TRACE  [main] BasicExtractor: extracted value ([problem_7_0_1_] : [BIGINT]) - [8]
2020-11-25 21:06:28,961 TRACE  [main] BasicExtractor: extracted value ([problem_7_0_0_] : [BIGINT]) - [8]
2020-11-25 21:06:28,962 TRACE  [main] BasicExtractor: extracted value ([id1_0_0_] : [BIGINT]) - [45]
2020-11-25 21:06:28,963 TRACE  [main] BasicExtractor: extracted value ([id1_0_1_] : [BIGINT]) - [46]
2020-11-25 21:06:28,963 TRACE  [main] BasicExtractor: extracted value ([binary_v2_0_1_] : [BLOB]) - [null]
2020-11-25 21:06:28,963 TRACE  [main] BasicExtractor: extracted value ([float_va3_0_1_] : [DOUBLE]) - [2.718281828459045]
2020-11-25 21:06:28,964 TRACE  [main] BasicExtractor: extracted value ([i4_0_1_] : [INTEGER]) - [0]
2020-11-25 21:06:28,964 TRACE  [main] BasicExtractor: extracted value ([is_condi5_0_1_] : [BOOLEAN]) - [true]
2020-11-25 21:06:28,965 TRACE  [main] BasicExtractor: extracted value ([j6_0_1_] : [INTEGER]) - [1]
2020-11-25 21:06:28,965 TRACE  [main] BasicExtractor: extracted value ([problem_7_0_1_] : [BIGINT]) - [8]
2020-11-25 21:06:28,965 TRACE  [main] BasicExtractor: extracted value ([problem_7_0_0_] : [BIGINT]) - [8]
2020-11-25 21:06:28,965 TRACE  [main] BasicExtractor: extracted value ([id1_0_0_] : [BIGINT]) - [46]
2020-11-25 21:06:28,973 TRACE  [main] BasicExtractor: extracted value ([id1_0_1_] : [BIGINT]) - [47]
2020-11-25 21:06:28,973 TRACE  [main] BasicExtractor: extracted value ([binary_v2_0_1_] : [BLOB]) - [null]
2020-11-25 21:06:28,974 TRACE  [main] BasicExtractor: extracted value ([float_va3_0_1_] : [DOUBLE]) - [7.38905609893065]
2020-11-25 21:06:28,974 TRACE  [main] BasicExtractor: extracted value ([i4_0_1_] : [INTEGER]) - [0]
2020-11-25 21:06:28,974 TRACE  [main] BasicExtractor: extracted value ([is_condi5_0_1_] : [BOOLEAN]) - [true]
2020-11-25 21:06:28,974 TRACE  [main] BasicExtractor: extracted value ([j6_0_1_] : [INTEGER]) - [2]
2020-11-25 21:06:28,974 TRACE  [main] BasicExtractor: extracted value ([problem_7_0_1_] : [BIGINT]) - [8]
2020-11-25 21:06:28,974 TRACE  [main] BasicExtractor: extracted value ([problem_7_0_0_] : [BIGINT]) - [8]
2020-11-25 21:06:28,977 TRACE  [main] BasicExtractor: extracted value ([id1_0_0_] : [BIGINT]) - [47]
2020-11-25 21:06:28,977 TRACE  [main] BasicExtractor: extracted value ([id1_0_1_] : [BIGINT]) - [48]
2020-11-25 21:06:28,977 TRACE  [main] BasicExtractor: extracted value ([binary_v2_0_1_] : [BLOB]) - [null]
2020-11-25 21:06:28,977 TRACE  [main] BasicExtractor: extracted value ([float_va3_0_1_] : [DOUBLE]) - [20.085536923187668]
2020-11-25 21:06:28,978 TRACE  [main] BasicExtractor: extracted value ([i4_0_1_] : [INTEGER]) - [0]
2020-11-25 21:06:28,978 TRACE  [main] BasicExtractor: extracted value ([is_condi5_0_1_] : [BOOLEAN]) - [true]
2020-11-25 21:06:28,978 TRACE  [main] BasicExtractor: extracted value ([j6_0_1_] : [INTEGER]) - [3]
2020-11-25 21:06:28,978 TRACE  [main] BasicExtractor: extracted value ([problem_7_0_1_] : [BIGINT]) - [8]
2020-11-25 21:06:28,978 TRACE  [main] BasicExtractor: extracted value ([problem_7_0_0_] : [BIGINT]) - [8]
2020-11-25 21:06:28,979 TRACE  [main] BasicExtractor: extracted value ([id1_0_0_] : [BIGINT]) - [48]
2020-11-25 21:06:28,979 TRACE  [main] BasicExtractor: extracted value ([id1_0_1_] : [BIGINT]) - [49]
2020-11-25 21:06:28,979 TRACE  [main] BasicExtractor: extracted value ([binary_v2_0_1_] : [BLOB]) - [null]
2020-11-25 21:06:28,979 TRACE  [main] BasicExtractor: extracted value ([float_va3_0_1_] : [DOUBLE]) - [54.598150033144236]
2020-11-25 21:06:28,979 TRACE  [main] BasicExtractor: extracted value ([i4_0_1_] : [INTEGER]) - [0]
2020-11-25 21:06:28,980 TRACE  [main] BasicExtractor: extracted value ([is_condi5_0_1_] : [BOOLEAN]) - [true]
2020-11-25 21:06:28,980 TRACE  [main] BasicExtractor: extracted value ([j6_0_1_] : [INTEGER]) - [4]
2020-11-25 21:06:28,980 TRACE  [main] BasicExtractor: extracted value ([problem_7_0_1_] : [BIGINT]) - [8]
2020-11-25 21:06:28,980 TRACE  [main] BasicExtractor: extracted value ([problem_7_0_0_] : [BIGINT]) - [8]
2020-11-25 21:06:28,980 TRACE  [main] BasicExtractor: extracted value ([id1_0_0_] : [BIGINT]) - [49]
2020-11-25 21:06:28,980 TRACE  [main] BasicExtractor: extracted value ([id1_0_1_] : [BIGINT]) - [50]
2020-11-25 21:06:28,981 TRACE  [main] BasicExtractor: extracted value ([binary_v2_0_1_] : [BLOB]) - [null]
2020-11-25 21:06:28,981 TRACE  [main] BasicExtractor: extracted value ([float_va3_0_1_] : [DOUBLE]) - [148.4131591025766]
2020-11-25 21:06:28,981 TRACE  [main] BasicExtractor: extracted value ([i4_0_1_] : [INTEGER]) - [0]
2020-11-25 21:06:28,981 TRACE  [main] BasicExtractor: extracted value ([is_condi5_0_1_] : [BOOLEAN]) - [true]
2020-11-25 21:06:28,981 TRACE  [main] BasicExtractor: extracted value ([j6_0_1_] : [INTEGER]) - [5]
2020-11-25 21:06:28,981 TRACE  [main] BasicExtractor: extracted value ([problem_7_0_1_] : [BIGINT]) - [8]
2020-11-25 21:06:28,982 TRACE  [main] BasicExtractor: extracted value ([problem_7_0_0_] : [BIGINT]) - [8]
2020-11-25 21:06:28,982 TRACE  [main] BasicExtractor: extracted value ([id1_0_0_] : [BIGINT]) - [50]
2020-11-25 21:06:28,995 TRACE  [main] BasicBinder: binding parameter [1] as [BLOB] - [[100, 101, 115, 99, 114, 105, 112, 116, 105, 111, 110]]
2020-11-25 21:06:28,995 TRACE  [main] BasicBinder: binding parameter [2] as [BOOLEAN] - [null]
2020-11-25 21:06:28,995 TRACE  [main] BasicBinder: binding parameter [3] as [VARCHAR] - [POLYNOMIAL]
2020-11-25 21:06:28,996 TRACE  [main] BasicBinder: binding parameter [4] as [INTEGER] - [null]
2020-11-25 21:06:28,996 TRACE  [main] BasicBinder: binding parameter [5] as [BIGINT] - [null]
2020-11-25 21:06:28,996 TRACE  [main] BasicBinder: binding parameter [6] as [INTEGER] - [24]
2020-11-25 21:06:28,997 TRACE  [main] BasicBinder: binding parameter [1] as [BLOB] - [null]
2020-11-25 21:06:28,997 TRACE  [main] BasicBinder: binding parameter [2] as [DOUBLE] - [1.0]
2020-11-25 21:06:28,998 TRACE  [main] BasicBinder: binding parameter [3] as [INTEGER] - [0]
2020-11-25 21:06:28,998 TRACE  [main] BasicBinder: binding parameter [4] as [BOOLEAN] - [true]
2020-11-25 21:06:28,998 TRACE  [main] BasicBinder: binding parameter [5] as [INTEGER] - [0]
2020-11-25 21:06:28,998 TRACE  [main] BasicBinder: binding parameter [6] as [BIGINT] - [10]
2020-11-25 21:06:28,999 TRACE  [main] BasicBinder: binding parameter [1] as [BLOB] - [null]
2020-11-25 21:06:29,000 TRACE  [main] BasicBinder: binding parameter [2] as [DOUBLE] - [2.0]
2020-11-25 21:06:29,000 TRACE  [main] BasicBinder: binding parameter [3] as [INTEGER] - [0]
2020-11-25 21:06:29,000 TRACE  [main] BasicBinder: binding parameter [4] as [BOOLEAN] - [true]
2020-11-25 21:06:29,000 TRACE  [main] BasicBinder: binding parameter [5] as [INTEGER] - [1]
2020-11-25 21:06:29,000 TRACE  [main] BasicBinder: binding parameter [6] as [BIGINT] - [10]
2020-11-25 21:06:29,001 TRACE  [main] BasicBinder: binding parameter [1] as [BLOB] - [null]
2020-11-25 21:06:29,002 TRACE  [main] BasicBinder: binding parameter [2] as [DOUBLE] - [3.0]
2020-11-25 21:06:29,002 TRACE  [main] BasicBinder: binding parameter [3] as [INTEGER] - [0]
2020-11-25 21:06:29,002 TRACE  [main] BasicBinder: binding parameter [4] as [BOOLEAN] - [true]
2020-11-25 21:06:29,002 TRACE  [main] BasicBinder: binding parameter [5] as [INTEGER] - [2]
2020-11-25 21:06:29,003 TRACE  [main] BasicBinder: binding parameter [6] as [BIGINT] - [10]
2020-11-25 21:06:29,004 TRACE  [main] BasicBinder: binding parameter [1] as [BLOB] - [null]
2020-11-25 21:06:29,004 TRACE  [main] BasicBinder: binding parameter [2] as [DOUBLE] - [4.0]
2020-11-25 21:06:29,004 TRACE  [main] BasicBinder: binding parameter [3] as [INTEGER] - [0]
2020-11-25 21:06:29,004 TRACE  [main] BasicBinder: binding parameter [4] as [BOOLEAN] - [true]
2020-11-25 21:06:29,005 TRACE  [main] BasicBinder: binding parameter [5] as [INTEGER] - [3]
2020-11-25 21:06:29,005 TRACE  [main] BasicBinder: binding parameter [6] as [BIGINT] - [10]
2020-11-25 21:06:29,030 TRACE  [main] BasicBinder: binding parameter [1] as [BIGINT] - [10]
2020-11-25 21:06:29,031 TRACE  [main] BasicExtractor: extracted value ([id1_1_2_] : [BIGINT]) - [null]
2020-11-25 21:06:29,031 TRACE  [main] BasicExtractor: extracted value ([id1_0_4_] : [BIGINT]) - [null]
2020-11-25 21:06:29,032 TRACE  [main] BasicExtractor: extracted value ([descript2_1_0_] : [BLOB]) - [[100, 101, 115, 99, 114, 105, 112, 116, 105, 111, 110]]
2020-11-25 21:06:29,032 TRACE  [main] BasicExtractor: extracted value ([is_solve3_1_0_] : [BOOLEAN]) - [null]
2020-11-25 21:06:29,032 TRACE  [main] BasicExtractor: extracted value ([kind4_1_0_] : [VARCHAR]) - [POLYNOMIAL]
2020-11-25 21:06:29,032 TRACE  [main] BasicExtractor: extracted value ([matrix_d5_1_0_] : [INTEGER]) - [null]
2020-11-25 21:06:29,032 TRACE  [main] BasicExtractor: extracted value ([parent_p7_1_0_] : [BIGINT]) - [null]
2020-11-25 21:06:29,032 TRACE  [main] BasicExtractor: extracted value ([problem_6_1_0_] : [INTEGER]) - [24]
2020-11-25 21:06:29,032 TRACE  [main] BasicExtractor: extracted value ([problem_7_0_3_] : [BIGINT]) - [null]
2020-11-25 21:06:29,032 TRACE  [main] BasicExtractor: extracted value ([parent_p7_1_1_] : [BIGINT]) - [null]
2020-11-25 21:06:29,033 TRACE  [main] CollectionType: Created collection wrapper: [com.sf.back.entities.Problem.matrixes#10]
2020-11-25 21:06:29,034 TRACE  [main] BasicBinder: binding parameter [1] as [BIGINT] - [10]
2020-11-25 21:06:29,036 TRACE  [main] BasicExtractor: extracted value ([id1_0_1_] : [BIGINT]) - [57]
2020-11-25 21:06:29,036 TRACE  [main] BasicExtractor: extracted value ([binary_v2_0_1_] : [BLOB]) - [null]
2020-11-25 21:06:29,037 TRACE  [main] BasicExtractor: extracted value ([float_va3_0_1_] : [DOUBLE]) - [1.0]
2020-11-25 21:06:29,037 TRACE  [main] BasicExtractor: extracted value ([i4_0_1_] : [INTEGER]) - [0]
2020-11-25 21:06:29,037 TRACE  [main] BasicExtractor: extracted value ([is_condi5_0_1_] : [BOOLEAN]) - [true]
2020-11-25 21:06:29,037 TRACE  [main] BasicExtractor: extracted value ([j6_0_1_] : [INTEGER]) - [0]
2020-11-25 21:06:29,037 TRACE  [main] BasicExtractor: extracted value ([problem_7_0_1_] : [BIGINT]) - [10]
2020-11-25 21:06:29,037 TRACE  [main] BasicExtractor: extracted value ([problem_7_0_0_] : [BIGINT]) - [10]
2020-11-25 21:06:29,037 TRACE  [main] BasicExtractor: extracted value ([id1_0_0_] : [BIGINT]) - [57]
2020-11-25 21:06:29,037 TRACE  [main] BasicExtractor: extracted value ([id1_0_1_] : [BIGINT]) - [58]
2020-11-25 21:06:29,038 TRACE  [main] BasicExtractor: extracted value ([binary_v2_0_1_] : [BLOB]) - [null]
2020-11-25 21:06:29,038 TRACE  [main] BasicExtractor: extracted value ([float_va3_0_1_] : [DOUBLE]) - [2.0]
2020-11-25 21:06:29,038 TRACE  [main] BasicExtractor: extracted value ([i4_0_1_] : [INTEGER]) - [0]
2020-11-25 21:06:29,038 TRACE  [main] BasicExtractor: extracted value ([is_condi5_0_1_] : [BOOLEAN]) - [true]
2020-11-25 21:06:29,038 TRACE  [main] BasicExtractor: extracted value ([j6_0_1_] : [INTEGER]) - [1]
2020-11-25 21:06:29,038 TRACE  [main] BasicExtractor: extracted value ([problem_7_0_1_] : [BIGINT]) - [10]
2020-11-25 21:06:29,038 TRACE  [main] BasicExtractor: extracted value ([problem_7_0_0_] : [BIGINT]) - [10]
2020-11-25 21:06:29,038 TRACE  [main] BasicExtractor: extracted value ([id1_0_0_] : [BIGINT]) - [58]
2020-11-25 21:06:29,039 TRACE  [main] BasicExtractor: extracted value ([id1_0_1_] : [BIGINT]) - [59]
2020-11-25 21:06:29,039 TRACE  [main] BasicExtractor: extracted value ([binary_v2_0_1_] : [BLOB]) - [null]
2020-11-25 21:06:29,039 TRACE  [main] BasicExtractor: extracted value ([float_va3_0_1_] : [DOUBLE]) - [3.0]
2020-11-25 21:06:29,039 TRACE  [main] BasicExtractor: extracted value ([i4_0_1_] : [INTEGER]) - [0]
2020-11-25 21:06:29,039 TRACE  [main] BasicExtractor: extracted value ([is_condi5_0_1_] : [BOOLEAN]) - [true]
2020-11-25 21:06:29,039 TRACE  [main] BasicExtractor: extracted value ([j6_0_1_] : [INTEGER]) - [2]
2020-11-25 21:06:29,039 TRACE  [main] BasicExtractor: extracted value ([problem_7_0_1_] : [BIGINT]) - [10]
2020-11-25 21:06:29,039 TRACE  [main] BasicExtractor: extracted value ([problem_7_0_0_] : [BIGINT]) - [10]
2020-11-25 21:06:29,040 TRACE  [main] BasicExtractor: extracted value ([id1_0_0_] : [BIGINT]) - [59]
2020-11-25 21:06:29,040 TRACE  [main] BasicExtractor: extracted value ([id1_0_1_] : [BIGINT]) - [60]
2020-11-25 21:06:29,040 TRACE  [main] BasicExtractor: extracted value ([binary_v2_0_1_] : [BLOB]) - [null]
2020-11-25 21:06:29,040 TRACE  [main] BasicExtractor: extracted value ([float_va3_0_1_] : [DOUBLE]) - [4.0]
2020-11-25 21:06:29,040 TRACE  [main] BasicExtractor: extracted value ([i4_0_1_] : [INTEGER]) - [0]
2020-11-25 21:06:29,040 TRACE  [main] BasicExtractor: extracted value ([is_condi5_0_1_] : [BOOLEAN]) - [true]
2020-11-25 21:06:29,041 TRACE  [main] BasicExtractor: extracted value ([j6_0_1_] : [INTEGER]) - [3]
2020-11-25 21:06:29,041 TRACE  [main] BasicExtractor: extracted value ([problem_7_0_1_] : [BIGINT]) - [10]
2020-11-25 21:06:29,041 TRACE  [main] BasicExtractor: extracted value ([problem_7_0_0_] : [BIGINT]) - [10]
2020-11-25 21:06:29,041 TRACE  [main] BasicExtractor: extracted value ([id1_0_0_] : [BIGINT]) - [60]
2020-11-25 21:06:29,052 TRACE  [main] BasicBinder: binding parameter [1] as [BIGINT] - [11]
2020-11-25 21:06:29,052 TRACE  [main] BasicExtractor: extracted value ([id1_1_2_] : [BIGINT]) - [null]
2020-11-25 21:06:29,052 TRACE  [main] BasicExtractor: extracted value ([id1_0_4_] : [BIGINT]) - [null]
2020-11-25 21:06:29,053 TRACE  [main] BasicExtractor: extracted value ([descript2_1_0_] : [BLOB]) - [[112, 114, 111, 98, 108, 101, 109, 100, 101, 115, 99, 114, 105, 112, 116, 105, 111, 110]]
2020-11-25 21:06:29,053 TRACE  [main] BasicExtractor: extracted value ([is_solve3_1_0_] : [BOOLEAN]) - [null]
2020-11-25 21:06:29,053 TRACE  [main] BasicExtractor: extracted value ([kind4_1_0_] : [VARCHAR]) - [POLYNOMIAL]
2020-11-25 21:06:29,053 TRACE  [main] BasicExtractor: extracted value ([matrix_d5_1_0_] : [INTEGER]) - [1]
2020-11-25 21:06:29,053 TRACE  [main] BasicExtractor: extracted value ([parent_p7_1_0_] : [BIGINT]) - [null]
2020-11-25 21:06:29,053 TRACE  [main] BasicExtractor: extracted value ([problem_6_1_0_] : [INTEGER]) - [22]
2020-11-25 21:06:29,053 TRACE  [main] BasicExtractor: extracted value ([problem_7_0_3_] : [BIGINT]) - [null]
2020-11-25 21:06:29,053 TRACE  [main] BasicExtractor: extracted value ([parent_p7_1_1_] : [BIGINT]) - [null]
2020-11-25 21:06:29,054 TRACE  [main] CollectionType: Created collection wrapper: [com.sf.back.entities.Problem.matrixes#11]
2020-11-25 21:06:29,054 TRACE  [main] BasicBinder: binding parameter [1] as [BIGINT] - [11]
2020-11-25 21:06:29,055 TRACE  [main] BasicExtractor: extracted value ([id1_0_1_] : [BIGINT]) - [61]
2020-11-25 21:06:29,055 TRACE  [main] BasicExtractor: extracted value ([binary_v2_0_1_] : [BLOB]) - [null]
2020-11-25 21:06:29,055 TRACE  [main] BasicExtractor: extracted value ([float_va3_0_1_] : [DOUBLE]) - [1.0]
2020-11-25 21:06:29,056 TRACE  [main] BasicExtractor: extracted value ([i4_0_1_] : [INTEGER]) - [0]
2020-11-25 21:06:29,056 TRACE  [main] BasicExtractor: extracted value ([is_condi5_0_1_] : [BOOLEAN]) - [true]
2020-11-25 21:06:29,056 TRACE  [main] BasicExtractor: extracted value ([j6_0_1_] : [INTEGER]) - [0]
2020-11-25 21:06:29,056 TRACE  [main] BasicExtractor: extracted value ([problem_7_0_1_] : [BIGINT]) - [11]
2020-11-25 21:06:29,056 TRACE  [main] BasicExtractor: extracted value ([problem_7_0_0_] : [BIGINT]) - [11]
2020-11-25 21:06:29,056 TRACE  [main] BasicExtractor: extracted value ([id1_0_0_] : [BIGINT]) - [61]
2020-11-25 21:06:29,056 TRACE  [main] BasicExtractor: extracted value ([id1_0_1_] : [BIGINT]) - [62]
2020-11-25 21:06:29,057 TRACE  [main] BasicExtractor: extracted value ([binary_v2_0_1_] : [BLOB]) - [null]
2020-11-25 21:06:29,057 TRACE  [main] BasicExtractor: extracted value ([float_va3_0_1_] : [DOUBLE]) - [2.718281828459045]
2020-11-25 21:06:29,057 TRACE  [main] BasicExtractor: extracted value ([i4_0_1_] : [INTEGER]) - [0]
2020-11-25 21:06:29,057 TRACE  [main] BasicExtractor: extracted value ([is_condi5_0_1_] : [BOOLEAN]) - [true]
2020-11-25 21:06:29,057 TRACE  [main] BasicExtractor: extracted value ([j6_0_1_] : [INTEGER]) - [1]
2020-11-25 21:06:29,057 TRACE  [main] BasicExtractor: extracted value ([problem_7_0_1_] : [BIGINT]) - [11]
2020-11-25 21:06:29,057 TRACE  [main] BasicExtractor: extracted value ([problem_7_0_0_] : [BIGINT]) - [11]
2020-11-25 21:06:29,057 TRACE  [main] BasicExtractor: extracted value ([id1_0_0_] : [BIGINT]) - [62]
2020-11-25 21:06:29,058 TRACE  [main] BasicExtractor: extracted value ([id1_0_1_] : [BIGINT]) - [63]
2020-11-25 21:06:29,058 TRACE  [main] BasicExtractor: extracted value ([binary_v2_0_1_] : [BLOB]) - [null]
2020-11-25 21:06:29,058 TRACE  [main] BasicExtractor: extracted value ([float_va3_0_1_] : [DOUBLE]) - [7.38905609893065]
2020-11-25 21:06:29,058 TRACE  [main] BasicExtractor: extracted value ([i4_0_1_] : [INTEGER]) - [0]
2020-11-25 21:06:29,058 TRACE  [main] BasicExtractor: extracted value ([is_condi5_0_1_] : [BOOLEAN]) - [true]
2020-11-25 21:06:29,058 TRACE  [main] BasicExtractor: extracted value ([j6_0_1_] : [INTEGER]) - [2]
2020-11-25 21:06:29,058 TRACE  [main] BasicExtractor: extracted value ([problem_7_0_1_] : [BIGINT]) - [11]
2020-11-25 21:06:29,058 TRACE  [main] BasicExtractor: extracted value ([problem_7_0_0_] : [BIGINT]) - [11]
2020-11-25 21:06:29,059 TRACE  [main] BasicExtractor: extracted value ([id1_0_0_] : [BIGINT]) - [63]
2020-11-25 21:06:29,059 TRACE  [main] BasicExtractor: extracted value ([id1_0_1_] : [BIGINT]) - [64]
2020-11-25 21:06:29,059 TRACE  [main] BasicExtractor: extracted value ([binary_v2_0_1_] : [BLOB]) - [null]
2020-11-25 21:06:29,059 TRACE  [main] BasicExtractor: extracted value ([float_va3_0_1_] : [DOUBLE]) - [20.085536923187668]
2020-11-25 21:06:29,059 TRACE  [main] BasicExtractor: extracted value ([i4_0_1_] : [INTEGER]) - [0]
2020-11-25 21:06:29,059 TRACE  [main] BasicExtractor: extracted value ([is_condi5_0_1_] : [BOOLEAN]) - [true]
2020-11-25 21:06:29,059 TRACE  [main] BasicExtractor: extracted value ([j6_0_1_] : [INTEGER]) - [3]
2020-11-25 21:06:29,060 TRACE  [main] BasicExtractor: extracted value ([problem_7_0_1_] : [BIGINT]) - [11]
2020-11-25 21:06:29,060 TRACE  [main] BasicExtractor: extracted value ([problem_7_0_0_] : [BIGINT]) - [11]
2020-11-25 21:06:29,060 TRACE  [main] BasicExtractor: extracted value ([id1_0_0_] : [BIGINT]) - [64]
2020-11-25 21:06:29,060 TRACE  [main] BasicExtractor: extracted value ([id1_0_1_] : [BIGINT]) - [65]
2020-11-25 21:06:29,060 TRACE  [main] BasicExtractor: extracted value ([binary_v2_0_1_] : [BLOB]) - [null]
2020-11-25 21:06:29,060 TRACE  [main] BasicExtractor: extracted value ([float_va3_0_1_] : [DOUBLE]) - [54.598150033144236]
2020-11-25 21:06:29,060 TRACE  [main] BasicExtractor: extracted value ([i4_0_1_] : [INTEGER]) - [0]
2020-11-25 21:06:29,061 TRACE  [main] BasicExtractor: extracted value ([is_condi5_0_1_] : [BOOLEAN]) - [true]
2020-11-25 21:06:29,061 TRACE  [main] BasicExtractor: extracted value ([j6_0_1_] : [INTEGER]) - [4]
2020-11-25 21:06:29,061 TRACE  [main] BasicExtractor: extracted value ([problem_7_0_1_] : [BIGINT]) - [11]
2020-11-25 21:06:29,061 TRACE  [main] BasicExtractor: extracted value ([problem_7_0_0_] : [BIGINT]) - [11]
2020-11-25 21:06:29,061 TRACE  [main] BasicExtractor: extracted value ([id1_0_0_] : [BIGINT]) - [65]
2020-11-25 21:06:29,061 TRACE  [main] BasicExtractor: extracted value ([id1_0_1_] : [BIGINT]) - [66]
2020-11-25 21:06:29,061 TRACE  [main] BasicExtractor: extracted value ([binary_v2_0_1_] : [BLOB]) - [null]
2020-11-25 21:06:29,061 TRACE  [main] BasicExtractor: extracted value ([float_va3_0_1_] : [DOUBLE]) - [148.4131591025766]
2020-11-25 21:06:29,062 TRACE  [main] BasicExtractor: extracted value ([i4_0_1_] : [INTEGER]) - [0]
2020-11-25 21:06:29,062 TRACE  [main] BasicExtractor: extracted value ([is_condi5_0_1_] : [BOOLEAN]) - [true]
2020-11-25 21:06:29,062 TRACE  [main] BasicExtractor: extracted value ([j6_0_1_] : [INTEGER]) - [5]
2020-11-25 21:06:29,062 TRACE  [main] BasicExtractor: extracted value ([problem_7_0_1_] : [BIGINT]) - [11]
2020-11-25 21:06:29,062 TRACE  [main] BasicExtractor: extracted value ([problem_7_0_0_] : [BIGINT]) - [11]
2020-11-25 21:06:29,062 TRACE  [main] BasicExtractor: extracted value ([id1_0_0_] : [BIGINT]) - [66]
2020-11-25 21:06:29,065 TRACE  [main] BasicBinder: binding parameter [1] as [BIGINT] - [11]
2020-11-25 21:06:29,067 TRACE  [main] BasicExtractor: extracted value ([id1_0_0_] : [BIGINT]) - [61]
2020-11-25 21:06:29,067 TRACE  [main] BasicExtractor: extracted value ([binary_v2_0_0_] : [BLOB]) - [null]
2020-11-25 21:06:29,067 TRACE  [main] BasicExtractor: extracted value ([float_va3_0_0_] : [DOUBLE]) - [1.0]
2020-11-25 21:06:29,067 TRACE  [main] BasicExtractor: extracted value ([i4_0_0_] : [INTEGER]) - [0]
2020-11-25 21:06:29,067 TRACE  [main] BasicExtractor: extracted value ([is_condi5_0_0_] : [BOOLEAN]) - [true]
2020-11-25 21:06:29,067 TRACE  [main] BasicExtractor: extracted value ([j6_0_0_] : [INTEGER]) - [0]
2020-11-25 21:06:29,067 TRACE  [main] BasicExtractor: extracted value ([problem_7_0_0_] : [BIGINT]) - [11]
2020-11-25 21:06:29,068 TRACE  [main] BasicExtractor: extracted value ([descript2_1_1_] : [BLOB]) - [[112, 114, 111, 98, 108, 101, 109, 100, 101, 115, 99, 114, 105, 112, 116, 105, 111, 110]]
2020-11-25 21:06:29,068 TRACE  [main] BasicExtractor: extracted value ([is_solve3_1_1_] : [BOOLEAN]) - [null]
2020-11-25 21:06:29,068 TRACE  [main] BasicExtractor: extracted value ([kind4_1_1_] : [VARCHAR]) - [POLYNOMIAL]
2020-11-25 21:06:29,068 TRACE  [main] BasicExtractor: extracted value ([matrix_d5_1_1_] : [INTEGER]) - [1]
2020-11-25 21:06:29,069 TRACE  [main] BasicExtractor: extracted value ([parent_p7_1_1_] : [BIGINT]) - [null]
2020-11-25 21:06:29,069 TRACE  [main] BasicExtractor: extracted value ([problem_6_1_1_] : [INTEGER]) - [22]
2020-11-25 21:06:29,069 TRACE  [main] BasicExtractor: extracted value ([problem_7_0_3_] : [BIGINT]) - [11]
2020-11-25 21:06:29,069 TRACE  [main] BasicExtractor: extracted value ([id1_0_3_] : [BIGINT]) - [61]
2020-11-25 21:06:29,069 TRACE  [main] BasicExtractor: extracted value ([id1_0_0_] : [BIGINT]) - [62]
2020-11-25 21:06:29,069 TRACE  [main] BasicExtractor: extracted value ([binary_v2_0_0_] : [BLOB]) - [null]
2020-11-25 21:06:29,070 TRACE  [main] BasicExtractor: extracted value ([float_va3_0_0_] : [DOUBLE]) - [2.718281828459045]
2020-11-25 21:06:29,070 TRACE  [main] BasicExtractor: extracted value ([i4_0_0_] : [INTEGER]) - [0]
2020-11-25 21:06:29,070 TRACE  [main] BasicExtractor: extracted value ([is_condi5_0_0_] : [BOOLEAN]) - [true]
2020-11-25 21:06:29,070 TRACE  [main] BasicExtractor: extracted value ([j6_0_0_] : [INTEGER]) - [1]
2020-11-25 21:06:29,070 TRACE  [main] BasicExtractor: extracted value ([problem_7_0_0_] : [BIGINT]) - [11]
2020-11-25 21:06:29,070 TRACE  [main] BasicExtractor: extracted value ([problem_7_0_3_] : [BIGINT]) - [11]
2020-11-25 21:06:29,070 TRACE  [main] BasicExtractor: extracted value ([id1_0_3_] : [BIGINT]) - [62]
2020-11-25 21:06:29,071 TRACE  [main] BasicExtractor: extracted value ([id1_0_0_] : [BIGINT]) - [63]
2020-11-25 21:06:29,071 TRACE  [main] BasicExtractor: extracted value ([binary_v2_0_0_] : [BLOB]) - [null]
2020-11-25 21:06:29,071 TRACE  [main] BasicExtractor: extracted value ([float_va3_0_0_] : [DOUBLE]) - [7.38905609893065]
2020-11-25 21:06:29,071 TRACE  [main] BasicExtractor: extracted value ([i4_0_0_] : [INTEGER]) - [0]
2020-11-25 21:06:29,071 TRACE  [main] BasicExtractor: extracted value ([is_condi5_0_0_] : [BOOLEAN]) - [true]
2020-11-25 21:06:29,071 TRACE  [main] BasicExtractor: extracted value ([j6_0_0_] : [INTEGER]) - [2]
2020-11-25 21:06:29,071 TRACE  [main] BasicExtractor: extracted value ([problem_7_0_0_] : [BIGINT]) - [11]
2020-11-25 21:06:29,072 TRACE  [main] BasicExtractor: extracted value ([problem_7_0_3_] : [BIGINT]) - [11]
2020-11-25 21:06:29,072 TRACE  [main] BasicExtractor: extracted value ([id1_0_3_] : [BIGINT]) - [63]
2020-11-25 21:06:29,072 TRACE  [main] BasicExtractor: extracted value ([id1_0_0_] : [BIGINT]) - [64]
2020-11-25 21:06:29,072 TRACE  [main] BasicExtractor: extracted value ([binary_v2_0_0_] : [BLOB]) - [null]
2020-11-25 21:06:29,072 TRACE  [main] BasicExtractor: extracted value ([float_va3_0_0_] : [DOUBLE]) - [20.085536923187668]
2020-11-25 21:06:29,072 TRACE  [main] BasicExtractor: extracted value ([i4_0_0_] : [INTEGER]) - [0]
2020-11-25 21:06:29,072 TRACE  [main] BasicExtractor: extracted value ([is_condi5_0_0_] : [BOOLEAN]) - [true]
2020-11-25 21:06:29,085 TRACE  [main] BasicExtractor: extracted value ([j6_0_0_] : [INTEGER]) - [3]
2020-11-25 21:06:29,085 TRACE  [main] BasicExtractor: extracted value ([problem_7_0_0_] : [BIGINT]) - [11]
2020-11-25 21:06:29,085 TRACE  [main] BasicExtractor: extracted value ([problem_7_0_3_] : [BIGINT]) - [11]
2020-11-25 21:06:29,085 TRACE  [main] BasicExtractor: extracted value ([id1_0_3_] : [BIGINT]) - [64]
2020-11-25 21:06:29,085 TRACE  [main] BasicExtractor: extracted value ([id1_0_0_] : [BIGINT]) - [65]
2020-11-25 21:06:29,086 TRACE  [main] BasicExtractor: extracted value ([binary_v2_0_0_] : [BLOB]) - [null]
2020-11-25 21:06:29,086 TRACE  [main] BasicExtractor: extracted value ([float_va3_0_0_] : [DOUBLE]) - [54.598150033144236]
2020-11-25 21:06:29,086 TRACE  [main] BasicExtractor: extracted value ([i4_0_0_] : [INTEGER]) - [0]
2020-11-25 21:06:29,086 TRACE  [main] BasicExtractor: extracted value ([is_condi5_0_0_] : [BOOLEAN]) - [true]
2020-11-25 21:06:29,086 TRACE  [main] BasicExtractor: extracted value ([j6_0_0_] : [INTEGER]) - [4]
2020-11-25 21:06:29,086 TRACE  [main] BasicExtractor: extracted value ([problem_7_0_0_] : [BIGINT]) - [11]
2020-11-25 21:06:29,086 TRACE  [main] BasicExtractor: extracted value ([problem_7_0_3_] : [BIGINT]) - [11]
2020-11-25 21:06:29,086 TRACE  [main] BasicExtractor: extracted value ([id1_0_3_] : [BIGINT]) - [65]
2020-11-25 21:06:29,087 TRACE  [main] BasicExtractor: extracted value ([id1_0_0_] : [BIGINT]) - [66]
2020-11-25 21:06:29,087 TRACE  [main] BasicExtractor: extracted value ([binary_v2_0_0_] : [BLOB]) - [null]
2020-11-25 21:06:29,087 TRACE  [main] BasicExtractor: extracted value ([float_va3_0_0_] : [DOUBLE]) - [148.4131591025766]
2020-11-25 21:06:29,087 TRACE  [main] BasicExtractor: extracted value ([i4_0_0_] : [INTEGER]) - [0]
2020-11-25 21:06:29,087 TRACE  [main] BasicExtractor: extracted value ([is_condi5_0_0_] : [BOOLEAN]) - [true]
2020-11-25 21:06:29,087 TRACE  [main] BasicExtractor: extracted value ([j6_0_0_] : [INTEGER]) - [5]
2020-11-25 21:06:29,087 TRACE  [main] BasicExtractor: extracted value ([problem_7_0_0_] : [BIGINT]) - [11]
2020-11-25 21:06:29,088 TRACE  [main] BasicExtractor: extracted value ([problem_7_0_3_] : [BIGINT]) - [11]
2020-11-25 21:06:29,088 TRACE  [main] BasicExtractor: extracted value ([id1_0_3_] : [BIGINT]) - [66]
2020-11-25 21:06:29,088 TRACE  [main] CollectionType: Created collection wrapper: [com.sf.back.entities.Problem.children#11]
2020-11-25 21:06:29,091 TRACE  [main] BasicBinder: binding parameter [1] as [BIGINT] - [11]
2020-11-25 21:06:29,094 TRACE  [main] BasicBinder: binding parameter [1] as [BLOB] - [null]
2020-11-25 21:06:29,094 TRACE  [main] BasicBinder: binding parameter [2] as [DOUBLE] - [2.0]
2020-11-25 21:06:29,094 TRACE  [main] BasicBinder: binding parameter [3] as [INTEGER] - [0]
2020-11-25 21:06:29,094 TRACE  [main] BasicBinder: binding parameter [4] as [BOOLEAN] - [true]
2020-11-25 21:06:29,094 TRACE  [main] BasicBinder: binding parameter [5] as [INTEGER] - [0]
2020-11-25 21:06:29,095 TRACE  [main] BasicBinder: binding parameter [6] as [BIGINT] - [11]
2020-11-25 21:06:29,095 TRACE  [main] BasicBinder: binding parameter [7] as [BIGINT] - [61]
2020-11-25 21:06:29,096 TRACE  [main] BasicBinder: binding parameter [1] as [BLOB] - [[100, 101, 115, 99, 114, 105, 112, 116, 105, 111, 110, 112, 114, 111, 98, 108, 101, 109]]
2020-11-25 21:06:29,096 TRACE  [main] BasicBinder: binding parameter [2] as [BOOLEAN] - [null]
2020-11-25 21:06:29,096 TRACE  [main] BasicBinder: binding parameter [3] as [VARCHAR] - [POLYNOMIAL]
2020-11-25 21:06:29,096 TRACE  [main] BasicBinder: binding parameter [4] as [INTEGER] - [1]
2020-11-25 21:06:29,096 TRACE  [main] BasicBinder: binding parameter [5] as [BIGINT] - [null]
2020-11-25 21:06:29,097 TRACE  [main] BasicBinder: binding parameter [6] as [INTEGER] - [22]
2020-11-25 21:06:29,097 TRACE  [main] BasicBinder: binding parameter [7] as [BIGINT] - [11]
2020-11-25 21:06:29,112 TRACE  [main] BasicBinder: binding parameter [1] as [BIGINT] - [12]
2020-11-25 21:06:29,113 TRACE  [main] BasicExtractor: extracted value ([id1_1_2_] : [BIGINT]) - [null]
2020-11-25 21:06:29,113 TRACE  [main] BasicExtractor: extracted value ([id1_0_4_] : [BIGINT]) - [null]
2020-11-25 21:06:29,114 TRACE  [main] BasicExtractor: extracted value ([descript2_1_0_] : [BLOB]) - [[112, 114, 111, 98, 108, 101, 109, 100, 101, 115, 99, 114, 105, 112, 116, 105, 111, 110]]
2020-11-25 21:06:29,114 TRACE  [main] BasicExtractor: extracted value ([is_solve3_1_0_] : [BOOLEAN]) - [null]
2020-11-25 21:06:29,115 TRACE  [main] BasicExtractor: extracted value ([kind4_1_0_] : [VARCHAR]) - [POLYNOMIAL]
2020-11-25 21:06:29,115 TRACE  [main] BasicExtractor: extracted value ([matrix_d5_1_0_] : [INTEGER]) - [1]
2020-11-25 21:06:29,115 TRACE  [main] BasicExtractor: extracted value ([parent_p7_1_0_] : [BIGINT]) - [null]
2020-11-25 21:06:29,116 TRACE  [main] BasicExtractor: extracted value ([problem_6_1_0_] : [INTEGER]) - [22]
2020-11-25 21:06:29,116 TRACE  [main] BasicExtractor: extracted value ([problem_7_0_3_] : [BIGINT]) - [null]
2020-11-25 21:06:29,116 TRACE  [main] BasicExtractor: extracted value ([parent_p7_1_1_] : [BIGINT]) - [null]
2020-11-25 21:06:29,116 TRACE  [main] CollectionType: Created collection wrapper: [com.sf.back.entities.Problem.matrixes#12]
2020-11-25 21:06:29,117 TRACE  [main] BasicBinder: binding parameter [1] as [BIGINT] - [12]
2020-11-25 21:06:29,118 TRACE  [main] BasicExtractor: extracted value ([id1_0_1_] : [BIGINT]) - [67]
2020-11-25 21:06:29,119 TRACE  [main] BasicExtractor: extracted value ([binary_v2_0_1_] : [BLOB]) - [null]
2020-11-25 21:06:29,119 TRACE  [main] BasicExtractor: extracted value ([float_va3_0_1_] : [DOUBLE]) - [1.0]
2020-11-25 21:06:29,119 TRACE  [main] BasicExtractor: extracted value ([i4_0_1_] : [INTEGER]) - [0]
2020-11-25 21:06:29,119 TRACE  [main] BasicExtractor: extracted value ([is_condi5_0_1_] : [BOOLEAN]) - [true]
2020-11-25 21:06:29,120 TRACE  [main] BasicExtractor: extracted value ([j6_0_1_] : [INTEGER]) - [0]
2020-11-25 21:06:29,120 TRACE  [main] BasicExtractor: extracted value ([problem_7_0_1_] : [BIGINT]) - [12]
2020-11-25 21:06:29,120 TRACE  [main] BasicExtractor: extracted value ([problem_7_0_0_] : [BIGINT]) - [12]
2020-11-25 21:06:29,120 TRACE  [main] BasicExtractor: extracted value ([id1_0_0_] : [BIGINT]) - [67]
2020-11-25 21:06:29,120 TRACE  [main] BasicExtractor: extracted value ([id1_0_1_] : [BIGINT]) - [68]
2020-11-25 21:06:29,121 TRACE  [main] BasicExtractor: extracted value ([binary_v2_0_1_] : [BLOB]) - [null]
2020-11-25 21:06:29,121 TRACE  [main] BasicExtractor: extracted value ([float_va3_0_1_] : [DOUBLE]) - [2.718281828459045]
2020-11-25 21:06:29,121 TRACE  [main] BasicExtractor: extracted value ([i4_0_1_] : [INTEGER]) - [0]
2020-11-25 21:06:29,121 TRACE  [main] BasicExtractor: extracted value ([is_condi5_0_1_] : [BOOLEAN]) - [true]
2020-11-25 21:06:29,121 TRACE  [main] BasicExtractor: extracted value ([j6_0_1_] : [INTEGER]) - [1]
2020-11-25 21:06:29,121 TRACE  [main] BasicExtractor: extracted value ([problem_7_0_1_] : [BIGINT]) - [12]
2020-11-25 21:06:29,122 TRACE  [main] BasicExtractor: extracted value ([problem_7_0_0_] : [BIGINT]) - [12]
2020-11-25 21:06:29,122 TRACE  [main] BasicExtractor: extracted value ([id1_0_0_] : [BIGINT]) - [68]
2020-11-25 21:06:29,123 TRACE  [main] BasicExtractor: extracted value ([id1_0_1_] : [BIGINT]) - [69]
2020-11-25 21:06:29,123 TRACE  [main] BasicExtractor: extracted value ([binary_v2_0_1_] : [BLOB]) - [null]
2020-11-25 21:06:29,123 TRACE  [main] BasicExtractor: extracted value ([float_va3_0_1_] : [DOUBLE]) - [7.38905609893065]
2020-11-25 21:06:29,123 TRACE  [main] BasicExtractor: extracted value ([i4_0_1_] : [INTEGER]) - [0]
2020-11-25 21:06:29,124 TRACE  [main] BasicExtractor: extracted value ([is_condi5_0_1_] : [BOOLEAN]) - [true]
2020-11-25 21:06:29,124 TRACE  [main] BasicExtractor: extracted value ([j6_0_1_] : [INTEGER]) - [2]
2020-11-25 21:06:29,124 TRACE  [main] BasicExtractor: extracted value ([problem_7_0_1_] : [BIGINT]) - [12]
2020-11-25 21:06:29,124 TRACE  [main] BasicExtractor: extracted value ([problem_7_0_0_] : [BIGINT]) - [12]
2020-11-25 21:06:29,124 TRACE  [main] BasicExtractor: extracted value ([id1_0_0_] : [BIGINT]) - [69]
2020-11-25 21:06:29,124 TRACE  [main] BasicExtractor: extracted value ([id1_0_1_] : [BIGINT]) - [70]
2020-11-25 21:06:29,125 TRACE  [main] BasicExtractor: extracted value ([binary_v2_0_1_] : [BLOB]) - [null]
2020-11-25 21:06:29,125 TRACE  [main] BasicExtractor: extracted value ([float_va3_0_1_] : [DOUBLE]) - [20.085536923187668]
2020-11-25 21:06:29,125 TRACE  [main] BasicExtractor: extracted value ([i4_0_1_] : [INTEGER]) - [0]
2020-11-25 21:06:29,125 TRACE  [main] BasicExtractor: extracted value ([is_condi5_0_1_] : [BOOLEAN]) - [true]
2020-11-25 21:06:29,126 TRACE  [main] BasicExtractor: extracted value ([j6_0_1_] : [INTEGER]) - [3]
2020-11-25 21:06:29,126 TRACE  [main] BasicExtractor: extracted value ([problem_7_0_1_] : [BIGINT]) - [12]
2020-11-25 21:06:29,126 TRACE  [main] BasicExtractor: extracted value ([problem_7_0_0_] : [BIGINT]) - [12]
2020-11-25 21:06:29,126 TRACE  [main] BasicExtractor: extracted value ([id1_0_0_] : [BIGINT]) - [70]
2020-11-25 21:06:29,126 TRACE  [main] BasicExtractor: extracted value ([id1_0_1_] : [BIGINT]) - [71]
2020-11-25 21:06:29,126 TRACE  [main] BasicExtractor: extracted value ([binary_v2_0_1_] : [BLOB]) - [null]
2020-11-25 21:06:29,127 TRACE  [main] BasicExtractor: extracted value ([float_va3_0_1_] : [DOUBLE]) - [54.598150033144236]
2020-11-25 21:06:29,127 TRACE  [main] BasicExtractor: extracted value ([i4_0_1_] : [INTEGER]) - [0]
2020-11-25 21:06:29,127 TRACE  [main] BasicExtractor: extracted value ([is_condi5_0_1_] : [BOOLEAN]) - [true]
2020-11-25 21:06:29,128 TRACE  [main] BasicExtractor: extracted value ([j6_0_1_] : [INTEGER]) - [4]
2020-11-25 21:06:29,128 TRACE  [main] BasicExtractor: extracted value ([problem_7_0_1_] : [BIGINT]) - [12]
2020-11-25 21:06:29,128 TRACE  [main] BasicExtractor: extracted value ([problem_7_0_0_] : [BIGINT]) - [12]
2020-11-25 21:06:29,128 TRACE  [main] BasicExtractor: extracted value ([id1_0_0_] : [BIGINT]) - [71]
2020-11-25 21:06:29,128 TRACE  [main] BasicExtractor: extracted value ([id1_0_1_] : [BIGINT]) - [72]
2020-11-25 21:06:29,129 TRACE  [main] BasicExtractor: extracted value ([binary_v2_0_1_] : [BLOB]) - [null]
2020-11-25 21:06:29,129 TRACE  [main] BasicExtractor: extracted value ([float_va3_0_1_] : [DOUBLE]) - [148.4131591025766]
2020-11-25 21:06:29,129 TRACE  [main] BasicExtractor: extracted value ([i4_0_1_] : [INTEGER]) - [0]
2020-11-25 21:06:29,129 TRACE  [main] BasicExtractor: extracted value ([is_condi5_0_1_] : [BOOLEAN]) - [true]
2020-11-25 21:06:29,129 TRACE  [main] BasicExtractor: extracted value ([j6_0_1_] : [INTEGER]) - [5]
2020-11-25 21:06:29,129 TRACE  [main] BasicExtractor: extracted value ([problem_7_0_1_] : [BIGINT]) - [12]
2020-11-25 21:06:29,130 TRACE  [main] BasicExtractor: extracted value ([problem_7_0_0_] : [BIGINT]) - [12]
2020-11-25 21:06:29,130 TRACE  [main] BasicExtractor: extracted value ([id1_0_0_] : [BIGINT]) - [72]
2020-11-25 21:06:29,134 TRACE  [main] BasicBinder: binding parameter [1] as [BIGINT] - [12]
2020-11-25 21:06:29,134 TRACE  [main] BasicExtractor: extracted value ([id1_1_2_] : [BIGINT]) - [null]
2020-11-25 21:06:29,135 TRACE  [main] BasicExtractor: extracted value ([id1_0_4_] : [BIGINT]) - [null]
2020-11-25 21:06:29,135 TRACE  [main] BasicExtractor: extracted value ([descript2_1_0_] : [BLOB]) - [[112, 114, 111, 98, 108, 101, 109, 100, 101, 115, 99, 114, 105, 112, 116, 105, 111, 110]]
2020-11-25 21:06:29,135 TRACE  [main] BasicExtractor: extracted value ([is_solve3_1_0_] : [BOOLEAN]) - [null]
2020-11-25 21:06:29,135 TRACE  [main] BasicExtractor: extracted value ([kind4_1_0_] : [VARCHAR]) - [POLYNOMIAL]
2020-11-25 21:06:29,136 TRACE  [main] BasicExtractor: extracted value ([matrix_d5_1_0_] : [INTEGER]) - [1]
2020-11-25 21:06:29,136 TRACE  [main] BasicExtractor: extracted value ([parent_p7_1_0_] : [BIGINT]) - [null]
2020-11-25 21:06:29,136 TRACE  [main] BasicExtractor: extracted value ([problem_6_1_0_] : [INTEGER]) - [22]
2020-11-25 21:06:29,136 TRACE  [main] BasicExtractor: extracted value ([problem_7_0_3_] : [BIGINT]) - [null]
2020-11-25 21:06:29,136 TRACE  [main] BasicExtractor: extracted value ([parent_p7_1_1_] : [BIGINT]) - [null]
2020-11-25 21:06:29,137 TRACE  [main] CollectionType: Created collection wrapper: [com.sf.back.entities.Problem.matrixes#12]
2020-11-25 21:06:29,137 TRACE  [main] BasicBinder: binding parameter [1] as [BIGINT] - [12]
2020-11-25 21:06:29,138 TRACE  [main] BasicExtractor: extracted value ([id1_0_1_] : [BIGINT]) - [67]
2020-11-25 21:06:29,138 TRACE  [main] BasicExtractor: extracted value ([binary_v2_0_1_] : [BLOB]) - [null]
2020-11-25 21:06:29,138 TRACE  [main] BasicExtractor: extracted value ([float_va3_0_1_] : [DOUBLE]) - [1.0]
2020-11-25 21:06:29,138 TRACE  [main] BasicExtractor: extracted value ([i4_0_1_] : [INTEGER]) - [0]
2020-11-25 21:06:29,138 TRACE  [main] BasicExtractor: extracted value ([is_condi5_0_1_] : [BOOLEAN]) - [true]
2020-11-25 21:06:29,139 TRACE  [main] BasicExtractor: extracted value ([j6_0_1_] : [INTEGER]) - [0]
2020-11-25 21:06:29,139 TRACE  [main] BasicExtractor: extracted value ([problem_7_0_1_] : [BIGINT]) - [12]
2020-11-25 21:06:29,139 TRACE  [main] BasicExtractor: extracted value ([problem_7_0_0_] : [BIGINT]) - [12]
2020-11-25 21:06:29,139 TRACE  [main] BasicExtractor: extracted value ([id1_0_0_] : [BIGINT]) - [67]
2020-11-25 21:06:29,139 TRACE  [main] BasicExtractor: extracted value ([id1_0_1_] : [BIGINT]) - [68]
2020-11-25 21:06:29,140 TRACE  [main] BasicExtractor: extracted value ([binary_v2_0_1_] : [BLOB]) - [null]
2020-11-25 21:06:29,140 TRACE  [main] BasicExtractor: extracted value ([float_va3_0_1_] : [DOUBLE]) - [2.718281828459045]
2020-11-25 21:06:29,140 TRACE  [main] BasicExtractor: extracted value ([i4_0_1_] : [INTEGER]) - [0]
2020-11-25 21:06:29,140 TRACE  [main] BasicExtractor: extracted value ([is_condi5_0_1_] : [BOOLEAN]) - [true]
2020-11-25 21:06:29,140 TRACE  [main] BasicExtractor: extracted value ([j6_0_1_] : [INTEGER]) - [1]
2020-11-25 21:06:29,140 TRACE  [main] BasicExtractor: extracted value ([problem_7_0_1_] : [BIGINT]) - [12]
2020-11-25 21:06:29,141 TRACE  [main] BasicExtractor: extracted value ([problem_7_0_0_] : [BIGINT]) - [12]
2020-11-25 21:06:29,141 TRACE  [main] BasicExtractor: extracted value ([id1_0_0_] : [BIGINT]) - [68]
2020-11-25 21:06:29,141 TRACE  [main] BasicExtractor: extracted value ([id1_0_1_] : [BIGINT]) - [69]
2020-11-25 21:06:29,141 TRACE  [main] BasicExtractor: extracted value ([binary_v2_0_1_] : [BLOB]) - [null]
2020-11-25 21:06:29,141 TRACE  [main] BasicExtractor: extracted value ([float_va3_0_1_] : [DOUBLE]) - [7.38905609893065]
2020-11-25 21:06:29,141 TRACE  [main] BasicExtractor: extracted value ([i4_0_1_] : [INTEGER]) - [0]
2020-11-25 21:06:29,142 TRACE  [main] BasicExtractor: extracted value ([is_condi5_0_1_] : [BOOLEAN]) - [true]
2020-11-25 21:06:29,142 TRACE  [main] BasicExtractor: extracted value ([j6_0_1_] : [INTEGER]) - [2]
2020-11-25 21:06:29,142 TRACE  [main] BasicExtractor: extracted value ([problem_7_0_1_] : [BIGINT]) - [12]
2020-11-25 21:06:29,142 TRACE  [main] BasicExtractor: extracted value ([problem_7_0_0_] : [BIGINT]) - [12]
2020-11-25 21:06:29,142 TRACE  [main] BasicExtractor: extracted value ([id1_0_0_] : [BIGINT]) - [69]
2020-11-25 21:06:29,142 TRACE  [main] BasicExtractor: extracted value ([id1_0_1_] : [BIGINT]) - [70]
2020-11-25 21:06:29,143 TRACE  [main] BasicExtractor: extracted value ([binary_v2_0_1_] : [BLOB]) - [null]
2020-11-25 21:06:29,143 TRACE  [main] BasicExtractor: extracted value ([float_va3_0_1_] : [DOUBLE]) - [20.085536923187668]
2020-11-25 21:06:29,143 TRACE  [main] BasicExtractor: extracted value ([i4_0_1_] : [INTEGER]) - [0]
2020-11-25 21:06:29,143 TRACE  [main] BasicExtractor: extracted value ([is_condi5_0_1_] : [BOOLEAN]) - [true]
2020-11-25 21:06:29,143 TRACE  [main] BasicExtractor: extracted value ([j6_0_1_] : [INTEGER]) - [3]
2020-11-25 21:06:29,143 TRACE  [main] BasicExtractor: extracted value ([problem_7_0_1_] : [BIGINT]) - [12]
2020-11-25 21:06:29,143 TRACE  [main] BasicExtractor: extracted value ([problem_7_0_0_] : [BIGINT]) - [12]
2020-11-25 21:06:29,144 TRACE  [main] BasicExtractor: extracted value ([id1_0_0_] : [BIGINT]) - [70]
2020-11-25 21:06:29,144 TRACE  [main] BasicExtractor: extracted value ([id1_0_1_] : [BIGINT]) - [71]
2020-11-25 21:06:29,144 TRACE  [main] BasicExtractor: extracted value ([binary_v2_0_1_] : [BLOB]) - [null]
2020-11-25 21:06:29,144 TRACE  [main] BasicExtractor: extracted value ([float_va3_0_1_] : [DOUBLE]) - [54.598150033144236]
2020-11-25 21:06:29,144 TRACE  [main] BasicExtractor: extracted value ([i4_0_1_] : [INTEGER]) - [0]
2020-11-25 21:06:29,144 TRACE  [main] BasicExtractor: extracted value ([is_condi5_0_1_] : [BOOLEAN]) - [true]
2020-11-25 21:06:29,144 TRACE  [main] BasicExtractor: extracted value ([j6_0_1_] : [INTEGER]) - [4]
2020-11-25 21:06:29,145 TRACE  [main] BasicExtractor: extracted value ([problem_7_0_1_] : [BIGINT]) - [12]
2020-11-25 21:06:29,145 TRACE  [main] BasicExtractor: extracted value ([problem_7_0_0_] : [BIGINT]) - [12]
2020-11-25 21:06:29,145 TRACE  [main] BasicExtractor: extracted value ([id1_0_0_] : [BIGINT]) - [71]
2020-11-25 21:06:29,145 TRACE  [main] BasicExtractor: extracted value ([id1_0_1_] : [BIGINT]) - [72]
2020-11-25 21:06:29,145 TRACE  [main] BasicExtractor: extracted value ([binary_v2_0_1_] : [BLOB]) - [null]
2020-11-25 21:06:29,145 TRACE  [main] BasicExtractor: extracted value ([float_va3_0_1_] : [DOUBLE]) - [148.4131591025766]
2020-11-25 21:06:29,145 TRACE  [main] BasicExtractor: extracted value ([i4_0_1_] : [INTEGER]) - [0]
2020-11-25 21:06:29,145 TRACE  [main] BasicExtractor: extracted value ([is_condi5_0_1_] : [BOOLEAN]) - [true]
2020-11-25 21:06:29,145 TRACE  [main] BasicExtractor: extracted value ([j6_0_1_] : [INTEGER]) - [5]
2020-11-25 21:06:29,145 TRACE  [main] BasicExtractor: extracted value ([problem_7_0_1_] : [BIGINT]) - [12]
2020-11-25 21:06:29,145 TRACE  [main] BasicExtractor: extracted value ([problem_7_0_0_] : [BIGINT]) - [12]
2020-11-25 21:06:29,146 TRACE  [main] BasicExtractor: extracted value ([id1_0_0_] : [BIGINT]) - [72]
2020-11-25 21:06:29,157 TRACE  [main] BasicBinder: binding parameter [1] as [BIGINT] - [67]
2020-11-25 21:06:29,160 TRACE  [main] BasicBinder: binding parameter [1] as [BIGINT] - [68]
2020-11-25 21:06:29,161 TRACE  [main] BasicBinder: binding parameter [1] as [BIGINT] - [69]
2020-11-25 21:06:29,162 TRACE  [main] BasicBinder: binding parameter [1] as [BIGINT] - [70]
2020-11-25 21:06:29,163 TRACE  [main] BasicBinder: binding parameter [1] as [BIGINT] - [71]
2020-11-25 21:06:29,167 TRACE  [main] BasicBinder: binding parameter [1] as [BIGINT] - [72]
2020-11-25 21:06:29,168 TRACE  [main] BasicBinder: binding parameter [1] as [BIGINT] - [12]
2020-11-25 21:06:29,174 TRACE  [main] BasicBinder: binding parameter [1] as [BIGINT] - [12]
2020-11-25 21:06:29,177 WARN   [main] ProblemService: Problem with 12 is not found
2020-11-25 21:06:30,011 DEBUG  [main] BasicTypeRegistry: Adding type registration boolean -> org.hibernate.type.BooleanType@73a49597
2020-11-25 21:06:30,011 DEBUG  [main] BasicTypeRegistry: Adding type registration boolean -> org.hibernate.type.BooleanType@73a49597
2020-11-25 21:06:30,012 DEBUG  [main] BasicTypeRegistry: Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@73a49597
2020-11-25 21:06:30,012 DEBUG  [main] BasicTypeRegistry: Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@37f41a81
2020-11-25 21:06:30,012 DEBUG  [main] BasicTypeRegistry: Adding type registration true_false -> org.hibernate.type.TrueFalseType@12548f9a
2020-11-25 21:06:30,013 DEBUG  [main] BasicTypeRegistry: Adding type registration yes_no -> org.hibernate.type.YesNoType@2e4d4d22
2020-11-25 21:06:30,013 DEBUG  [main] BasicTypeRegistry: Adding type registration byte -> org.hibernate.type.ByteType@305881b8
2020-11-25 21:06:30,014 DEBUG  [main] BasicTypeRegistry: Adding type registration byte -> org.hibernate.type.ByteType@305881b8
2020-11-25 21:06:30,014 DEBUG  [main] BasicTypeRegistry: Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@305881b8
2020-11-25 21:06:30,014 DEBUG  [main] BasicTypeRegistry: Adding type registration character -> org.hibernate.type.CharacterType@72f35a31
2020-11-25 21:06:30,015 DEBUG  [main] BasicTypeRegistry: Adding type registration char -> org.hibernate.type.CharacterType@72f35a31
2020-11-25 21:06:30,015 DEBUG  [main] BasicTypeRegistry: Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@72f35a31
2020-11-25 21:06:30,016 DEBUG  [main] BasicTypeRegistry: Adding type registration short -> org.hibernate.type.ShortType@4377ed24
2020-11-25 21:06:30,016 DEBUG  [main] BasicTypeRegistry: Adding type registration short -> org.hibernate.type.ShortType@4377ed24
2020-11-25 21:06:30,017 DEBUG  [main] BasicTypeRegistry: Adding type registration java.lang.Short -> org.hibernate.type.ShortType@4377ed24
2020-11-25 21:06:30,018 DEBUG  [main] BasicTypeRegistry: Adding type registration integer -> org.hibernate.type.IntegerType@b339a08
2020-11-25 21:06:30,018 DEBUG  [main] BasicTypeRegistry: Adding type registration int -> org.hibernate.type.IntegerType@b339a08
2020-11-25 21:06:30,018 DEBUG  [main] BasicTypeRegistry: Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@b339a08
2020-11-25 21:06:30,019 DEBUG  [main] BasicTypeRegistry: Adding type registration long -> org.hibernate.type.LongType@36d7a68a
2020-11-25 21:06:30,019 DEBUG  [main] BasicTypeRegistry: Adding type registration long -> org.hibernate.type.LongType@36d7a68a
2020-11-25 21:06:30,019 DEBUG  [main] BasicTypeRegistry: Adding type registration java.lang.Long -> org.hibernate.type.LongType@36d7a68a
2020-11-25 21:06:30,020 DEBUG  [main] BasicTypeRegistry: Adding type registration float -> org.hibernate.type.FloatType@4d664323
2020-11-25 21:06:30,020 DEBUG  [main] BasicTypeRegistry: Adding type registration float -> org.hibernate.type.FloatType@4d664323
2020-11-25 21:06:30,020 DEBUG  [main] BasicTypeRegistry: Adding type registration java.lang.Float -> org.hibernate.type.FloatType@4d664323
2020-11-25 21:06:30,020 DEBUG  [main] BasicTypeRegistry: Adding type registration double -> org.hibernate.type.DoubleType@1b4ba615
2020-11-25 21:06:30,020 DEBUG  [main] BasicTypeRegistry: Adding type registration double -> org.hibernate.type.DoubleType@1b4ba615
2020-11-25 21:06:30,020 DEBUG  [main] BasicTypeRegistry: Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@1b4ba615
2020-11-25 21:06:30,020 DEBUG  [main] BasicTypeRegistry: Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@3c743d40
2020-11-25 21:06:30,020 DEBUG  [main] BasicTypeRegistry: Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@3c743d40
2020-11-25 21:06:30,021 DEBUG  [main] BasicTypeRegistry: Adding type registration big_integer -> org.hibernate.type.BigIntegerType@1607d391
2020-11-25 21:06:30,021 DEBUG  [main] BasicTypeRegistry: Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@1607d391
2020-11-25 21:06:30,021 DEBUG  [main] BasicTypeRegistry: Adding type registration string -> org.hibernate.type.StringType@23bd2f6e
2020-11-25 21:06:30,021 DEBUG  [main] BasicTypeRegistry: Adding type registration java.lang.String -> org.hibernate.type.StringType@23bd2f6e
2020-11-25 21:06:30,021 DEBUG  [main] BasicTypeRegistry: Adding type registration nstring -> org.hibernate.type.StringNVarcharType@54997f67
2020-11-25 21:06:30,021 DEBUG  [main] BasicTypeRegistry: Adding type registration ncharacter -> org.hibernate.type.CharacterNCharType@76b05c0
2020-11-25 21:06:30,021 DEBUG  [main] BasicTypeRegistry: Adding type registration url -> org.hibernate.type.UrlType@3f1d6a13
2020-11-25 21:06:30,022 DEBUG  [main] BasicTypeRegistry: Adding type registration java.net.URL -> org.hibernate.type.UrlType@3f1d6a13
2020-11-25 21:06:30,022 DEBUG  [main] BasicTypeRegistry: Adding type registration Duration -> org.hibernate.type.DurationType@5f1f0ee6
2020-11-25 21:06:30,022 DEBUG  [main] BasicTypeRegistry: Adding type registration java.time.Duration -> org.hibernate.type.DurationType@5f1f0ee6
2020-11-25 21:06:30,022 DEBUG  [main] BasicTypeRegistry: Adding type registration Instant -> org.hibernate.type.InstantType@5e1d1524
2020-11-25 21:06:30,022 DEBUG  [main] BasicTypeRegistry: Adding type registration java.time.Instant -> org.hibernate.type.InstantType@5e1d1524
2020-11-25 21:06:30,022 DEBUG  [main] BasicTypeRegistry: Adding type registration LocalDateTime -> org.hibernate.type.LocalDateTimeType@7ec508e6
2020-11-25 21:06:30,022 DEBUG  [main] BasicTypeRegistry: Adding type registration java.time.LocalDateTime -> org.hibernate.type.LocalDateTimeType@7ec508e6
2020-11-25 21:06:30,022 DEBUG  [main] BasicTypeRegistry: Adding type registration LocalDate -> org.hibernate.type.LocalDateType@d0fabc8
2020-11-25 21:06:30,023 DEBUG  [main] BasicTypeRegistry: Adding type registration java.time.LocalDate -> org.hibernate.type.LocalDateType@d0fabc8
2020-11-25 21:06:30,023 DEBUG  [main] BasicTypeRegistry: Adding type registration LocalTime -> org.hibernate.type.LocalTimeType@68454ed5
2020-11-25 21:06:30,023 DEBUG  [main] BasicTypeRegistry: Adding type registration java.time.LocalTime -> org.hibernate.type.LocalTimeType@68454ed5
2020-11-25 21:06:30,023 DEBUG  [main] BasicTypeRegistry: Adding type registration OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@2248d140
2020-11-25 21:06:30,023 DEBUG  [main] BasicTypeRegistry: Adding type registration java.time.OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@2248d140
2020-11-25 21:06:30,023 DEBUG  [main] BasicTypeRegistry: Adding type registration OffsetTime -> org.hibernate.type.OffsetTimeType@1bb4c431
2020-11-25 21:06:30,023 DEBUG  [main] BasicTypeRegistry: Adding type registration java.time.OffsetTime -> org.hibernate.type.OffsetTimeType@1bb4c431
2020-11-25 21:06:30,024 DEBUG  [main] BasicTypeRegistry: Adding type registration ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@54687fd0
2020-11-25 21:06:30,024 DEBUG  [main] BasicTypeRegistry: Adding type registration java.time.ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@54687fd0
2020-11-25 21:06:30,024 DEBUG  [main] BasicTypeRegistry: Adding type registration date -> org.hibernate.type.DateType@369a95a5
2020-11-25 21:06:30,024 DEBUG  [main] BasicTypeRegistry: Adding type registration java.sql.Date -> org.hibernate.type.DateType@369a95a5
2020-11-25 21:06:30,024 DEBUG  [main] BasicTypeRegistry: Adding type registration time -> org.hibernate.type.TimeType@6f4adaab
2020-11-25 21:06:30,024 DEBUG  [main] BasicTypeRegistry: Adding type registration java.sql.Time -> org.hibernate.type.TimeType@6f4adaab
2020-11-25 21:06:30,024 DEBUG  [main] BasicTypeRegistry: Adding type registration timestamp -> org.hibernate.type.TimestampType@2ac05a33
2020-11-25 21:06:30,025 DEBUG  [main] BasicTypeRegistry: Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@2ac05a33
2020-11-25 21:06:30,025 DEBUG  [main] BasicTypeRegistry: Adding type registration java.util.Date -> org.hibernate.type.TimestampType@2ac05a33
2020-11-25 21:06:30,025 DEBUG  [main] BasicTypeRegistry: Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@6aaa678d
2020-11-25 21:06:30,025 DEBUG  [main] BasicTypeRegistry: Adding type registration calendar -> org.hibernate.type.CalendarType@97beeaf
2020-11-25 21:06:30,025 DEBUG  [main] BasicTypeRegistry: Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@97beeaf
2020-11-25 21:06:30,025 DEBUG  [main] BasicTypeRegistry: Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@97beeaf
2020-11-25 21:06:30,025 DEBUG  [main] BasicTypeRegistry: Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@4c6fc3e7
2020-11-25 21:06:30,026 DEBUG  [main] BasicTypeRegistry: Adding type registration locale -> org.hibernate.type.LocaleType@1f6f0fe2
2020-11-25 21:06:30,026 DEBUG  [main] BasicTypeRegistry: Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@1f6f0fe2
2020-11-25 21:06:30,026 DEBUG  [main] BasicTypeRegistry: Adding type registration currency -> org.hibernate.type.CurrencyType@5b5b9521
2020-11-25 21:06:30,026 DEBUG  [main] BasicTypeRegistry: Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@5b5b9521
2020-11-25 21:06:30,026 DEBUG  [main] BasicTypeRegistry: Adding type registration timezone -> org.hibernate.type.TimeZoneType@3d718248
2020-11-25 21:06:30,026 DEBUG  [main] BasicTypeRegistry: Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@3d718248
2020-11-25 21:06:30,026 DEBUG  [main] BasicTypeRegistry: Adding type registration class -> org.hibernate.type.ClassType@38ebc866
2020-11-25 21:06:30,027 DEBUG  [main] BasicTypeRegistry: Adding type registration java.lang.Class -> org.hibernate.type.ClassType@38ebc866
2020-11-25 21:06:30,027 DEBUG  [main] BasicTypeRegistry: Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@949d347
2020-11-25 21:06:30,027 DEBUG  [main] BasicTypeRegistry: Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@949d347
2020-11-25 21:06:30,027 DEBUG  [main] BasicTypeRegistry: Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@2b90cc1
2020-11-25 21:06:30,028 DEBUG  [main] BasicTypeRegistry: Adding type registration binary -> org.hibernate.type.BinaryType@54556723
2020-11-25 21:06:30,028 DEBUG  [main] BasicTypeRegistry: Adding type registration byte[] -> org.hibernate.type.BinaryType@54556723
2020-11-25 21:06:30,028 DEBUG  [main] BasicTypeRegistry: Adding type registration [B -> org.hibernate.type.BinaryType@54556723
2020-11-25 21:06:30,029 DEBUG  [main] BasicTypeRegistry: Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@3534651a
2020-11-25 21:06:30,029 DEBUG  [main] BasicTypeRegistry: Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@3534651a
2020-11-25 21:06:30,029 DEBUG  [main] BasicTypeRegistry: Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@3534651a
2020-11-25 21:06:30,029 DEBUG  [main] BasicTypeRegistry: Adding type registration row_version -> org.hibernate.type.RowVersionType@65259c53
2020-11-25 21:06:30,030 DEBUG  [main] BasicTypeRegistry: Adding type registration image -> org.hibernate.type.ImageType@6c1f15df
2020-11-25 21:06:30,030 DEBUG  [main] BasicTypeRegistry: Adding type registration characters -> org.hibernate.type.CharArrayType@670a4738
2020-11-25 21:06:30,030 DEBUG  [main] BasicTypeRegistry: Adding type registration char[] -> org.hibernate.type.CharArrayType@670a4738
2020-11-25 21:06:30,030 DEBUG  [main] BasicTypeRegistry: Adding type registration [C -> org.hibernate.type.CharArrayType@670a4738
2020-11-25 21:06:30,031 DEBUG  [main] BasicTypeRegistry: Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@f237ae7
2020-11-25 21:06:30,031 DEBUG  [main] BasicTypeRegistry: Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@f237ae7
2020-11-25 21:06:30,031 DEBUG  [main] BasicTypeRegistry: Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@f237ae7
2020-11-25 21:06:30,031 DEBUG  [main] BasicTypeRegistry: Adding type registration text -> org.hibernate.type.TextType@6339e604
2020-11-25 21:06:30,031 DEBUG  [main] BasicTypeRegistry: Adding type registration ntext -> org.hibernate.type.NTextType@1f4d38f9
2020-11-25 21:06:30,031 DEBUG  [main] BasicTypeRegistry: Adding type registration blob -> org.hibernate.type.BlobType@4a58e0e9
2020-11-25 21:06:30,032 DEBUG  [main] BasicTypeRegistry: Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@4a58e0e9
2020-11-25 21:06:30,032 DEBUG  [main] BasicTypeRegistry: Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@25e95af1
2020-11-25 21:06:30,032 DEBUG  [main] BasicTypeRegistry: Adding type registration clob -> org.hibernate.type.ClobType@57b33c29
2020-11-25 21:06:30,032 DEBUG  [main] BasicTypeRegistry: Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@57b33c29
2020-11-25 21:06:30,032 DEBUG  [main] BasicTypeRegistry: Adding type registration nclob -> org.hibernate.type.NClobType@44e08a7a
2020-11-25 21:06:30,032 DEBUG  [main] BasicTypeRegistry: Adding type registration java.sql.NClob -> org.hibernate.type.NClobType@44e08a7a
2020-11-25 21:06:30,033 DEBUG  [main] BasicTypeRegistry: Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@795faad
2020-11-25 21:06:30,033 DEBUG  [main] BasicTypeRegistry: Adding type registration materialized_nclob -> org.hibernate.type.MaterializedNClobType@36511772
2020-11-25 21:06:30,033 DEBUG  [main] BasicTypeRegistry: Adding type registration serializable -> org.hibernate.type.SerializableType@3e5ebdfe
2020-11-25 21:06:30,033 DEBUG  [main] BasicTypeRegistry: Adding type registration object -> org.hibernate.type.ObjectType@1cb44a2f
2020-11-25 21:06:30,033 DEBUG  [main] BasicTypeRegistry: Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@1cb44a2f
2020-11-25 21:06:30,033 DEBUG  [main] BasicTypeRegistry: Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@4a1b710
2020-11-25 21:06:30,034 DEBUG  [main] BasicTypeRegistry: Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@119d21ce
2020-11-25 21:06:30,034 DEBUG  [main] BasicTypeRegistry: Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@32fa956b
2020-11-25 21:06:30,034 DEBUG  [main] BasicTypeRegistry: Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@667713c4
2020-11-25 21:06:30,034 DEBUG  [main] BasicTypeRegistry: Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@6f67312d
2020-11-25 21:06:30,034 DEBUG  [main] BasicTypeRegistry: Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@178cfe5e
2020-11-25 21:06:30,034 DEBUG  [main] BasicTypeRegistry: Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@71bb6009
2020-11-25 21:06:30,034 DEBUG  [main] BasicTypeRegistry: Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@2f8cb4c9
2020-11-25 21:06:30,060 DEBUG  [main] TypeConfiguration$Scope: Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@474a63d9] to MetadataBuildingContext [org.hibernate.boot.internal.MetadataBuildingContextRootImpl@1b8d0c21]
2020-11-25 21:06:30,073 DEBUG  [main] EnumType: Using NAMED-based conversion for Enum com.sf.back.entities.Kind
2020-11-25 21:06:30,076 DEBUG  [main] EnumType: Using NAMED-based conversion for Enum com.sf.back.entities.Kind
2020-11-25 21:06:30,119 DEBUG  [main] TypeConfiguration$Scope: Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@474a63d9] to SessionFactoryImpl [org.hibernate.internal.SessionFactoryImpl@1107cbd8]
2020-11-25 21:06:30,120 DEBUG  [main] EnumType: Using NAMED-based conversion for Enum com.sf.back.entities.Kind
2020-11-25 21:06:30,120 DEBUG  [main] EnumType: Using NAMED-based conversion for Enum com.sf.back.entities.Kind
2020-11-25 21:06:30,122 DEBUG  [main] EnumType: Using NAMED-based conversion for Enum com.sf.back.entities.Kind
2020-11-25 21:06:30,122 DEBUG  [main] EnumType: Using NAMED-based conversion for Enum com.sf.back.entities.Kind
2020-11-25 21:06:30,129 DEBUG  [main] EnumType: Using NAMED-based conversion for Enum com.sf.back.entities.Kind
2020-11-25 21:06:30,130 DEBUG  [main] EnumType: Using NAMED-based conversion for Enum com.sf.back.entities.Kind
2020-11-25 21:06:30,136 DEBUG  [main] EnumType: Using NAMED-based conversion for Enum com.sf.back.entities.Kind
2020-11-25 21:06:30,149 TRACE  [main] TypeConfiguration$Scope: Handling #sessionFactoryCreated from [org.hibernate.internal.SessionFactoryImpl@1107cbd8] for TypeConfiguration
2020-11-25 21:06:30,335 WARN   [main] JpaBaseConfiguration$JpaWebConfiguration: spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2020-11-25 21:06:30,493 WARN   [main] GroovyTemplateAutoConfiguration: Cannot find template location: classpath:/templates/ (please add some templates, check your Groovy configuration, or set spring.groovy.template.check-template-location=false)
2020-11-25 21:06:30,543 TRACE  [main] BasicBinder: binding parameter [1] as [BLOB] - [[70, 105, 110, 100, 32, 97, 108, 108, 32, 114, 111, 111, 116, 115, 32, 111, 102, 32, 103, 105, 118, 101, 110, 32, 112, 111, 108, 121, 110, 111, 109, 105, 97, 108]]
2020-11-25 21:06:30,543 TRACE  [main] BasicBinder: binding parameter [2] as [BOOLEAN] - [false]
2020-11-25 21:06:30,543 TRACE  [main] BasicBinder: binding parameter [3] as [VARCHAR] - [POLYNOMIAL]
2020-11-25 21:06:30,544 TRACE  [main] BasicBinder: binding parameter [4] as [INTEGER] - [1]
2020-11-25 21:06:30,544 TRACE  [main] BasicBinder: binding parameter [5] as [BIGINT] - [null]
2020-11-25 21:06:30,544 TRACE  [main] BasicBinder: binding parameter [6] as [INTEGER] - [6]
2020-11-25 21:06:30,548 TRACE  [main] BasicBinder: binding parameter [1] as [BLOB] - [null]
2020-11-25 21:06:30,548 TRACE  [main] BasicBinder: binding parameter [2] as [DOUBLE] - [1.0]
2020-11-25 21:06:30,548 TRACE  [main] BasicBinder: binding parameter [3] as [INTEGER] - [0]
2020-11-25 21:06:30,549 TRACE  [main] BasicBinder: binding parameter [4] as [BOOLEAN] - [true]
2020-11-25 21:06:30,549 TRACE  [main] BasicBinder: binding parameter [5] as [INTEGER] - [0]
2020-11-25 21:06:30,549 TRACE  [main] BasicBinder: binding parameter [6] as [BIGINT] - [1]
2020-11-25 21:06:30,551 TRACE  [main] BasicBinder: binding parameter [1] as [BLOB] - [null]
2020-11-25 21:06:30,551 TRACE  [main] BasicBinder: binding parameter [2] as [DOUBLE] - [2.0]
2020-11-25 21:06:30,552 TRACE  [main] BasicBinder: binding parameter [3] as [INTEGER] - [0]
2020-11-25 21:06:30,552 TRACE  [main] BasicBinder: binding parameter [4] as [BOOLEAN] - [true]
2020-11-25 21:06:30,552 TRACE  [main] BasicBinder: binding parameter [5] as [INTEGER] - [1]
2020-11-25 21:06:30,552 TRACE  [main] BasicBinder: binding parameter [6] as [BIGINT] - [1]
2020-11-25 21:06:30,554 TRACE  [main] BasicBinder: binding parameter [1] as [BLOB] - [null]
2020-11-25 21:06:30,555 TRACE  [main] BasicBinder: binding parameter [2] as [DOUBLE] - [1.0]
2020-11-25 21:06:30,555 TRACE  [main] BasicBinder: binding parameter [3] as [INTEGER] - [0]
2020-11-25 21:06:30,556 TRACE  [main] BasicBinder: binding parameter [4] as [BOOLEAN] - [true]
2020-11-25 21:06:30,556 TRACE  [main] BasicBinder: binding parameter [5] as [INTEGER] - [2]
2020-11-25 21:06:30,556 TRACE  [main] BasicBinder: binding parameter [6] as [BIGINT] - [1]
2020-11-25 21:06:30,558 TRACE  [main] BasicBinder: binding parameter [1] as [BLOB] - [null]
2020-11-25 21:06:30,558 TRACE  [main] BasicBinder: binding parameter [2] as [DOUBLE] - [1.0]
2020-11-25 21:06:30,559 TRACE  [main] BasicBinder: binding parameter [3] as [INTEGER] - [0]
2020-11-25 21:06:30,559 TRACE  [main] BasicBinder: binding parameter [4] as [BOOLEAN] - [false]
2020-11-25 21:06:30,559 TRACE  [main] BasicBinder: binding parameter [5] as [INTEGER] - [0]
2020-11-25 21:06:30,559 TRACE  [main] BasicBinder: binding parameter [6] as [BIGINT] - [1]
2020-11-25 21:06:30,561 TRACE  [main] BasicBinder: binding parameter [1] as [BLOB] - [null]
2020-11-25 21:06:30,561 TRACE  [main] BasicBinder: binding parameter [2] as [DOUBLE] - [1.0]
2020-11-25 21:06:30,561 TRACE  [main] BasicBinder: binding parameter [3] as [INTEGER] - [0]
2020-11-25 21:06:30,562 TRACE  [main] BasicBinder: binding parameter [4] as [BOOLEAN] - [false]
2020-11-25 21:06:30,562 TRACE  [main] BasicBinder: binding parameter [5] as [INTEGER] - [1]
2020-11-25 21:06:30,562 TRACE  [main] BasicBinder: binding parameter [6] as [BIGINT] - [1]
2020-11-25 21:06:31,331 TRACE  [SpringContextShutdownHook] TypeConfiguration$Scope: Handling #sessionFactoryClosed from [org.hibernate.internal.SessionFactoryImpl@1107cbd8] for TypeConfiguration
2020-11-25 21:06:31,334 DEBUG  [SpringContextShutdownHook] TypeConfiguration$Scope: Un-scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration$Scope@2ff666af] from SessionFactory [org.hibernate.internal.SessionFactoryImpl@1107cbd8]
2020-11-25 21:06:31,332 TRACE  [SpringContextShutdownHook] TypeConfiguration$Scope: Handling #sessionFactoryClosed from [org.hibernate.internal.SessionFactoryImpl@f5f8de2] for TypeConfiguration
2020-11-25 21:06:31,333 TRACE  [SpringContextShutdownHook] TypeConfiguration$Scope: Handling #sessionFactoryClosed from [org.hibernate.internal.SessionFactoryImpl@bc85538] for TypeConfiguration
2020-11-25 21:06:31,335 DEBUG  [SpringContextShutdownHook] TypeConfiguration$Scope: Un-scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration$Scope@17457dd0] from SessionFactory [org.hibernate.internal.SessionFactoryImpl@bc85538]
2020-11-25 21:06:31,335 DEBUG  [SpringContextShutdownHook] TypeConfiguration$Scope: Un-scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration$Scope@2bfc489a] from SessionFactory [org.hibernate.internal.SessionFactoryImpl@f5f8de2]
2020-11-25 21:10:08,595 DEBUG  [main] BasicTypeRegistry: Adding type registration boolean -> org.hibernate.type.BooleanType@2f6f4ac4
2020-11-25 21:10:08,634 DEBUG  [main] BasicTypeRegistry: Adding type registration boolean -> org.hibernate.type.BooleanType@2f6f4ac4
2020-11-25 21:10:08,635 DEBUG  [main] BasicTypeRegistry: Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@2f6f4ac4
2020-11-25 21:10:08,637 DEBUG  [main] BasicTypeRegistry: Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@5d58dc61
2020-11-25 21:10:08,639 DEBUG  [main] BasicTypeRegistry: Adding type registration true_false -> org.hibernate.type.TrueFalseType@3a7469ca
2020-11-25 21:10:08,640 DEBUG  [main] BasicTypeRegistry: Adding type registration yes_no -> org.hibernate.type.YesNoType@681d704e
2020-11-25 21:10:08,645 DEBUG  [main] BasicTypeRegistry: Adding type registration byte -> org.hibernate.type.ByteType@10d4b573
2020-11-25 21:10:08,648 DEBUG  [main] BasicTypeRegistry: Adding type registration byte -> org.hibernate.type.ByteType@10d4b573
2020-11-25 21:10:08,651 DEBUG  [main] BasicTypeRegistry: Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@10d4b573
2020-11-25 21:10:08,654 DEBUG  [main] BasicTypeRegistry: Adding type registration character -> org.hibernate.type.CharacterType@164dea80
2020-11-25 21:10:08,656 DEBUG  [main] BasicTypeRegistry: Adding type registration char -> org.hibernate.type.CharacterType@164dea80
2020-11-25 21:10:08,657 DEBUG  [main] BasicTypeRegistry: Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@164dea80
2020-11-25 21:10:08,659 DEBUG  [main] BasicTypeRegistry: Adding type registration short -> org.hibernate.type.ShortType@17053b5
2020-11-25 21:10:08,661 DEBUG  [main] BasicTypeRegistry: Adding type registration short -> org.hibernate.type.ShortType@17053b5
2020-11-25 21:10:08,662 DEBUG  [main] BasicTypeRegistry: Adding type registration java.lang.Short -> org.hibernate.type.ShortType@17053b5
2020-11-25 21:10:08,672 DEBUG  [main] BasicTypeRegistry: Adding type registration integer -> org.hibernate.type.IntegerType@404009df
2020-11-25 21:10:08,672 DEBUG  [main] BasicTypeRegistry: Adding type registration int -> org.hibernate.type.IntegerType@404009df
2020-11-25 21:10:08,675 DEBUG  [main] BasicTypeRegistry: Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@404009df
2020-11-25 21:10:08,677 DEBUG  [main] BasicTypeRegistry: Adding type registration long -> org.hibernate.type.LongType@45bf93bb
2020-11-25 21:10:08,677 DEBUG  [main] BasicTypeRegistry: Adding type registration long -> org.hibernate.type.LongType@45bf93bb
2020-11-25 21:10:08,678 DEBUG  [main] BasicTypeRegistry: Adding type registration java.lang.Long -> org.hibernate.type.LongType@45bf93bb
2020-11-25 21:10:08,680 DEBUG  [main] BasicTypeRegistry: Adding type registration float -> org.hibernate.type.FloatType@15d58530
2020-11-25 21:10:08,680 DEBUG  [main] BasicTypeRegistry: Adding type registration float -> org.hibernate.type.FloatType@15d58530
2020-11-25 21:10:08,681 DEBUG  [main] BasicTypeRegistry: Adding type registration java.lang.Float -> org.hibernate.type.FloatType@15d58530
2020-11-25 21:10:08,683 DEBUG  [main] BasicTypeRegistry: Adding type registration double -> org.hibernate.type.DoubleType@283e1759
2020-11-25 21:10:08,683 DEBUG  [main] BasicTypeRegistry: Adding type registration double -> org.hibernate.type.DoubleType@283e1759
2020-11-25 21:10:08,684 DEBUG  [main] BasicTypeRegistry: Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@283e1759
2020-11-25 21:10:08,686 DEBUG  [main] BasicTypeRegistry: Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@5df7a065
2020-11-25 21:10:08,687 DEBUG  [main] BasicTypeRegistry: Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@5df7a065
2020-11-25 21:10:08,689 DEBUG  [main] BasicTypeRegistry: Adding type registration big_integer -> org.hibernate.type.BigIntegerType@5788722f
2020-11-25 21:10:08,689 DEBUG  [main] BasicTypeRegistry: Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@5788722f
2020-11-25 21:10:08,692 DEBUG  [main] BasicTypeRegistry: Adding type registration string -> org.hibernate.type.StringType@6dc9a56e
2020-11-25 21:10:08,692 DEBUG  [main] BasicTypeRegistry: Adding type registration java.lang.String -> org.hibernate.type.StringType@6dc9a56e
2020-11-25 21:10:08,693 DEBUG  [main] BasicTypeRegistry: Adding type registration nstring -> org.hibernate.type.StringNVarcharType@510e4d79
2020-11-25 21:10:08,695 DEBUG  [main] BasicTypeRegistry: Adding type registration ncharacter -> org.hibernate.type.CharacterNCharType@4ef31221
2020-11-25 21:10:08,697 DEBUG  [main] BasicTypeRegistry: Adding type registration url -> org.hibernate.type.UrlType@60e47aab
2020-11-25 21:10:08,698 DEBUG  [main] BasicTypeRegistry: Adding type registration java.net.URL -> org.hibernate.type.UrlType@60e47aab
2020-11-25 21:10:08,700 DEBUG  [main] BasicTypeRegistry: Adding type registration Duration -> org.hibernate.type.DurationType@3b2db389
2020-11-25 21:10:08,701 DEBUG  [main] BasicTypeRegistry: Adding type registration java.time.Duration -> org.hibernate.type.DurationType@3b2db389
2020-11-25 21:10:08,703 DEBUG  [main] BasicTypeRegistry: Adding type registration Instant -> org.hibernate.type.InstantType@bfd97fb
2020-11-25 21:10:08,704 DEBUG  [main] BasicTypeRegistry: Adding type registration java.time.Instant -> org.hibernate.type.InstantType@bfd97fb
2020-11-25 21:10:08,705 DEBUG  [main] BasicTypeRegistry: Adding type registration LocalDateTime -> org.hibernate.type.LocalDateTimeType@2dc3ece8
2020-11-25 21:10:08,706 DEBUG  [main] BasicTypeRegistry: Adding type registration java.time.LocalDateTime -> org.hibernate.type.LocalDateTimeType@2dc3ece8
2020-11-25 21:10:08,707 DEBUG  [main] BasicTypeRegistry: Adding type registration LocalDate -> org.hibernate.type.LocalDateType@559e3f67
2020-11-25 21:10:08,708 DEBUG  [main] BasicTypeRegistry: Adding type registration java.time.LocalDate -> org.hibernate.type.LocalDateType@559e3f67
2020-11-25 21:10:08,710 DEBUG  [main] BasicTypeRegistry: Adding type registration LocalTime -> org.hibernate.type.LocalTimeType@492c9892
2020-11-25 21:10:08,710 DEBUG  [main] BasicTypeRegistry: Adding type registration java.time.LocalTime -> org.hibernate.type.LocalTimeType@492c9892
2020-11-25 21:10:08,712 DEBUG  [main] BasicTypeRegistry: Adding type registration OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@55b62db8
2020-11-25 21:10:08,713 DEBUG  [main] BasicTypeRegistry: Adding type registration java.time.OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@55b62db8
2020-11-25 21:10:08,715 DEBUG  [main] BasicTypeRegistry: Adding type registration OffsetTime -> org.hibernate.type.OffsetTimeType@79295932
2020-11-25 21:10:08,716 DEBUG  [main] BasicTypeRegistry: Adding type registration java.time.OffsetTime -> org.hibernate.type.OffsetTimeType@79295932
2020-11-25 21:10:08,719 DEBUG  [main] BasicTypeRegistry: Adding type registration ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@76dc36e5
2020-11-25 21:10:08,720 DEBUG  [main] BasicTypeRegistry: Adding type registration java.time.ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@76dc36e5
2020-11-25 21:10:08,722 DEBUG  [main] BasicTypeRegistry: Adding type registration date -> org.hibernate.type.DateType@4f676900
2020-11-25 21:10:08,723 DEBUG  [main] BasicTypeRegistry: Adding type registration java.sql.Date -> org.hibernate.type.DateType@4f676900
2020-11-25 21:10:08,724 DEBUG  [main] BasicTypeRegistry: Adding type registration time -> org.hibernate.type.TimeType@6ec3a4c2
2020-11-25 21:10:08,725 DEBUG  [main] BasicTypeRegistry: Adding type registration java.sql.Time -> org.hibernate.type.TimeType@6ec3a4c2
2020-11-25 21:10:08,726 DEBUG  [main] BasicTypeRegistry: Adding type registration timestamp -> org.hibernate.type.TimestampType@4db46344
2020-11-25 21:10:08,727 DEBUG  [main] BasicTypeRegistry: Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@4db46344
2020-11-25 21:10:08,727 DEBUG  [main] BasicTypeRegistry: Adding type registration java.util.Date -> org.hibernate.type.TimestampType@4db46344
2020-11-25 21:10:08,729 DEBUG  [main] BasicTypeRegistry: Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@3ccfac29
2020-11-25 21:10:08,730 DEBUG  [main] BasicTypeRegistry: Adding type registration calendar -> org.hibernate.type.CalendarType@578b2dec
2020-11-25 21:10:08,731 DEBUG  [main] BasicTypeRegistry: Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@578b2dec
2020-11-25 21:10:08,731 DEBUG  [main] BasicTypeRegistry: Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@578b2dec
2020-11-25 21:10:08,732 DEBUG  [main] BasicTypeRegistry: Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@48ee3c2d
2020-11-25 21:10:08,734 DEBUG  [main] BasicTypeRegistry: Adding type registration locale -> org.hibernate.type.LocaleType@39afe59f
2020-11-25 21:10:08,735 DEBUG  [main] BasicTypeRegistry: Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@39afe59f
2020-11-25 21:10:08,737 DEBUG  [main] BasicTypeRegistry: Adding type registration currency -> org.hibernate.type.CurrencyType@4e5364a3
2020-11-25 21:10:08,737 DEBUG  [main] BasicTypeRegistry: Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@4e5364a3
2020-11-25 21:10:08,738 DEBUG  [main] BasicTypeRegistry: Adding type registration timezone -> org.hibernate.type.TimeZoneType@3578a45b
2020-11-25 21:10:08,739 DEBUG  [main] BasicTypeRegistry: Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@3578a45b
2020-11-25 21:10:08,740 DEBUG  [main] BasicTypeRegistry: Adding type registration class -> org.hibernate.type.ClassType@c190cfc
2020-11-25 21:10:08,740 DEBUG  [main] BasicTypeRegistry: Adding type registration java.lang.Class -> org.hibernate.type.ClassType@c190cfc
2020-11-25 21:10:08,742 DEBUG  [main] BasicTypeRegistry: Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@2e0516a3
2020-11-25 21:10:08,742 DEBUG  [main] BasicTypeRegistry: Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@2e0516a3
2020-11-25 21:10:08,743 DEBUG  [main] BasicTypeRegistry: Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@20184ade
2020-11-25 21:10:08,744 DEBUG  [main] BasicTypeRegistry: Adding type registration binary -> org.hibernate.type.BinaryType@77204651
2020-11-25 21:10:08,744 DEBUG  [main] BasicTypeRegistry: Adding type registration byte[] -> org.hibernate.type.BinaryType@77204651
2020-11-25 21:10:08,745 DEBUG  [main] BasicTypeRegistry: Adding type registration [B -> org.hibernate.type.BinaryType@77204651
2020-11-25 21:10:08,746 DEBUG  [main] BasicTypeRegistry: Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@7fb44737
2020-11-25 21:10:08,747 DEBUG  [main] BasicTypeRegistry: Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@7fb44737
2020-11-25 21:10:08,747 DEBUG  [main] BasicTypeRegistry: Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@7fb44737
2020-11-25 21:10:08,748 DEBUG  [main] BasicTypeRegistry: Adding type registration row_version -> org.hibernate.type.RowVersionType@2619cb76
2020-11-25 21:10:08,749 DEBUG  [main] BasicTypeRegistry: Adding type registration image -> org.hibernate.type.ImageType@5d297d4d
2020-11-25 21:10:08,751 DEBUG  [main] BasicTypeRegistry: Adding type registration characters -> org.hibernate.type.CharArrayType@1fc3df43
2020-11-25 21:10:08,752 DEBUG  [main] BasicTypeRegistry: Adding type registration char[] -> org.hibernate.type.CharArrayType@1fc3df43
2020-11-25 21:10:08,752 DEBUG  [main] BasicTypeRegistry: Adding type registration [C -> org.hibernate.type.CharArrayType@1fc3df43
2020-11-25 21:10:08,753 DEBUG  [main] BasicTypeRegistry: Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@37caecda
2020-11-25 21:10:08,754 DEBUG  [main] BasicTypeRegistry: Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@37caecda
2020-11-25 21:10:08,754 DEBUG  [main] BasicTypeRegistry: Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@37caecda
2020-11-25 21:10:08,755 DEBUG  [main] BasicTypeRegistry: Adding type registration text -> org.hibernate.type.TextType@35554635
2020-11-25 21:10:08,755 DEBUG  [main] BasicTypeRegistry: Adding type registration ntext -> org.hibernate.type.NTextType@70592729
2020-11-25 21:10:08,757 DEBUG  [main] BasicTypeRegistry: Adding type registration blob -> org.hibernate.type.BlobType@57b711b6
2020-11-25 21:10:08,758 DEBUG  [main] BasicTypeRegistry: Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@57b711b6
2020-11-25 21:10:08,759 DEBUG  [main] BasicTypeRegistry: Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@5bbf744b
2020-11-25 21:10:08,760 DEBUG  [main] BasicTypeRegistry: Adding type registration clob -> org.hibernate.type.ClobType@120d6cbf
2020-11-25 21:10:08,760 DEBUG  [main] BasicTypeRegistry: Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@120d6cbf
2020-11-25 21:10:08,762 DEBUG  [main] BasicTypeRegistry: Adding type registration nclob -> org.hibernate.type.NClobType@46994f26
2020-11-25 21:10:08,762 DEBUG  [main] BasicTypeRegistry: Adding type registration java.sql.NClob -> org.hibernate.type.NClobType@46994f26
2020-11-25 21:10:08,763 DEBUG  [main] BasicTypeRegistry: Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@71316cd7
2020-11-25 21:10:08,764 DEBUG  [main] BasicTypeRegistry: Adding type registration materialized_nclob -> org.hibernate.type.MaterializedNClobType@7c206b14
2020-11-25 21:10:08,766 DEBUG  [main] BasicTypeRegistry: Adding type registration serializable -> org.hibernate.type.SerializableType@432a6a69
2020-11-25 21:10:08,771 DEBUG  [main] BasicTypeRegistry: Adding type registration object -> org.hibernate.type.ObjectType@681311a7
2020-11-25 21:10:08,772 DEBUG  [main] BasicTypeRegistry: Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@681311a7
2020-11-25 21:10:08,774 DEBUG  [main] BasicTypeRegistry: Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@7b2e931
2020-11-25 21:10:08,774 DEBUG  [main] BasicTypeRegistry: Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@305881b8
2020-11-25 21:10:08,775 DEBUG  [main] BasicTypeRegistry: Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@7e89eba7
2020-11-25 21:10:08,775 DEBUG  [main] BasicTypeRegistry: Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@6bc25ac2
2020-11-25 21:10:08,775 DEBUG  [main] BasicTypeRegistry: Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@7b29cdea
2020-11-25 21:10:08,776 DEBUG  [main] BasicTypeRegistry: Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@f08d676
2020-11-25 21:10:08,776 DEBUG  [main] BasicTypeRegistry: Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@3eedd0e3
2020-11-25 21:10:08,777 DEBUG  [main] BasicTypeRegistry: Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@478089b6
2020-11-25 21:10:09,414 DEBUG  [main] TypeConfiguration$Scope: Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@7ca0166c] to MetadataBuildingContext [org.hibernate.boot.internal.MetadataBuildingContextRootImpl@1dcad16f]
2020-11-25 21:10:09,816 DEBUG  [main] EnumType: Using NAMED-based conversion for Enum com.sf.back.entities.Kind
2020-11-25 21:10:09,937 DEBUG  [main] EnumType: Using NAMED-based conversion for Enum com.sf.back.entities.Kind
2020-11-25 21:10:10,146 DEBUG  [main] TypeConfiguration$Scope: Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@7ca0166c] to SessionFactoryImpl [org.hibernate.internal.SessionFactoryImpl@55574295]
2020-11-25 21:10:10,256 DEBUG  [main] EnumType: Using NAMED-based conversion for Enum com.sf.back.entities.Kind
2020-11-25 21:10:10,257 DEBUG  [main] EnumType: Using NAMED-based conversion for Enum com.sf.back.entities.Kind
2020-11-25 21:10:10,498 DEBUG  [main] EnumType: Using NAMED-based conversion for Enum com.sf.back.entities.Kind
2020-11-25 21:10:10,499 DEBUG  [main] EnumType: Using NAMED-based conversion for Enum com.sf.back.entities.Kind
2020-11-25 21:10:10,673 DEBUG  [main] EnumType: Using NAMED-based conversion for Enum com.sf.back.entities.Kind
2020-11-25 21:10:10,673 DEBUG  [main] EnumType: Using NAMED-based conversion for Enum com.sf.back.entities.Kind
2020-11-25 21:10:10,702 DEBUG  [main] EnumType: Using NAMED-based conversion for Enum com.sf.back.entities.Kind
2020-11-25 21:10:10,733 TRACE  [main] TypeConfiguration$Scope: Handling #sessionFactoryCreated from [org.hibernate.internal.SessionFactoryImpl@55574295] for TypeConfiguration
2020-11-25 21:10:11,393 WARN   [main] GlobalSettings: Dozer configuration file not found: dozer.properties.  Using defaults for all Dozer global properties.
2020-11-25 21:10:12,069 WARN   [main] JpaBaseConfiguration$JpaWebConfiguration: spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2020-11-25 21:10:12,871 WARN   [main] GroovyTemplateAutoConfiguration: Cannot find template location: classpath:/templates/ (please add some templates, check your Groovy configuration, or set spring.groovy.template.check-template-location=false)
2020-11-25 21:10:13,471 TRACE  [main] BasicBinder: binding parameter [1] as [BLOB] - [[70, 105, 110, 100, 32, 97, 108, 108, 32, 114, 111, 111, 116, 115, 32, 111, 102, 32, 103, 105, 118, 101, 110, 32, 112, 111, 108, 121, 110, 111, 109, 105, 97, 108]]
2020-11-25 21:10:13,473 TRACE  [main] BasicBinder: binding parameter [2] as [BOOLEAN] - [false]
2020-11-25 21:10:13,474 TRACE  [main] BasicBinder: binding parameter [3] as [VARCHAR] - [POLYNOMIAL]
2020-11-25 21:10:13,475 TRACE  [main] BasicBinder: binding parameter [4] as [INTEGER] - [1]
2020-11-25 21:10:13,482 TRACE  [main] BasicBinder: binding parameter [5] as [BIGINT] - [null]
2020-11-25 21:10:13,483 TRACE  [main] BasicBinder: binding parameter [6] as [INTEGER] - [6]
2020-11-25 21:10:13,498 TRACE  [main] BasicBinder: binding parameter [1] as [BLOB] - [null]
2020-11-25 21:10:13,500 TRACE  [main] BasicBinder: binding parameter [2] as [DOUBLE] - [1.0]
2020-11-25 21:10:13,502 TRACE  [main] BasicBinder: binding parameter [3] as [INTEGER] - [0]
2020-11-25 21:10:13,502 TRACE  [main] BasicBinder: binding parameter [4] as [BOOLEAN] - [true]
2020-11-25 21:10:13,503 TRACE  [main] BasicBinder: binding parameter [5] as [INTEGER] - [0]
2020-11-25 21:10:13,503 TRACE  [main] BasicBinder: binding parameter [6] as [BIGINT] - [1]
2020-11-25 21:10:13,505 TRACE  [main] BasicBinder: binding parameter [1] as [BLOB] - [null]
2020-11-25 21:10:13,506 TRACE  [main] BasicBinder: binding parameter [2] as [DOUBLE] - [2.0]
2020-11-25 21:10:13,506 TRACE  [main] BasicBinder: binding parameter [3] as [INTEGER] - [0]
2020-11-25 21:10:13,507 TRACE  [main] BasicBinder: binding parameter [4] as [BOOLEAN] - [true]
2020-11-25 21:10:13,508 TRACE  [main] BasicBinder: binding parameter [5] as [INTEGER] - [1]
2020-11-25 21:10:13,508 TRACE  [main] BasicBinder: binding parameter [6] as [BIGINT] - [1]
2020-11-25 21:10:13,510 TRACE  [main] BasicBinder: binding parameter [1] as [BLOB] - [null]
2020-11-25 21:10:13,510 TRACE  [main] BasicBinder: binding parameter [2] as [DOUBLE] - [1.0]
2020-11-25 21:10:13,510 TRACE  [main] BasicBinder: binding parameter [3] as [INTEGER] - [0]
2020-11-25 21:10:13,511 TRACE  [main] BasicBinder: binding parameter [4] as [BOOLEAN] - [true]
2020-11-25 21:10:13,511 TRACE  [main] BasicBinder: binding parameter [5] as [INTEGER] - [2]
2020-11-25 21:10:13,511 TRACE  [main] BasicBinder: binding parameter [6] as [BIGINT] - [1]
2020-11-25 21:10:13,513 TRACE  [main] BasicBinder: binding parameter [1] as [BLOB] - [null]
2020-11-25 21:10:13,514 TRACE  [main] BasicBinder: binding parameter [2] as [DOUBLE] - [1.0]
2020-11-25 21:10:13,515 TRACE  [main] BasicBinder: binding parameter [3] as [INTEGER] - [0]
2020-11-25 21:10:13,515 TRACE  [main] BasicBinder: binding parameter [4] as [BOOLEAN] - [false]
2020-11-25 21:10:13,515 TRACE  [main] BasicBinder: binding parameter [5] as [INTEGER] - [0]
2020-11-25 21:10:13,516 TRACE  [main] BasicBinder: binding parameter [6] as [BIGINT] - [1]
2020-11-25 21:10:13,518 TRACE  [main] BasicBinder: binding parameter [1] as [BLOB] - [null]
2020-11-25 21:10:13,519 TRACE  [main] BasicBinder: binding parameter [2] as [DOUBLE] - [1.0]
2020-11-25 21:10:13,519 TRACE  [main] BasicBinder: binding parameter [3] as [INTEGER] - [0]
2020-11-25 21:10:13,519 TRACE  [main] BasicBinder: binding parameter [4] as [BOOLEAN] - [false]
2020-11-25 21:10:13,520 TRACE  [main] BasicBinder: binding parameter [5] as [INTEGER] - [1]
2020-11-25 21:10:13,520 TRACE  [main] BasicBinder: binding parameter [6] as [BIGINT] - [1]
2020-11-25 21:10:20,405 DEBUG  [main] BasicTypeRegistry: Adding type registration boolean -> org.hibernate.type.BooleanType@2f6f4ac4
2020-11-25 21:10:20,406 DEBUG  [main] BasicTypeRegistry: Adding type registration boolean -> org.hibernate.type.BooleanType@2f6f4ac4
2020-11-25 21:10:20,407 DEBUG  [main] BasicTypeRegistry: Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@2f6f4ac4
2020-11-25 21:10:20,408 DEBUG  [main] BasicTypeRegistry: Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@5d58dc61
2020-11-25 21:10:20,408 DEBUG  [main] BasicTypeRegistry: Adding type registration true_false -> org.hibernate.type.TrueFalseType@3a7469ca
2020-11-25 21:10:20,409 DEBUG  [main] BasicTypeRegistry: Adding type registration yes_no -> org.hibernate.type.YesNoType@681d704e
2020-11-25 21:10:20,411 DEBUG  [main] BasicTypeRegistry: Adding type registration byte -> org.hibernate.type.ByteType@10d4b573
2020-11-25 21:10:20,413 DEBUG  [main] BasicTypeRegistry: Adding type registration byte -> org.hibernate.type.ByteType@10d4b573
2020-11-25 21:10:20,414 DEBUG  [main] BasicTypeRegistry: Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@10d4b573
2020-11-25 21:10:20,414 DEBUG  [main] BasicTypeRegistry: Adding type registration character -> org.hibernate.type.CharacterType@164dea80
2020-11-25 21:10:20,415 DEBUG  [main] BasicTypeRegistry: Adding type registration char -> org.hibernate.type.CharacterType@164dea80
2020-11-25 21:10:20,416 DEBUG  [main] BasicTypeRegistry: Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@164dea80
2020-11-25 21:10:20,416 DEBUG  [main] BasicTypeRegistry: Adding type registration short -> org.hibernate.type.ShortType@17053b5
2020-11-25 21:10:20,418 DEBUG  [main] BasicTypeRegistry: Adding type registration short -> org.hibernate.type.ShortType@17053b5
2020-11-25 21:10:20,420 DEBUG  [main] BasicTypeRegistry: Adding type registration java.lang.Short -> org.hibernate.type.ShortType@17053b5
2020-11-25 21:10:20,421 DEBUG  [main] BasicTypeRegistry: Adding type registration integer -> org.hibernate.type.IntegerType@404009df
2020-11-25 21:10:20,421 DEBUG  [main] BasicTypeRegistry: Adding type registration int -> org.hibernate.type.IntegerType@404009df
2020-11-25 21:10:20,422 DEBUG  [main] BasicTypeRegistry: Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@404009df
2020-11-25 21:10:20,422 DEBUG  [main] BasicTypeRegistry: Adding type registration long -> org.hibernate.type.LongType@45bf93bb
2020-11-25 21:10:20,423 DEBUG  [main] BasicTypeRegistry: Adding type registration long -> org.hibernate.type.LongType@45bf93bb
2020-11-25 21:10:20,424 DEBUG  [main] BasicTypeRegistry: Adding type registration java.lang.Long -> org.hibernate.type.LongType@45bf93bb
2020-11-25 21:10:20,426 DEBUG  [main] BasicTypeRegistry: Adding type registration float -> org.hibernate.type.FloatType@15d58530
2020-11-25 21:10:20,427 DEBUG  [main] BasicTypeRegistry: Adding type registration float -> org.hibernate.type.FloatType@15d58530
2020-11-25 21:10:20,427 DEBUG  [main] BasicTypeRegistry: Adding type registration java.lang.Float -> org.hibernate.type.FloatType@15d58530
2020-11-25 21:10:20,428 DEBUG  [main] BasicTypeRegistry: Adding type registration double -> org.hibernate.type.DoubleType@283e1759
2020-11-25 21:10:20,429 DEBUG  [main] BasicTypeRegistry: Adding type registration double -> org.hibernate.type.DoubleType@283e1759
2020-11-25 21:10:20,429 DEBUG  [main] BasicTypeRegistry: Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@283e1759
2020-11-25 21:10:20,429 DEBUG  [main] BasicTypeRegistry: Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@5df7a065
2020-11-25 21:10:20,429 DEBUG  [main] BasicTypeRegistry: Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@5df7a065
2020-11-25 21:10:20,430 DEBUG  [main] BasicTypeRegistry: Adding type registration big_integer -> org.hibernate.type.BigIntegerType@5788722f
2020-11-25 21:10:20,430 DEBUG  [main] BasicTypeRegistry: Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@5788722f
2020-11-25 21:10:20,430 DEBUG  [main] BasicTypeRegistry: Adding type registration string -> org.hibernate.type.StringType@6dc9a56e
2020-11-25 21:10:20,430 DEBUG  [main] BasicTypeRegistry: Adding type registration java.lang.String -> org.hibernate.type.StringType@6dc9a56e
2020-11-25 21:10:20,431 DEBUG  [main] BasicTypeRegistry: Adding type registration nstring -> org.hibernate.type.StringNVarcharType@510e4d79
2020-11-25 21:10:20,431 DEBUG  [main] BasicTypeRegistry: Adding type registration ncharacter -> org.hibernate.type.CharacterNCharType@4ef31221
2020-11-25 21:10:20,431 DEBUG  [main] BasicTypeRegistry: Adding type registration url -> org.hibernate.type.UrlType@60e47aab
2020-11-25 21:10:20,431 DEBUG  [main] BasicTypeRegistry: Adding type registration java.net.URL -> org.hibernate.type.UrlType@60e47aab
2020-11-25 21:10:20,432 DEBUG  [main] BasicTypeRegistry: Adding type registration Duration -> org.hibernate.type.DurationType@3b2db389
2020-11-25 21:10:20,432 DEBUG  [main] BasicTypeRegistry: Adding type registration java.time.Duration -> org.hibernate.type.DurationType@3b2db389
2020-11-25 21:10:20,432 DEBUG  [main] BasicTypeRegistry: Adding type registration Instant -> org.hibernate.type.InstantType@bfd97fb
2020-11-25 21:10:20,432 DEBUG  [main] BasicTypeRegistry: Adding type registration java.time.Instant -> org.hibernate.type.InstantType@bfd97fb
2020-11-25 21:10:20,432 DEBUG  [main] BasicTypeRegistry: Adding type registration LocalDateTime -> org.hibernate.type.LocalDateTimeType@2dc3ece8
2020-11-25 21:10:20,433 DEBUG  [main] BasicTypeRegistry: Adding type registration java.time.LocalDateTime -> org.hibernate.type.LocalDateTimeType@2dc3ece8
2020-11-25 21:10:20,433 DEBUG  [main] BasicTypeRegistry: Adding type registration LocalDate -> org.hibernate.type.LocalDateType@559e3f67
2020-11-25 21:10:20,433 DEBUG  [main] BasicTypeRegistry: Adding type registration java.time.LocalDate -> org.hibernate.type.LocalDateType@559e3f67
2020-11-25 21:10:20,433 DEBUG  [main] BasicTypeRegistry: Adding type registration LocalTime -> org.hibernate.type.LocalTimeType@492c9892
2020-11-25 21:10:20,433 DEBUG  [main] BasicTypeRegistry: Adding type registration java.time.LocalTime -> org.hibernate.type.LocalTimeType@492c9892
2020-11-25 21:10:20,434 DEBUG  [main] BasicTypeRegistry: Adding type registration OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@55b62db8
2020-11-25 21:10:20,435 DEBUG  [main] BasicTypeRegistry: Adding type registration java.time.OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@55b62db8
2020-11-25 21:10:20,438 DEBUG  [main] BasicTypeRegistry: Adding type registration OffsetTime -> org.hibernate.type.OffsetTimeType@79295932
2020-11-25 21:10:20,438 DEBUG  [main] BasicTypeRegistry: Adding type registration java.time.OffsetTime -> org.hibernate.type.OffsetTimeType@79295932
2020-11-25 21:10:20,438 DEBUG  [main] BasicTypeRegistry: Adding type registration ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@76dc36e5
2020-11-25 21:10:20,438 DEBUG  [main] BasicTypeRegistry: Adding type registration java.time.ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@76dc36e5
2020-11-25 21:10:20,439 DEBUG  [main] BasicTypeRegistry: Adding type registration date -> org.hibernate.type.DateType@4f676900
2020-11-25 21:10:20,439 DEBUG  [main] BasicTypeRegistry: Adding type registration java.sql.Date -> org.hibernate.type.DateType@4f676900
2020-11-25 21:10:20,439 DEBUG  [main] BasicTypeRegistry: Adding type registration time -> org.hibernate.type.TimeType@6ec3a4c2
2020-11-25 21:10:20,439 DEBUG  [main] BasicTypeRegistry: Adding type registration java.sql.Time -> org.hibernate.type.TimeType@6ec3a4c2
2020-11-25 21:10:20,439 DEBUG  [main] BasicTypeRegistry: Adding type registration timestamp -> org.hibernate.type.TimestampType@4db46344
2020-11-25 21:10:20,440 DEBUG  [main] BasicTypeRegistry: Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@4db46344
2020-11-25 21:10:20,440 DEBUG  [main] BasicTypeRegistry: Adding type registration java.util.Date -> org.hibernate.type.TimestampType@4db46344
2020-11-25 21:10:20,440 DEBUG  [main] BasicTypeRegistry: Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@3ccfac29
2020-11-25 21:10:20,440 DEBUG  [main] BasicTypeRegistry: Adding type registration calendar -> org.hibernate.type.CalendarType@578b2dec
2020-11-25 21:10:20,441 DEBUG  [main] BasicTypeRegistry: Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@578b2dec
2020-11-25 21:10:20,442 DEBUG  [main] BasicTypeRegistry: Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@578b2dec
2020-11-25 21:10:20,442 DEBUG  [main] BasicTypeRegistry: Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@48ee3c2d
2020-11-25 21:10:20,442 DEBUG  [main] BasicTypeRegistry: Adding type registration locale -> org.hibernate.type.LocaleType@39afe59f
2020-11-25 21:10:20,442 DEBUG  [main] BasicTypeRegistry: Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@39afe59f
2020-11-25 21:10:20,443 DEBUG  [main] BasicTypeRegistry: Adding type registration currency -> org.hibernate.type.CurrencyType@4e5364a3
2020-11-25 21:10:20,444 DEBUG  [main] BasicTypeRegistry: Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@4e5364a3
2020-11-25 21:10:20,444 DEBUG  [main] BasicTypeRegistry: Adding type registration timezone -> org.hibernate.type.TimeZoneType@3578a45b
2020-11-25 21:10:20,444 DEBUG  [main] BasicTypeRegistry: Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@3578a45b
2020-11-25 21:10:20,444 DEBUG  [main] BasicTypeRegistry: Adding type registration class -> org.hibernate.type.ClassType@c190cfc
2020-11-25 21:10:20,445 DEBUG  [main] BasicTypeRegistry: Adding type registration java.lang.Class -> org.hibernate.type.ClassType@c190cfc
2020-11-25 21:10:20,445 DEBUG  [main] BasicTypeRegistry: Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@2e0516a3
2020-11-25 21:10:20,445 DEBUG  [main] BasicTypeRegistry: Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@2e0516a3
2020-11-25 21:10:20,445 DEBUG  [main] BasicTypeRegistry: Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@20184ade
2020-11-25 21:10:20,445 DEBUG  [main] BasicTypeRegistry: Adding type registration binary -> org.hibernate.type.BinaryType@77204651
2020-11-25 21:10:20,446 DEBUG  [main] BasicTypeRegistry: Adding type registration byte[] -> org.hibernate.type.BinaryType@77204651
2020-11-25 21:10:20,447 DEBUG  [main] BasicTypeRegistry: Adding type registration [B -> org.hibernate.type.BinaryType@77204651
2020-11-25 21:10:20,448 DEBUG  [main] BasicTypeRegistry: Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@7fb44737
2020-11-25 21:10:20,448 DEBUG  [main] BasicTypeRegistry: Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@7fb44737
2020-11-25 21:10:20,448 DEBUG  [main] BasicTypeRegistry: Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@7fb44737
2020-11-25 21:10:20,448 DEBUG  [main] BasicTypeRegistry: Adding type registration row_version -> org.hibernate.type.RowVersionType@2619cb76
2020-11-25 21:10:20,448 DEBUG  [main] BasicTypeRegistry: Adding type registration image -> org.hibernate.type.ImageType@5d297d4d
2020-11-25 21:10:20,448 DEBUG  [main] BasicTypeRegistry: Adding type registration characters -> org.hibernate.type.CharArrayType@1fc3df43
2020-11-25 21:10:20,449 DEBUG  [main] BasicTypeRegistry: Adding type registration char[] -> org.hibernate.type.CharArrayType@1fc3df43
2020-11-25 21:10:20,449 DEBUG  [main] BasicTypeRegistry: Adding type registration [C -> org.hibernate.type.CharArrayType@1fc3df43
2020-11-25 21:10:20,449 DEBUG  [main] BasicTypeRegistry: Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@37caecda
2020-11-25 21:10:20,449 DEBUG  [main] BasicTypeRegistry: Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@37caecda
2020-11-25 21:10:20,450 DEBUG  [main] BasicTypeRegistry: Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@37caecda
2020-11-25 21:10:20,451 DEBUG  [main] BasicTypeRegistry: Adding type registration text -> org.hibernate.type.TextType@35554635
2020-11-25 21:10:20,452 DEBUG  [main] BasicTypeRegistry: Adding type registration ntext -> org.hibernate.type.NTextType@70592729
2020-11-25 21:10:20,453 DEBUG  [main] BasicTypeRegistry: Adding type registration blob -> org.hibernate.type.BlobType@57b711b6
2020-11-25 21:10:20,456 DEBUG  [main] BasicTypeRegistry: Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@57b711b6
2020-11-25 21:10:20,456 DEBUG  [main] BasicTypeRegistry: Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@5bbf744b
2020-11-25 21:10:20,456 DEBUG  [main] BasicTypeRegistry: Adding type registration clob -> org.hibernate.type.ClobType@120d6cbf
2020-11-25 21:10:20,456 DEBUG  [main] BasicTypeRegistry: Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@120d6cbf
2020-11-25 21:10:20,457 DEBUG  [main] BasicTypeRegistry: Adding type registration nclob -> org.hibernate.type.NClobType@46994f26
2020-11-25 21:10:20,457 DEBUG  [main] BasicTypeRegistry: Adding type registration java.sql.NClob -> org.hibernate.type.NClobType@46994f26
2020-11-25 21:10:20,457 DEBUG  [main] BasicTypeRegistry: Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@71316cd7
2020-11-25 21:10:20,457 DEBUG  [main] BasicTypeRegistry: Adding type registration materialized_nclob -> org.hibernate.type.MaterializedNClobType@7c206b14
2020-11-25 21:10:20,457 DEBUG  [main] BasicTypeRegistry: Adding type registration serializable -> org.hibernate.type.SerializableType@432a6a69
2020-11-25 21:10:20,472 DEBUG  [main] BasicTypeRegistry: Adding type registration object -> org.hibernate.type.ObjectType@681311a7
2020-11-25 21:10:20,480 DEBUG  [main] BasicTypeRegistry: Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@681311a7
2020-11-25 21:10:20,481 DEBUG  [main] BasicTypeRegistry: Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@615f61ec
2020-11-25 21:10:20,481 DEBUG  [main] BasicTypeRegistry: Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@3c5de17c
2020-11-25 21:10:20,481 DEBUG  [main] BasicTypeRegistry: Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@31620971
2020-11-25 21:10:20,483 DEBUG  [main] BasicTypeRegistry: Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@794cd751
2020-11-25 21:10:20,483 DEBUG  [main] BasicTypeRegistry: Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@63069995
2020-11-25 21:10:20,483 DEBUG  [main] BasicTypeRegistry: Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@3003d288
2020-11-25 21:10:20,485 DEBUG  [main] BasicTypeRegistry: Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@110b6c78
2020-11-25 21:10:20,486 DEBUG  [main] BasicTypeRegistry: Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@e62d757
2020-11-25 21:10:20,517 DEBUG  [main] TypeConfiguration$Scope: Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@3459ccd9] to MetadataBuildingContext [org.hibernate.boot.internal.MetadataBuildingContextRootImpl@1147a8de]
2020-11-25 21:10:20,532 DEBUG  [main] EnumType: Using NAMED-based conversion for Enum com.sf.back.entities.Kind
2020-11-25 21:10:20,537 DEBUG  [main] EnumType: Using NAMED-based conversion for Enum com.sf.back.entities.Kind
2020-11-25 21:10:20,587 DEBUG  [main] TypeConfiguration$Scope: Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@3459ccd9] to SessionFactoryImpl [org.hibernate.internal.SessionFactoryImpl@33d75081]
2020-11-25 21:10:20,588 DEBUG  [main] EnumType: Using NAMED-based conversion for Enum com.sf.back.entities.Kind
2020-11-25 21:10:20,589 DEBUG  [main] EnumType: Using NAMED-based conversion for Enum com.sf.back.entities.Kind
2020-11-25 21:10:20,594 DEBUG  [main] EnumType: Using NAMED-based conversion for Enum com.sf.back.entities.Kind
2020-11-25 21:10:20,595 DEBUG  [main] EnumType: Using NAMED-based conversion for Enum com.sf.back.entities.Kind
2020-11-25 21:10:20,621 DEBUG  [main] EnumType: Using NAMED-based conversion for Enum com.sf.back.entities.Kind
2020-11-25 21:10:20,621 DEBUG  [main] EnumType: Using NAMED-based conversion for Enum com.sf.back.entities.Kind
2020-11-25 21:10:20,633 DEBUG  [main] EnumType: Using NAMED-based conversion for Enum com.sf.back.entities.Kind
2020-11-25 21:10:20,655 TRACE  [main] TypeConfiguration$Scope: Handling #sessionFactoryCreated from [org.hibernate.internal.SessionFactoryImpl@33d75081] for TypeConfiguration
2020-11-25 21:10:21,002 WARN   [main] JpaBaseConfiguration$JpaWebConfiguration: spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2020-11-25 21:10:21,159 WARN   [main] GroovyTemplateAutoConfiguration: Cannot find template location: classpath:/templates/ (please add some templates, check your Groovy configuration, or set spring.groovy.template.check-template-location=false)
2020-11-25 21:10:21,247 TRACE  [main] BasicBinder: binding parameter [1] as [BLOB] - [[70, 105, 110, 100, 32, 97, 108, 108, 32, 114, 111, 111, 116, 115, 32, 111, 102, 32, 103, 105, 118, 101, 110, 32, 112, 111, 108, 121, 110, 111, 109, 105, 97, 108]]
2020-11-25 21:10:21,248 TRACE  [main] BasicBinder: binding parameter [2] as [BOOLEAN] - [false]
2020-11-25 21:10:21,248 TRACE  [main] BasicBinder: binding parameter [3] as [VARCHAR] - [POLYNOMIAL]
2020-11-25 21:10:21,248 TRACE  [main] BasicBinder: binding parameter [4] as [INTEGER] - [1]
2020-11-25 21:10:21,248 TRACE  [main] BasicBinder: binding parameter [5] as [BIGINT] - [null]
2020-11-25 21:10:21,249 TRACE  [main] BasicBinder: binding parameter [6] as [INTEGER] - [6]
2020-11-25 21:10:21,253 TRACE  [main] BasicBinder: binding parameter [1] as [BLOB] - [null]
2020-11-25 21:10:21,254 TRACE  [main] BasicBinder: binding parameter [2] as [DOUBLE] - [1.0]
2020-11-25 21:10:21,255 TRACE  [main] BasicBinder: binding parameter [3] as [INTEGER] - [0]
2020-11-25 21:10:21,255 TRACE  [main] BasicBinder: binding parameter [4] as [BOOLEAN] - [true]
2020-11-25 21:10:21,256 TRACE  [main] BasicBinder: binding parameter [5] as [INTEGER] - [0]
2020-11-25 21:10:21,256 TRACE  [main] BasicBinder: binding parameter [6] as [BIGINT] - [1]
2020-11-25 21:10:21,260 TRACE  [main] BasicBinder: binding parameter [1] as [BLOB] - [null]
2020-11-25 21:10:21,261 TRACE  [main] BasicBinder: binding parameter [2] as [DOUBLE] - [2.0]
2020-11-25 21:10:21,261 TRACE  [main] BasicBinder: binding parameter [3] as [INTEGER] - [0]
2020-11-25 21:10:21,261 TRACE  [main] BasicBinder: binding parameter [4] as [BOOLEAN] - [true]
2020-11-25 21:10:21,262 TRACE  [main] BasicBinder: binding parameter [5] as [INTEGER] - [1]
2020-11-25 21:10:21,262 TRACE  [main] BasicBinder: binding parameter [6] as [BIGINT] - [1]
2020-11-25 21:10:21,273 TRACE  [main] BasicBinder: binding parameter [1] as [BLOB] - [null]
2020-11-25 21:10:21,274 TRACE  [main] BasicBinder: binding parameter [2] as [DOUBLE] - [1.0]
2020-11-25 21:10:21,276 TRACE  [main] BasicBinder: binding parameter [3] as [INTEGER] - [0]
2020-11-25 21:10:21,277 TRACE  [main] BasicBinder: binding parameter [4] as [BOOLEAN] - [true]
2020-11-25 21:10:21,277 TRACE  [main] BasicBinder: binding parameter [5] as [INTEGER] - [2]
2020-11-25 21:10:21,278 TRACE  [main] BasicBinder: binding parameter [6] as [BIGINT] - [1]
2020-11-25 21:10:21,280 TRACE  [main] BasicBinder: binding parameter [1] as [BLOB] - [null]
2020-11-25 21:10:21,281 TRACE  [main] BasicBinder: binding parameter [2] as [DOUBLE] - [1.0]
2020-11-25 21:10:21,282 TRACE  [main] BasicBinder: binding parameter [3] as [INTEGER] - [0]
2020-11-25 21:10:21,283 TRACE  [main] BasicBinder: binding parameter [4] as [BOOLEAN] - [false]
2020-11-25 21:10:21,283 TRACE  [main] BasicBinder: binding parameter [5] as [INTEGER] - [0]
2020-11-25 21:10:21,283 TRACE  [main] BasicBinder: binding parameter [6] as [BIGINT] - [1]
2020-11-25 21:10:21,285 TRACE  [main] BasicBinder: binding parameter [1] as [BLOB] - [null]
2020-11-25 21:10:21,287 TRACE  [main] BasicBinder: binding parameter [2] as [DOUBLE] - [1.0]
2020-11-25 21:10:21,287 TRACE  [main] BasicBinder: binding parameter [3] as [INTEGER] - [0]
2020-11-25 21:10:21,287 TRACE  [main] BasicBinder: binding parameter [4] as [BOOLEAN] - [false]
2020-11-25 21:10:21,288 TRACE  [main] BasicBinder: binding parameter [5] as [INTEGER] - [1]
2020-11-25 21:10:21,288 TRACE  [main] BasicBinder: binding parameter [6] as [BIGINT] - [1]
2020-11-25 21:10:21,376 TRACE  [main] BasicBinder: binding parameter [1] as [BIGINT] - [2]
2020-11-25 21:10:21,381 TRACE  [main] BasicExtractor: extracted value ([id1_1_2_] : [BIGINT]) - [null]
2020-11-25 21:10:21,381 TRACE  [main] BasicExtractor: extracted value ([id1_0_4_] : [BIGINT]) - [null]
2020-11-25 21:10:21,388 TRACE  [main] BasicExtractor: extracted value ([descript2_1_0_] : [BLOB]) - [[112, 114, 111, 98, 108, 101, 109, 100, 101, 115, 99, 114, 105, 112, 116, 105, 111, 110]]
2020-11-25 21:10:21,389 TRACE  [main] BasicExtractor: extracted value ([is_solve3_1_0_] : [BOOLEAN]) - [null]
2020-11-25 21:10:21,390 TRACE  [main] BasicExtractor: extracted value ([kind4_1_0_] : [VARCHAR]) - [POLYNOMIAL]
2020-11-25 21:10:21,391 TRACE  [main] BasicExtractor: extracted value ([matrix_d5_1_0_] : [INTEGER]) - [1]
2020-11-25 21:10:21,391 TRACE  [main] BasicExtractor: extracted value ([parent_p7_1_0_] : [BIGINT]) - [null]
2020-11-25 21:10:21,392 TRACE  [main] BasicExtractor: extracted value ([problem_6_1_0_] : [INTEGER]) - [22]
2020-11-25 21:10:21,396 TRACE  [main] BasicExtractor: extracted value ([problem_7_0_3_] : [BIGINT]) - [null]
2020-11-25 21:10:21,396 TRACE  [main] BasicExtractor: extracted value ([parent_p7_1_1_] : [BIGINT]) - [null]
2020-11-25 21:10:21,404 TRACE  [main] CollectionType: Created collection wrapper: [com.sf.back.entities.Problem.matrixes#2]
2020-11-25 21:10:21,407 TRACE  [main] BasicBinder: binding parameter [1] as [BIGINT] - [2]
2020-11-25 21:10:21,410 TRACE  [main] BasicExtractor: extracted value ([id1_0_1_] : [BIGINT]) - [6]
2020-11-25 21:10:21,410 TRACE  [main] BasicExtractor: extracted value ([binary_v2_0_1_] : [BLOB]) - [null]
2020-11-25 21:10:21,411 TRACE  [main] BasicExtractor: extracted value ([float_va3_0_1_] : [DOUBLE]) - [1.0]
2020-11-25 21:10:21,411 TRACE  [main] BasicExtractor: extracted value ([i4_0_1_] : [INTEGER]) - [0]
2020-11-25 21:10:21,412 TRACE  [main] BasicExtractor: extracted value ([is_condi5_0_1_] : [BOOLEAN]) - [true]
2020-11-25 21:10:21,412 TRACE  [main] BasicExtractor: extracted value ([j6_0_1_] : [INTEGER]) - [0]
2020-11-25 21:10:21,412 TRACE  [main] BasicExtractor: extracted value ([problem_7_0_1_] : [BIGINT]) - [2]
2020-11-25 21:10:21,413 TRACE  [main] BasicExtractor: extracted value ([problem_7_0_0_] : [BIGINT]) - [2]
2020-11-25 21:10:21,413 TRACE  [main] BasicExtractor: extracted value ([id1_0_0_] : [BIGINT]) - [6]
2020-11-25 21:10:21,414 TRACE  [main] BasicExtractor: extracted value ([id1_0_1_] : [BIGINT]) - [7]
2020-11-25 21:10:21,414 TRACE  [main] BasicExtractor: extracted value ([binary_v2_0_1_] : [BLOB]) - [null]
2020-11-25 21:10:21,414 TRACE  [main] BasicExtractor: extracted value ([float_va3_0_1_] : [DOUBLE]) - [2.718281828459045]
2020-11-25 21:10:21,414 TRACE  [main] BasicExtractor: extracted value ([i4_0_1_] : [INTEGER]) - [0]
2020-11-25 21:10:21,415 TRACE  [main] BasicExtractor: extracted value ([is_condi5_0_1_] : [BOOLEAN]) - [true]
2020-11-25 21:10:21,415 TRACE  [main] BasicExtractor: extracted value ([j6_0_1_] : [INTEGER]) - [1]
2020-11-25 21:10:21,415 TRACE  [main] BasicExtractor: extracted value ([problem_7_0_1_] : [BIGINT]) - [2]
2020-11-25 21:10:21,416 TRACE  [main] BasicExtractor: extracted value ([problem_7_0_0_] : [BIGINT]) - [2]
2020-11-25 21:10:21,416 TRACE  [main] BasicExtractor: extracted value ([id1_0_0_] : [BIGINT]) - [7]
2020-11-25 21:10:21,416 TRACE  [main] BasicExtractor: extracted value ([id1_0_1_] : [BIGINT]) - [8]
2020-11-25 21:10:21,416 TRACE  [main] BasicExtractor: extracted value ([binary_v2_0_1_] : [BLOB]) - [null]
2020-11-25 21:10:21,416 TRACE  [main] BasicExtractor: extracted value ([float_va3_0_1_] : [DOUBLE]) - [7.38905609893065]
2020-11-25 21:10:21,417 TRACE  [main] BasicExtractor: extracted value ([i4_0_1_] : [INTEGER]) - [0]
2020-11-25 21:10:21,417 TRACE  [main] BasicExtractor: extracted value ([is_condi5_0_1_] : [BOOLEAN]) - [true]
2020-11-25 21:10:21,417 TRACE  [main] BasicExtractor: extracted value ([j6_0_1_] : [INTEGER]) - [2]
2020-11-25 21:10:21,418 TRACE  [main] BasicExtractor: extracted value ([problem_7_0_1_] : [BIGINT]) - [2]
2020-11-25 21:10:21,418 TRACE  [main] BasicExtractor: extracted value ([problem_7_0_0_] : [BIGINT]) - [2]
2020-11-25 21:10:21,419 TRACE  [main] BasicExtractor: extracted value ([id1_0_0_] : [BIGINT]) - [8]
2020-11-25 21:10:21,420 TRACE  [main] BasicExtractor: extracted value ([id1_0_1_] : [BIGINT]) - [9]
2020-11-25 21:10:21,421 TRACE  [main] BasicExtractor: extracted value ([binary_v2_0_1_] : [BLOB]) - [null]
2020-11-25 21:10:21,421 TRACE  [main] BasicExtractor: extracted value ([float_va3_0_1_] : [DOUBLE]) - [20.085536923187668]
2020-11-25 21:10:21,421 TRACE  [main] BasicExtractor: extracted value ([i4_0_1_] : [INTEGER]) - [0]
2020-11-25 21:10:21,421 TRACE  [main] BasicExtractor: extracted value ([is_condi5_0_1_] : [BOOLEAN]) - [true]
2020-11-25 21:10:21,422 TRACE  [main] BasicExtractor: extracted value ([j6_0_1_] : [INTEGER]) - [3]
2020-11-25 21:10:21,422 TRACE  [main] BasicExtractor: extracted value ([problem_7_0_1_] : [BIGINT]) - [2]
2020-11-25 21:10:21,422 TRACE  [main] BasicExtractor: extracted value ([problem_7_0_0_] : [BIGINT]) - [2]
2020-11-25 21:10:21,422 TRACE  [main] BasicExtractor: extracted value ([id1_0_0_] : [BIGINT]) - [9]
2020-11-25 21:10:21,422 TRACE  [main] BasicExtractor: extracted value ([id1_0_1_] : [BIGINT]) - [10]
2020-11-25 21:10:21,423 TRACE  [main] BasicExtractor: extracted value ([binary_v2_0_1_] : [BLOB]) - [null]
2020-11-25 21:10:21,423 TRACE  [main] BasicExtractor: extracted value ([float_va3_0_1_] : [DOUBLE]) - [54.598150033144236]
2020-11-25 21:10:21,423 TRACE  [main] BasicExtractor: extracted value ([i4_0_1_] : [INTEGER]) - [0]
2020-11-25 21:10:21,423 TRACE  [main] BasicExtractor: extracted value ([is_condi5_0_1_] : [BOOLEAN]) - [true]
2020-11-25 21:10:21,424 TRACE  [main] BasicExtractor: extracted value ([j6_0_1_] : [INTEGER]) - [4]
2020-11-25 21:10:21,424 TRACE  [main] BasicExtractor: extracted value ([problem_7_0_1_] : [BIGINT]) - [2]
2020-11-25 21:10:21,424 TRACE  [main] BasicExtractor: extracted value ([problem_7_0_0_] : [BIGINT]) - [2]
2020-11-25 21:10:21,424 TRACE  [main] BasicExtractor: extracted value ([id1_0_0_] : [BIGINT]) - [10]
2020-11-25 21:10:21,425 TRACE  [main] BasicExtractor: extracted value ([id1_0_1_] : [BIGINT]) - [11]
2020-11-25 21:10:21,425 TRACE  [main] BasicExtractor: extracted value ([binary_v2_0_1_] : [BLOB]) - [null]
2020-11-25 21:10:21,425 TRACE  [main] BasicExtractor: extracted value ([float_va3_0_1_] : [DOUBLE]) - [148.4131591025766]
2020-11-25 21:10:21,425 TRACE  [main] BasicExtractor: extracted value ([i4_0_1_] : [INTEGER]) - [0]
2020-11-25 21:10:21,426 TRACE  [main] BasicExtractor: extracted value ([is_condi5_0_1_] : [BOOLEAN]) - [true]
2020-11-25 21:10:21,426 TRACE  [main] BasicExtractor: extracted value ([j6_0_1_] : [INTEGER]) - [5]
2020-11-25 21:10:21,426 TRACE  [main] BasicExtractor: extracted value ([problem_7_0_1_] : [BIGINT]) - [2]
2020-11-25 21:10:21,427 TRACE  [main] BasicExtractor: extracted value ([problem_7_0_0_] : [BIGINT]) - [2]
2020-11-25 21:10:21,427 TRACE  [main] BasicExtractor: extracted value ([id1_0_0_] : [BIGINT]) - [11]
2020-11-25 21:10:21,565 TRACE  [main] BasicBinder: binding parameter [1] as [BIGINT] - [2]
2020-11-25 21:10:21,567 TRACE  [main] BasicExtractor: extracted value ([id1_1_2_] : [BIGINT]) - [null]
2020-11-25 21:10:21,569 TRACE  [main] BasicExtractor: extracted value ([id1_0_4_] : [BIGINT]) - [null]
2020-11-25 21:10:21,570 TRACE  [main] BasicExtractor: extracted value ([descript2_1_0_] : [BLOB]) - [[112, 114, 111, 98, 108, 101, 109, 100, 101, 115, 99, 114, 105, 112, 116, 105, 111, 110]]
2020-11-25 21:10:21,570 TRACE  [main] BasicExtractor: extracted value ([is_solve3_1_0_] : [BOOLEAN]) - [null]
2020-11-25 21:10:21,571 TRACE  [main] BasicExtractor: extracted value ([kind4_1_0_] : [VARCHAR]) - [POLYNOMIAL]
2020-11-25 21:10:21,571 TRACE  [main] BasicExtractor: extracted value ([matrix_d5_1_0_] : [INTEGER]) - [1]
2020-11-25 21:10:21,572 TRACE  [main] BasicExtractor: extracted value ([parent_p7_1_0_] : [BIGINT]) - [null]
2020-11-25 21:10:21,572 TRACE  [main] BasicExtractor: extracted value ([problem_6_1_0_] : [INTEGER]) - [22]
2020-11-25 21:10:21,573 TRACE  [main] BasicExtractor: extracted value ([problem_7_0_3_] : [BIGINT]) - [null]
2020-11-25 21:10:21,573 TRACE  [main] BasicExtractor: extracted value ([parent_p7_1_1_] : [BIGINT]) - [null]
2020-11-25 21:10:21,573 TRACE  [main] CollectionType: Created collection wrapper: [com.sf.back.entities.Problem.matrixes#2]
2020-11-25 21:10:21,574 TRACE  [main] BasicBinder: binding parameter [1] as [BIGINT] - [2]
2020-11-25 21:10:21,575 TRACE  [main] BasicExtractor: extracted value ([id1_0_1_] : [BIGINT]) - [6]
2020-11-25 21:10:21,576 TRACE  [main] BasicExtractor: extracted value ([binary_v2_0_1_] : [BLOB]) - [null]
2020-11-25 21:10:21,576 TRACE  [main] BasicExtractor: extracted value ([float_va3_0_1_] : [DOUBLE]) - [1.0]
2020-11-25 21:10:21,579 TRACE  [main] BasicExtractor: extracted value ([i4_0_1_] : [INTEGER]) - [0]
2020-11-25 21:10:21,579 TRACE  [main] BasicExtractor: extracted value ([is_condi5_0_1_] : [BOOLEAN]) - [true]
2020-11-25 21:10:21,580 TRACE  [main] BasicExtractor: extracted value ([j6_0_1_] : [INTEGER]) - [0]
2020-11-25 21:10:21,581 TRACE  [main] BasicExtractor: extracted value ([problem_7_0_1_] : [BIGINT]) - [2]
2020-11-25 21:10:21,581 TRACE  [main] BasicExtractor: extracted value ([problem_7_0_0_] : [BIGINT]) - [2]
2020-11-25 21:10:21,582 TRACE  [main] BasicExtractor: extracted value ([id1_0_0_] : [BIGINT]) - [6]
2020-11-25 21:10:21,582 TRACE  [main] BasicExtractor: extracted value ([id1_0_1_] : [BIGINT]) - [7]
2020-11-25 21:10:21,583 TRACE  [main] BasicExtractor: extracted value ([binary_v2_0_1_] : [BLOB]) - [null]
2020-11-25 21:10:21,586 TRACE  [main] BasicExtractor: extracted value ([float_va3_0_1_] : [DOUBLE]) - [2.718281828459045]
2020-11-25 21:10:21,586 TRACE  [main] BasicExtractor: extracted value ([i4_0_1_] : [INTEGER]) - [0]
2020-11-25 21:10:21,587 TRACE  [main] BasicExtractor: extracted value ([is_condi5_0_1_] : [BOOLEAN]) - [true]
2020-11-25 21:10:21,588 TRACE  [main] BasicExtractor: extracted value ([j6_0_1_] : [INTEGER]) - [1]
2020-11-25 21:10:21,588 TRACE  [main] BasicExtractor: extracted value ([problem_7_0_1_] : [BIGINT]) - [2]
2020-11-25 21:10:21,589 TRACE  [main] BasicExtractor: extracted value ([problem_7_0_0_] : [BIGINT]) - [2]
2020-11-25 21:10:21,589 TRACE  [main] BasicExtractor: extracted value ([id1_0_0_] : [BIGINT]) - [7]
2020-11-25 21:10:21,589 TRACE  [main] BasicExtractor: extracted value ([id1_0_1_] : [BIGINT]) - [8]
2020-11-25 21:10:21,590 TRACE  [main] BasicExtractor: extracted value ([binary_v2_0_1_] : [BLOB]) - [null]
2020-11-25 21:10:21,590 TRACE  [main] BasicExtractor: extracted value ([float_va3_0_1_] : [DOUBLE]) - [7.38905609893065]
2020-11-25 21:10:21,590 TRACE  [main] BasicExtractor: extracted value ([i4_0_1_] : [INTEGER]) - [0]
2020-11-25 21:10:21,591 TRACE  [main] BasicExtractor: extracted value ([is_condi5_0_1_] : [BOOLEAN]) - [true]
2020-11-25 21:10:21,591 TRACE  [main] BasicExtractor: extracted value ([j6_0_1_] : [INTEGER]) - [2]
2020-11-25 21:10:21,591 TRACE  [main] BasicExtractor: extracted value ([problem_7_0_1_] : [BIGINT]) - [2]
2020-11-25 21:10:21,591 TRACE  [main] BasicExtractor: extracted value ([problem_7_0_0_] : [BIGINT]) - [2]
2020-11-25 21:10:21,592 TRACE  [main] BasicExtractor: extracted value ([id1_0_0_] : [BIGINT]) - [8]
2020-11-25 21:10:21,592 TRACE  [main] BasicExtractor: extracted value ([id1_0_1_] : [BIGINT]) - [9]
2020-11-25 21:10:21,593 TRACE  [main] BasicExtractor: extracted value ([binary_v2_0_1_] : [BLOB]) - [null]
2020-11-25 21:10:21,593 TRACE  [main] BasicExtractor: extracted value ([float_va3_0_1_] : [DOUBLE]) - [20.085536923187668]
2020-11-25 21:10:21,593 TRACE  [main] BasicExtractor: extracted value ([i4_0_1_] : [INTEGER]) - [0]
2020-11-25 21:10:21,593 TRACE  [main] BasicExtractor: extracted value ([is_condi5_0_1_] : [BOOLEAN]) - [true]
2020-11-25 21:10:21,593 TRACE  [main] BasicExtractor: extracted value ([j6_0_1_] : [INTEGER]) - [3]
2020-11-25 21:10:21,593 TRACE  [main] BasicExtractor: extracted value ([problem_7_0_1_] : [BIGINT]) - [2]
2020-11-25 21:10:21,594 TRACE  [main] BasicExtractor: extracted value ([problem_7_0_0_] : [BIGINT]) - [2]
2020-11-25 21:10:21,594 TRACE  [main] BasicExtractor: extracted value ([id1_0_0_] : [BIGINT]) - [9]
2020-11-25 21:10:21,594 TRACE  [main] BasicExtractor: extracted value ([id1_0_1_] : [BIGINT]) - [10]
2020-11-25 21:10:21,594 TRACE  [main] BasicExtractor: extracted value ([binary_v2_0_1_] : [BLOB]) - [null]
2020-11-25 21:10:21,595 TRACE  [main] BasicExtractor: extracted value ([float_va3_0_1_] : [DOUBLE]) - [54.598150033144236]
2020-11-25 21:10:21,595 TRACE  [main] BasicExtractor: extracted value ([i4_0_1_] : [INTEGER]) - [0]
2020-11-25 21:10:21,595 TRACE  [main] BasicExtractor: extracted value ([is_condi5_0_1_] : [BOOLEAN]) - [true]
2020-11-25 21:10:21,595 TRACE  [main] BasicExtractor: extracted value ([j6_0_1_] : [INTEGER]) - [4]
2020-11-25 21:10:21,600 TRACE  [main] BasicExtractor: extracted value ([problem_7_0_1_] : [BIGINT]) - [2]
2020-11-25 21:10:21,600 TRACE  [main] BasicExtractor: extracted value ([problem_7_0_0_] : [BIGINT]) - [2]
2020-11-25 21:10:21,600 TRACE  [main] BasicExtractor: extracted value ([id1_0_0_] : [BIGINT]) - [10]
2020-11-25 21:10:21,601 TRACE  [main] BasicExtractor: extracted value ([id1_0_1_] : [BIGINT]) - [11]
2020-11-25 21:10:21,601 TRACE  [main] BasicExtractor: extracted value ([binary_v2_0_1_] : [BLOB]) - [null]
2020-11-25 21:10:21,601 TRACE  [main] BasicExtractor: extracted value ([float_va3_0_1_] : [DOUBLE]) - [148.4131591025766]
2020-11-25 21:10:21,602 TRACE  [main] BasicExtractor: extracted value ([i4_0_1_] : [INTEGER]) - [0]
2020-11-25 21:10:21,602 TRACE  [main] BasicExtractor: extracted value ([is_condi5_0_1_] : [BOOLEAN]) - [true]
2020-11-25 21:10:21,602 TRACE  [main] BasicExtractor: extracted value ([j6_0_1_] : [INTEGER]) - [5]
2020-11-25 21:10:21,602 TRACE  [main] BasicExtractor: extracted value ([problem_7_0_1_] : [BIGINT]) - [2]
2020-11-25 21:10:21,603 TRACE  [main] BasicExtractor: extracted value ([problem_7_0_0_] : [BIGINT]) - [2]
2020-11-25 21:10:21,603 TRACE  [main] BasicExtractor: extracted value ([id1_0_0_] : [BIGINT]) - [11]
2020-11-25 21:10:21,623 TRACE  [main] BasicBinder: binding parameter [1] as [BLOB] - [[100, 101, 115, 99, 114, 105, 112, 116, 105, 111, 110, 100, 101, 115, 99, 114, 105, 112, 116, 105, 111, 110]]
2020-11-25 21:10:21,623 TRACE  [main] BasicBinder: binding parameter [2] as [BOOLEAN] - [null]
2020-11-25 21:10:21,624 TRACE  [main] BasicBinder: binding parameter [3] as [VARCHAR] - [POLYNOMIAL]
2020-11-25 21:10:21,624 TRACE  [main] BasicBinder: binding parameter [4] as [INTEGER] - [1]
2020-11-25 21:10:21,624 TRACE  [main] BasicBinder: binding parameter [5] as [BIGINT] - [null]
2020-11-25 21:10:21,625 TRACE  [main] BasicBinder: binding parameter [6] as [INTEGER] - [22]
2020-11-25 21:10:21,625 TRACE  [main] BasicBinder: binding parameter [7] as [BIGINT] - [2]
2020-11-25 21:10:21,629 TRACE  [main] BasicBinder: binding parameter [1] as [BLOB] - [null]
2020-11-25 21:10:21,629 TRACE  [main] BasicBinder: binding parameter [2] as [DOUBLE] - [1.01]
2020-11-25 21:10:21,630 TRACE  [main] BasicBinder: binding parameter [3] as [INTEGER] - [0]
2020-11-25 21:10:21,630 TRACE  [main] BasicBinder: binding parameter [4] as [BOOLEAN] - [true]
2020-11-25 21:10:21,631 TRACE  [main] BasicBinder: binding parameter [5] as [INTEGER] - [0]
2020-11-25 21:10:21,632 TRACE  [main] BasicBinder: binding parameter [6] as [BIGINT] - [2]
2020-11-25 21:10:21,633 TRACE  [main] BasicBinder: binding parameter [7] as [BIGINT] - [6]
2020-11-25 21:10:21,638 TRACE  [main] BasicBinder: binding parameter [1] as [BIGINT] - [2]
2020-11-25 21:10:21,639 TRACE  [main] BasicExtractor: extracted value ([id1_1_2_] : [BIGINT]) - [null]
2020-11-25 21:10:21,639 TRACE  [main] BasicExtractor: extracted value ([id1_0_4_] : [BIGINT]) - [null]
2020-11-25 21:10:21,639 TRACE  [main] BasicExtractor: extracted value ([descript2_1_0_] : [BLOB]) - [[100, 101, 115, 99, 114, 105, 112, 116, 105, 111, 110, 100, 101, 115, 99, 114, 105, 112, 116, 105, 111, 110]]
2020-11-25 21:10:21,640 TRACE  [main] BasicExtractor: extracted value ([is_solve3_1_0_] : [BOOLEAN]) - [null]
2020-11-25 21:10:21,640 TRACE  [main] BasicExtractor: extracted value ([kind4_1_0_] : [VARCHAR]) - [POLYNOMIAL]
2020-11-25 21:10:21,640 TRACE  [main] BasicExtractor: extracted value ([matrix_d5_1_0_] : [INTEGER]) - [1]
2020-11-25 21:10:21,640 TRACE  [main] BasicExtractor: extracted value ([parent_p7_1_0_] : [BIGINT]) - [null]
2020-11-25 21:10:21,641 TRACE  [main] BasicExtractor: extracted value ([problem_6_1_0_] : [INTEGER]) - [22]
2020-11-25 21:10:21,641 TRACE  [main] BasicExtractor: extracted value ([problem_7_0_3_] : [BIGINT]) - [null]
2020-11-25 21:10:21,641 TRACE  [main] BasicExtractor: extracted value ([parent_p7_1_1_] : [BIGINT]) - [null]
2020-11-25 21:10:21,641 TRACE  [main] CollectionType: Created collection wrapper: [com.sf.back.entities.Problem.matrixes#2]
2020-11-25 21:10:21,642 TRACE  [main] BasicBinder: binding parameter [1] as [BIGINT] - [2]
2020-11-25 21:10:21,642 TRACE  [main] BasicExtractor: extracted value ([id1_0_1_] : [BIGINT]) - [6]
2020-11-25 21:10:21,643 TRACE  [main] BasicExtractor: extracted value ([binary_v2_0_1_] : [BLOB]) - [null]
2020-11-25 21:10:21,644 TRACE  [main] BasicExtractor: extracted value ([float_va3_0_1_] : [DOUBLE]) - [1.01]
2020-11-25 21:10:21,644 TRACE  [main] BasicExtractor: extracted value ([i4_0_1_] : [INTEGER]) - [0]
2020-11-25 21:10:21,644 TRACE  [main] BasicExtractor: extracted value ([is_condi5_0_1_] : [BOOLEAN]) - [true]
2020-11-25 21:10:21,644 TRACE  [main] BasicExtractor: extracted value ([j6_0_1_] : [INTEGER]) - [0]
2020-11-25 21:10:21,644 TRACE  [main] BasicExtractor: extracted value ([problem_7_0_1_] : [BIGINT]) - [2]
2020-11-25 21:10:21,644 TRACE  [main] BasicExtractor: extracted value ([problem_7_0_0_] : [BIGINT]) - [2]
2020-11-25 21:10:21,645 TRACE  [main] BasicExtractor: extracted value ([id1_0_0_] : [BIGINT]) - [6]
2020-11-25 21:10:21,645 TRACE  [main] BasicExtractor: extracted value ([id1_0_1_] : [BIGINT]) - [7]
2020-11-25 21:10:21,646 TRACE  [main] BasicExtractor: extracted value ([binary_v2_0_1_] : [BLOB]) - [null]
2020-11-25 21:10:21,646 TRACE  [main] BasicExtractor: extracted value ([float_va3_0_1_] : [DOUBLE]) - [2.718281828459045]
2020-11-25 21:10:21,646 TRACE  [main] BasicExtractor: extracted value ([i4_0_1_] : [INTEGER]) - [0]
2020-11-25 21:10:21,646 TRACE  [main] BasicExtractor: extracted value ([is_condi5_0_1_] : [BOOLEAN]) - [true]
2020-11-25 21:10:21,647 TRACE  [main] BasicExtractor: extracted value ([j6_0_1_] : [INTEGER]) - [1]
2020-11-25 21:10:21,647 TRACE  [main] BasicExtractor: extracted value ([problem_7_0_1_] : [BIGINT]) - [2]
2020-11-25 21:10:21,647 TRACE  [main] BasicExtractor: extracted value ([problem_7_0_0_] : [BIGINT]) - [2]
2020-11-25 21:10:21,648 TRACE  [main] BasicExtractor: extracted value ([id1_0_0_] : [BIGINT]) - [7]
2020-11-25 21:10:21,648 TRACE  [main] BasicExtractor: extracted value ([id1_0_1_] : [BIGINT]) - [8]
2020-11-25 21:10:21,649 TRACE  [main] BasicExtractor: extracted value ([binary_v2_0_1_] : [BLOB]) - [null]
2020-11-25 21:10:21,649 TRACE  [main] BasicExtractor: extracted value ([float_va3_0_1_] : [DOUBLE]) - [7.38905609893065]
2020-11-25 21:10:21,649 TRACE  [main] BasicExtractor: extracted value ([i4_0_1_] : [INTEGER]) - [0]
2020-11-25 21:10:21,650 TRACE  [main] BasicExtractor: extracted value ([is_condi5_0_1_] : [BOOLEAN]) - [true]
2020-11-25 21:10:21,650 TRACE  [main] BasicExtractor: extracted value ([j6_0_1_] : [INTEGER]) - [2]
2020-11-25 21:10:21,650 TRACE  [main] BasicExtractor: extracted value ([problem_7_0_1_] : [BIGINT]) - [2]
2020-11-25 21:10:21,650 TRACE  [main] BasicExtractor: extracted value ([problem_7_0_0_] : [BIGINT]) - [2]
2020-11-25 21:10:21,651 TRACE  [main] BasicExtractor: extracted value ([id1_0_0_] : [BIGINT]) - [8]
2020-11-25 21:10:21,652 TRACE  [main] BasicExtractor: extracted value ([id1_0_1_] : [BIGINT]) - [9]
2020-11-25 21:10:21,652 TRACE  [main] BasicExtractor: extracted value ([binary_v2_0_1_] : [BLOB]) - [null]
2020-11-25 21:10:21,652 TRACE  [main] BasicExtractor: extracted value ([float_va3_0_1_] : [DOUBLE]) - [20.085536923187668]
2020-11-25 21:10:21,653 TRACE  [main] BasicExtractor: extracted value ([i4_0_1_] : [INTEGER]) - [0]
2020-11-25 21:10:21,653 TRACE  [main] BasicExtractor: extracted value ([is_condi5_0_1_] : [BOOLEAN]) - [true]
2020-11-25 21:10:21,653 TRACE  [main] BasicExtractor: extracted value ([j6_0_1_] : [INTEGER]) - [3]
2020-11-25 21:10:21,654 TRACE  [main] BasicExtractor: extracted value ([problem_7_0_1_] : [BIGINT]) - [2]
2020-11-25 21:10:21,654 TRACE  [main] BasicExtractor: extracted value ([problem_7_0_0_] : [BIGINT]) - [2]
2020-11-25 21:10:21,654 TRACE  [main] BasicExtractor: extracted value ([id1_0_0_] : [BIGINT]) - [9]
2020-11-25 21:10:21,654 TRACE  [main] BasicExtractor: extracted value ([id1_0_1_] : [BIGINT]) - [10]
2020-11-25 21:10:21,654 TRACE  [main] BasicExtractor: extracted value ([binary_v2_0_1_] : [BLOB]) - [null]
2020-11-25 21:10:21,655 TRACE  [main] BasicExtractor: extracted value ([float_va3_0_1_] : [DOUBLE]) - [54.598150033144236]
2020-11-25 21:10:21,655 TRACE  [main] BasicExtractor: extracted value ([i4_0_1_] : [INTEGER]) - [0]
2020-11-25 21:10:21,655 TRACE  [main] BasicExtractor: extracted value ([is_condi5_0_1_] : [BOOLEAN]) - [true]
2020-11-25 21:10:21,655 TRACE  [main] BasicExtractor: extracted value ([j6_0_1_] : [INTEGER]) - [4]
2020-11-25 21:10:21,656 TRACE  [main] BasicExtractor: extracted value ([problem_7_0_1_] : [BIGINT]) - [2]
2020-11-25 21:10:21,656 TRACE  [main] BasicExtractor: extracted value ([problem_7_0_0_] : [BIGINT]) - [2]
2020-11-25 21:10:21,657 TRACE  [main] BasicExtractor: extracted value ([id1_0_0_] : [BIGINT]) - [10]
2020-11-25 21:10:21,657 TRACE  [main] BasicExtractor: extracted value ([id1_0_1_] : [BIGINT]) - [11]
2020-11-25 21:10:21,657 TRACE  [main] BasicExtractor: extracted value ([binary_v2_0_1_] : [BLOB]) - [null]
2020-11-25 21:10:21,658 TRACE  [main] BasicExtractor: extracted value ([float_va3_0_1_] : [DOUBLE]) - [148.4131591025766]
2020-11-25 21:10:21,658 TRACE  [main] BasicExtractor: extracted value ([i4_0_1_] : [INTEGER]) - [0]
2020-11-25 21:10:21,658 TRACE  [main] BasicExtractor: extracted value ([is_condi5_0_1_] : [BOOLEAN]) - [true]
2020-11-25 21:10:21,658 TRACE  [main] BasicExtractor: extracted value ([j6_0_1_] : [INTEGER]) - [5]
2020-11-25 21:10:21,658 TRACE  [main] BasicExtractor: extracted value ([problem_7_0_1_] : [BIGINT]) - [2]
2020-11-25 21:10:21,659 TRACE  [main] BasicExtractor: extracted value ([problem_7_0_0_] : [BIGINT]) - [2]
2020-11-25 21:10:21,659 TRACE  [main] BasicExtractor: extracted value ([id1_0_0_] : [BIGINT]) - [11]
2020-11-25 21:10:21,685 TRACE  [main] BasicBinder: binding parameter [1] as [BLOB] - [[100, 101, 115, 99, 114, 105, 112, 116, 105, 111, 110]]
2020-11-25 21:10:21,685 TRACE  [main] BasicBinder: binding parameter [2] as [BOOLEAN] - [false]
2020-11-25 21:10:21,685 TRACE  [main] BasicBinder: binding parameter [3] as [VARCHAR] - [POLYNOMIAL]
2020-11-25 21:10:21,685 TRACE  [main] BasicBinder: binding parameter [4] as [INTEGER] - [12]
2020-11-25 21:10:21,685 TRACE  [main] BasicBinder: binding parameter [5] as [BIGINT] - [null]
2020-11-25 21:10:21,686 TRACE  [main] BasicBinder: binding parameter [6] as [INTEGER] - [null]
2020-11-25 21:10:21,687 TRACE  [main] BasicBinder: binding parameter [1] as [BLOB] - [null]
2020-11-25 21:10:21,688 TRACE  [main] BasicBinder: binding parameter [2] as [DOUBLE] - [0.0]
2020-11-25 21:10:21,688 TRACE  [main] BasicBinder: binding parameter [3] as [INTEGER] - [0]
2020-11-25 21:10:21,688 TRACE  [main] BasicBinder: binding parameter [4] as [BOOLEAN] - [true]
2020-11-25 21:10:21,688 TRACE  [main] BasicBinder: binding parameter [5] as [INTEGER] - [0]
2020-11-25 21:10:21,688 TRACE  [main] BasicBinder: binding parameter [6] as [BIGINT] - [4]
2020-11-25 21:10:21,690 TRACE  [main] BasicBinder: binding parameter [1] as [BLOB] - [null]
2020-11-25 21:10:21,690 TRACE  [main] BasicBinder: binding parameter [2] as [DOUBLE] - [1.0]
2020-11-25 21:10:21,690 TRACE  [main] BasicBinder: binding parameter [3] as [INTEGER] - [0]
2020-11-25 21:10:21,691 TRACE  [main] BasicBinder: binding parameter [4] as [BOOLEAN] - [true]
2020-11-25 21:10:21,691 TRACE  [main] BasicBinder: binding parameter [5] as [INTEGER] - [1]
2020-11-25 21:10:21,691 TRACE  [main] BasicBinder: binding parameter [6] as [BIGINT] - [4]
2020-11-25 21:10:21,692 TRACE  [main] BasicBinder: binding parameter [1] as [BLOB] - [null]
2020-11-25 21:10:21,693 TRACE  [main] BasicBinder: binding parameter [2] as [DOUBLE] - [2.0]
2020-11-25 21:10:21,693 TRACE  [main] BasicBinder: binding parameter [3] as [INTEGER] - [0]
2020-11-25 21:10:21,693 TRACE  [main] BasicBinder: binding parameter [4] as [BOOLEAN] - [true]
2020-11-25 21:10:21,693 TRACE  [main] BasicBinder: binding parameter [5] as [INTEGER] - [2]
2020-11-25 21:10:21,694 TRACE  [main] BasicBinder: binding parameter [6] as [BIGINT] - [4]
2020-11-25 21:10:21,695 TRACE  [main] BasicBinder: binding parameter [1] as [BLOB] - [null]
2020-11-25 21:10:21,695 TRACE  [main] BasicBinder: binding parameter [2] as [DOUBLE] - [3.0]
2020-11-25 21:10:21,695 TRACE  [main] BasicBinder: binding parameter [3] as [INTEGER] - [0]
2020-11-25 21:10:21,695 TRACE  [main] BasicBinder: binding parameter [4] as [BOOLEAN] - [true]
2020-11-25 21:10:21,696 TRACE  [main] BasicBinder: binding parameter [5] as [INTEGER] - [3]
2020-11-25 21:10:21,696 TRACE  [main] BasicBinder: binding parameter [6] as [BIGINT] - [4]
2020-11-25 21:10:21,697 TRACE  [main] BasicBinder: binding parameter [1] as [BLOB] - [null]
2020-11-25 21:10:21,698 TRACE  [main] BasicBinder: binding parameter [2] as [DOUBLE] - [4.0]
2020-11-25 21:10:21,698 TRACE  [main] BasicBinder: binding parameter [3] as [INTEGER] - [0]
2020-11-25 21:10:21,698 TRACE  [main] BasicBinder: binding parameter [4] as [BOOLEAN] - [true]
2020-11-25 21:10:21,698 TRACE  [main] BasicBinder: binding parameter [5] as [INTEGER] - [4]
2020-11-25 21:10:21,698 TRACE  [main] BasicBinder: binding parameter [6] as [BIGINT] - [4]
2020-11-25 21:10:21,700 TRACE  [main] BasicBinder: binding parameter [1] as [BLOB] - [null]
2020-11-25 21:10:21,700 TRACE  [main] BasicBinder: binding parameter [2] as [DOUBLE] - [5.0]
2020-11-25 21:10:21,700 TRACE  [main] BasicBinder: binding parameter [3] as [INTEGER] - [0]
2020-11-25 21:10:21,701 TRACE  [main] BasicBinder: binding parameter [4] as [BOOLEAN] - [true]
2020-11-25 21:10:21,701 TRACE  [main] BasicBinder: binding parameter [5] as [INTEGER] - [5]
2020-11-25 21:10:21,701 TRACE  [main] BasicBinder: binding parameter [6] as [BIGINT] - [4]
2020-11-25 21:10:21,702 TRACE  [main] BasicBinder: binding parameter [1] as [BLOB] - [null]
2020-11-25 21:10:21,703 TRACE  [main] BasicBinder: binding parameter [2] as [DOUBLE] - [6.0]
2020-11-25 21:10:21,703 TRACE  [main] BasicBinder: binding parameter [3] as [INTEGER] - [0]
2020-11-25 21:10:21,703 TRACE  [main] BasicBinder: binding parameter [4] as [BOOLEAN] - [true]
2020-11-25 21:10:21,704 TRACE  [main] BasicBinder: binding parameter [5] as [INTEGER] - [6]
2020-11-25 21:10:21,704 TRACE  [main] BasicBinder: binding parameter [6] as [BIGINT] - [4]
2020-11-25 21:10:21,705 TRACE  [main] BasicBinder: binding parameter [1] as [BLOB] - [null]
2020-11-25 21:10:21,706 TRACE  [main] BasicBinder: binding parameter [2] as [DOUBLE] - [7.0]
2020-11-25 21:10:21,706 TRACE  [main] BasicBinder: binding parameter [3] as [INTEGER] - [0]
2020-11-25 21:10:21,707 TRACE  [main] BasicBinder: binding parameter [4] as [BOOLEAN] - [true]
2020-11-25 21:10:21,707 TRACE  [main] BasicBinder: binding parameter [5] as [INTEGER] - [7]
2020-11-25 21:10:21,708 TRACE  [main] BasicBinder: binding parameter [6] as [BIGINT] - [4]
2020-11-25 21:10:21,710 TRACE  [main] BasicBinder: binding parameter [1] as [BLOB] - [null]
2020-11-25 21:10:21,710 TRACE  [main] BasicBinder: binding parameter [2] as [DOUBLE] - [8.0]
2020-11-25 21:10:21,710 TRACE  [main] BasicBinder: binding parameter [3] as [INTEGER] - [0]
2020-11-25 21:10:21,710 TRACE  [main] BasicBinder: binding parameter [4] as [BOOLEAN] - [true]
2020-11-25 21:10:21,711 TRACE  [main] BasicBinder: binding parameter [5] as [INTEGER] - [8]
2020-11-25 21:10:21,711 TRACE  [main] BasicBinder: binding parameter [6] as [BIGINT] - [4]
2020-11-25 21:10:21,712 TRACE  [main] BasicBinder: binding parameter [1] as [BLOB] - [null]
2020-11-25 21:10:21,713 TRACE  [main] BasicBinder: binding parameter [2] as [DOUBLE] - [9.0]
2020-11-25 21:10:21,713 TRACE  [main] BasicBinder: binding parameter [3] as [INTEGER] - [0]
2020-11-25 21:10:21,713 TRACE  [main] BasicBinder: binding parameter [4] as [BOOLEAN] - [true]
2020-11-25 21:10:21,713 TRACE  [main] BasicBinder: binding parameter [5] as [INTEGER] - [9]
2020-11-25 21:10:21,714 TRACE  [main] BasicBinder: binding parameter [6] as [BIGINT] - [4]
2020-11-25 21:10:21,887 TRACE  [main] BasicExtractor: extracted value ([id1_1_] : [BIGINT]) - [1]
2020-11-25 21:10:21,888 TRACE  [main] BasicExtractor: extracted value ([descript2_1_] : [BLOB]) - [[70, 105, 110, 100, 32, 97, 108, 108, 32, 114, 111, 111, 116, 115, 32, 111, 102, 32, 103, 105, 118, 101, 110, 32, 112, 111, 108, 121, 110, 111, 109, 105, 97, 108]]
2020-11-25 21:10:21,888 TRACE  [main] BasicExtractor: extracted value ([is_solve3_1_] : [BOOLEAN]) - [false]
2020-11-25 21:10:21,889 TRACE  [main] BasicExtractor: extracted value ([kind4_1_] : [VARCHAR]) - [POLYNOMIAL]
2020-11-25 21:10:21,889 TRACE  [main] BasicExtractor: extracted value ([matrix_d5_1_] : [INTEGER]) - [1]
2020-11-25 21:10:21,889 TRACE  [main] BasicExtractor: extracted value ([parent_p7_1_] : [BIGINT]) - [null]
2020-11-25 21:10:21,889 TRACE  [main] BasicExtractor: extracted value ([problem_6_1_] : [INTEGER]) - [6]
2020-11-25 21:10:21,890 TRACE  [main] BasicExtractor: extracted value ([id1_1_] : [BIGINT]) - [2]
2020-11-25 21:10:21,890 TRACE  [main] BasicExtractor: extracted value ([descript2_1_] : [BLOB]) - [[100, 101, 115, 99, 114, 105, 112, 116, 105, 111, 110, 100, 101, 115, 99, 114, 105, 112, 116, 105, 111, 110]]
2020-11-25 21:10:21,890 TRACE  [main] BasicExtractor: extracted value ([is_solve3_1_] : [BOOLEAN]) - [null]
2020-11-25 21:10:21,890 TRACE  [main] BasicExtractor: extracted value ([kind4_1_] : [VARCHAR]) - [POLYNOMIAL]
2020-11-25 21:10:21,891 TRACE  [main] BasicExtractor: extracted value ([matrix_d5_1_] : [INTEGER]) - [1]
2020-11-25 21:10:21,891 TRACE  [main] BasicExtractor: extracted value ([parent_p7_1_] : [BIGINT]) - [null]
2020-11-25 21:10:21,891 TRACE  [main] BasicExtractor: extracted value ([problem_6_1_] : [INTEGER]) - [22]
2020-11-25 21:10:21,892 TRACE  [main] BasicExtractor: extracted value ([id1_1_] : [BIGINT]) - [3]
2020-11-25 21:10:21,892 TRACE  [main] BasicExtractor: extracted value ([descript2_1_] : [BLOB]) - [[112, 114, 111, 98, 108, 101, 109, 100, 101, 115, 99, 114, 105, 112, 116, 105, 111, 110]]
2020-11-25 21:10:21,892 TRACE  [main] BasicExtractor: extracted value ([is_solve3_1_] : [BOOLEAN]) - [null]
2020-11-25 21:10:21,892 TRACE  [main] BasicExtractor: extracted value ([kind4_1_] : [VARCHAR]) - [POLYNOMIAL]
2020-11-25 21:10:21,893 TRACE  [main] BasicExtractor: extracted value ([matrix_d5_1_] : [INTEGER]) - [1]
2020-11-25 21:10:21,893 TRACE  [main] BasicExtractor: extracted value ([parent_p7_1_] : [BIGINT]) - [null]
2020-11-25 21:10:21,893 TRACE  [main] BasicExtractor: extracted value ([problem_6_1_] : [INTEGER]) - [22]
2020-11-25 21:10:21,893 TRACE  [main] BasicExtractor: extracted value ([id1_1_] : [BIGINT]) - [4]
2020-11-25 21:10:21,894 TRACE  [main] BasicExtractor: extracted value ([descript2_1_] : [BLOB]) - [[100, 101, 115, 99, 114, 105, 112, 116, 105, 111, 110]]
2020-11-25 21:10:21,894 TRACE  [main] BasicExtractor: extracted value ([is_solve3_1_] : [BOOLEAN]) - [false]
2020-11-25 21:10:21,894 TRACE  [main] BasicExtractor: extracted value ([kind4_1_] : [VARCHAR]) - [POLYNOMIAL]
2020-11-25 21:10:21,894 TRACE  [main] BasicExtractor: extracted value ([matrix_d5_1_] : [INTEGER]) - [12]
2020-11-25 21:10:21,895 TRACE  [main] BasicExtractor: extracted value ([parent_p7_1_] : [BIGINT]) - [null]
2020-11-25 21:10:21,895 TRACE  [main] BasicExtractor: extracted value ([problem_6_1_] : [INTEGER]) - [null]
2020-11-25 21:10:21,895 TRACE  [main] BasicExtractor: extracted value ([id1_1_] : [BIGINT]) - [5]
2020-11-25 21:10:21,895 TRACE  [main] BasicExtractor: extracted value ([descript2_1_] : [BLOB]) - [[112, 114, 111, 98, 108, 101, 109, 100, 101, 115, 99, 114, 105, 112, 116, 105, 111, 110]]
2020-11-25 21:10:21,896 TRACE  [main] BasicExtractor: extracted value ([is_solve3_1_] : [BOOLEAN]) - [null]
2020-11-25 21:10:21,896 TRACE  [main] BasicExtractor: extracted value ([kind4_1_] : [VARCHAR]) - [POLYNOMIAL]
2020-11-25 21:10:21,896 TRACE  [main] BasicExtractor: extracted value ([matrix_d5_1_] : [INTEGER]) - [1]
2020-11-25 21:10:21,896 TRACE  [main] BasicExtractor: extracted value ([parent_p7_1_] : [BIGINT]) - [null]
2020-11-25 21:10:21,896 TRACE  [main] BasicExtractor: extracted value ([problem_6_1_] : [INTEGER]) - [22]
2020-11-25 21:10:21,897 TRACE  [main] CollectionType: Created collection wrapper: [com.sf.back.entities.Problem.children#1]
2020-11-25 21:10:21,897 TRACE  [main] CollectionType: Created collection wrapper: [com.sf.back.entities.Problem.matrixes#1]
2020-11-25 21:10:21,897 TRACE  [main] CollectionType: Created collection wrapper: [com.sf.back.entities.Problem.children#2]
2020-11-25 21:10:21,897 TRACE  [main] CollectionType: Created collection wrapper: [com.sf.back.entities.Problem.matrixes#2]
2020-11-25 21:10:21,898 TRACE  [main] CollectionType: Created collection wrapper: [com.sf.back.entities.Problem.children#3]
2020-11-25 21:10:21,898 TRACE  [main] CollectionType: Created collection wrapper: [com.sf.back.entities.Problem.matrixes#3]
2020-11-25 21:10:21,898 TRACE  [main] CollectionType: Created collection wrapper: [com.sf.back.entities.Problem.children#4]
2020-11-25 21:10:21,898 TRACE  [main] CollectionType: Created collection wrapper: [com.sf.back.entities.Problem.matrixes#4]
2020-11-25 21:10:21,898 TRACE  [main] CollectionType: Created collection wrapper: [com.sf.back.entities.Problem.children#5]
2020-11-25 21:10:21,898 TRACE  [main] CollectionType: Created collection wrapper: [com.sf.back.entities.Problem.matrixes#5]
2020-11-25 21:10:21,899 TRACE  [main] BasicBinder: binding parameter [1] as [BIGINT] - [5]
2020-11-25 21:10:21,900 TRACE  [main] BasicExtractor: extracted value ([id1_0_1_] : [BIGINT]) - [28]
2020-11-25 21:10:21,901 TRACE  [main] BasicExtractor: extracted value ([binary_v2_0_1_] : [BLOB]) - [null]
2020-11-25 21:10:21,901 TRACE  [main] BasicExtractor: extracted value ([float_va3_0_1_] : [DOUBLE]) - [1.0]
2020-11-25 21:10:21,901 TRACE  [main] BasicExtractor: extracted value ([i4_0_1_] : [INTEGER]) - [0]
2020-11-25 21:10:21,901 TRACE  [main] BasicExtractor: extracted value ([is_condi5_0_1_] : [BOOLEAN]) - [true]
2020-11-25 21:10:21,901 TRACE  [main] BasicExtractor: extracted value ([j6_0_1_] : [INTEGER]) - [0]
2020-11-25 21:10:21,901 TRACE  [main] BasicExtractor: extracted value ([problem_7_0_1_] : [BIGINT]) - [5]
2020-11-25 21:10:21,901 TRACE  [main] BasicExtractor: extracted value ([problem_7_0_0_] : [BIGINT]) - [5]
2020-11-25 21:10:21,902 TRACE  [main] BasicExtractor: extracted value ([id1_0_0_] : [BIGINT]) - [28]
2020-11-25 21:10:21,902 TRACE  [main] BasicExtractor: extracted value ([id1_0_1_] : [BIGINT]) - [29]
2020-11-25 21:10:21,902 TRACE  [main] BasicExtractor: extracted value ([binary_v2_0_1_] : [BLOB]) - [null]
2020-11-25 21:10:21,902 TRACE  [main] BasicExtractor: extracted value ([float_va3_0_1_] : [DOUBLE]) - [2.718281828459045]
2020-11-25 21:10:21,903 TRACE  [main] BasicExtractor: extracted value ([i4_0_1_] : [INTEGER]) - [0]
2020-11-25 21:10:21,903 TRACE  [main] BasicExtractor: extracted value ([is_condi5_0_1_] : [BOOLEAN]) - [true]
2020-11-25 21:10:21,903 TRACE  [main] BasicExtractor: extracted value ([j6_0_1_] : [INTEGER]) - [1]
2020-11-25 21:10:21,903 TRACE  [main] BasicExtractor: extracted value ([problem_7_0_1_] : [BIGINT]) - [5]
2020-11-25 21:10:21,904 TRACE  [main] BasicExtractor: extracted value ([problem_7_0_0_] : [BIGINT]) - [5]
2020-11-25 21:10:21,904 TRACE  [main] BasicExtractor: extracted value ([id1_0_0_] : [BIGINT]) - [29]
2020-11-25 21:10:21,904 TRACE  [main] BasicExtractor: extracted value ([id1_0_1_] : [BIGINT]) - [30]
2020-11-25 21:10:21,904 TRACE  [main] BasicExtractor: extracted value ([binary_v2_0_1_] : [BLOB]) - [null]
2020-11-25 21:10:21,905 TRACE  [main] BasicExtractor: extracted value ([float_va3_0_1_] : [DOUBLE]) - [7.38905609893065]
2020-11-25 21:10:21,905 TRACE  [main] BasicExtractor: extracted value ([i4_0_1_] : [INTEGER]) - [0]
2020-11-25 21:10:21,905 TRACE  [main] BasicExtractor: extracted value ([is_condi5_0_1_] : [BOOLEAN]) - [true]
2020-11-25 21:10:21,905 TRACE  [main] BasicExtractor: extracted value ([j6_0_1_] : [INTEGER]) - [2]
2020-11-25 21:10:21,905 TRACE  [main] BasicExtractor: extracted value ([problem_7_0_1_] : [BIGINT]) - [5]
2020-11-25 21:10:21,906 TRACE  [main] BasicExtractor: extracted value ([problem_7_0_0_] : [BIGINT]) - [5]
2020-11-25 21:10:21,906 TRACE  [main] BasicExtractor: extracted value ([id1_0_0_] : [BIGINT]) - [30]
2020-11-25 21:10:21,906 TRACE  [main] BasicExtractor: extracted value ([id1_0_1_] : [BIGINT]) - [31]
2020-11-25 21:10:21,906 TRACE  [main] BasicExtractor: extracted value ([binary_v2_0_1_] : [BLOB]) - [null]
2020-11-25 21:10:21,907 TRACE  [main] BasicExtractor: extracted value ([float_va3_0_1_] : [DOUBLE]) - [20.085536923187668]
2020-11-25 21:10:21,907 TRACE  [main] BasicExtractor: extracted value ([i4_0_1_] : [INTEGER]) - [0]
2020-11-25 21:10:21,907 TRACE  [main] BasicExtractor: extracted value ([is_condi5_0_1_] : [BOOLEAN]) - [true]
2020-11-25 21:10:21,907 TRACE  [main] BasicExtractor: extracted value ([j6_0_1_] : [INTEGER]) - [3]
2020-11-25 21:10:21,907 TRACE  [main] BasicExtractor: extracted value ([problem_7_0_1_] : [BIGINT]) - [5]
2020-11-25 21:10:21,907 TRACE  [main] BasicExtractor: extracted value ([problem_7_0_0_] : [BIGINT]) - [5]
2020-11-25 21:10:21,908 TRACE  [main] BasicExtractor: extracted value ([id1_0_0_] : [BIGINT]) - [31]
2020-11-25 21:10:21,908 TRACE  [main] BasicExtractor: extracted value ([id1_0_1_] : [BIGINT]) - [32]
2020-11-25 21:10:21,908 TRACE  [main] BasicExtractor: extracted value ([binary_v2_0_1_] : [BLOB]) - [null]
2020-11-25 21:10:21,908 TRACE  [main] BasicExtractor: extracted value ([float_va3_0_1_] : [DOUBLE]) - [54.598150033144236]
2020-11-25 21:10:21,908 TRACE  [main] BasicExtractor: extracted value ([i4_0_1_] : [INTEGER]) - [0]
2020-11-25 21:10:21,909 TRACE  [main] BasicExtractor: extracted value ([is_condi5_0_1_] : [BOOLEAN]) - [true]
2020-11-25 21:10:21,909 TRACE  [main] BasicExtractor: extracted value ([j6_0_1_] : [INTEGER]) - [4]
2020-11-25 21:10:21,909 TRACE  [main] BasicExtractor: extracted value ([problem_7_0_1_] : [BIGINT]) - [5]
2020-11-25 21:10:21,909 TRACE  [main] BasicExtractor: extracted value ([problem_7_0_0_] : [BIGINT]) - [5]
2020-11-25 21:10:21,909 TRACE  [main] BasicExtractor: extracted value ([id1_0_0_] : [BIGINT]) - [32]
2020-11-25 21:10:21,909 TRACE  [main] BasicExtractor: extracted value ([id1_0_1_] : [BIGINT]) - [33]
2020-11-25 21:10:21,910 TRACE  [main] BasicExtractor: extracted value ([binary_v2_0_1_] : [BLOB]) - [null]
2020-11-25 21:10:21,910 TRACE  [main] BasicExtractor: extracted value ([float_va3_0_1_] : [DOUBLE]) - [148.4131591025766]
2020-11-25 21:10:21,910 TRACE  [main] BasicExtractor: extracted value ([i4_0_1_] : [INTEGER]) - [0]
2020-11-25 21:10:21,910 TRACE  [main] BasicExtractor: extracted value ([is_condi5_0_1_] : [BOOLEAN]) - [true]
2020-11-25 21:10:21,910 TRACE  [main] BasicExtractor: extracted value ([j6_0_1_] : [INTEGER]) - [5]
2020-11-25 21:10:21,910 TRACE  [main] BasicExtractor: extracted value ([problem_7_0_1_] : [BIGINT]) - [5]
2020-11-25 21:10:21,911 TRACE  [main] BasicExtractor: extracted value ([problem_7_0_0_] : [BIGINT]) - [5]
2020-11-25 21:10:21,911 TRACE  [main] BasicExtractor: extracted value ([id1_0_0_] : [BIGINT]) - [33]
2020-11-25 21:10:21,912 TRACE  [main] BasicBinder: binding parameter [1] as [BIGINT] - [5]
2020-11-25 21:10:21,913 TRACE  [main] BasicBinder: binding parameter [1] as [BIGINT] - [4]
2020-11-25 21:10:21,914 TRACE  [main] BasicExtractor: extracted value ([id1_0_1_] : [BIGINT]) - [18]
2020-11-25 21:10:21,914 TRACE  [main] BasicExtractor: extracted value ([binary_v2_0_1_] : [BLOB]) - [null]
2020-11-25 21:10:21,914 TRACE  [main] BasicExtractor: extracted value ([float_va3_0_1_] : [DOUBLE]) - [0.0]
2020-11-25 21:10:21,914 TRACE  [main] BasicExtractor: extracted value ([i4_0_1_] : [INTEGER]) - [0]
2020-11-25 21:10:21,914 TRACE  [main] BasicExtractor: extracted value ([is_condi5_0_1_] : [BOOLEAN]) - [true]
2020-11-25 21:10:21,914 TRACE  [main] BasicExtractor: extracted value ([j6_0_1_] : [INTEGER]) - [0]
2020-11-25 21:10:21,914 TRACE  [main] BasicExtractor: extracted value ([problem_7_0_1_] : [BIGINT]) - [4]
2020-11-25 21:10:21,915 TRACE  [main] BasicExtractor: extracted value ([problem_7_0_0_] : [BIGINT]) - [4]
2020-11-25 21:10:21,915 TRACE  [main] BasicExtractor: extracted value ([id1_0_0_] : [BIGINT]) - [18]
2020-11-25 21:10:21,915 TRACE  [main] BasicExtractor: extracted value ([id1_0_1_] : [BIGINT]) - [19]
2020-11-25 21:10:21,915 TRACE  [main] BasicExtractor: extracted value ([binary_v2_0_1_] : [BLOB]) - [null]
2020-11-25 21:10:21,915 TRACE  [main] BasicExtractor: extracted value ([float_va3_0_1_] : [DOUBLE]) - [1.0]
2020-11-25 21:10:21,915 TRACE  [main] BasicExtractor: extracted value ([i4_0_1_] : [INTEGER]) - [0]
2020-11-25 21:10:21,915 TRACE  [main] BasicExtractor: extracted value ([is_condi5_0_1_] : [BOOLEAN]) - [true]
2020-11-25 21:10:21,916 TRACE  [main] BasicExtractor: extracted value ([j6_0_1_] : [INTEGER]) - [1]
2020-11-25 21:10:21,916 TRACE  [main] BasicExtractor: extracted value ([problem_7_0_1_] : [BIGINT]) - [4]
2020-11-25 21:10:21,916 TRACE  [main] BasicExtractor: extracted value ([problem_7_0_0_] : [BIGINT]) - [4]
2020-11-25 21:10:21,916 TRACE  [main] BasicExtractor: extracted value ([id1_0_0_] : [BIGINT]) - [19]
2020-11-25 21:10:21,917 TRACE  [main] BasicExtractor: extracted value ([id1_0_1_] : [BIGINT]) - [20]
2020-11-25 21:10:21,918 TRACE  [main] BasicExtractor: extracted value ([binary_v2_0_1_] : [BLOB]) - [null]
2020-11-25 21:10:21,918 TRACE  [main] BasicExtractor: extracted value ([float_va3_0_1_] : [DOUBLE]) - [2.0]
2020-11-25 21:10:21,918 TRACE  [main] BasicExtractor: extracted value ([i4_0_1_] : [INTEGER]) - [0]
2020-11-25 21:10:21,918 TRACE  [main] BasicExtractor: extracted value ([is_condi5_0_1_] : [BOOLEAN]) - [true]
2020-11-25 21:10:21,918 TRACE  [main] BasicExtractor: extracted value ([j6_0_1_] : [INTEGER]) - [2]
2020-11-25 21:10:21,918 TRACE  [main] BasicExtractor: extracted value ([problem_7_0_1_] : [BIGINT]) - [4]
2020-11-25 21:10:21,918 TRACE  [main] BasicExtractor: extracted value ([problem_7_0_0_] : [BIGINT]) - [4]
2020-11-25 21:10:21,918 TRACE  [main] BasicExtractor: extracted value ([id1_0_0_] : [BIGINT]) - [20]
2020-11-25 21:10:21,919 TRACE  [main] BasicExtractor: extracted value ([id1_0_1_] : [BIGINT]) - [21]
2020-11-25 21:10:21,919 TRACE  [main] BasicExtractor: extracted value ([binary_v2_0_1_] : [BLOB]) - [null]
2020-11-25 21:10:21,919 TRACE  [main] BasicExtractor: extracted value ([float_va3_0_1_] : [DOUBLE]) - [3.0]
2020-11-25 21:10:21,919 TRACE  [main] BasicExtractor: extracted value ([i4_0_1_] : [INTEGER]) - [0]
2020-11-25 21:10:21,920 TRACE  [main] BasicExtractor: extracted value ([is_condi5_0_1_] : [BOOLEAN]) - [true]
2020-11-25 21:10:21,920 TRACE  [main] BasicExtractor: extracted value ([j6_0_1_] : [INTEGER]) - [3]
2020-11-25 21:10:21,920 TRACE  [main] BasicExtractor: extracted value ([problem_7_0_1_] : [BIGINT]) - [4]
2020-11-25 21:10:21,920 TRACE  [main] BasicExtractor: extracted value ([problem_7_0_0_] : [BIGINT]) - [4]
2020-11-25 21:10:21,920 TRACE  [main] BasicExtractor: extracted value ([id1_0_0_] : [BIGINT]) - [21]
2020-11-25 21:10:21,920 TRACE  [main] BasicExtractor: extracted value ([id1_0_1_] : [BIGINT]) - [22]
2020-11-25 21:10:21,921 TRACE  [main] BasicExtractor: extracted value ([binary_v2_0_1_] : [BLOB]) - [null]
2020-11-25 21:10:21,921 TRACE  [main] BasicExtractor: extracted value ([float_va3_0_1_] : [DOUBLE]) - [4.0]
2020-11-25 21:10:21,921 TRACE  [main] BasicExtractor: extracted value ([i4_0_1_] : [INTEGER]) - [0]
2020-11-25 21:10:21,921 TRACE  [main] BasicExtractor: extracted value ([is_condi5_0_1_] : [BOOLEAN]) - [true]
2020-11-25 21:10:21,921 TRACE  [main] BasicExtractor: extracted value ([j6_0_1_] : [INTEGER]) - [4]
2020-11-25 21:10:21,921 TRACE  [main] BasicExtractor: extracted value ([problem_7_0_1_] : [BIGINT]) - [4]
2020-11-25 21:10:21,921 TRACE  [main] BasicExtractor: extracted value ([problem_7_0_0_] : [BIGINT]) - [4]
2020-11-25 21:10:21,922 TRACE  [main] BasicExtractor: extracted value ([id1_0_0_] : [BIGINT]) - [22]
2020-11-25 21:10:21,922 TRACE  [main] BasicExtractor: extracted value ([id1_0_1_] : [BIGINT]) - [23]
2020-11-25 21:10:21,922 TRACE  [main] BasicExtractor: extracted value ([binary_v2_0_1_] : [BLOB]) - [null]
2020-11-25 21:10:21,922 TRACE  [main] BasicExtractor: extracted value ([float_va3_0_1_] : [DOUBLE]) - [5.0]
2020-11-25 21:10:21,922 TRACE  [main] BasicExtractor: extracted value ([i4_0_1_] : [INTEGER]) - [0]
2020-11-25 21:10:21,923 TRACE  [main] BasicExtractor: extracted value ([is_condi5_0_1_] : [BOOLEAN]) - [true]
2020-11-25 21:10:21,923 TRACE  [main] BasicExtractor: extracted value ([j6_0_1_] : [INTEGER]) - [5]
2020-11-25 21:10:21,923 TRACE  [main] BasicExtractor: extracted value ([problem_7_0_1_] : [BIGINT]) - [4]
2020-11-25 21:10:21,923 TRACE  [main] BasicExtractor: extracted value ([problem_7_0_0_] : [BIGINT]) - [4]
2020-11-25 21:10:21,923 TRACE  [main] BasicExtractor: extracted value ([id1_0_0_] : [BIGINT]) - [23]
2020-11-25 21:10:21,924 TRACE  [main] BasicExtractor: extracted value ([id1_0_1_] : [BIGINT]) - [24]
2020-11-25 21:10:21,924 TRACE  [main] BasicExtractor: extracted value ([binary_v2_0_1_] : [BLOB]) - [null]
2020-11-25 21:10:21,924 TRACE  [main] BasicExtractor: extracted value ([float_va3_0_1_] : [DOUBLE]) - [6.0]
2020-11-25 21:10:21,924 TRACE  [main] BasicExtractor: extracted value ([i4_0_1_] : [INTEGER]) - [0]
2020-11-25 21:10:21,924 TRACE  [main] BasicExtractor: extracted value ([is_condi5_0_1_] : [BOOLEAN]) - [true]
2020-11-25 21:10:21,924 TRACE  [main] BasicExtractor: extracted value ([j6_0_1_] : [INTEGER]) - [6]
2020-11-25 21:10:21,925 TRACE  [main] BasicExtractor: extracted value ([problem_7_0_1_] : [BIGINT]) - [4]
2020-11-25 21:10:21,925 TRACE  [main] BasicExtractor: extracted value ([problem_7_0_0_] : [BIGINT]) - [4]
2020-11-25 21:10:21,925 TRACE  [main] BasicExtractor: extracted value ([id1_0_0_] : [BIGINT]) - [24]
2020-11-25 21:10:21,925 TRACE  [main] BasicExtractor: extracted value ([id1_0_1_] : [BIGINT]) - [25]
2020-11-25 21:10:21,925 TRACE  [main] BasicExtractor: extracted value ([binary_v2_0_1_] : [BLOB]) - [null]
2020-11-25 21:10:21,925 TRACE  [main] BasicExtractor: extracted value ([float_va3_0_1_] : [DOUBLE]) - [7.0]
2020-11-25 21:10:21,925 TRACE  [main] BasicExtractor: extracted value ([i4_0_1_] : [INTEGER]) - [0]
2020-11-25 21:10:21,925 TRACE  [main] BasicExtractor: extracted value ([is_condi5_0_1_] : [BOOLEAN]) - [true]
2020-11-25 21:10:21,926 TRACE  [main] BasicExtractor: extracted value ([j6_0_1_] : [INTEGER]) - [7]
2020-11-25 21:10:21,926 TRACE  [main] BasicExtractor: extracted value ([problem_7_0_1_] : [BIGINT]) - [4]
2020-11-25 21:10:21,926 TRACE  [main] BasicExtractor: extracted value ([problem_7_0_0_] : [BIGINT]) - [4]
2020-11-25 21:10:21,926 TRACE  [main] BasicExtractor: extracted value ([id1_0_0_] : [BIGINT]) - [25]
2020-11-25 21:10:21,926 TRACE  [main] BasicExtractor: extracted value ([id1_0_1_] : [BIGINT]) - [26]
2020-11-25 21:10:21,926 TRACE  [main] BasicExtractor: extracted value ([binary_v2_0_1_] : [BLOB]) - [null]
2020-11-25 21:10:21,926 TRACE  [main] BasicExtractor: extracted value ([float_va3_0_1_] : [DOUBLE]) - [8.0]
2020-11-25 21:10:21,926 TRACE  [main] BasicExtractor: extracted value ([i4_0_1_] : [INTEGER]) - [0]
2020-11-25 21:10:21,927 TRACE  [main] BasicExtractor: extracted value ([is_condi5_0_1_] : [BOOLEAN]) - [true]
2020-11-25 21:10:21,927 TRACE  [main] BasicExtractor: extracted value ([j6_0_1_] : [INTEGER]) - [8]
2020-11-25 21:10:21,927 TRACE  [main] BasicExtractor: extracted value ([problem_7_0_1_] : [BIGINT]) - [4]
2020-11-25 21:10:21,928 TRACE  [main] BasicExtractor: extracted value ([problem_7_0_0_] : [BIGINT]) - [4]
2020-11-25 21:10:21,928 TRACE  [main] BasicExtractor: extracted value ([id1_0_0_] : [BIGINT]) - [26]
2020-11-25 21:10:21,928 TRACE  [main] BasicExtractor: extracted value ([id1_0_1_] : [BIGINT]) - [27]
2020-11-25 21:10:21,928 TRACE  [main] BasicExtractor: extracted value ([binary_v2_0_1_] : [BLOB]) - [null]
2020-11-25 21:10:21,928 TRACE  [main] BasicExtractor: extracted value ([float_va3_0_1_] : [DOUBLE]) - [9.0]
2020-11-25 21:10:21,929 TRACE  [main] BasicExtractor: extracted value ([i4_0_1_] : [INTEGER]) - [0]
2020-11-25 21:10:21,929 TRACE  [main] BasicExtractor: extracted value ([is_condi5_0_1_] : [BOOLEAN]) - [true]
2020-11-25 21:10:21,929 TRACE  [main] BasicExtractor: extracted value ([j6_0_1_] : [INTEGER]) - [9]
2020-11-25 21:10:21,929 TRACE  [main] BasicExtractor: extracted value ([problem_7_0_1_] : [BIGINT]) - [4]
2020-11-25 21:10:21,929 TRACE  [main] BasicExtractor: extracted value ([problem_7_0_0_] : [BIGINT]) - [4]
2020-11-25 21:10:21,929 TRACE  [main] BasicExtractor: extracted value ([id1_0_0_] : [BIGINT]) - [27]
2020-11-25 21:10:21,932 TRACE  [main] BasicBinder: binding parameter [1] as [BIGINT] - [4]
2020-11-25 21:10:21,933 TRACE  [main] BasicBinder: binding parameter [1] as [BIGINT] - [3]
2020-11-25 21:10:21,933 TRACE  [main] BasicExtractor: extracted value ([id1_0_1_] : [BIGINT]) - [12]
2020-11-25 21:10:21,934 TRACE  [main] BasicExtractor: extracted value ([binary_v2_0_1_] : [BLOB]) - [null]
2020-11-25 21:10:21,934 TRACE  [main] BasicExtractor: extracted value ([float_va3_0_1_] : [DOUBLE]) - [1.0]
2020-11-25 21:10:21,934 TRACE  [main] BasicExtractor: extracted value ([i4_0_1_] : [INTEGER]) - [0]
2020-11-25 21:10:21,935 TRACE  [main] BasicExtractor: extracted value ([is_condi5_0_1_] : [BOOLEAN]) - [true]
2020-11-25 21:10:21,935 TRACE  [main] BasicExtractor: extracted value ([j6_0_1_] : [INTEGER]) - [0]
2020-11-25 21:10:21,935 TRACE  [main] BasicExtractor: extracted value ([problem_7_0_1_] : [BIGINT]) - [3]
2020-11-25 21:10:21,935 TRACE  [main] BasicExtractor: extracted value ([problem_7_0_0_] : [BIGINT]) - [3]
2020-11-25 21:10:21,935 TRACE  [main] BasicExtractor: extracted value ([id1_0_0_] : [BIGINT]) - [12]
2020-11-25 21:10:21,935 TRACE  [main] BasicExtractor: extracted value ([id1_0_1_] : [BIGINT]) - [13]
2020-11-25 21:10:21,936 TRACE  [main] BasicExtractor: extracted value ([binary_v2_0_1_] : [BLOB]) - [null]
2020-11-25 21:10:21,936 TRACE  [main] BasicExtractor: extracted value ([float_va3_0_1_] : [DOUBLE]) - [2.718281828459045]
2020-11-25 21:10:21,936 TRACE  [main] BasicExtractor: extracted value ([i4_0_1_] : [INTEGER]) - [0]
2020-11-25 21:10:21,936 TRACE  [main] BasicExtractor: extracted value ([is_condi5_0_1_] : [BOOLEAN]) - [true]
2020-11-25 21:10:21,936 TRACE  [main] BasicExtractor: extracted value ([j6_0_1_] : [INTEGER]) - [1]
2020-11-25 21:10:21,936 TRACE  [main] BasicExtractor: extracted value ([problem_7_0_1_] : [BIGINT]) - [3]
2020-11-25 21:10:21,936 TRACE  [main] BasicExtractor: extracted value ([problem_7_0_0_] : [BIGINT]) - [3]
2020-11-25 21:10:21,936 TRACE  [main] BasicExtractor: extracted value ([id1_0_0_] : [BIGINT]) - [13]
2020-11-25 21:10:21,937 TRACE  [main] BasicExtractor: extracted value ([id1_0_1_] : [BIGINT]) - [14]
2020-11-25 21:10:21,937 TRACE  [main] BasicExtractor: extracted value ([binary_v2_0_1_] : [BLOB]) - [null]
2020-11-25 21:10:21,937 TRACE  [main] BasicExtractor: extracted value ([float_va3_0_1_] : [DOUBLE]) - [7.38905609893065]
2020-11-25 21:10:21,937 TRACE  [main] BasicExtractor: extracted value ([i4_0_1_] : [INTEGER]) - [0]
2020-11-25 21:10:21,937 TRACE  [main] BasicExtractor: extracted value ([is_condi5_0_1_] : [BOOLEAN]) - [true]
2020-11-25 21:10:21,937 TRACE  [main] BasicExtractor: extracted value ([j6_0_1_] : [INTEGER]) - [2]
2020-11-25 21:10:21,937 TRACE  [main] BasicExtractor: extracted value ([problem_7_0_1_] : [BIGINT]) - [3]
2020-11-25 21:10:21,937 TRACE  [main] BasicExtractor: extracted value ([problem_7_0_0_] : [BIGINT]) - [3]
2020-11-25 21:10:21,937 TRACE  [main] BasicExtractor: extracted value ([id1_0_0_] : [BIGINT]) - [14]
2020-11-25 21:10:21,937 TRACE  [main] BasicExtractor: extracted value ([id1_0_1_] : [BIGINT]) - [15]
2020-11-25 21:10:21,938 TRACE  [main] BasicExtractor: extracted value ([binary_v2_0_1_] : [BLOB]) - [null]
2020-11-25 21:10:21,938 TRACE  [main] BasicExtractor: extracted value ([float_va3_0_1_] : [DOUBLE]) - [20.085536923187668]
2020-11-25 21:10:21,938 TRACE  [main] BasicExtractor: extracted value ([i4_0_1_] : [INTEGER]) - [0]
2020-11-25 21:10:21,938 TRACE  [main] BasicExtractor: extracted value ([is_condi5_0_1_] : [BOOLEAN]) - [true]
2020-11-25 21:10:21,938 TRACE  [main] BasicExtractor: extracted value ([j6_0_1_] : [INTEGER]) - [3]
2020-11-25 21:10:21,939 TRACE  [main] BasicExtractor: extracted value ([problem_7_0_1_] : [BIGINT]) - [3]
2020-11-25 21:10:21,939 TRACE  [main] BasicExtractor: extracted value ([problem_7_0_0_] : [BIGINT]) - [3]
2020-11-25 21:10:21,939 TRACE  [main] BasicExtractor: extracted value ([id1_0_0_] : [BIGINT]) - [15]
2020-11-25 21:10:21,939 TRACE  [main] BasicExtractor: extracted value ([id1_0_1_] : [BIGINT]) - [16]
2020-11-25 21:10:21,940 TRACE  [main] BasicExtractor: extracted value ([binary_v2_0_1_] : [BLOB]) - [null]
2020-11-25 21:10:21,940 TRACE  [main] BasicExtractor: extracted value ([float_va3_0_1_] : [DOUBLE]) - [54.598150033144236]
2020-11-25 21:10:21,940 TRACE  [main] BasicExtractor: extracted value ([i4_0_1_] : [INTEGER]) - [0]
2020-11-25 21:10:21,940 TRACE  [main] BasicExtractor: extracted value ([is_condi5_0_1_] : [BOOLEAN]) - [true]
2020-11-25 21:10:21,940 TRACE  [main] BasicExtractor: extracted value ([j6_0_1_] : [INTEGER]) - [4]
2020-11-25 21:10:21,940 TRACE  [main] BasicExtractor: extracted value ([problem_7_0_1_] : [BIGINT]) - [3]
2020-11-25 21:10:21,940 TRACE  [main] BasicExtractor: extracted value ([problem_7_0_0_] : [BIGINT]) - [3]
2020-11-25 21:10:21,940 TRACE  [main] BasicExtractor: extracted value ([id1_0_0_] : [BIGINT]) - [16]
2020-11-25 21:10:21,940 TRACE  [main] BasicExtractor: extracted value ([id1_0_1_] : [BIGINT]) - [17]
2020-11-25 21:10:21,941 TRACE  [main] BasicExtractor: extracted value ([binary_v2_0_1_] : [BLOB]) - [null]
2020-11-25 21:10:21,941 TRACE  [main] BasicExtractor: extracted value ([float_va3_0_1_] : [DOUBLE]) - [148.4131591025766]
2020-11-25 21:10:21,941 TRACE  [main] BasicExtractor: extracted value ([i4_0_1_] : [INTEGER]) - [0]
2020-11-25 21:10:21,941 TRACE  [main] BasicExtractor: extracted value ([is_condi5_0_1_] : [BOOLEAN]) - [true]
2020-11-25 21:10:21,941 TRACE  [main] BasicExtractor: extracted value ([j6_0_1_] : [INTEGER]) - [5]
2020-11-25 21:10:21,941 TRACE  [main] BasicExtractor: extracted value ([problem_7_0_1_] : [BIGINT]) - [3]
2020-11-25 21:10:21,946 TRACE  [main] BasicExtractor: extracted value ([problem_7_0_0_] : [BIGINT]) - [3]
2020-11-25 21:10:21,947 TRACE  [main] BasicExtractor: extracted value ([id1_0_0_] : [BIGINT]) - [17]
2020-11-25 21:10:21,950 TRACE  [main] BasicBinder: binding parameter [1] as [BIGINT] - [3]
2020-11-25 21:10:21,953 TRACE  [main] BasicBinder: binding parameter [1] as [BIGINT] - [2]
2020-11-25 21:10:21,954 TRACE  [main] BasicExtractor: extracted value ([id1_0_1_] : [BIGINT]) - [6]
2020-11-25 21:10:21,955 TRACE  [main] BasicExtractor: extracted value ([binary_v2_0_1_] : [BLOB]) - [null]
2020-11-25 21:10:21,955 TRACE  [main] BasicExtractor: extracted value ([float_va3_0_1_] : [DOUBLE]) - [1.01]
2020-11-25 21:10:21,955 TRACE  [main] BasicExtractor: extracted value ([i4_0_1_] : [INTEGER]) - [0]
2020-11-25 21:10:21,956 TRACE  [main] BasicExtractor: extracted value ([is_condi5_0_1_] : [BOOLEAN]) - [true]
2020-11-25 21:10:21,956 TRACE  [main] BasicExtractor: extracted value ([j6_0_1_] : [INTEGER]) - [0]
2020-11-25 21:10:21,956 TRACE  [main] BasicExtractor: extracted value ([problem_7_0_1_] : [BIGINT]) - [2]
2020-11-25 21:10:21,956 TRACE  [main] BasicExtractor: extracted value ([problem_7_0_0_] : [BIGINT]) - [2]
2020-11-25 21:10:21,956 TRACE  [main] BasicExtractor: extracted value ([id1_0_0_] : [BIGINT]) - [6]
2020-11-25 21:10:21,957 TRACE  [main] BasicExtractor: extracted value ([id1_0_1_] : [BIGINT]) - [7]
2020-11-25 21:10:21,957 TRACE  [main] BasicExtractor: extracted value ([binary_v2_0_1_] : [BLOB]) - [null]
2020-11-25 21:10:21,957 TRACE  [main] BasicExtractor: extracted value ([float_va3_0_1_] : [DOUBLE]) - [2.718281828459045]
2020-11-25 21:10:21,957 TRACE  [main] BasicExtractor: extracted value ([i4_0_1_] : [INTEGER]) - [0]
2020-11-25 21:10:21,957 TRACE  [main] BasicExtractor: extracted value ([is_condi5_0_1_] : [BOOLEAN]) - [true]
2020-11-25 21:10:21,958 TRACE  [main] BasicExtractor: extracted value ([j6_0_1_] : [INTEGER]) - [1]
2020-11-25 21:10:21,958 TRACE  [main] BasicExtractor: extracted value ([problem_7_0_1_] : [BIGINT]) - [2]
2020-11-25 21:10:21,958 TRACE  [main] BasicExtractor: extracted value ([problem_7_0_0_] : [BIGINT]) - [2]
2020-11-25 21:10:21,958 TRACE  [main] BasicExtractor: extracted value ([id1_0_0_] : [BIGINT]) - [7]
2020-11-25 21:10:21,959 TRACE  [main] BasicExtractor: extracted value ([id1_0_1_] : [BIGINT]) - [8]
2020-11-25 21:10:21,959 TRACE  [main] BasicExtractor: extracted value ([binary_v2_0_1_] : [BLOB]) - [null]
2020-11-25 21:10:21,959 TRACE  [main] BasicExtractor: extracted value ([float_va3_0_1_] : [DOUBLE]) - [7.38905609893065]
2020-11-25 21:10:21,959 TRACE  [main] BasicExtractor: extracted value ([i4_0_1_] : [INTEGER]) - [0]
2020-11-25 21:10:21,959 TRACE  [main] BasicExtractor: extracted value ([is_condi5_0_1_] : [BOOLEAN]) - [true]
2020-11-25 21:10:21,960 TRACE  [main] BasicExtractor: extracted value ([j6_0_1_] : [INTEGER]) - [2]
2020-11-25 21:10:21,960 TRACE  [main] BasicExtractor: extracted value ([problem_7_0_1_] : [BIGINT]) - [2]
2020-11-25 21:10:21,960 TRACE  [main] BasicExtractor: extracted value ([problem_7_0_0_] : [BIGINT]) - [2]
2020-11-25 21:10:21,960 TRACE  [main] BasicExtractor: extracted value ([id1_0_0_] : [BIGINT]) - [8]
2020-11-25 21:10:21,960 TRACE  [main] BasicExtractor: extracted value ([id1_0_1_] : [BIGINT]) - [9]
2020-11-25 21:10:21,961 TRACE  [main] BasicExtractor: extracted value ([binary_v2_0_1_] : [BLOB]) - [null]
2020-11-25 21:10:21,961 TRACE  [main] BasicExtractor: extracted value ([float_va3_0_1_] : [DOUBLE]) - [20.085536923187668]
2020-11-25 21:10:21,961 TRACE  [main] BasicExtractor: extracted value ([i4_0_1_] : [INTEGER]) - [0]
2020-11-25 21:10:21,961 TRACE  [main] BasicExtractor: extracted value ([is_condi5_0_1_] : [BOOLEAN]) - [true]
2020-11-25 21:10:21,961 TRACE  [main] BasicExtractor: extracted value ([j6_0_1_] : [INTEGER]) - [3]
2020-11-25 21:10:21,962 TRACE  [main] BasicExtractor: extracted value ([problem_7_0_1_] : [BIGINT]) - [2]
2020-11-25 21:10:21,962 TRACE  [main] BasicExtractor: extracted value ([problem_7_0_0_] : [BIGINT]) - [2]
2020-11-25 21:10:21,962 TRACE  [main] BasicExtractor: extracted value ([id1_0_0_] : [BIGINT]) - [9]
2020-11-25 21:10:21,962 TRACE  [main] BasicExtractor: extracted value ([id1_0_1_] : [BIGINT]) - [10]
2020-11-25 21:10:21,963 TRACE  [main] BasicExtractor: extracted value ([binary_v2_0_1_] : [BLOB]) - [null]
2020-11-25 21:10:21,963 TRACE  [main] BasicExtractor: extracted value ([float_va3_0_1_] : [DOUBLE]) - [54.598150033144236]
2020-11-25 21:10:21,964 TRACE  [main] BasicExtractor: extracted value ([i4_0_1_] : [INTEGER]) - [0]
2020-11-25 21:10:21,964 TRACE  [main] BasicExtractor: extracted value ([is_condi5_0_1_] : [BOOLEAN]) - [true]
2020-11-25 21:10:21,964 TRACE  [main] BasicExtractor: extracted value ([j6_0_1_] : [INTEGER]) - [4]
2020-11-25 21:10:21,965 TRACE  [main] BasicExtractor: extracted value ([problem_7_0_1_] : [BIGINT]) - [2]
2020-11-25 21:10:21,965 TRACE  [main] BasicExtractor: extracted value ([problem_7_0_0_] : [BIGINT]) - [2]
2020-11-25 21:10:21,965 TRACE  [main] BasicExtractor: extracted value ([id1_0_0_] : [BIGINT]) - [10]
2020-11-25 21:10:21,966 TRACE  [main] BasicExtractor: extracted value ([id1_0_1_] : [BIGINT]) - [11]
2020-11-25 21:10:21,966 TRACE  [main] BasicExtractor: extracted value ([binary_v2_0_1_] : [BLOB]) - [null]
2020-11-25 21:10:21,966 TRACE  [main] BasicExtractor: extracted value ([float_va3_0_1_] : [DOUBLE]) - [148.4131591025766]
2020-11-25 21:10:21,966 TRACE  [main] BasicExtractor: extracted value ([i4_0_1_] : [INTEGER]) - [0]
2020-11-25 21:10:21,967 TRACE  [main] BasicExtractor: extracted value ([is_condi5_0_1_] : [BOOLEAN]) - [true]
2020-11-25 21:10:21,967 TRACE  [main] BasicExtractor: extracted value ([j6_0_1_] : [INTEGER]) - [5]
2020-11-25 21:10:21,968 TRACE  [main] BasicExtractor: extracted value ([problem_7_0_1_] : [BIGINT]) - [2]
2020-11-25 21:10:21,968 TRACE  [main] BasicExtractor: extracted value ([problem_7_0_0_] : [BIGINT]) - [2]
2020-11-25 21:10:21,968 TRACE  [main] BasicExtractor: extracted value ([id1_0_0_] : [BIGINT]) - [11]
2020-11-25 21:10:21,971 TRACE  [main] BasicBinder: binding parameter [1] as [BIGINT] - [2]
2020-11-25 21:10:21,972 TRACE  [main] BasicBinder: binding parameter [1] as [BIGINT] - [1]
2020-11-25 21:10:21,973 TRACE  [main] BasicExtractor: extracted value ([id1_0_1_] : [BIGINT]) - [1]
2020-11-25 21:10:21,974 TRACE  [main] BasicExtractor: extracted value ([binary_v2_0_1_] : [BLOB]) - [null]
2020-11-25 21:10:21,974 TRACE  [main] BasicExtractor: extracted value ([float_va3_0_1_] : [DOUBLE]) - [1.0]
2020-11-25 21:10:21,974 TRACE  [main] BasicExtractor: extracted value ([i4_0_1_] : [INTEGER]) - [0]
2020-11-25 21:10:21,975 TRACE  [main] BasicExtractor: extracted value ([is_condi5_0_1_] : [BOOLEAN]) - [true]
2020-11-25 21:10:21,975 TRACE  [main] BasicExtractor: extracted value ([j6_0_1_] : [INTEGER]) - [0]
2020-11-25 21:10:21,975 TRACE  [main] BasicExtractor: extracted value ([problem_7_0_1_] : [BIGINT]) - [1]
2020-11-25 21:10:21,975 TRACE  [main] BasicExtractor: extracted value ([problem_7_0_0_] : [BIGINT]) - [1]
2020-11-25 21:10:21,975 TRACE  [main] BasicExtractor: extracted value ([id1_0_0_] : [BIGINT]) - [1]
2020-11-25 21:10:21,976 TRACE  [main] BasicExtractor: extracted value ([id1_0_1_] : [BIGINT]) - [2]
2020-11-25 21:10:21,976 TRACE  [main] BasicExtractor: extracted value ([binary_v2_0_1_] : [BLOB]) - [null]
2020-11-25 21:10:21,976 TRACE  [main] BasicExtractor: extracted value ([float_va3_0_1_] : [DOUBLE]) - [2.0]
2020-11-25 21:10:21,976 TRACE  [main] BasicExtractor: extracted value ([i4_0_1_] : [INTEGER]) - [0]
2020-11-25 21:10:21,976 TRACE  [main] BasicExtractor: extracted value ([is_condi5_0_1_] : [BOOLEAN]) - [true]
2020-11-25 21:10:21,976 TRACE  [main] BasicExtractor: extracted value ([j6_0_1_] : [INTEGER]) - [1]
2020-11-25 21:10:21,977 TRACE  [main] BasicExtractor: extracted value ([problem_7_0_1_] : [BIGINT]) - [1]
2020-11-25 21:10:21,977 TRACE  [main] BasicExtractor: extracted value ([problem_7_0_0_] : [BIGINT]) - [1]
2020-11-25 21:10:21,977 TRACE  [main] BasicExtractor: extracted value ([id1_0_0_] : [BIGINT]) - [2]
2020-11-25 21:10:21,977 TRACE  [main] BasicExtractor: extracted value ([id1_0_1_] : [BIGINT]) - [3]
2020-11-25 21:10:21,977 TRACE  [main] BasicExtractor: extracted value ([binary_v2_0_1_] : [BLOB]) - [null]
2020-11-25 21:10:21,977 TRACE  [main] BasicExtractor: extracted value ([float_va3_0_1_] : [DOUBLE]) - [1.0]
2020-11-25 21:10:21,978 TRACE  [main] BasicExtractor: extracted value ([i4_0_1_] : [INTEGER]) - [0]
2020-11-25 21:10:21,978 TRACE  [main] BasicExtractor: extracted value ([is_condi5_0_1_] : [BOOLEAN]) - [true]
2020-11-25 21:10:21,978 TRACE  [main] BasicExtractor: extracted value ([j6_0_1_] : [INTEGER]) - [2]
2020-11-25 21:10:21,978 TRACE  [main] BasicExtractor: extracted value ([problem_7_0_1_] : [BIGINT]) - [1]
2020-11-25 21:10:21,978 TRACE  [main] BasicExtractor: extracted value ([problem_7_0_0_] : [BIGINT]) - [1]
2020-11-25 21:10:21,979 TRACE  [main] BasicExtractor: extracted value ([id1_0_0_] : [BIGINT]) - [3]
2020-11-25 21:10:21,980 TRACE  [main] BasicExtractor: extracted value ([id1_0_1_] : [BIGINT]) - [4]
2020-11-25 21:10:21,980 TRACE  [main] BasicExtractor: extracted value ([binary_v2_0_1_] : [BLOB]) - [null]
2020-11-25 21:10:21,980 TRACE  [main] BasicExtractor: extracted value ([float_va3_0_1_] : [DOUBLE]) - [1.0]
2020-11-25 21:10:21,980 TRACE  [main] BasicExtractor: extracted value ([i4_0_1_] : [INTEGER]) - [0]
2020-11-25 21:10:21,981 TRACE  [main] BasicExtractor: extracted value ([is_condi5_0_1_] : [BOOLEAN]) - [false]
2020-11-25 21:10:21,981 TRACE  [main] BasicExtractor: extracted value ([j6_0_1_] : [INTEGER]) - [0]
2020-11-25 21:10:21,981 TRACE  [main] BasicExtractor: extracted value ([problem_7_0_1_] : [BIGINT]) - [1]
2020-11-25 21:10:21,981 TRACE  [main] BasicExtractor: extracted value ([problem_7_0_0_] : [BIGINT]) - [1]
2020-11-25 21:10:21,982 TRACE  [main] BasicExtractor: extracted value ([id1_0_0_] : [BIGINT]) - [4]
2020-11-25 21:10:21,982 TRACE  [main] BasicExtractor: extracted value ([id1_0_1_] : [BIGINT]) - [5]
2020-11-25 21:10:21,982 TRACE  [main] BasicExtractor: extracted value ([binary_v2_0_1_] : [BLOB]) - [null]
2020-11-25 21:10:21,983 TRACE  [main] BasicExtractor: extracted value ([float_va3_0_1_] : [DOUBLE]) - [1.0]
2020-11-25 21:10:21,983 TRACE  [main] BasicExtractor: extracted value ([i4_0_1_] : [INTEGER]) - [0]
2020-11-25 21:10:21,984 TRACE  [main] BasicExtractor: extracted value ([is_condi5_0_1_] : [BOOLEAN]) - [false]
2020-11-25 21:10:21,984 TRACE  [main] BasicExtractor: extracted value ([j6_0_1_] : [INTEGER]) - [1]
2020-11-25 21:10:21,984 TRACE  [main] BasicExtractor: extracted value ([problem_7_0_1_] : [BIGINT]) - [1]
2020-11-25 21:10:21,985 TRACE  [main] BasicExtractor: extracted value ([problem_7_0_0_] : [BIGINT]) - [1]
2020-11-25 21:10:21,985 TRACE  [main] BasicExtractor: extracted value ([id1_0_0_] : [BIGINT]) - [5]
2020-11-25 21:10:21,986 TRACE  [main] BasicBinder: binding parameter [1] as [BIGINT] - [1]
2020-11-25 21:10:22,015 TRACE  [main] BasicBinder: binding parameter [1] as [BIGINT] - [7]
2020-11-25 21:10:22,016 TRACE  [main] BasicExtractor: extracted value ([id1_1_2_] : [BIGINT]) - [null]
2020-11-25 21:10:22,017 TRACE  [main] BasicExtractor: extracted value ([id1_0_4_] : [BIGINT]) - [null]
2020-11-25 21:10:22,018 TRACE  [main] BasicExtractor: extracted value ([descript2_1_0_] : [BLOB]) - [[112, 114, 111, 98, 108, 101, 109, 100, 101, 115, 99, 114, 105, 112, 116, 105, 111, 110]]
2020-11-25 21:10:22,018 TRACE  [main] BasicExtractor: extracted value ([is_solve3_1_0_] : [BOOLEAN]) - [true]
2020-11-25 21:10:22,018 TRACE  [main] BasicExtractor: extracted value ([kind4_1_0_] : [VARCHAR]) - [POLYNOMIAL]
2020-11-25 21:10:22,018 TRACE  [main] BasicExtractor: extracted value ([matrix_d5_1_0_] : [INTEGER]) - [1]
2020-11-25 21:10:22,019 TRACE  [main] BasicExtractor: extracted value ([parent_p7_1_0_] : [BIGINT]) - [null]
2020-11-25 21:10:22,019 TRACE  [main] BasicExtractor: extracted value ([problem_6_1_0_] : [INTEGER]) - [0]
2020-11-25 21:10:22,019 TRACE  [main] BasicExtractor: extracted value ([problem_7_0_3_] : [BIGINT]) - [null]
2020-11-25 21:10:22,019 TRACE  [main] BasicExtractor: extracted value ([parent_p7_1_1_] : [BIGINT]) - [null]
2020-11-25 21:10:22,019 TRACE  [main] CollectionType: Created collection wrapper: [com.sf.back.entities.Problem.matrixes#7]
2020-11-25 21:10:22,021 TRACE  [main] BasicBinder: binding parameter [1] as [BIGINT] - [7]
2020-11-25 21:10:22,023 TRACE  [main] BasicExtractor: extracted value ([id1_0_1_] : [BIGINT]) - [40]
2020-11-25 21:10:22,023 TRACE  [main] BasicExtractor: extracted value ([binary_v2_0_1_] : [BLOB]) - [null]
2020-11-25 21:10:22,024 TRACE  [main] BasicExtractor: extracted value ([float_va3_0_1_] : [DOUBLE]) - [1.0]
2020-11-25 21:10:22,024 TRACE  [main] BasicExtractor: extracted value ([i4_0_1_] : [INTEGER]) - [0]
2020-11-25 21:10:22,025 TRACE  [main] BasicExtractor: extracted value ([is_condi5_0_1_] : [BOOLEAN]) - [true]
2020-11-25 21:10:22,025 TRACE  [main] BasicExtractor: extracted value ([j6_0_1_] : [INTEGER]) - [0]
2020-11-25 21:10:22,025 TRACE  [main] BasicExtractor: extracted value ([problem_7_0_1_] : [BIGINT]) - [7]
2020-11-25 21:10:22,025 TRACE  [main] BasicExtractor: extracted value ([problem_7_0_0_] : [BIGINT]) - [7]
2020-11-25 21:10:22,025 TRACE  [main] BasicExtractor: extracted value ([id1_0_0_] : [BIGINT]) - [40]
2020-11-25 21:10:22,026 TRACE  [main] BasicExtractor: extracted value ([id1_0_1_] : [BIGINT]) - [41]
2020-11-25 21:10:22,026 TRACE  [main] BasicExtractor: extracted value ([binary_v2_0_1_] : [BLOB]) - [null]
2020-11-25 21:10:22,026 TRACE  [main] BasicExtractor: extracted value ([float_va3_0_1_] : [DOUBLE]) - [-3.0]
2020-11-25 21:10:22,026 TRACE  [main] BasicExtractor: extracted value ([i4_0_1_] : [INTEGER]) - [0]
2020-11-25 21:10:22,026 TRACE  [main] BasicExtractor: extracted value ([is_condi5_0_1_] : [BOOLEAN]) - [true]
2020-11-25 21:10:22,026 TRACE  [main] BasicExtractor: extracted value ([j6_0_1_] : [INTEGER]) - [1]
2020-11-25 21:10:22,027 TRACE  [main] BasicExtractor: extracted value ([problem_7_0_1_] : [BIGINT]) - [7]
2020-11-25 21:10:22,027 TRACE  [main] BasicExtractor: extracted value ([problem_7_0_0_] : [BIGINT]) - [7]
2020-11-25 21:10:22,027 TRACE  [main] BasicExtractor: extracted value ([id1_0_0_] : [BIGINT]) - [41]
2020-11-25 21:10:22,027 TRACE  [main] BasicExtractor: extracted value ([id1_0_1_] : [BIGINT]) - [42]
2020-11-25 21:10:22,028 TRACE  [main] BasicExtractor: extracted value ([binary_v2_0_1_] : [BLOB]) - [null]
2020-11-25 21:10:22,028 TRACE  [main] BasicExtractor: extracted value ([float_va3_0_1_] : [DOUBLE]) - [2.0]
2020-11-25 21:10:22,028 TRACE  [main] BasicExtractor: extracted value ([i4_0_1_] : [INTEGER]) - [0]
2020-11-25 21:10:22,029 TRACE  [main] BasicExtractor: extracted value ([is_condi5_0_1_] : [BOOLEAN]) - [true]
2020-11-25 21:10:22,029 TRACE  [main] BasicExtractor: extracted value ([j6_0_1_] : [INTEGER]) - [2]
2020-11-25 21:10:22,029 TRACE  [main] BasicExtractor: extracted value ([problem_7_0_1_] : [BIGINT]) - [7]
2020-11-25 21:10:22,030 TRACE  [main] BasicExtractor: extracted value ([problem_7_0_0_] : [BIGINT]) - [7]
2020-11-25 21:10:22,031 TRACE  [main] BasicExtractor: extracted value ([id1_0_0_] : [BIGINT]) - [42]
2020-11-25 21:10:22,031 TRACE  [main] BasicExtractor: extracted value ([id1_0_1_] : [BIGINT]) - [43]
2020-11-25 21:10:22,032 TRACE  [main] BasicExtractor: extracted value ([binary_v2_0_1_] : [BLOB]) - [null]
2020-11-25 21:10:22,032 TRACE  [main] BasicExtractor: extracted value ([float_va3_0_1_] : [DOUBLE]) - [1.0]
2020-11-25 21:10:22,032 TRACE  [main] BasicExtractor: extracted value ([i4_0_1_] : [INTEGER]) - [0]
2020-11-25 21:10:22,032 TRACE  [main] BasicExtractor: extracted value ([is_condi5_0_1_] : [BOOLEAN]) - [false]
2020-11-25 21:10:22,032 TRACE  [main] BasicExtractor: extracted value ([j6_0_1_] : [INTEGER]) - [0]
2020-11-25 21:10:22,032 TRACE  [main] BasicExtractor: extracted value ([problem_7_0_1_] : [BIGINT]) - [7]
2020-11-25 21:10:22,032 TRACE  [main] BasicExtractor: extracted value ([problem_7_0_0_] : [BIGINT]) - [7]
2020-11-25 21:10:22,033 TRACE  [main] BasicExtractor: extracted value ([id1_0_0_] : [BIGINT]) - [43]
2020-11-25 21:10:22,033 TRACE  [main] BasicExtractor: extracted value ([id1_0_1_] : [BIGINT]) - [44]
2020-11-25 21:10:22,034 TRACE  [main] BasicExtractor: extracted value ([binary_v2_0_1_] : [BLOB]) - [null]
2020-11-25 21:10:22,034 TRACE  [main] BasicExtractor: extracted value ([float_va3_0_1_] : [DOUBLE]) - [2.0]
2020-11-25 21:10:22,034 TRACE  [main] BasicExtractor: extracted value ([i4_0_1_] : [INTEGER]) - [0]
2020-11-25 21:10:22,035 TRACE  [main] BasicExtractor: extracted value ([is_condi5_0_1_] : [BOOLEAN]) - [false]
2020-11-25 21:10:22,035 TRACE  [main] BasicExtractor: extracted value ([j6_0_1_] : [INTEGER]) - [1]
2020-11-25 21:10:22,035 TRACE  [main] BasicExtractor: extracted value ([problem_7_0_1_] : [BIGINT]) - [7]
2020-11-25 21:10:22,036 TRACE  [main] BasicExtractor: extracted value ([problem_7_0_0_] : [BIGINT]) - [7]
2020-11-25 21:10:22,037 TRACE  [main] BasicExtractor: extracted value ([id1_0_0_] : [BIGINT]) - [44]
2020-11-25 21:10:22,102 TRACE  [main] BasicBinder: binding parameter [1] as [BOOLEAN] - [false]
2020-11-25 21:10:22,102 TRACE  [main] BasicBinder: binding parameter [2] as [BIGINT] - [7]
2020-11-25 21:10:22,103 TRACE  [main] BasicExtractor: extracted value ([id1_0_] : [BIGINT]) - [43]
2020-11-25 21:10:22,104 TRACE  [main] BasicExtractor: extracted value ([binary_v2_0_] : [BLOB]) - [null]
2020-11-25 21:10:22,104 TRACE  [main] BasicExtractor: extracted value ([float_va3_0_] : [DOUBLE]) - [1.0]
2020-11-25 21:10:22,105 TRACE  [main] BasicExtractor: extracted value ([i4_0_] : [INTEGER]) - [0]
2020-11-25 21:10:22,105 TRACE  [main] BasicExtractor: extracted value ([is_condi5_0_] : [BOOLEAN]) - [false]
2020-11-25 21:10:22,106 TRACE  [main] BasicExtractor: extracted value ([j6_0_] : [INTEGER]) - [0]
2020-11-25 21:10:22,107 TRACE  [main] BasicExtractor: extracted value ([problem_7_0_] : [BIGINT]) - [7]
2020-11-25 21:10:22,107 TRACE  [main] BasicExtractor: extracted value ([id1_0_] : [BIGINT]) - [44]
2020-11-25 21:10:22,108 TRACE  [main] BasicExtractor: extracted value ([binary_v2_0_] : [BLOB]) - [null]
2020-11-25 21:10:22,109 TRACE  [main] BasicExtractor: extracted value ([float_va3_0_] : [DOUBLE]) - [2.0]
2020-11-25 21:10:22,109 TRACE  [main] BasicExtractor: extracted value ([i4_0_] : [INTEGER]) - [0]
2020-11-25 21:10:22,109 TRACE  [main] BasicExtractor: extracted value ([is_condi5_0_] : [BOOLEAN]) - [false]
2020-11-25 21:10:22,110 TRACE  [main] BasicExtractor: extracted value ([j6_0_] : [INTEGER]) - [1]
2020-11-25 21:10:22,110 TRACE  [main] BasicExtractor: extracted value ([problem_7_0_] : [BIGINT]) - [7]
2020-11-25 21:10:22,114 TRACE  [main] BasicBinder: binding parameter [1] as [BIGINT] - [7]
2020-11-25 21:10:22,115 TRACE  [main] BasicExtractor: extracted value ([id1_1_2_] : [BIGINT]) - [null]
2020-11-25 21:10:22,115 TRACE  [main] BasicExtractor: extracted value ([id1_0_4_] : [BIGINT]) - [null]
2020-11-25 21:10:22,116 TRACE  [main] BasicExtractor: extracted value ([descript2_1_0_] : [BLOB]) - [[112, 114, 111, 98, 108, 101, 109, 100, 101, 115, 99, 114, 105, 112, 116, 105, 111, 110]]
2020-11-25 21:10:22,116 TRACE  [main] BasicExtractor: extracted value ([is_solve3_1_0_] : [BOOLEAN]) - [true]
2020-11-25 21:10:22,117 TRACE  [main] BasicExtractor: extracted value ([kind4_1_0_] : [VARCHAR]) - [POLYNOMIAL]
2020-11-25 21:10:22,117 TRACE  [main] BasicExtractor: extracted value ([matrix_d5_1_0_] : [INTEGER]) - [1]
2020-11-25 21:10:22,119 TRACE  [main] BasicExtractor: extracted value ([parent_p7_1_0_] : [BIGINT]) - [null]
2020-11-25 21:10:22,119 TRACE  [main] BasicExtractor: extracted value ([problem_6_1_0_] : [INTEGER]) - [0]
2020-11-25 21:10:22,120 TRACE  [main] BasicExtractor: extracted value ([problem_7_0_3_] : [BIGINT]) - [null]
2020-11-25 21:10:22,120 TRACE  [main] BasicExtractor: extracted value ([parent_p7_1_1_] : [BIGINT]) - [null]
2020-11-25 21:10:22,120 TRACE  [main] CollectionType: Created collection wrapper: [com.sf.back.entities.Problem.matrixes#7]
2020-11-25 21:10:22,122 TRACE  [main] BasicBinder: binding parameter [1] as [BIGINT] - [7]
2020-11-25 21:10:22,122 TRACE  [main] BasicExtractor: extracted value ([id1_0_1_] : [BIGINT]) - [40]
2020-11-25 21:10:22,123 TRACE  [main] BasicExtractor: extracted value ([binary_v2_0_1_] : [BLOB]) - [null]
2020-11-25 21:10:22,123 TRACE  [main] BasicExtractor: extracted value ([float_va3_0_1_] : [DOUBLE]) - [1.0]
2020-11-25 21:10:22,123 TRACE  [main] BasicExtractor: extracted value ([i4_0_1_] : [INTEGER]) - [0]
2020-11-25 21:10:22,124 TRACE  [main] BasicExtractor: extracted value ([is_condi5_0_1_] : [BOOLEAN]) - [true]
2020-11-25 21:10:22,124 TRACE  [main] BasicExtractor: extracted value ([j6_0_1_] : [INTEGER]) - [0]
2020-11-25 21:10:22,124 TRACE  [main] BasicExtractor: extracted value ([problem_7_0_1_] : [BIGINT]) - [7]
2020-11-25 21:10:22,124 TRACE  [main] BasicExtractor: extracted value ([problem_7_0_0_] : [BIGINT]) - [7]
2020-11-25 21:10:22,124 TRACE  [main] BasicExtractor: extracted value ([id1_0_0_] : [BIGINT]) - [40]
2020-11-25 21:10:22,125 TRACE  [main] BasicExtractor: extracted value ([id1_0_1_] : [BIGINT]) - [41]
2020-11-25 21:10:22,125 TRACE  [main] BasicExtractor: extracted value ([binary_v2_0_1_] : [BLOB]) - [null]
2020-11-25 21:10:22,125 TRACE  [main] BasicExtractor: extracted value ([float_va3_0_1_] : [DOUBLE]) - [-3.0]
2020-11-25 21:10:22,125 TRACE  [main] BasicExtractor: extracted value ([i4_0_1_] : [INTEGER]) - [0]
2020-11-25 21:10:22,125 TRACE  [main] BasicExtractor: extracted value ([is_condi5_0_1_] : [BOOLEAN]) - [true]
2020-11-25 21:10:22,125 TRACE  [main] BasicExtractor: extracted value ([j6_0_1_] : [INTEGER]) - [1]
2020-11-25 21:10:22,125 TRACE  [main] BasicExtractor: extracted value ([problem_7_0_1_] : [BIGINT]) - [7]
2020-11-25 21:10:22,126 TRACE  [main] BasicExtractor: extracted value ([problem_7_0_0_] : [BIGINT]) - [7]
2020-11-25 21:10:22,126 TRACE  [main] BasicExtractor: extracted value ([id1_0_0_] : [BIGINT]) - [41]
2020-11-25 21:10:22,126 TRACE  [main] BasicExtractor: extracted value ([id1_0_1_] : [BIGINT]) - [42]
2020-11-25 21:10:22,126 TRACE  [main] BasicExtractor: extracted value ([binary_v2_0_1_] : [BLOB]) - [null]
2020-11-25 21:10:22,126 TRACE  [main] BasicExtractor: extracted value ([float_va3_0_1_] : [DOUBLE]) - [2.0]
2020-11-25 21:10:22,126 TRACE  [main] BasicExtractor: extracted value ([i4_0_1_] : [INTEGER]) - [0]
2020-11-25 21:10:22,127 TRACE  [main] BasicExtractor: extracted value ([is_condi5_0_1_] : [BOOLEAN]) - [true]
2020-11-25 21:10:22,127 TRACE  [main] BasicExtractor: extracted value ([j6_0_1_] : [INTEGER]) - [2]
2020-11-25 21:10:22,127 TRACE  [main] BasicExtractor: extracted value ([problem_7_0_1_] : [BIGINT]) - [7]
2020-11-25 21:10:22,127 TRACE  [main] BasicExtractor: extracted value ([problem_7_0_0_] : [BIGINT]) - [7]
2020-11-25 21:10:22,127 TRACE  [main] BasicExtractor: extracted value ([id1_0_0_] : [BIGINT]) - [42]
2020-11-25 21:10:22,128 TRACE  [main] BasicExtractor: extracted value ([id1_0_1_] : [BIGINT]) - [43]
2020-11-25 21:10:22,128 TRACE  [main] BasicExtractor: extracted value ([problem_7_0_0_] : [BIGINT]) - [7]
2020-11-25 21:10:22,128 TRACE  [main] BasicExtractor: extracted value ([id1_0_0_] : [BIGINT]) - [43]
2020-11-25 21:10:22,128 TRACE  [main] BasicExtractor: extracted value ([id1_0_1_] : [BIGINT]) - [44]
2020-11-25 21:10:22,129 TRACE  [main] BasicExtractor: extracted value ([problem_7_0_0_] : [BIGINT]) - [7]
2020-11-25 21:10:22,129 TRACE  [main] BasicExtractor: extracted value ([id1_0_0_] : [BIGINT]) - [44]
2020-11-25 21:10:22,147 TRACE  [main] BasicBinder: binding parameter [1] as [BIGINT] - [8]
2020-11-25 21:10:22,149 TRACE  [main] BasicExtractor: extracted value ([id1_1_2_] : [BIGINT]) - [null]
2020-11-25 21:10:22,149 TRACE  [main] BasicExtractor: extracted value ([id1_0_4_] : [BIGINT]) - [null]
2020-11-25 21:10:22,150 TRACE  [main] BasicExtractor: extracted value ([descript2_1_0_] : [BLOB]) - [[112, 114, 111, 98, 108, 101, 109, 100, 101, 115, 99, 114, 105, 112, 116, 105, 111, 110]]
2020-11-25 21:10:22,150 TRACE  [main] BasicExtractor: extracted value ([is_solve3_1_0_] : [BOOLEAN]) - [null]
2020-11-25 21:10:22,150 TRACE  [main] BasicExtractor: extracted value ([kind4_1_0_] : [VARCHAR]) - [POLYNOMIAL]
2020-11-25 21:10:22,150 TRACE  [main] BasicExtractor: extracted value ([matrix_d5_1_0_] : [INTEGER]) - [1]
2020-11-25 21:10:22,150 TRACE  [main] BasicExtractor: extracted value ([parent_p7_1_0_] : [BIGINT]) - [null]
2020-11-25 21:10:22,150 TRACE  [main] BasicExtractor: extracted value ([problem_6_1_0_] : [INTEGER]) - [22]
2020-11-25 21:10:22,150 TRACE  [main] BasicExtractor: extracted value ([problem_7_0_3_] : [BIGINT]) - [null]
2020-11-25 21:10:22,151 TRACE  [main] BasicExtractor: extracted value ([parent_p7_1_1_] : [BIGINT]) - [null]
2020-11-25 21:10:22,151 TRACE  [main] CollectionType: Created collection wrapper: [com.sf.back.entities.Problem.matrixes#8]
2020-11-25 21:10:22,152 TRACE  [main] BasicBinder: binding parameter [1] as [BIGINT] - [8]
2020-11-25 21:10:22,153 TRACE  [main] BasicExtractor: extracted value ([id1_0_1_] : [BIGINT]) - [45]
2020-11-25 21:10:22,153 TRACE  [main] BasicExtractor: extracted value ([binary_v2_0_1_] : [BLOB]) - [null]
2020-11-25 21:10:22,153 TRACE  [main] BasicExtractor: extracted value ([float_va3_0_1_] : [DOUBLE]) - [1.0]
2020-11-25 21:10:22,153 TRACE  [main] BasicExtractor: extracted value ([i4_0_1_] : [INTEGER]) - [0]
2020-11-25 21:10:22,153 TRACE  [main] BasicExtractor: extracted value ([is_condi5_0_1_] : [BOOLEAN]) - [true]
2020-11-25 21:10:22,153 TRACE  [main] BasicExtractor: extracted value ([j6_0_1_] : [INTEGER]) - [0]
2020-11-25 21:10:22,154 TRACE  [main] BasicExtractor: extracted value ([problem_7_0_1_] : [BIGINT]) - [8]
2020-11-25 21:10:22,154 TRACE  [main] BasicExtractor: extracted value ([problem_7_0_0_] : [BIGINT]) - [8]
2020-11-25 21:10:22,154 TRACE  [main] BasicExtractor: extracted value ([id1_0_0_] : [BIGINT]) - [45]
2020-11-25 21:10:22,154 TRACE  [main] BasicExtractor: extracted value ([id1_0_1_] : [BIGINT]) - [46]
2020-11-25 21:10:22,154 TRACE  [main] BasicExtractor: extracted value ([binary_v2_0_1_] : [BLOB]) - [null]
2020-11-25 21:10:22,154 TRACE  [main] BasicExtractor: extracted value ([float_va3_0_1_] : [DOUBLE]) - [2.718281828459045]
2020-11-25 21:10:22,155 TRACE  [main] BasicExtractor: extracted value ([i4_0_1_] : [INTEGER]) - [0]
2020-11-25 21:10:22,155 TRACE  [main] BasicExtractor: extracted value ([is_condi5_0_1_] : [BOOLEAN]) - [true]
2020-11-25 21:10:22,155 TRACE  [main] BasicExtractor: extracted value ([j6_0_1_] : [INTEGER]) - [1]
2020-11-25 21:10:22,155 TRACE  [main] BasicExtractor: extracted value ([problem_7_0_1_] : [BIGINT]) - [8]
2020-11-25 21:10:22,155 TRACE  [main] BasicExtractor: extracted value ([problem_7_0_0_] : [BIGINT]) - [8]
2020-11-25 21:10:22,155 TRACE  [main] BasicExtractor: extracted value ([id1_0_0_] : [BIGINT]) - [46]
2020-11-25 21:10:22,156 TRACE  [main] BasicExtractor: extracted value ([id1_0_1_] : [BIGINT]) - [47]
2020-11-25 21:10:22,156 TRACE  [main] BasicExtractor: extracted value ([binary_v2_0_1_] : [BLOB]) - [null]
2020-11-25 21:10:22,156 TRACE  [main] BasicExtractor: extracted value ([float_va3_0_1_] : [DOUBLE]) - [7.38905609893065]
2020-11-25 21:10:22,156 TRACE  [main] BasicExtractor: extracted value ([i4_0_1_] : [INTEGER]) - [0]
2020-11-25 21:10:22,156 TRACE  [main] BasicExtractor: extracted value ([is_condi5_0_1_] : [BOOLEAN]) - [true]
2020-11-25 21:10:22,156 TRACE  [main] BasicExtractor: extracted value ([j6_0_1_] : [INTEGER]) - [2]
2020-11-25 21:10:22,156 TRACE  [main] BasicExtractor: extracted value ([problem_7_0_1_] : [BIGINT]) - [8]
2020-11-25 21:10:22,157 TRACE  [main] BasicExtractor: extracted value ([problem_7_0_0_] : [BIGINT]) - [8]
2020-11-25 21:10:22,157 TRACE  [main] BasicExtractor: extracted value ([id1_0_0_] : [BIGINT]) - [47]
2020-11-25 21:10:22,157 TRACE  [main] BasicExtractor: extracted value ([id1_0_1_] : [BIGINT]) - [48]
2020-11-25 21:10:22,157 TRACE  [main] BasicExtractor: extracted value ([binary_v2_0_1_] : [BLOB]) - [null]
2020-11-25 21:10:22,157 TRACE  [main] BasicExtractor: extracted value ([float_va3_0_1_] : [DOUBLE]) - [20.085536923187668]
2020-11-25 21:10:22,158 TRACE  [main] BasicExtractor: extracted value ([i4_0_1_] : [INTEGER]) - [0]
2020-11-25 21:10:22,158 TRACE  [main] BasicExtractor: extracted value ([is_condi5_0_1_] : [BOOLEAN]) - [true]
2020-11-25 21:10:22,158 TRACE  [main] BasicExtractor: extracted value ([j6_0_1_] : [INTEGER]) - [3]
2020-11-25 21:10:22,158 TRACE  [main] BasicExtractor: extracted value ([problem_7_0_1_] : [BIGINT]) - [8]
2020-11-25 21:10:22,158 TRACE  [main] BasicExtractor: extracted value ([problem_7_0_0_] : [BIGINT]) - [8]
2020-11-25 21:10:22,158 TRACE  [main] BasicExtractor: extracted value ([id1_0_0_] : [BIGINT]) - [48]
2020-11-25 21:10:22,158 TRACE  [main] BasicExtractor: extracted value ([id1_0_1_] : [BIGINT]) - [49]
2020-11-25 21:10:22,159 TRACE  [main] BasicExtractor: extracted value ([binary_v2_0_1_] : [BLOB]) - [null]
2020-11-25 21:10:22,159 TRACE  [main] BasicExtractor: extracted value ([float_va3_0_1_] : [DOUBLE]) - [54.598150033144236]
2020-11-25 21:10:22,159 TRACE  [main] BasicExtractor: extracted value ([i4_0_1_] : [INTEGER]) - [0]
2020-11-25 21:10:22,159 TRACE  [main] BasicExtractor: extracted value ([is_condi5_0_1_] : [BOOLEAN]) - [true]
2020-11-25 21:10:22,159 TRACE  [main] BasicExtractor: extracted value ([j6_0_1_] : [INTEGER]) - [4]
2020-11-25 21:10:22,159 TRACE  [main] BasicExtractor: extracted value ([problem_7_0_1_] : [BIGINT]) - [8]
2020-11-25 21:10:22,159 TRACE  [main] BasicExtractor: extracted value ([problem_7_0_0_] : [BIGINT]) - [8]
2020-11-25 21:10:22,160 TRACE  [main] BasicExtractor: extracted value ([id1_0_0_] : [BIGINT]) - [49]
2020-11-25 21:10:22,160 TRACE  [main] BasicExtractor: extracted value ([id1_0_1_] : [BIGINT]) - [50]
2020-11-25 21:10:22,160 TRACE  [main] BasicExtractor: extracted value ([binary_v2_0_1_] : [BLOB]) - [null]
2020-11-25 21:10:22,160 TRACE  [main] BasicExtractor: extracted value ([float_va3_0_1_] : [DOUBLE]) - [148.4131591025766]
2020-11-25 21:10:22,160 TRACE  [main] BasicExtractor: extracted value ([i4_0_1_] : [INTEGER]) - [0]
2020-11-25 21:10:22,160 TRACE  [main] BasicExtractor: extracted value ([is_condi5_0_1_] : [BOOLEAN]) - [true]
2020-11-25 21:10:22,160 TRACE  [main] BasicExtractor: extracted value ([j6_0_1_] : [INTEGER]) - [5]
2020-11-25 21:10:22,160 TRACE  [main] BasicExtractor: extracted value ([problem_7_0_1_] : [BIGINT]) - [8]
2020-11-25 21:10:22,161 TRACE  [main] BasicExtractor: extracted value ([problem_7_0_0_] : [BIGINT]) - [8]
2020-11-25 21:10:22,161 TRACE  [main] BasicExtractor: extracted value ([id1_0_0_] : [BIGINT]) - [50]
2020-11-25 21:10:22,181 TRACE  [main] BasicBinder: binding parameter [1] as [BLOB] - [[100, 101, 115, 99, 114, 105, 112, 116, 105, 111, 110]]
2020-11-25 21:10:22,181 TRACE  [main] BasicBinder: binding parameter [2] as [BOOLEAN] - [null]
2020-11-25 21:10:22,181 TRACE  [main] BasicBinder: binding parameter [3] as [VARCHAR] - [POLYNOMIAL]
2020-11-25 21:10:22,182 TRACE  [main] BasicBinder: binding parameter [4] as [INTEGER] - [null]
2020-11-25 21:10:22,182 TRACE  [main] BasicBinder: binding parameter [5] as [BIGINT] - [null]
2020-11-25 21:10:22,182 TRACE  [main] BasicBinder: binding parameter [6] as [INTEGER] - [24]
2020-11-25 21:10:22,184 TRACE  [main] BasicBinder: binding parameter [1] as [BLOB] - [null]
2020-11-25 21:10:22,184 TRACE  [main] BasicBinder: binding parameter [2] as [DOUBLE] - [1.0]
2020-11-25 21:10:22,184 TRACE  [main] BasicBinder: binding parameter [3] as [INTEGER] - [0]
2020-11-25 21:10:22,184 TRACE  [main] BasicBinder: binding parameter [4] as [BOOLEAN] - [true]
2020-11-25 21:10:22,185 TRACE  [main] BasicBinder: binding parameter [5] as [INTEGER] - [0]
2020-11-25 21:10:22,185 TRACE  [main] BasicBinder: binding parameter [6] as [BIGINT] - [10]
2020-11-25 21:10:22,186 TRACE  [main] BasicBinder: binding parameter [1] as [BLOB] - [null]
2020-11-25 21:10:22,186 TRACE  [main] BasicBinder: binding parameter [2] as [DOUBLE] - [2.0]
2020-11-25 21:10:22,186 TRACE  [main] BasicBinder: binding parameter [3] as [INTEGER] - [0]
2020-11-25 21:10:22,186 TRACE  [main] BasicBinder: binding parameter [4] as [BOOLEAN] - [true]
2020-11-25 21:10:22,186 TRACE  [main] BasicBinder: binding parameter [5] as [INTEGER] - [1]
2020-11-25 21:10:22,187 TRACE  [main] BasicBinder: binding parameter [6] as [BIGINT] - [10]
2020-11-25 21:10:22,188 TRACE  [main] BasicBinder: binding parameter [1] as [BLOB] - [null]
2020-11-25 21:10:22,188 TRACE  [main] BasicBinder: binding parameter [2] as [DOUBLE] - [3.0]
2020-11-25 21:10:22,188 TRACE  [main] BasicBinder: binding parameter [3] as [INTEGER] - [0]
2020-11-25 21:10:22,188 TRACE  [main] BasicBinder: binding parameter [4] as [BOOLEAN] - [true]
2020-11-25 21:10:22,189 TRACE  [main] BasicBinder: binding parameter [5] as [INTEGER] - [2]
2020-11-25 21:10:22,189 TRACE  [main] BasicBinder: binding parameter [6] as [BIGINT] - [10]
2020-11-25 21:10:22,190 TRACE  [main] BasicBinder: binding parameter [1] as [BLOB] - [null]
2020-11-25 21:10:22,190 TRACE  [main] BasicBinder: binding parameter [2] as [DOUBLE] - [4.0]
2020-11-25 21:10:22,190 TRACE  [main] BasicBinder: binding parameter [3] as [INTEGER] - [0]
2020-11-25 21:10:22,190 TRACE  [main] BasicBinder: binding parameter [4] as [BOOLEAN] - [true]
2020-11-25 21:10:22,190 TRACE  [main] BasicBinder: binding parameter [5] as [INTEGER] - [3]
2020-11-25 21:10:22,190 TRACE  [main] BasicBinder: binding parameter [6] as [BIGINT] - [10]
2020-11-25 21:10:22,204 TRACE  [main] BasicBinder: binding parameter [1] as [BIGINT] - [10]
2020-11-25 21:10:22,205 TRACE  [main] BasicExtractor: extracted value ([id1_1_2_] : [BIGINT]) - [null]
2020-11-25 21:10:22,205 TRACE  [main] BasicExtractor: extracted value ([id1_0_4_] : [BIGINT]) - [null]
2020-11-25 21:10:22,206 TRACE  [main] BasicExtractor: extracted value ([descript2_1_0_] : [BLOB]) - [[100, 101, 115, 99, 114, 105, 112, 116, 105, 111, 110]]
2020-11-25 21:10:22,206 TRACE  [main] BasicExtractor: extracted value ([is_solve3_1_0_] : [BOOLEAN]) - [null]
2020-11-25 21:10:22,206 TRACE  [main] BasicExtractor: extracted value ([kind4_1_0_] : [VARCHAR]) - [POLYNOMIAL]
2020-11-25 21:10:22,207 TRACE  [main] BasicExtractor: extracted value ([matrix_d5_1_0_] : [INTEGER]) - [null]
2020-11-25 21:10:22,207 TRACE  [main] BasicExtractor: extracted value ([parent_p7_1_0_] : [BIGINT]) - [null]
2020-11-25 21:10:22,207 TRACE  [main] BasicExtractor: extracted value ([problem_6_1_0_] : [INTEGER]) - [24]
2020-11-25 21:10:22,207 TRACE  [main] BasicExtractor: extracted value ([problem_7_0_3_] : [BIGINT]) - [null]
2020-11-25 21:10:22,207 TRACE  [main] BasicExtractor: extracted value ([parent_p7_1_1_] : [BIGINT]) - [null]
2020-11-25 21:10:22,207 TRACE  [main] CollectionType: Created collection wrapper: [com.sf.back.entities.Problem.matrixes#10]
2020-11-25 21:10:22,208 TRACE  [main] BasicBinder: binding parameter [1] as [BIGINT] - [10]
2020-11-25 21:10:22,208 TRACE  [main] BasicExtractor: extracted value ([id1_0_1_] : [BIGINT]) - [57]
2020-11-25 21:10:22,209 TRACE  [main] BasicExtractor: extracted value ([binary_v2_0_1_] : [BLOB]) - [null]
2020-11-25 21:10:22,209 TRACE  [main] BasicExtractor: extracted value ([float_va3_0_1_] : [DOUBLE]) - [1.0]
2020-11-25 21:10:22,209 TRACE  [main] BasicExtractor: extracted value ([i4_0_1_] : [INTEGER]) - [0]
2020-11-25 21:10:22,209 TRACE  [main] BasicExtractor: extracted value ([is_condi5_0_1_] : [BOOLEAN]) - [true]
2020-11-25 21:10:22,209 TRACE  [main] BasicExtractor: extracted value ([j6_0_1_] : [INTEGER]) - [0]
2020-11-25 21:10:22,209 TRACE  [main] BasicExtractor: extracted value ([problem_7_0_1_] : [BIGINT]) - [10]
2020-11-25 21:10:22,209 TRACE  [main] BasicExtractor: extracted value ([problem_7_0_0_] : [BIGINT]) - [10]
2020-11-25 21:10:22,209 TRACE  [main] BasicExtractor: extracted value ([id1_0_0_] : [BIGINT]) - [57]
2020-11-25 21:10:22,210 TRACE  [main] BasicExtractor: extracted value ([id1_0_1_] : [BIGINT]) - [58]
2020-11-25 21:10:22,210 TRACE  [main] BasicExtractor: extracted value ([binary_v2_0_1_] : [BLOB]) - [null]
2020-11-25 21:10:22,210 TRACE  [main] BasicExtractor: extracted value ([float_va3_0_1_] : [DOUBLE]) - [2.0]
2020-11-25 21:10:22,210 TRACE  [main] BasicExtractor: extracted value ([i4_0_1_] : [INTEGER]) - [0]
2020-11-25 21:10:22,210 TRACE  [main] BasicExtractor: extracted value ([is_condi5_0_1_] : [BOOLEAN]) - [true]
2020-11-25 21:10:22,211 TRACE  [main] BasicExtractor: extracted value ([j6_0_1_] : [INTEGER]) - [1]
2020-11-25 21:10:22,211 TRACE  [main] BasicExtractor: extracted value ([problem_7_0_1_] : [BIGINT]) - [10]
2020-11-25 21:10:22,211 TRACE  [main] BasicExtractor: extracted value ([problem_7_0_0_] : [BIGINT]) - [10]
2020-11-25 21:10:22,211 TRACE  [main] BasicExtractor: extracted value ([id1_0_0_] : [BIGINT]) - [58]
2020-11-25 21:10:22,211 TRACE  [main] BasicExtractor: extracted value ([id1_0_1_] : [BIGINT]) - [59]
2020-11-25 21:10:22,211 TRACE  [main] BasicExtractor: extracted value ([binary_v2_0_1_] : [BLOB]) - [null]
2020-11-25 21:10:22,211 TRACE  [main] BasicExtractor: extracted value ([float_va3_0_1_] : [DOUBLE]) - [3.0]
2020-11-25 21:10:22,211 TRACE  [main] BasicExtractor: extracted value ([i4_0_1_] : [INTEGER]) - [0]
2020-11-25 21:10:22,211 TRACE  [main] BasicExtractor: extracted value ([is_condi5_0_1_] : [BOOLEAN]) - [true]
2020-11-25 21:10:22,211 TRACE  [main] BasicExtractor: extracted value ([j6_0_1_] : [INTEGER]) - [2]
2020-11-25 21:10:22,211 TRACE  [main] BasicExtractor: extracted value ([problem_7_0_1_] : [BIGINT]) - [10]
2020-11-25 21:10:22,212 TRACE  [main] BasicExtractor: extracted value ([problem_7_0_0_] : [BIGINT]) - [10]
2020-11-25 21:10:22,212 TRACE  [main] BasicExtractor: extracted value ([id1_0_0_] : [BIGINT]) - [59]
2020-11-25 21:10:22,212 TRACE  [main] BasicExtractor: extracted value ([id1_0_1_] : [BIGINT]) - [60]
2020-11-25 21:10:22,213 TRACE  [main] BasicExtractor: extracted value ([binary_v2_0_1_] : [BLOB]) - [null]
2020-11-25 21:10:22,213 TRACE  [main] BasicExtractor: extracted value ([float_va3_0_1_] : [DOUBLE]) - [4.0]
2020-11-25 21:10:22,213 TRACE  [main] BasicExtractor: extracted value ([i4_0_1_] : [INTEGER]) - [0]
2020-11-25 21:10:22,213 TRACE  [main] BasicExtractor: extracted value ([is_condi5_0_1_] : [BOOLEAN]) - [true]
2020-11-25 21:10:22,213 TRACE  [main] BasicExtractor: extracted value ([j6_0_1_] : [INTEGER]) - [3]
2020-11-25 21:10:22,213 TRACE  [main] BasicExtractor: extracted value ([problem_7_0_1_] : [BIGINT]) - [10]
2020-11-25 21:10:22,214 TRACE  [main] BasicExtractor: extracted value ([problem_7_0_0_] : [BIGINT]) - [10]
2020-11-25 21:10:22,214 TRACE  [main] BasicExtractor: extracted value ([id1_0_0_] : [BIGINT]) - [60]
2020-11-25 21:10:22,232 TRACE  [main] BasicBinder: binding parameter [1] as [BIGINT] - [11]
2020-11-25 21:10:22,233 TRACE  [main] BasicExtractor: extracted value ([id1_1_2_] : [BIGINT]) - [null]
2020-11-25 21:10:22,234 TRACE  [main] BasicExtractor: extracted value ([id1_0_4_] : [BIGINT]) - [null]
2020-11-25 21:10:22,234 TRACE  [main] BasicExtractor: extracted value ([descript2_1_0_] : [BLOB]) - [[112, 114, 111, 98, 108, 101, 109, 100, 101, 115, 99, 114, 105, 112, 116, 105, 111, 110]]
2020-11-25 21:10:22,234 TRACE  [main] BasicExtractor: extracted value ([is_solve3_1_0_] : [BOOLEAN]) - [null]
2020-11-25 21:10:22,234 TRACE  [main] BasicExtractor: extracted value ([kind4_1_0_] : [VARCHAR]) - [POLYNOMIAL]
2020-11-25 21:10:22,234 TRACE  [main] BasicExtractor: extracted value ([matrix_d5_1_0_] : [INTEGER]) - [1]
2020-11-25 21:10:22,235 TRACE  [main] BasicExtractor: extracted value ([parent_p7_1_0_] : [BIGINT]) - [null]
2020-11-25 21:10:22,235 TRACE  [main] BasicExtractor: extracted value ([problem_6_1_0_] : [INTEGER]) - [22]
2020-11-25 21:10:22,235 TRACE  [main] BasicExtractor: extracted value ([problem_7_0_3_] : [BIGINT]) - [null]
2020-11-25 21:10:22,235 TRACE  [main] BasicExtractor: extracted value ([parent_p7_1_1_] : [BIGINT]) - [null]
2020-11-25 21:10:22,235 TRACE  [main] CollectionType: Created collection wrapper: [com.sf.back.entities.Problem.matrixes#11]
2020-11-25 21:10:22,236 TRACE  [main] BasicBinder: binding parameter [1] as [BIGINT] - [11]
2020-11-25 21:10:22,236 TRACE  [main] BasicExtractor: extracted value ([id1_0_1_] : [BIGINT]) - [61]
2020-11-25 21:10:22,237 TRACE  [main] BasicExtractor: extracted value ([binary_v2_0_1_] : [BLOB]) - [null]
2020-11-25 21:10:22,237 TRACE  [main] BasicExtractor: extracted value ([float_va3_0_1_] : [DOUBLE]) - [1.0]
2020-11-25 21:10:22,237 TRACE  [main] BasicExtractor: extracted value ([i4_0_1_] : [INTEGER]) - [0]
2020-11-25 21:10:22,237 TRACE  [main] BasicExtractor: extracted value ([is_condi5_0_1_] : [BOOLEAN]) - [true]
2020-11-25 21:10:22,237 TRACE  [main] BasicExtractor: extracted value ([j6_0_1_] : [INTEGER]) - [0]
2020-11-25 21:10:22,237 TRACE  [main] BasicExtractor: extracted value ([problem_7_0_1_] : [BIGINT]) - [11]
2020-11-25 21:10:22,237 TRACE  [main] BasicExtractor: extracted value ([problem_7_0_0_] : [BIGINT]) - [11]
2020-11-25 21:10:22,237 TRACE  [main] BasicExtractor: extracted value ([id1_0_0_] : [BIGINT]) - [61]
2020-11-25 21:10:22,238 TRACE  [main] BasicExtractor: extracted value ([id1_0_1_] : [BIGINT]) - [62]
2020-11-25 21:10:22,238 TRACE  [main] BasicExtractor: extracted value ([binary_v2_0_1_] : [BLOB]) - [null]
2020-11-25 21:10:22,238 TRACE  [main] BasicExtractor: extracted value ([float_va3_0_1_] : [DOUBLE]) - [2.718281828459045]
2020-11-25 21:10:22,238 TRACE  [main] BasicExtractor: extracted value ([i4_0_1_] : [INTEGER]) - [0]
2020-11-25 21:10:22,238 TRACE  [main] BasicExtractor: extracted value ([is_condi5_0_1_] : [BOOLEAN]) - [true]
2020-11-25 21:10:22,238 TRACE  [main] BasicExtractor: extracted value ([j6_0_1_] : [INTEGER]) - [1]
2020-11-25 21:10:22,239 TRACE  [main] BasicExtractor: extracted value ([problem_7_0_1_] : [BIGINT]) - [11]
2020-11-25 21:10:22,239 TRACE  [main] BasicExtractor: extracted value ([problem_7_0_0_] : [BIGINT]) - [11]
2020-11-25 21:10:22,239 TRACE  [main] BasicExtractor: extracted value ([id1_0_0_] : [BIGINT]) - [62]
2020-11-25 21:10:22,239 TRACE  [main] BasicExtractor: extracted value ([id1_0_1_] : [BIGINT]) - [63]
2020-11-25 21:10:22,239 TRACE  [main] BasicExtractor: extracted value ([binary_v2_0_1_] : [BLOB]) - [null]
2020-11-25 21:10:22,240 TRACE  [main] BasicExtractor: extracted value ([float_va3_0_1_] : [DOUBLE]) - [7.38905609893065]
2020-11-25 21:10:22,240 TRACE  [main] BasicExtractor: extracted value ([i4_0_1_] : [INTEGER]) - [0]
2020-11-25 21:10:22,240 TRACE  [main] BasicExtractor: extracted value ([is_condi5_0_1_] : [BOOLEAN]) - [true]
2020-11-25 21:10:22,240 TRACE  [main] BasicExtractor: extracted value ([j6_0_1_] : [INTEGER]) - [2]
2020-11-25 21:10:22,240 TRACE  [main] BasicExtractor: extracted value ([problem_7_0_1_] : [BIGINT]) - [11]
2020-11-25 21:10:22,240 TRACE  [main] BasicExtractor: extracted value ([problem_7_0_0_] : [BIGINT]) - [11]
2020-11-25 21:10:22,241 TRACE  [main] BasicExtractor: extracted value ([id1_0_0_] : [BIGINT]) - [63]
2020-11-25 21:10:22,241 TRACE  [main] BasicExtractor: extracted value ([id1_0_1_] : [BIGINT]) - [64]
2020-11-25 21:10:22,241 TRACE  [main] BasicExtractor: extracted value ([binary_v2_0_1_] : [BLOB]) - [null]
2020-11-25 21:10:22,241 TRACE  [main] BasicExtractor: extracted value ([float_va3_0_1_] : [DOUBLE]) - [20.085536923187668]
2020-11-25 21:10:22,241 TRACE  [main] BasicExtractor: extracted value ([i4_0_1_] : [INTEGER]) - [0]
2020-11-25 21:10:22,241 TRACE  [main] BasicExtractor: extracted value ([is_condi5_0_1_] : [BOOLEAN]) - [true]
2020-11-25 21:10:22,241 TRACE  [main] BasicExtractor: extracted value ([j6_0_1_] : [INTEGER]) - [3]
2020-11-25 21:10:22,242 TRACE  [main] BasicExtractor: extracted value ([problem_7_0_1_] : [BIGINT]) - [11]
2020-11-25 21:10:22,242 TRACE  [main] BasicExtractor: extracted value ([problem_7_0_0_] : [BIGINT]) - [11]
2020-11-25 21:10:22,242 TRACE  [main] BasicExtractor: extracted value ([id1_0_0_] : [BIGINT]) - [64]
2020-11-25 21:10:22,242 TRACE  [main] BasicExtractor: extracted value ([id1_0_1_] : [BIGINT]) - [65]
2020-11-25 21:10:22,242 TRACE  [main] BasicExtractor: extracted value ([binary_v2_0_1_] : [BLOB]) - [null]
2020-11-25 21:10:22,242 TRACE  [main] BasicExtractor: extracted value ([float_va3_0_1_] : [DOUBLE]) - [54.598150033144236]
2020-11-25 21:10:22,242 TRACE  [main] BasicExtractor: extracted value ([i4_0_1_] : [INTEGER]) - [0]
2020-11-25 21:10:22,243 TRACE  [main] BasicExtractor: extracted value ([is_condi5_0_1_] : [BOOLEAN]) - [true]
2020-11-25 21:10:22,243 TRACE  [main] BasicExtractor: extracted value ([j6_0_1_] : [INTEGER]) - [4]
2020-11-25 21:10:22,243 TRACE  [main] BasicExtractor: extracted value ([problem_7_0_1_] : [BIGINT]) - [11]
2020-11-25 21:10:22,243 TRACE  [main] BasicExtractor: extracted value ([problem_7_0_0_] : [BIGINT]) - [11]
2020-11-25 21:10:22,243 TRACE  [main] BasicExtractor: extracted value ([id1_0_0_] : [BIGINT]) - [65]
2020-11-25 21:10:22,243 TRACE  [main] BasicExtractor: extracted value ([id1_0_1_] : [BIGINT]) - [66]
2020-11-25 21:10:22,243 TRACE  [main] BasicExtractor: extracted value ([binary_v2_0_1_] : [BLOB]) - [null]
2020-11-25 21:10:22,243 TRACE  [main] BasicExtractor: extracted value ([float_va3_0_1_] : [DOUBLE]) - [148.4131591025766]
2020-11-25 21:10:22,244 TRACE  [main] BasicExtractor: extracted value ([i4_0_1_] : [INTEGER]) - [0]
2020-11-25 21:10:22,244 TRACE  [main] BasicExtractor: extracted value ([is_condi5_0_1_] : [BOOLEAN]) - [true]
2020-11-25 21:10:22,244 TRACE  [main] BasicExtractor: extracted value ([j6_0_1_] : [INTEGER]) - [5]
2020-11-25 21:10:22,244 TRACE  [main] BasicExtractor: extracted value ([problem_7_0_1_] : [BIGINT]) - [11]
2020-11-25 21:10:22,244 TRACE  [main] BasicExtractor: extracted value ([problem_7_0_0_] : [BIGINT]) - [11]
2020-11-25 21:10:22,244 TRACE  [main] BasicExtractor: extracted value ([id1_0_0_] : [BIGINT]) - [66]
2020-11-25 21:10:22,248 TRACE  [main] BasicBinder: binding parameter [1] as [BIGINT] - [11]
2020-11-25 21:10:22,249 TRACE  [main] BasicExtractor: extracted value ([id1_0_0_] : [BIGINT]) - [61]
2020-11-25 21:10:22,251 TRACE  [main] BasicExtractor: extracted value ([binary_v2_0_0_] : [BLOB]) - [null]
2020-11-25 21:10:22,251 TRACE  [main] BasicExtractor: extracted value ([float_va3_0_0_] : [DOUBLE]) - [1.0]
2020-11-25 21:10:22,252 TRACE  [main] BasicExtractor: extracted value ([i4_0_0_] : [INTEGER]) - [0]
2020-11-25 21:10:22,252 TRACE  [main] BasicExtractor: extracted value ([is_condi5_0_0_] : [BOOLEAN]) - [true]
2020-11-25 21:10:22,252 TRACE  [main] BasicExtractor: extracted value ([j6_0_0_] : [INTEGER]) - [0]
2020-11-25 21:10:22,253 TRACE  [main] BasicExtractor: extracted value ([problem_7_0_0_] : [BIGINT]) - [11]
2020-11-25 21:10:22,253 TRACE  [main] BasicExtractor: extracted value ([descript2_1_1_] : [BLOB]) - [[112, 114, 111, 98, 108, 101, 109, 100, 101, 115, 99, 114, 105, 112, 116, 105, 111, 110]]
2020-11-25 21:10:22,253 TRACE  [main] BasicExtractor: extracted value ([is_solve3_1_1_] : [BOOLEAN]) - [null]
2020-11-25 21:10:22,253 TRACE  [main] BasicExtractor: extracted value ([kind4_1_1_] : [VARCHAR]) - [POLYNOMIAL]
2020-11-25 21:10:22,254 TRACE  [main] BasicExtractor: extracted value ([matrix_d5_1_1_] : [INTEGER]) - [1]
2020-11-25 21:10:22,254 TRACE  [main] BasicExtractor: extracted value ([parent_p7_1_1_] : [BIGINT]) - [null]
2020-11-25 21:10:22,254 TRACE  [main] BasicExtractor: extracted value ([problem_6_1_1_] : [INTEGER]) - [22]
2020-11-25 21:10:22,254 TRACE  [main] BasicExtractor: extracted value ([problem_7_0_3_] : [BIGINT]) - [11]
2020-11-25 21:10:22,254 TRACE  [main] BasicExtractor: extracted value ([id1_0_3_] : [BIGINT]) - [61]
2020-11-25 21:10:22,254 TRACE  [main] BasicExtractor: extracted value ([id1_0_0_] : [BIGINT]) - [62]
2020-11-25 21:10:22,255 TRACE  [main] BasicExtractor: extracted value ([binary_v2_0_0_] : [BLOB]) - [null]
2020-11-25 21:10:22,255 TRACE  [main] BasicExtractor: extracted value ([float_va3_0_0_] : [DOUBLE]) - [2.718281828459045]
2020-11-25 21:10:22,255 TRACE  [main] BasicExtractor: extracted value ([i4_0_0_] : [INTEGER]) - [0]
2020-11-25 21:10:22,255 TRACE  [main] BasicExtractor: extracted value ([is_condi5_0_0_] : [BOOLEAN]) - [true]
2020-11-25 21:10:22,255 TRACE  [main] BasicExtractor: extracted value ([j6_0_0_] : [INTEGER]) - [1]
2020-11-25 21:10:22,255 TRACE  [main] BasicExtractor: extracted value ([problem_7_0_0_] : [BIGINT]) - [11]
2020-11-25 21:10:22,256 TRACE  [main] BasicExtractor: extracted value ([problem_7_0_3_] : [BIGINT]) - [11]
2020-11-25 21:10:22,256 TRACE  [main] BasicExtractor: extracted value ([id1_0_3_] : [BIGINT]) - [62]
2020-11-25 21:10:22,256 TRACE  [main] BasicExtractor: extracted value ([id1_0_0_] : [BIGINT]) - [63]
2020-11-25 21:10:22,256 TRACE  [main] BasicExtractor: extracted value ([binary_v2_0_0_] : [BLOB]) - [null]
2020-11-25 21:10:22,256 TRACE  [main] BasicExtractor: extracted value ([float_va3_0_0_] : [DOUBLE]) - [7.38905609893065]
2020-11-25 21:10:22,257 TRACE  [main] BasicExtractor: extracted value ([i4_0_0_] : [INTEGER]) - [0]
2020-11-25 21:10:22,257 TRACE  [main] BasicExtractor: extracted value ([is_condi5_0_0_] : [BOOLEAN]) - [true]
2020-11-25 21:10:22,257 TRACE  [main] BasicExtractor: extracted value ([j6_0_0_] : [INTEGER]) - [2]
2020-11-25 21:10:22,257 TRACE  [main] BasicExtractor: extracted value ([problem_7_0_0_] : [BIGINT]) - [11]
2020-11-25 21:10:22,257 TRACE  [main] BasicExtractor: extracted value ([problem_7_0_3_] : [BIGINT]) - [11]
2020-11-25 21:10:22,257 TRACE  [main] BasicExtractor: extracted value ([id1_0_3_] : [BIGINT]) - [63]
2020-11-25 21:10:22,257 TRACE  [main] BasicExtractor: extracted value ([id1_0_0_] : [BIGINT]) - [64]
2020-11-25 21:10:22,257 TRACE  [main] BasicExtractor: extracted value ([binary_v2_0_0_] : [BLOB]) - [null]
2020-11-25 21:10:22,258 TRACE  [main] BasicExtractor: extracted value ([float_va3_0_0_] : [DOUBLE]) - [20.085536923187668]
2020-11-25 21:10:22,258 TRACE  [main] BasicExtractor: extracted value ([i4_0_0_] : [INTEGER]) - [0]
2020-11-25 21:10:22,258 TRACE  [main] BasicExtractor: extracted value ([is_condi5_0_0_] : [BOOLEAN]) - [true]
2020-11-25 21:10:22,258 TRACE  [main] BasicExtractor: extracted value ([j6_0_0_] : [INTEGER]) - [3]
2020-11-25 21:10:22,258 TRACE  [main] BasicExtractor: extracted value ([problem_7_0_0_] : [BIGINT]) - [11]
2020-11-25 21:10:22,258 TRACE  [main] BasicExtractor: extracted value ([problem_7_0_3_] : [BIGINT]) - [11]
2020-11-25 21:10:22,259 TRACE  [main] BasicExtractor: extracted value ([id1_0_3_] : [BIGINT]) - [64]
2020-11-25 21:10:22,259 TRACE  [main] BasicExtractor: extracted value ([id1_0_0_] : [BIGINT]) - [65]
2020-11-25 21:10:22,259 TRACE  [main] BasicExtractor: extracted value ([binary_v2_0_0_] : [BLOB]) - [null]
2020-11-25 21:10:22,259 TRACE  [main] BasicExtractor: extracted value ([float_va3_0_0_] : [DOUBLE]) - [54.598150033144236]
2020-11-25 21:10:22,259 TRACE  [main] BasicExtractor: extracted value ([i4_0_0_] : [INTEGER]) - [0]
2020-11-25 21:10:22,259 TRACE  [main] BasicExtractor: extracted value ([is_condi5_0_0_] : [BOOLEAN]) - [true]
2020-11-25 21:10:22,260 TRACE  [main] BasicExtractor: extracted value ([j6_0_0_] : [INTEGER]) - [4]
2020-11-25 21:10:22,260 TRACE  [main] BasicExtractor: extracted value ([problem_7_0_0_] : [BIGINT]) - [11]
2020-11-25 21:10:22,261 TRACE  [main] BasicExtractor: extracted value ([problem_7_0_3_] : [BIGINT]) - [11]
2020-11-25 21:10:22,261 TRACE  [main] BasicExtractor: extracted value ([id1_0_3_] : [BIGINT]) - [65]
2020-11-25 21:10:22,261 TRACE  [main] BasicExtractor: extracted value ([id1_0_0_] : [BIGINT]) - [66]
2020-11-25 21:10:22,262 TRACE  [main] BasicExtractor: extracted value ([binary_v2_0_0_] : [BLOB]) - [null]
2020-11-25 21:10:22,262 TRACE  [main] BasicExtractor: extracted value ([float_va3_0_0_] : [DOUBLE]) - [148.4131591025766]
2020-11-25 21:10:22,262 TRACE  [main] BasicExtractor: extracted value ([i4_0_0_] : [INTEGER]) - [0]
2020-11-25 21:10:22,262 TRACE  [main] BasicExtractor: extracted value ([is_condi5_0_0_] : [BOOLEAN]) - [true]
2020-11-25 21:10:22,262 TRACE  [main] BasicExtractor: extracted value ([j6_0_0_] : [INTEGER]) - [5]
2020-11-25 21:10:22,263 TRACE  [main] BasicExtractor: extracted value ([problem_7_0_0_] : [BIGINT]) - [11]
2020-11-25 21:10:22,263 TRACE  [main] BasicExtractor: extracted value ([problem_7_0_3_] : [BIGINT]) - [11]
2020-11-25 21:10:22,263 TRACE  [main] BasicExtractor: extracted value ([id1_0_3_] : [BIGINT]) - [66]
2020-11-25 21:10:22,263 TRACE  [main] CollectionType: Created collection wrapper: [com.sf.back.entities.Problem.children#11]
2020-11-25 21:10:22,265 TRACE  [main] BasicBinder: binding parameter [1] as [BIGINT] - [11]
2020-11-25 21:10:22,267 TRACE  [main] BasicBinder: binding parameter [1] as [BLOB] - [null]
2020-11-25 21:10:22,268 TRACE  [main] BasicBinder: binding parameter [2] as [DOUBLE] - [2.0]
2020-11-25 21:10:22,268 TRACE  [main] BasicBinder: binding parameter [3] as [INTEGER] - [0]
2020-11-25 21:10:22,268 TRACE  [main] BasicBinder: binding parameter [4] as [BOOLEAN] - [true]
2020-11-25 21:10:22,268 TRACE  [main] BasicBinder: binding parameter [5] as [INTEGER] - [0]
2020-11-25 21:10:22,268 TRACE  [main] BasicBinder: binding parameter [6] as [BIGINT] - [11]
2020-11-25 21:10:22,268 TRACE  [main] BasicBinder: binding parameter [7] as [BIGINT] - [61]
2020-11-25 21:10:22,270 TRACE  [main] BasicBinder: binding parameter [1] as [BLOB] - [[100, 101, 115, 99, 114, 105, 112, 116, 105, 111, 110, 112, 114, 111, 98, 108, 101, 109]]
2020-11-25 21:10:22,270 TRACE  [main] BasicBinder: binding parameter [2] as [BOOLEAN] - [null]
2020-11-25 21:10:22,270 TRACE  [main] BasicBinder: binding parameter [3] as [VARCHAR] - [POLYNOMIAL]
2020-11-25 21:10:22,270 TRACE  [main] BasicBinder: binding parameter [4] as [INTEGER] - [1]
2020-11-25 21:10:22,270 TRACE  [main] BasicBinder: binding parameter [5] as [BIGINT] - [null]
2020-11-25 21:10:22,271 TRACE  [main] BasicBinder: binding parameter [6] as [INTEGER] - [22]
2020-11-25 21:10:22,271 TRACE  [main] BasicBinder: binding parameter [7] as [BIGINT] - [11]
2020-11-25 21:10:22,288 TRACE  [main] BasicBinder: binding parameter [1] as [BIGINT] - [12]
2020-11-25 21:10:22,290 TRACE  [main] BasicExtractor: extracted value ([id1_1_2_] : [BIGINT]) - [null]
2020-11-25 21:10:22,291 TRACE  [main] BasicExtractor: extracted value ([id1_0_4_] : [BIGINT]) - [null]
2020-11-25 21:10:22,291 TRACE  [main] BasicExtractor: extracted value ([descript2_1_0_] : [BLOB]) - [[112, 114, 111, 98, 108, 101, 109, 100, 101, 115, 99, 114, 105, 112, 116, 105, 111, 110]]
2020-11-25 21:10:22,291 TRACE  [main] BasicExtractor: extracted value ([is_solve3_1_0_] : [BOOLEAN]) - [null]
2020-11-25 21:10:22,292 TRACE  [main] BasicExtractor: extracted value ([kind4_1_0_] : [VARCHAR]) - [POLYNOMIAL]
2020-11-25 21:10:22,292 TRACE  [main] BasicExtractor: extracted value ([matrix_d5_1_0_] : [INTEGER]) - [1]
2020-11-25 21:10:22,292 TRACE  [main] BasicExtractor: extracted value ([parent_p7_1_0_] : [BIGINT]) - [null]
2020-11-25 21:10:22,292 TRACE  [main] BasicExtractor: extracted value ([problem_6_1_0_] : [INTEGER]) - [22]
2020-11-25 21:10:22,292 TRACE  [main] BasicExtractor: extracted value ([problem_7_0_3_] : [BIGINT]) - [null]
2020-11-25 21:10:22,292 TRACE  [main] BasicExtractor: extracted value ([parent_p7_1_1_] : [BIGINT]) - [null]
2020-11-25 21:10:22,293 TRACE  [main] CollectionType: Created collection wrapper: [com.sf.back.entities.Problem.matrixes#12]
2020-11-25 21:10:22,294 TRACE  [main] BasicBinder: binding parameter [1] as [BIGINT] - [12]
2020-11-25 21:10:22,295 TRACE  [main] BasicExtractor: extracted value ([id1_0_1_] : [BIGINT]) - [67]
2020-11-25 21:10:22,296 TRACE  [main] BasicExtractor: extracted value ([binary_v2_0_1_] : [BLOB]) - [null]
2020-11-25 21:10:22,296 TRACE  [main] BasicExtractor: extracted value ([float_va3_0_1_] : [DOUBLE]) - [1.0]
2020-11-25 21:10:22,296 TRACE  [main] BasicExtractor: extracted value ([i4_0_1_] : [INTEGER]) - [0]
2020-11-25 21:10:22,297 TRACE  [main] BasicExtractor: extracted value ([is_condi5_0_1_] : [BOOLEAN]) - [true]
2020-11-25 21:10:22,297 TRACE  [main] BasicExtractor: extracted value ([j6_0_1_] : [INTEGER]) - [0]
2020-11-25 21:10:22,298 TRACE  [main] BasicExtractor: extracted value ([problem_7_0_1_] : [BIGINT]) - [12]
2020-11-25 21:10:22,300 TRACE  [main] BasicExtractor: extracted value ([problem_7_0_0_] : [BIGINT]) - [12]
2020-11-25 21:10:22,302 TRACE  [main] BasicExtractor: extracted value ([id1_0_0_] : [BIGINT]) - [67]
2020-11-25 21:10:22,303 TRACE  [main] BasicExtractor: extracted value ([id1_0_1_] : [BIGINT]) - [68]
2020-11-25 21:10:22,303 TRACE  [main] BasicExtractor: extracted value ([binary_v2_0_1_] : [BLOB]) - [null]
2020-11-25 21:10:22,304 TRACE  [main] BasicExtractor: extracted value ([float_va3_0_1_] : [DOUBLE]) - [2.718281828459045]
2020-11-25 21:10:22,304 TRACE  [main] BasicExtractor: extracted value ([i4_0_1_] : [INTEGER]) - [0]
2020-11-25 21:10:22,305 TRACE  [main] BasicExtractor: extracted value ([is_condi5_0_1_] : [BOOLEAN]) - [true]
2020-11-25 21:10:22,305 TRACE  [main] BasicExtractor: extracted value ([j6_0_1_] : [INTEGER]) - [1]
2020-11-25 21:10:22,306 TRACE  [main] BasicExtractor: extracted value ([problem_7_0_1_] : [BIGINT]) - [12]
2020-11-25 21:10:22,307 TRACE  [main] BasicExtractor: extracted value ([problem_7_0_0_] : [BIGINT]) - [12]
2020-11-25 21:10:22,308 TRACE  [main] BasicExtractor: extracted value ([id1_0_0_] : [BIGINT]) - [68]
2020-11-25 21:10:22,308 TRACE  [main] BasicExtractor: extracted value ([id1_0_1_] : [BIGINT]) - [69]
2020-11-25 21:10:22,320 TRACE  [main] BasicExtractor: extracted value ([binary_v2_0_1_] : [BLOB]) - [null]
2020-11-25 21:10:22,320 TRACE  [main] BasicExtractor: extracted value ([float_va3_0_1_] : [DOUBLE]) - [7.38905609893065]
2020-11-25 21:10:22,321 TRACE  [main] BasicExtractor: extracted value ([i4_0_1_] : [INTEGER]) - [0]
2020-11-25 21:10:22,321 TRACE  [main] BasicExtractor: extracted value ([is_condi5_0_1_] : [BOOLEAN]) - [true]
2020-11-25 21:10:22,321 TRACE  [main] BasicExtractor: extracted value ([j6_0_1_] : [INTEGER]) - [2]
2020-11-25 21:10:22,321 TRACE  [main] BasicExtractor: extracted value ([problem_7_0_1_] : [BIGINT]) - [12]
2020-11-25 21:10:22,322 TRACE  [main] BasicExtractor: extracted value ([problem_7_0_0_] : [BIGINT]) - [12]
2020-11-25 21:10:22,322 TRACE  [main] BasicExtractor: extracted value ([id1_0_0_] : [BIGINT]) - [69]
2020-11-25 21:10:22,323 TRACE  [main] BasicExtractor: extracted value ([id1_0_1_] : [BIGINT]) - [70]
2020-11-25 21:10:22,324 TRACE  [main] BasicExtractor: extracted value ([binary_v2_0_1_] : [BLOB]) - [null]
2020-11-25 21:10:22,324 TRACE  [main] BasicExtractor: extracted value ([float_va3_0_1_] : [DOUBLE]) - [20.085536923187668]
2020-11-25 21:10:22,325 TRACE  [main] BasicExtractor: extracted value ([i4_0_1_] : [INTEGER]) - [0]
2020-11-25 21:10:22,325 TRACE  [main] BasicExtractor: extracted value ([is_condi5_0_1_] : [BOOLEAN]) - [true]
2020-11-25 21:10:22,325 TRACE  [main] BasicExtractor: extracted value ([j6_0_1_] : [INTEGER]) - [3]
2020-11-25 21:10:22,326 TRACE  [main] BasicExtractor: extracted value ([problem_7_0_1_] : [BIGINT]) - [12]
2020-11-25 21:10:22,326 TRACE  [main] BasicExtractor: extracted value ([problem_7_0_0_] : [BIGINT]) - [12]
2020-11-25 21:10:22,327 TRACE  [main] BasicExtractor: extracted value ([id1_0_0_] : [BIGINT]) - [70]
2020-11-25 21:10:22,327 TRACE  [main] BasicExtractor: extracted value ([id1_0_1_] : [BIGINT]) - [71]
2020-11-25 21:10:22,328 TRACE  [main] BasicExtractor: extracted value ([binary_v2_0_1_] : [BLOB]) - [null]
2020-11-25 21:10:22,328 TRACE  [main] BasicExtractor: extracted value ([float_va3_0_1_] : [DOUBLE]) - [54.598150033144236]
2020-11-25 21:10:22,328 TRACE  [main] BasicExtractor: extracted value ([i4_0_1_] : [INTEGER]) - [0]
2020-11-25 21:10:22,329 TRACE  [main] BasicExtractor: extracted value ([is_condi5_0_1_] : [BOOLEAN]) - [true]
2020-11-25 21:10:22,329 TRACE  [main] BasicExtractor: extracted value ([j6_0_1_] : [INTEGER]) - [4]
2020-11-25 21:10:22,329 TRACE  [main] BasicExtractor: extracted value ([problem_7_0_1_] : [BIGINT]) - [12]
2020-11-25 21:10:22,330 TRACE  [main] BasicExtractor: extracted value ([problem_7_0_0_] : [BIGINT]) - [12]
2020-11-25 21:10:22,330 TRACE  [main] BasicExtractor: extracted value ([id1_0_0_] : [BIGINT]) - [71]
2020-11-25 21:10:22,330 TRACE  [main] BasicExtractor: extracted value ([id1_0_1_] : [BIGINT]) - [72]
2020-11-25 21:10:22,331 TRACE  [main] BasicExtractor: extracted value ([binary_v2_0_1_] : [BLOB]) - [null]
2020-11-25 21:10:22,331 TRACE  [main] BasicExtractor: extracted value ([float_va3_0_1_] : [DOUBLE]) - [148.4131591025766]
2020-11-25 21:10:22,332 TRACE  [main] BasicExtractor: extracted value ([i4_0_1_] : [INTEGER]) - [0]
2020-11-25 21:10:22,332 TRACE  [main] BasicExtractor: extracted value ([is_condi5_0_1_] : [BOOLEAN]) - [true]
2020-11-25 21:10:22,336 TRACE  [main] BasicExtractor: extracted value ([j6_0_1_] : [INTEGER]) - [5]
2020-11-25 21:10:22,337 TRACE  [main] BasicExtractor: extracted value ([problem_7_0_1_] : [BIGINT]) - [12]
2020-11-25 21:10:22,337 TRACE  [main] BasicExtractor: extracted value ([problem_7_0_0_] : [BIGINT]) - [12]
2020-11-25 21:10:22,338 TRACE  [main] BasicExtractor: extracted value ([id1_0_0_] : [BIGINT]) - [72]
2020-11-25 21:10:22,344 TRACE  [main] BasicBinder: binding parameter [1] as [BIGINT] - [12]
2020-11-25 21:10:22,345 TRACE  [main] BasicExtractor: extracted value ([id1_1_2_] : [BIGINT]) - [null]
2020-11-25 21:10:22,345 TRACE  [main] BasicExtractor: extracted value ([id1_0_4_] : [BIGINT]) - [null]
2020-11-25 21:10:22,346 TRACE  [main] BasicExtractor: extracted value ([descript2_1_0_] : [BLOB]) - [[112, 114, 111, 98, 108, 101, 109, 100, 101, 115, 99, 114, 105, 112, 116, 105, 111, 110]]
2020-11-25 21:10:22,346 TRACE  [main] BasicExtractor: extracted value ([is_solve3_1_0_] : [BOOLEAN]) - [null]
2020-11-25 21:10:22,346 TRACE  [main] BasicExtractor: extracted value ([kind4_1_0_] : [VARCHAR]) - [POLYNOMIAL]
2020-11-25 21:10:22,346 TRACE  [main] BasicExtractor: extracted value ([matrix_d5_1_0_] : [INTEGER]) - [1]
2020-11-25 21:10:22,346 TRACE  [main] BasicExtractor: extracted value ([parent_p7_1_0_] : [BIGINT]) - [null]
2020-11-25 21:10:22,346 TRACE  [main] BasicExtractor: extracted value ([problem_6_1_0_] : [INTEGER]) - [22]
2020-11-25 21:10:22,347 TRACE  [main] BasicExtractor: extracted value ([problem_7_0_3_] : [BIGINT]) - [null]
2020-11-25 21:10:22,347 TRACE  [main] BasicExtractor: extracted value ([parent_p7_1_1_] : [BIGINT]) - [null]
2020-11-25 21:10:22,347 TRACE  [main] CollectionType: Created collection wrapper: [com.sf.back.entities.Problem.matrixes#12]
2020-11-25 21:10:22,349 TRACE  [main] BasicBinder: binding parameter [1] as [BIGINT] - [12]
2020-11-25 21:10:22,349 TRACE  [main] BasicExtractor: extracted value ([id1_0_1_] : [BIGINT]) - [67]
2020-11-25 21:10:22,350 TRACE  [main] BasicExtractor: extracted value ([binary_v2_0_1_] : [BLOB]) - [null]
2020-11-25 21:10:22,351 TRACE  [main] BasicExtractor: extracted value ([float_va3_0_1_] : [DOUBLE]) - [1.0]
2020-11-25 21:10:22,352 TRACE  [main] BasicExtractor: extracted value ([i4_0_1_] : [INTEGER]) - [0]
2020-11-25 21:10:22,352 TRACE  [main] BasicExtractor: extracted value ([is_condi5_0_1_] : [BOOLEAN]) - [true]
2020-11-25 21:10:22,352 TRACE  [main] BasicExtractor: extracted value ([j6_0_1_] : [INTEGER]) - [0]
2020-11-25 21:10:22,352 TRACE  [main] BasicExtractor: extracted value ([problem_7_0_1_] : [BIGINT]) - [12]
2020-11-25 21:10:22,352 TRACE  [main] BasicExtractor: extracted value ([problem_7_0_0_] : [BIGINT]) - [12]
2020-11-25 21:10:22,352 TRACE  [main] BasicExtractor: extracted value ([id1_0_0_] : [BIGINT]) - [67]
2020-11-25 21:10:22,353 TRACE  [main] BasicExtractor: extracted value ([id1_0_1_] : [BIGINT]) - [68]
2020-11-25 21:10:22,353 TRACE  [main] BasicExtractor: extracted value ([binary_v2_0_1_] : [BLOB]) - [null]
2020-11-25 21:10:22,354 TRACE  [main] BasicExtractor: extracted value ([float_va3_0_1_] : [DOUBLE]) - [2.718281828459045]
2020-11-25 21:10:22,354 TRACE  [main] BasicExtractor: extracted value ([i4_0_1_] : [INTEGER]) - [0]
2020-11-25 21:10:22,354 TRACE  [main] BasicExtractor: extracted value ([is_condi5_0_1_] : [BOOLEAN]) - [true]
2020-11-25 21:10:22,355 TRACE  [main] BasicExtractor: extracted value ([j6_0_1_] : [INTEGER]) - [1]
2020-11-25 21:10:22,355 TRACE  [main] BasicExtractor: extracted value ([problem_7_0_1_] : [BIGINT]) - [12]
2020-11-25 21:10:22,355 TRACE  [main] BasicExtractor: extracted value ([problem_7_0_0_] : [BIGINT]) - [12]
2020-11-25 21:10:22,356 TRACE  [main] BasicExtractor: extracted value ([id1_0_0_] : [BIGINT]) - [68]
2020-11-25 21:10:22,356 TRACE  [main] BasicExtractor: extracted value ([id1_0_1_] : [BIGINT]) - [69]
2020-11-25 21:10:22,357 TRACE  [main] BasicExtractor: extracted value ([binary_v2_0_1_] : [BLOB]) - [null]
2020-11-25 21:10:22,357 TRACE  [main] BasicExtractor: extracted value ([float_va3_0_1_] : [DOUBLE]) - [7.38905609893065]
2020-11-25 21:10:22,358 TRACE  [main] BasicExtractor: extracted value ([i4_0_1_] : [INTEGER]) - [0]
2020-11-25 21:10:22,358 TRACE  [main] BasicExtractor: extracted value ([is_condi5_0_1_] : [BOOLEAN]) - [true]
2020-11-25 21:10:22,358 TRACE  [main] BasicExtractor: extracted value ([j6_0_1_] : [INTEGER]) - [2]
2020-11-25 21:10:22,359 TRACE  [main] BasicExtractor: extracted value ([problem_7_0_1_] : [BIGINT]) - [12]
2020-11-25 21:10:22,359 TRACE  [main] BasicExtractor: extracted value ([problem_7_0_0_] : [BIGINT]) - [12]
2020-11-25 21:10:22,359 TRACE  [main] BasicExtractor: extracted value ([id1_0_0_] : [BIGINT]) - [69]
2020-11-25 21:10:22,360 TRACE  [main] BasicExtractor: extracted value ([id1_0_1_] : [BIGINT]) - [70]
2020-11-25 21:10:22,360 TRACE  [main] BasicExtractor: extracted value ([binary_v2_0_1_] : [BLOB]) - [null]
2020-11-25 21:10:22,361 TRACE  [main] BasicExtractor: extracted value ([float_va3_0_1_] : [DOUBLE]) - [20.085536923187668]
2020-11-25 21:10:22,361 TRACE  [main] BasicExtractor: extracted value ([i4_0_1_] : [INTEGER]) - [0]
2020-11-25 21:10:22,361 TRACE  [main] BasicExtractor: extracted value ([is_condi5_0_1_] : [BOOLEAN]) - [true]
2020-11-25 21:10:22,362 TRACE  [main] BasicExtractor: extracted value ([j6_0_1_] : [INTEGER]) - [3]
2020-11-25 21:10:22,362 TRACE  [main] BasicExtractor: extracted value ([problem_7_0_1_] : [BIGINT]) - [12]
2020-11-25 21:10:22,362 TRACE  [main] BasicExtractor: extracted value ([problem_7_0_0_] : [BIGINT]) - [12]
2020-11-25 21:10:22,363 TRACE  [main] BasicExtractor: extracted value ([id1_0_0_] : [BIGINT]) - [70]
2020-11-25 21:10:22,363 TRACE  [main] BasicExtractor: extracted value ([id1_0_1_] : [BIGINT]) - [71]
2020-11-25 21:10:22,364 TRACE  [main] BasicExtractor: extracted value ([binary_v2_0_1_] : [BLOB]) - [null]
2020-11-25 21:10:22,364 TRACE  [main] BasicExtractor: extracted value ([float_va3_0_1_] : [DOUBLE]) - [54.598150033144236]
2020-11-25 21:10:22,365 TRACE  [main] BasicExtractor: extracted value ([i4_0_1_] : [INTEGER]) - [0]
2020-11-25 21:10:22,365 TRACE  [main] BasicExtractor: extracted value ([is_condi5_0_1_] : [BOOLEAN]) - [true]
2020-11-25 21:10:22,366 TRACE  [main] BasicExtractor: extracted value ([j6_0_1_] : [INTEGER]) - [4]
2020-11-25 21:10:22,366 TRACE  [main] BasicExtractor: extracted value ([problem_7_0_1_] : [BIGINT]) - [12]
2020-11-25 21:10:22,366 TRACE  [main] BasicExtractor: extracted value ([problem_7_0_0_] : [BIGINT]) - [12]
2020-11-25 21:10:22,367 TRACE  [main] BasicExtractor: extracted value ([id1_0_0_] : [BIGINT]) - [71]
2020-11-25 21:10:22,368 TRACE  [main] BasicExtractor: extracted value ([id1_0_1_] : [BIGINT]) - [72]
2020-11-25 21:10:22,368 TRACE  [main] BasicExtractor: extracted value ([binary_v2_0_1_] : [BLOB]) - [null]
2020-11-25 21:10:22,369 TRACE  [main] BasicExtractor: extracted value ([float_va3_0_1_] : [DOUBLE]) - [148.4131591025766]
2020-11-25 21:10:22,369 TRACE  [main] BasicExtractor: extracted value ([i4_0_1_] : [INTEGER]) - [0]
2020-11-25 21:10:22,369 TRACE  [main] BasicExtractor: extracted value ([is_condi5_0_1_] : [BOOLEAN]) - [true]
2020-11-25 21:10:22,370 TRACE  [main] BasicExtractor: extracted value ([j6_0_1_] : [INTEGER]) - [5]
2020-11-25 21:10:22,370 TRACE  [main] BasicExtractor: extracted value ([problem_7_0_1_] : [BIGINT]) - [12]
2020-11-25 21:10:22,370 TRACE  [main] BasicExtractor: extracted value ([problem_7_0_0_] : [BIGINT]) - [12]
2020-11-25 21:10:22,371 TRACE  [main] BasicExtractor: extracted value ([id1_0_0_] : [BIGINT]) - [72]
2020-11-25 21:10:22,385 TRACE  [main] BasicBinder: binding parameter [1] as [BIGINT] - [67]
2020-11-25 21:10:22,389 TRACE  [main] BasicBinder: binding parameter [1] as [BIGINT] - [68]
2020-11-25 21:10:22,390 TRACE  [main] BasicBinder: binding parameter [1] as [BIGINT] - [69]
2020-11-25 21:10:22,391 TRACE  [main] BasicBinder: binding parameter [1] as [BIGINT] - [70]
2020-11-25 21:10:22,394 TRACE  [main] BasicBinder: binding parameter [1] as [BIGINT] - [71]
2020-11-25 21:10:22,398 TRACE  [main] BasicBinder: binding parameter [1] as [BIGINT] - [72]
2020-11-25 21:10:22,400 TRACE  [main] BasicBinder: binding parameter [1] as [BIGINT] - [12]
2020-11-25 21:10:22,404 TRACE  [main] BasicBinder: binding parameter [1] as [BIGINT] - [12]
2020-11-25 21:10:22,407 WARN   [main] ProblemService: Problem with 12 is not found
2020-11-25 21:10:22,898 DEBUG  [main] BasicTypeRegistry: Adding type registration boolean -> org.hibernate.type.BooleanType@2f6f4ac4
2020-11-25 21:10:22,898 DEBUG  [main] BasicTypeRegistry: Adding type registration boolean -> org.hibernate.type.BooleanType@2f6f4ac4
2020-11-25 21:10:22,898 DEBUG  [main] BasicTypeRegistry: Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@2f6f4ac4
2020-11-25 21:10:22,898 DEBUG  [main] BasicTypeRegistry: Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@5d58dc61
2020-11-25 21:10:22,898 DEBUG  [main] BasicTypeRegistry: Adding type registration true_false -> org.hibernate.type.TrueFalseType@3a7469ca
2020-11-25 21:10:22,899 DEBUG  [main] BasicTypeRegistry: Adding type registration yes_no -> org.hibernate.type.YesNoType@681d704e
2020-11-25 21:10:22,900 DEBUG  [main] BasicTypeRegistry: Adding type registration byte -> org.hibernate.type.ByteType@10d4b573
2020-11-25 21:10:22,900 DEBUG  [main] BasicTypeRegistry: Adding type registration byte -> org.hibernate.type.ByteType@10d4b573
2020-11-25 21:10:22,900 DEBUG  [main] BasicTypeRegistry: Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@10d4b573
2020-11-25 21:10:22,900 DEBUG  [main] BasicTypeRegistry: Adding type registration character -> org.hibernate.type.CharacterType@164dea80
2020-11-25 21:10:22,901 DEBUG  [main] BasicTypeRegistry: Adding type registration char -> org.hibernate.type.CharacterType@164dea80
2020-11-25 21:10:22,901 DEBUG  [main] BasicTypeRegistry: Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@164dea80
2020-11-25 21:10:22,902 DEBUG  [main] BasicTypeRegistry: Adding type registration short -> org.hibernate.type.ShortType@17053b5
2020-11-25 21:10:22,902 DEBUG  [main] BasicTypeRegistry: Adding type registration short -> org.hibernate.type.ShortType@17053b5
2020-11-25 21:10:22,902 DEBUG  [main] BasicTypeRegistry: Adding type registration java.lang.Short -> org.hibernate.type.ShortType@17053b5
2020-11-25 21:10:22,902 DEBUG  [main] BasicTypeRegistry: Adding type registration integer -> org.hibernate.type.IntegerType@404009df
2020-11-25 21:10:22,902 DEBUG  [main] BasicTypeRegistry: Adding type registration int -> org.hibernate.type.IntegerType@404009df
2020-11-25 21:10:22,902 DEBUG  [main] BasicTypeRegistry: Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@404009df
2020-11-25 21:10:22,903 DEBUG  [main] BasicTypeRegistry: Adding type registration long -> org.hibernate.type.LongType@45bf93bb
2020-11-25 21:10:22,903 DEBUG  [main] BasicTypeRegistry: Adding type registration long -> org.hibernate.type.LongType@45bf93bb
2020-11-25 21:10:22,903 DEBUG  [main] BasicTypeRegistry: Adding type registration java.lang.Long -> org.hibernate.type.LongType@45bf93bb
2020-11-25 21:10:22,903 DEBUG  [main] BasicTypeRegistry: Adding type registration float -> org.hibernate.type.FloatType@15d58530
2020-11-25 21:10:22,903 DEBUG  [main] BasicTypeRegistry: Adding type registration float -> org.hibernate.type.FloatType@15d58530
2020-11-25 21:10:22,903 DEBUG  [main] BasicTypeRegistry: Adding type registration java.lang.Float -> org.hibernate.type.FloatType@15d58530
2020-11-25 21:10:22,904 DEBUG  [main] BasicTypeRegistry: Adding type registration double -> org.hibernate.type.DoubleType@283e1759
2020-11-25 21:10:22,904 DEBUG  [main] BasicTypeRegistry: Adding type registration double -> org.hibernate.type.DoubleType@283e1759
2020-11-25 21:10:22,904 DEBUG  [main] BasicTypeRegistry: Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@283e1759
2020-11-25 21:10:22,904 DEBUG  [main] BasicTypeRegistry: Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@5df7a065
2020-11-25 21:10:22,904 DEBUG  [main] BasicTypeRegistry: Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@5df7a065
2020-11-25 21:10:22,904 DEBUG  [main] BasicTypeRegistry: Adding type registration big_integer -> org.hibernate.type.BigIntegerType@5788722f
2020-11-25 21:10:22,904 DEBUG  [main] BasicTypeRegistry: Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@5788722f
2020-11-25 21:10:22,904 DEBUG  [main] BasicTypeRegistry: Adding type registration string -> org.hibernate.type.StringType@6dc9a56e
2020-11-25 21:10:22,904 DEBUG  [main] BasicTypeRegistry: Adding type registration java.lang.String -> org.hibernate.type.StringType@6dc9a56e
2020-11-25 21:10:22,904 DEBUG  [main] BasicTypeRegistry: Adding type registration nstring -> org.hibernate.type.StringNVarcharType@510e4d79
2020-11-25 21:10:22,905 DEBUG  [main] BasicTypeRegistry: Adding type registration ncharacter -> org.hibernate.type.CharacterNCharType@4ef31221
2020-11-25 21:10:22,905 DEBUG  [main] BasicTypeRegistry: Adding type registration url -> org.hibernate.type.UrlType@60e47aab
2020-11-25 21:10:22,905 DEBUG  [main] BasicTypeRegistry: Adding type registration java.net.URL -> org.hibernate.type.UrlType@60e47aab
2020-11-25 21:10:22,905 DEBUG  [main] BasicTypeRegistry: Adding type registration Duration -> org.hibernate.type.DurationType@3b2db389
2020-11-25 21:10:22,905 DEBUG  [main] BasicTypeRegistry: Adding type registration java.time.Duration -> org.hibernate.type.DurationType@3b2db389
2020-11-25 21:10:22,905 DEBUG  [main] BasicTypeRegistry: Adding type registration Instant -> org.hibernate.type.InstantType@bfd97fb
2020-11-25 21:10:22,905 DEBUG  [main] BasicTypeRegistry: Adding type registration java.time.Instant -> org.hibernate.type.InstantType@bfd97fb
2020-11-25 21:10:22,906 DEBUG  [main] BasicTypeRegistry: Adding type registration LocalDateTime -> org.hibernate.type.LocalDateTimeType@2dc3ece8
2020-11-25 21:10:22,906 DEBUG  [main] BasicTypeRegistry: Adding type registration java.time.LocalDateTime -> org.hibernate.type.LocalDateTimeType@2dc3ece8
2020-11-25 21:10:22,906 DEBUG  [main] BasicTypeRegistry: Adding type registration LocalDate -> org.hibernate.type.LocalDateType@559e3f67
2020-11-25 21:10:22,906 DEBUG  [main] BasicTypeRegistry: Adding type registration java.time.LocalDate -> org.hibernate.type.LocalDateType@559e3f67
2020-11-25 21:10:22,906 DEBUG  [main] BasicTypeRegistry: Adding type registration LocalTime -> org.hibernate.type.LocalTimeType@492c9892
2020-11-25 21:10:22,906 DEBUG  [main] BasicTypeRegistry: Adding type registration java.time.LocalTime -> org.hibernate.type.LocalTimeType@492c9892
2020-11-25 21:10:22,907 DEBUG  [main] BasicTypeRegistry: Adding type registration OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@55b62db8
2020-11-25 21:10:22,907 DEBUG  [main] BasicTypeRegistry: Adding type registration java.time.OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@55b62db8
2020-11-25 21:10:22,907 DEBUG  [main] BasicTypeRegistry: Adding type registration OffsetTime -> org.hibernate.type.OffsetTimeType@79295932
2020-11-25 21:10:22,907 DEBUG  [main] BasicTypeRegistry: Adding type registration java.time.OffsetTime -> org.hibernate.type.OffsetTimeType@79295932
2020-11-25 21:10:22,907 DEBUG  [main] BasicTypeRegistry: Adding type registration ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@76dc36e5
2020-11-25 21:10:22,907 DEBUG  [main] BasicTypeRegistry: Adding type registration java.time.ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@76dc36e5
2020-11-25 21:10:22,907 DEBUG  [main] BasicTypeRegistry: Adding type registration date -> org.hibernate.type.DateType@4f676900
2020-11-25 21:10:22,907 DEBUG  [main] BasicTypeRegistry: Adding type registration java.sql.Date -> org.hibernate.type.DateType@4f676900
2020-11-25 21:10:22,908 DEBUG  [main] BasicTypeRegistry: Adding type registration time -> org.hibernate.type.TimeType@6ec3a4c2
2020-11-25 21:10:22,908 DEBUG  [main] BasicTypeRegistry: Adding type registration java.sql.Time -> org.hibernate.type.TimeType@6ec3a4c2
2020-11-25 21:10:22,908 DEBUG  [main] BasicTypeRegistry: Adding type registration timestamp -> org.hibernate.type.TimestampType@4db46344
2020-11-25 21:10:22,908 DEBUG  [main] BasicTypeRegistry: Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@4db46344
2020-11-25 21:10:22,908 DEBUG  [main] BasicTypeRegistry: Adding type registration java.util.Date -> org.hibernate.type.TimestampType@4db46344
2020-11-25 21:10:22,908 DEBUG  [main] BasicTypeRegistry: Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@3ccfac29
2020-11-25 21:10:22,908 DEBUG  [main] BasicTypeRegistry: Adding type registration calendar -> org.hibernate.type.CalendarType@578b2dec
2020-11-25 21:10:22,908 DEBUG  [main] BasicTypeRegistry: Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@578b2dec
2020-11-25 21:10:22,908 DEBUG  [main] BasicTypeRegistry: Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@578b2dec
2020-11-25 21:10:22,909 DEBUG  [main] BasicTypeRegistry: Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@48ee3c2d
2020-11-25 21:10:22,909 DEBUG  [main] BasicTypeRegistry: Adding type registration locale -> org.hibernate.type.LocaleType@39afe59f
2020-11-25 21:10:22,909 DEBUG  [main] BasicTypeRegistry: Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@39afe59f
2020-11-25 21:10:22,910 DEBUG  [main] BasicTypeRegistry: Adding type registration currency -> org.hibernate.type.CurrencyType@4e5364a3
2020-11-25 21:10:22,910 DEBUG  [main] BasicTypeRegistry: Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@4e5364a3
2020-11-25 21:10:22,910 DEBUG  [main] BasicTypeRegistry: Adding type registration timezone -> org.hibernate.type.TimeZoneType@3578a45b
2020-11-25 21:10:22,910 DEBUG  [main] BasicTypeRegistry: Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@3578a45b
2020-11-25 21:10:22,910 DEBUG  [main] BasicTypeRegistry: Adding type registration class -> org.hibernate.type.ClassType@c190cfc
2020-11-25 21:10:22,910 DEBUG  [main] BasicTypeRegistry: Adding type registration java.lang.Class -> org.hibernate.type.ClassType@c190cfc
2020-11-25 21:10:22,910 DEBUG  [main] BasicTypeRegistry: Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@2e0516a3
2020-11-25 21:10:22,911 DEBUG  [main] BasicTypeRegistry: Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@2e0516a3
2020-11-25 21:10:22,911 DEBUG  [main] BasicTypeRegistry: Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@20184ade
2020-11-25 21:10:22,911 DEBUG  [main] BasicTypeRegistry: Adding type registration binary -> org.hibernate.type.BinaryType@77204651
2020-11-25 21:10:22,911 DEBUG  [main] BasicTypeRegistry: Adding type registration byte[] -> org.hibernate.type.BinaryType@77204651
2020-11-25 21:10:22,911 DEBUG  [main] BasicTypeRegistry: Adding type registration [B -> org.hibernate.type.BinaryType@77204651
2020-11-25 21:10:22,911 DEBUG  [main] BasicTypeRegistry: Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@7fb44737
2020-11-25 21:10:22,911 DEBUG  [main] BasicTypeRegistry: Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@7fb44737
2020-11-25 21:10:22,911 DEBUG  [main] BasicTypeRegistry: Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@7fb44737
2020-11-25 21:10:22,912 DEBUG  [main] BasicTypeRegistry: Adding type registration row_version -> org.hibernate.type.RowVersionType@2619cb76
2020-11-25 21:10:22,912 DEBUG  [main] BasicTypeRegistry: Adding type registration image -> org.hibernate.type.ImageType@5d297d4d
2020-11-25 21:10:22,912 DEBUG  [main] BasicTypeRegistry: Adding type registration characters -> org.hibernate.type.CharArrayType@1fc3df43
2020-11-25 21:10:22,912 DEBUG  [main] BasicTypeRegistry: Adding type registration char[] -> org.hibernate.type.CharArrayType@1fc3df43
2020-11-25 21:10:22,912 DEBUG  [main] BasicTypeRegistry: Adding type registration [C -> org.hibernate.type.CharArrayType@1fc3df43
2020-11-25 21:10:22,912 DEBUG  [main] BasicTypeRegistry: Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@37caecda
2020-11-25 21:10:22,912 DEBUG  [main] BasicTypeRegistry: Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@37caecda
2020-11-25 21:10:22,912 DEBUG  [main] BasicTypeRegistry: Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@37caecda
2020-11-25 21:10:22,912 DEBUG  [main] BasicTypeRegistry: Adding type registration text -> org.hibernate.type.TextType@35554635
2020-11-25 21:10:22,912 DEBUG  [main] BasicTypeRegistry: Adding type registration ntext -> org.hibernate.type.NTextType@70592729
2020-11-25 21:10:22,913 DEBUG  [main] BasicTypeRegistry: Adding type registration blob -> org.hibernate.type.BlobType@57b711b6
2020-11-25 21:10:22,913 DEBUG  [main] BasicTypeRegistry: Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@57b711b6
2020-11-25 21:10:22,913 DEBUG  [main] BasicTypeRegistry: Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@5bbf744b
2020-11-25 21:10:22,913 DEBUG  [main] BasicTypeRegistry: Adding type registration clob -> org.hibernate.type.ClobType@120d6cbf
2020-11-25 21:10:22,913 DEBUG  [main] BasicTypeRegistry: Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@120d6cbf
2020-11-25 21:10:22,913 DEBUG  [main] BasicTypeRegistry: Adding type registration nclob -> org.hibernate.type.NClobType@46994f26
2020-11-25 21:10:22,913 DEBUG  [main] BasicTypeRegistry: Adding type registration java.sql.NClob -> org.hibernate.type.NClobType@46994f26
2020-11-25 21:10:22,914 DEBUG  [main] BasicTypeRegistry: Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@71316cd7
2020-11-25 21:10:22,914 DEBUG  [main] BasicTypeRegistry: Adding type registration materialized_nclob -> org.hibernate.type.MaterializedNClobType@7c206b14
2020-11-25 21:10:22,914 DEBUG  [main] BasicTypeRegistry: Adding type registration serializable -> org.hibernate.type.SerializableType@432a6a69
2020-11-25 21:10:22,914 DEBUG  [main] BasicTypeRegistry: Adding type registration object -> org.hibernate.type.ObjectType@681311a7
2020-11-25 21:10:22,914 DEBUG  [main] BasicTypeRegistry: Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@681311a7
2020-11-25 21:10:22,914 DEBUG  [main] BasicTypeRegistry: Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@1dc47df3
2020-11-25 21:10:22,914 DEBUG  [main] BasicTypeRegistry: Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@256a25a8
2020-11-25 21:10:22,914 DEBUG  [main] BasicTypeRegistry: Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@68f67bbd
2020-11-25 21:10:22,914 DEBUG  [main] BasicTypeRegistry: Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@5bd585a5
2020-11-25 21:10:22,914 DEBUG  [main] BasicTypeRegistry: Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@65c040c9
2020-11-25 21:10:22,915 DEBUG  [main] BasicTypeRegistry: Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@11736ebc
2020-11-25 21:10:22,915 DEBUG  [main] BasicTypeRegistry: Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@4a03c4bc
2020-11-25 21:10:22,915 DEBUG  [main] BasicTypeRegistry: Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@3d0c88f4
2020-11-25 21:10:22,931 DEBUG  [main] TypeConfiguration$Scope: Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@365ad794] to MetadataBuildingContext [org.hibernate.boot.internal.MetadataBuildingContextRootImpl@4471f216]
2020-11-25 21:10:22,951 DEBUG  [main] EnumType: Using NAMED-based conversion for Enum com.sf.back.entities.Kind
2020-11-25 21:10:22,962 DEBUG  [main] EnumType: Using NAMED-based conversion for Enum com.sf.back.entities.Kind
2020-11-25 21:10:23,005 DEBUG  [main] TypeConfiguration$Scope: Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@365ad794] to SessionFactoryImpl [org.hibernate.internal.SessionFactoryImpl@5dcbdcb9]
2020-11-25 21:10:23,005 DEBUG  [main] EnumType: Using NAMED-based conversion for Enum com.sf.back.entities.Kind
2020-11-25 21:10:23,007 DEBUG  [main] EnumType: Using NAMED-based conversion for Enum com.sf.back.entities.Kind
2020-11-25 21:10:23,009 DEBUG  [main] EnumType: Using NAMED-based conversion for Enum com.sf.back.entities.Kind
2020-11-25 21:10:23,009 DEBUG  [main] EnumType: Using NAMED-based conversion for Enum com.sf.back.entities.Kind
2020-11-25 21:10:23,019 DEBUG  [main] EnumType: Using NAMED-based conversion for Enum com.sf.back.entities.Kind
2020-11-25 21:10:23,019 DEBUG  [main] EnumType: Using NAMED-based conversion for Enum com.sf.back.entities.Kind
2020-11-25 21:10:23,026 DEBUG  [main] EnumType: Using NAMED-based conversion for Enum com.sf.back.entities.Kind
2020-11-25 21:10:23,036 TRACE  [main] TypeConfiguration$Scope: Handling #sessionFactoryCreated from [org.hibernate.internal.SessionFactoryImpl@5dcbdcb9] for TypeConfiguration
2020-11-25 21:10:23,262 WARN   [main] JpaBaseConfiguration$JpaWebConfiguration: spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2020-11-25 21:10:23,448 WARN   [main] GroovyTemplateAutoConfiguration: Cannot find template location: classpath:/templates/ (please add some templates, check your Groovy configuration, or set spring.groovy.template.check-template-location=false)
2020-11-25 21:10:23,513 TRACE  [main] BasicBinder: binding parameter [1] as [BLOB] - [[70, 105, 110, 100, 32, 97, 108, 108, 32, 114, 111, 111, 116, 115, 32, 111, 102, 32, 103, 105, 118, 101, 110, 32, 112, 111, 108, 121, 110, 111, 109, 105, 97, 108]]
2020-11-25 21:10:23,513 TRACE  [main] BasicBinder: binding parameter [2] as [BOOLEAN] - [false]
2020-11-25 21:10:23,514 TRACE  [main] BasicBinder: binding parameter [3] as [VARCHAR] - [POLYNOMIAL]
2020-11-25 21:10:23,514 TRACE  [main] BasicBinder: binding parameter [4] as [INTEGER] - [1]
2020-11-25 21:10:23,514 TRACE  [main] BasicBinder: binding parameter [5] as [BIGINT] - [null]
2020-11-25 21:10:23,514 TRACE  [main] BasicBinder: binding parameter [6] as [INTEGER] - [6]
2020-11-25 21:10:23,519 TRACE  [main] BasicBinder: binding parameter [1] as [BLOB] - [null]
2020-11-25 21:10:23,520 TRACE  [main] BasicBinder: binding parameter [2] as [DOUBLE] - [1.0]
2020-11-25 21:10:23,520 TRACE  [main] BasicBinder: binding parameter [3] as [INTEGER] - [0]
2020-11-25 21:10:23,521 TRACE  [main] BasicBinder: binding parameter [4] as [BOOLEAN] - [true]
2020-11-25 21:10:23,521 TRACE  [main] BasicBinder: binding parameter [5] as [INTEGER] - [0]
2020-11-25 21:10:23,522 TRACE  [main] BasicBinder: binding parameter [6] as [BIGINT] - [1]
2020-11-25 21:10:23,525 TRACE  [main] BasicBinder: binding parameter [1] as [BLOB] - [null]
2020-11-25 21:10:23,526 TRACE  [main] BasicBinder: binding parameter [2] as [DOUBLE] - [2.0]
2020-11-25 21:10:23,526 TRACE  [main] BasicBinder: binding parameter [3] as [INTEGER] - [0]
2020-11-25 21:10:23,526 TRACE  [main] BasicBinder: binding parameter [4] as [BOOLEAN] - [true]
2020-11-25 21:10:23,527 TRACE  [main] BasicBinder: binding parameter [5] as [INTEGER] - [1]
2020-11-25 21:10:23,529 TRACE  [main] BasicBinder: binding parameter [6] as [BIGINT] - [1]
2020-11-25 21:10:23,530 TRACE  [main] BasicBinder: binding parameter [1] as [BLOB] - [null]
2020-11-25 21:10:23,530 TRACE  [main] BasicBinder: binding parameter [2] as [DOUBLE] - [1.0]
2020-11-25 21:10:23,530 TRACE  [main] BasicBinder: binding parameter [3] as [INTEGER] - [0]
2020-11-25 21:10:23,530 TRACE  [main] BasicBinder: binding parameter [4] as [BOOLEAN] - [true]
2020-11-25 21:10:23,531 TRACE  [main] BasicBinder: binding parameter [5] as [INTEGER] - [2]
2020-11-25 21:10:23,531 TRACE  [main] BasicBinder: binding parameter [6] as [BIGINT] - [1]
2020-11-25 21:10:23,532 TRACE  [main] BasicBinder: binding parameter [1] as [BLOB] - [null]
2020-11-25 21:10:23,532 TRACE  [main] BasicBinder: binding parameter [2] as [DOUBLE] - [1.0]
2020-11-25 21:10:23,532 TRACE  [main] BasicBinder: binding parameter [3] as [INTEGER] - [0]
2020-11-25 21:10:23,532 TRACE  [main] BasicBinder: binding parameter [4] as [BOOLEAN] - [false]
2020-11-25 21:10:23,532 TRACE  [main] BasicBinder: binding parameter [5] as [INTEGER] - [0]
2020-11-25 21:10:23,532 TRACE  [main] BasicBinder: binding parameter [6] as [BIGINT] - [1]
2020-11-25 21:10:23,536 TRACE  [main] BasicBinder: binding parameter [1] as [BLOB] - [null]
2020-11-25 21:10:23,536 TRACE  [main] BasicBinder: binding parameter [2] as [DOUBLE] - [1.0]
2020-11-25 21:10:23,536 TRACE  [main] BasicBinder: binding parameter [3] as [INTEGER] - [0]
2020-11-25 21:10:23,536 TRACE  [main] BasicBinder: binding parameter [4] as [BOOLEAN] - [false]
2020-11-25 21:10:23,536 TRACE  [main] BasicBinder: binding parameter [5] as [INTEGER] - [1]
2020-11-25 21:10:23,536 TRACE  [main] BasicBinder: binding parameter [6] as [BIGINT] - [1]
2020-11-25 21:10:24,146 TRACE  [SpringContextShutdownHook] TypeConfiguration$Scope: Handling #sessionFactoryClosed from [org.hibernate.internal.SessionFactoryImpl@55574295] for TypeConfiguration
2020-11-25 21:10:24,146 DEBUG  [SpringContextShutdownHook] TypeConfiguration$Scope: Un-scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration$Scope@b7fa78d] from SessionFactory [org.hibernate.internal.SessionFactoryImpl@55574295]
2020-11-25 21:10:24,147 TRACE  [SpringContextShutdownHook] TypeConfiguration$Scope: Handling #sessionFactoryClosed from [org.hibernate.internal.SessionFactoryImpl@5dcbdcb9] for TypeConfiguration
2020-11-25 21:10:24,147 DEBUG  [SpringContextShutdownHook] TypeConfiguration$Scope: Un-scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration$Scope@597b9cc0] from SessionFactory [org.hibernate.internal.SessionFactoryImpl@5dcbdcb9]
2020-11-25 21:10:24,154 TRACE  [SpringContextShutdownHook] TypeConfiguration$Scope: Handling #sessionFactoryClosed from [org.hibernate.internal.SessionFactoryImpl@33d75081] for TypeConfiguration
2020-11-25 21:10:24,154 DEBUG  [SpringContextShutdownHook] TypeConfiguration$Scope: Un-scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration$Scope@718990d7] from SessionFactory [org.hibernate.internal.SessionFactoryImpl@33d75081]
2020-11-25 21:11:16,613 ERROR  [main] [/]: Exception sending context initialized event to listener instance of class [com.vaadin.flow.spring.VaadinServletContextInitializer$DevModeServletContextListener]
java.lang.IllegalArgumentException: Unsupported class file major version 59
	at net.bytebuddy.jar.asm.ClassReader.<init>(ClassReader.java:195)
	at net.bytebuddy.jar.asm.ClassReader.<init>(ClassReader.java:176)
	at net.bytebuddy.jar.asm.ClassReader.<init>(ClassReader.java:162)
	at net.bytebuddy.jar.asm.ClassReader.<init>(ClassReader.java:283)
	at com.vaadin.flow.server.frontend.scanner.FrontendDependencies.visitClass(FrontendDependencies.java:505)
	at com.vaadin.flow.server.frontend.scanner.FrontendDependencies.visitClass(FrontendDependencies.java:517)
	at com.vaadin.flow.server.frontend.scanner.FrontendDependencies.visitClass(FrontendDependencies.java:517)
	at com.vaadin.flow.server.frontend.scanner.FrontendDependencies.visitClass(FrontendDependencies.java:517)
	at com.vaadin.flow.server.frontend.scanner.FrontendDependencies.visitClass(FrontendDependencies.java:517)
	at com.vaadin.flow.server.frontend.scanner.FrontendDependencies.visitClass(FrontendDependencies.java:517)
	at com.vaadin.flow.server.frontend.scanner.FrontendDependencies.visitClass(FrontendDependencies.java:517)
	at com.vaadin.flow.server.frontend.scanner.FrontendDependencies.visitClass(FrontendDependencies.java:517)
	at com.vaadin.flow.server.frontend.scanner.FrontendDependencies.visitClass(FrontendDependencies.java:517)
	at com.vaadin.flow.server.frontend.scanner.FrontendDependencies.collectEndpoints(FrontendDependencies.java:293)
	at com.vaadin.flow.server.frontend.scanner.FrontendDependencies.computeEndpoints(FrontendDependencies.java:276)
	at com.vaadin.flow.server.frontend.scanner.FrontendDependencies.<init>(FrontendDependencies.java:154)
	at com.vaadin.flow.server.frontend.NodeTasks.<init>(NodeTasks.java:319)
	at com.vaadin.flow.server.frontend.NodeTasks.<init>(NodeTasks.java:43)
	at com.vaadin.flow.server.frontend.NodeTasks$Builder.build(NodeTasks.java:149)
	at com.vaadin.flow.server.startup.DevModeInitializer.initDevModeHandler(DevModeInitializer.java:322)
	at com.vaadin.flow.spring.VaadinServletContextInitializer$DevModeServletContextListener.contextInitialized(VaadinServletContextInitializer.java:323)
	at org.apache.catalina.core.StandardContext.listenerStart(StandardContext.java:4683)
	at org.apache.catalina.core.StandardContext.startInternal(StandardContext.java:5146)
	at org.apache.catalina.util.LifecycleBase.start(LifecycleBase.java:183)
	at org.apache.catalina.core.ContainerBase$StartChild.call(ContainerBase.java:1384)
	at org.apache.catalina.core.ContainerBase$StartChild.call(ContainerBase.java:1374)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at org.apache.tomcat.util.threads.InlineExecutorService.execute(InlineExecutorService.java:75)
	at java.base/java.util.concurrent.AbstractExecutorService.submit(AbstractExecutorService.java:140)
	at org.apache.catalina.core.ContainerBase.startInternal(ContainerBase.java:909)
	at org.apache.catalina.core.StandardHost.startInternal(StandardHost.java:841)
	at org.apache.catalina.util.LifecycleBase.start(LifecycleBase.java:183)
	at org.apache.catalina.core.ContainerBase$StartChild.call(ContainerBase.java:1384)
	at org.apache.catalina.core.ContainerBase$StartChild.call(ContainerBase.java:1374)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at org.apache.tomcat.util.threads.InlineExecutorService.execute(InlineExecutorService.java:75)
	at java.base/java.util.concurrent.AbstractExecutorService.submit(AbstractExecutorService.java:140)
	at org.apache.catalina.core.ContainerBase.startInternal(ContainerBase.java:909)
	at org.apache.catalina.core.StandardEngine.startInternal(StandardEngine.java:262)
	at org.apache.catalina.util.LifecycleBase.start(LifecycleBase.java:183)
	at org.apache.catalina.core.StandardService.startInternal(StandardService.java:421)
	at org.apache.catalina.util.LifecycleBase.start(LifecycleBase.java:183)
	at org.apache.catalina.core.StandardServer.startInternal(StandardServer.java:930)
	at org.apache.catalina.util.LifecycleBase.start(LifecycleBase.java:183)
	at org.apache.catalina.startup.Tomcat.start(Tomcat.java:459)
	at org.springframework.boot.web.embedded.tomcat.TomcatWebServer.initialize(TomcatWebServer.java:107)
	at org.springframework.boot.web.embedded.tomcat.TomcatWebServer.<init>(TomcatWebServer.java:88)
	at org.springframework.boot.web.embedded.tomcat.TomcatServletWebServerFactory.getTomcatWebServer(TomcatServletWebServerFactory.java:438)
	at org.springframework.boot.web.embedded.tomcat.TomcatServletWebServerFactory.getWebServer(TomcatServletWebServerFactory.java:191)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.createWebServer(ServletWebServerApplicationContext.java:180)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.onRefresh(ServletWebServerApplicationContext.java:153)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:544)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.refresh(ServletWebServerApplicationContext.java:141)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:747)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:397)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:315)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1226)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1215)
	at com.sf.VaadinMathSolverApplication.main(VaadinMathSolverApplication.java:23)
2020-11-25 21:11:16,656 ERROR  [main] StandardContext: One or more listeners failed to start. Full details will be found in the appropriate container log file
2020-11-25 21:11:16,657 ERROR  [main] StandardContext: Context [] startup failed due to previous errors
2020-11-25 21:11:16,743 WARN   [main] AnnotationConfigServletWebServerApplicationContext: Exception encountered during context initialization - cancelling refresh attempt: org.springframework.context.ApplicationContextException: Unable to start web server; nested exception is org.springframework.boot.web.server.WebServerException: Unable to start embedded Tomcat
2020-11-25 21:11:16,765 ERROR  [main] SpringApplication: Application run failed
org.springframework.context.ApplicationContextException: Unable to start web server; nested exception is org.springframework.boot.web.server.WebServerException: Unable to start embedded Tomcat
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.onRefresh(ServletWebServerApplicationContext.java:156)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:544)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.refresh(ServletWebServerApplicationContext.java:141)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:747)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:397)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:315)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1226)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1215)
	at com.sf.VaadinMathSolverApplication.main(VaadinMathSolverApplication.java:23)
Caused by: org.springframework.boot.web.server.WebServerException: Unable to start embedded Tomcat
	at org.springframework.boot.web.embedded.tomcat.TomcatWebServer.initialize(TomcatWebServer.java:126)
	at org.springframework.boot.web.embedded.tomcat.TomcatWebServer.<init>(TomcatWebServer.java:88)
	at org.springframework.boot.web.embedded.tomcat.TomcatServletWebServerFactory.getTomcatWebServer(TomcatServletWebServerFactory.java:438)
	at org.springframework.boot.web.embedded.tomcat.TomcatServletWebServerFactory.getWebServer(TomcatServletWebServerFactory.java:191)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.createWebServer(ServletWebServerApplicationContext.java:180)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.onRefresh(ServletWebServerApplicationContext.java:153)
	... 8 common frames omitted
Caused by: java.lang.IllegalStateException: StandardEngine[Tomcat].StandardHost[localhost].TomcatEmbeddedContext[] failed to start
	at org.springframework.boot.web.embedded.tomcat.TomcatWebServer.rethrowDeferredStartupExceptions(TomcatWebServer.java:171)
	at org.springframework.boot.web.embedded.tomcat.TomcatWebServer.initialize(TomcatWebServer.java:110)
	... 13 common frames omitted
2020-11-25 21:14:37,512 WARN   [main] dev-updater: Use the './' prefix for files in JAR files: 'flow-component-renderer.js', please update your component.
2020-11-25 21:14:51,814 WARN   [main] AnnotationConfigServletWebServerApplicationContext: Exception encountered during context initialization - cancelling refresh attempt: org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'entityManagerFactory' defined in class path resource [org/springframework/boot/autoconfigure/orm/jpa/HibernateJpaConfiguration.class]: Invocation of init method failed; nested exception is org.hibernate.AnnotationException: No identifier specified for entity: com.sf.back.entities.Matrix
2020-11-25 21:14:51,837 WARN   [main] WebappClassLoaderBase: The web application [ROOT] appears to have started a thread named [Thread-4] but has failed to stop it. This is very likely to create a memory leak. Stack trace of thread:
 java.net.DualStackPlainSocketImpl.accept0(Native Method)
 java.net.DualStackPlainSocketImpl.socketAccept(DualStackPlainSocketImpl.java:131)
 java.net.AbstractPlainSocketImpl.accept(AbstractPlainSocketImpl.java:409)
 java.net.PlainSocketImpl.accept(PlainSocketImpl.java:199)
 java.net.ServerSocket.implAccept(ServerSocket.java:545)
 java.net.ServerSocket.accept(ServerSocket.java:513)
 com.vaadin.flow.server.DevServerWatchDog$WatchDogServer.run(DevServerWatchDog.java:58)
 java.lang.Thread.run(Thread.java:748)
2020-11-25 21:14:51,838 WARN   [main] WebappClassLoaderBase: The web application [ROOT] appears to have started a thread named [webpack] but has failed to stop it. This is very likely to create a memory leak. Stack trace of thread:
 java.io.FileInputStream.readBytes(Native Method)
 java.io.FileInputStream.read(FileInputStream.java:255)
 java.io.BufferedInputStream.read1(BufferedInputStream.java:284)
 java.io.BufferedInputStream.read(BufferedInputStream.java:345)
 sun.nio.cs.StreamDecoder.readBytes(StreamDecoder.java:284)
 sun.nio.cs.StreamDecoder.implRead(StreamDecoder.java:326)
 sun.nio.cs.StreamDecoder.read(StreamDecoder.java:178)
 java.io.InputStreamReader.read(InputStreamReader.java:184)
 java.io.BufferedReader.fill(BufferedReader.java:161)
 java.io.BufferedReader.readLine(BufferedReader.java:324)
 java.io.BufferedReader.readLine(BufferedReader.java:389)
 com.vaadin.flow.server.DevModeHandler.readLinesLoop(DevModeHandler.java:450)
 com.vaadin.flow.server.DevModeHandler.lambda$logStream$1(DevModeHandler.java:429)
 com.vaadin.flow.server.DevModeHandler$$Lambda$561/2122810476.run(Unknown Source)
 java.lang.Thread.run(Thread.java:748)
2020-11-25 21:14:51,855 ERROR  [main] SpringApplication: Application run failed
org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'entityManagerFactory' defined in class path resource [org/springframework/boot/autoconfigure/orm/jpa/HibernateJpaConfiguration.class]: Invocation of init method failed; nested exception is org.hibernate.AnnotationException: No identifier specified for entity: com.sf.back.entities.Matrix
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1803)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:595)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:517)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:323)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:222)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:321)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:202)
	at org.springframework.context.support.AbstractApplicationContext.getBean(AbstractApplicationContext.java:1108)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:868)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:550)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.refresh(ServletWebServerApplicationContext.java:141)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:747)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:397)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:315)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1226)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1215)
	at com.sf.VaadinMathSolverApplication.main(VaadinMathSolverApplication.java:23)
Caused by: org.hibernate.AnnotationException: No identifier specified for entity: com.sf.back.entities.Matrix
	at org.hibernate.cfg.InheritanceState.determineDefaultAccessType(InheritanceState.java:266)
	at org.hibernate.cfg.InheritanceState.getElementsToProcess(InheritanceState.java:211)
	at org.hibernate.cfg.AnnotationBinder.bindClass(AnnotationBinder.java:781)
	at org.hibernate.boot.model.source.internal.annotations.AnnotationMetadataSourceProcessorImpl.processEntityHierarchies(AnnotationMetadataSourceProcessorImpl.java:254)
	at org.hibernate.boot.model.process.spi.MetadataBuildingProcess$1.processEntityHierarchies(MetadataBuildingProcess.java:230)
	at org.hibernate.boot.model.process.spi.MetadataBuildingProcess.complete(MetadataBuildingProcess.java:273)
	at org.hibernate.jpa.boot.internal.EntityManagerFactoryBuilderImpl.metadata(EntityManagerFactoryBuilderImpl.java:1214)
	at org.hibernate.jpa.boot.internal.EntityManagerFactoryBuilderImpl.build(EntityManagerFactoryBuilderImpl.java:1245)
	at org.springframework.orm.jpa.vendor.SpringHibernateJpaPersistenceProvider.createContainerEntityManagerFactory(SpringHibernateJpaPersistenceProvider.java:58)
	at org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean.createNativeEntityManagerFactory(LocalContainerEntityManagerFactoryBean.java:365)
	at org.springframework.orm.jpa.AbstractEntityManagerFactoryBean.buildNativeEntityManagerFactory(AbstractEntityManagerFactoryBean.java:391)
	at org.springframework.orm.jpa.AbstractEntityManagerFactoryBean.afterPropertiesSet(AbstractEntityManagerFactoryBean.java:378)
	at org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean.afterPropertiesSet(LocalContainerEntityManagerFactoryBean.java:341)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1862)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1799)
	... 16 common frames omitted
2020-11-25 21:15:54,045 WARN   [main] dev-updater: Use the './' prefix for files in JAR files: 'flow-component-renderer.js', please update your component.
2020-11-25 21:16:08,083 WARN   [main] AnnotationConfigServletWebServerApplicationContext: Exception encountered during context initialization - cancelling refresh attempt: org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'entityManagerFactory' defined in class path resource [org/springframework/boot/autoconfigure/orm/jpa/HibernateJpaConfiguration.class]: Invocation of init method failed; nested exception is org.hibernate.AnnotationException: No identifier specified for entity: com.sf.back.entities.Matrix
2020-11-25 21:16:08,123 WARN   [main] WebappClassLoaderBase: The web application [ROOT] appears to have started a thread named [Thread-4] but has failed to stop it. This is very likely to create a memory leak. Stack trace of thread:
 java.net.DualStackPlainSocketImpl.accept0(Native Method)
 java.net.DualStackPlainSocketImpl.socketAccept(DualStackPlainSocketImpl.java:131)
 java.net.AbstractPlainSocketImpl.accept(AbstractPlainSocketImpl.java:409)
 java.net.PlainSocketImpl.accept(PlainSocketImpl.java:199)
 java.net.ServerSocket.implAccept(ServerSocket.java:545)
 java.net.ServerSocket.accept(ServerSocket.java:513)
 com.vaadin.flow.server.DevServerWatchDog$WatchDogServer.run(DevServerWatchDog.java:58)
 java.lang.Thread.run(Thread.java:748)
2020-11-25 21:16:08,124 WARN   [main] WebappClassLoaderBase: The web application [ROOT] appears to have started a thread named [webpack] but has failed to stop it. This is very likely to create a memory leak. Stack trace of thread:
 java.io.FileInputStream.readBytes(Native Method)
 java.io.FileInputStream.read(FileInputStream.java:255)
 java.io.BufferedInputStream.read1(BufferedInputStream.java:284)
 java.io.BufferedInputStream.read(BufferedInputStream.java:345)
 sun.nio.cs.StreamDecoder.readBytes(StreamDecoder.java:284)
 sun.nio.cs.StreamDecoder.implRead(StreamDecoder.java:326)
 sun.nio.cs.StreamDecoder.read(StreamDecoder.java:178)
 java.io.InputStreamReader.read(InputStreamReader.java:184)
 java.io.BufferedReader.fill(BufferedReader.java:161)
 java.io.BufferedReader.readLine(BufferedReader.java:324)
 java.io.BufferedReader.readLine(BufferedReader.java:389)
 com.vaadin.flow.server.DevModeHandler.readLinesLoop(DevModeHandler.java:450)
 com.vaadin.flow.server.DevModeHandler.lambda$logStream$1(DevModeHandler.java:429)
 com.vaadin.flow.server.DevModeHandler$$Lambda$560/2003289235.run(Unknown Source)
 java.lang.Thread.run(Thread.java:748)
2020-11-25 21:16:08,141 ERROR  [main] SpringApplication: Application run failed
org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'entityManagerFactory' defined in class path resource [org/springframework/boot/autoconfigure/orm/jpa/HibernateJpaConfiguration.class]: Invocation of init method failed; nested exception is org.hibernate.AnnotationException: No identifier specified for entity: com.sf.back.entities.Matrix
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1803)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:595)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:517)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:323)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:222)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:321)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:202)
	at org.springframework.context.support.AbstractApplicationContext.getBean(AbstractApplicationContext.java:1108)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:868)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:550)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.refresh(ServletWebServerApplicationContext.java:141)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:747)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:397)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:315)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1226)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1215)
	at com.sf.VaadinMathSolverApplication.main(VaadinMathSolverApplication.java:23)
Caused by: org.hibernate.AnnotationException: No identifier specified for entity: com.sf.back.entities.Matrix
	at org.hibernate.cfg.InheritanceState.determineDefaultAccessType(InheritanceState.java:266)
	at org.hibernate.cfg.InheritanceState.getElementsToProcess(InheritanceState.java:211)
	at org.hibernate.cfg.AnnotationBinder.bindClass(AnnotationBinder.java:781)
	at org.hibernate.boot.model.source.internal.annotations.AnnotationMetadataSourceProcessorImpl.processEntityHierarchies(AnnotationMetadataSourceProcessorImpl.java:254)
	at org.hibernate.boot.model.process.spi.MetadataBuildingProcess$1.processEntityHierarchies(MetadataBuildingProcess.java:230)
	at org.hibernate.boot.model.process.spi.MetadataBuildingProcess.complete(MetadataBuildingProcess.java:273)
	at org.hibernate.jpa.boot.internal.EntityManagerFactoryBuilderImpl.metadata(EntityManagerFactoryBuilderImpl.java:1214)
	at org.hibernate.jpa.boot.internal.EntityManagerFactoryBuilderImpl.build(EntityManagerFactoryBuilderImpl.java:1245)
	at org.springframework.orm.jpa.vendor.SpringHibernateJpaPersistenceProvider.createContainerEntityManagerFactory(SpringHibernateJpaPersistenceProvider.java:58)
	at org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean.createNativeEntityManagerFactory(LocalContainerEntityManagerFactoryBean.java:365)
	at org.springframework.orm.jpa.AbstractEntityManagerFactoryBean.buildNativeEntityManagerFactory(AbstractEntityManagerFactoryBean.java:391)
	at org.springframework.orm.jpa.AbstractEntityManagerFactoryBean.afterPropertiesSet(AbstractEntityManagerFactoryBean.java:378)
	at org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean.afterPropertiesSet(LocalContainerEntityManagerFactoryBean.java:341)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1862)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1799)
	... 16 common frames omitted
2020-11-25 21:17:26,435 DEBUG  [main] BasicTypeRegistry: Adding type registration boolean -> org.hibernate.type.BooleanType@2e1eb85f
2020-11-25 21:17:26,476 DEBUG  [main] BasicTypeRegistry: Adding type registration boolean -> org.hibernate.type.BooleanType@2e1eb85f
2020-11-25 21:17:26,477 DEBUG  [main] BasicTypeRegistry: Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@2e1eb85f
2020-11-25 21:17:26,478 DEBUG  [main] BasicTypeRegistry: Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@1283ca23
2020-11-25 21:17:26,479 DEBUG  [main] BasicTypeRegistry: Adding type registration true_false -> org.hibernate.type.TrueFalseType@733e6df7
2020-11-25 21:17:26,480 DEBUG  [main] BasicTypeRegistry: Adding type registration yes_no -> org.hibernate.type.YesNoType@4ef4f627
2020-11-25 21:17:26,482 DEBUG  [main] BasicTypeRegistry: Adding type registration byte -> org.hibernate.type.ByteType@1cbc5693
2020-11-25 21:17:26,483 DEBUG  [main] BasicTypeRegistry: Adding type registration byte -> org.hibernate.type.ByteType@1cbc5693
2020-11-25 21:17:26,484 DEBUG  [main] BasicTypeRegistry: Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@1cbc5693
2020-11-25 21:17:26,487 DEBUG  [main] BasicTypeRegistry: Adding type registration character -> org.hibernate.type.CharacterType@ab2e6d2
2020-11-25 21:17:26,487 DEBUG  [main] BasicTypeRegistry: Adding type registration char -> org.hibernate.type.CharacterType@ab2e6d2
2020-11-25 21:17:26,487 DEBUG  [main] BasicTypeRegistry: Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@ab2e6d2
2020-11-25 21:17:26,489 DEBUG  [main] BasicTypeRegistry: Adding type registration short -> org.hibernate.type.ShortType@674da77b
2020-11-25 21:17:26,490 DEBUG  [main] BasicTypeRegistry: Adding type registration short -> org.hibernate.type.ShortType@674da77b
2020-11-25 21:17:26,491 DEBUG  [main] BasicTypeRegistry: Adding type registration java.lang.Short -> org.hibernate.type.ShortType@674da77b
2020-11-25 21:17:26,493 DEBUG  [main] BasicTypeRegistry: Adding type registration integer -> org.hibernate.type.IntegerType@477021ee
2020-11-25 21:17:26,493 DEBUG  [main] BasicTypeRegistry: Adding type registration int -> org.hibernate.type.IntegerType@477021ee
2020-11-25 21:17:26,495 DEBUG  [main] BasicTypeRegistry: Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@477021ee
2020-11-25 21:17:26,502 DEBUG  [main] BasicTypeRegistry: Adding type registration long -> org.hibernate.type.LongType@2ba42204
2020-11-25 21:17:26,502 DEBUG  [main] BasicTypeRegistry: Adding type registration long -> org.hibernate.type.LongType@2ba42204
2020-11-25 21:17:26,502 DEBUG  [main] BasicTypeRegistry: Adding type registration java.lang.Long -> org.hibernate.type.LongType@2ba42204
2020-11-25 21:17:26,505 DEBUG  [main] BasicTypeRegistry: Adding type registration float -> org.hibernate.type.FloatType@5b35c7d
2020-11-25 21:17:26,506 DEBUG  [main] BasicTypeRegistry: Adding type registration float -> org.hibernate.type.FloatType@5b35c7d
2020-11-25 21:17:26,506 DEBUG  [main] BasicTypeRegistry: Adding type registration java.lang.Float -> org.hibernate.type.FloatType@5b35c7d
2020-11-25 21:17:26,509 DEBUG  [main] BasicTypeRegistry: Adding type registration double -> org.hibernate.type.DoubleType@40bf4386
2020-11-25 21:17:26,509 DEBUG  [main] BasicTypeRegistry: Adding type registration double -> org.hibernate.type.DoubleType@40bf4386
2020-11-25 21:17:26,510 DEBUG  [main] BasicTypeRegistry: Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@40bf4386
2020-11-25 21:17:26,511 DEBUG  [main] BasicTypeRegistry: Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@481b2f10
2020-11-25 21:17:26,512 DEBUG  [main] BasicTypeRegistry: Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@481b2f10
2020-11-25 21:17:26,514 DEBUG  [main] BasicTypeRegistry: Adding type registration big_integer -> org.hibernate.type.BigIntegerType@624b523
2020-11-25 21:17:26,514 DEBUG  [main] BasicTypeRegistry: Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@624b523
2020-11-25 21:17:26,516 DEBUG  [main] BasicTypeRegistry: Adding type registration string -> org.hibernate.type.StringType@7634f2b
2020-11-25 21:17:26,517 DEBUG  [main] BasicTypeRegistry: Adding type registration java.lang.String -> org.hibernate.type.StringType@7634f2b
2020-11-25 21:17:26,518 DEBUG  [main] BasicTypeRegistry: Adding type registration nstring -> org.hibernate.type.StringNVarcharType@4fba8eec
2020-11-25 21:17:26,521 DEBUG  [main] BasicTypeRegistry: Adding type registration ncharacter -> org.hibernate.type.CharacterNCharType@681c0ae6
2020-11-25 21:17:26,523 DEBUG  [main] BasicTypeRegistry: Adding type registration url -> org.hibernate.type.UrlType@7459a21e
2020-11-25 21:17:26,524 DEBUG  [main] BasicTypeRegistry: Adding type registration java.net.URL -> org.hibernate.type.UrlType@7459a21e
2020-11-25 21:17:26,527 DEBUG  [main] BasicTypeRegistry: Adding type registration Duration -> org.hibernate.type.DurationType@739265f1
2020-11-25 21:17:26,528 DEBUG  [main] BasicTypeRegistry: Adding type registration java.time.Duration -> org.hibernate.type.DurationType@739265f1
2020-11-25 21:17:26,530 DEBUG  [main] BasicTypeRegistry: Adding type registration Instant -> org.hibernate.type.InstantType@f2d890c
2020-11-25 21:17:26,530 DEBUG  [main] BasicTypeRegistry: Adding type registration java.time.Instant -> org.hibernate.type.InstantType@f2d890c
2020-11-25 21:17:26,533 DEBUG  [main] BasicTypeRegistry: Adding type registration LocalDateTime -> org.hibernate.type.LocalDateTimeType@19b07407
2020-11-25 21:17:26,533 DEBUG  [main] BasicTypeRegistry: Adding type registration java.time.LocalDateTime -> org.hibernate.type.LocalDateTimeType@19b07407
2020-11-25 21:17:26,536 DEBUG  [main] BasicTypeRegistry: Adding type registration LocalDate -> org.hibernate.type.LocalDateType@30aec673
2020-11-25 21:17:26,537 DEBUG  [main] BasicTypeRegistry: Adding type registration java.time.LocalDate -> org.hibernate.type.LocalDateType@30aec673
2020-11-25 21:17:26,539 DEBUG  [main] BasicTypeRegistry: Adding type registration LocalTime -> org.hibernate.type.LocalTimeType@58f31629
2020-11-25 21:17:26,540 DEBUG  [main] BasicTypeRegistry: Adding type registration java.time.LocalTime -> org.hibernate.type.LocalTimeType@58f31629
2020-11-25 21:17:26,542 DEBUG  [main] BasicTypeRegistry: Adding type registration OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@310a7859
2020-11-25 21:17:26,542 DEBUG  [main] BasicTypeRegistry: Adding type registration java.time.OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@310a7859
2020-11-25 21:17:26,544 DEBUG  [main] BasicTypeRegistry: Adding type registration OffsetTime -> org.hibernate.type.OffsetTimeType@52831a73
2020-11-25 21:17:26,545 DEBUG  [main] BasicTypeRegistry: Adding type registration java.time.OffsetTime -> org.hibernate.type.OffsetTimeType@52831a73
2020-11-25 21:17:26,549 DEBUG  [main] BasicTypeRegistry: Adding type registration ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@11d4d979
2020-11-25 21:17:26,550 DEBUG  [main] BasicTypeRegistry: Adding type registration java.time.ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@11d4d979
2020-11-25 21:17:26,554 DEBUG  [main] BasicTypeRegistry: Adding type registration date -> org.hibernate.type.DateType@70716259
2020-11-25 21:17:26,555 DEBUG  [main] BasicTypeRegistry: Adding type registration java.sql.Date -> org.hibernate.type.DateType@70716259
2020-11-25 21:17:26,559 DEBUG  [main] BasicTypeRegistry: Adding type registration time -> org.hibernate.type.TimeType@6c17c0f8
2020-11-25 21:17:26,559 DEBUG  [main] BasicTypeRegistry: Adding type registration java.sql.Time -> org.hibernate.type.TimeType@6c17c0f8
2020-11-25 21:17:26,561 DEBUG  [main] BasicTypeRegistry: Adding type registration timestamp -> org.hibernate.type.TimestampType@1e1237ab
2020-11-25 21:17:26,561 DEBUG  [main] BasicTypeRegistry: Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@1e1237ab
2020-11-25 21:17:26,562 DEBUG  [main] BasicTypeRegistry: Adding type registration java.util.Date -> org.hibernate.type.TimestampType@1e1237ab
2020-11-25 21:17:26,564 DEBUG  [main] BasicTypeRegistry: Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@f613067
2020-11-25 21:17:26,566 DEBUG  [main] BasicTypeRegistry: Adding type registration calendar -> org.hibernate.type.CalendarType@7b222230
2020-11-25 21:17:26,567 DEBUG  [main] BasicTypeRegistry: Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@7b222230
2020-11-25 21:17:26,567 DEBUG  [main] BasicTypeRegistry: Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@7b222230
2020-11-25 21:17:26,568 DEBUG  [main] BasicTypeRegistry: Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@172f4514
2020-11-25 21:17:26,571 DEBUG  [main] BasicTypeRegistry: Adding type registration locale -> org.hibernate.type.LocaleType@a54acec
2020-11-25 21:17:26,572 DEBUG  [main] BasicTypeRegistry: Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@a54acec
2020-11-25 21:17:26,574 DEBUG  [main] BasicTypeRegistry: Adding type registration currency -> org.hibernate.type.CurrencyType@41f3aaf1
2020-11-25 21:17:26,574 DEBUG  [main] BasicTypeRegistry: Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@41f3aaf1
2020-11-25 21:17:26,576 DEBUG  [main] BasicTypeRegistry: Adding type registration timezone -> org.hibernate.type.TimeZoneType@2eb60c71
2020-11-25 21:17:26,577 DEBUG  [main] BasicTypeRegistry: Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@2eb60c71
2020-11-25 21:17:26,580 DEBUG  [main] BasicTypeRegistry: Adding type registration class -> org.hibernate.type.ClassType@6a950a3b
2020-11-25 21:17:26,580 DEBUG  [main] BasicTypeRegistry: Adding type registration java.lang.Class -> org.hibernate.type.ClassType@6a950a3b
2020-11-25 21:17:26,582 DEBUG  [main] BasicTypeRegistry: Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@59303963
2020-11-25 21:17:26,582 DEBUG  [main] BasicTypeRegistry: Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@59303963
2020-11-25 21:17:26,583 DEBUG  [main] BasicTypeRegistry: Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@1320e68a
2020-11-25 21:17:26,585 DEBUG  [main] BasicTypeRegistry: Adding type registration binary -> org.hibernate.type.BinaryType@385d819
2020-11-25 21:17:26,586 DEBUG  [main] BasicTypeRegistry: Adding type registration byte[] -> org.hibernate.type.BinaryType@385d819
2020-11-25 21:17:26,586 DEBUG  [main] BasicTypeRegistry: Adding type registration [B -> org.hibernate.type.BinaryType@385d819
2020-11-25 21:17:26,588 DEBUG  [main] BasicTypeRegistry: Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@12d40609
2020-11-25 21:17:26,588 DEBUG  [main] BasicTypeRegistry: Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@12d40609
2020-11-25 21:17:26,589 DEBUG  [main] BasicTypeRegistry: Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@12d40609
2020-11-25 21:17:26,591 DEBUG  [main] BasicTypeRegistry: Adding type registration row_version -> org.hibernate.type.RowVersionType@46320c9a
2020-11-25 21:17:26,591 DEBUG  [main] BasicTypeRegistry: Adding type registration image -> org.hibernate.type.ImageType@353f472a
2020-11-25 21:17:26,593 DEBUG  [main] BasicTypeRegistry: Adding type registration characters -> org.hibernate.type.CharArrayType@23e3f5cd
2020-11-25 21:17:26,593 DEBUG  [main] BasicTypeRegistry: Adding type registration char[] -> org.hibernate.type.CharArrayType@23e3f5cd
2020-11-25 21:17:26,594 DEBUG  [main] BasicTypeRegistry: Adding type registration [C -> org.hibernate.type.CharArrayType@23e3f5cd
2020-11-25 21:17:26,596 DEBUG  [main] BasicTypeRegistry: Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@230a73f2
2020-11-25 21:17:26,596 DEBUG  [main] BasicTypeRegistry: Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@230a73f2
2020-11-25 21:17:26,596 DEBUG  [main] BasicTypeRegistry: Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@230a73f2
2020-11-25 21:17:26,597 DEBUG  [main] BasicTypeRegistry: Adding type registration text -> org.hibernate.type.TextType@798deee8
2020-11-25 21:17:26,599 DEBUG  [main] BasicTypeRegistry: Adding type registration ntext -> org.hibernate.type.NTextType@22d8f4ed
2020-11-25 21:17:26,601 DEBUG  [main] BasicTypeRegistry: Adding type registration blob -> org.hibernate.type.BlobType@267f9765
2020-11-25 21:17:26,601 DEBUG  [main] BasicTypeRegistry: Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@267f9765
2020-11-25 21:17:26,602 DEBUG  [main] BasicTypeRegistry: Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@7f3fc42f
2020-11-25 21:17:26,604 DEBUG  [main] BasicTypeRegistry: Adding type registration clob -> org.hibernate.type.ClobType@32a72c4
2020-11-25 21:17:26,605 DEBUG  [main] BasicTypeRegistry: Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@32a72c4
2020-11-25 21:17:26,607 DEBUG  [main] BasicTypeRegistry: Adding type registration nclob -> org.hibernate.type.NClobType@7a1a3468
2020-11-25 21:17:26,607 DEBUG  [main] BasicTypeRegistry: Adding type registration java.sql.NClob -> org.hibernate.type.NClobType@7a1a3468
2020-11-25 21:17:26,609 DEBUG  [main] BasicTypeRegistry: Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@629e8212
2020-11-25 21:17:26,610 DEBUG  [main] BasicTypeRegistry: Adding type registration materialized_nclob -> org.hibernate.type.MaterializedNClobType@4e424582
2020-11-25 21:17:26,612 DEBUG  [main] BasicTypeRegistry: Adding type registration serializable -> org.hibernate.type.SerializableType@6d963d70
2020-11-25 21:17:26,616 DEBUG  [main] BasicTypeRegistry: Adding type registration object -> org.hibernate.type.ObjectType@7135ce0a
2020-11-25 21:17:26,617 DEBUG  [main] BasicTypeRegistry: Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@7135ce0a
2020-11-25 21:17:26,618 DEBUG  [main] BasicTypeRegistry: Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@42ef042a
2020-11-25 21:17:26,618 DEBUG  [main] BasicTypeRegistry: Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@1df5c7e3
2020-11-25 21:17:26,618 DEBUG  [main] BasicTypeRegistry: Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@5e0c4f21
2020-11-25 21:17:26,618 DEBUG  [main] BasicTypeRegistry: Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@2c18a3ea
2020-11-25 21:17:26,619 DEBUG  [main] BasicTypeRegistry: Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@166c2c17
2020-11-25 21:17:26,619 DEBUG  [main] BasicTypeRegistry: Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@25953be6
2020-11-25 21:17:26,619 DEBUG  [main] BasicTypeRegistry: Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@19dc0d32
2020-11-25 21:17:26,620 DEBUG  [main] BasicTypeRegistry: Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@70b2fa10
2020-11-25 21:17:27,286 DEBUG  [main] TypeConfiguration$Scope: Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@11e71181] to MetadataBuildingContext [org.hibernate.boot.internal.MetadataBuildingContextRootImpl@342beaf6]
2020-11-25 21:17:27,487 DEBUG  [main] EnumType: Using NAMED-based conversion for Enum com.sf.back.entities.Kind
2020-11-25 21:17:27,552 DEBUG  [main] EnumType: Using NAMED-based conversion for Enum com.sf.back.entities.Kind
2020-11-25 21:17:27,647 DEBUG  [main] TypeConfiguration$Scope: Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@11e71181] to SessionFactoryImpl [org.hibernate.internal.SessionFactoryImpl@69ba3f4e]
2020-11-25 21:17:27,852 DEBUG  [main] EnumType: Using NAMED-based conversion for Enum com.sf.back.entities.Kind
2020-11-25 21:17:27,853 DEBUG  [main] EnumType: Using NAMED-based conversion for Enum com.sf.back.entities.Kind
2020-11-25 21:17:28,066 DEBUG  [main] EnumType: Using NAMED-based conversion for Enum com.sf.back.entities.Kind
2020-11-25 21:17:28,066 DEBUG  [main] EnumType: Using NAMED-based conversion for Enum com.sf.back.entities.Kind
2020-11-25 21:17:28,271 DEBUG  [main] EnumType: Using NAMED-based conversion for Enum com.sf.back.entities.Kind
2020-11-25 21:17:28,271 DEBUG  [main] EnumType: Using NAMED-based conversion for Enum com.sf.back.entities.Kind
2020-11-25 21:17:28,316 DEBUG  [main] EnumType: Using NAMED-based conversion for Enum com.sf.back.entities.Kind
2020-11-25 21:17:28,344 TRACE  [main] TypeConfiguration$Scope: Handling #sessionFactoryCreated from [org.hibernate.internal.SessionFactoryImpl@69ba3f4e] for TypeConfiguration
2020-11-25 21:17:28,922 WARN   [main] GlobalSettings: Dozer configuration file not found: dozer.properties.  Using defaults for all Dozer global properties.
2020-11-25 21:17:29,539 WARN   [main] JpaBaseConfiguration$JpaWebConfiguration: spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2020-11-25 21:17:30,763 WARN   [main] GroovyTemplateAutoConfiguration: Cannot find template location: classpath:/templates/ (please add some templates, check your Groovy configuration, or set spring.groovy.template.check-template-location=false)
2020-11-25 21:17:31,669 TRACE  [main] BasicBinder: binding parameter [1] as [BLOB] - [[70, 105, 110, 100, 32, 97, 108, 108, 32, 114, 111, 111, 116, 115, 32, 111, 102, 32, 103, 105, 118, 101, 110, 32, 112, 111, 108, 121, 110, 111, 109, 105, 97, 108]]
2020-11-25 21:17:31,671 TRACE  [main] BasicBinder: binding parameter [2] as [BOOLEAN] - [false]
2020-11-25 21:17:31,672 TRACE  [main] BasicBinder: binding parameter [3] as [VARCHAR] - [POLYNOMIAL]
2020-11-25 21:17:31,672 TRACE  [main] BasicBinder: binding parameter [4] as [INTEGER] - [1]
2020-11-25 21:17:31,674 TRACE  [main] BasicBinder: binding parameter [5] as [BIGINT] - [null]
2020-11-25 21:17:31,674 TRACE  [main] BasicBinder: binding parameter [6] as [INTEGER] - [6]
2020-11-25 21:17:31,687 TRACE  [main] BasicBinder: binding parameter [1] as [BLOB] - [null]
2020-11-25 21:17:31,688 TRACE  [main] BasicBinder: binding parameter [2] as [DOUBLE] - [1.0]
2020-11-25 21:17:31,689 TRACE  [main] BasicBinder: binding parameter [3] as [INTEGER] - [0]
2020-11-25 21:17:31,689 TRACE  [main] BasicBinder: binding parameter [4] as [BOOLEAN] - [true]
2020-11-25 21:17:31,689 TRACE  [main] BasicBinder: binding parameter [5] as [INTEGER] - [0]
2020-11-25 21:17:31,690 TRACE  [main] BasicBinder: binding parameter [6] as [BIGINT] - [1]
2020-11-25 21:17:31,692 TRACE  [main] BasicBinder: binding parameter [1] as [BLOB] - [null]
2020-11-25 21:17:31,692 TRACE  [main] BasicBinder: binding parameter [2] as [DOUBLE] - [2.0]
2020-11-25 21:17:31,692 TRACE  [main] BasicBinder: binding parameter [3] as [INTEGER] - [0]
2020-11-25 21:17:31,693 TRACE  [main] BasicBinder: binding parameter [4] as [BOOLEAN] - [true]
2020-11-25 21:17:31,693 TRACE  [main] BasicBinder: binding parameter [5] as [INTEGER] - [1]
2020-11-25 21:17:31,693 TRACE  [main] BasicBinder: binding parameter [6] as [BIGINT] - [1]
2020-11-25 21:17:31,694 TRACE  [main] BasicBinder: binding parameter [1] as [BLOB] - [null]
2020-11-25 21:17:31,695 TRACE  [main] BasicBinder: binding parameter [2] as [DOUBLE] - [1.0]
2020-11-25 21:17:31,695 TRACE  [main] BasicBinder: binding parameter [3] as [INTEGER] - [0]
2020-11-25 21:17:31,695 TRACE  [main] BasicBinder: binding parameter [4] as [BOOLEAN] - [true]
2020-11-25 21:17:31,712 TRACE  [main] BasicBinder: binding parameter [5] as [INTEGER] - [2]
2020-11-25 21:17:31,712 TRACE  [main] BasicBinder: binding parameter [6] as [BIGINT] - [1]
2020-11-25 21:17:31,714 TRACE  [main] BasicBinder: binding parameter [1] as [BLOB] - [null]
2020-11-25 21:17:31,714 TRACE  [main] BasicBinder: binding parameter [2] as [DOUBLE] - [1.0]
2020-11-25 21:17:31,715 TRACE  [main] BasicBinder: binding parameter [3] as [INTEGER] - [0]
2020-11-25 21:17:31,715 TRACE  [main] BasicBinder: binding parameter [4] as [BOOLEAN] - [false]
2020-11-25 21:17:31,715 TRACE  [main] BasicBinder: binding parameter [5] as [INTEGER] - [0]
2020-11-25 21:17:31,716 TRACE  [main] BasicBinder: binding parameter [6] as [BIGINT] - [1]
2020-11-25 21:17:31,717 TRACE  [main] BasicBinder: binding parameter [1] as [BLOB] - [null]
2020-11-25 21:17:31,718 TRACE  [main] BasicBinder: binding parameter [2] as [DOUBLE] - [1.0]
2020-11-25 21:17:31,718 TRACE  [main] BasicBinder: binding parameter [3] as [INTEGER] - [0]
2020-11-25 21:17:31,718 TRACE  [main] BasicBinder: binding parameter [4] as [BOOLEAN] - [false]
2020-11-25 21:17:31,718 TRACE  [main] BasicBinder: binding parameter [5] as [INTEGER] - [1]
2020-11-25 21:17:31,719 TRACE  [main] BasicBinder: binding parameter [6] as [BIGINT] - [1]
2020-11-25 21:17:36,346 DEBUG  [main] BasicTypeRegistry: Adding type registration boolean -> org.hibernate.type.BooleanType@2e1eb85f
2020-11-25 21:17:36,346 DEBUG  [main] BasicTypeRegistry: Adding type registration boolean -> org.hibernate.type.BooleanType@2e1eb85f
2020-11-25 21:17:36,347 DEBUG  [main] BasicTypeRegistry: Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@2e1eb85f
2020-11-25 21:17:36,348 DEBUG  [main] BasicTypeRegistry: Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@1283ca23
2020-11-25 21:17:36,348 DEBUG  [main] BasicTypeRegistry: Adding type registration true_false -> org.hibernate.type.TrueFalseType@733e6df7
2020-11-25 21:17:36,349 DEBUG  [main] BasicTypeRegistry: Adding type registration yes_no -> org.hibernate.type.YesNoType@4ef4f627
2020-11-25 21:17:36,349 DEBUG  [main] BasicTypeRegistry: Adding type registration byte -> org.hibernate.type.ByteType@1cbc5693
2020-11-25 21:17:36,350 DEBUG  [main] BasicTypeRegistry: Adding type registration byte -> org.hibernate.type.ByteType@1cbc5693
2020-11-25 21:17:36,350 DEBUG  [main] BasicTypeRegistry: Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@1cbc5693
2020-11-25 21:17:36,350 DEBUG  [main] BasicTypeRegistry: Adding type registration character -> org.hibernate.type.CharacterType@ab2e6d2
2020-11-25 21:17:36,350 DEBUG  [main] BasicTypeRegistry: Adding type registration char -> org.hibernate.type.CharacterType@ab2e6d2
2020-11-25 21:17:36,351 DEBUG  [main] BasicTypeRegistry: Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@ab2e6d2
2020-11-25 21:17:36,351 DEBUG  [main] BasicTypeRegistry: Adding type registration short -> org.hibernate.type.ShortType@674da77b
2020-11-25 21:17:36,351 DEBUG  [main] BasicTypeRegistry: Adding type registration short -> org.hibernate.type.ShortType@674da77b
2020-11-25 21:17:36,352 DEBUG  [main] BasicTypeRegistry: Adding type registration java.lang.Short -> org.hibernate.type.ShortType@674da77b
2020-11-25 21:17:36,353 DEBUG  [main] BasicTypeRegistry: Adding type registration integer -> org.hibernate.type.IntegerType@477021ee
2020-11-25 21:17:36,354 DEBUG  [main] BasicTypeRegistry: Adding type registration int -> org.hibernate.type.IntegerType@477021ee
2020-11-25 21:17:36,355 DEBUG  [main] BasicTypeRegistry: Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@477021ee
2020-11-25 21:17:36,355 DEBUG  [main] BasicTypeRegistry: Adding type registration long -> org.hibernate.type.LongType@2ba42204
2020-11-25 21:17:36,356 DEBUG  [main] BasicTypeRegistry: Adding type registration long -> org.hibernate.type.LongType@2ba42204
2020-11-25 21:17:36,356 DEBUG  [main] BasicTypeRegistry: Adding type registration java.lang.Long -> org.hibernate.type.LongType@2ba42204
2020-11-25 21:17:36,357 DEBUG  [main] BasicTypeRegistry: Adding type registration float -> org.hibernate.type.FloatType@5b35c7d
2020-11-25 21:17:36,357 DEBUG  [main] BasicTypeRegistry: Adding type registration float -> org.hibernate.type.FloatType@5b35c7d
2020-11-25 21:17:36,357 DEBUG  [main] BasicTypeRegistry: Adding type registration java.lang.Float -> org.hibernate.type.FloatType@5b35c7d
2020-11-25 21:17:36,357 DEBUG  [main] BasicTypeRegistry: Adding type registration double -> org.hibernate.type.DoubleType@40bf4386
2020-11-25 21:17:36,358 DEBUG  [main] BasicTypeRegistry: Adding type registration double -> org.hibernate.type.DoubleType@40bf4386
2020-11-25 21:17:36,358 DEBUG  [main] BasicTypeRegistry: Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@40bf4386
2020-11-25 21:17:36,359 DEBUG  [main] BasicTypeRegistry: Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@481b2f10
2020-11-25 21:17:36,359 DEBUG  [main] BasicTypeRegistry: Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@481b2f10
2020-11-25 21:17:36,360 DEBUG  [main] BasicTypeRegistry: Adding type registration big_integer -> org.hibernate.type.BigIntegerType@624b523
2020-11-25 21:17:36,360 DEBUG  [main] BasicTypeRegistry: Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@624b523
2020-11-25 21:17:36,360 DEBUG  [main] BasicTypeRegistry: Adding type registration string -> org.hibernate.type.StringType@7634f2b
2020-11-25 21:17:36,361 DEBUG  [main] BasicTypeRegistry: Adding type registration java.lang.String -> org.hibernate.type.StringType@7634f2b
2020-11-25 21:17:36,361 DEBUG  [main] BasicTypeRegistry: Adding type registration nstring -> org.hibernate.type.StringNVarcharType@4fba8eec
2020-11-25 21:17:36,362 DEBUG  [main] BasicTypeRegistry: Adding type registration ncharacter -> org.hibernate.type.CharacterNCharType@681c0ae6
2020-11-25 21:17:36,363 DEBUG  [main] BasicTypeRegistry: Adding type registration url -> org.hibernate.type.UrlType@7459a21e
2020-11-25 21:17:36,363 DEBUG  [main] BasicTypeRegistry: Adding type registration java.net.URL -> org.hibernate.type.UrlType@7459a21e
2020-11-25 21:17:36,363 DEBUG  [main] BasicTypeRegistry: Adding type registration Duration -> org.hibernate.type.DurationType@739265f1
2020-11-25 21:17:36,364 DEBUG  [main] BasicTypeRegistry: Adding type registration java.time.Duration -> org.hibernate.type.DurationType@739265f1
2020-11-25 21:17:36,364 DEBUG  [main] BasicTypeRegistry: Adding type registration Instant -> org.hibernate.type.InstantType@f2d890c
2020-11-25 21:17:36,365 DEBUG  [main] BasicTypeRegistry: Adding type registration java.time.Instant -> org.hibernate.type.InstantType@f2d890c
2020-11-25 21:17:36,365 DEBUG  [main] BasicTypeRegistry: Adding type registration LocalDateTime -> org.hibernate.type.LocalDateTimeType@19b07407
2020-11-25 21:17:36,366 DEBUG  [main] BasicTypeRegistry: Adding type registration java.time.LocalDateTime -> org.hibernate.type.LocalDateTimeType@19b07407
2020-11-25 21:17:36,366 DEBUG  [main] BasicTypeRegistry: Adding type registration LocalDate -> org.hibernate.type.LocalDateType@30aec673
2020-11-25 21:17:36,366 DEBUG  [main] BasicTypeRegistry: Adding type registration java.time.LocalDate -> org.hibernate.type.LocalDateType@30aec673
2020-11-25 21:17:36,367 DEBUG  [main] BasicTypeRegistry: Adding type registration LocalTime -> org.hibernate.type.LocalTimeType@58f31629
2020-11-25 21:17:36,367 DEBUG  [main] BasicTypeRegistry: Adding type registration java.time.LocalTime -> org.hibernate.type.LocalTimeType@58f31629
2020-11-25 21:17:36,367 DEBUG  [main] BasicTypeRegistry: Adding type registration OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@310a7859
2020-11-25 21:17:36,367 DEBUG  [main] BasicTypeRegistry: Adding type registration java.time.OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@310a7859
2020-11-25 21:17:36,367 DEBUG  [main] BasicTypeRegistry: Adding type registration OffsetTime -> org.hibernate.type.OffsetTimeType@52831a73
2020-11-25 21:17:36,368 DEBUG  [main] BasicTypeRegistry: Adding type registration java.time.OffsetTime -> org.hibernate.type.OffsetTimeType@52831a73
2020-11-25 21:17:36,368 DEBUG  [main] BasicTypeRegistry: Adding type registration ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@11d4d979
2020-11-25 21:17:36,368 DEBUG  [main] BasicTypeRegistry: Adding type registration java.time.ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@11d4d979
2020-11-25 21:17:36,368 DEBUG  [main] BasicTypeRegistry: Adding type registration date -> org.hibernate.type.DateType@70716259
2020-11-25 21:17:36,368 DEBUG  [main] BasicTypeRegistry: Adding type registration java.sql.Date -> org.hibernate.type.DateType@70716259
2020-11-25 21:17:36,369 DEBUG  [main] BasicTypeRegistry: Adding type registration time -> org.hibernate.type.TimeType@6c17c0f8
2020-11-25 21:17:36,369 DEBUG  [main] BasicTypeRegistry: Adding type registration java.sql.Time -> org.hibernate.type.TimeType@6c17c0f8
2020-11-25 21:17:36,369 DEBUG  [main] BasicTypeRegistry: Adding type registration timestamp -> org.hibernate.type.TimestampType@1e1237ab
2020-11-25 21:17:36,369 DEBUG  [main] BasicTypeRegistry: Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@1e1237ab
2020-11-25 21:17:36,369 DEBUG  [main] BasicTypeRegistry: Adding type registration java.util.Date -> org.hibernate.type.TimestampType@1e1237ab
2020-11-25 21:17:36,370 DEBUG  [main] BasicTypeRegistry: Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@f613067
2020-11-25 21:17:36,370 DEBUG  [main] BasicTypeRegistry: Adding type registration calendar -> org.hibernate.type.CalendarType@7b222230
2020-11-25 21:17:36,370 DEBUG  [main] BasicTypeRegistry: Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@7b222230
2020-11-25 21:17:36,370 DEBUG  [main] BasicTypeRegistry: Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@7b222230
2020-11-25 21:17:36,370 DEBUG  [main] BasicTypeRegistry: Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@172f4514
2020-11-25 21:17:36,371 DEBUG  [main] BasicTypeRegistry: Adding type registration locale -> org.hibernate.type.LocaleType@a54acec
2020-11-25 21:17:36,371 DEBUG  [main] BasicTypeRegistry: Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@a54acec
2020-11-25 21:17:36,371 DEBUG  [main] BasicTypeRegistry: Adding type registration currency -> org.hibernate.type.CurrencyType@41f3aaf1
2020-11-25 21:17:36,372 DEBUG  [main] BasicTypeRegistry: Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@41f3aaf1
2020-11-25 21:17:36,372 DEBUG  [main] BasicTypeRegistry: Adding type registration timezone -> org.hibernate.type.TimeZoneType@2eb60c71
2020-11-25 21:17:36,373 DEBUG  [main] BasicTypeRegistry: Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@2eb60c71
2020-11-25 21:17:36,373 DEBUG  [main] BasicTypeRegistry: Adding type registration class -> org.hibernate.type.ClassType@6a950a3b
2020-11-25 21:17:36,373 DEBUG  [main] BasicTypeRegistry: Adding type registration java.lang.Class -> org.hibernate.type.ClassType@6a950a3b
2020-11-25 21:17:36,373 DEBUG  [main] BasicTypeRegistry: Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@59303963
2020-11-25 21:17:36,374 DEBUG  [main] BasicTypeRegistry: Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@59303963
2020-11-25 21:17:36,374 DEBUG  [main] BasicTypeRegistry: Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@1320e68a
2020-11-25 21:17:36,374 DEBUG  [main] BasicTypeRegistry: Adding type registration binary -> org.hibernate.type.BinaryType@385d819
2020-11-25 21:17:36,374 DEBUG  [main] BasicTypeRegistry: Adding type registration byte[] -> org.hibernate.type.BinaryType@385d819
2020-11-25 21:17:36,375 DEBUG  [main] BasicTypeRegistry: Adding type registration [B -> org.hibernate.type.BinaryType@385d819
2020-11-25 21:17:36,375 DEBUG  [main] BasicTypeRegistry: Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@12d40609
2020-11-25 21:17:36,375 DEBUG  [main] BasicTypeRegistry: Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@12d40609
2020-11-25 21:17:36,375 DEBUG  [main] BasicTypeRegistry: Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@12d40609
2020-11-25 21:17:36,375 DEBUG  [main] BasicTypeRegistry: Adding type registration row_version -> org.hibernate.type.RowVersionType@46320c9a
2020-11-25 21:17:36,375 DEBUG  [main] BasicTypeRegistry: Adding type registration image -> org.hibernate.type.ImageType@353f472a
2020-11-25 21:17:36,376 DEBUG  [main] BasicTypeRegistry: Adding type registration characters -> org.hibernate.type.CharArrayType@23e3f5cd
2020-11-25 21:17:36,376 DEBUG  [main] BasicTypeRegistry: Adding type registration char[] -> org.hibernate.type.CharArrayType@23e3f5cd
2020-11-25 21:17:36,376 DEBUG  [main] BasicTypeRegistry: Adding type registration [C -> org.hibernate.type.CharArrayType@23e3f5cd
2020-11-25 21:17:36,377 DEBUG  [main] BasicTypeRegistry: Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@230a73f2
2020-11-25 21:17:36,378 DEBUG  [main] BasicTypeRegistry: Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@230a73f2
2020-11-25 21:17:36,378 DEBUG  [main] BasicTypeRegistry: Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@230a73f2
2020-11-25 21:17:36,379 DEBUG  [main] BasicTypeRegistry: Adding type registration text -> org.hibernate.type.TextType@798deee8
2020-11-25 21:17:36,380 DEBUG  [main] BasicTypeRegistry: Adding type registration ntext -> org.hibernate.type.NTextType@22d8f4ed
2020-11-25 21:17:36,381 DEBUG  [main] BasicTypeRegistry: Adding type registration blob -> org.hibernate.type.BlobType@267f9765
2020-11-25 21:17:36,393 DEBUG  [main] BasicTypeRegistry: Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@267f9765
2020-11-25 21:17:36,393 DEBUG  [main] BasicTypeRegistry: Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@7f3fc42f
2020-11-25 21:17:36,395 DEBUG  [main] BasicTypeRegistry: Adding type registration clob -> org.hibernate.type.ClobType@32a72c4
2020-11-25 21:17:36,397 DEBUG  [main] BasicTypeRegistry: Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@32a72c4
2020-11-25 21:17:36,397 DEBUG  [main] BasicTypeRegistry: Adding type registration nclob -> org.hibernate.type.NClobType@7a1a3468
2020-11-25 21:17:36,398 DEBUG  [main] BasicTypeRegistry: Adding type registration java.sql.NClob -> org.hibernate.type.NClobType@7a1a3468
2020-11-25 21:17:36,398 DEBUG  [main] BasicTypeRegistry: Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@629e8212
2020-11-25 21:17:36,398 DEBUG  [main] BasicTypeRegistry: Adding type registration materialized_nclob -> org.hibernate.type.MaterializedNClobType@4e424582
2020-11-25 21:17:36,399 DEBUG  [main] BasicTypeRegistry: Adding type registration serializable -> org.hibernate.type.SerializableType@6d963d70
2020-11-25 21:17:36,399 DEBUG  [main] BasicTypeRegistry: Adding type registration object -> org.hibernate.type.ObjectType@7135ce0a
2020-11-25 21:17:36,399 DEBUG  [main] BasicTypeRegistry: Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@7135ce0a
2020-11-25 21:17:36,400 DEBUG  [main] BasicTypeRegistry: Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@104392ba
2020-11-25 21:17:36,401 DEBUG  [main] BasicTypeRegistry: Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@57e6d56a
2020-11-25 21:17:36,401 DEBUG  [main] BasicTypeRegistry: Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@5c1687d1
2020-11-25 21:17:36,402 DEBUG  [main] BasicTypeRegistry: Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@1504b493
2020-11-25 21:17:36,403 DEBUG  [main] BasicTypeRegistry: Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@19de32cb
2020-11-25 21:17:36,404 DEBUG  [main] BasicTypeRegistry: Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@7872e91f
2020-11-25 21:17:36,404 DEBUG  [main] BasicTypeRegistry: Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@10b2c1cf
2020-11-25 21:17:36,404 DEBUG  [main] BasicTypeRegistry: Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@20a25f66
2020-11-25 21:17:36,432 DEBUG  [main] TypeConfiguration$Scope: Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@36d5c2ce] to MetadataBuildingContext [org.hibernate.boot.internal.MetadataBuildingContextRootImpl@6369d01c]
2020-11-25 21:17:36,446 DEBUG  [main] EnumType: Using NAMED-based conversion for Enum com.sf.back.entities.Kind
2020-11-25 21:17:36,450 DEBUG  [main] EnumType: Using NAMED-based conversion for Enum com.sf.back.entities.Kind
2020-11-25 21:17:36,482 DEBUG  [main] TypeConfiguration$Scope: Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@36d5c2ce] to SessionFactoryImpl [org.hibernate.internal.SessionFactoryImpl@7dfca9e6]
2020-11-25 21:17:36,483 DEBUG  [main] EnumType: Using NAMED-based conversion for Enum com.sf.back.entities.Kind
2020-11-25 21:17:36,483 DEBUG  [main] EnumType: Using NAMED-based conversion for Enum com.sf.back.entities.Kind
2020-11-25 21:17:36,486 DEBUG  [main] EnumType: Using NAMED-based conversion for Enum com.sf.back.entities.Kind
2020-11-25 21:17:36,486 DEBUG  [main] EnumType: Using NAMED-based conversion for Enum com.sf.back.entities.Kind
2020-11-25 21:17:36,506 DEBUG  [main] EnumType: Using NAMED-based conversion for Enum com.sf.back.entities.Kind
2020-11-25 21:17:36,506 DEBUG  [main] EnumType: Using NAMED-based conversion for Enum com.sf.back.entities.Kind
2020-11-25 21:17:36,519 DEBUG  [main] EnumType: Using NAMED-based conversion for Enum com.sf.back.entities.Kind
2020-11-25 21:17:36,528 TRACE  [main] TypeConfiguration$Scope: Handling #sessionFactoryCreated from [org.hibernate.internal.SessionFactoryImpl@7dfca9e6] for TypeConfiguration
2020-11-25 21:17:36,989 WARN   [main] JpaBaseConfiguration$JpaWebConfiguration: spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2020-11-25 21:17:37,182 WARN   [main] GroovyTemplateAutoConfiguration: Cannot find template location: classpath:/templates/ (please add some templates, check your Groovy configuration, or set spring.groovy.template.check-template-location=false)
2020-11-25 21:17:37,369 TRACE  [main] BasicBinder: binding parameter [1] as [BLOB] - [[70, 105, 110, 100, 32, 97, 108, 108, 32, 114, 111, 111, 116, 115, 32, 111, 102, 32, 103, 105, 118, 101, 110, 32, 112, 111, 108, 121, 110, 111, 109, 105, 97, 108]]
2020-11-25 21:17:37,370 TRACE  [main] BasicBinder: binding parameter [2] as [BOOLEAN] - [false]
2020-11-25 21:17:37,372 TRACE  [main] BasicBinder: binding parameter [3] as [VARCHAR] - [POLYNOMIAL]
2020-11-25 21:17:37,372 TRACE  [main] BasicBinder: binding parameter [4] as [INTEGER] - [1]
2020-11-25 21:17:37,373 TRACE  [main] BasicBinder: binding parameter [5] as [BIGINT] - [null]
2020-11-25 21:17:37,374 TRACE  [main] BasicBinder: binding parameter [6] as [INTEGER] - [6]
2020-11-25 21:17:37,376 TRACE  [main] BasicBinder: binding parameter [1] as [BLOB] - [null]
2020-11-25 21:17:37,377 TRACE  [main] BasicBinder: binding parameter [2] as [DOUBLE] - [1.0]
2020-11-25 21:17:37,377 TRACE  [main] BasicBinder: binding parameter [3] as [INTEGER] - [0]
2020-11-25 21:17:37,377 TRACE  [main] BasicBinder: binding parameter [4] as [BOOLEAN] - [true]
2020-11-25 21:17:37,378 TRACE  [main] BasicBinder: binding parameter [5] as [INTEGER] - [0]
2020-11-25 21:17:37,383 TRACE  [main] BasicBinder: binding parameter [6] as [BIGINT] - [1]
2020-11-25 21:17:37,387 TRACE  [main] BasicBinder: binding parameter [1] as [BLOB] - [null]
2020-11-25 21:17:37,387 TRACE  [main] BasicBinder: binding parameter [2] as [DOUBLE] - [2.0]
2020-11-25 21:17:37,387 TRACE  [main] BasicBinder: binding parameter [3] as [INTEGER] - [0]
2020-11-25 21:17:37,388 TRACE  [main] BasicBinder: binding parameter [4] as [BOOLEAN] - [true]
2020-11-25 21:17:37,388 TRACE  [main] BasicBinder: binding parameter [5] as [INTEGER] - [1]
2020-11-25 21:17:37,388 TRACE  [main] BasicBinder: binding parameter [6] as [BIGINT] - [1]
2020-11-25 21:17:37,389 TRACE  [main] BasicBinder: binding parameter [1] as [BLOB] - [null]
2020-11-25 21:17:37,389 TRACE  [main] BasicBinder: binding parameter [2] as [DOUBLE] - [1.0]
2020-11-25 21:17:37,390 TRACE  [main] BasicBinder: binding parameter [3] as [INTEGER] - [0]
2020-11-25 21:17:37,390 TRACE  [main] BasicBinder: binding parameter [4] as [BOOLEAN] - [true]
2020-11-25 21:17:37,390 TRACE  [main] BasicBinder: binding parameter [5] as [INTEGER] - [2]
2020-11-25 21:17:37,391 TRACE  [main] BasicBinder: binding parameter [6] as [BIGINT] - [1]
2020-11-25 21:17:37,393 TRACE  [main] BasicBinder: binding parameter [1] as [BLOB] - [null]
2020-11-25 21:17:37,393 TRACE  [main] BasicBinder: binding parameter [2] as [DOUBLE] - [1.0]
2020-11-25 21:17:37,393 TRACE  [main] BasicBinder: binding parameter [3] as [INTEGER] - [0]
2020-11-25 21:17:37,394 TRACE  [main] BasicBinder: binding parameter [4] as [BOOLEAN] - [false]
2020-11-25 21:17:37,394 TRACE  [main] BasicBinder: binding parameter [5] as [INTEGER] - [0]
2020-11-25 21:17:37,394 TRACE  [main] BasicBinder: binding parameter [6] as [BIGINT] - [1]
2020-11-25 21:17:37,397 TRACE  [main] BasicBinder: binding parameter [1] as [BLOB] - [null]
2020-11-25 21:17:37,399 TRACE  [main] BasicBinder: binding parameter [2] as [DOUBLE] - [1.0]
2020-11-25 21:17:37,399 TRACE  [main] BasicBinder: binding parameter [3] as [INTEGER] - [0]
2020-11-25 21:17:37,400 TRACE  [main] BasicBinder: binding parameter [4] as [BOOLEAN] - [false]
2020-11-25 21:17:37,400 TRACE  [main] BasicBinder: binding parameter [5] as [INTEGER] - [1]
2020-11-25 21:17:37,401 TRACE  [main] BasicBinder: binding parameter [6] as [BIGINT] - [1]
2020-11-25 21:17:37,517 TRACE  [main] BasicBinder: binding parameter [1] as [BIGINT] - [2]
2020-11-25 21:17:37,524 TRACE  [main] BasicExtractor: extracted value ([id1_1_2_] : [BIGINT]) - [null]
2020-11-25 21:17:37,524 TRACE  [main] BasicExtractor: extracted value ([id1_0_4_] : [BIGINT]) - [null]
2020-11-25 21:17:37,536 TRACE  [main] BasicExtractor: extracted value ([descript2_1_0_] : [BLOB]) - [[112, 114, 111, 98, 108, 101, 109, 100, 101, 115, 99, 114, 105, 112, 116, 105, 111, 110]]
2020-11-25 21:17:37,537 TRACE  [main] BasicExtractor: extracted value ([is_solve3_1_0_] : [BOOLEAN]) - [null]
2020-11-25 21:17:37,538 TRACE  [main] BasicExtractor: extracted value ([kind4_1_0_] : [VARCHAR]) - [POLYNOMIAL]
2020-11-25 21:17:37,540 TRACE  [main] BasicExtractor: extracted value ([matrix_d5_1_0_] : [INTEGER]) - [1]
2020-11-25 21:17:37,540 TRACE  [main] BasicExtractor: extracted value ([parent_p7_1_0_] : [BIGINT]) - [null]
2020-11-25 21:17:37,541 TRACE  [main] BasicExtractor: extracted value ([problem_6_1_0_] : [INTEGER]) - [22]
2020-11-25 21:17:37,542 TRACE  [main] BasicExtractor: extracted value ([problem_7_0_3_] : [BIGINT]) - [null]
2020-11-25 21:17:37,543 TRACE  [main] BasicExtractor: extracted value ([parent_p7_1_1_] : [BIGINT]) - [null]
2020-11-25 21:17:37,552 TRACE  [main] CollectionType: Created collection wrapper: [com.sf.back.entities.Problem.matrixes#2]
2020-11-25 21:17:37,557 TRACE  [main] BasicBinder: binding parameter [1] as [BIGINT] - [2]
2020-11-25 21:17:37,558 TRACE  [main] BasicExtractor: extracted value ([id1_0_1_] : [BIGINT]) - [6]
2020-11-25 21:17:37,559 TRACE  [main] BasicExtractor: extracted value ([binary_v2_0_1_] : [BLOB]) - [null]
2020-11-25 21:17:37,560 TRACE  [main] BasicExtractor: extracted value ([float_va3_0_1_] : [DOUBLE]) - [1.0]
2020-11-25 21:17:37,560 TRACE  [main] BasicExtractor: extracted value ([i4_0_1_] : [INTEGER]) - [0]
2020-11-25 21:17:37,560 TRACE  [main] BasicExtractor: extracted value ([is_condi5_0_1_] : [BOOLEAN]) - [true]
2020-11-25 21:17:37,560 TRACE  [main] BasicExtractor: extracted value ([j6_0_1_] : [INTEGER]) - [0]
2020-11-25 21:17:37,561 TRACE  [main] BasicExtractor: extracted value ([problem_7_0_1_] : [BIGINT]) - [2]
2020-11-25 21:17:37,561 TRACE  [main] BasicExtractor: extracted value ([problem_7_0_0_] : [BIGINT]) - [2]
2020-11-25 21:17:37,561 TRACE  [main] BasicExtractor: extracted value ([id1_0_0_] : [BIGINT]) - [6]
2020-11-25 21:17:37,562 TRACE  [main] BasicExtractor: extracted value ([id1_0_1_] : [BIGINT]) - [7]
2020-11-25 21:17:37,562 TRACE  [main] BasicExtractor: extracted value ([binary_v2_0_1_] : [BLOB]) - [null]
2020-11-25 21:17:37,563 TRACE  [main] BasicExtractor: extracted value ([float_va3_0_1_] : [DOUBLE]) - [2.718281828459045]
2020-11-25 21:17:37,563 TRACE  [main] BasicExtractor: extracted value ([i4_0_1_] : [INTEGER]) - [0]
2020-11-25 21:17:37,563 TRACE  [main] BasicExtractor: extracted value ([is_condi5_0_1_] : [BOOLEAN]) - [true]
2020-11-25 21:17:37,564 TRACE  [main] BasicExtractor: extracted value ([j6_0_1_] : [INTEGER]) - [1]
2020-11-25 21:17:37,564 TRACE  [main] BasicExtractor: extracted value ([problem_7_0_1_] : [BIGINT]) - [2]
2020-11-25 21:17:37,564 TRACE  [main] BasicExtractor: extracted value ([problem_7_0_0_] : [BIGINT]) - [2]
2020-11-25 21:17:37,565 TRACE  [main] BasicExtractor: extracted value ([id1_0_0_] : [BIGINT]) - [7]
2020-11-25 21:17:37,565 TRACE  [main] BasicExtractor: extracted value ([id1_0_1_] : [BIGINT]) - [8]
2020-11-25 21:17:37,566 TRACE  [main] BasicExtractor: extracted value ([binary_v2_0_1_] : [BLOB]) - [null]
2020-11-25 21:17:37,566 TRACE  [main] BasicExtractor: extracted value ([float_va3_0_1_] : [DOUBLE]) - [7.38905609893065]
2020-11-25 21:17:37,566 TRACE  [main] BasicExtractor: extracted value ([i4_0_1_] : [INTEGER]) - [0]
2020-11-25 21:17:37,567 TRACE  [main] BasicExtractor: extracted value ([is_condi5_0_1_] : [BOOLEAN]) - [true]
2020-11-25 21:17:37,567 TRACE  [main] BasicExtractor: extracted value ([j6_0_1_] : [INTEGER]) - [2]
2020-11-25 21:17:37,567 TRACE  [main] BasicExtractor: extracted value ([problem_7_0_1_] : [BIGINT]) - [2]
2020-11-25 21:17:37,568 TRACE  [main] BasicExtractor: extracted value ([problem_7_0_0_] : [BIGINT]) - [2]
2020-11-25 21:17:37,568 TRACE  [main] BasicExtractor: extracted value ([id1_0_0_] : [BIGINT]) - [8]
2020-11-25 21:17:37,569 TRACE  [main] BasicExtractor: extracted value ([id1_0_1_] : [BIGINT]) - [9]
2020-11-25 21:17:37,570 TRACE  [main] BasicExtractor: extracted value ([binary_v2_0_1_] : [BLOB]) - [null]
2020-11-25 21:17:37,571 TRACE  [main] BasicExtractor: extracted value ([float_va3_0_1_] : [DOUBLE]) - [20.085536923187668]
2020-11-25 21:17:37,571 TRACE  [main] BasicExtractor: extracted value ([i4_0_1_] : [INTEGER]) - [0]
2020-11-25 21:17:37,571 TRACE  [main] BasicExtractor: extracted value ([is_condi5_0_1_] : [BOOLEAN]) - [true]
2020-11-25 21:17:37,572 TRACE  [main] BasicExtractor: extracted value ([j6_0_1_] : [INTEGER]) - [3]
2020-11-25 21:17:37,572 TRACE  [main] BasicExtractor: extracted value ([problem_7_0_1_] : [BIGINT]) - [2]
2020-11-25 21:17:37,573 TRACE  [main] BasicExtractor: extracted value ([problem_7_0_0_] : [BIGINT]) - [2]
2020-11-25 21:17:37,573 TRACE  [main] BasicExtractor: extracted value ([id1_0_0_] : [BIGINT]) - [9]
2020-11-25 21:17:37,574 TRACE  [main] BasicExtractor: extracted value ([id1_0_1_] : [BIGINT]) - [10]
2020-11-25 21:17:37,575 TRACE  [main] BasicExtractor: extracted value ([binary_v2_0_1_] : [BLOB]) - [null]
2020-11-25 21:17:37,575 TRACE  [main] BasicExtractor: extracted value ([float_va3_0_1_] : [DOUBLE]) - [54.598150033144236]
2020-11-25 21:17:37,575 TRACE  [main] BasicExtractor: extracted value ([i4_0_1_] : [INTEGER]) - [0]
2020-11-25 21:17:37,576 TRACE  [main] BasicExtractor: extracted value ([is_condi5_0_1_] : [BOOLEAN]) - [true]
2020-11-25 21:17:37,576 TRACE  [main] BasicExtractor: extracted value ([j6_0_1_] : [INTEGER]) - [4]
2020-11-25 21:17:37,576 TRACE  [main] BasicExtractor: extracted value ([problem_7_0_1_] : [BIGINT]) - [2]
2020-11-25 21:17:37,577 TRACE  [main] BasicExtractor: extracted value ([problem_7_0_0_] : [BIGINT]) - [2]
2020-11-25 21:17:37,577 TRACE  [main] BasicExtractor: extracted value ([id1_0_0_] : [BIGINT]) - [10]
2020-11-25 21:17:37,588 TRACE  [main] BasicExtractor: extracted value ([id1_0_1_] : [BIGINT]) - [11]
2020-11-25 21:17:37,592 TRACE  [main] BasicExtractor: extracted value ([binary_v2_0_1_] : [BLOB]) - [null]
2020-11-25 21:17:37,592 TRACE  [main] BasicExtractor: extracted value ([float_va3_0_1_] : [DOUBLE]) - [148.4131591025766]
2020-11-25 21:17:37,593 TRACE  [main] BasicExtractor: extracted value ([i4_0_1_] : [INTEGER]) - [0]
2020-11-25 21:17:37,593 TRACE  [main] BasicExtractor: extracted value ([is_condi5_0_1_] : [BOOLEAN]) - [true]
2020-11-25 21:17:37,594 TRACE  [main] BasicExtractor: extracted value ([j6_0_1_] : [INTEGER]) - [5]
2020-11-25 21:17:37,594 TRACE  [main] BasicExtractor: extracted value ([problem_7_0_1_] : [BIGINT]) - [2]
2020-11-25 21:17:37,595 TRACE  [main] BasicExtractor: extracted value ([problem_7_0_0_] : [BIGINT]) - [2]
2020-11-25 21:17:37,595 TRACE  [main] BasicExtractor: extracted value ([id1_0_0_] : [BIGINT]) - [11]
2020-11-25 21:17:37,729 TRACE  [main] BasicBinder: binding parameter [1] as [BIGINT] - [2]
2020-11-25 21:17:37,731 TRACE  [main] BasicExtractor: extracted value ([id1_1_2_] : [BIGINT]) - [null]
2020-11-25 21:17:37,731 TRACE  [main] BasicExtractor: extracted value ([id1_0_4_] : [BIGINT]) - [null]
2020-11-25 21:17:37,731 TRACE  [main] BasicExtractor: extracted value ([descript2_1_0_] : [BLOB]) - [[112, 114, 111, 98, 108, 101, 109, 100, 101, 115, 99, 114, 105, 112, 116, 105, 111, 110]]
2020-11-25 21:17:37,731 TRACE  [main] BasicExtractor: extracted value ([is_solve3_1_0_] : [BOOLEAN]) - [null]
2020-11-25 21:17:37,731 TRACE  [main] BasicExtractor: extracted value ([kind4_1_0_] : [VARCHAR]) - [POLYNOMIAL]
2020-11-25 21:17:37,732 TRACE  [main] BasicExtractor: extracted value ([matrix_d5_1_0_] : [INTEGER]) - [1]
2020-11-25 21:17:37,732 TRACE  [main] BasicExtractor: extracted value ([parent_p7_1_0_] : [BIGINT]) - [null]
2020-11-25 21:17:37,733 TRACE  [main] BasicExtractor: extracted value ([problem_6_1_0_] : [INTEGER]) - [22]
2020-11-25 21:17:37,733 TRACE  [main] BasicExtractor: extracted value ([problem_7_0_3_] : [BIGINT]) - [null]
2020-11-25 21:17:37,733 TRACE  [main] BasicExtractor: extracted value ([parent_p7_1_1_] : [BIGINT]) - [null]
2020-11-25 21:17:37,733 TRACE  [main] CollectionType: Created collection wrapper: [com.sf.back.entities.Problem.matrixes#2]
2020-11-25 21:17:37,734 TRACE  [main] BasicBinder: binding parameter [1] as [BIGINT] - [2]
2020-11-25 21:17:37,734 TRACE  [main] BasicExtractor: extracted value ([id1_0_1_] : [BIGINT]) - [6]
2020-11-25 21:17:37,735 TRACE  [main] BasicExtractor: extracted value ([binary_v2_0_1_] : [BLOB]) - [null]
2020-11-25 21:17:37,736 TRACE  [main] BasicExtractor: extracted value ([float_va3_0_1_] : [DOUBLE]) - [1.0]
2020-11-25 21:17:37,736 TRACE  [main] BasicExtractor: extracted value ([i4_0_1_] : [INTEGER]) - [0]
2020-11-25 21:17:37,736 TRACE  [main] BasicExtractor: extracted value ([is_condi5_0_1_] : [BOOLEAN]) - [true]
2020-11-25 21:17:37,736 TRACE  [main] BasicExtractor: extracted value ([j6_0_1_] : [INTEGER]) - [0]
2020-11-25 21:17:37,736 TRACE  [main] BasicExtractor: extracted value ([problem_7_0_1_] : [BIGINT]) - [2]
2020-11-25 21:17:37,737 TRACE  [main] BasicExtractor: extracted value ([problem_7_0_0_] : [BIGINT]) - [2]
2020-11-25 21:17:37,737 TRACE  [main] BasicExtractor: extracted value ([id1_0_0_] : [BIGINT]) - [6]
2020-11-25 21:17:37,737 TRACE  [main] BasicExtractor: extracted value ([id1_0_1_] : [BIGINT]) - [7]
2020-11-25 21:17:37,737 TRACE  [main] BasicExtractor: extracted value ([binary_v2_0_1_] : [BLOB]) - [null]
2020-11-25 21:17:37,737 TRACE  [main] BasicExtractor: extracted value ([float_va3_0_1_] : [DOUBLE]) - [2.718281828459045]
2020-11-25 21:17:37,738 TRACE  [main] BasicExtractor: extracted value ([i4_0_1_] : [INTEGER]) - [0]
2020-11-25 21:17:37,738 TRACE  [main] BasicExtractor: extracted value ([is_condi5_0_1_] : [BOOLEAN]) - [true]
2020-11-25 21:17:37,738 TRACE  [main] BasicExtractor: extracted value ([j6_0_1_] : [INTEGER]) - [1]
2020-11-25 21:17:37,738 TRACE  [main] BasicExtractor: extracted value ([problem_7_0_1_] : [BIGINT]) - [2]
2020-11-25 21:17:37,738 TRACE  [main] BasicExtractor: extracted value ([problem_7_0_0_] : [BIGINT]) - [2]
2020-11-25 21:17:37,738 TRACE  [main] BasicExtractor: extracted value ([id1_0_0_] : [BIGINT]) - [7]
2020-11-25 21:17:37,739 TRACE  [main] BasicExtractor: extracted value ([id1_0_1_] : [BIGINT]) - [8]
2020-11-25 21:17:37,739 TRACE  [main] BasicExtractor: extracted value ([binary_v2_0_1_] : [BLOB]) - [null]
2020-11-25 21:17:37,739 TRACE  [main] BasicExtractor: extracted value ([float_va3_0_1_] : [DOUBLE]) - [7.38905609893065]
2020-11-25 21:17:37,739 TRACE  [main] BasicExtractor: extracted value ([i4_0_1_] : [INTEGER]) - [0]
2020-11-25 21:17:37,739 TRACE  [main] BasicExtractor: extracted value ([is_condi5_0_1_] : [BOOLEAN]) - [true]
2020-11-25 21:17:37,740 TRACE  [main] BasicExtractor: extracted value ([j6_0_1_] : [INTEGER]) - [2]
2020-11-25 21:17:37,740 TRACE  [main] BasicExtractor: extracted value ([problem_7_0_1_] : [BIGINT]) - [2]
2020-11-25 21:17:37,740 TRACE  [main] BasicExtractor: extracted value ([problem_7_0_0_] : [BIGINT]) - [2]
2020-11-25 21:17:37,740 TRACE  [main] BasicExtractor: extracted value ([id1_0_0_] : [BIGINT]) - [8]
2020-11-25 21:17:37,740 TRACE  [main] BasicExtractor: extracted value ([id1_0_1_] : [BIGINT]) - [9]
2020-11-25 21:17:37,741 TRACE  [main] BasicExtractor: extracted value ([binary_v2_0_1_] : [BLOB]) - [null]
2020-11-25 21:17:37,741 TRACE  [main] BasicExtractor: extracted value ([float_va3_0_1_] : [DOUBLE]) - [20.085536923187668]
2020-11-25 21:17:37,741 TRACE  [main] BasicExtractor: extracted value ([i4_0_1_] : [INTEGER]) - [0]
2020-11-25 21:17:37,741 TRACE  [main] BasicExtractor: extracted value ([is_condi5_0_1_] : [BOOLEAN]) - [true]
2020-11-25 21:17:37,741 TRACE  [main] BasicExtractor: extracted value ([j6_0_1_] : [INTEGER]) - [3]
2020-11-25 21:17:37,742 TRACE  [main] BasicExtractor: extracted value ([problem_7_0_1_] : [BIGINT]) - [2]
2020-11-25 21:17:37,742 TRACE  [main] BasicExtractor: extracted value ([problem_7_0_0_] : [BIGINT]) - [2]
2020-11-25 21:17:37,742 TRACE  [main] BasicExtractor: extracted value ([id1_0_0_] : [BIGINT]) - [9]
2020-11-25 21:17:37,742 TRACE  [main] BasicExtractor: extracted value ([id1_0_1_] : [BIGINT]) - [10]
2020-11-25 21:17:37,743 TRACE  [main] BasicExtractor: extracted value ([binary_v2_0_1_] : [BLOB]) - [null]
2020-11-25 21:17:37,743 TRACE  [main] BasicExtractor: extracted value ([float_va3_0_1_] : [DOUBLE]) - [54.598150033144236]
2020-11-25 21:17:37,743 TRACE  [main] BasicExtractor: extracted value ([i4_0_1_] : [INTEGER]) - [0]
2020-11-25 21:17:37,743 TRACE  [main] BasicExtractor: extracted value ([is_condi5_0_1_] : [BOOLEAN]) - [true]
2020-11-25 21:17:37,743 TRACE  [main] BasicExtractor: extracted value ([j6_0_1_] : [INTEGER]) - [4]
2020-11-25 21:17:37,743 TRACE  [main] BasicExtractor: extracted value ([problem_7_0_1_] : [BIGINT]) - [2]
2020-11-25 21:17:37,744 TRACE  [main] BasicExtractor: extracted value ([problem_7_0_0_] : [BIGINT]) - [2]
2020-11-25 21:17:37,744 TRACE  [main] BasicExtractor: extracted value ([id1_0_0_] : [BIGINT]) - [10]
2020-11-25 21:17:37,744 TRACE  [main] BasicExtractor: extracted value ([id1_0_1_] : [BIGINT]) - [11]
2020-11-25 21:17:37,744 TRACE  [main] BasicExtractor: extracted value ([binary_v2_0_1_] : [BLOB]) - [null]
2020-11-25 21:17:37,745 TRACE  [main] BasicExtractor: extracted value ([float_va3_0_1_] : [DOUBLE]) - [148.4131591025766]
2020-11-25 21:17:37,745 TRACE  [main] BasicExtractor: extracted value ([i4_0_1_] : [INTEGER]) - [0]
2020-11-25 21:17:37,745 TRACE  [main] BasicExtractor: extracted value ([is_condi5_0_1_] : [BOOLEAN]) - [true]
2020-11-25 21:17:37,745 TRACE  [main] BasicExtractor: extracted value ([j6_0_1_] : [INTEGER]) - [5]
2020-11-25 21:17:37,745 TRACE  [main] BasicExtractor: extracted value ([problem_7_0_1_] : [BIGINT]) - [2]
2020-11-25 21:17:37,745 TRACE  [main] BasicExtractor: extracted value ([problem_7_0_0_] : [BIGINT]) - [2]
2020-11-25 21:17:37,746 TRACE  [main] BasicExtractor: extracted value ([id1_0_0_] : [BIGINT]) - [11]
2020-11-25 21:17:37,763 TRACE  [main] BasicBinder: binding parameter [1] as [BLOB] - [[100, 101, 115, 99, 114, 105, 112, 116, 105, 111, 110, 100, 101, 115, 99, 114, 105, 112, 116, 105, 111, 110]]
2020-11-25 21:17:37,763 TRACE  [main] BasicBinder: binding parameter [2] as [BOOLEAN] - [null]
2020-11-25 21:17:37,763 TRACE  [main] BasicBinder: binding parameter [3] as [VARCHAR] - [POLYNOMIAL]
2020-11-25 21:17:37,763 TRACE  [main] BasicBinder: binding parameter [4] as [INTEGER] - [1]
2020-11-25 21:17:37,763 TRACE  [main] BasicBinder: binding parameter [5] as [BIGINT] - [null]
2020-11-25 21:17:37,764 TRACE  [main] BasicBinder: binding parameter [6] as [INTEGER] - [22]
2020-11-25 21:17:37,764 TRACE  [main] BasicBinder: binding parameter [7] as [BIGINT] - [2]
2020-11-25 21:17:37,767 TRACE  [main] BasicBinder: binding parameter [1] as [BLOB] - [null]
2020-11-25 21:17:37,767 TRACE  [main] BasicBinder: binding parameter [2] as [DOUBLE] - [1.01]
2020-11-25 21:17:37,768 TRACE  [main] BasicBinder: binding parameter [3] as [INTEGER] - [0]
2020-11-25 21:17:37,768 TRACE  [main] BasicBinder: binding parameter [4] as [BOOLEAN] - [true]
2020-11-25 21:17:37,768 TRACE  [main] BasicBinder: binding parameter [5] as [INTEGER] - [0]
2020-11-25 21:17:37,768 TRACE  [main] BasicBinder: binding parameter [6] as [BIGINT] - [2]
2020-11-25 21:17:37,768 TRACE  [main] BasicBinder: binding parameter [7] as [BIGINT] - [6]
2020-11-25 21:17:37,770 TRACE  [main] BasicBinder: binding parameter [1] as [BIGINT] - [2]
2020-11-25 21:17:37,771 TRACE  [main] BasicExtractor: extracted value ([id1_1_2_] : [BIGINT]) - [null]
2020-11-25 21:17:37,771 TRACE  [main] BasicExtractor: extracted value ([id1_0_4_] : [BIGINT]) - [null]
2020-11-25 21:17:37,771 TRACE  [main] BasicExtractor: extracted value ([descript2_1_0_] : [BLOB]) - [[100, 101, 115, 99, 114, 105, 112, 116, 105, 111, 110, 100, 101, 115, 99, 114, 105, 112, 116, 105, 111, 110]]
2020-11-25 21:17:37,774 TRACE  [main] BasicExtractor: extracted value ([is_solve3_1_0_] : [BOOLEAN]) - [null]
2020-11-25 21:17:37,774 TRACE  [main] BasicExtractor: extracted value ([kind4_1_0_] : [VARCHAR]) - [POLYNOMIAL]
2020-11-25 21:17:37,775 TRACE  [main] BasicExtractor: extracted value ([matrix_d5_1_0_] : [INTEGER]) - [1]
2020-11-25 21:17:37,775 TRACE  [main] BasicExtractor: extracted value ([parent_p7_1_0_] : [BIGINT]) - [null]
2020-11-25 21:17:37,775 TRACE  [main] BasicExtractor: extracted value ([problem_6_1_0_] : [INTEGER]) - [22]
2020-11-25 21:17:37,775 TRACE  [main] BasicExtractor: extracted value ([problem_7_0_3_] : [BIGINT]) - [null]
2020-11-25 21:17:37,775 TRACE  [main] BasicExtractor: extracted value ([parent_p7_1_1_] : [BIGINT]) - [null]
2020-11-25 21:17:37,776 TRACE  [main] CollectionType: Created collection wrapper: [com.sf.back.entities.Problem.matrixes#2]
2020-11-25 21:17:37,776 TRACE  [main] BasicBinder: binding parameter [1] as [BIGINT] - [2]
2020-11-25 21:17:37,777 TRACE  [main] BasicExtractor: extracted value ([id1_0_1_] : [BIGINT]) - [6]
2020-11-25 21:17:37,777 TRACE  [main] BasicExtractor: extracted value ([binary_v2_0_1_] : [BLOB]) - [null]
2020-11-25 21:17:37,778 TRACE  [main] BasicExtractor: extracted value ([float_va3_0_1_] : [DOUBLE]) - [1.01]
2020-11-25 21:17:37,783 TRACE  [main] BasicExtractor: extracted value ([i4_0_1_] : [INTEGER]) - [0]
2020-11-25 21:17:37,783 TRACE  [main] BasicExtractor: extracted value ([is_condi5_0_1_] : [BOOLEAN]) - [true]
2020-11-25 21:17:37,783 TRACE  [main] BasicExtractor: extracted value ([j6_0_1_] : [INTEGER]) - [0]
2020-11-25 21:17:37,784 TRACE  [main] BasicExtractor: extracted value ([problem_7_0_1_] : [BIGINT]) - [2]
2020-11-25 21:17:37,785 TRACE  [main] BasicExtractor: extracted value ([problem_7_0_0_] : [BIGINT]) - [2]
2020-11-25 21:17:37,785 TRACE  [main] BasicExtractor: extracted value ([id1_0_0_] : [BIGINT]) - [6]
2020-11-25 21:17:37,785 TRACE  [main] BasicExtractor: extracted value ([id1_0_1_] : [BIGINT]) - [7]
2020-11-25 21:17:37,786 TRACE  [main] BasicExtractor: extracted value ([binary_v2_0_1_] : [BLOB]) - [null]
2020-11-25 21:17:37,787 TRACE  [main] BasicExtractor: extracted value ([float_va3_0_1_] : [DOUBLE]) - [2.718281828459045]
2020-11-25 21:17:37,787 TRACE  [main] BasicExtractor: extracted value ([i4_0_1_] : [INTEGER]) - [0]
2020-11-25 21:17:37,787 TRACE  [main] BasicExtractor: extracted value ([is_condi5_0_1_] : [BOOLEAN]) - [true]
2020-11-25 21:17:37,787 TRACE  [main] BasicExtractor: extracted value ([j6_0_1_] : [INTEGER]) - [1]
2020-11-25 21:17:37,787 TRACE  [main] BasicExtractor: extracted value ([problem_7_0_1_] : [BIGINT]) - [2]
2020-11-25 21:17:37,787 TRACE  [main] BasicExtractor: extracted value ([problem_7_0_0_] : [BIGINT]) - [2]
2020-11-25 21:17:37,788 TRACE  [main] BasicExtractor: extracted value ([id1_0_0_] : [BIGINT]) - [7]
2020-11-25 21:17:37,789 TRACE  [main] BasicExtractor: extracted value ([id1_0_1_] : [BIGINT]) - [8]
2020-11-25 21:17:37,789 TRACE  [main] BasicExtractor: extracted value ([binary_v2_0_1_] : [BLOB]) - [null]
2020-11-25 21:17:37,790 TRACE  [main] BasicExtractor: extracted value ([float_va3_0_1_] : [DOUBLE]) - [7.38905609893065]
2020-11-25 21:17:37,790 TRACE  [main] BasicExtractor: extracted value ([i4_0_1_] : [INTEGER]) - [0]
2020-11-25 21:17:37,791 TRACE  [main] BasicExtractor: extracted value ([is_condi5_0_1_] : [BOOLEAN]) - [true]
2020-11-25 21:17:37,791 TRACE  [main] BasicExtractor: extracted value ([j6_0_1_] : [INTEGER]) - [2]
2020-11-25 21:17:37,791 TRACE  [main] BasicExtractor: extracted value ([problem_7_0_1_] : [BIGINT]) - [2]
2020-11-25 21:17:37,792 TRACE  [main] BasicExtractor: extracted value ([problem_7_0_0_] : [BIGINT]) - [2]
2020-11-25 21:17:37,793 TRACE  [main] BasicExtractor: extracted value ([id1_0_0_] : [BIGINT]) - [8]
2020-11-25 21:17:37,793 TRACE  [main] BasicExtractor: extracted value ([id1_0_1_] : [BIGINT]) - [9]
2020-11-25 21:17:37,793 TRACE  [main] BasicExtractor: extracted value ([binary_v2_0_1_] : [BLOB]) - [null]
2020-11-25 21:17:37,793 TRACE  [main] BasicExtractor: extracted value ([float_va3_0_1_] : [DOUBLE]) - [20.085536923187668]
2020-11-25 21:17:37,793 TRACE  [main] BasicExtractor: extracted value ([i4_0_1_] : [INTEGER]) - [0]
2020-11-25 21:17:37,793 TRACE  [main] BasicExtractor: extracted value ([is_condi5_0_1_] : [BOOLEAN]) - [true]
2020-11-25 21:17:37,795 TRACE  [main] BasicExtractor: extracted value ([j6_0_1_] : [INTEGER]) - [3]
2020-11-25 21:17:37,797 TRACE  [main] BasicExtractor: extracted value ([problem_7_0_1_] : [BIGINT]) - [2]
2020-11-25 21:17:37,798 TRACE  [main] BasicExtractor: extracted value ([problem_7_0_0_] : [BIGINT]) - [2]
2020-11-25 21:17:37,798 TRACE  [main] BasicExtractor: extracted value ([id1_0_0_] : [BIGINT]) - [9]
2020-11-25 21:17:37,799 TRACE  [main] BasicExtractor: extracted value ([id1_0_1_] : [BIGINT]) - [10]
2020-11-25 21:17:37,799 TRACE  [main] BasicExtractor: extracted value ([binary_v2_0_1_] : [BLOB]) - [null]
2020-11-25 21:17:37,800 TRACE  [main] BasicExtractor: extracted value ([float_va3_0_1_] : [DOUBLE]) - [54.598150033144236]
2020-11-25 21:17:37,800 TRACE  [main] BasicExtractor: extracted value ([i4_0_1_] : [INTEGER]) - [0]
2020-11-25 21:17:37,800 TRACE  [main] BasicExtractor: extracted value ([is_condi5_0_1_] : [BOOLEAN]) - [true]
2020-11-25 21:17:37,800 TRACE  [main] BasicExtractor: extracted value ([j6_0_1_] : [INTEGER]) - [4]
2020-11-25 21:17:37,801 TRACE  [main] BasicExtractor: extracted value ([problem_7_0_1_] : [BIGINT]) - [2]
2020-11-25 21:17:37,801 TRACE  [main] BasicExtractor: extracted value ([problem_7_0_0_] : [BIGINT]) - [2]
2020-11-25 21:17:37,801 TRACE  [main] BasicExtractor: extracted value ([id1_0_0_] : [BIGINT]) - [10]
2020-11-25 21:17:37,802 TRACE  [main] BasicExtractor: extracted value ([id1_0_1_] : [BIGINT]) - [11]
2020-11-25 21:17:37,803 TRACE  [main] BasicExtractor: extracted value ([binary_v2_0_1_] : [BLOB]) - [null]
2020-11-25 21:17:37,804 TRACE  [main] BasicExtractor: extracted value ([float_va3_0_1_] : [DOUBLE]) - [148.4131591025766]
2020-11-25 21:17:37,804 TRACE  [main] BasicExtractor: extracted value ([i4_0_1_] : [INTEGER]) - [0]
2020-11-25 21:17:37,804 TRACE  [main] BasicExtractor: extracted value ([is_condi5_0_1_] : [BOOLEAN]) - [true]
2020-11-25 21:17:37,804 TRACE  [main] BasicExtractor: extracted value ([j6_0_1_] : [INTEGER]) - [5]
2020-11-25 21:17:37,804 TRACE  [main] BasicExtractor: extracted value ([problem_7_0_1_] : [BIGINT]) - [2]
2020-11-25 21:17:37,804 TRACE  [main] BasicExtractor: extracted value ([problem_7_0_0_] : [BIGINT]) - [2]
2020-11-25 21:17:37,805 TRACE  [main] BasicExtractor: extracted value ([id1_0_0_] : [BIGINT]) - [11]
2020-11-25 21:17:37,821 TRACE  [main] BasicBinder: binding parameter [1] as [BLOB] - [[100, 101, 115, 99, 114, 105, 112, 116, 105, 111, 110]]
2020-11-25 21:17:37,821 TRACE  [main] BasicBinder: binding parameter [2] as [BOOLEAN] - [false]
2020-11-25 21:17:37,822 TRACE  [main] BasicBinder: binding parameter [3] as [VARCHAR] - [POLYNOMIAL]
2020-11-25 21:17:37,822 TRACE  [main] BasicBinder: binding parameter [4] as [INTEGER] - [12]
2020-11-25 21:17:37,822 TRACE  [main] BasicBinder: binding parameter [5] as [BIGINT] - [null]
2020-11-25 21:17:37,822 TRACE  [main] BasicBinder: binding parameter [6] as [INTEGER] - [null]
2020-11-25 21:17:37,823 TRACE  [main] BasicBinder: binding parameter [1] as [BLOB] - [null]
2020-11-25 21:17:37,823 TRACE  [main] BasicBinder: binding parameter [2] as [DOUBLE] - [0.0]
2020-11-25 21:17:37,824 TRACE  [main] BasicBinder: binding parameter [3] as [INTEGER] - [0]
2020-11-25 21:17:37,824 TRACE  [main] BasicBinder: binding parameter [4] as [BOOLEAN] - [true]
2020-11-25 21:17:37,824 TRACE  [main] BasicBinder: binding parameter [5] as [INTEGER] - [0]
2020-11-25 21:17:37,824 TRACE  [main] BasicBinder: binding parameter [6] as [BIGINT] - [4]
2020-11-25 21:17:37,825 TRACE  [main] BasicBinder: binding parameter [1] as [BLOB] - [null]
2020-11-25 21:17:37,825 TRACE  [main] BasicBinder: binding parameter [2] as [DOUBLE] - [1.0]
2020-11-25 21:17:37,825 TRACE  [main] BasicBinder: binding parameter [3] as [INTEGER] - [0]
2020-11-25 21:17:37,826 TRACE  [main] BasicBinder: binding parameter [4] as [BOOLEAN] - [true]
2020-11-25 21:17:37,826 TRACE  [main] BasicBinder: binding parameter [5] as [INTEGER] - [1]
2020-11-25 21:17:37,826 TRACE  [main] BasicBinder: binding parameter [6] as [BIGINT] - [4]
2020-11-25 21:17:37,827 TRACE  [main] BasicBinder: binding parameter [1] as [BLOB] - [null]
2020-11-25 21:17:37,827 TRACE  [main] BasicBinder: binding parameter [2] as [DOUBLE] - [2.0]
2020-11-25 21:17:37,827 TRACE  [main] BasicBinder: binding parameter [3] as [INTEGER] - [0]
2020-11-25 21:17:37,827 TRACE  [main] BasicBinder: binding parameter [4] as [BOOLEAN] - [true]
2020-11-25 21:17:37,828 TRACE  [main] BasicBinder: binding parameter [5] as [INTEGER] - [2]
2020-11-25 21:17:37,828 TRACE  [main] BasicBinder: binding parameter [6] as [BIGINT] - [4]
2020-11-25 21:17:37,829 TRACE  [main] BasicBinder: binding parameter [1] as [BLOB] - [null]
2020-11-25 21:17:37,829 TRACE  [main] BasicBinder: binding parameter [2] as [DOUBLE] - [3.0]
2020-11-25 21:17:37,829 TRACE  [main] BasicBinder: binding parameter [3] as [INTEGER] - [0]
2020-11-25 21:17:37,829 TRACE  [main] BasicBinder: binding parameter [4] as [BOOLEAN] - [true]
2020-11-25 21:17:37,829 TRACE  [main] BasicBinder: binding parameter [5] as [INTEGER] - [3]
2020-11-25 21:17:37,830 TRACE  [main] BasicBinder: binding parameter [6] as [BIGINT] - [4]
2020-11-25 21:17:37,831 TRACE  [main] BasicBinder: binding parameter [1] as [BLOB] - [null]
2020-11-25 21:17:37,831 TRACE  [main] BasicBinder: binding parameter [2] as [DOUBLE] - [4.0]
2020-11-25 21:17:37,831 TRACE  [main] BasicBinder: binding parameter [3] as [INTEGER] - [0]
2020-11-25 21:17:37,832 TRACE  [main] BasicBinder: binding parameter [4] as [BOOLEAN] - [true]
2020-11-25 21:17:37,832 TRACE  [main] BasicBinder: binding parameter [5] as [INTEGER] - [4]
2020-11-25 21:17:37,832 TRACE  [main] BasicBinder: binding parameter [6] as [BIGINT] - [4]
2020-11-25 21:17:37,833 TRACE  [main] BasicBinder: binding parameter [1] as [BLOB] - [null]
2020-11-25 21:17:37,833 TRACE  [main] BasicBinder: binding parameter [2] as [DOUBLE] - [5.0]
2020-11-25 21:17:37,833 TRACE  [main] BasicBinder: binding parameter [3] as [INTEGER] - [0]
2020-11-25 21:17:37,833 TRACE  [main] BasicBinder: binding parameter [4] as [BOOLEAN] - [true]
2020-11-25 21:17:37,834 TRACE  [main] BasicBinder: binding parameter [5] as [INTEGER] - [5]
2020-11-25 21:17:37,834 TRACE  [main] BasicBinder: binding parameter [6] as [BIGINT] - [4]
2020-11-25 21:17:37,836 TRACE  [main] BasicBinder: binding parameter [1] as [BLOB] - [null]
2020-11-25 21:17:37,836 TRACE  [main] BasicBinder: binding parameter [2] as [DOUBLE] - [6.0]
2020-11-25 21:17:37,836 TRACE  [main] BasicBinder: binding parameter [3] as [INTEGER] - [0]
2020-11-25 21:17:37,836 TRACE  [main] BasicBinder: binding parameter [4] as [BOOLEAN] - [true]
2020-11-25 21:17:37,837 TRACE  [main] BasicBinder: binding parameter [5] as [INTEGER] - [6]
2020-11-25 21:17:37,837 TRACE  [main] BasicBinder: binding parameter [6] as [BIGINT] - [4]
2020-11-25 21:17:37,838 TRACE  [main] BasicBinder: binding parameter [1] as [BLOB] - [null]
2020-11-25 21:17:37,838 TRACE  [main] BasicBinder: binding parameter [2] as [DOUBLE] - [7.0]
2020-11-25 21:17:37,838 TRACE  [main] BasicBinder: binding parameter [3] as [INTEGER] - [0]
2020-11-25 21:17:37,838 TRACE  [main] BasicBinder: binding parameter [4] as [BOOLEAN] - [true]
2020-11-25 21:17:37,838 TRACE  [main] BasicBinder: binding parameter [5] as [INTEGER] - [7]
2020-11-25 21:17:37,838 TRACE  [main] BasicBinder: binding parameter [6] as [BIGINT] - [4]
2020-11-25 21:17:37,840 TRACE  [main] BasicBinder: binding parameter [1] as [BLOB] - [null]
2020-11-25 21:17:37,840 TRACE  [main] BasicBinder: binding parameter [2] as [DOUBLE] - [8.0]
2020-11-25 21:17:37,840 TRACE  [main] BasicBinder: binding parameter [3] as [INTEGER] - [0]
2020-11-25 21:17:37,840 TRACE  [main] BasicBinder: binding parameter [4] as [BOOLEAN] - [true]
2020-11-25 21:17:37,841 TRACE  [main] BasicBinder: binding parameter [5] as [INTEGER] - [8]
2020-11-25 21:17:37,841 TRACE  [main] BasicBinder: binding parameter [6] as [BIGINT] - [4]
2020-11-25 21:17:37,842 TRACE  [main] BasicBinder: binding parameter [1] as [BLOB] - [null]
2020-11-25 21:17:37,842 TRACE  [main] BasicBinder: binding parameter [2] as [DOUBLE] - [9.0]
2020-11-25 21:17:37,842 TRACE  [main] BasicBinder: binding parameter [3] as [INTEGER] - [0]
2020-11-25 21:17:37,842 TRACE  [main] BasicBinder: binding parameter [4] as [BOOLEAN] - [true]
2020-11-25 21:17:37,842 TRACE  [main] BasicBinder: binding parameter [5] as [INTEGER] - [9]
2020-11-25 21:17:37,842 TRACE  [main] BasicBinder: binding parameter [6] as [BIGINT] - [4]
2020-11-25 21:17:38,101 TRACE  [main] BasicExtractor: extracted value ([id1_1_] : [BIGINT]) - [1]
2020-11-25 21:17:38,102 TRACE  [main] BasicExtractor: extracted value ([descript2_1_] : [BLOB]) - [[70, 105, 110, 100, 32, 97, 108, 108, 32, 114, 111, 111, 116, 115, 32, 111, 102, 32, 103, 105, 118, 101, 110, 32, 112, 111, 108, 121, 110, 111, 109, 105, 97, 108]]
2020-11-25 21:17:38,103 TRACE  [main] BasicExtractor: extracted value ([is_solve3_1_] : [BOOLEAN]) - [false]
2020-11-25 21:17:38,103 TRACE  [main] BasicExtractor: extracted value ([kind4_1_] : [VARCHAR]) - [POLYNOMIAL]
2020-11-25 21:17:38,104 TRACE  [main] BasicExtractor: extracted value ([matrix_d5_1_] : [INTEGER]) - [1]
2020-11-25 21:17:38,104 TRACE  [main] BasicExtractor: extracted value ([parent_p7_1_] : [BIGINT]) - [null]
2020-11-25 21:17:38,105 TRACE  [main] BasicExtractor: extracted value ([problem_6_1_] : [INTEGER]) - [6]
2020-11-25 21:17:38,106 TRACE  [main] BasicExtractor: extracted value ([id1_1_] : [BIGINT]) - [2]
2020-11-25 21:17:38,107 TRACE  [main] BasicExtractor: extracted value ([descript2_1_] : [BLOB]) - [[100, 101, 115, 99, 114, 105, 112, 116, 105, 111, 110, 100, 101, 115, 99, 114, 105, 112, 116, 105, 111, 110]]
2020-11-25 21:17:38,108 TRACE  [main] BasicExtractor: extracted value ([is_solve3_1_] : [BOOLEAN]) - [null]
2020-11-25 21:17:38,108 TRACE  [main] BasicExtractor: extracted value ([kind4_1_] : [VARCHAR]) - [POLYNOMIAL]
2020-11-25 21:17:38,108 TRACE  [main] BasicExtractor: extracted value ([matrix_d5_1_] : [INTEGER]) - [1]
2020-11-25 21:17:38,109 TRACE  [main] BasicExtractor: extracted value ([parent_p7_1_] : [BIGINT]) - [null]
2020-11-25 21:17:38,109 TRACE  [main] BasicExtractor: extracted value ([problem_6_1_] : [INTEGER]) - [22]
2020-11-25 21:17:38,110 TRACE  [main] BasicExtractor: extracted value ([id1_1_] : [BIGINT]) - [3]
2020-11-25 21:17:38,110 TRACE  [main] BasicExtractor: extracted value ([descript2_1_] : [BLOB]) - [[112, 114, 111, 98, 108, 101, 109, 100, 101, 115, 99, 114, 105, 112, 116, 105, 111, 110]]
2020-11-25 21:17:38,111 TRACE  [main] BasicExtractor: extracted value ([is_solve3_1_] : [BOOLEAN]) - [null]
2020-11-25 21:17:38,111 TRACE  [main] BasicExtractor: extracted value ([kind4_1_] : [VARCHAR]) - [POLYNOMIAL]
2020-11-25 21:17:38,111 TRACE  [main] BasicExtractor: extracted value ([matrix_d5_1_] : [INTEGER]) - [1]
2020-11-25 21:17:38,112 TRACE  [main] BasicExtractor: extracted value ([parent_p7_1_] : [BIGINT]) - [null]
2020-11-25 21:17:38,112 TRACE  [main] BasicExtractor: extracted value ([problem_6_1_] : [INTEGER]) - [22]
2020-11-25 21:17:38,112 TRACE  [main] BasicExtractor: extracted value ([id1_1_] : [BIGINT]) - [4]
2020-11-25 21:17:38,113 TRACE  [main] BasicExtractor: extracted value ([descript2_1_] : [BLOB]) - [[100, 101, 115, 99, 114, 105, 112, 116, 105, 111, 110]]
2020-11-25 21:17:38,113 TRACE  [main] BasicExtractor: extracted value ([is_solve3_1_] : [BOOLEAN]) - [false]
2020-11-25 21:17:38,113 TRACE  [main] BasicExtractor: extracted value ([kind4_1_] : [VARCHAR]) - [POLYNOMIAL]
2020-11-25 21:17:38,114 TRACE  [main] BasicExtractor: extracted value ([matrix_d5_1_] : [INTEGER]) - [12]
2020-11-25 21:17:38,114 TRACE  [main] BasicExtractor: extracted value ([parent_p7_1_] : [BIGINT]) - [null]
2020-11-25 21:17:38,114 TRACE  [main] BasicExtractor: extracted value ([problem_6_1_] : [INTEGER]) - [null]
2020-11-25 21:17:38,115 TRACE  [main] BasicExtractor: extracted value ([id1_1_] : [BIGINT]) - [5]
2020-11-25 21:17:38,115 TRACE  [main] BasicExtractor: extracted value ([descript2_1_] : [BLOB]) - [[112, 114, 111, 98, 108, 101, 109, 100, 101, 115, 99, 114, 105, 112, 116, 105, 111, 110]]
2020-11-25 21:17:38,116 TRACE  [main] BasicExtractor: extracted value ([is_solve3_1_] : [BOOLEAN]) - [null]
2020-11-25 21:17:38,116 TRACE  [main] BasicExtractor: extracted value ([kind4_1_] : [VARCHAR]) - [POLYNOMIAL]
2020-11-25 21:17:38,117 TRACE  [main] BasicExtractor: extracted value ([matrix_d5_1_] : [INTEGER]) - [1]
2020-11-25 21:17:38,117 TRACE  [main] BasicExtractor: extracted value ([parent_p7_1_] : [BIGINT]) - [null]
2020-11-25 21:17:38,117 TRACE  [main] BasicExtractor: extracted value ([problem_6_1_] : [INTEGER]) - [22]
2020-11-25 21:17:38,118 TRACE  [main] CollectionType: Created collection wrapper: [com.sf.back.entities.Problem.children#1]
2020-11-25 21:17:38,118 TRACE  [main] CollectionType: Created collection wrapper: [com.sf.back.entities.Problem.matrixes#1]
2020-11-25 21:17:38,118 TRACE  [main] CollectionType: Created collection wrapper: [com.sf.back.entities.Problem.children#2]
2020-11-25 21:17:38,119 TRACE  [main] CollectionType: Created collection wrapper: [com.sf.back.entities.Problem.matrixes#2]
2020-11-25 21:17:38,120 TRACE  [main] CollectionType: Created collection wrapper: [com.sf.back.entities.Problem.children#3]
2020-11-25 21:17:38,120 TRACE  [main] CollectionType: Created collection wrapper: [com.sf.back.entities.Problem.matrixes#3]
2020-11-25 21:17:38,120 TRACE  [main] CollectionType: Created collection wrapper: [com.sf.back.entities.Problem.children#4]
2020-11-25 21:17:38,120 TRACE  [main] CollectionType: Created collection wrapper: [com.sf.back.entities.Problem.matrixes#4]
2020-11-25 21:17:38,120 TRACE  [main] CollectionType: Created collection wrapper: [com.sf.back.entities.Problem.children#5]
2020-11-25 21:17:38,121 TRACE  [main] CollectionType: Created collection wrapper: [com.sf.back.entities.Problem.matrixes#5]
2020-11-25 21:17:38,122 TRACE  [main] BasicBinder: binding parameter [1] as [BIGINT] - [5]
2020-11-25 21:17:38,123 TRACE  [main] BasicExtractor: extracted value ([id1_0_1_] : [BIGINT]) - [28]
2020-11-25 21:17:38,123 TRACE  [main] BasicExtractor: extracted value ([binary_v2_0_1_] : [BLOB]) - [null]
2020-11-25 21:17:38,124 TRACE  [main] BasicExtractor: extracted value ([float_va3_0_1_] : [DOUBLE]) - [1.0]
2020-11-25 21:17:38,125 TRACE  [main] BasicExtractor: extracted value ([i4_0_1_] : [INTEGER]) - [0]
2020-11-25 21:17:38,126 TRACE  [main] BasicExtractor: extracted value ([is_condi5_0_1_] : [BOOLEAN]) - [true]
2020-11-25 21:17:38,126 TRACE  [main] BasicExtractor: extracted value ([j6_0_1_] : [INTEGER]) - [0]
2020-11-25 21:17:38,127 TRACE  [main] BasicExtractor: extracted value ([problem_7_0_1_] : [BIGINT]) - [5]
2020-11-25 21:17:38,127 TRACE  [main] BasicExtractor: extracted value ([problem_7_0_0_] : [BIGINT]) - [5]
2020-11-25 21:17:38,127 TRACE  [main] BasicExtractor: extracted value ([id1_0_0_] : [BIGINT]) - [28]
2020-11-25 21:17:38,128 TRACE  [main] BasicExtractor: extracted value ([id1_0_1_] : [BIGINT]) - [29]
2020-11-25 21:17:38,130 TRACE  [main] BasicExtractor: extracted value ([binary_v2_0_1_] : [BLOB]) - [null]
2020-11-25 21:17:38,131 TRACE  [main] BasicExtractor: extracted value ([float_va3_0_1_] : [DOUBLE]) - [2.718281828459045]
2020-11-25 21:17:38,134 TRACE  [main] BasicExtractor: extracted value ([i4_0_1_] : [INTEGER]) - [0]
2020-11-25 21:17:38,134 TRACE  [main] BasicExtractor: extracted value ([is_condi5_0_1_] : [BOOLEAN]) - [true]
2020-11-25 21:17:38,135 TRACE  [main] BasicExtractor: extracted value ([j6_0_1_] : [INTEGER]) - [1]
2020-11-25 21:17:38,135 TRACE  [main] BasicExtractor: extracted value ([problem_7_0_1_] : [BIGINT]) - [5]
2020-11-25 21:17:38,135 TRACE  [main] BasicExtractor: extracted value ([problem_7_0_0_] : [BIGINT]) - [5]
2020-11-25 21:17:38,137 TRACE  [main] BasicExtractor: extracted value ([id1_0_0_] : [BIGINT]) - [29]
2020-11-25 21:17:38,138 TRACE  [main] BasicExtractor: extracted value ([id1_0_1_] : [BIGINT]) - [30]
2020-11-25 21:17:38,138 TRACE  [main] BasicExtractor: extracted value ([binary_v2_0_1_] : [BLOB]) - [null]
2020-11-25 21:17:38,139 TRACE  [main] BasicExtractor: extracted value ([float_va3_0_1_] : [DOUBLE]) - [7.38905609893065]
2020-11-25 21:17:38,139 TRACE  [main] BasicExtractor: extracted value ([i4_0_1_] : [INTEGER]) - [0]
2020-11-25 21:17:38,140 TRACE  [main] BasicExtractor: extracted value ([is_condi5_0_1_] : [BOOLEAN]) - [true]
2020-11-25 21:17:38,140 TRACE  [main] BasicExtractor: extracted value ([j6_0_1_] : [INTEGER]) - [2]
2020-11-25 21:17:38,140 TRACE  [main] BasicExtractor: extracted value ([problem_7_0_1_] : [BIGINT]) - [5]
2020-11-25 21:17:38,141 TRACE  [main] BasicExtractor: extracted value ([problem_7_0_0_] : [BIGINT]) - [5]
2020-11-25 21:17:38,141 TRACE  [main] BasicExtractor: extracted value ([id1_0_0_] : [BIGINT]) - [30]
2020-11-25 21:17:38,142 TRACE  [main] BasicExtractor: extracted value ([id1_0_1_] : [BIGINT]) - [31]
2020-11-25 21:17:38,144 TRACE  [main] BasicExtractor: extracted value ([binary_v2_0_1_] : [BLOB]) - [null]
2020-11-25 21:17:38,144 TRACE  [main] BasicExtractor: extracted value ([float_va3_0_1_] : [DOUBLE]) - [20.085536923187668]
2020-11-25 21:17:38,144 TRACE  [main] BasicExtractor: extracted value ([i4_0_1_] : [INTEGER]) - [0]
2020-11-25 21:17:38,144 TRACE  [main] BasicExtractor: extracted value ([is_condi5_0_1_] : [BOOLEAN]) - [true]
2020-11-25 21:17:38,144 TRACE  [main] BasicExtractor: extracted value ([j6_0_1_] : [INTEGER]) - [3]
2020-11-25 21:17:38,145 TRACE  [main] BasicExtractor: extracted value ([problem_7_0_1_] : [BIGINT]) - [5]
2020-11-25 21:17:38,145 TRACE  [main] BasicExtractor: extracted value ([problem_7_0_0_] : [BIGINT]) - [5]
2020-11-25 21:17:38,145 TRACE  [main] BasicExtractor: extracted value ([id1_0_0_] : [BIGINT]) - [31]
2020-11-25 21:17:38,145 TRACE  [main] BasicExtractor: extracted value ([id1_0_1_] : [BIGINT]) - [32]
2020-11-25 21:17:38,146 TRACE  [main] BasicExtractor: extracted value ([binary_v2_0_1_] : [BLOB]) - [null]
2020-11-25 21:17:38,146 TRACE  [main] BasicExtractor: extracted value ([float_va3_0_1_] : [DOUBLE]) - [54.598150033144236]
2020-11-25 21:17:38,146 TRACE  [main] BasicExtractor: extracted value ([i4_0_1_] : [INTEGER]) - [0]
2020-11-25 21:17:38,147 TRACE  [main] BasicExtractor: extracted value ([is_condi5_0_1_] : [BOOLEAN]) - [true]
2020-11-25 21:17:38,147 TRACE  [main] BasicExtractor: extracted value ([j6_0_1_] : [INTEGER]) - [4]
2020-11-25 21:17:38,147 TRACE  [main] BasicExtractor: extracted value ([problem_7_0_1_] : [BIGINT]) - [5]
2020-11-25 21:17:38,147 TRACE  [main] BasicExtractor: extracted value ([problem_7_0_0_] : [BIGINT]) - [5]
2020-11-25 21:17:38,147 TRACE  [main] BasicExtractor: extracted value ([id1_0_0_] : [BIGINT]) - [32]
2020-11-25 21:17:38,147 TRACE  [main] BasicExtractor: extracted value ([id1_0_1_] : [BIGINT]) - [33]
2020-11-25 21:17:38,148 TRACE  [main] BasicExtractor: extracted value ([binary_v2_0_1_] : [BLOB]) - [null]
2020-11-25 21:17:38,148 TRACE  [main] BasicExtractor: extracted value ([float_va3_0_1_] : [DOUBLE]) - [148.4131591025766]
2020-11-25 21:17:38,148 TRACE  [main] BasicExtractor: extracted value ([i4_0_1_] : [INTEGER]) - [0]
2020-11-25 21:17:38,149 TRACE  [main] BasicExtractor: extracted value ([is_condi5_0_1_] : [BOOLEAN]) - [true]
2020-11-25 21:17:38,149 TRACE  [main] BasicExtractor: extracted value ([j6_0_1_] : [INTEGER]) - [5]
2020-11-25 21:17:38,149 TRACE  [main] BasicExtractor: extracted value ([problem_7_0_1_] : [BIGINT]) - [5]
2020-11-25 21:17:38,150 TRACE  [main] BasicExtractor: extracted value ([problem_7_0_0_] : [BIGINT]) - [5]
2020-11-25 21:17:38,150 TRACE  [main] BasicExtractor: extracted value ([id1_0_0_] : [BIGINT]) - [33]
2020-11-25 21:17:38,155 TRACE  [main] BasicBinder: binding parameter [1] as [BIGINT] - [5]
2020-11-25 21:17:38,158 TRACE  [main] BasicBinder: binding parameter [1] as [BIGINT] - [4]
2020-11-25 21:17:38,159 TRACE  [main] BasicExtractor: extracted value ([id1_0_1_] : [BIGINT]) - [18]
2020-11-25 21:17:38,159 TRACE  [main] BasicExtractor: extracted value ([binary_v2_0_1_] : [BLOB]) - [null]
2020-11-25 21:17:38,159 TRACE  [main] BasicExtractor: extracted value ([float_va3_0_1_] : [DOUBLE]) - [0.0]
2020-11-25 21:17:38,160 TRACE  [main] BasicExtractor: extracted value ([i4_0_1_] : [INTEGER]) - [0]
2020-11-25 21:17:38,160 TRACE  [main] BasicExtractor: extracted value ([is_condi5_0_1_] : [BOOLEAN]) - [true]
2020-11-25 21:17:38,160 TRACE  [main] BasicExtractor: extracted value ([j6_0_1_] : [INTEGER]) - [0]
2020-11-25 21:17:38,160 TRACE  [main] BasicExtractor: extracted value ([problem_7_0_1_] : [BIGINT]) - [4]
2020-11-25 21:17:38,160 TRACE  [main] BasicExtractor: extracted value ([problem_7_0_0_] : [BIGINT]) - [4]
2020-11-25 21:17:38,161 TRACE  [main] BasicExtractor: extracted value ([id1_0_0_] : [BIGINT]) - [18]
2020-11-25 21:17:38,161 TRACE  [main] BasicExtractor: extracted value ([id1_0_1_] : [BIGINT]) - [19]
2020-11-25 21:17:38,161 TRACE  [main] BasicExtractor: extracted value ([binary_v2_0_1_] : [BLOB]) - [null]
2020-11-25 21:17:38,162 TRACE  [main] BasicExtractor: extracted value ([float_va3_0_1_] : [DOUBLE]) - [1.0]
2020-11-25 21:17:38,162 TRACE  [main] BasicExtractor: extracted value ([i4_0_1_] : [INTEGER]) - [0]
2020-11-25 21:17:38,162 TRACE  [main] BasicExtractor: extracted value ([is_condi5_0_1_] : [BOOLEAN]) - [true]
2020-11-25 21:17:38,162 TRACE  [main] BasicExtractor: extracted value ([j6_0_1_] : [INTEGER]) - [1]
2020-11-25 21:17:38,162 TRACE  [main] BasicExtractor: extracted value ([problem_7_0_1_] : [BIGINT]) - [4]
2020-11-25 21:17:38,162 TRACE  [main] BasicExtractor: extracted value ([problem_7_0_0_] : [BIGINT]) - [4]
2020-11-25 21:17:38,163 TRACE  [main] BasicExtractor: extracted value ([id1_0_0_] : [BIGINT]) - [19]
2020-11-25 21:17:38,163 TRACE  [main] BasicExtractor: extracted value ([id1_0_1_] : [BIGINT]) - [20]
2020-11-25 21:17:38,163 TRACE  [main] BasicExtractor: extracted value ([binary_v2_0_1_] : [BLOB]) - [null]
2020-11-25 21:17:38,163 TRACE  [main] BasicExtractor: extracted value ([float_va3_0_1_] : [DOUBLE]) - [2.0]
2020-11-25 21:17:38,164 TRACE  [main] BasicExtractor: extracted value ([i4_0_1_] : [INTEGER]) - [0]
2020-11-25 21:17:38,164 TRACE  [main] BasicExtractor: extracted value ([is_condi5_0_1_] : [BOOLEAN]) - [true]
2020-11-25 21:17:38,164 TRACE  [main] BasicExtractor: extracted value ([j6_0_1_] : [INTEGER]) - [2]
2020-11-25 21:17:38,164 TRACE  [main] BasicExtractor: extracted value ([problem_7_0_1_] : [BIGINT]) - [4]
2020-11-25 21:17:38,164 TRACE  [main] BasicExtractor: extracted value ([problem_7_0_0_] : [BIGINT]) - [4]
2020-11-25 21:17:38,165 TRACE  [main] BasicExtractor: extracted value ([id1_0_0_] : [BIGINT]) - [20]
2020-11-25 21:17:38,165 TRACE  [main] BasicExtractor: extracted value ([id1_0_1_] : [BIGINT]) - [21]
2020-11-25 21:17:38,165 TRACE  [main] BasicExtractor: extracted value ([binary_v2_0_1_] : [BLOB]) - [null]
2020-11-25 21:17:38,165 TRACE  [main] BasicExtractor: extracted value ([float_va3_0_1_] : [DOUBLE]) - [3.0]
2020-11-25 21:17:38,165 TRACE  [main] BasicExtractor: extracted value ([i4_0_1_] : [INTEGER]) - [0]
2020-11-25 21:17:38,165 TRACE  [main] BasicExtractor: extracted value ([is_condi5_0_1_] : [BOOLEAN]) - [true]
2020-11-25 21:17:38,165 TRACE  [main] BasicExtractor: extracted value ([j6_0_1_] : [INTEGER]) - [3]
2020-11-25 21:17:38,166 TRACE  [main] BasicExtractor: extracted value ([problem_7_0_1_] : [BIGINT]) - [4]
2020-11-25 21:17:38,166 TRACE  [main] BasicExtractor: extracted value ([problem_7_0_0_] : [BIGINT]) - [4]
2020-11-25 21:17:38,166 TRACE  [main] BasicExtractor: extracted value ([id1_0_0_] : [BIGINT]) - [21]
2020-11-25 21:17:38,167 TRACE  [main] BasicExtractor: extracted value ([id1_0_1_] : [BIGINT]) - [22]
2020-11-25 21:17:38,167 TRACE  [main] BasicExtractor: extracted value ([binary_v2_0_1_] : [BLOB]) - [null]
2020-11-25 21:17:38,167 TRACE  [main] BasicExtractor: extracted value ([float_va3_0_1_] : [DOUBLE]) - [4.0]
2020-11-25 21:17:38,167 TRACE  [main] BasicExtractor: extracted value ([i4_0_1_] : [INTEGER]) - [0]
2020-11-25 21:17:38,167 TRACE  [main] BasicExtractor: extracted value ([is_condi5_0_1_] : [BOOLEAN]) - [true]
2020-11-25 21:17:38,167 TRACE  [main] BasicExtractor: extracted value ([j6_0_1_] : [INTEGER]) - [4]
2020-11-25 21:17:38,167 TRACE  [main] BasicExtractor: extracted value ([problem_7_0_1_] : [BIGINT]) - [4]
2020-11-25 21:17:38,167 TRACE  [main] BasicExtractor: extracted value ([problem_7_0_0_] : [BIGINT]) - [4]
2020-11-25 21:17:38,167 TRACE  [main] BasicExtractor: extracted value ([id1_0_0_] : [BIGINT]) - [22]
2020-11-25 21:17:38,168 TRACE  [main] BasicExtractor: extracted value ([id1_0_1_] : [BIGINT]) - [23]
2020-11-25 21:17:38,168 TRACE  [main] BasicExtractor: extracted value ([binary_v2_0_1_] : [BLOB]) - [null]
2020-11-25 21:17:38,168 TRACE  [main] BasicExtractor: extracted value ([float_va3_0_1_] : [DOUBLE]) - [5.0]
2020-11-25 21:17:38,169 TRACE  [main] BasicExtractor: extracted value ([i4_0_1_] : [INTEGER]) - [0]
2020-11-25 21:17:38,169 TRACE  [main] BasicExtractor: extracted value ([is_condi5_0_1_] : [BOOLEAN]) - [true]
2020-11-25 21:17:38,169 TRACE  [main] BasicExtractor: extracted value ([j6_0_1_] : [INTEGER]) - [5]
2020-11-25 21:17:38,169 TRACE  [main] BasicExtractor: extracted value ([problem_7_0_1_] : [BIGINT]) - [4]
2020-11-25 21:17:38,170 TRACE  [main] BasicExtractor: extracted value ([problem_7_0_0_] : [BIGINT]) - [4]
2020-11-25 21:17:38,170 TRACE  [main] BasicExtractor: extracted value ([id1_0_0_] : [BIGINT]) - [23]
2020-11-25 21:17:38,170 TRACE  [main] BasicExtractor: extracted value ([id1_0_1_] : [BIGINT]) - [24]
2020-11-25 21:17:38,171 TRACE  [main] BasicExtractor: extracted value ([binary_v2_0_1_] : [BLOB]) - [null]
2020-11-25 21:17:38,171 TRACE  [main] BasicExtractor: extracted value ([float_va3_0_1_] : [DOUBLE]) - [6.0]
2020-11-25 21:17:38,171 TRACE  [main] BasicExtractor: extracted value ([i4_0_1_] : [INTEGER]) - [0]
2020-11-25 21:17:38,171 TRACE  [main] BasicExtractor: extracted value ([is_condi5_0_1_] : [BOOLEAN]) - [true]
2020-11-25 21:17:38,171 TRACE  [main] BasicExtractor: extracted value ([j6_0_1_] : [INTEGER]) - [6]
2020-11-25 21:17:38,172 TRACE  [main] BasicExtractor: extracted value ([problem_7_0_1_] : [BIGINT]) - [4]
2020-11-25 21:17:38,172 TRACE  [main] BasicExtractor: extracted value ([problem_7_0_0_] : [BIGINT]) - [4]
2020-11-25 21:17:38,172 TRACE  [main] BasicExtractor: extracted value ([id1_0_0_] : [BIGINT]) - [24]
2020-11-25 21:17:38,172 TRACE  [main] BasicExtractor: extracted value ([id1_0_1_] : [BIGINT]) - [25]
2020-11-25 21:17:38,172 TRACE  [main] BasicExtractor: extracted value ([binary_v2_0_1_] : [BLOB]) - [null]
2020-11-25 21:17:38,172 TRACE  [main] BasicExtractor: extracted value ([float_va3_0_1_] : [DOUBLE]) - [7.0]
2020-11-25 21:17:38,173 TRACE  [main] BasicExtractor: extracted value ([i4_0_1_] : [INTEGER]) - [0]
2020-11-25 21:17:38,173 TRACE  [main] BasicExtractor: extracted value ([is_condi5_0_1_] : [BOOLEAN]) - [true]
2020-11-25 21:17:38,173 TRACE  [main] BasicExtractor: extracted value ([j6_0_1_] : [INTEGER]) - [7]
2020-11-25 21:17:38,173 TRACE  [main] BasicExtractor: extracted value ([problem_7_0_1_] : [BIGINT]) - [4]
2020-11-25 21:17:38,173 TRACE  [main] BasicExtractor: extracted value ([problem_7_0_0_] : [BIGINT]) - [4]
2020-11-25 21:17:38,173 TRACE  [main] BasicExtractor: extracted value ([id1_0_0_] : [BIGINT]) - [25]
2020-11-25 21:17:38,173 TRACE  [main] BasicExtractor: extracted value ([id1_0_1_] : [BIGINT]) - [26]
2020-11-25 21:17:38,174 TRACE  [main] BasicExtractor: extracted value ([binary_v2_0_1_] : [BLOB]) - [null]
2020-11-25 21:17:38,174 TRACE  [main] BasicExtractor: extracted value ([float_va3_0_1_] : [DOUBLE]) - [8.0]
2020-11-25 21:17:38,174 TRACE  [main] BasicExtractor: extracted value ([i4_0_1_] : [INTEGER]) - [0]
2020-11-25 21:17:38,174 TRACE  [main] BasicExtractor: extracted value ([is_condi5_0_1_] : [BOOLEAN]) - [true]
2020-11-25 21:17:38,174 TRACE  [main] BasicExtractor: extracted value ([j6_0_1_] : [INTEGER]) - [8]
2020-11-25 21:17:38,174 TRACE  [main] BasicExtractor: extracted value ([problem_7_0_1_] : [BIGINT]) - [4]
2020-11-25 21:17:38,175 TRACE  [main] BasicExtractor: extracted value ([problem_7_0_0_] : [BIGINT]) - [4]
2020-11-25 21:17:38,175 TRACE  [main] BasicExtractor: extracted value ([id1_0_0_] : [BIGINT]) - [26]
2020-11-25 21:17:38,175 TRACE  [main] BasicExtractor: extracted value ([id1_0_1_] : [BIGINT]) - [27]
2020-11-25 21:17:38,175 TRACE  [main] BasicExtractor: extracted value ([binary_v2_0_1_] : [BLOB]) - [null]
2020-11-25 21:17:38,175 TRACE  [main] BasicExtractor: extracted value ([float_va3_0_1_] : [DOUBLE]) - [9.0]
2020-11-25 21:17:38,175 TRACE  [main] BasicExtractor: extracted value ([i4_0_1_] : [INTEGER]) - [0]
2020-11-25 21:17:38,176 TRACE  [main] BasicExtractor: extracted value ([is_condi5_0_1_] : [BOOLEAN]) - [true]
2020-11-25 21:17:38,176 TRACE  [main] BasicExtractor: extracted value ([j6_0_1_] : [INTEGER]) - [9]
2020-11-25 21:17:38,176 TRACE  [main] BasicExtractor: extracted value ([problem_7_0_1_] : [BIGINT]) - [4]
2020-11-25 21:17:38,176 TRACE  [main] BasicExtractor: extracted value ([problem_7_0_0_] : [BIGINT]) - [4]
2020-11-25 21:17:38,176 TRACE  [main] BasicExtractor: extracted value ([id1_0_0_] : [BIGINT]) - [27]
2020-11-25 21:17:38,177 TRACE  [main] BasicBinder: binding parameter [1] as [BIGINT] - [4]
2020-11-25 21:17:38,178 TRACE  [main] BasicBinder: binding parameter [1] as [BIGINT] - [3]
2020-11-25 21:17:38,179 TRACE  [main] BasicExtractor: extracted value ([id1_0_1_] : [BIGINT]) - [12]
2020-11-25 21:17:38,180 TRACE  [main] BasicExtractor: extracted value ([binary_v2_0_1_] : [BLOB]) - [null]
2020-11-25 21:17:38,180 TRACE  [main] BasicExtractor: extracted value ([float_va3_0_1_] : [DOUBLE]) - [1.0]
2020-11-25 21:17:38,180 TRACE  [main] BasicExtractor: extracted value ([i4_0_1_] : [INTEGER]) - [0]
2020-11-25 21:17:38,180 TRACE  [main] BasicExtractor: extracted value ([is_condi5_0_1_] : [BOOLEAN]) - [true]
2020-11-25 21:17:38,181 TRACE  [main] BasicExtractor: extracted value ([j6_0_1_] : [INTEGER]) - [0]
2020-11-25 21:17:38,181 TRACE  [main] BasicExtractor: extracted value ([problem_7_0_1_] : [BIGINT]) - [3]
2020-11-25 21:17:38,181 TRACE  [main] BasicExtractor: extracted value ([problem_7_0_0_] : [BIGINT]) - [3]
2020-11-25 21:17:38,181 TRACE  [main] BasicExtractor: extracted value ([id1_0_0_] : [BIGINT]) - [12]
2020-11-25 21:17:38,181 TRACE  [main] BasicExtractor: extracted value ([id1_0_1_] : [BIGINT]) - [13]
2020-11-25 21:17:38,182 TRACE  [main] BasicExtractor: extracted value ([binary_v2_0_1_] : [BLOB]) - [null]
2020-11-25 21:17:38,182 TRACE  [main] BasicExtractor: extracted value ([float_va3_0_1_] : [DOUBLE]) - [2.718281828459045]
2020-11-25 21:17:38,182 TRACE  [main] BasicExtractor: extracted value ([i4_0_1_] : [INTEGER]) - [0]
2020-11-25 21:17:38,182 TRACE  [main] BasicExtractor: extracted value ([is_condi5_0_1_] : [BOOLEAN]) - [true]
2020-11-25 21:17:38,182 TRACE  [main] BasicExtractor: extracted value ([j6_0_1_] : [INTEGER]) - [1]
2020-11-25 21:17:38,182 TRACE  [main] BasicExtractor: extracted value ([problem_7_0_1_] : [BIGINT]) - [3]
2020-11-25 21:17:38,182 TRACE  [main] BasicExtractor: extracted value ([problem_7_0_0_] : [BIGINT]) - [3]
2020-11-25 21:17:38,182 TRACE  [main] BasicExtractor: extracted value ([id1_0_0_] : [BIGINT]) - [13]
2020-11-25 21:17:38,183 TRACE  [main] BasicExtractor: extracted value ([id1_0_1_] : [BIGINT]) - [14]
2020-11-25 21:17:38,183 TRACE  [main] BasicExtractor: extracted value ([binary_v2_0_1_] : [BLOB]) - [null]
2020-11-25 21:17:38,183 TRACE  [main] BasicExtractor: extracted value ([float_va3_0_1_] : [DOUBLE]) - [7.38905609893065]
2020-11-25 21:17:38,183 TRACE  [main] BasicExtractor: extracted value ([i4_0_1_] : [INTEGER]) - [0]
2020-11-25 21:17:38,183 TRACE  [main] BasicExtractor: extracted value ([is_condi5_0_1_] : [BOOLEAN]) - [true]
2020-11-25 21:17:38,183 TRACE  [main] BasicExtractor: extracted value ([j6_0_1_] : [INTEGER]) - [2]
2020-11-25 21:17:38,183 TRACE  [main] BasicExtractor: extracted value ([problem_7_0_1_] : [BIGINT]) - [3]
2020-11-25 21:17:38,184 TRACE  [main] BasicExtractor: extracted value ([problem_7_0_0_] : [BIGINT]) - [3]
2020-11-25 21:17:38,184 TRACE  [main] BasicExtractor: extracted value ([id1_0_0_] : [BIGINT]) - [14]
2020-11-25 21:17:38,184 TRACE  [main] BasicExtractor: extracted value ([id1_0_1_] : [BIGINT]) - [15]
2020-11-25 21:17:38,185 TRACE  [main] BasicExtractor: extracted value ([binary_v2_0_1_] : [BLOB]) - [null]
2020-11-25 21:17:38,185 TRACE  [main] BasicExtractor: extracted value ([float_va3_0_1_] : [DOUBLE]) - [20.085536923187668]
2020-11-25 21:17:38,185 TRACE  [main] BasicExtractor: extracted value ([i4_0_1_] : [INTEGER]) - [0]
2020-11-25 21:17:38,186 TRACE  [main] BasicExtractor: extracted value ([is_condi5_0_1_] : [BOOLEAN]) - [true]
2020-11-25 21:17:38,186 TRACE  [main] BasicExtractor: extracted value ([j6_0_1_] : [INTEGER]) - [3]
2020-11-25 21:17:38,186 TRACE  [main] BasicExtractor: extracted value ([problem_7_0_1_] : [BIGINT]) - [3]
2020-11-25 21:17:38,186 TRACE  [main] BasicExtractor: extracted value ([problem_7_0_0_] : [BIGINT]) - [3]
2020-11-25 21:17:38,186 TRACE  [main] BasicExtractor: extracted value ([id1_0_0_] : [BIGINT]) - [15]
2020-11-25 21:17:38,186 TRACE  [main] BasicExtractor: extracted value ([id1_0_1_] : [BIGINT]) - [16]
2020-11-25 21:17:38,186 TRACE  [main] BasicExtractor: extracted value ([binary_v2_0_1_] : [BLOB]) - [null]
2020-11-25 21:17:38,187 TRACE  [main] BasicExtractor: extracted value ([float_va3_0_1_] : [DOUBLE]) - [54.598150033144236]
2020-11-25 21:17:38,187 TRACE  [main] BasicExtractor: extracted value ([i4_0_1_] : [INTEGER]) - [0]
2020-11-25 21:17:38,187 TRACE  [main] BasicExtractor: extracted value ([is_condi5_0_1_] : [BOOLEAN]) - [true]
2020-11-25 21:17:38,187 TRACE  [main] BasicExtractor: extracted value ([j6_0_1_] : [INTEGER]) - [4]
2020-11-25 21:17:38,187 TRACE  [main] BasicExtractor: extracted value ([problem_7_0_1_] : [BIGINT]) - [3]
2020-11-25 21:17:38,187 TRACE  [main] BasicExtractor: extracted value ([problem_7_0_0_] : [BIGINT]) - [3]
2020-11-25 21:17:38,187 TRACE  [main] BasicExtractor: extracted value ([id1_0_0_] : [BIGINT]) - [16]
2020-11-25 21:17:38,188 TRACE  [main] BasicExtractor: extracted value ([id1_0_1_] : [BIGINT]) - [17]
2020-11-25 21:17:38,188 TRACE  [main] BasicExtractor: extracted value ([binary_v2_0_1_] : [BLOB]) - [null]
2020-11-25 21:17:38,188 TRACE  [main] BasicExtractor: extracted value ([float_va3_0_1_] : [DOUBLE]) - [148.4131591025766]
2020-11-25 21:17:38,188 TRACE  [main] BasicExtractor: extracted value ([i4_0_1_] : [INTEGER]) - [0]
2020-11-25 21:17:38,188 TRACE  [main] BasicExtractor: extracted value ([is_condi5_0_1_] : [BOOLEAN]) - [true]
2020-11-25 21:17:38,188 TRACE  [main] BasicExtractor: extracted value ([j6_0_1_] : [INTEGER]) - [5]
2020-11-25 21:17:38,189 TRACE  [main] BasicExtractor: extracted value ([problem_7_0_1_] : [BIGINT]) - [3]
2020-11-25 21:17:38,189 TRACE  [main] BasicExtractor: extracted value ([problem_7_0_0_] : [BIGINT]) - [3]
2020-11-25 21:17:38,189 TRACE  [main] BasicExtractor: extracted value ([id1_0_0_] : [BIGINT]) - [17]
2020-11-25 21:17:38,198 TRACE  [main] BasicBinder: binding parameter [1] as [BIGINT] - [3]
2020-11-25 21:17:38,200 TRACE  [main] BasicBinder: binding parameter [1] as [BIGINT] - [2]
2020-11-25 21:17:38,200 TRACE  [main] BasicExtractor: extracted value ([id1_0_1_] : [BIGINT]) - [6]
2020-11-25 21:17:38,200 TRACE  [main] BasicExtractor: extracted value ([binary_v2_0_1_] : [BLOB]) - [null]
2020-11-25 21:17:38,201 TRACE  [main] BasicExtractor: extracted value ([float_va3_0_1_] : [DOUBLE]) - [1.01]
2020-11-25 21:17:38,201 TRACE  [main] BasicExtractor: extracted value ([i4_0_1_] : [INTEGER]) - [0]
2020-11-25 21:17:38,201 TRACE  [main] BasicExtractor: extracted value ([is_condi5_0_1_] : [BOOLEAN]) - [true]
2020-11-25 21:17:38,201 TRACE  [main] BasicExtractor: extracted value ([j6_0_1_] : [INTEGER]) - [0]
2020-11-25 21:17:38,201 TRACE  [main] BasicExtractor: extracted value ([problem_7_0_1_] : [BIGINT]) - [2]
2020-11-25 21:17:38,201 TRACE  [main] BasicExtractor: extracted value ([problem_7_0_0_] : [BIGINT]) - [2]
2020-11-25 21:17:38,201 TRACE  [main] BasicExtractor: extracted value ([id1_0_0_] : [BIGINT]) - [6]
2020-11-25 21:17:38,202 TRACE  [main] BasicExtractor: extracted value ([id1_0_1_] : [BIGINT]) - [7]
2020-11-25 21:17:38,202 TRACE  [main] BasicExtractor: extracted value ([binary_v2_0_1_] : [BLOB]) - [null]
2020-11-25 21:17:38,203 TRACE  [main] BasicExtractor: extracted value ([float_va3_0_1_] : [DOUBLE]) - [2.718281828459045]
2020-11-25 21:17:38,203 TRACE  [main] BasicExtractor: extracted value ([i4_0_1_] : [INTEGER]) - [0]
2020-11-25 21:17:38,203 TRACE  [main] BasicExtractor: extracted value ([is_condi5_0_1_] : [BOOLEAN]) - [true]
2020-11-25 21:17:38,203 TRACE  [main] BasicExtractor: extracted value ([j6_0_1_] : [INTEGER]) - [1]
2020-11-25 21:17:38,205 TRACE  [main] BasicExtractor: extracted value ([problem_7_0_1_] : [BIGINT]) - [2]
2020-11-25 21:17:38,205 TRACE  [main] BasicExtractor: extracted value ([problem_7_0_0_] : [BIGINT]) - [2]
2020-11-25 21:17:38,205 TRACE  [main] BasicExtractor: extracted value ([id1_0_0_] : [BIGINT]) - [7]
2020-11-25 21:17:38,205 TRACE  [main] BasicExtractor: extracted value ([id1_0_1_] : [BIGINT]) - [8]
2020-11-25 21:17:38,206 TRACE  [main] BasicExtractor: extracted value ([binary_v2_0_1_] : [BLOB]) - [null]
2020-11-25 21:17:38,206 TRACE  [main] BasicExtractor: extracted value ([float_va3_0_1_] : [DOUBLE]) - [7.38905609893065]
2020-11-25 21:17:38,206 TRACE  [main] BasicExtractor: extracted value ([i4_0_1_] : [INTEGER]) - [0]
2020-11-25 21:17:38,206 TRACE  [main] BasicExtractor: extracted value ([is_condi5_0_1_] : [BOOLEAN]) - [true]
2020-11-25 21:17:38,206 TRACE  [main] BasicExtractor: extracted value ([j6_0_1_] : [INTEGER]) - [2]
2020-11-25 21:17:38,206 TRACE  [main] BasicExtractor: extracted value ([problem_7_0_1_] : [BIGINT]) - [2]
2020-11-25 21:17:38,206 TRACE  [main] BasicExtractor: extracted value ([problem_7_0_0_] : [BIGINT]) - [2]
2020-11-25 21:17:38,207 TRACE  [main] BasicExtractor: extracted value ([id1_0_0_] : [BIGINT]) - [8]
2020-11-25 21:17:38,207 TRACE  [main] BasicExtractor: extracted value ([id1_0_1_] : [BIGINT]) - [9]
2020-11-25 21:17:38,207 TRACE  [main] BasicExtractor: extracted value ([binary_v2_0_1_] : [BLOB]) - [null]
2020-11-25 21:17:38,207 TRACE  [main] BasicExtractor: extracted value ([float_va3_0_1_] : [DOUBLE]) - [20.085536923187668]
2020-11-25 21:17:38,208 TRACE  [main] BasicExtractor: extracted value ([i4_0_1_] : [INTEGER]) - [0]
2020-11-25 21:17:38,208 TRACE  [main] BasicExtractor: extracted value ([is_condi5_0_1_] : [BOOLEAN]) - [true]
2020-11-25 21:17:38,208 TRACE  [main] BasicExtractor: extracted value ([j6_0_1_] : [INTEGER]) - [3]
2020-11-25 21:17:38,209 TRACE  [main] BasicExtractor: extracted value ([problem_7_0_1_] : [BIGINT]) - [2]
2020-11-25 21:17:38,209 TRACE  [main] BasicExtractor: extracted value ([problem_7_0_0_] : [BIGINT]) - [2]
2020-11-25 21:17:38,209 TRACE  [main] BasicExtractor: extracted value ([id1_0_0_] : [BIGINT]) - [9]
2020-11-25 21:17:38,209 TRACE  [main] BasicExtractor: extracted value ([id1_0_1_] : [BIGINT]) - [10]
2020-11-25 21:17:38,209 TRACE  [main] BasicExtractor: extracted value ([binary_v2_0_1_] : [BLOB]) - [null]
2020-11-25 21:17:38,209 TRACE  [main] BasicExtractor: extracted value ([float_va3_0_1_] : [DOUBLE]) - [54.598150033144236]
2020-11-25 21:17:38,209 TRACE  [main] BasicExtractor: extracted value ([i4_0_1_] : [INTEGER]) - [0]
2020-11-25 21:17:38,210 TRACE  [main] BasicExtractor: extracted value ([is_condi5_0_1_] : [BOOLEAN]) - [true]
2020-11-25 21:17:38,210 TRACE  [main] BasicExtractor: extracted value ([j6_0_1_] : [INTEGER]) - [4]
2020-11-25 21:17:38,210 TRACE  [main] BasicExtractor: extracted value ([problem_7_0_1_] : [BIGINT]) - [2]
2020-11-25 21:17:38,210 TRACE  [main] BasicExtractor: extracted value ([problem_7_0_0_] : [BIGINT]) - [2]
2020-11-25 21:17:38,210 TRACE  [main] BasicExtractor: extracted value ([id1_0_0_] : [BIGINT]) - [10]
2020-11-25 21:17:38,210 TRACE  [main] BasicExtractor: extracted value ([id1_0_1_] : [BIGINT]) - [11]
2020-11-25 21:17:38,211 TRACE  [main] BasicExtractor: extracted value ([binary_v2_0_1_] : [BLOB]) - [null]
2020-11-25 21:17:38,211 TRACE  [main] BasicExtractor: extracted value ([float_va3_0_1_] : [DOUBLE]) - [148.4131591025766]
2020-11-25 21:17:38,211 TRACE  [main] BasicExtractor: extracted value ([i4_0_1_] : [INTEGER]) - [0]
2020-11-25 21:17:38,211 TRACE  [main] BasicExtractor: extracted value ([is_condi5_0_1_] : [BOOLEAN]) - [true]
2020-11-25 21:17:38,211 TRACE  [main] BasicExtractor: extracted value ([j6_0_1_] : [INTEGER]) - [5]
2020-11-25 21:17:38,211 TRACE  [main] BasicExtractor: extracted value ([problem_7_0_1_] : [BIGINT]) - [2]
2020-11-25 21:17:38,211 TRACE  [main] BasicExtractor: extracted value ([problem_7_0_0_] : [BIGINT]) - [2]
2020-11-25 21:17:38,212 TRACE  [main] BasicExtractor: extracted value ([id1_0_0_] : [BIGINT]) - [11]
2020-11-25 21:17:38,213 TRACE  [main] BasicBinder: binding parameter [1] as [BIGINT] - [2]
2020-11-25 21:17:38,213 TRACE  [main] BasicBinder: binding parameter [1] as [BIGINT] - [1]
2020-11-25 21:17:38,214 TRACE  [main] BasicExtractor: extracted value ([id1_0_1_] : [BIGINT]) - [1]
2020-11-25 21:17:38,214 TRACE  [main] BasicExtractor: extracted value ([binary_v2_0_1_] : [BLOB]) - [null]
2020-11-25 21:17:38,214 TRACE  [main] BasicExtractor: extracted value ([float_va3_0_1_] : [DOUBLE]) - [1.0]
2020-11-25 21:17:38,214 TRACE  [main] BasicExtractor: extracted value ([i4_0_1_] : [INTEGER]) - [0]
2020-11-25 21:17:38,214 TRACE  [main] BasicExtractor: extracted value ([is_condi5_0_1_] : [BOOLEAN]) - [true]
2020-11-25 21:17:38,214 TRACE  [main] BasicExtractor: extracted value ([j6_0_1_] : [INTEGER]) - [0]
2020-11-25 21:17:38,215 TRACE  [main] BasicExtractor: extracted value ([problem_7_0_1_] : [BIGINT]) - [1]
2020-11-25 21:17:38,215 TRACE  [main] BasicExtractor: extracted value ([problem_7_0_0_] : [BIGINT]) - [1]
2020-11-25 21:17:38,215 TRACE  [main] BasicExtractor: extracted value ([id1_0_0_] : [BIGINT]) - [1]
2020-11-25 21:17:38,215 TRACE  [main] BasicExtractor: extracted value ([id1_0_1_] : [BIGINT]) - [2]
2020-11-25 21:17:38,215 TRACE  [main] BasicExtractor: extracted value ([binary_v2_0_1_] : [BLOB]) - [null]
2020-11-25 21:17:38,215 TRACE  [main] BasicExtractor: extracted value ([float_va3_0_1_] : [DOUBLE]) - [2.0]
2020-11-25 21:17:38,215 TRACE  [main] BasicExtractor: extracted value ([i4_0_1_] : [INTEGER]) - [0]
2020-11-25 21:17:38,215 TRACE  [main] BasicExtractor: extracted value ([is_condi5_0_1_] : [BOOLEAN]) - [true]
2020-11-25 21:17:38,215 TRACE  [main] BasicExtractor: extracted value ([j6_0_1_] : [INTEGER]) - [1]
2020-11-25 21:17:38,215 TRACE  [main] BasicExtractor: extracted value ([problem_7_0_1_] : [BIGINT]) - [1]
2020-11-25 21:17:38,215 TRACE  [main] BasicExtractor: extracted value ([problem_7_0_0_] : [BIGINT]) - [1]
2020-11-25 21:17:38,216 TRACE  [main] BasicExtractor: extracted value ([id1_0_0_] : [BIGINT]) - [2]
2020-11-25 21:17:38,216 TRACE  [main] BasicExtractor: extracted value ([id1_0_1_] : [BIGINT]) - [3]
2020-11-25 21:17:38,216 TRACE  [main] BasicExtractor: extracted value ([binary_v2_0_1_] : [BLOB]) - [null]
2020-11-25 21:17:38,216 TRACE  [main] BasicExtractor: extracted value ([float_va3_0_1_] : [DOUBLE]) - [1.0]
2020-11-25 21:17:38,216 TRACE  [main] BasicExtractor: extracted value ([i4_0_1_] : [INTEGER]) - [0]
2020-11-25 21:17:38,216 TRACE  [main] BasicExtractor: extracted value ([is_condi5_0_1_] : [BOOLEAN]) - [true]
2020-11-25 21:17:38,216 TRACE  [main] BasicExtractor: extracted value ([j6_0_1_] : [INTEGER]) - [2]
2020-11-25 21:17:38,216 TRACE  [main] BasicExtractor: extracted value ([problem_7_0_1_] : [BIGINT]) - [1]
2020-11-25 21:17:38,216 TRACE  [main] BasicExtractor: extracted value ([problem_7_0_0_] : [BIGINT]) - [1]
2020-11-25 21:17:38,216 TRACE  [main] BasicExtractor: extracted value ([id1_0_0_] : [BIGINT]) - [3]
2020-11-25 21:17:38,217 TRACE  [main] BasicExtractor: extracted value ([id1_0_1_] : [BIGINT]) - [4]
2020-11-25 21:17:38,217 TRACE  [main] BasicExtractor: extracted value ([binary_v2_0_1_] : [BLOB]) - [null]
2020-11-25 21:17:38,217 TRACE  [main] BasicExtractor: extracted value ([float_va3_0_1_] : [DOUBLE]) - [1.0]
2020-11-25 21:17:38,217 TRACE  [main] BasicExtractor: extracted value ([i4_0_1_] : [INTEGER]) - [0]
2020-11-25 21:17:38,217 TRACE  [main] BasicExtractor: extracted value ([is_condi5_0_1_] : [BOOLEAN]) - [false]
2020-11-25 21:17:38,217 TRACE  [main] BasicExtractor: extracted value ([j6_0_1_] : [INTEGER]) - [0]
2020-11-25 21:17:38,217 TRACE  [main] BasicExtractor: extracted value ([problem_7_0_1_] : [BIGINT]) - [1]
2020-11-25 21:17:38,217 TRACE  [main] BasicExtractor: extracted value ([problem_7_0_0_] : [BIGINT]) - [1]
2020-11-25 21:17:38,217 TRACE  [main] BasicExtractor: extracted value ([id1_0_0_] : [BIGINT]) - [4]
2020-11-25 21:17:38,218 TRACE  [main] BasicExtractor: extracted value ([id1_0_1_] : [BIGINT]) - [5]
2020-11-25 21:17:38,218 TRACE  [main] BasicExtractor: extracted value ([binary_v2_0_1_] : [BLOB]) - [null]
2020-11-25 21:17:38,218 TRACE  [main] BasicExtractor: extracted value ([float_va3_0_1_] : [DOUBLE]) - [1.0]
2020-11-25 21:17:38,218 TRACE  [main] BasicExtractor: extracted value ([i4_0_1_] : [INTEGER]) - [0]
2020-11-25 21:17:38,218 TRACE  [main] BasicExtractor: extracted value ([is_condi5_0_1_] : [BOOLEAN]) - [false]
2020-11-25 21:17:38,218 TRACE  [main] BasicExtractor: extracted value ([j6_0_1_] : [INTEGER]) - [1]
2020-11-25 21:17:38,218 TRACE  [main] BasicExtractor: extracted value ([problem_7_0_1_] : [BIGINT]) - [1]
2020-11-25 21:17:38,218 TRACE  [main] BasicExtractor: extracted value ([problem_7_0_0_] : [BIGINT]) - [1]
2020-11-25 21:17:38,219 TRACE  [main] BasicExtractor: extracted value ([id1_0_0_] : [BIGINT]) - [5]
2020-11-25 21:17:38,219 TRACE  [main] BasicBinder: binding parameter [1] as [BIGINT] - [1]
2020-11-25 21:17:38,247 TRACE  [main] BasicBinder: binding parameter [1] as [BIGINT] - [7]
2020-11-25 21:17:38,248 TRACE  [main] BasicExtractor: extracted value ([id1_1_2_] : [BIGINT]) - [null]
2020-11-25 21:17:38,249 TRACE  [main] BasicExtractor: extracted value ([id1_0_4_] : [BIGINT]) - [null]
2020-11-25 21:17:38,249 TRACE  [main] BasicExtractor: extracted value ([descript2_1_0_] : [BLOB]) - [[112, 114, 111, 98, 108, 101, 109, 100, 101, 115, 99, 114, 105, 112, 116, 105, 111, 110]]
2020-11-25 21:17:38,250 TRACE  [main] BasicExtractor: extracted value ([is_solve3_1_0_] : [BOOLEAN]) - [true]
2020-11-25 21:17:38,250 TRACE  [main] BasicExtractor: extracted value ([kind4_1_0_] : [VARCHAR]) - [POLYNOMIAL]
2020-11-25 21:17:38,250 TRACE  [main] BasicExtractor: extracted value ([matrix_d5_1_0_] : [INTEGER]) - [1]
2020-11-25 21:17:38,250 TRACE  [main] BasicExtractor: extracted value ([parent_p7_1_0_] : [BIGINT]) - [null]
2020-11-25 21:17:38,250 TRACE  [main] BasicExtractor: extracted value ([problem_6_1_0_] : [INTEGER]) - [0]
2020-11-25 21:17:38,251 TRACE  [main] BasicExtractor: extracted value ([problem_7_0_3_] : [BIGINT]) - [null]
2020-11-25 21:17:38,251 TRACE  [main] BasicExtractor: extracted value ([parent_p7_1_1_] : [BIGINT]) - [null]
2020-11-25 21:17:38,251 TRACE  [main] CollectionType: Created collection wrapper: [com.sf.back.entities.Problem.matrixes#7]
2020-11-25 21:17:38,252 TRACE  [main] BasicBinder: binding parameter [1] as [BIGINT] - [7]
2020-11-25 21:17:38,253 TRACE  [main] BasicExtractor: extracted value ([id1_0_1_] : [BIGINT]) - [40]
2020-11-25 21:17:38,253 TRACE  [main] BasicExtractor: extracted value ([binary_v2_0_1_] : [BLOB]) - [null]
2020-11-25 21:17:38,253 TRACE  [main] BasicExtractor: extracted value ([float_va3_0_1_] : [DOUBLE]) - [1.0]
2020-11-25 21:17:38,254 TRACE  [main] BasicExtractor: extracted value ([i4_0_1_] : [INTEGER]) - [0]
2020-11-25 21:17:38,254 TRACE  [main] BasicExtractor: extracted value ([is_condi5_0_1_] : [BOOLEAN]) - [true]
2020-11-25 21:17:38,254 TRACE  [main] BasicExtractor: extracted value ([j6_0_1_] : [INTEGER]) - [0]
2020-11-25 21:17:38,254 TRACE  [main] BasicExtractor: extracted value ([problem_7_0_1_] : [BIGINT]) - [7]
2020-11-25 21:17:38,254 TRACE  [main] BasicExtractor: extracted value ([problem_7_0_0_] : [BIGINT]) - [7]
2020-11-25 21:17:38,254 TRACE  [main] BasicExtractor: extracted value ([id1_0_0_] : [BIGINT]) - [40]
2020-11-25 21:17:38,255 TRACE  [main] BasicExtractor: extracted value ([id1_0_1_] : [BIGINT]) - [41]
2020-11-25 21:17:38,255 TRACE  [main] BasicExtractor: extracted value ([binary_v2_0_1_] : [BLOB]) - [null]
2020-11-25 21:17:38,255 TRACE  [main] BasicExtractor: extracted value ([float_va3_0_1_] : [DOUBLE]) - [-3.0]
2020-11-25 21:17:38,255 TRACE  [main] BasicExtractor: extracted value ([i4_0_1_] : [INTEGER]) - [0]
2020-11-25 21:17:38,255 TRACE  [main] BasicExtractor: extracted value ([is_condi5_0_1_] : [BOOLEAN]) - [true]
2020-11-25 21:17:38,256 TRACE  [main] BasicExtractor: extracted value ([j6_0_1_] : [INTEGER]) - [1]
2020-11-25 21:17:38,256 TRACE  [main] BasicExtractor: extracted value ([problem_7_0_1_] : [BIGINT]) - [7]
2020-11-25 21:17:38,256 TRACE  [main] BasicExtractor: extracted value ([problem_7_0_0_] : [BIGINT]) - [7]
2020-11-25 21:17:38,256 TRACE  [main] BasicExtractor: extracted value ([id1_0_0_] : [BIGINT]) - [41]
2020-11-25 21:17:38,256 TRACE  [main] BasicExtractor: extracted value ([id1_0_1_] : [BIGINT]) - [42]
2020-11-25 21:17:38,257 TRACE  [main] BasicExtractor: extracted value ([binary_v2_0_1_] : [BLOB]) - [null]
2020-11-25 21:17:38,257 TRACE  [main] BasicExtractor: extracted value ([float_va3_0_1_] : [DOUBLE]) - [2.0]
2020-11-25 21:17:38,257 TRACE  [main] BasicExtractor: extracted value ([i4_0_1_] : [INTEGER]) - [0]
2020-11-25 21:17:38,257 TRACE  [main] BasicExtractor: extracted value ([is_condi5_0_1_] : [BOOLEAN]) - [true]
2020-11-25 21:17:38,257 TRACE  [main] BasicExtractor: extracted value ([j6_0_1_] : [INTEGER]) - [2]
2020-11-25 21:17:38,257 TRACE  [main] BasicExtractor: extracted value ([problem_7_0_1_] : [BIGINT]) - [7]
2020-11-25 21:17:38,257 TRACE  [main] BasicExtractor: extracted value ([problem_7_0_0_] : [BIGINT]) - [7]
2020-11-25 21:17:38,258 TRACE  [main] BasicExtractor: extracted value ([id1_0_0_] : [BIGINT]) - [42]
2020-11-25 21:17:38,258 TRACE  [main] BasicExtractor: extracted value ([id1_0_1_] : [BIGINT]) - [43]
2020-11-25 21:17:38,258 TRACE  [main] BasicExtractor: extracted value ([binary_v2_0_1_] : [BLOB]) - [null]
2020-11-25 21:17:38,258 TRACE  [main] BasicExtractor: extracted value ([float_va3_0_1_] : [DOUBLE]) - [1.0]
2020-11-25 21:17:38,259 TRACE  [main] BasicExtractor: extracted value ([i4_0_1_] : [INTEGER]) - [0]
2020-11-25 21:17:38,259 TRACE  [main] BasicExtractor: extracted value ([is_condi5_0_1_] : [BOOLEAN]) - [false]
2020-11-25 21:17:38,259 TRACE  [main] BasicExtractor: extracted value ([j6_0_1_] : [INTEGER]) - [0]
2020-11-25 21:17:38,259 TRACE  [main] BasicExtractor: extracted value ([problem_7_0_1_] : [BIGINT]) - [7]
2020-11-25 21:17:38,259 TRACE  [main] BasicExtractor: extracted value ([problem_7_0_0_] : [BIGINT]) - [7]
2020-11-25 21:17:38,260 TRACE  [main] BasicExtractor: extracted value ([id1_0_0_] : [BIGINT]) - [43]
2020-11-25 21:17:38,260 TRACE  [main] BasicExtractor: extracted value ([id1_0_1_] : [BIGINT]) - [44]
2020-11-25 21:17:38,260 TRACE  [main] BasicExtractor: extracted value ([binary_v2_0_1_] : [BLOB]) - [null]
2020-11-25 21:17:38,261 TRACE  [main] BasicExtractor: extracted value ([float_va3_0_1_] : [DOUBLE]) - [2.0]
2020-11-25 21:17:38,261 TRACE  [main] BasicExtractor: extracted value ([i4_0_1_] : [INTEGER]) - [0]
2020-11-25 21:17:38,261 TRACE  [main] BasicExtractor: extracted value ([is_condi5_0_1_] : [BOOLEAN]) - [false]
2020-11-25 21:17:38,261 TRACE  [main] BasicExtractor: extracted value ([j6_0_1_] : [INTEGER]) - [1]
2020-11-25 21:17:38,261 TRACE  [main] BasicExtractor: extracted value ([problem_7_0_1_] : [BIGINT]) - [7]
2020-11-25 21:17:38,262 TRACE  [main] BasicExtractor: extracted value ([problem_7_0_0_] : [BIGINT]) - [7]
2020-11-25 21:17:38,262 TRACE  [main] BasicExtractor: extracted value ([id1_0_0_] : [BIGINT]) - [44]
2020-11-25 21:17:38,335 TRACE  [main] BasicBinder: binding parameter [1] as [BOOLEAN] - [false]
2020-11-25 21:17:38,337 TRACE  [main] BasicBinder: binding parameter [2] as [BIGINT] - [7]
2020-11-25 21:17:38,338 TRACE  [main] BasicExtractor: extracted value ([id1_0_] : [BIGINT]) - [43]
2020-11-25 21:17:38,338 TRACE  [main] BasicExtractor: extracted value ([binary_v2_0_] : [BLOB]) - [null]
2020-11-25 21:17:38,339 TRACE  [main] BasicExtractor: extracted value ([float_va3_0_] : [DOUBLE]) - [1.0]
2020-11-25 21:17:38,339 TRACE  [main] BasicExtractor: extracted value ([i4_0_] : [INTEGER]) - [0]
2020-11-25 21:17:38,340 TRACE  [main] BasicExtractor: extracted value ([is_condi5_0_] : [BOOLEAN]) - [false]
2020-11-25 21:17:38,341 TRACE  [main] BasicExtractor: extracted value ([j6_0_] : [INTEGER]) - [0]
2020-11-25 21:17:38,341 TRACE  [main] BasicExtractor: extracted value ([problem_7_0_] : [BIGINT]) - [7]
2020-11-25 21:17:38,341 TRACE  [main] BasicExtractor: extracted value ([id1_0_] : [BIGINT]) - [44]
2020-11-25 21:17:38,341 TRACE  [main] BasicExtractor: extracted value ([binary_v2_0_] : [BLOB]) - [null]
2020-11-25 21:17:38,342 TRACE  [main] BasicExtractor: extracted value ([float_va3_0_] : [DOUBLE]) - [2.0]
2020-11-25 21:17:38,342 TRACE  [main] BasicExtractor: extracted value ([i4_0_] : [INTEGER]) - [0]
2020-11-25 21:17:38,342 TRACE  [main] BasicExtractor: extracted value ([is_condi5_0_] : [BOOLEAN]) - [false]
2020-11-25 21:17:38,343 TRACE  [main] BasicExtractor: extracted value ([j6_0_] : [INTEGER]) - [1]
2020-11-25 21:17:38,343 TRACE  [main] BasicExtractor: extracted value ([problem_7_0_] : [BIGINT]) - [7]
2020-11-25 21:17:38,344 TRACE  [main] BasicBinder: binding parameter [1] as [BIGINT] - [7]
2020-11-25 21:17:38,344 TRACE  [main] BasicExtractor: extracted value ([id1_1_2_] : [BIGINT]) - [null]
2020-11-25 21:17:38,344 TRACE  [main] BasicExtractor: extracted value ([id1_0_4_] : [BIGINT]) - [null]
2020-11-25 21:17:38,344 TRACE  [main] BasicExtractor: extracted value ([descript2_1_0_] : [BLOB]) - [[112, 114, 111, 98, 108, 101, 109, 100, 101, 115, 99, 114, 105, 112, 116, 105, 111, 110]]
2020-11-25 21:17:38,344 TRACE  [main] BasicExtractor: extracted value ([is_solve3_1_0_] : [BOOLEAN]) - [true]
2020-11-25 21:17:38,345 TRACE  [main] BasicExtractor: extracted value ([kind4_1_0_] : [VARCHAR]) - [POLYNOMIAL]
2020-11-25 21:17:38,345 TRACE  [main] BasicExtractor: extracted value ([matrix_d5_1_0_] : [INTEGER]) - [1]
2020-11-25 21:17:38,345 TRACE  [main] BasicExtractor: extracted value ([parent_p7_1_0_] : [BIGINT]) - [null]
2020-11-25 21:17:38,345 TRACE  [main] BasicExtractor: extracted value ([problem_6_1_0_] : [INTEGER]) - [0]
2020-11-25 21:17:38,345 TRACE  [main] BasicExtractor: extracted value ([problem_7_0_3_] : [BIGINT]) - [null]
2020-11-25 21:17:38,345 TRACE  [main] BasicExtractor: extracted value ([parent_p7_1_1_] : [BIGINT]) - [null]
2020-11-25 21:17:38,345 TRACE  [main] CollectionType: Created collection wrapper: [com.sf.back.entities.Problem.matrixes#7]
2020-11-25 21:17:38,346 TRACE  [main] BasicBinder: binding parameter [1] as [BIGINT] - [7]
2020-11-25 21:17:38,347 TRACE  [main] BasicExtractor: extracted value ([id1_0_1_] : [BIGINT]) - [40]
2020-11-25 21:17:38,347 TRACE  [main] BasicExtractor: extracted value ([binary_v2_0_1_] : [BLOB]) - [null]
2020-11-25 21:17:38,347 TRACE  [main] BasicExtractor: extracted value ([float_va3_0_1_] : [DOUBLE]) - [1.0]
2020-11-25 21:17:38,347 TRACE  [main] BasicExtractor: extracted value ([i4_0_1_] : [INTEGER]) - [0]
2020-11-25 21:17:38,347 TRACE  [main] BasicExtractor: extracted value ([is_condi5_0_1_] : [BOOLEAN]) - [true]
2020-11-25 21:17:38,347 TRACE  [main] BasicExtractor: extracted value ([j6_0_1_] : [INTEGER]) - [0]
2020-11-25 21:17:38,347 TRACE  [main] BasicExtractor: extracted value ([problem_7_0_1_] : [BIGINT]) - [7]
2020-11-25 21:17:38,348 TRACE  [main] BasicExtractor: extracted value ([problem_7_0_0_] : [BIGINT]) - [7]
2020-11-25 21:17:38,348 TRACE  [main] BasicExtractor: extracted value ([id1_0_0_] : [BIGINT]) - [40]
2020-11-25 21:17:38,348 TRACE  [main] BasicExtractor: extracted value ([id1_0_1_] : [BIGINT]) - [41]
2020-11-25 21:17:38,348 TRACE  [main] BasicExtractor: extracted value ([binary_v2_0_1_] : [BLOB]) - [null]
2020-11-25 21:17:38,348 TRACE  [main] BasicExtractor: extracted value ([float_va3_0_1_] : [DOUBLE]) - [-3.0]
2020-11-25 21:17:38,349 TRACE  [main] BasicExtractor: extracted value ([i4_0_1_] : [INTEGER]) - [0]
2020-11-25 21:17:38,349 TRACE  [main] BasicExtractor: extracted value ([is_condi5_0_1_] : [BOOLEAN]) - [true]
2020-11-25 21:17:38,349 TRACE  [main] BasicExtractor: extracted value ([j6_0_1_] : [INTEGER]) - [1]
2020-11-25 21:17:38,349 TRACE  [main] BasicExtractor: extracted value ([problem_7_0_1_] : [BIGINT]) - [7]
2020-11-25 21:17:38,349 TRACE  [main] BasicExtractor: extracted value ([problem_7_0_0_] : [BIGINT]) - [7]
2020-11-25 21:17:38,349 TRACE  [main] BasicExtractor: extracted value ([id1_0_0_] : [BIGINT]) - [41]
2020-11-25 21:17:38,349 TRACE  [main] BasicExtractor: extracted value ([id1_0_1_] : [BIGINT]) - [42]
2020-11-25 21:17:38,350 TRACE  [main] BasicExtractor: extracted value ([binary_v2_0_1_] : [BLOB]) - [null]
2020-11-25 21:17:38,350 TRACE  [main] BasicExtractor: extracted value ([float_va3_0_1_] : [DOUBLE]) - [2.0]
2020-11-25 21:17:38,350 TRACE  [main] BasicExtractor: extracted value ([i4_0_1_] : [INTEGER]) - [0]
2020-11-25 21:17:38,350 TRACE  [main] BasicExtractor: extracted value ([is_condi5_0_1_] : [BOOLEAN]) - [true]
2020-11-25 21:17:38,351 TRACE  [main] BasicExtractor: extracted value ([j6_0_1_] : [INTEGER]) - [2]
2020-11-25 21:17:38,351 TRACE  [main] BasicExtractor: extracted value ([problem_7_0_1_] : [BIGINT]) - [7]
2020-11-25 21:17:38,352 TRACE  [main] BasicExtractor: extracted value ([problem_7_0_0_] : [BIGINT]) - [7]
2020-11-25 21:17:38,352 TRACE  [main] BasicExtractor: extracted value ([id1_0_0_] : [BIGINT]) - [42]
2020-11-25 21:17:38,353 TRACE  [main] BasicExtractor: extracted value ([id1_0_1_] : [BIGINT]) - [43]
2020-11-25 21:17:38,353 TRACE  [main] BasicExtractor: extracted value ([problem_7_0_0_] : [BIGINT]) - [7]
2020-11-25 21:17:38,353 TRACE  [main] BasicExtractor: extracted value ([id1_0_0_] : [BIGINT]) - [43]
2020-11-25 21:17:38,353 TRACE  [main] BasicExtractor: extracted value ([id1_0_1_] : [BIGINT]) - [44]
2020-11-25 21:17:38,354 TRACE  [main] BasicExtractor: extracted value ([problem_7_0_0_] : [BIGINT]) - [7]
2020-11-25 21:17:38,354 TRACE  [main] BasicExtractor: extracted value ([id1_0_0_] : [BIGINT]) - [44]
2020-11-25 21:17:38,373 TRACE  [main] BasicBinder: binding parameter [1] as [BIGINT] - [8]
2020-11-25 21:17:38,380 TRACE  [main] BasicExtractor: extracted value ([id1_1_2_] : [BIGINT]) - [null]
2020-11-25 21:17:38,380 TRACE  [main] BasicExtractor: extracted value ([id1_0_4_] : [BIGINT]) - [null]
2020-11-25 21:17:38,381 TRACE  [main] BasicExtractor: extracted value ([descript2_1_0_] : [BLOB]) - [[112, 114, 111, 98, 108, 101, 109, 100, 101, 115, 99, 114, 105, 112, 116, 105, 111, 110]]
2020-11-25 21:17:38,381 TRACE  [main] BasicExtractor: extracted value ([is_solve3_1_0_] : [BOOLEAN]) - [null]
2020-11-25 21:17:38,381 TRACE  [main] BasicExtractor: extracted value ([kind4_1_0_] : [VARCHAR]) - [POLYNOMIAL]
2020-11-25 21:17:38,381 TRACE  [main] BasicExtractor: extracted value ([matrix_d5_1_0_] : [INTEGER]) - [1]
2020-11-25 21:17:38,381 TRACE  [main] BasicExtractor: extracted value ([parent_p7_1_0_] : [BIGINT]) - [null]
2020-11-25 21:17:38,382 TRACE  [main] BasicExtractor: extracted value ([problem_6_1_0_] : [INTEGER]) - [22]
2020-11-25 21:17:38,382 TRACE  [main] BasicExtractor: extracted value ([problem_7_0_3_] : [BIGINT]) - [null]
2020-11-25 21:17:38,382 TRACE  [main] BasicExtractor: extracted value ([parent_p7_1_1_] : [BIGINT]) - [null]
2020-11-25 21:17:38,382 TRACE  [main] CollectionType: Created collection wrapper: [com.sf.back.entities.Problem.matrixes#8]
2020-11-25 21:17:38,384 TRACE  [main] BasicBinder: binding parameter [1] as [BIGINT] - [8]
2020-11-25 21:17:38,385 TRACE  [main] BasicExtractor: extracted value ([id1_0_1_] : [BIGINT]) - [45]
2020-11-25 21:17:38,386 TRACE  [main] BasicExtractor: extracted value ([binary_v2_0_1_] : [BLOB]) - [null]
2020-11-25 21:17:38,387 TRACE  [main] BasicExtractor: extracted value ([float_va3_0_1_] : [DOUBLE]) - [1.0]
2020-11-25 21:17:38,387 TRACE  [main] BasicExtractor: extracted value ([i4_0_1_] : [INTEGER]) - [0]
2020-11-25 21:17:38,387 TRACE  [main] BasicExtractor: extracted value ([is_condi5_0_1_] : [BOOLEAN]) - [true]
2020-11-25 21:17:38,388 TRACE  [main] BasicExtractor: extracted value ([j6_0_1_] : [INTEGER]) - [0]
2020-11-25 21:17:38,388 TRACE  [main] BasicExtractor: extracted value ([problem_7_0_1_] : [BIGINT]) - [8]
2020-11-25 21:17:38,388 TRACE  [main] BasicExtractor: extracted value ([problem_7_0_0_] : [BIGINT]) - [8]
2020-11-25 21:17:38,389 TRACE  [main] BasicExtractor: extracted value ([id1_0_0_] : [BIGINT]) - [45]
2020-11-25 21:17:38,390 TRACE  [main] BasicExtractor: extracted value ([id1_0_1_] : [BIGINT]) - [46]
2020-11-25 21:17:38,390 TRACE  [main] BasicExtractor: extracted value ([binary_v2_0_1_] : [BLOB]) - [null]
2020-11-25 21:17:38,391 TRACE  [main] BasicExtractor: extracted value ([float_va3_0_1_] : [DOUBLE]) - [2.718281828459045]
2020-11-25 21:17:38,391 TRACE  [main] BasicExtractor: extracted value ([i4_0_1_] : [INTEGER]) - [0]
2020-11-25 21:17:38,391 TRACE  [main] BasicExtractor: extracted value ([is_condi5_0_1_] : [BOOLEAN]) - [true]
2020-11-25 21:17:38,392 TRACE  [main] BasicExtractor: extracted value ([j6_0_1_] : [INTEGER]) - [1]
2020-11-25 21:17:38,392 TRACE  [main] BasicExtractor: extracted value ([problem_7_0_1_] : [BIGINT]) - [8]
2020-11-25 21:17:38,393 TRACE  [main] BasicExtractor: extracted value ([problem_7_0_0_] : [BIGINT]) - [8]
2020-11-25 21:17:38,393 TRACE  [main] BasicExtractor: extracted value ([id1_0_0_] : [BIGINT]) - [46]
2020-11-25 21:17:38,393 TRACE  [main] BasicExtractor: extracted value ([id1_0_1_] : [BIGINT]) - [47]
2020-11-25 21:17:38,393 TRACE  [main] BasicExtractor: extracted value ([binary_v2_0_1_] : [BLOB]) - [null]
2020-11-25 21:17:38,394 TRACE  [main] BasicExtractor: extracted value ([float_va3_0_1_] : [DOUBLE]) - [7.38905609893065]
2020-11-25 21:17:38,394 TRACE  [main] BasicExtractor: extracted value ([i4_0_1_] : [INTEGER]) - [0]
2020-11-25 21:17:38,394 TRACE  [main] BasicExtractor: extracted value ([is_condi5_0_1_] : [BOOLEAN]) - [true]
2020-11-25 21:17:38,394 TRACE  [main] BasicExtractor: extracted value ([j6_0_1_] : [INTEGER]) - [2]
2020-11-25 21:17:38,394 TRACE  [main] BasicExtractor: extracted value ([problem_7_0_1_] : [BIGINT]) - [8]
2020-11-25 21:17:38,394 TRACE  [main] BasicExtractor: extracted value ([problem_7_0_0_] : [BIGINT]) - [8]
2020-11-25 21:17:38,395 TRACE  [main] BasicExtractor: extracted value ([id1_0_0_] : [BIGINT]) - [47]
2020-11-25 21:17:38,395 TRACE  [main] BasicExtractor: extracted value ([id1_0_1_] : [BIGINT]) - [48]
2020-11-25 21:17:38,395 TRACE  [main] BasicExtractor: extracted value ([binary_v2_0_1_] : [BLOB]) - [null]
2020-11-25 21:17:38,395 TRACE  [main] BasicExtractor: extracted value ([float_va3_0_1_] : [DOUBLE]) - [20.085536923187668]
2020-11-25 21:17:38,395 TRACE  [main] BasicExtractor: extracted value ([i4_0_1_] : [INTEGER]) - [0]
2020-11-25 21:17:38,396 TRACE  [main] BasicExtractor: extracted value ([is_condi5_0_1_] : [BOOLEAN]) - [true]
2020-11-25 21:17:38,396 TRACE  [main] BasicExtractor: extracted value ([j6_0_1_] : [INTEGER]) - [3]
2020-11-25 21:17:38,396 TRACE  [main] BasicExtractor: extracted value ([problem_7_0_1_] : [BIGINT]) - [8]
2020-11-25 21:17:38,396 TRACE  [main] BasicExtractor: extracted value ([problem_7_0_0_] : [BIGINT]) - [8]
2020-11-25 21:17:38,396 TRACE  [main] BasicExtractor: extracted value ([id1_0_0_] : [BIGINT]) - [48]
2020-11-25 21:17:38,396 TRACE  [main] BasicExtractor: extracted value ([id1_0_1_] : [BIGINT]) - [49]
2020-11-25 21:17:38,397 TRACE  [main] BasicExtractor: extracted value ([binary_v2_0_1_] : [BLOB]) - [null]
2020-11-25 21:17:38,397 TRACE  [main] BasicExtractor: extracted value ([float_va3_0_1_] : [DOUBLE]) - [54.598150033144236]
2020-11-25 21:17:38,397 TRACE  [main] BasicExtractor: extracted value ([i4_0_1_] : [INTEGER]) - [0]
2020-11-25 21:17:38,397 TRACE  [main] BasicExtractor: extracted value ([is_condi5_0_1_] : [BOOLEAN]) - [true]
2020-11-25 21:17:38,397 TRACE  [main] BasicExtractor: extracted value ([j6_0_1_] : [INTEGER]) - [4]
2020-11-25 21:17:38,397 TRACE  [main] BasicExtractor: extracted value ([problem_7_0_1_] : [BIGINT]) - [8]
2020-11-25 21:17:38,398 TRACE  [main] BasicExtractor: extracted value ([problem_7_0_0_] : [BIGINT]) - [8]
2020-11-25 21:17:38,398 TRACE  [main] BasicExtractor: extracted value ([id1_0_0_] : [BIGINT]) - [49]
2020-11-25 21:17:38,398 TRACE  [main] BasicExtractor: extracted value ([id1_0_1_] : [BIGINT]) - [50]
2020-11-25 21:17:38,398 TRACE  [main] BasicExtractor: extracted value ([binary_v2_0_1_] : [BLOB]) - [null]
2020-11-25 21:17:38,398 TRACE  [main] BasicExtractor: extracted value ([float_va3_0_1_] : [DOUBLE]) - [148.4131591025766]
2020-11-25 21:17:38,399 TRACE  [main] BasicExtractor: extracted value ([i4_0_1_] : [INTEGER]) - [0]
2020-11-25 21:17:38,399 TRACE  [main] BasicExtractor: extracted value ([is_condi5_0_1_] : [BOOLEAN]) - [true]
2020-11-25 21:17:38,399 TRACE  [main] BasicExtractor: extracted value ([j6_0_1_] : [INTEGER]) - [5]
2020-11-25 21:17:38,400 TRACE  [main] BasicExtractor: extracted value ([problem_7_0_1_] : [BIGINT]) - [8]
2020-11-25 21:17:38,400 TRACE  [main] BasicExtractor: extracted value ([problem_7_0_0_] : [BIGINT]) - [8]
2020-11-25 21:17:38,400 TRACE  [main] BasicExtractor: extracted value ([id1_0_0_] : [BIGINT]) - [50]
2020-11-25 21:17:38,416 TRACE  [main] BasicBinder: binding parameter [1] as [BLOB] - [[100, 101, 115, 99, 114, 105, 112, 116, 105, 111, 110]]
2020-11-25 21:17:38,416 TRACE  [main] BasicBinder: binding parameter [2] as [BOOLEAN] - [null]
2020-11-25 21:17:38,416 TRACE  [main] BasicBinder: binding parameter [3] as [VARCHAR] - [POLYNOMIAL]
2020-11-25 21:17:38,416 TRACE  [main] BasicBinder: binding parameter [4] as [INTEGER] - [null]
2020-11-25 21:17:38,417 TRACE  [main] BasicBinder: binding parameter [5] as [BIGINT] - [null]
2020-11-25 21:17:38,417 TRACE  [main] BasicBinder: binding parameter [6] as [INTEGER] - [24]
2020-11-25 21:17:38,419 TRACE  [main] BasicBinder: binding parameter [1] as [BLOB] - [null]
2020-11-25 21:17:38,419 TRACE  [main] BasicBinder: binding parameter [2] as [DOUBLE] - [1.0]
2020-11-25 21:17:38,419 TRACE  [main] BasicBinder: binding parameter [3] as [INTEGER] - [0]
2020-11-25 21:17:38,419 TRACE  [main] BasicBinder: binding parameter [4] as [BOOLEAN] - [true]
2020-11-25 21:17:38,419 TRACE  [main] BasicBinder: binding parameter [5] as [INTEGER] - [0]
2020-11-25 21:17:38,420 TRACE  [main] BasicBinder: binding parameter [6] as [BIGINT] - [10]
2020-11-25 21:17:38,421 TRACE  [main] BasicBinder: binding parameter [1] as [BLOB] - [null]
2020-11-25 21:17:38,422 TRACE  [main] BasicBinder: binding parameter [2] as [DOUBLE] - [2.0]
2020-11-25 21:17:38,422 TRACE  [main] BasicBinder: binding parameter [3] as [INTEGER] - [0]
2020-11-25 21:17:38,422 TRACE  [main] BasicBinder: binding parameter [4] as [BOOLEAN] - [true]
2020-11-25 21:17:38,423 TRACE  [main] BasicBinder: binding parameter [5] as [INTEGER] - [1]
2020-11-25 21:17:38,423 TRACE  [main] BasicBinder: binding parameter [6] as [BIGINT] - [10]
2020-11-25 21:17:38,425 TRACE  [main] BasicBinder: binding parameter [1] as [BLOB] - [null]
2020-11-25 21:17:38,425 TRACE  [main] BasicBinder: binding parameter [2] as [DOUBLE] - [3.0]
2020-11-25 21:17:38,426 TRACE  [main] BasicBinder: binding parameter [3] as [INTEGER] - [0]
2020-11-25 21:17:38,426 TRACE  [main] BasicBinder: binding parameter [4] as [BOOLEAN] - [true]
2020-11-25 21:17:38,426 TRACE  [main] BasicBinder: binding parameter [5] as [INTEGER] - [2]
2020-11-25 21:17:38,426 TRACE  [main] BasicBinder: binding parameter [6] as [BIGINT] - [10]
2020-11-25 21:17:38,428 TRACE  [main] BasicBinder: binding parameter [1] as [BLOB] - [null]
2020-11-25 21:17:38,429 TRACE  [main] BasicBinder: binding parameter [2] as [DOUBLE] - [4.0]
2020-11-25 21:17:38,429 TRACE  [main] BasicBinder: binding parameter [3] as [INTEGER] - [0]
2020-11-25 21:17:38,429 TRACE  [main] BasicBinder: binding parameter [4] as [BOOLEAN] - [true]
2020-11-25 21:17:38,429 TRACE  [main] BasicBinder: binding parameter [5] as [INTEGER] - [3]
2020-11-25 21:17:38,429 TRACE  [main] BasicBinder: binding parameter [6] as [BIGINT] - [10]
2020-11-25 21:17:38,464 TRACE  [main] BasicBinder: binding parameter [1] as [BIGINT] - [10]
2020-11-25 21:17:38,465 TRACE  [main] BasicExtractor: extracted value ([id1_1_2_] : [BIGINT]) - [null]
2020-11-25 21:17:38,465 TRACE  [main] BasicExtractor: extracted value ([id1_0_4_] : [BIGINT]) - [null]
2020-11-25 21:17:38,466 TRACE  [main] BasicExtractor: extracted value ([descript2_1_0_] : [BLOB]) - [[100, 101, 115, 99, 114, 105, 112, 116, 105, 111, 110]]
2020-11-25 21:17:38,466 TRACE  [main] BasicExtractor: extracted value ([is_solve3_1_0_] : [BOOLEAN]) - [null]
2020-11-25 21:17:38,466 TRACE  [main] BasicExtractor: extracted value ([kind4_1_0_] : [VARCHAR]) - [POLYNOMIAL]
2020-11-25 21:17:38,466 TRACE  [main] BasicExtractor: extracted value ([matrix_d5_1_0_] : [INTEGER]) - [null]
2020-11-25 21:17:38,467 TRACE  [main] BasicExtractor: extracted value ([parent_p7_1_0_] : [BIGINT]) - [null]
2020-11-25 21:17:38,467 TRACE  [main] BasicExtractor: extracted value ([problem_6_1_0_] : [INTEGER]) - [24]
2020-11-25 21:17:38,467 TRACE  [main] BasicExtractor: extracted value ([problem_7_0_3_] : [BIGINT]) - [null]
2020-11-25 21:17:38,467 TRACE  [main] BasicExtractor: extracted value ([parent_p7_1_1_] : [BIGINT]) - [null]
2020-11-25 21:17:38,467 TRACE  [main] CollectionType: Created collection wrapper: [com.sf.back.entities.Problem.matrixes#10]
2020-11-25 21:17:38,467 TRACE  [main] BasicBinder: binding parameter [1] as [BIGINT] - [10]
2020-11-25 21:17:38,468 TRACE  [main] BasicExtractor: extracted value ([id1_0_1_] : [BIGINT]) - [57]
2020-11-25 21:17:38,468 TRACE  [main] BasicExtractor: extracted value ([binary_v2_0_1_] : [BLOB]) - [null]
2020-11-25 21:17:38,468 TRACE  [main] BasicExtractor: extracted value ([float_va3_0_1_] : [DOUBLE]) - [1.0]
2020-11-25 21:17:38,468 TRACE  [main] BasicExtractor: extracted value ([i4_0_1_] : [INTEGER]) - [0]
2020-11-25 21:17:38,468 TRACE  [main] BasicExtractor: extracted value ([is_condi5_0_1_] : [BOOLEAN]) - [true]
2020-11-25 21:17:38,468 TRACE  [main] BasicExtractor: extracted value ([j6_0_1_] : [INTEGER]) - [0]
2020-11-25 21:17:38,469 TRACE  [main] BasicExtractor: extracted value ([problem_7_0_1_] : [BIGINT]) - [10]
2020-11-25 21:17:38,469 TRACE  [main] BasicExtractor: extracted value ([problem_7_0_0_] : [BIGINT]) - [10]
2020-11-25 21:17:38,469 TRACE  [main] BasicExtractor: extracted value ([id1_0_0_] : [BIGINT]) - [57]
2020-11-25 21:17:38,469 TRACE  [main] BasicExtractor: extracted value ([id1_0_1_] : [BIGINT]) - [58]
2020-11-25 21:17:38,469 TRACE  [main] BasicExtractor: extracted value ([binary_v2_0_1_] : [BLOB]) - [null]
2020-11-25 21:17:38,470 TRACE  [main] BasicExtractor: extracted value ([float_va3_0_1_] : [DOUBLE]) - [2.0]
2020-11-25 21:17:38,470 TRACE  [main] BasicExtractor: extracted value ([i4_0_1_] : [INTEGER]) - [0]
2020-11-25 21:17:38,470 TRACE  [main] BasicExtractor: extracted value ([is_condi5_0_1_] : [BOOLEAN]) - [true]
2020-11-25 21:17:38,470 TRACE  [main] BasicExtractor: extracted value ([j6_0_1_] : [INTEGER]) - [1]
2020-11-25 21:17:38,470 TRACE  [main] BasicExtractor: extracted value ([problem_7_0_1_] : [BIGINT]) - [10]
2020-11-25 21:17:38,470 TRACE  [main] BasicExtractor: extracted value ([problem_7_0_0_] : [BIGINT]) - [10]
2020-11-25 21:17:38,470 TRACE  [main] BasicExtractor: extracted value ([id1_0_0_] : [BIGINT]) - [58]
2020-11-25 21:17:38,470 TRACE  [main] BasicExtractor: extracted value ([id1_0_1_] : [BIGINT]) - [59]
2020-11-25 21:17:38,471 TRACE  [main] BasicExtractor: extracted value ([binary_v2_0_1_] : [BLOB]) - [null]
2020-11-25 21:17:38,471 TRACE  [main] BasicExtractor: extracted value ([float_va3_0_1_] : [DOUBLE]) - [3.0]
2020-11-25 21:17:38,471 TRACE  [main] BasicExtractor: extracted value ([i4_0_1_] : [INTEGER]) - [0]
2020-11-25 21:17:38,471 TRACE  [main] BasicExtractor: extracted value ([is_condi5_0_1_] : [BOOLEAN]) - [true]
2020-11-25 21:17:38,471 TRACE  [main] BasicExtractor: extracted value ([j6_0_1_] : [INTEGER]) - [2]
2020-11-25 21:17:38,471 TRACE  [main] BasicExtractor: extracted value ([problem_7_0_1_] : [BIGINT]) - [10]
2020-11-25 21:17:38,471 TRACE  [main] BasicExtractor: extracted value ([problem_7_0_0_] : [BIGINT]) - [10]
2020-11-25 21:17:38,471 TRACE  [main] BasicExtractor: extracted value ([id1_0_0_] : [BIGINT]) - [59]
2020-11-25 21:17:38,471 TRACE  [main] BasicExtractor: extracted value ([id1_0_1_] : [BIGINT]) - [60]
2020-11-25 21:17:38,472 TRACE  [main] BasicExtractor: extracted value ([binary_v2_0_1_] : [BLOB]) - [null]
2020-11-25 21:17:38,472 TRACE  [main] BasicExtractor: extracted value ([float_va3_0_1_] : [DOUBLE]) - [4.0]
2020-11-25 21:17:38,472 TRACE  [main] BasicExtractor: extracted value ([i4_0_1_] : [INTEGER]) - [0]
2020-11-25 21:17:38,472 TRACE  [main] BasicExtractor: extracted value ([is_condi5_0_1_] : [BOOLEAN]) - [true]
2020-11-25 21:17:38,472 TRACE  [main] BasicExtractor: extracted value ([j6_0_1_] : [INTEGER]) - [3]
2020-11-25 21:17:38,472 TRACE  [main] BasicExtractor: extracted value ([problem_7_0_1_] : [BIGINT]) - [10]
2020-11-25 21:17:38,472 TRACE  [main] BasicExtractor: extracted value ([problem_7_0_0_] : [BIGINT]) - [10]
2020-11-25 21:17:38,472 TRACE  [main] BasicExtractor: extracted value ([id1_0_0_] : [BIGINT]) - [60]
2020-11-25 21:17:38,485 TRACE  [main] BasicBinder: binding parameter [1] as [BIGINT] - [11]
2020-11-25 21:17:38,486 TRACE  [main] BasicExtractor: extracted value ([id1_1_2_] : [BIGINT]) - [null]
2020-11-25 21:17:38,486 TRACE  [main] BasicExtractor: extracted value ([id1_0_4_] : [BIGINT]) - [null]
2020-11-25 21:17:38,486 TRACE  [main] BasicExtractor: extracted value ([descript2_1_0_] : [BLOB]) - [[112, 114, 111, 98, 108, 101, 109, 100, 101, 115, 99, 114, 105, 112, 116, 105, 111, 110]]
2020-11-25 21:17:38,486 TRACE  [main] BasicExtractor: extracted value ([is_solve3_1_0_] : [BOOLEAN]) - [null]
2020-11-25 21:17:38,486 TRACE  [main] BasicExtractor: extracted value ([kind4_1_0_] : [VARCHAR]) - [POLYNOMIAL]
2020-11-25 21:17:38,486 TRACE  [main] BasicExtractor: extracted value ([matrix_d5_1_0_] : [INTEGER]) - [1]
2020-11-25 21:17:38,486 TRACE  [main] BasicExtractor: extracted value ([parent_p7_1_0_] : [BIGINT]) - [null]
2020-11-25 21:17:38,487 TRACE  [main] BasicExtractor: extracted value ([problem_6_1_0_] : [INTEGER]) - [22]
2020-11-25 21:17:38,487 TRACE  [main] BasicExtractor: extracted value ([problem_7_0_3_] : [BIGINT]) - [null]
2020-11-25 21:17:38,487 TRACE  [main] BasicExtractor: extracted value ([parent_p7_1_1_] : [BIGINT]) - [null]
2020-11-25 21:17:38,487 TRACE  [main] CollectionType: Created collection wrapper: [com.sf.back.entities.Problem.matrixes#11]
2020-11-25 21:17:38,487 TRACE  [main] BasicBinder: binding parameter [1] as [BIGINT] - [11]
2020-11-25 21:17:38,488 TRACE  [main] BasicExtractor: extracted value ([id1_0_1_] : [BIGINT]) - [61]
2020-11-25 21:17:38,488 TRACE  [main] BasicExtractor: extracted value ([binary_v2_0_1_] : [BLOB]) - [null]
2020-11-25 21:17:38,488 TRACE  [main] BasicExtractor: extracted value ([float_va3_0_1_] : [DOUBLE]) - [1.0]
2020-11-25 21:17:38,489 TRACE  [main] BasicExtractor: extracted value ([i4_0_1_] : [INTEGER]) - [0]
2020-11-25 21:17:38,489 TRACE  [main] BasicExtractor: extracted value ([is_condi5_0_1_] : [BOOLEAN]) - [true]
2020-11-25 21:17:38,489 TRACE  [main] BasicExtractor: extracted value ([j6_0_1_] : [INTEGER]) - [0]
2020-11-25 21:17:38,489 TRACE  [main] BasicExtractor: extracted value ([problem_7_0_1_] : [BIGINT]) - [11]
2020-11-25 21:17:38,489 TRACE  [main] BasicExtractor: extracted value ([problem_7_0_0_] : [BIGINT]) - [11]
2020-11-25 21:17:38,489 TRACE  [main] BasicExtractor: extracted value ([id1_0_0_] : [BIGINT]) - [61]
2020-11-25 21:17:38,489 TRACE  [main] BasicExtractor: extracted value ([id1_0_1_] : [BIGINT]) - [62]
2020-11-25 21:17:38,489 TRACE  [main] BasicExtractor: extracted value ([binary_v2_0_1_] : [BLOB]) - [null]
2020-11-25 21:17:38,490 TRACE  [main] BasicExtractor: extracted value ([float_va3_0_1_] : [DOUBLE]) - [2.718281828459045]
2020-11-25 21:17:38,490 TRACE  [main] BasicExtractor: extracted value ([i4_0_1_] : [INTEGER]) - [0]
2020-11-25 21:17:38,490 TRACE  [main] BasicExtractor: extracted value ([is_condi5_0_1_] : [BOOLEAN]) - [true]
2020-11-25 21:17:38,490 TRACE  [main] BasicExtractor: extracted value ([j6_0_1_] : [INTEGER]) - [1]
2020-11-25 21:17:38,490 TRACE  [main] BasicExtractor: extracted value ([problem_7_0_1_] : [BIGINT]) - [11]
2020-11-25 21:17:38,490 TRACE  [main] BasicExtractor: extracted value ([problem_7_0_0_] : [BIGINT]) - [11]
2020-11-25 21:17:38,490 TRACE  [main] BasicExtractor: extracted value ([id1_0_0_] : [BIGINT]) - [62]
2020-11-25 21:17:38,491 TRACE  [main] BasicExtractor: extracted value ([id1_0_1_] : [BIGINT]) - [63]
2020-11-25 21:17:38,491 TRACE  [main] BasicExtractor: extracted value ([binary_v2_0_1_] : [BLOB]) - [null]
2020-11-25 21:17:38,491 TRACE  [main] BasicExtractor: extracted value ([float_va3_0_1_] : [DOUBLE]) - [7.38905609893065]
2020-11-25 21:17:38,491 TRACE  [main] BasicExtractor: extracted value ([i4_0_1_] : [INTEGER]) - [0]
2020-11-25 21:17:38,491 TRACE  [main] BasicExtractor: extracted value ([is_condi5_0_1_] : [BOOLEAN]) - [true]
2020-11-25 21:17:38,491 TRACE  [main] BasicExtractor: extracted value ([j6_0_1_] : [INTEGER]) - [2]
2020-11-25 21:17:38,491 TRACE  [main] BasicExtractor: extracted value ([problem_7_0_1_] : [BIGINT]) - [11]
2020-11-25 21:17:38,491 TRACE  [main] BasicExtractor: extracted value ([problem_7_0_0_] : [BIGINT]) - [11]
2020-11-25 21:17:38,491 TRACE  [main] BasicExtractor: extracted value ([id1_0_0_] : [BIGINT]) - [63]
2020-11-25 21:17:38,491 TRACE  [main] BasicExtractor: extracted value ([id1_0_1_] : [BIGINT]) - [64]
2020-11-25 21:17:38,492 TRACE  [main] BasicExtractor: extracted value ([binary_v2_0_1_] : [BLOB]) - [null]
2020-11-25 21:17:38,492 TRACE  [main] BasicExtractor: extracted value ([float_va3_0_1_] : [DOUBLE]) - [20.085536923187668]
2020-11-25 21:17:38,492 TRACE  [main] BasicExtractor: extracted value ([i4_0_1_] : [INTEGER]) - [0]
2020-11-25 21:17:38,492 TRACE  [main] BasicExtractor: extracted value ([is_condi5_0_1_] : [BOOLEAN]) - [true]
2020-11-25 21:17:38,492 TRACE  [main] BasicExtractor: extracted value ([j6_0_1_] : [INTEGER]) - [3]
2020-11-25 21:17:38,492 TRACE  [main] BasicExtractor: extracted value ([problem_7_0_1_] : [BIGINT]) - [11]
2020-11-25 21:17:38,492 TRACE  [main] BasicExtractor: extracted value ([problem_7_0_0_] : [BIGINT]) - [11]
2020-11-25 21:17:38,492 TRACE  [main] BasicExtractor: extracted value ([id1_0_0_] : [BIGINT]) - [64]
2020-11-25 21:17:38,492 TRACE  [main] BasicExtractor: extracted value ([id1_0_1_] : [BIGINT]) - [65]
2020-11-25 21:17:38,493 TRACE  [main] BasicExtractor: extracted value ([binary_v2_0_1_] : [BLOB]) - [null]
2020-11-25 21:17:38,494 TRACE  [main] BasicExtractor: extracted value ([float_va3_0_1_] : [DOUBLE]) - [54.598150033144236]
2020-11-25 21:17:38,494 TRACE  [main] BasicExtractor: extracted value ([i4_0_1_] : [INTEGER]) - [0]
2020-11-25 21:17:38,494 TRACE  [main] BasicExtractor: extracted value ([is_condi5_0_1_] : [BOOLEAN]) - [true]
2020-11-25 21:17:38,494 TRACE  [main] BasicExtractor: extracted value ([j6_0_1_] : [INTEGER]) - [4]
2020-11-25 21:17:38,494 TRACE  [main] BasicExtractor: extracted value ([problem_7_0_1_] : [BIGINT]) - [11]
2020-11-25 21:17:38,494 TRACE  [main] BasicExtractor: extracted value ([problem_7_0_0_] : [BIGINT]) - [11]
2020-11-25 21:17:38,494 TRACE  [main] BasicExtractor: extracted value ([id1_0_0_] : [BIGINT]) - [65]
2020-11-25 21:17:38,495 TRACE  [main] BasicExtractor: extracted value ([id1_0_1_] : [BIGINT]) - [66]
2020-11-25 21:17:38,495 TRACE  [main] BasicExtractor: extracted value ([binary_v2_0_1_] : [BLOB]) - [null]
2020-11-25 21:17:38,495 TRACE  [main] BasicExtractor: extracted value ([float_va3_0_1_] : [DOUBLE]) - [148.4131591025766]
2020-11-25 21:17:38,495 TRACE  [main] BasicExtractor: extracted value ([i4_0_1_] : [INTEGER]) - [0]
2020-11-25 21:17:38,495 TRACE  [main] BasicExtractor: extracted value ([is_condi5_0_1_] : [BOOLEAN]) - [true]
2020-11-25 21:17:38,495 TRACE  [main] BasicExtractor: extracted value ([j6_0_1_] : [INTEGER]) - [5]
2020-11-25 21:17:38,495 TRACE  [main] BasicExtractor: extracted value ([problem_7_0_1_] : [BIGINT]) - [11]
2020-11-25 21:17:38,495 TRACE  [main] BasicExtractor: extracted value ([problem_7_0_0_] : [BIGINT]) - [11]
2020-11-25 21:17:38,496 TRACE  [main] BasicExtractor: extracted value ([id1_0_0_] : [BIGINT]) - [66]
2020-11-25 21:17:38,500 TRACE  [main] BasicBinder: binding parameter [1] as [BIGINT] - [11]
2020-11-25 21:17:38,501 TRACE  [main] BasicExtractor: extracted value ([id1_0_0_] : [BIGINT]) - [61]
2020-11-25 21:17:38,501 TRACE  [main] BasicExtractor: extracted value ([binary_v2_0_0_] : [BLOB]) - [null]
2020-11-25 21:17:38,501 TRACE  [main] BasicExtractor: extracted value ([float_va3_0_0_] : [DOUBLE]) - [1.0]
2020-11-25 21:17:38,501 TRACE  [main] BasicExtractor: extracted value ([i4_0_0_] : [INTEGER]) - [0]
2020-11-25 21:17:38,502 TRACE  [main] BasicExtractor: extracted value ([is_condi5_0_0_] : [BOOLEAN]) - [true]
2020-11-25 21:17:38,502 TRACE  [main] BasicExtractor: extracted value ([j6_0_0_] : [INTEGER]) - [0]
2020-11-25 21:17:38,502 TRACE  [main] BasicExtractor: extracted value ([problem_7_0_0_] : [BIGINT]) - [11]
2020-11-25 21:17:38,503 TRACE  [main] BasicExtractor: extracted value ([descript2_1_1_] : [BLOB]) - [[112, 114, 111, 98, 108, 101, 109, 100, 101, 115, 99, 114, 105, 112, 116, 105, 111, 110]]
2020-11-25 21:17:38,503 TRACE  [main] BasicExtractor: extracted value ([is_solve3_1_1_] : [BOOLEAN]) - [null]
2020-11-25 21:17:38,504 TRACE  [main] BasicExtractor: extracted value ([kind4_1_1_] : [VARCHAR]) - [POLYNOMIAL]
2020-11-25 21:17:38,504 TRACE  [main] BasicExtractor: extracted value ([matrix_d5_1_1_] : [INTEGER]) - [1]
2020-11-25 21:17:38,504 TRACE  [main] BasicExtractor: extracted value ([parent_p7_1_1_] : [BIGINT]) - [null]
2020-11-25 21:17:38,504 TRACE  [main] BasicExtractor: extracted value ([problem_6_1_1_] : [INTEGER]) - [22]
2020-11-25 21:17:38,504 TRACE  [main] BasicExtractor: extracted value ([problem_7_0_3_] : [BIGINT]) - [11]
2020-11-25 21:17:38,504 TRACE  [main] BasicExtractor: extracted value ([id1_0_3_] : [BIGINT]) - [61]
2020-11-25 21:17:38,504 TRACE  [main] BasicExtractor: extracted value ([id1_0_0_] : [BIGINT]) - [62]
2020-11-25 21:17:38,505 TRACE  [main] BasicExtractor: extracted value ([binary_v2_0_0_] : [BLOB]) - [null]
2020-11-25 21:17:38,505 TRACE  [main] BasicExtractor: extracted value ([float_va3_0_0_] : [DOUBLE]) - [2.718281828459045]
2020-11-25 21:17:38,505 TRACE  [main] BasicExtractor: extracted value ([i4_0_0_] : [INTEGER]) - [0]
2020-11-25 21:17:38,505 TRACE  [main] BasicExtractor: extracted value ([is_condi5_0_0_] : [BOOLEAN]) - [true]
2020-11-25 21:17:38,505 TRACE  [main] BasicExtractor: extracted value ([j6_0_0_] : [INTEGER]) - [1]
2020-11-25 21:17:38,505 TRACE  [main] BasicExtractor: extracted value ([problem_7_0_0_] : [BIGINT]) - [11]
2020-11-25 21:17:38,505 TRACE  [main] BasicExtractor: extracted value ([problem_7_0_3_] : [BIGINT]) - [11]
2020-11-25 21:17:38,506 TRACE  [main] BasicExtractor: extracted value ([id1_0_3_] : [BIGINT]) - [62]
2020-11-25 21:17:38,506 TRACE  [main] BasicExtractor: extracted value ([id1_0_0_] : [BIGINT]) - [63]
2020-11-25 21:17:38,506 TRACE  [main] BasicExtractor: extracted value ([binary_v2_0_0_] : [BLOB]) - [null]
2020-11-25 21:17:38,506 TRACE  [main] BasicExtractor: extracted value ([float_va3_0_0_] : [DOUBLE]) - [7.38905609893065]
2020-11-25 21:17:38,506 TRACE  [main] BasicExtractor: extracted value ([i4_0_0_] : [INTEGER]) - [0]
2020-11-25 21:17:38,506 TRACE  [main] BasicExtractor: extracted value ([is_condi5_0_0_] : [BOOLEAN]) - [true]
2020-11-25 21:17:38,506 TRACE  [main] BasicExtractor: extracted value ([j6_0_0_] : [INTEGER]) - [2]
2020-11-25 21:17:38,506 TRACE  [main] BasicExtractor: extracted value ([problem_7_0_0_] : [BIGINT]) - [11]
2020-11-25 21:17:38,507 TRACE  [main] BasicExtractor: extracted value ([problem_7_0_3_] : [BIGINT]) - [11]
2020-11-25 21:17:38,507 TRACE  [main] BasicExtractor: extracted value ([id1_0_3_] : [BIGINT]) - [63]
2020-11-25 21:17:38,508 TRACE  [main] BasicExtractor: extracted value ([id1_0_0_] : [BIGINT]) - [64]
2020-11-25 21:17:38,508 TRACE  [main] BasicExtractor: extracted value ([binary_v2_0_0_] : [BLOB]) - [null]
2020-11-25 21:17:38,508 TRACE  [main] BasicExtractor: extracted value ([float_va3_0_0_] : [DOUBLE]) - [20.085536923187668]
2020-11-25 21:17:38,508 TRACE  [main] BasicExtractor: extracted value ([i4_0_0_] : [INTEGER]) - [0]
2020-11-25 21:17:38,508 TRACE  [main] BasicExtractor: extracted value ([is_condi5_0_0_] : [BOOLEAN]) - [true]
2020-11-25 21:17:38,509 TRACE  [main] BasicExtractor: extracted value ([j6_0_0_] : [INTEGER]) - [3]
2020-11-25 21:17:38,509 TRACE  [main] BasicExtractor: extracted value ([problem_7_0_0_] : [BIGINT]) - [11]
2020-11-25 21:17:38,509 TRACE  [main] BasicExtractor: extracted value ([problem_7_0_3_] : [BIGINT]) - [11]
2020-11-25 21:17:38,509 TRACE  [main] BasicExtractor: extracted value ([id1_0_3_] : [BIGINT]) - [64]
2020-11-25 21:17:38,510 TRACE  [main] BasicExtractor: extracted value ([id1_0_0_] : [BIGINT]) - [65]
2020-11-25 21:17:38,510 TRACE  [main] BasicExtractor: extracted value ([binary_v2_0_0_] : [BLOB]) - [null]
2020-11-25 21:17:38,510 TRACE  [main] BasicExtractor: extracted value ([float_va3_0_0_] : [DOUBLE]) - [54.598150033144236]
2020-11-25 21:17:38,510 TRACE  [main] BasicExtractor: extracted value ([i4_0_0_] : [INTEGER]) - [0]
2020-11-25 21:17:38,510 TRACE  [main] BasicExtractor: extracted value ([is_condi5_0_0_] : [BOOLEAN]) - [true]
2020-11-25 21:17:38,510 TRACE  [main] BasicExtractor: extracted value ([j6_0_0_] : [INTEGER]) - [4]
2020-11-25 21:17:38,510 TRACE  [main] BasicExtractor: extracted value ([problem_7_0_0_] : [BIGINT]) - [11]
2020-11-25 21:17:38,510 TRACE  [main] BasicExtractor: extracted value ([problem_7_0_3_] : [BIGINT]) - [11]
2020-11-25 21:17:38,511 TRACE  [main] BasicExtractor: extracted value ([id1_0_3_] : [BIGINT]) - [65]
2020-11-25 21:17:38,511 TRACE  [main] BasicExtractor: extracted value ([id1_0_0_] : [BIGINT]) - [66]
2020-11-25 21:17:38,511 TRACE  [main] BasicExtractor: extracted value ([binary_v2_0_0_] : [BLOB]) - [null]
2020-11-25 21:17:38,511 TRACE  [main] BasicExtractor: extracted value ([float_va3_0_0_] : [DOUBLE]) - [148.4131591025766]
2020-11-25 21:17:38,511 TRACE  [main] BasicExtractor: extracted value ([i4_0_0_] : [INTEGER]) - [0]
2020-11-25 21:17:38,511 TRACE  [main] BasicExtractor: extracted value ([is_condi5_0_0_] : [BOOLEAN]) - [true]
2020-11-25 21:17:38,511 TRACE  [main] BasicExtractor: extracted value ([j6_0_0_] : [INTEGER]) - [5]
2020-11-25 21:17:38,512 TRACE  [main] BasicExtractor: extracted value ([problem_7_0_0_] : [BIGINT]) - [11]
2020-11-25 21:17:38,512 TRACE  [main] BasicExtractor: extracted value ([problem_7_0_3_] : [BIGINT]) - [11]
2020-11-25 21:17:38,512 TRACE  [main] BasicExtractor: extracted value ([id1_0_3_] : [BIGINT]) - [66]
2020-11-25 21:17:38,512 TRACE  [main] CollectionType: Created collection wrapper: [com.sf.back.entities.Problem.children#11]
2020-11-25 21:17:38,514 TRACE  [main] BasicBinder: binding parameter [1] as [BIGINT] - [11]
2020-11-25 21:17:38,516 TRACE  [main] BasicBinder: binding parameter [1] as [BLOB] - [null]
2020-11-25 21:17:38,517 TRACE  [main] BasicBinder: binding parameter [2] as [DOUBLE] - [2.0]
2020-11-25 21:17:38,517 TRACE  [main] BasicBinder: binding parameter [3] as [INTEGER] - [0]
2020-11-25 21:17:38,517 TRACE  [main] BasicBinder: binding parameter [4] as [BOOLEAN] - [true]
2020-11-25 21:17:38,517 TRACE  [main] BasicBinder: binding parameter [5] as [INTEGER] - [0]
2020-11-25 21:17:38,517 TRACE  [main] BasicBinder: binding parameter [6] as [BIGINT] - [11]
2020-11-25 21:17:38,517 TRACE  [main] BasicBinder: binding parameter [7] as [BIGINT] - [61]
2020-11-25 21:17:38,518 TRACE  [main] BasicBinder: binding parameter [1] as [BLOB] - [[100, 101, 115, 99, 114, 105, 112, 116, 105, 111, 110, 112, 114, 111, 98, 108, 101, 109]]
2020-11-25 21:17:38,519 TRACE  [main] BasicBinder: binding parameter [2] as [BOOLEAN] - [null]
2020-11-25 21:17:38,519 TRACE  [main] BasicBinder: binding parameter [3] as [VARCHAR] - [POLYNOMIAL]
2020-11-25 21:17:38,519 TRACE  [main] BasicBinder: binding parameter [4] as [INTEGER] - [1]
2020-11-25 21:17:38,519 TRACE  [main] BasicBinder: binding parameter [5] as [BIGINT] - [null]
2020-11-25 21:17:38,519 TRACE  [main] BasicBinder: binding parameter [6] as [INTEGER] - [22]
2020-11-25 21:17:38,519 TRACE  [main] BasicBinder: binding parameter [7] as [BIGINT] - [11]
2020-11-25 21:17:38,539 TRACE  [main] BasicBinder: binding parameter [1] as [BIGINT] - [12]
2020-11-25 21:17:38,539 TRACE  [main] BasicExtractor: extracted value ([id1_1_2_] : [BIGINT]) - [null]
2020-11-25 21:17:38,540 TRACE  [main] BasicExtractor: extracted value ([id1_0_4_] : [BIGINT]) - [null]
2020-11-25 21:17:38,540 TRACE  [main] BasicExtractor: extracted value ([descript2_1_0_] : [BLOB]) - [[112, 114, 111, 98, 108, 101, 109, 100, 101, 115, 99, 114, 105, 112, 116, 105, 111, 110]]
2020-11-25 21:17:38,540 TRACE  [main] BasicExtractor: extracted value ([is_solve3_1_0_] : [BOOLEAN]) - [null]
2020-11-25 21:17:38,540 TRACE  [main] BasicExtractor: extracted value ([kind4_1_0_] : [VARCHAR]) - [POLYNOMIAL]
2020-11-25 21:17:38,540 TRACE  [main] BasicExtractor: extracted value ([matrix_d5_1_0_] : [INTEGER]) - [1]
2020-11-25 21:17:38,541 TRACE  [main] BasicExtractor: extracted value ([parent_p7_1_0_] : [BIGINT]) - [null]
2020-11-25 21:17:38,541 TRACE  [main] BasicExtractor: extracted value ([problem_6_1_0_] : [INTEGER]) - [22]
2020-11-25 21:17:38,541 TRACE  [main] BasicExtractor: extracted value ([problem_7_0_3_] : [BIGINT]) - [null]
2020-11-25 21:17:38,541 TRACE  [main] BasicExtractor: extracted value ([parent_p7_1_1_] : [BIGINT]) - [null]
2020-11-25 21:17:38,541 TRACE  [main] CollectionType: Created collection wrapper: [com.sf.back.entities.Problem.matrixes#12]
2020-11-25 21:17:38,541 TRACE  [main] BasicBinder: binding parameter [1] as [BIGINT] - [12]
2020-11-25 21:17:38,546 TRACE  [main] BasicExtractor: extracted value ([id1_0_1_] : [BIGINT]) - [67]
2020-11-25 21:17:38,546 TRACE  [main] BasicExtractor: extracted value ([binary_v2_0_1_] : [BLOB]) - [null]
2020-11-25 21:17:38,547 TRACE  [main] BasicExtractor: extracted value ([float_va3_0_1_] : [DOUBLE]) - [1.0]
2020-11-25 21:17:38,547 TRACE  [main] BasicExtractor: extracted value ([i4_0_1_] : [INTEGER]) - [0]
2020-11-25 21:17:38,547 TRACE  [main] BasicExtractor: extracted value ([is_condi5_0_1_] : [BOOLEAN]) - [true]
2020-11-25 21:17:38,547 TRACE  [main] BasicExtractor: extracted value ([j6_0_1_] : [INTEGER]) - [0]
2020-11-25 21:17:38,547 TRACE  [main] BasicExtractor: extracted value ([problem_7_0_1_] : [BIGINT]) - [12]
2020-11-25 21:17:38,547 TRACE  [main] BasicExtractor: extracted value ([problem_7_0_0_] : [BIGINT]) - [12]
2020-11-25 21:17:38,547 TRACE  [main] BasicExtractor: extracted value ([id1_0_0_] : [BIGINT]) - [67]
2020-11-25 21:17:38,547 TRACE  [main] BasicExtractor: extracted value ([id1_0_1_] : [BIGINT]) - [68]
2020-11-25 21:17:38,548 TRACE  [main] BasicExtractor: extracted value ([binary_v2_0_1_] : [BLOB]) - [null]
2020-11-25 21:17:38,548 TRACE  [main] BasicExtractor: extracted value ([float_va3_0_1_] : [DOUBLE]) - [2.718281828459045]
2020-11-25 21:17:38,548 TRACE  [main] BasicExtractor: extracted value ([i4_0_1_] : [INTEGER]) - [0]
2020-11-25 21:17:38,548 TRACE  [main] BasicExtractor: extracted value ([is_condi5_0_1_] : [BOOLEAN]) - [true]
2020-11-25 21:17:38,548 TRACE  [main] BasicExtractor: extracted value ([j6_0_1_] : [INTEGER]) - [1]
2020-11-25 21:17:38,548 TRACE  [main] BasicExtractor: extracted value ([problem_7_0_1_] : [BIGINT]) - [12]
2020-11-25 21:17:38,548 TRACE  [main] BasicExtractor: extracted value ([problem_7_0_0_] : [BIGINT]) - [12]
2020-11-25 21:17:38,548 TRACE  [main] BasicExtractor: extracted value ([id1_0_0_] : [BIGINT]) - [68]
2020-11-25 21:17:38,549 TRACE  [main] BasicExtractor: extracted value ([id1_0_1_] : [BIGINT]) - [69]
2020-11-25 21:17:38,549 TRACE  [main] BasicExtractor: extracted value ([binary_v2_0_1_] : [BLOB]) - [null]
2020-11-25 21:17:38,549 TRACE  [main] BasicExtractor: extracted value ([float_va3_0_1_] : [DOUBLE]) - [7.38905609893065]
2020-11-25 21:17:38,549 TRACE  [main] BasicExtractor: extracted value ([i4_0_1_] : [INTEGER]) - [0]
2020-11-25 21:17:38,549 TRACE  [main] BasicExtractor: extracted value ([is_condi5_0_1_] : [BOOLEAN]) - [true]
2020-11-25 21:17:38,549 TRACE  [main] BasicExtractor: extracted value ([j6_0_1_] : [INTEGER]) - [2]
2020-11-25 21:17:38,549 TRACE  [main] BasicExtractor: extracted value ([problem_7_0_1_] : [BIGINT]) - [12]
2020-11-25 21:17:38,549 TRACE  [main] BasicExtractor: extracted value ([problem_7_0_0_] : [BIGINT]) - [12]
2020-11-25 21:17:38,550 TRACE  [main] BasicExtractor: extracted value ([id1_0_0_] : [BIGINT]) - [69]
2020-11-25 21:17:38,550 TRACE  [main] BasicExtractor: extracted value ([id1_0_1_] : [BIGINT]) - [70]
2020-11-25 21:17:38,550 TRACE  [main] BasicExtractor: extracted value ([binary_v2_0_1_] : [BLOB]) - [null]
2020-11-25 21:17:38,550 TRACE  [main] BasicExtractor: extracted value ([float_va3_0_1_] : [DOUBLE]) - [20.085536923187668]
2020-11-25 21:17:38,550 TRACE  [main] BasicExtractor: extracted value ([i4_0_1_] : [INTEGER]) - [0]
2020-11-25 21:17:38,550 TRACE  [main] BasicExtractor: extracted value ([is_condi5_0_1_] : [BOOLEAN]) - [true]
2020-11-25 21:17:38,550 TRACE  [main] BasicExtractor: extracted value ([j6_0_1_] : [INTEGER]) - [3]
2020-11-25 21:17:38,550 TRACE  [main] BasicExtractor: extracted value ([problem_7_0_1_] : [BIGINT]) - [12]
2020-11-25 21:17:38,551 TRACE  [main] BasicExtractor: extracted value ([problem_7_0_0_] : [BIGINT]) - [12]
2020-11-25 21:17:38,551 TRACE  [main] BasicExtractor: extracted value ([id1_0_0_] : [BIGINT]) - [70]
2020-11-25 21:17:38,551 TRACE  [main] BasicExtractor: extracted value ([id1_0_1_] : [BIGINT]) - [71]
2020-11-25 21:17:38,551 TRACE  [main] BasicExtractor: extracted value ([binary_v2_0_1_] : [BLOB]) - [null]
2020-11-25 21:17:38,551 TRACE  [main] BasicExtractor: extracted value ([float_va3_0_1_] : [DOUBLE]) - [54.598150033144236]
2020-11-25 21:17:38,551 TRACE  [main] BasicExtractor: extracted value ([i4_0_1_] : [INTEGER]) - [0]
2020-11-25 21:17:38,551 TRACE  [main] BasicExtractor: extracted value ([is_condi5_0_1_] : [BOOLEAN]) - [true]
2020-11-25 21:17:38,552 TRACE  [main] BasicExtractor: extracted value ([j6_0_1_] : [INTEGER]) - [4]
2020-11-25 21:17:38,552 TRACE  [main] BasicExtractor: extracted value ([problem_7_0_1_] : [BIGINT]) - [12]
2020-11-25 21:17:38,552 TRACE  [main] BasicExtractor: extracted value ([problem_7_0_0_] : [BIGINT]) - [12]
2020-11-25 21:17:38,553 TRACE  [main] BasicExtractor: extracted value ([id1_0_0_] : [BIGINT]) - [71]
2020-11-25 21:17:38,553 TRACE  [main] BasicExtractor: extracted value ([id1_0_1_] : [BIGINT]) - [72]
2020-11-25 21:17:38,553 TRACE  [main] BasicExtractor: extracted value ([binary_v2_0_1_] : [BLOB]) - [null]
2020-11-25 21:17:38,554 TRACE  [main] BasicExtractor: extracted value ([float_va3_0_1_] : [DOUBLE]) - [148.4131591025766]
2020-11-25 21:17:38,554 TRACE  [main] BasicExtractor: extracted value ([i4_0_1_] : [INTEGER]) - [0]
2020-11-25 21:17:38,554 TRACE  [main] BasicExtractor: extracted value ([is_condi5_0_1_] : [BOOLEAN]) - [true]
2020-11-25 21:17:38,554 TRACE  [main] BasicExtractor: extracted value ([j6_0_1_] : [INTEGER]) - [5]
2020-11-25 21:17:38,554 TRACE  [main] BasicExtractor: extracted value ([problem_7_0_1_] : [BIGINT]) - [12]
2020-11-25 21:17:38,554 TRACE  [main] BasicExtractor: extracted value ([problem_7_0_0_] : [BIGINT]) - [12]
2020-11-25 21:17:38,554 TRACE  [main] BasicExtractor: extracted value ([id1_0_0_] : [BIGINT]) - [72]
2020-11-25 21:17:38,558 TRACE  [main] BasicBinder: binding parameter [1] as [BIGINT] - [12]
2020-11-25 21:17:38,559 TRACE  [main] BasicExtractor: extracted value ([id1_1_2_] : [BIGINT]) - [null]
2020-11-25 21:17:38,559 TRACE  [main] BasicExtractor: extracted value ([id1_0_4_] : [BIGINT]) - [null]
2020-11-25 21:17:38,559 TRACE  [main] BasicExtractor: extracted value ([descript2_1_0_] : [BLOB]) - [[112, 114, 111, 98, 108, 101, 109, 100, 101, 115, 99, 114, 105, 112, 116, 105, 111, 110]]
2020-11-25 21:17:38,559 TRACE  [main] BasicExtractor: extracted value ([is_solve3_1_0_] : [BOOLEAN]) - [null]
2020-11-25 21:17:38,559 TRACE  [main] BasicExtractor: extracted value ([kind4_1_0_] : [VARCHAR]) - [POLYNOMIAL]
2020-11-25 21:17:38,559 TRACE  [main] BasicExtractor: extracted value ([matrix_d5_1_0_] : [INTEGER]) - [1]
2020-11-25 21:17:38,559 TRACE  [main] BasicExtractor: extracted value ([parent_p7_1_0_] : [BIGINT]) - [null]
2020-11-25 21:17:38,559 TRACE  [main] BasicExtractor: extracted value ([problem_6_1_0_] : [INTEGER]) - [22]
2020-11-25 21:17:38,559 TRACE  [main] BasicExtractor: extracted value ([problem_7_0_3_] : [BIGINT]) - [null]
2020-11-25 21:17:38,559 TRACE  [main] BasicExtractor: extracted value ([parent_p7_1_1_] : [BIGINT]) - [null]
2020-11-25 21:17:38,560 TRACE  [main] CollectionType: Created collection wrapper: [com.sf.back.entities.Problem.matrixes#12]
2020-11-25 21:17:38,560 TRACE  [main] BasicBinder: binding parameter [1] as [BIGINT] - [12]
2020-11-25 21:17:38,560 TRACE  [main] BasicExtractor: extracted value ([id1_0_1_] : [BIGINT]) - [67]
2020-11-25 21:17:38,560 TRACE  [main] BasicExtractor: extracted value ([binary_v2_0_1_] : [BLOB]) - [null]
2020-11-25 21:17:38,561 TRACE  [main] BasicExtractor: extracted value ([float_va3_0_1_] : [DOUBLE]) - [1.0]
2020-11-25 21:17:38,561 TRACE  [main] BasicExtractor: extracted value ([i4_0_1_] : [INTEGER]) - [0]
2020-11-25 21:17:38,561 TRACE  [main] BasicExtractor: extracted value ([is_condi5_0_1_] : [BOOLEAN]) - [true]
2020-11-25 21:17:38,561 TRACE  [main] BasicExtractor: extracted value ([j6_0_1_] : [INTEGER]) - [0]
2020-11-25 21:17:38,561 TRACE  [main] BasicExtractor: extracted value ([problem_7_0_1_] : [BIGINT]) - [12]
2020-11-25 21:17:38,561 TRACE  [main] BasicExtractor: extracted value ([problem_7_0_0_] : [BIGINT]) - [12]
2020-11-25 21:17:38,561 TRACE  [main] BasicExtractor: extracted value ([id1_0_0_] : [BIGINT]) - [67]
2020-11-25 21:17:38,562 TRACE  [main] BasicExtractor: extracted value ([id1_0_1_] : [BIGINT]) - [68]
2020-11-25 21:17:38,562 TRACE  [main] BasicExtractor: extracted value ([binary_v2_0_1_] : [BLOB]) - [null]
2020-11-25 21:17:38,562 TRACE  [main] BasicExtractor: extracted value ([float_va3_0_1_] : [DOUBLE]) - [2.718281828459045]
2020-11-25 21:17:38,562 TRACE  [main] BasicExtractor: extracted value ([i4_0_1_] : [INTEGER]) - [0]
2020-11-25 21:17:38,562 TRACE  [main] BasicExtractor: extracted value ([is_condi5_0_1_] : [BOOLEAN]) - [true]
2020-11-25 21:17:38,562 TRACE  [main] BasicExtractor: extracted value ([j6_0_1_] : [INTEGER]) - [1]
2020-11-25 21:17:38,562 TRACE  [main] BasicExtractor: extracted value ([problem_7_0_1_] : [BIGINT]) - [12]
2020-11-25 21:17:38,562 TRACE  [main] BasicExtractor: extracted value ([problem_7_0_0_] : [BIGINT]) - [12]
2020-11-25 21:17:38,562 TRACE  [main] BasicExtractor: extracted value ([id1_0_0_] : [BIGINT]) - [68]
2020-11-25 21:17:38,563 TRACE  [main] BasicExtractor: extracted value ([id1_0_1_] : [BIGINT]) - [69]
2020-11-25 21:17:38,563 TRACE  [main] BasicExtractor: extracted value ([binary_v2_0_1_] : [BLOB]) - [null]
2020-11-25 21:17:38,563 TRACE  [main] BasicExtractor: extracted value ([float_va3_0_1_] : [DOUBLE]) - [7.38905609893065]
2020-11-25 21:17:38,563 TRACE  [main] BasicExtractor: extracted value ([i4_0_1_] : [INTEGER]) - [0]
2020-11-25 21:17:38,563 TRACE  [main] BasicExtractor: extracted value ([is_condi5_0_1_] : [BOOLEAN]) - [true]
2020-11-25 21:17:38,563 TRACE  [main] BasicExtractor: extracted value ([j6_0_1_] : [INTEGER]) - [2]
2020-11-25 21:17:38,563 TRACE  [main] BasicExtractor: extracted value ([problem_7_0_1_] : [BIGINT]) - [12]
2020-11-25 21:17:38,563 TRACE  [main] BasicExtractor: extracted value ([problem_7_0_0_] : [BIGINT]) - [12]
2020-11-25 21:17:38,564 TRACE  [main] BasicExtractor: extracted value ([id1_0_0_] : [BIGINT]) - [69]
2020-11-25 21:17:38,564 TRACE  [main] BasicExtractor: extracted value ([id1_0_1_] : [BIGINT]) - [70]
2020-11-25 21:17:38,564 TRACE  [main] BasicExtractor: extracted value ([binary_v2_0_1_] : [BLOB]) - [null]
2020-11-25 21:17:38,564 TRACE  [main] BasicExtractor: extracted value ([float_va3_0_1_] : [DOUBLE]) - [20.085536923187668]
2020-11-25 21:17:38,564 TRACE  [main] BasicExtractor: extracted value ([i4_0_1_] : [INTEGER]) - [0]
2020-11-25 21:17:38,564 TRACE  [main] BasicExtractor: extracted value ([is_condi5_0_1_] : [BOOLEAN]) - [true]
2020-11-25 21:17:38,564 TRACE  [main] BasicExtractor: extracted value ([j6_0_1_] : [INTEGER]) - [3]
2020-11-25 21:17:38,564 TRACE  [main] BasicExtractor: extracted value ([problem_7_0_1_] : [BIGINT]) - [12]
2020-11-25 21:17:38,564 TRACE  [main] BasicExtractor: extracted value ([problem_7_0_0_] : [BIGINT]) - [12]
2020-11-25 21:17:38,564 TRACE  [main] BasicExtractor: extracted value ([id1_0_0_] : [BIGINT]) - [70]
2020-11-25 21:17:38,565 TRACE  [main] BasicExtractor: extracted value ([id1_0_1_] : [BIGINT]) - [71]
2020-11-25 21:17:38,565 TRACE  [main] BasicExtractor: extracted value ([binary_v2_0_1_] : [BLOB]) - [null]
2020-11-25 21:17:38,565 TRACE  [main] BasicExtractor: extracted value ([float_va3_0_1_] : [DOUBLE]) - [54.598150033144236]
2020-11-25 21:17:38,565 TRACE  [main] BasicExtractor: extracted value ([i4_0_1_] : [INTEGER]) - [0]
2020-11-25 21:17:38,565 TRACE  [main] BasicExtractor: extracted value ([is_condi5_0_1_] : [BOOLEAN]) - [true]
2020-11-25 21:17:38,565 TRACE  [main] BasicExtractor: extracted value ([j6_0_1_] : [INTEGER]) - [4]
2020-11-25 21:17:38,565 TRACE  [main] BasicExtractor: extracted value ([problem_7_0_1_] : [BIGINT]) - [12]
2020-11-25 21:17:38,565 TRACE  [main] BasicExtractor: extracted value ([problem_7_0_0_] : [BIGINT]) - [12]
2020-11-25 21:17:38,565 TRACE  [main] BasicExtractor: extracted value ([id1_0_0_] : [BIGINT]) - [71]
2020-11-25 21:17:38,565 TRACE  [main] BasicExtractor: extracted value ([id1_0_1_] : [BIGINT]) - [72]
2020-11-25 21:17:38,565 TRACE  [main] BasicExtractor: extracted value ([binary_v2_0_1_] : [BLOB]) - [null]
2020-11-25 21:17:38,566 TRACE  [main] BasicExtractor: extracted value ([float_va3_0_1_] : [DOUBLE]) - [148.4131591025766]
2020-11-25 21:17:38,566 TRACE  [main] BasicExtractor: extracted value ([i4_0_1_] : [INTEGER]) - [0]
2020-11-25 21:17:38,566 TRACE  [main] BasicExtractor: extracted value ([is_condi5_0_1_] : [BOOLEAN]) - [true]
2020-11-25 21:17:38,566 TRACE  [main] BasicExtractor: extracted value ([j6_0_1_] : [INTEGER]) - [5]
2020-11-25 21:17:38,566 TRACE  [main] BasicExtractor: extracted value ([problem_7_0_1_] : [BIGINT]) - [12]
2020-11-25 21:17:38,566 TRACE  [main] BasicExtractor: extracted value ([problem_7_0_0_] : [BIGINT]) - [12]
2020-11-25 21:17:38,566 TRACE  [main] BasicExtractor: extracted value ([id1_0_0_] : [BIGINT]) - [72]
2020-11-25 21:17:38,597 TRACE  [main] BasicBinder: binding parameter [1] as [BIGINT] - [67]
2020-11-25 21:17:38,602 TRACE  [main] BasicBinder: binding parameter [1] as [BIGINT] - [68]
2020-11-25 21:17:38,603 TRACE  [main] BasicBinder: binding parameter [1] as [BIGINT] - [69]
2020-11-25 21:17:38,604 TRACE  [main] BasicBinder: binding parameter [1] as [BIGINT] - [70]
2020-11-25 21:17:38,605 TRACE  [main] BasicBinder: binding parameter [1] as [BIGINT] - [71]
2020-11-25 21:17:38,606 TRACE  [main] BasicBinder: binding parameter [1] as [BIGINT] - [72]
2020-11-25 21:17:38,608 TRACE  [main] BasicBinder: binding parameter [1] as [BIGINT] - [12]
2020-11-25 21:17:38,611 TRACE  [main] BasicBinder: binding parameter [1] as [BIGINT] - [12]
2020-11-25 21:17:38,613 WARN   [main] ProblemService: Problem with 12 is not found
2020-11-25 21:17:39,712 DEBUG  [main] BasicTypeRegistry: Adding type registration boolean -> org.hibernate.type.BooleanType@2e1eb85f
2020-11-25 21:17:39,713 DEBUG  [main] BasicTypeRegistry: Adding type registration boolean -> org.hibernate.type.BooleanType@2e1eb85f
2020-11-25 21:17:39,713 DEBUG  [main] BasicTypeRegistry: Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@2e1eb85f
2020-11-25 21:17:39,713 DEBUG  [main] BasicTypeRegistry: Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@1283ca23
2020-11-25 21:17:39,714 DEBUG  [main] BasicTypeRegistry: Adding type registration true_false -> org.hibernate.type.TrueFalseType@733e6df7
2020-11-25 21:17:39,714 DEBUG  [main] BasicTypeRegistry: Adding type registration yes_no -> org.hibernate.type.YesNoType@4ef4f627
2020-11-25 21:17:39,714 DEBUG  [main] BasicTypeRegistry: Adding type registration byte -> org.hibernate.type.ByteType@1cbc5693
2020-11-25 21:17:39,715 DEBUG  [main] BasicTypeRegistry: Adding type registration byte -> org.hibernate.type.ByteType@1cbc5693
2020-11-25 21:17:39,715 DEBUG  [main] BasicTypeRegistry: Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@1cbc5693
2020-11-25 21:17:39,715 DEBUG  [main] BasicTypeRegistry: Adding type registration character -> org.hibernate.type.CharacterType@ab2e6d2
2020-11-25 21:17:39,716 DEBUG  [main] BasicTypeRegistry: Adding type registration char -> org.hibernate.type.CharacterType@ab2e6d2
2020-11-25 21:17:39,716 DEBUG  [main] BasicTypeRegistry: Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@ab2e6d2
2020-11-25 21:17:39,716 DEBUG  [main] BasicTypeRegistry: Adding type registration short -> org.hibernate.type.ShortType@674da77b
2020-11-25 21:17:39,717 DEBUG  [main] BasicTypeRegistry: Adding type registration short -> org.hibernate.type.ShortType@674da77b
2020-11-25 21:17:39,717 DEBUG  [main] BasicTypeRegistry: Adding type registration java.lang.Short -> org.hibernate.type.ShortType@674da77b
2020-11-25 21:17:39,718 DEBUG  [main] BasicTypeRegistry: Adding type registration integer -> org.hibernate.type.IntegerType@477021ee
2020-11-25 21:17:39,718 DEBUG  [main] BasicTypeRegistry: Adding type registration int -> org.hibernate.type.IntegerType@477021ee
2020-11-25 21:17:39,718 DEBUG  [main] BasicTypeRegistry: Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@477021ee
2020-11-25 21:17:39,719 DEBUG  [main] BasicTypeRegistry: Adding type registration long -> org.hibernate.type.LongType@2ba42204
2020-11-25 21:17:39,719 DEBUG  [main] BasicTypeRegistry: Adding type registration long -> org.hibernate.type.LongType@2ba42204
2020-11-25 21:17:39,720 DEBUG  [main] BasicTypeRegistry: Adding type registration java.lang.Long -> org.hibernate.type.LongType@2ba42204
2020-11-25 21:17:39,720 DEBUG  [main] BasicTypeRegistry: Adding type registration float -> org.hibernate.type.FloatType@5b35c7d
2020-11-25 21:17:39,720 DEBUG  [main] BasicTypeRegistry: Adding type registration float -> org.hibernate.type.FloatType@5b35c7d
2020-11-25 21:17:39,720 DEBUG  [main] BasicTypeRegistry: Adding type registration java.lang.Float -> org.hibernate.type.FloatType@5b35c7d
2020-11-25 21:17:39,721 DEBUG  [main] BasicTypeRegistry: Adding type registration double -> org.hibernate.type.DoubleType@40bf4386
2020-11-25 21:17:39,721 DEBUG  [main] BasicTypeRegistry: Adding type registration double -> org.hibernate.type.DoubleType@40bf4386
2020-11-25 21:17:39,721 DEBUG  [main] BasicTypeRegistry: Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@40bf4386
2020-11-25 21:17:39,722 DEBUG  [main] BasicTypeRegistry: Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@481b2f10
2020-11-25 21:17:39,722 DEBUG  [main] BasicTypeRegistry: Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@481b2f10
2020-11-25 21:17:39,722 DEBUG  [main] BasicTypeRegistry: Adding type registration big_integer -> org.hibernate.type.BigIntegerType@624b523
2020-11-25 21:17:39,722 DEBUG  [main] BasicTypeRegistry: Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@624b523
2020-11-25 21:17:39,723 DEBUG  [main] BasicTypeRegistry: Adding type registration string -> org.hibernate.type.StringType@7634f2b
2020-11-25 21:17:39,723 DEBUG  [main] BasicTypeRegistry: Adding type registration java.lang.String -> org.hibernate.type.StringType@7634f2b
2020-11-25 21:17:39,723 DEBUG  [main] BasicTypeRegistry: Adding type registration nstring -> org.hibernate.type.StringNVarcharType@4fba8eec
2020-11-25 21:17:39,723 DEBUG  [main] BasicTypeRegistry: Adding type registration ncharacter -> org.hibernate.type.CharacterNCharType@681c0ae6
2020-11-25 21:17:39,723 DEBUG  [main] BasicTypeRegistry: Adding type registration url -> org.hibernate.type.UrlType@7459a21e
2020-11-25 21:17:39,724 DEBUG  [main] BasicTypeRegistry: Adding type registration java.net.URL -> org.hibernate.type.UrlType@7459a21e
2020-11-25 21:17:39,724 DEBUG  [main] BasicTypeRegistry: Adding type registration Duration -> org.hibernate.type.DurationType@739265f1
2020-11-25 21:17:39,724 DEBUG  [main] BasicTypeRegistry: Adding type registration java.time.Duration -> org.hibernate.type.DurationType@739265f1
2020-11-25 21:17:39,724 DEBUG  [main] BasicTypeRegistry: Adding type registration Instant -> org.hibernate.type.InstantType@f2d890c
2020-11-25 21:17:39,724 DEBUG  [main] BasicTypeRegistry: Adding type registration java.time.Instant -> org.hibernate.type.InstantType@f2d890c
2020-11-25 21:17:39,724 DEBUG  [main] BasicTypeRegistry: Adding type registration LocalDateTime -> org.hibernate.type.LocalDateTimeType@19b07407
2020-11-25 21:17:39,724 DEBUG  [main] BasicTypeRegistry: Adding type registration java.time.LocalDateTime -> org.hibernate.type.LocalDateTimeType@19b07407
2020-11-25 21:17:39,725 DEBUG  [main] BasicTypeRegistry: Adding type registration LocalDate -> org.hibernate.type.LocalDateType@30aec673
2020-11-25 21:17:39,725 DEBUG  [main] BasicTypeRegistry: Adding type registration java.time.LocalDate -> org.hibernate.type.LocalDateType@30aec673
2020-11-25 21:17:39,725 DEBUG  [main] BasicTypeRegistry: Adding type registration LocalTime -> org.hibernate.type.LocalTimeType@58f31629
2020-11-25 21:17:39,726 DEBUG  [main] BasicTypeRegistry: Adding type registration java.time.LocalTime -> org.hibernate.type.LocalTimeType@58f31629
2020-11-25 21:17:39,726 DEBUG  [main] BasicTypeRegistry: Adding type registration OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@310a7859
2020-11-25 21:17:39,726 DEBUG  [main] BasicTypeRegistry: Adding type registration java.time.OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@310a7859
2020-11-25 21:17:39,726 DEBUG  [main] BasicTypeRegistry: Adding type registration OffsetTime -> org.hibernate.type.OffsetTimeType@52831a73
2020-11-25 21:17:39,726 DEBUG  [main] BasicTypeRegistry: Adding type registration java.time.OffsetTime -> org.hibernate.type.OffsetTimeType@52831a73
2020-11-25 21:17:39,727 DEBUG  [main] BasicTypeRegistry: Adding type registration ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@11d4d979
2020-11-25 21:17:39,727 DEBUG  [main] BasicTypeRegistry: Adding type registration java.time.ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@11d4d979
2020-11-25 21:17:39,727 DEBUG  [main] BasicTypeRegistry: Adding type registration date -> org.hibernate.type.DateType@70716259
2020-11-25 21:17:39,727 DEBUG  [main] BasicTypeRegistry: Adding type registration java.sql.Date -> org.hibernate.type.DateType@70716259
2020-11-25 21:17:39,727 DEBUG  [main] BasicTypeRegistry: Adding type registration time -> org.hibernate.type.TimeType@6c17c0f8
2020-11-25 21:17:39,727 DEBUG  [main] BasicTypeRegistry: Adding type registration java.sql.Time -> org.hibernate.type.TimeType@6c17c0f8
2020-11-25 21:17:39,727 DEBUG  [main] BasicTypeRegistry: Adding type registration timestamp -> org.hibernate.type.TimestampType@1e1237ab
2020-11-25 21:17:39,727 DEBUG  [main] BasicTypeRegistry: Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@1e1237ab
2020-11-25 21:17:39,728 DEBUG  [main] BasicTypeRegistry: Adding type registration java.util.Date -> org.hibernate.type.TimestampType@1e1237ab
2020-11-25 21:17:39,728 DEBUG  [main] BasicTypeRegistry: Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@f613067
2020-11-25 21:17:39,728 DEBUG  [main] BasicTypeRegistry: Adding type registration calendar -> org.hibernate.type.CalendarType@7b222230
2020-11-25 21:17:39,728 DEBUG  [main] BasicTypeRegistry: Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@7b222230
2020-11-25 21:17:39,728 DEBUG  [main] BasicTypeRegistry: Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@7b222230
2020-11-25 21:17:39,728 DEBUG  [main] BasicTypeRegistry: Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@172f4514
2020-11-25 21:17:39,728 DEBUG  [main] BasicTypeRegistry: Adding type registration locale -> org.hibernate.type.LocaleType@a54acec
2020-11-25 21:17:39,728 DEBUG  [main] BasicTypeRegistry: Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@a54acec
2020-11-25 21:17:39,729 DEBUG  [main] BasicTypeRegistry: Adding type registration currency -> org.hibernate.type.CurrencyType@41f3aaf1
2020-11-25 21:17:39,729 DEBUG  [main] BasicTypeRegistry: Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@41f3aaf1
2020-11-25 21:17:39,729 DEBUG  [main] BasicTypeRegistry: Adding type registration timezone -> org.hibernate.type.TimeZoneType@2eb60c71
2020-11-25 21:17:39,729 DEBUG  [main] BasicTypeRegistry: Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@2eb60c71
2020-11-25 21:17:39,729 DEBUG  [main] BasicTypeRegistry: Adding type registration class -> org.hibernate.type.ClassType@6a950a3b
2020-11-25 21:17:39,730 DEBUG  [main] BasicTypeRegistry: Adding type registration java.lang.Class -> org.hibernate.type.ClassType@6a950a3b
2020-11-25 21:17:39,730 DEBUG  [main] BasicTypeRegistry: Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@59303963
2020-11-25 21:17:39,730 DEBUG  [main] BasicTypeRegistry: Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@59303963
2020-11-25 21:17:39,730 DEBUG  [main] BasicTypeRegistry: Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@1320e68a
2020-11-25 21:17:39,730 DEBUG  [main] BasicTypeRegistry: Adding type registration binary -> org.hibernate.type.BinaryType@385d819
2020-11-25 21:17:39,730 DEBUG  [main] BasicTypeRegistry: Adding type registration byte[] -> org.hibernate.type.BinaryType@385d819
2020-11-25 21:17:39,731 DEBUG  [main] BasicTypeRegistry: Adding type registration [B -> org.hibernate.type.BinaryType@385d819
2020-11-25 21:17:39,731 DEBUG  [main] BasicTypeRegistry: Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@12d40609
2020-11-25 21:17:39,731 DEBUG  [main] BasicTypeRegistry: Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@12d40609
2020-11-25 21:17:39,731 DEBUG  [main] BasicTypeRegistry: Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@12d40609
2020-11-25 21:17:39,731 DEBUG  [main] BasicTypeRegistry: Adding type registration row_version -> org.hibernate.type.RowVersionType@46320c9a
2020-11-25 21:17:39,731 DEBUG  [main] BasicTypeRegistry: Adding type registration image -> org.hibernate.type.ImageType@353f472a
2020-11-25 21:17:39,731 DEBUG  [main] BasicTypeRegistry: Adding type registration characters -> org.hibernate.type.CharArrayType@23e3f5cd
2020-11-25 21:17:39,731 DEBUG  [main] BasicTypeRegistry: Adding type registration char[] -> org.hibernate.type.CharArrayType@23e3f5cd
2020-11-25 21:17:39,732 DEBUG  [main] BasicTypeRegistry: Adding type registration [C -> org.hibernate.type.CharArrayType@23e3f5cd
2020-11-25 21:17:39,732 DEBUG  [main] BasicTypeRegistry: Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@230a73f2
2020-11-25 21:17:39,732 DEBUG  [main] BasicTypeRegistry: Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@230a73f2
2020-11-25 21:17:39,732 DEBUG  [main] BasicTypeRegistry: Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@230a73f2
2020-11-25 21:17:39,732 DEBUG  [main] BasicTypeRegistry: Adding type registration text -> org.hibernate.type.TextType@798deee8
2020-11-25 21:17:39,732 DEBUG  [main] BasicTypeRegistry: Adding type registration ntext -> org.hibernate.type.NTextType@22d8f4ed
2020-11-25 21:17:39,732 DEBUG  [main] BasicTypeRegistry: Adding type registration blob -> org.hibernate.type.BlobType@267f9765
2020-11-25 21:17:39,733 DEBUG  [main] BasicTypeRegistry: Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@267f9765
2020-11-25 21:17:39,733 DEBUG  [main] BasicTypeRegistry: Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@7f3fc42f
2020-11-25 21:17:39,733 DEBUG  [main] BasicTypeRegistry: Adding type registration clob -> org.hibernate.type.ClobType@32a72c4
2020-11-25 21:17:39,733 DEBUG  [main] BasicTypeRegistry: Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@32a72c4
2020-11-25 21:17:39,734 DEBUG  [main] BasicTypeRegistry: Adding type registration nclob -> org.hibernate.type.NClobType@7a1a3468
2020-11-25 21:17:39,734 DEBUG  [main] BasicTypeRegistry: Adding type registration java.sql.NClob -> org.hibernate.type.NClobType@7a1a3468
2020-11-25 21:17:39,734 DEBUG  [main] BasicTypeRegistry: Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@629e8212
2020-11-25 21:17:39,734 DEBUG  [main] BasicTypeRegistry: Adding type registration materialized_nclob -> org.hibernate.type.MaterializedNClobType@4e424582
2020-11-25 21:17:39,734 DEBUG  [main] BasicTypeRegistry: Adding type registration serializable -> org.hibernate.type.SerializableType@6d963d70
2020-11-25 21:17:39,734 DEBUG  [main] BasicTypeRegistry: Adding type registration object -> org.hibernate.type.ObjectType@7135ce0a
2020-11-25 21:17:39,734 DEBUG  [main] BasicTypeRegistry: Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@7135ce0a
2020-11-25 21:17:39,734 DEBUG  [main] BasicTypeRegistry: Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@1fe37d27
2020-11-25 21:17:39,735 DEBUG  [main] BasicTypeRegistry: Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@1718de70
2020-11-25 21:17:39,735 DEBUG  [main] BasicTypeRegistry: Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@6bfc5296
2020-11-25 21:17:39,735 DEBUG  [main] BasicTypeRegistry: Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@41736818
2020-11-25 21:17:39,735 DEBUG  [main] BasicTypeRegistry: Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@457d3f54
2020-11-25 21:17:39,735 DEBUG  [main] BasicTypeRegistry: Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@144792d5
2020-11-25 21:17:39,736 DEBUG  [main] BasicTypeRegistry: Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@1da61a29
2020-11-25 21:17:39,736 DEBUG  [main] BasicTypeRegistry: Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@47cf922d
2020-11-25 21:17:39,753 DEBUG  [main] TypeConfiguration$Scope: Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@267e0ca0] to MetadataBuildingContext [org.hibernate.boot.internal.MetadataBuildingContextRootImpl@3e3a07ab]
2020-11-25 21:17:39,763 DEBUG  [main] EnumType: Using NAMED-based conversion for Enum com.sf.back.entities.Kind
2020-11-25 21:17:39,765 DEBUG  [main] EnumType: Using NAMED-based conversion for Enum com.sf.back.entities.Kind
2020-11-25 21:17:39,793 DEBUG  [main] TypeConfiguration$Scope: Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@267e0ca0] to SessionFactoryImpl [org.hibernate.internal.SessionFactoryImpl@55465bfc]
2020-11-25 21:17:39,796 DEBUG  [main] EnumType: Using NAMED-based conversion for Enum com.sf.back.entities.Kind
2020-11-25 21:17:39,796 DEBUG  [main] EnumType: Using NAMED-based conversion for Enum com.sf.back.entities.Kind
2020-11-25 21:17:39,800 DEBUG  [main] EnumType: Using NAMED-based conversion for Enum com.sf.back.entities.Kind
2020-11-25 21:17:39,801 DEBUG  [main] EnumType: Using NAMED-based conversion for Enum com.sf.back.entities.Kind
2020-11-25 21:17:39,809 DEBUG  [main] EnumType: Using NAMED-based conversion for Enum com.sf.back.entities.Kind
2020-11-25 21:17:39,809 DEBUG  [main] EnumType: Using NAMED-based conversion for Enum com.sf.back.entities.Kind
2020-11-25 21:17:39,814 DEBUG  [main] EnumType: Using NAMED-based conversion for Enum com.sf.back.entities.Kind
2020-11-25 21:17:39,824 TRACE  [main] TypeConfiguration$Scope: Handling #sessionFactoryCreated from [org.hibernate.internal.SessionFactoryImpl@55465bfc] for TypeConfiguration
2020-11-25 21:17:39,984 WARN   [main] JpaBaseConfiguration$JpaWebConfiguration: spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2020-11-25 21:17:40,134 WARN   [main] GroovyTemplateAutoConfiguration: Cannot find template location: classpath:/templates/ (please add some templates, check your Groovy configuration, or set spring.groovy.template.check-template-location=false)
2020-11-25 21:17:40,161 TRACE  [main] BasicBinder: binding parameter [1] as [BLOB] - [[70, 105, 110, 100, 32, 97, 108, 108, 32, 114, 111, 111, 116, 115, 32, 111, 102, 32, 103, 105, 118, 101, 110, 32, 112, 111, 108, 121, 110, 111, 109, 105, 97, 108]]
2020-11-25 21:17:40,162 TRACE  [main] BasicBinder: binding parameter [2] as [BOOLEAN] - [false]
2020-11-25 21:17:40,162 TRACE  [main] BasicBinder: binding parameter [3] as [VARCHAR] - [POLYNOMIAL]
2020-11-25 21:17:40,162 TRACE  [main] BasicBinder: binding parameter [4] as [INTEGER] - [1]
2020-11-25 21:17:40,162 TRACE  [main] BasicBinder: binding parameter [5] as [BIGINT] - [null]
2020-11-25 21:17:40,162 TRACE  [main] BasicBinder: binding parameter [6] as [INTEGER] - [6]
2020-11-25 21:17:40,164 TRACE  [main] BasicBinder: binding parameter [1] as [BLOB] - [null]
2020-11-25 21:17:40,164 TRACE  [main] BasicBinder: binding parameter [2] as [DOUBLE] - [1.0]
2020-11-25 21:17:40,164 TRACE  [main] BasicBinder: binding parameter [3] as [INTEGER] - [0]
2020-11-25 21:17:40,165 TRACE  [main] BasicBinder: binding parameter [4] as [BOOLEAN] - [true]
2020-11-25 21:17:40,165 TRACE  [main] BasicBinder: binding parameter [5] as [INTEGER] - [0]
2020-11-25 21:17:40,165 TRACE  [main] BasicBinder: binding parameter [6] as [BIGINT] - [1]
2020-11-25 21:17:40,166 TRACE  [main] BasicBinder: binding parameter [1] as [BLOB] - [null]
2020-11-25 21:17:40,166 TRACE  [main] BasicBinder: binding parameter [2] as [DOUBLE] - [2.0]
2020-11-25 21:17:40,166 TRACE  [main] BasicBinder: binding parameter [3] as [INTEGER] - [0]
2020-11-25 21:17:40,167 TRACE  [main] BasicBinder: binding parameter [4] as [BOOLEAN] - [true]
2020-11-25 21:17:40,167 TRACE  [main] BasicBinder: binding parameter [5] as [INTEGER] - [1]
2020-11-25 21:17:40,167 TRACE  [main] BasicBinder: binding parameter [6] as [BIGINT] - [1]
2020-11-25 21:17:40,169 TRACE  [main] BasicBinder: binding parameter [1] as [BLOB] - [null]
2020-11-25 21:17:40,169 TRACE  [main] BasicBinder: binding parameter [2] as [DOUBLE] - [1.0]
2020-11-25 21:17:40,170 TRACE  [main] BasicBinder: binding parameter [3] as [INTEGER] - [0]
2020-11-25 21:17:40,170 TRACE  [main] BasicBinder: binding parameter [4] as [BOOLEAN] - [true]
2020-11-25 21:17:40,170 TRACE  [main] BasicBinder: binding parameter [5] as [INTEGER] - [2]
2020-11-25 21:17:40,170 TRACE  [main] BasicBinder: binding parameter [6] as [BIGINT] - [1]
2020-11-25 21:17:40,172 TRACE  [main] BasicBinder: binding parameter [1] as [BLOB] - [null]
2020-11-25 21:17:40,172 TRACE  [main] BasicBinder: binding parameter [2] as [DOUBLE] - [1.0]
2020-11-25 21:17:40,172 TRACE  [main] BasicBinder: binding parameter [3] as [INTEGER] - [0]
2020-11-25 21:17:40,172 TRACE  [main] BasicBinder: binding parameter [4] as [BOOLEAN] - [false]
2020-11-25 21:17:40,173 TRACE  [main] BasicBinder: binding parameter [5] as [INTEGER] - [0]
2020-11-25 21:17:40,173 TRACE  [main] BasicBinder: binding parameter [6] as [BIGINT] - [1]
2020-11-25 21:17:40,174 TRACE  [main] BasicBinder: binding parameter [1] as [BLOB] - [null]
2020-11-25 21:17:40,174 TRACE  [main] BasicBinder: binding parameter [2] as [DOUBLE] - [1.0]
2020-11-25 21:17:40,175 TRACE  [main] BasicBinder: binding parameter [3] as [INTEGER] - [0]
2020-11-25 21:17:40,175 TRACE  [main] BasicBinder: binding parameter [4] as [BOOLEAN] - [false]
2020-11-25 21:17:40,175 TRACE  [main] BasicBinder: binding parameter [5] as [INTEGER] - [1]
2020-11-25 21:17:40,175 TRACE  [main] BasicBinder: binding parameter [6] as [BIGINT] - [1]
2020-11-25 21:17:40,511 WARN   [SpringContextShutdownHook] SqlExceptionHelper: SQL Error: 90121, SQLState: 90121
2020-11-25 21:17:40,518 ERROR  [SpringContextShutdownHook] SqlExceptionHelper: Database is already closed (to disable automatic closing at VM shutdown, add ";DB_CLOSE_ON_EXIT=FALSE" to the db URL) [90121-200]
2020-11-25 21:17:40,520 WARN   [SpringContextShutdownHook] SqlExceptionHelper: SQL Error: 90121, SQLState: 90121
2020-11-25 21:17:40,520 ERROR  [SpringContextShutdownHook] SqlExceptionHelper: Database is already closed (to disable automatic closing at VM shutdown, add ";DB_CLOSE_ON_EXIT=FALSE" to the db URL) [90121-200]
2020-11-25 21:17:40,521 WARN   [SpringContextShutdownHook] DisposableBeanAdapter: Invocation of destroy method failed on bean with name 'entityManagerFactory': org.hibernate.exception.JDBCConnectionException: Unable to release JDBC Connection used for DDL execution
2020-11-25 21:17:40,711 TRACE  [SpringContextShutdownHook] TypeConfiguration$Scope: Handling #sessionFactoryClosed from [org.hibernate.internal.SessionFactoryImpl@7dfca9e6] for TypeConfiguration
2020-11-25 21:17:40,712 DEBUG  [SpringContextShutdownHook] TypeConfiguration$Scope: Un-scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration$Scope@474b9358] from SessionFactory [org.hibernate.internal.SessionFactoryImpl@7dfca9e6]
2020-11-25 21:17:40,711 TRACE  [SpringContextShutdownHook] TypeConfiguration$Scope: Handling #sessionFactoryClosed from [org.hibernate.internal.SessionFactoryImpl@69ba3f4e] for TypeConfiguration
2020-11-25 21:17:40,715 DEBUG  [SpringContextShutdownHook] TypeConfiguration$Scope: Un-scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration$Scope@55761394] from SessionFactory [org.hibernate.internal.SessionFactoryImpl@69ba3f4e]
2020-11-25 21:18:56,142 WARN   [main] dev-updater: Use the './' prefix for files in JAR files: 'flow-component-renderer.js', please update your component.
2020-11-25 21:19:05,837 WARN   [main] AnnotationConfigServletWebServerApplicationContext: Exception encountered during context initialization - cancelling refresh attempt: org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'entityManagerFactory' defined in class path resource [org/springframework/boot/autoconfigure/orm/jpa/HibernateJpaConfiguration.class]: Invocation of init method failed; nested exception is org.hibernate.AnnotationException: No identifier specified for entity: com.sf.back.entities.Matrix
2020-11-25 21:19:05,862 WARN   [main] WebappClassLoaderBase: The web application [ROOT] appears to have started a thread named [Thread-4] but has failed to stop it. This is very likely to create a memory leak. Stack trace of thread:
 java.net.DualStackPlainSocketImpl.accept0(Native Method)
 java.net.DualStackPlainSocketImpl.socketAccept(DualStackPlainSocketImpl.java:131)
 java.net.AbstractPlainSocketImpl.accept(AbstractPlainSocketImpl.java:409)
 java.net.PlainSocketImpl.accept(PlainSocketImpl.java:199)
 java.net.ServerSocket.implAccept(ServerSocket.java:545)
 java.net.ServerSocket.accept(ServerSocket.java:513)
 com.vaadin.flow.server.DevServerWatchDog$WatchDogServer.run(DevServerWatchDog.java:58)
 java.lang.Thread.run(Thread.java:748)
2020-11-25 21:19:05,863 WARN   [main] WebappClassLoaderBase: The web application [ROOT] appears to have started a thread named [webpack] but has failed to stop it. This is very likely to create a memory leak. Stack trace of thread:
 java.io.FileInputStream.readBytes(Native Method)
 java.io.FileInputStream.read(FileInputStream.java:255)
 java.io.BufferedInputStream.read1(BufferedInputStream.java:284)
 java.io.BufferedInputStream.read(BufferedInputStream.java:345)
 sun.nio.cs.StreamDecoder.readBytes(StreamDecoder.java:284)
 sun.nio.cs.StreamDecoder.implRead(StreamDecoder.java:326)
 sun.nio.cs.StreamDecoder.read(StreamDecoder.java:178)
 java.io.InputStreamReader.read(InputStreamReader.java:184)
 java.io.BufferedReader.fill(BufferedReader.java:161)
 java.io.BufferedReader.readLine(BufferedReader.java:324)
 java.io.BufferedReader.readLine(BufferedReader.java:389)
 com.vaadin.flow.server.DevModeHandler.readLinesLoop(DevModeHandler.java:450)
 com.vaadin.flow.server.DevModeHandler.lambda$logStream$1(DevModeHandler.java:429)
 com.vaadin.flow.server.DevModeHandler$$Lambda$561/751438416.run(Unknown Source)
 java.lang.Thread.run(Thread.java:748)
2020-11-25 21:19:05,879 ERROR  [main] SpringApplication: Application run failed
org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'entityManagerFactory' defined in class path resource [org/springframework/boot/autoconfigure/orm/jpa/HibernateJpaConfiguration.class]: Invocation of init method failed; nested exception is org.hibernate.AnnotationException: No identifier specified for entity: com.sf.back.entities.Matrix
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1803)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:595)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:517)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:323)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:222)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:321)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:202)
	at org.springframework.context.support.AbstractApplicationContext.getBean(AbstractApplicationContext.java:1108)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:868)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:550)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.refresh(ServletWebServerApplicationContext.java:141)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:747)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:397)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:315)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1226)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1215)
	at com.sf.VaadinMathSolverApplication.main(VaadinMathSolverApplication.java:23)
Caused by: org.hibernate.AnnotationException: No identifier specified for entity: com.sf.back.entities.Matrix
	at org.hibernate.cfg.InheritanceState.determineDefaultAccessType(InheritanceState.java:266)
	at org.hibernate.cfg.InheritanceState.getElementsToProcess(InheritanceState.java:211)
	at org.hibernate.cfg.AnnotationBinder.bindClass(AnnotationBinder.java:781)
	at org.hibernate.boot.model.source.internal.annotations.AnnotationMetadataSourceProcessorImpl.processEntityHierarchies(AnnotationMetadataSourceProcessorImpl.java:254)
	at org.hibernate.boot.model.process.spi.MetadataBuildingProcess$1.processEntityHierarchies(MetadataBuildingProcess.java:230)
	at org.hibernate.boot.model.process.spi.MetadataBuildingProcess.complete(MetadataBuildingProcess.java:273)
	at org.hibernate.jpa.boot.internal.EntityManagerFactoryBuilderImpl.metadata(EntityManagerFactoryBuilderImpl.java:1214)
	at org.hibernate.jpa.boot.internal.EntityManagerFactoryBuilderImpl.build(EntityManagerFactoryBuilderImpl.java:1245)
	at org.springframework.orm.jpa.vendor.SpringHibernateJpaPersistenceProvider.createContainerEntityManagerFactory(SpringHibernateJpaPersistenceProvider.java:58)
	at org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean.createNativeEntityManagerFactory(LocalContainerEntityManagerFactoryBean.java:365)
	at org.springframework.orm.jpa.AbstractEntityManagerFactoryBean.buildNativeEntityManagerFactory(AbstractEntityManagerFactoryBean.java:391)
	at org.springframework.orm.jpa.AbstractEntityManagerFactoryBean.afterPropertiesSet(AbstractEntityManagerFactoryBean.java:378)
	at org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean.afterPropertiesSet(LocalContainerEntityManagerFactoryBean.java:341)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1862)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1799)
	... 16 common frames omitted
2020-11-25 21:20:28,051 WARN   [main] dev-updater: Use the './' prefix for files in JAR files: 'flow-component-renderer.js', please update your component.
2020-11-25 21:20:39,278 WARN   [main] AnnotationConfigServletWebServerApplicationContext: Exception encountered during context initialization - cancelling refresh attempt: org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'entityManagerFactory' defined in class path resource [org/springframework/boot/autoconfigure/orm/jpa/HibernateJpaConfiguration.class]: Invocation of init method failed; nested exception is org.hibernate.AnnotationException: No identifier specified for entity: com.sf.back.entities.Matrix
2020-11-25 21:20:39,300 WARN   [main] WebappClassLoaderBase: The web application [ROOT] appears to have started a thread named [Thread-4] but has failed to stop it. This is very likely to create a memory leak. Stack trace of thread:
 java.net.DualStackPlainSocketImpl.accept0(Native Method)
 java.net.DualStackPlainSocketImpl.socketAccept(DualStackPlainSocketImpl.java:131)
 java.net.AbstractPlainSocketImpl.accept(AbstractPlainSocketImpl.java:409)
 java.net.PlainSocketImpl.accept(PlainSocketImpl.java:199)
 java.net.ServerSocket.implAccept(ServerSocket.java:545)
 java.net.ServerSocket.accept(ServerSocket.java:513)
 com.vaadin.flow.server.DevServerWatchDog$WatchDogServer.run(DevServerWatchDog.java:58)
 java.lang.Thread.run(Thread.java:748)
2020-11-25 21:20:39,300 WARN   [main] WebappClassLoaderBase: The web application [ROOT] appears to have started a thread named [webpack] but has failed to stop it. This is very likely to create a memory leak. Stack trace of thread:
 java.io.FileInputStream.readBytes(Native Method)
 java.io.FileInputStream.read(FileInputStream.java:255)
 java.io.BufferedInputStream.read1(BufferedInputStream.java:284)
 java.io.BufferedInputStream.read(BufferedInputStream.java:345)
 sun.nio.cs.StreamDecoder.readBytes(StreamDecoder.java:284)
 sun.nio.cs.StreamDecoder.implRead(StreamDecoder.java:326)
 sun.nio.cs.StreamDecoder.read(StreamDecoder.java:178)
 java.io.InputStreamReader.read(InputStreamReader.java:184)
 java.io.BufferedReader.fill(BufferedReader.java:161)
 java.io.BufferedReader.readLine(BufferedReader.java:324)
 java.io.BufferedReader.readLine(BufferedReader.java:389)
 com.vaadin.flow.server.DevModeHandler.readLinesLoop(DevModeHandler.java:450)
 com.vaadin.flow.server.DevModeHandler.lambda$logStream$1(DevModeHandler.java:429)
 com.vaadin.flow.server.DevModeHandler$$Lambda$559/1219667812.run(Unknown Source)
 java.lang.Thread.run(Thread.java:748)
2020-11-25 21:20:39,319 ERROR  [main] SpringApplication: Application run failed
org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'entityManagerFactory' defined in class path resource [org/springframework/boot/autoconfigure/orm/jpa/HibernateJpaConfiguration.class]: Invocation of init method failed; nested exception is org.hibernate.AnnotationException: No identifier specified for entity: com.sf.back.entities.Matrix
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1803)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:595)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:517)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:323)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:222)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:321)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:202)
	at org.springframework.context.support.AbstractApplicationContext.getBean(AbstractApplicationContext.java:1108)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:868)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:550)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.refresh(ServletWebServerApplicationContext.java:141)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:747)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:397)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:315)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1226)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1215)
	at com.sf.VaadinMathSolverApplication.main(VaadinMathSolverApplication.java:23)
Caused by: org.hibernate.AnnotationException: No identifier specified for entity: com.sf.back.entities.Matrix
	at org.hibernate.cfg.InheritanceState.determineDefaultAccessType(InheritanceState.java:266)
	at org.hibernate.cfg.InheritanceState.getElementsToProcess(InheritanceState.java:211)
	at org.hibernate.cfg.AnnotationBinder.bindClass(AnnotationBinder.java:781)
	at org.hibernate.boot.model.source.internal.annotations.AnnotationMetadataSourceProcessorImpl.processEntityHierarchies(AnnotationMetadataSourceProcessorImpl.java:254)
	at org.hibernate.boot.model.process.spi.MetadataBuildingProcess$1.processEntityHierarchies(MetadataBuildingProcess.java:230)
	at org.hibernate.boot.model.process.spi.MetadataBuildingProcess.complete(MetadataBuildingProcess.java:273)
	at org.hibernate.jpa.boot.internal.EntityManagerFactoryBuilderImpl.metadata(EntityManagerFactoryBuilderImpl.java:1214)
	at org.hibernate.jpa.boot.internal.EntityManagerFactoryBuilderImpl.build(EntityManagerFactoryBuilderImpl.java:1245)
	at org.springframework.orm.jpa.vendor.SpringHibernateJpaPersistenceProvider.createContainerEntityManagerFactory(SpringHibernateJpaPersistenceProvider.java:58)
	at org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean.createNativeEntityManagerFactory(LocalContainerEntityManagerFactoryBean.java:365)
	at org.springframework.orm.jpa.AbstractEntityManagerFactoryBean.buildNativeEntityManagerFactory(AbstractEntityManagerFactoryBean.java:391)
	at org.springframework.orm.jpa.AbstractEntityManagerFactoryBean.afterPropertiesSet(AbstractEntityManagerFactoryBean.java:378)
	at org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean.afterPropertiesSet(LocalContainerEntityManagerFactoryBean.java:341)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1862)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1799)
	... 16 common frames omitted
2020-11-25 21:24:05,018 WARN   [main] dev-updater: Use the './' prefix for files in JAR files: 'flow-component-renderer.js', please update your component.
2020-11-25 21:24:17,974 WARN   [main] AnnotationConfigServletWebServerApplicationContext: Exception encountered during context initialization - cancelling refresh attempt: org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'entityManagerFactory' defined in class path resource [org/springframework/boot/autoconfigure/orm/jpa/HibernateJpaConfiguration.class]: Invocation of init method failed; nested exception is org.hibernate.AnnotationException: No identifier specified for entity: com.sf.back.entities.Matrix
2020-11-25 21:24:17,992 WARN   [main] WebappClassLoaderBase: The web application [ROOT] appears to have started a thread named [Thread-4] but has failed to stop it. This is very likely to create a memory leak. Stack trace of thread:
 java.net.DualStackPlainSocketImpl.accept0(Native Method)
 java.net.DualStackPlainSocketImpl.socketAccept(DualStackPlainSocketImpl.java:131)
 java.net.AbstractPlainSocketImpl.accept(AbstractPlainSocketImpl.java:409)
 java.net.PlainSocketImpl.accept(PlainSocketImpl.java:199)
 java.net.ServerSocket.implAccept(ServerSocket.java:545)
 java.net.ServerSocket.accept(ServerSocket.java:513)
 com.vaadin.flow.server.DevServerWatchDog$WatchDogServer.run(DevServerWatchDog.java:58)
 java.lang.Thread.run(Thread.java:748)
2020-11-25 21:24:17,993 WARN   [main] WebappClassLoaderBase: The web application [ROOT] appears to have started a thread named [webpack] but has failed to stop it. This is very likely to create a memory leak. Stack trace of thread:
 java.io.FileInputStream.readBytes(Native Method)
 java.io.FileInputStream.read(FileInputStream.java:255)
 java.io.BufferedInputStream.read1(BufferedInputStream.java:284)
 java.io.BufferedInputStream.read(BufferedInputStream.java:345)
 sun.nio.cs.StreamDecoder.readBytes(StreamDecoder.java:284)
 sun.nio.cs.StreamDecoder.implRead(StreamDecoder.java:326)
 sun.nio.cs.StreamDecoder.read(StreamDecoder.java:178)
 java.io.InputStreamReader.read(InputStreamReader.java:184)
 java.io.BufferedReader.fill(BufferedReader.java:161)
 java.io.BufferedReader.readLine(BufferedReader.java:324)
 java.io.BufferedReader.readLine(BufferedReader.java:389)
 com.vaadin.flow.server.DevModeHandler.readLinesLoop(DevModeHandler.java:450)
 com.vaadin.flow.server.DevModeHandler.lambda$logStream$1(DevModeHandler.java:429)
 com.vaadin.flow.server.DevModeHandler$$Lambda$559/633728140.run(Unknown Source)
 java.lang.Thread.run(Thread.java:748)
2020-11-25 21:24:18,015 ERROR  [main] SpringApplication: Application run failed
org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'entityManagerFactory' defined in class path resource [org/springframework/boot/autoconfigure/orm/jpa/HibernateJpaConfiguration.class]: Invocation of init method failed; nested exception is org.hibernate.AnnotationException: No identifier specified for entity: com.sf.back.entities.Matrix
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1803)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:595)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:517)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:323)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:222)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:321)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:202)
	at org.springframework.context.support.AbstractApplicationContext.getBean(AbstractApplicationContext.java:1108)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:868)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:550)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.refresh(ServletWebServerApplicationContext.java:141)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:747)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:397)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:315)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1226)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1215)
	at com.sf.VaadinMathSolverApplication.main(VaadinMathSolverApplication.java:23)
Caused by: org.hibernate.AnnotationException: No identifier specified for entity: com.sf.back.entities.Matrix
	at org.hibernate.cfg.InheritanceState.determineDefaultAccessType(InheritanceState.java:266)
	at org.hibernate.cfg.InheritanceState.getElementsToProcess(InheritanceState.java:211)
	at org.hibernate.cfg.AnnotationBinder.bindClass(AnnotationBinder.java:781)
	at org.hibernate.boot.model.source.internal.annotations.AnnotationMetadataSourceProcessorImpl.processEntityHierarchies(AnnotationMetadataSourceProcessorImpl.java:254)
	at org.hibernate.boot.model.process.spi.MetadataBuildingProcess$1.processEntityHierarchies(MetadataBuildingProcess.java:230)
	at org.hibernate.boot.model.process.spi.MetadataBuildingProcess.complete(MetadataBuildingProcess.java:273)
	at org.hibernate.jpa.boot.internal.EntityManagerFactoryBuilderImpl.metadata(EntityManagerFactoryBuilderImpl.java:1214)
	at org.hibernate.jpa.boot.internal.EntityManagerFactoryBuilderImpl.build(EntityManagerFactoryBuilderImpl.java:1245)
	at org.springframework.orm.jpa.vendor.SpringHibernateJpaPersistenceProvider.createContainerEntityManagerFactory(SpringHibernateJpaPersistenceProvider.java:58)
	at org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean.createNativeEntityManagerFactory(LocalContainerEntityManagerFactoryBean.java:365)
	at org.springframework.orm.jpa.AbstractEntityManagerFactoryBean.buildNativeEntityManagerFactory(AbstractEntityManagerFactoryBean.java:391)
	at org.springframework.orm.jpa.AbstractEntityManagerFactoryBean.afterPropertiesSet(AbstractEntityManagerFactoryBean.java:378)
	at org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean.afterPropertiesSet(LocalContainerEntityManagerFactoryBean.java:341)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1862)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1799)
	... 16 common frames omitted
2020-11-25 21:25:58,734 DEBUG  [main] BasicTypeRegistry: Adding type registration boolean -> org.hibernate.type.BooleanType@7dee835
2020-11-25 21:25:58,826 DEBUG  [main] BasicTypeRegistry: Adding type registration boolean -> org.hibernate.type.BooleanType@7dee835
2020-11-25 21:25:58,828 DEBUG  [main] BasicTypeRegistry: Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@7dee835
2020-11-25 21:25:58,829 DEBUG  [main] BasicTypeRegistry: Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@2c1f8dbd
2020-11-25 21:25:58,831 DEBUG  [main] BasicTypeRegistry: Adding type registration true_false -> org.hibernate.type.TrueFalseType@335f5c69
2020-11-25 21:25:58,833 DEBUG  [main] BasicTypeRegistry: Adding type registration yes_no -> org.hibernate.type.YesNoType@2d258eff
2020-11-25 21:25:58,836 DEBUG  [main] BasicTypeRegistry: Adding type registration byte -> org.hibernate.type.ByteType@2e7af36e
2020-11-25 21:25:58,836 DEBUG  [main] BasicTypeRegistry: Adding type registration byte -> org.hibernate.type.ByteType@2e7af36e
2020-11-25 21:25:58,837 DEBUG  [main] BasicTypeRegistry: Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@2e7af36e
2020-11-25 21:25:58,840 DEBUG  [main] BasicTypeRegistry: Adding type registration character -> org.hibernate.type.CharacterType@7fe07361
2020-11-25 21:25:58,841 DEBUG  [main] BasicTypeRegistry: Adding type registration char -> org.hibernate.type.CharacterType@7fe07361
2020-11-25 21:25:58,842 DEBUG  [main] BasicTypeRegistry: Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@7fe07361
2020-11-25 21:25:58,845 DEBUG  [main] BasicTypeRegistry: Adding type registration short -> org.hibernate.type.ShortType@108e9837
2020-11-25 21:25:58,846 DEBUG  [main] BasicTypeRegistry: Adding type registration short -> org.hibernate.type.ShortType@108e9837
2020-11-25 21:25:58,847 DEBUG  [main] BasicTypeRegistry: Adding type registration java.lang.Short -> org.hibernate.type.ShortType@108e9837
2020-11-25 21:25:58,854 DEBUG  [main] BasicTypeRegistry: Adding type registration integer -> org.hibernate.type.IntegerType@30c19bff
2020-11-25 21:25:58,856 DEBUG  [main] BasicTypeRegistry: Adding type registration int -> org.hibernate.type.IntegerType@30c19bff
2020-11-25 21:25:58,857 DEBUG  [main] BasicTypeRegistry: Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@30c19bff
2020-11-25 21:25:58,860 DEBUG  [main] BasicTypeRegistry: Adding type registration long -> org.hibernate.type.LongType@39da5e49
2020-11-25 21:25:58,861 DEBUG  [main] BasicTypeRegistry: Adding type registration long -> org.hibernate.type.LongType@39da5e49
2020-11-25 21:25:58,862 DEBUG  [main] BasicTypeRegistry: Adding type registration java.lang.Long -> org.hibernate.type.LongType@39da5e49
2020-11-25 21:25:58,864 DEBUG  [main] BasicTypeRegistry: Adding type registration float -> org.hibernate.type.FloatType@5934ca1e
2020-11-25 21:25:58,864 DEBUG  [main] BasicTypeRegistry: Adding type registration float -> org.hibernate.type.FloatType@5934ca1e
2020-11-25 21:25:58,865 DEBUG  [main] BasicTypeRegistry: Adding type registration java.lang.Float -> org.hibernate.type.FloatType@5934ca1e
2020-11-25 21:25:58,867 DEBUG  [main] BasicTypeRegistry: Adding type registration double -> org.hibernate.type.DoubleType@4b87074a
2020-11-25 21:25:58,867 DEBUG  [main] BasicTypeRegistry: Adding type registration double -> org.hibernate.type.DoubleType@4b87074a
2020-11-25 21:25:58,868 DEBUG  [main] BasicTypeRegistry: Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@4b87074a
2020-11-25 21:25:58,870 DEBUG  [main] BasicTypeRegistry: Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@27585351
2020-11-25 21:25:58,870 DEBUG  [main] BasicTypeRegistry: Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@27585351
2020-11-25 21:25:58,873 DEBUG  [main] BasicTypeRegistry: Adding type registration big_integer -> org.hibernate.type.BigIntegerType@56826a75
2020-11-25 21:25:58,874 DEBUG  [main] BasicTypeRegistry: Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@56826a75
2020-11-25 21:25:58,875 DEBUG  [main] BasicTypeRegistry: Adding type registration string -> org.hibernate.type.StringType@740dcae3
2020-11-25 21:25:58,876 DEBUG  [main] BasicTypeRegistry: Adding type registration java.lang.String -> org.hibernate.type.StringType@740dcae3
2020-11-25 21:25:58,877 DEBUG  [main] BasicTypeRegistry: Adding type registration nstring -> org.hibernate.type.StringNVarcharType@2b6c7012
2020-11-25 21:25:58,878 DEBUG  [main] BasicTypeRegistry: Adding type registration ncharacter -> org.hibernate.type.CharacterNCharType@4e80a001
2020-11-25 21:25:58,880 DEBUG  [main] BasicTypeRegistry: Adding type registration url -> org.hibernate.type.UrlType@7455dacb
2020-11-25 21:25:58,880 DEBUG  [main] BasicTypeRegistry: Adding type registration java.net.URL -> org.hibernate.type.UrlType@7455dacb
2020-11-25 21:25:58,883 DEBUG  [main] BasicTypeRegistry: Adding type registration Duration -> org.hibernate.type.DurationType@52bd9a27
2020-11-25 21:25:58,883 DEBUG  [main] BasicTypeRegistry: Adding type registration java.time.Duration -> org.hibernate.type.DurationType@52bd9a27
2020-11-25 21:25:58,885 DEBUG  [main] BasicTypeRegistry: Adding type registration Instant -> org.hibernate.type.InstantType@5ed5b321
2020-11-25 21:25:58,885 DEBUG  [main] BasicTypeRegistry: Adding type registration java.time.Instant -> org.hibernate.type.InstantType@5ed5b321
2020-11-25 21:25:58,888 DEBUG  [main] BasicTypeRegistry: Adding type registration LocalDateTime -> org.hibernate.type.LocalDateTimeType@6d6bff89
2020-11-25 21:25:58,888 DEBUG  [main] BasicTypeRegistry: Adding type registration java.time.LocalDateTime -> org.hibernate.type.LocalDateTimeType@6d6bff89
2020-11-25 21:25:58,890 DEBUG  [main] BasicTypeRegistry: Adding type registration LocalDate -> org.hibernate.type.LocalDateType@61149fa5
2020-11-25 21:25:58,890 DEBUG  [main] BasicTypeRegistry: Adding type registration java.time.LocalDate -> org.hibernate.type.LocalDateType@61149fa5
2020-11-25 21:25:58,892 DEBUG  [main] BasicTypeRegistry: Adding type registration LocalTime -> org.hibernate.type.LocalTimeType@10980560
2020-11-25 21:25:58,896 DEBUG  [main] BasicTypeRegistry: Adding type registration java.time.LocalTime -> org.hibernate.type.LocalTimeType@10980560
2020-11-25 21:25:58,900 DEBUG  [main] BasicTypeRegistry: Adding type registration OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@3d9f0a5
2020-11-25 21:25:58,901 DEBUG  [main] BasicTypeRegistry: Adding type registration java.time.OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@3d9f0a5
2020-11-25 21:25:58,904 DEBUG  [main] BasicTypeRegistry: Adding type registration OffsetTime -> org.hibernate.type.OffsetTimeType@1cb9ef52
2020-11-25 21:25:58,905 DEBUG  [main] BasicTypeRegistry: Adding type registration java.time.OffsetTime -> org.hibernate.type.OffsetTimeType@1cb9ef52
2020-11-25 21:25:58,910 DEBUG  [main] BasicTypeRegistry: Adding type registration ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@2506e949
2020-11-25 21:25:58,910 DEBUG  [main] BasicTypeRegistry: Adding type registration java.time.ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@2506e949
2020-11-25 21:25:58,915 DEBUG  [main] BasicTypeRegistry: Adding type registration date -> org.hibernate.type.DateType@16e99306
2020-11-25 21:25:58,916 DEBUG  [main] BasicTypeRegistry: Adding type registration java.sql.Date -> org.hibernate.type.DateType@16e99306
2020-11-25 21:25:58,919 DEBUG  [main] BasicTypeRegistry: Adding type registration time -> org.hibernate.type.TimeType@11d4d979
2020-11-25 21:25:58,920 DEBUG  [main] BasicTypeRegistry: Adding type registration java.sql.Time -> org.hibernate.type.TimeType@11d4d979
2020-11-25 21:25:58,923 DEBUG  [main] BasicTypeRegistry: Adding type registration timestamp -> org.hibernate.type.TimestampType@1f71194d
2020-11-25 21:25:58,923 DEBUG  [main] BasicTypeRegistry: Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@1f71194d
2020-11-25 21:25:58,924 DEBUG  [main] BasicTypeRegistry: Adding type registration java.util.Date -> org.hibernate.type.TimestampType@1f71194d
2020-11-25 21:25:58,927 DEBUG  [main] BasicTypeRegistry: Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@7a083b96
2020-11-25 21:25:58,929 DEBUG  [main] BasicTypeRegistry: Adding type registration calendar -> org.hibernate.type.CalendarType@260e3837
2020-11-25 21:25:58,930 DEBUG  [main] BasicTypeRegistry: Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@260e3837
2020-11-25 21:25:58,930 DEBUG  [main] BasicTypeRegistry: Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@260e3837
2020-11-25 21:25:58,932 DEBUG  [main] BasicTypeRegistry: Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@498a612d
2020-11-25 21:25:58,933 DEBUG  [main] BasicTypeRegistry: Adding type registration locale -> org.hibernate.type.LocaleType@c1e14f
2020-11-25 21:25:58,934 DEBUG  [main] BasicTypeRegistry: Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@c1e14f
2020-11-25 21:25:58,935 DEBUG  [main] BasicTypeRegistry: Adding type registration currency -> org.hibernate.type.CurrencyType@364b1061
2020-11-25 21:25:58,936 DEBUG  [main] BasicTypeRegistry: Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@364b1061
2020-11-25 21:25:58,938 DEBUG  [main] BasicTypeRegistry: Adding type registration timezone -> org.hibernate.type.TimeZoneType@2c30c81d
2020-11-25 21:25:58,938 DEBUG  [main] BasicTypeRegistry: Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@2c30c81d
2020-11-25 21:25:58,939 DEBUG  [main] BasicTypeRegistry: Adding type registration class -> org.hibernate.type.ClassType@23310248
2020-11-25 21:25:58,941 DEBUG  [main] BasicTypeRegistry: Adding type registration java.lang.Class -> org.hibernate.type.ClassType@23310248
2020-11-25 21:25:58,947 DEBUG  [main] BasicTypeRegistry: Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@3c19592c
2020-11-25 21:25:58,948 DEBUG  [main] BasicTypeRegistry: Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@3c19592c
2020-11-25 21:25:58,950 DEBUG  [main] BasicTypeRegistry: Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@87d9a01
2020-11-25 21:25:58,953 DEBUG  [main] BasicTypeRegistry: Adding type registration binary -> org.hibernate.type.BinaryType@4f7be6c8
2020-11-25 21:25:58,956 DEBUG  [main] BasicTypeRegistry: Adding type registration byte[] -> org.hibernate.type.BinaryType@4f7be6c8
2020-11-25 21:25:58,957 DEBUG  [main] BasicTypeRegistry: Adding type registration [B -> org.hibernate.type.BinaryType@4f7be6c8
2020-11-25 21:25:58,959 DEBUG  [main] BasicTypeRegistry: Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@61e86192
2020-11-25 21:25:58,960 DEBUG  [main] BasicTypeRegistry: Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@61e86192
2020-11-25 21:25:58,960 DEBUG  [main] BasicTypeRegistry: Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@61e86192
2020-11-25 21:25:58,963 DEBUG  [main] BasicTypeRegistry: Adding type registration row_version -> org.hibernate.type.RowVersionType@45a1d057
2020-11-25 21:25:58,964 DEBUG  [main] BasicTypeRegistry: Adding type registration image -> org.hibernate.type.ImageType@4315c28c
2020-11-25 21:25:58,969 DEBUG  [main] BasicTypeRegistry: Adding type registration characters -> org.hibernate.type.CharArrayType@76437e9b
2020-11-25 21:25:58,973 DEBUG  [main] BasicTypeRegistry: Adding type registration char[] -> org.hibernate.type.CharArrayType@76437e9b
2020-11-25 21:25:58,974 DEBUG  [main] BasicTypeRegistry: Adding type registration [C -> org.hibernate.type.CharArrayType@76437e9b
2020-11-25 21:25:58,978 DEBUG  [main] BasicTypeRegistry: Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@32256e68
2020-11-25 21:25:58,979 DEBUG  [main] BasicTypeRegistry: Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@32256e68
2020-11-25 21:25:58,980 DEBUG  [main] BasicTypeRegistry: Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@32256e68
2020-11-25 21:25:58,982 DEBUG  [main] BasicTypeRegistry: Adding type registration text -> org.hibernate.type.TextType@63bfdbcb
2020-11-25 21:25:58,984 DEBUG  [main] BasicTypeRegistry: Adding type registration ntext -> org.hibernate.type.NTextType@3e1f1046
2020-11-25 21:25:58,986 DEBUG  [main] BasicTypeRegistry: Adding type registration blob -> org.hibernate.type.BlobType@4b97b3d2
2020-11-25 21:25:58,987 DEBUG  [main] BasicTypeRegistry: Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@4b97b3d2
2020-11-25 21:25:58,988 DEBUG  [main] BasicTypeRegistry: Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@96897c8
2020-11-25 21:25:58,991 DEBUG  [main] BasicTypeRegistry: Adding type registration clob -> org.hibernate.type.ClobType@4f820f42
2020-11-25 21:25:58,991 DEBUG  [main] BasicTypeRegistry: Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@4f820f42
2020-11-25 21:25:58,994 DEBUG  [main] BasicTypeRegistry: Adding type registration nclob -> org.hibernate.type.NClobType@ce12fbb
2020-11-25 21:25:58,994 DEBUG  [main] BasicTypeRegistry: Adding type registration java.sql.NClob -> org.hibernate.type.NClobType@ce12fbb
2020-11-25 21:25:58,995 DEBUG  [main] BasicTypeRegistry: Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@6c33da7a
2020-11-25 21:25:58,996 DEBUG  [main] BasicTypeRegistry: Adding type registration materialized_nclob -> org.hibernate.type.MaterializedNClobType@15986dd5
2020-11-25 21:25:59,002 DEBUG  [main] BasicTypeRegistry: Adding type registration serializable -> org.hibernate.type.SerializableType@59d0cdb6
2020-11-25 21:25:59,010 DEBUG  [main] BasicTypeRegistry: Adding type registration object -> org.hibernate.type.ObjectType@5a566922
2020-11-25 21:25:59,011 DEBUG  [main] BasicTypeRegistry: Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@5a566922
2020-11-25 21:25:59,012 DEBUG  [main] BasicTypeRegistry: Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@c3719e5
2020-11-25 21:25:59,013 DEBUG  [main] BasicTypeRegistry: Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@65c17e38
2020-11-25 21:25:59,014 DEBUG  [main] BasicTypeRegistry: Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@5e180aaf
2020-11-25 21:25:59,015 DEBUG  [main] BasicTypeRegistry: Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@7015ebef
2020-11-25 21:25:59,015 DEBUG  [main] BasicTypeRegistry: Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@44592c39
2020-11-25 21:25:59,015 DEBUG  [main] BasicTypeRegistry: Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@2a87ba34
2020-11-25 21:25:59,016 DEBUG  [main] BasicTypeRegistry: Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@34d480b9
2020-11-25 21:25:59,017 DEBUG  [main] BasicTypeRegistry: Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@6b415f5f
2020-11-25 21:25:59,724 DEBUG  [main] TypeConfiguration$Scope: Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@6ce26986] to MetadataBuildingContext [org.hibernate.boot.internal.MetadataBuildingContextRootImpl@2bf2d6eb]
2020-11-25 21:25:59,928 DEBUG  [main] EnumType: Using NAMED-based conversion for Enum com.sf.back.entities.Kind
2020-11-25 21:26:00,040 DEBUG  [main] EnumType: Using NAMED-based conversion for Enum com.sf.back.entities.Kind
2020-11-25 21:26:00,160 DEBUG  [main] TypeConfiguration$Scope: Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@6ce26986] to SessionFactoryImpl [org.hibernate.internal.SessionFactoryImpl@21090c88]
2020-11-25 21:26:00,403 DEBUG  [main] EnumType: Using NAMED-based conversion for Enum com.sf.back.entities.Kind
2020-11-25 21:26:00,403 DEBUG  [main] EnumType: Using NAMED-based conversion for Enum com.sf.back.entities.Kind
2020-11-25 21:26:00,705 DEBUG  [main] EnumType: Using NAMED-based conversion for Enum com.sf.back.entities.Kind
2020-11-25 21:26:00,706 DEBUG  [main] EnumType: Using NAMED-based conversion for Enum com.sf.back.entities.Kind
2020-11-25 21:26:00,901 DEBUG  [main] EnumType: Using NAMED-based conversion for Enum com.sf.back.entities.Kind
2020-11-25 21:26:00,901 DEBUG  [main] EnumType: Using NAMED-based conversion for Enum com.sf.back.entities.Kind
2020-11-25 21:26:00,949 DEBUG  [main] EnumType: Using NAMED-based conversion for Enum com.sf.back.entities.Kind
2020-11-25 21:26:00,988 TRACE  [main] TypeConfiguration$Scope: Handling #sessionFactoryCreated from [org.hibernate.internal.SessionFactoryImpl@21090c88] for TypeConfiguration
2020-11-25 21:26:02,088 WARN   [main] GlobalSettings: Dozer configuration file not found: dozer.properties.  Using defaults for all Dozer global properties.
2020-11-25 21:26:03,514 WARN   [main] JpaBaseConfiguration$JpaWebConfiguration: spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2020-11-25 21:26:04,713 WARN   [main] GroovyTemplateAutoConfiguration: Cannot find template location: classpath:/templates/ (please add some templates, check your Groovy configuration, or set spring.groovy.template.check-template-location=false)
2020-11-25 21:26:05,395 TRACE  [main] BasicBinder: binding parameter [1] as [BLOB] - [[70, 105, 110, 100, 32, 97, 108, 108, 32, 114, 111, 111, 116, 115, 32, 111, 102, 32, 103, 105, 118, 101, 110, 32, 112, 111, 108, 121, 110, 111, 109, 105, 97, 108]]
2020-11-25 21:26:05,398 TRACE  [main] BasicBinder: binding parameter [2] as [BOOLEAN] - [false]
2020-11-25 21:26:05,398 TRACE  [main] BasicBinder: binding parameter [3] as [VARCHAR] - [POLYNOMIAL]
2020-11-25 21:26:05,400 TRACE  [main] BasicBinder: binding parameter [4] as [INTEGER] - [1]
2020-11-25 21:26:05,401 TRACE  [main] BasicBinder: binding parameter [5] as [BIGINT] - [null]
2020-11-25 21:26:05,401 TRACE  [main] BasicBinder: binding parameter [6] as [INTEGER] - [6]
2020-11-25 21:26:05,415 TRACE  [main] BasicBinder: binding parameter [1] as [BLOB] - [null]
2020-11-25 21:26:05,416 TRACE  [main] BasicBinder: binding parameter [2] as [DOUBLE] - [1.0]
2020-11-25 21:26:05,416 TRACE  [main] BasicBinder: binding parameter [3] as [INTEGER] - [0]
2020-11-25 21:26:05,417 TRACE  [main] BasicBinder: binding parameter [4] as [BOOLEAN] - [true]
2020-11-25 21:26:05,417 TRACE  [main] BasicBinder: binding parameter [5] as [INTEGER] - [0]
2020-11-25 21:26:05,419 TRACE  [main] BasicBinder: binding parameter [6] as [BIGINT] - [1]
2020-11-25 21:26:05,424 TRACE  [main] BasicBinder: binding parameter [1] as [BLOB] - [null]
2020-11-25 21:26:05,424 TRACE  [main] BasicBinder: binding parameter [2] as [DOUBLE] - [2.0]
2020-11-25 21:26:05,424 TRACE  [main] BasicBinder: binding parameter [3] as [INTEGER] - [0]
2020-11-25 21:26:05,425 TRACE  [main] BasicBinder: binding parameter [4] as [BOOLEAN] - [true]
2020-11-25 21:26:05,425 TRACE  [main] BasicBinder: binding parameter [5] as [INTEGER] - [1]
2020-11-25 21:26:05,425 TRACE  [main] BasicBinder: binding parameter [6] as [BIGINT] - [1]
2020-11-25 21:26:05,427 TRACE  [main] BasicBinder: binding parameter [1] as [BLOB] - [null]
2020-11-25 21:26:05,429 TRACE  [main] BasicBinder: binding parameter [2] as [DOUBLE] - [1.0]
2020-11-25 21:26:05,430 TRACE  [main] BasicBinder: binding parameter [3] as [INTEGER] - [0]
2020-11-25 21:26:05,430 TRACE  [main] BasicBinder: binding parameter [4] as [BOOLEAN] - [true]
2020-11-25 21:26:05,430 TRACE  [main] BasicBinder: binding parameter [5] as [INTEGER] - [2]
2020-11-25 21:26:05,430 TRACE  [main] BasicBinder: binding parameter [6] as [BIGINT] - [1]
2020-11-25 21:26:05,433 TRACE  [main] BasicBinder: binding parameter [1] as [BLOB] - [null]
2020-11-25 21:26:05,434 TRACE  [main] BasicBinder: binding parameter [2] as [DOUBLE] - [1.0]
2020-11-25 21:26:05,434 TRACE  [main] BasicBinder: binding parameter [3] as [INTEGER] - [0]
2020-11-25 21:26:05,434 TRACE  [main] BasicBinder: binding parameter [4] as [BOOLEAN] - [false]
2020-11-25 21:26:05,435 TRACE  [main] BasicBinder: binding parameter [5] as [INTEGER] - [0]
2020-11-25 21:26:05,436 TRACE  [main] BasicBinder: binding parameter [6] as [BIGINT] - [1]
2020-11-25 21:26:05,439 TRACE  [main] BasicBinder: binding parameter [1] as [BLOB] - [null]
2020-11-25 21:26:05,439 TRACE  [main] BasicBinder: binding parameter [2] as [DOUBLE] - [1.0]
2020-11-25 21:26:05,440 TRACE  [main] BasicBinder: binding parameter [3] as [INTEGER] - [0]
2020-11-25 21:26:05,440 TRACE  [main] BasicBinder: binding parameter [4] as [BOOLEAN] - [false]
2020-11-25 21:26:05,440 TRACE  [main] BasicBinder: binding parameter [5] as [INTEGER] - [1]
2020-11-25 21:26:05,441 TRACE  [main] BasicBinder: binding parameter [6] as [BIGINT] - [1]
2020-11-25 21:26:10,557 DEBUG  [main] BasicTypeRegistry: Adding type registration boolean -> org.hibernate.type.BooleanType@7dee835
2020-11-25 21:26:10,558 DEBUG  [main] BasicTypeRegistry: Adding type registration boolean -> org.hibernate.type.BooleanType@7dee835
2020-11-25 21:26:10,558 DEBUG  [main] BasicTypeRegistry: Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@7dee835
2020-11-25 21:26:10,559 DEBUG  [main] BasicTypeRegistry: Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@2c1f8dbd
2020-11-25 21:26:10,559 DEBUG  [main] BasicTypeRegistry: Adding type registration true_false -> org.hibernate.type.TrueFalseType@335f5c69
2020-11-25 21:26:10,561 DEBUG  [main] BasicTypeRegistry: Adding type registration yes_no -> org.hibernate.type.YesNoType@2d258eff
2020-11-25 21:26:10,562 DEBUG  [main] BasicTypeRegistry: Adding type registration byte -> org.hibernate.type.ByteType@2e7af36e
2020-11-25 21:26:10,562 DEBUG  [main] BasicTypeRegistry: Adding type registration byte -> org.hibernate.type.ByteType@2e7af36e
2020-11-25 21:26:10,562 DEBUG  [main] BasicTypeRegistry: Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@2e7af36e
2020-11-25 21:26:10,563 DEBUG  [main] BasicTypeRegistry: Adding type registration character -> org.hibernate.type.CharacterType@7fe07361
2020-11-25 21:26:10,563 DEBUG  [main] BasicTypeRegistry: Adding type registration char -> org.hibernate.type.CharacterType@7fe07361
2020-11-25 21:26:10,563 DEBUG  [main] BasicTypeRegistry: Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@7fe07361
2020-11-25 21:26:10,563 DEBUG  [main] BasicTypeRegistry: Adding type registration short -> org.hibernate.type.ShortType@108e9837
2020-11-25 21:26:10,563 DEBUG  [main] BasicTypeRegistry: Adding type registration short -> org.hibernate.type.ShortType@108e9837
2020-11-25 21:26:10,564 DEBUG  [main] BasicTypeRegistry: Adding type registration java.lang.Short -> org.hibernate.type.ShortType@108e9837
2020-11-25 21:26:10,565 DEBUG  [main] BasicTypeRegistry: Adding type registration integer -> org.hibernate.type.IntegerType@30c19bff
2020-11-25 21:26:10,565 DEBUG  [main] BasicTypeRegistry: Adding type registration int -> org.hibernate.type.IntegerType@30c19bff
2020-11-25 21:26:10,565 DEBUG  [main] BasicTypeRegistry: Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@30c19bff
2020-11-25 21:26:10,566 DEBUG  [main] BasicTypeRegistry: Adding type registration long -> org.hibernate.type.LongType@39da5e49
2020-11-25 21:26:10,566 DEBUG  [main] BasicTypeRegistry: Adding type registration long -> org.hibernate.type.LongType@39da5e49
2020-11-25 21:26:10,567 DEBUG  [main] BasicTypeRegistry: Adding type registration java.lang.Long -> org.hibernate.type.LongType@39da5e49
2020-11-25 21:26:10,567 DEBUG  [main] BasicTypeRegistry: Adding type registration float -> org.hibernate.type.FloatType@5934ca1e
2020-11-25 21:26:10,567 DEBUG  [main] BasicTypeRegistry: Adding type registration float -> org.hibernate.type.FloatType@5934ca1e
2020-11-25 21:26:10,568 DEBUG  [main] BasicTypeRegistry: Adding type registration java.lang.Float -> org.hibernate.type.FloatType@5934ca1e
2020-11-25 21:26:10,568 DEBUG  [main] BasicTypeRegistry: Adding type registration double -> org.hibernate.type.DoubleType@4b87074a
2020-11-25 21:26:10,569 DEBUG  [main] BasicTypeRegistry: Adding type registration double -> org.hibernate.type.DoubleType@4b87074a
2020-11-25 21:26:10,569 DEBUG  [main] BasicTypeRegistry: Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@4b87074a
2020-11-25 21:26:10,570 DEBUG  [main] BasicTypeRegistry: Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@27585351
2020-11-25 21:26:10,570 DEBUG  [main] BasicTypeRegistry: Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@27585351
2020-11-25 21:26:10,570 DEBUG  [main] BasicTypeRegistry: Adding type registration big_integer -> org.hibernate.type.BigIntegerType@56826a75
2020-11-25 21:26:10,571 DEBUG  [main] BasicTypeRegistry: Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@56826a75
2020-11-25 21:26:10,571 DEBUG  [main] BasicTypeRegistry: Adding type registration string -> org.hibernate.type.StringType@740dcae3
2020-11-25 21:26:10,571 DEBUG  [main] BasicTypeRegistry: Adding type registration java.lang.String -> org.hibernate.type.StringType@740dcae3
2020-11-25 21:26:10,571 DEBUG  [main] BasicTypeRegistry: Adding type registration nstring -> org.hibernate.type.StringNVarcharType@2b6c7012
2020-11-25 21:26:10,572 DEBUG  [main] BasicTypeRegistry: Adding type registration ncharacter -> org.hibernate.type.CharacterNCharType@4e80a001
2020-11-25 21:26:10,573 DEBUG  [main] BasicTypeRegistry: Adding type registration url -> org.hibernate.type.UrlType@7455dacb
2020-11-25 21:26:10,573 DEBUG  [main] BasicTypeRegistry: Adding type registration java.net.URL -> org.hibernate.type.UrlType@7455dacb
2020-11-25 21:26:10,574 DEBUG  [main] BasicTypeRegistry: Adding type registration Duration -> org.hibernate.type.DurationType@52bd9a27
2020-11-25 21:26:10,574 DEBUG  [main] BasicTypeRegistry: Adding type registration java.time.Duration -> org.hibernate.type.DurationType@52bd9a27
2020-11-25 21:26:10,575 DEBUG  [main] BasicTypeRegistry: Adding type registration Instant -> org.hibernate.type.InstantType@5ed5b321
2020-11-25 21:26:10,576 DEBUG  [main] BasicTypeRegistry: Adding type registration java.time.Instant -> org.hibernate.type.InstantType@5ed5b321
2020-11-25 21:26:10,576 DEBUG  [main] BasicTypeRegistry: Adding type registration LocalDateTime -> org.hibernate.type.LocalDateTimeType@6d6bff89
2020-11-25 21:26:10,576 DEBUG  [main] BasicTypeRegistry: Adding type registration java.time.LocalDateTime -> org.hibernate.type.LocalDateTimeType@6d6bff89
2020-11-25 21:26:10,576 DEBUG  [main] BasicTypeRegistry: Adding type registration LocalDate -> org.hibernate.type.LocalDateType@61149fa5
2020-11-25 21:26:10,576 DEBUG  [main] BasicTypeRegistry: Adding type registration java.time.LocalDate -> org.hibernate.type.LocalDateType@61149fa5
2020-11-25 21:26:10,577 DEBUG  [main] BasicTypeRegistry: Adding type registration LocalTime -> org.hibernate.type.LocalTimeType@10980560
2020-11-25 21:26:10,577 DEBUG  [main] BasicTypeRegistry: Adding type registration java.time.LocalTime -> org.hibernate.type.LocalTimeType@10980560
2020-11-25 21:26:10,577 DEBUG  [main] BasicTypeRegistry: Adding type registration OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@3d9f0a5
2020-11-25 21:26:10,577 DEBUG  [main] BasicTypeRegistry: Adding type registration java.time.OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@3d9f0a5
2020-11-25 21:26:10,578 DEBUG  [main] BasicTypeRegistry: Adding type registration OffsetTime -> org.hibernate.type.OffsetTimeType@1cb9ef52
2020-11-25 21:26:10,578 DEBUG  [main] BasicTypeRegistry: Adding type registration java.time.OffsetTime -> org.hibernate.type.OffsetTimeType@1cb9ef52
2020-11-25 21:26:10,579 DEBUG  [main] BasicTypeRegistry: Adding type registration ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@2506e949
2020-11-25 21:26:10,579 DEBUG  [main] BasicTypeRegistry: Adding type registration java.time.ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@2506e949
2020-11-25 21:26:10,580 DEBUG  [main] BasicTypeRegistry: Adding type registration date -> org.hibernate.type.DateType@16e99306
2020-11-25 21:26:10,580 DEBUG  [main] BasicTypeRegistry: Adding type registration java.sql.Date -> org.hibernate.type.DateType@16e99306
2020-11-25 21:26:10,581 DEBUG  [main] BasicTypeRegistry: Adding type registration time -> org.hibernate.type.TimeType@11d4d979
2020-11-25 21:26:10,581 DEBUG  [main] BasicTypeRegistry: Adding type registration java.sql.Time -> org.hibernate.type.TimeType@11d4d979
2020-11-25 21:26:10,581 DEBUG  [main] BasicTypeRegistry: Adding type registration timestamp -> org.hibernate.type.TimestampType@1f71194d
2020-11-25 21:26:10,582 DEBUG  [main] BasicTypeRegistry: Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@1f71194d
2020-11-25 21:26:10,582 DEBUG  [main] BasicTypeRegistry: Adding type registration java.util.Date -> org.hibernate.type.TimestampType@1f71194d
2020-11-25 21:26:10,582 DEBUG  [main] BasicTypeRegistry: Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@7a083b96
2020-11-25 21:26:10,582 DEBUG  [main] BasicTypeRegistry: Adding type registration calendar -> org.hibernate.type.CalendarType@260e3837
2020-11-25 21:26:10,583 DEBUG  [main] BasicTypeRegistry: Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@260e3837
2020-11-25 21:26:10,583 DEBUG  [main] BasicTypeRegistry: Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@260e3837
2020-11-25 21:26:10,583 DEBUG  [main] BasicTypeRegistry: Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@498a612d
2020-11-25 21:26:10,587 DEBUG  [main] BasicTypeRegistry: Adding type registration locale -> org.hibernate.type.LocaleType@c1e14f
2020-11-25 21:26:10,587 DEBUG  [main] BasicTypeRegistry: Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@c1e14f
2020-11-25 21:26:10,587 DEBUG  [main] BasicTypeRegistry: Adding type registration currency -> org.hibernate.type.CurrencyType@364b1061
2020-11-25 21:26:10,588 DEBUG  [main] BasicTypeRegistry: Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@364b1061
2020-11-25 21:26:10,589 DEBUG  [main] BasicTypeRegistry: Adding type registration timezone -> org.hibernate.type.TimeZoneType@2c30c81d
2020-11-25 21:26:10,594 DEBUG  [main] BasicTypeRegistry: Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@2c30c81d
2020-11-25 21:26:10,594 DEBUG  [main] BasicTypeRegistry: Adding type registration class -> org.hibernate.type.ClassType@23310248
2020-11-25 21:26:10,595 DEBUG  [main] BasicTypeRegistry: Adding type registration java.lang.Class -> org.hibernate.type.ClassType@23310248
2020-11-25 21:26:10,596 DEBUG  [main] BasicTypeRegistry: Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@3c19592c
2020-11-25 21:26:10,596 DEBUG  [main] BasicTypeRegistry: Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@3c19592c
2020-11-25 21:26:10,597 DEBUG  [main] BasicTypeRegistry: Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@87d9a01
2020-11-25 21:26:10,597 DEBUG  [main] BasicTypeRegistry: Adding type registration binary -> org.hibernate.type.BinaryType@4f7be6c8
2020-11-25 21:26:10,598 DEBUG  [main] BasicTypeRegistry: Adding type registration byte[] -> org.hibernate.type.BinaryType@4f7be6c8
2020-11-25 21:26:10,598 DEBUG  [main] BasicTypeRegistry: Adding type registration [B -> org.hibernate.type.BinaryType@4f7be6c8
2020-11-25 21:26:10,599 DEBUG  [main] BasicTypeRegistry: Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@61e86192
2020-11-25 21:26:10,599 DEBUG  [main] BasicTypeRegistry: Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@61e86192
2020-11-25 21:26:10,608 DEBUG  [main] BasicTypeRegistry: Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@61e86192
2020-11-25 21:26:10,608 DEBUG  [main] BasicTypeRegistry: Adding type registration row_version -> org.hibernate.type.RowVersionType@45a1d057
2020-11-25 21:26:10,609 DEBUG  [main] BasicTypeRegistry: Adding type registration image -> org.hibernate.type.ImageType@4315c28c
2020-11-25 21:26:10,610 DEBUG  [main] BasicTypeRegistry: Adding type registration characters -> org.hibernate.type.CharArrayType@76437e9b
2020-11-25 21:26:10,611 DEBUG  [main] BasicTypeRegistry: Adding type registration char[] -> org.hibernate.type.CharArrayType@76437e9b
2020-11-25 21:26:10,612 DEBUG  [main] BasicTypeRegistry: Adding type registration [C -> org.hibernate.type.CharArrayType@76437e9b
2020-11-25 21:26:10,612 DEBUG  [main] BasicTypeRegistry: Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@32256e68
2020-11-25 21:26:10,613 DEBUG  [main] BasicTypeRegistry: Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@32256e68
2020-11-25 21:26:10,614 DEBUG  [main] BasicTypeRegistry: Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@32256e68
2020-11-25 21:26:10,614 DEBUG  [main] BasicTypeRegistry: Adding type registration text -> org.hibernate.type.TextType@63bfdbcb
2020-11-25 21:26:10,614 DEBUG  [main] BasicTypeRegistry: Adding type registration ntext -> org.hibernate.type.NTextType@3e1f1046
2020-11-25 21:26:10,615 DEBUG  [main] BasicTypeRegistry: Adding type registration blob -> org.hibernate.type.BlobType@4b97b3d2
2020-11-25 21:26:10,615 DEBUG  [main] BasicTypeRegistry: Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@4b97b3d2
2020-11-25 21:26:10,615 DEBUG  [main] BasicTypeRegistry: Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@96897c8
2020-11-25 21:26:10,617 DEBUG  [main] BasicTypeRegistry: Adding type registration clob -> org.hibernate.type.ClobType@4f820f42
2020-11-25 21:26:10,617 DEBUG  [main] BasicTypeRegistry: Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@4f820f42
2020-11-25 21:26:10,617 DEBUG  [main] BasicTypeRegistry: Adding type registration nclob -> org.hibernate.type.NClobType@ce12fbb
2020-11-25 21:26:10,617 DEBUG  [main] BasicTypeRegistry: Adding type registration java.sql.NClob -> org.hibernate.type.NClobType@ce12fbb
2020-11-25 21:26:10,617 DEBUG  [main] BasicTypeRegistry: Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@6c33da7a
2020-11-25 21:26:10,618 DEBUG  [main] BasicTypeRegistry: Adding type registration materialized_nclob -> org.hibernate.type.MaterializedNClobType@15986dd5
2020-11-25 21:26:10,619 DEBUG  [main] BasicTypeRegistry: Adding type registration serializable -> org.hibernate.type.SerializableType@59d0cdb6
2020-11-25 21:26:10,619 DEBUG  [main] BasicTypeRegistry: Adding type registration object -> org.hibernate.type.ObjectType@5a566922
2020-11-25 21:26:10,619 DEBUG  [main] BasicTypeRegistry: Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@5a566922
2020-11-25 21:26:10,619 DEBUG  [main] BasicTypeRegistry: Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@2911db81
2020-11-25 21:26:10,619 DEBUG  [main] BasicTypeRegistry: Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@7fce1069
2020-11-25 21:26:10,620 DEBUG  [main] BasicTypeRegistry: Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@51b41740
2020-11-25 21:26:10,620 DEBUG  [main] BasicTypeRegistry: Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@70cac22a
2020-11-25 21:26:10,620 DEBUG  [main] BasicTypeRegistry: Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@57a0c261
2020-11-25 21:26:10,620 DEBUG  [main] BasicTypeRegistry: Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@5862dda4
2020-11-25 21:26:10,620 DEBUG  [main] BasicTypeRegistry: Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@299ddfff
2020-11-25 21:26:10,620 DEBUG  [main] BasicTypeRegistry: Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@fe09374
2020-11-25 21:26:10,657 DEBUG  [main] TypeConfiguration$Scope: Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@54a033b8] to MetadataBuildingContext [org.hibernate.boot.internal.MetadataBuildingContextRootImpl@62dfe152]
2020-11-25 21:26:10,677 DEBUG  [main] EnumType: Using NAMED-based conversion for Enum com.sf.back.entities.Kind
2020-11-25 21:26:10,681 DEBUG  [main] EnumType: Using NAMED-based conversion for Enum com.sf.back.entities.Kind
2020-11-25 21:26:10,733 DEBUG  [main] TypeConfiguration$Scope: Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@54a033b8] to SessionFactoryImpl [org.hibernate.internal.SessionFactoryImpl@1ff23bd1]
2020-11-25 21:26:10,734 DEBUG  [main] EnumType: Using NAMED-based conversion for Enum com.sf.back.entities.Kind
2020-11-25 21:26:10,734 DEBUG  [main] EnumType: Using NAMED-based conversion for Enum com.sf.back.entities.Kind
2020-11-25 21:26:10,736 DEBUG  [main] EnumType: Using NAMED-based conversion for Enum com.sf.back.entities.Kind
2020-11-25 21:26:10,736 DEBUG  [main] EnumType: Using NAMED-based conversion for Enum com.sf.back.entities.Kind
2020-11-25 21:26:10,750 DEBUG  [main] EnumType: Using NAMED-based conversion for Enum com.sf.back.entities.Kind
2020-11-25 21:26:10,750 DEBUG  [main] EnumType: Using NAMED-based conversion for Enum com.sf.back.entities.Kind
2020-11-25 21:26:10,766 DEBUG  [main] EnumType: Using NAMED-based conversion for Enum com.sf.back.entities.Kind
2020-11-25 21:26:10,801 TRACE  [main] TypeConfiguration$Scope: Handling #sessionFactoryCreated from [org.hibernate.internal.SessionFactoryImpl@1ff23bd1] for TypeConfiguration
2020-11-25 21:26:11,309 WARN   [main] JpaBaseConfiguration$JpaWebConfiguration: spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2020-11-25 21:26:11,515 WARN   [main] GroovyTemplateAutoConfiguration: Cannot find template location: classpath:/templates/ (please add some templates, check your Groovy configuration, or set spring.groovy.template.check-template-location=false)
2020-11-25 21:26:11,654 TRACE  [main] BasicBinder: binding parameter [1] as [BLOB] - [[70, 105, 110, 100, 32, 97, 108, 108, 32, 114, 111, 111, 116, 115, 32, 111, 102, 32, 103, 105, 118, 101, 110, 32, 112, 111, 108, 121, 110, 111, 109, 105, 97, 108]]
2020-11-25 21:26:11,654 TRACE  [main] BasicBinder: binding parameter [2] as [BOOLEAN] - [false]
2020-11-25 21:26:11,655 TRACE  [main] BasicBinder: binding parameter [3] as [VARCHAR] - [POLYNOMIAL]
2020-11-25 21:26:11,655 TRACE  [main] BasicBinder: binding parameter [4] as [INTEGER] - [1]
2020-11-25 21:26:11,655 TRACE  [main] BasicBinder: binding parameter [5] as [BIGINT] - [null]
2020-11-25 21:26:11,655 TRACE  [main] BasicBinder: binding parameter [6] as [INTEGER] - [6]
2020-11-25 21:26:11,660 TRACE  [main] BasicBinder: binding parameter [1] as [BLOB] - [null]
2020-11-25 21:26:11,660 TRACE  [main] BasicBinder: binding parameter [2] as [DOUBLE] - [1.0]
2020-11-25 21:26:11,661 TRACE  [main] BasicBinder: binding parameter [3] as [INTEGER] - [0]
2020-11-25 21:26:11,661 TRACE  [main] BasicBinder: binding parameter [4] as [BOOLEAN] - [true]
2020-11-25 21:26:11,661 TRACE  [main] BasicBinder: binding parameter [5] as [INTEGER] - [0]
2020-11-25 21:26:11,661 TRACE  [main] BasicBinder: binding parameter [6] as [BIGINT] - [1]
2020-11-25 21:26:11,663 TRACE  [main] BasicBinder: binding parameter [1] as [BLOB] - [null]
2020-11-25 21:26:11,663 TRACE  [main] BasicBinder: binding parameter [2] as [DOUBLE] - [2.0]
2020-11-25 21:26:11,664 TRACE  [main] BasicBinder: binding parameter [3] as [INTEGER] - [0]
2020-11-25 21:26:11,664 TRACE  [main] BasicBinder: binding parameter [4] as [BOOLEAN] - [true]
2020-11-25 21:26:11,664 TRACE  [main] BasicBinder: binding parameter [5] as [INTEGER] - [1]
2020-11-25 21:26:11,664 TRACE  [main] BasicBinder: binding parameter [6] as [BIGINT] - [1]
2020-11-25 21:26:11,665 TRACE  [main] BasicBinder: binding parameter [1] as [BLOB] - [null]
2020-11-25 21:26:11,666 TRACE  [main] BasicBinder: binding parameter [2] as [DOUBLE] - [1.0]
2020-11-25 21:26:11,667 TRACE  [main] BasicBinder: binding parameter [3] as [INTEGER] - [0]
2020-11-25 21:26:11,667 TRACE  [main] BasicBinder: binding parameter [4] as [BOOLEAN] - [true]
2020-11-25 21:26:11,667 TRACE  [main] BasicBinder: binding parameter [5] as [INTEGER] - [2]
2020-11-25 21:26:11,667 TRACE  [main] BasicBinder: binding parameter [6] as [BIGINT] - [1]
2020-11-25 21:26:11,669 TRACE  [main] BasicBinder: binding parameter [1] as [BLOB] - [null]
2020-11-25 21:26:11,670 TRACE  [main] BasicBinder: binding parameter [2] as [DOUBLE] - [1.0]
2020-11-25 21:26:11,670 TRACE  [main] BasicBinder: binding parameter [3] as [INTEGER] - [0]
2020-11-25 21:26:11,670 TRACE  [main] BasicBinder: binding parameter [4] as [BOOLEAN] - [false]
2020-11-25 21:26:11,670 TRACE  [main] BasicBinder: binding parameter [5] as [INTEGER] - [0]
2020-11-25 21:26:11,671 TRACE  [main] BasicBinder: binding parameter [6] as [BIGINT] - [1]
2020-11-25 21:26:11,673 TRACE  [main] BasicBinder: binding parameter [1] as [BLOB] - [null]
2020-11-25 21:26:11,675 TRACE  [main] BasicBinder: binding parameter [2] as [DOUBLE] - [1.0]
2020-11-25 21:26:11,675 TRACE  [main] BasicBinder: binding parameter [3] as [INTEGER] - [0]
2020-11-25 21:26:11,675 TRACE  [main] BasicBinder: binding parameter [4] as [BOOLEAN] - [false]
2020-11-25 21:26:11,676 TRACE  [main] BasicBinder: binding parameter [5] as [INTEGER] - [1]
2020-11-25 21:26:11,676 TRACE  [main] BasicBinder: binding parameter [6] as [BIGINT] - [1]
2020-11-25 21:26:11,860 TRACE  [main] BasicBinder: binding parameter [1] as [BIGINT] - [2]
2020-11-25 21:26:11,867 TRACE  [main] BasicExtractor: extracted value ([id1_1_2_] : [BIGINT]) - [null]
2020-11-25 21:26:11,868 TRACE  [main] BasicExtractor: extracted value ([id1_0_4_] : [BIGINT]) - [null]
2020-11-25 21:26:11,878 TRACE  [main] BasicExtractor: extracted value ([descript2_1_0_] : [BLOB]) - [[112, 114, 111, 98, 108, 101, 109, 100, 101, 115, 99, 114, 105, 112, 116, 105, 111, 110]]
2020-11-25 21:26:11,880 TRACE  [main] BasicExtractor: extracted value ([is_solve3_1_0_] : [BOOLEAN]) - [null]
2020-11-25 21:26:11,897 TRACE  [main] BasicExtractor: extracted value ([kind4_1_0_] : [VARCHAR]) - [POLYNOMIAL]
2020-11-25 21:26:11,899 TRACE  [main] BasicExtractor: extracted value ([matrix_d5_1_0_] : [INTEGER]) - [1]
2020-11-25 21:26:11,900 TRACE  [main] BasicExtractor: extracted value ([parent_p7_1_0_] : [BIGINT]) - [null]
2020-11-25 21:26:11,900 TRACE  [main] BasicExtractor: extracted value ([problem_6_1_0_] : [INTEGER]) - [22]
2020-11-25 21:26:11,903 TRACE  [main] BasicExtractor: extracted value ([problem_7_0_3_] : [BIGINT]) - [null]
2020-11-25 21:26:11,903 TRACE  [main] BasicExtractor: extracted value ([parent_p7_1_1_] : [BIGINT]) - [null]
2020-11-25 21:26:11,915 TRACE  [main] CollectionType: Created collection wrapper: [com.sf.back.entities.Problem.matrixes#2]
2020-11-25 21:26:11,926 TRACE  [main] BasicBinder: binding parameter [1] as [BIGINT] - [2]
2020-11-25 21:26:11,928 TRACE  [main] BasicExtractor: extracted value ([id1_0_1_] : [BIGINT]) - [6]
2020-11-25 21:26:11,929 TRACE  [main] BasicExtractor: extracted value ([binary_v2_0_1_] : [BLOB]) - [null]
2020-11-25 21:26:11,930 TRACE  [main] BasicExtractor: extracted value ([float_va3_0_1_] : [DOUBLE]) - [1.0]
2020-11-25 21:26:11,930 TRACE  [main] BasicExtractor: extracted value ([i4_0_1_] : [INTEGER]) - [0]
2020-11-25 21:26:11,931 TRACE  [main] BasicExtractor: extracted value ([is_condi5_0_1_] : [BOOLEAN]) - [true]
2020-11-25 21:26:11,931 TRACE  [main] BasicExtractor: extracted value ([j6_0_1_] : [INTEGER]) - [0]
2020-11-25 21:26:11,931 TRACE  [main] BasicExtractor: extracted value ([problem_7_0_1_] : [BIGINT]) - [2]
2020-11-25 21:26:11,931 TRACE  [main] BasicExtractor: extracted value ([problem_7_0_0_] : [BIGINT]) - [2]
2020-11-25 21:26:11,932 TRACE  [main] BasicExtractor: extracted value ([id1_0_0_] : [BIGINT]) - [6]
2020-11-25 21:26:11,933 TRACE  [main] BasicExtractor: extracted value ([id1_0_1_] : [BIGINT]) - [7]
2020-11-25 21:26:11,933 TRACE  [main] BasicExtractor: extracted value ([binary_v2_0_1_] : [BLOB]) - [null]
2020-11-25 21:26:11,934 TRACE  [main] BasicExtractor: extracted value ([float_va3_0_1_] : [DOUBLE]) - [2.718281828459045]
2020-11-25 21:26:11,934 TRACE  [main] BasicExtractor: extracted value ([i4_0_1_] : [INTEGER]) - [0]
2020-11-25 21:26:11,934 TRACE  [main] BasicExtractor: extracted value ([is_condi5_0_1_] : [BOOLEAN]) - [true]
2020-11-25 21:26:11,934 TRACE  [main] BasicExtractor: extracted value ([j6_0_1_] : [INTEGER]) - [1]
2020-11-25 21:26:11,934 TRACE  [main] BasicExtractor: extracted value ([problem_7_0_1_] : [BIGINT]) - [2]
2020-11-25 21:26:11,934 TRACE  [main] BasicExtractor: extracted value ([problem_7_0_0_] : [BIGINT]) - [2]
2020-11-25 21:26:11,935 TRACE  [main] BasicExtractor: extracted value ([id1_0_0_] : [BIGINT]) - [7]
2020-11-25 21:26:11,935 TRACE  [main] BasicExtractor: extracted value ([id1_0_1_] : [BIGINT]) - [8]
2020-11-25 21:26:11,935 TRACE  [main] BasicExtractor: extracted value ([binary_v2_0_1_] : [BLOB]) - [null]
2020-11-25 21:26:11,935 TRACE  [main] BasicExtractor: extracted value ([float_va3_0_1_] : [DOUBLE]) - [7.38905609893065]
2020-11-25 21:26:11,935 TRACE  [main] BasicExtractor: extracted value ([i4_0_1_] : [INTEGER]) - [0]
2020-11-25 21:26:11,936 TRACE  [main] BasicExtractor: extracted value ([is_condi5_0_1_] : [BOOLEAN]) - [true]
2020-11-25 21:26:11,936 TRACE  [main] BasicExtractor: extracted value ([j6_0_1_] : [INTEGER]) - [2]
2020-11-25 21:26:11,937 TRACE  [main] BasicExtractor: extracted value ([problem_7_0_1_] : [BIGINT]) - [2]
2020-11-25 21:26:11,937 TRACE  [main] BasicExtractor: extracted value ([problem_7_0_0_] : [BIGINT]) - [2]
2020-11-25 21:26:11,937 TRACE  [main] BasicExtractor: extracted value ([id1_0_0_] : [BIGINT]) - [8]
2020-11-25 21:26:11,938 TRACE  [main] BasicExtractor: extracted value ([id1_0_1_] : [BIGINT]) - [9]
2020-11-25 21:26:11,938 TRACE  [main] BasicExtractor: extracted value ([binary_v2_0_1_] : [BLOB]) - [null]
2020-11-25 21:26:11,938 TRACE  [main] BasicExtractor: extracted value ([float_va3_0_1_] : [DOUBLE]) - [20.085536923187668]
2020-11-25 21:26:11,939 TRACE  [main] BasicExtractor: extracted value ([i4_0_1_] : [INTEGER]) - [0]
2020-11-25 21:26:11,939 TRACE  [main] BasicExtractor: extracted value ([is_condi5_0_1_] : [BOOLEAN]) - [true]
2020-11-25 21:26:11,939 TRACE  [main] BasicExtractor: extracted value ([j6_0_1_] : [INTEGER]) - [3]
2020-11-25 21:26:11,939 TRACE  [main] BasicExtractor: extracted value ([problem_7_0_1_] : [BIGINT]) - [2]
2020-11-25 21:26:11,940 TRACE  [main] BasicExtractor: extracted value ([problem_7_0_0_] : [BIGINT]) - [2]
2020-11-25 21:26:11,941 TRACE  [main] BasicExtractor: extracted value ([id1_0_0_] : [BIGINT]) - [9]
2020-11-25 21:26:11,941 TRACE  [main] BasicExtractor: extracted value ([id1_0_1_] : [BIGINT]) - [10]
2020-11-25 21:26:11,942 TRACE  [main] BasicExtractor: extracted value ([binary_v2_0_1_] : [BLOB]) - [null]
2020-11-25 21:26:11,942 TRACE  [main] BasicExtractor: extracted value ([float_va3_0_1_] : [DOUBLE]) - [54.598150033144236]
2020-11-25 21:26:11,943 TRACE  [main] BasicExtractor: extracted value ([i4_0_1_] : [INTEGER]) - [0]
2020-11-25 21:26:11,943 TRACE  [main] BasicExtractor: extracted value ([is_condi5_0_1_] : [BOOLEAN]) - [true]
2020-11-25 21:26:11,943 TRACE  [main] BasicExtractor: extracted value ([j6_0_1_] : [INTEGER]) - [4]
2020-11-25 21:26:11,943 TRACE  [main] BasicExtractor: extracted value ([problem_7_0_1_] : [BIGINT]) - [2]
2020-11-25 21:26:11,944 TRACE  [main] BasicExtractor: extracted value ([problem_7_0_0_] : [BIGINT]) - [2]
2020-11-25 21:26:11,947 TRACE  [main] BasicExtractor: extracted value ([id1_0_0_] : [BIGINT]) - [10]
2020-11-25 21:26:11,949 TRACE  [main] BasicExtractor: extracted value ([id1_0_1_] : [BIGINT]) - [11]
2020-11-25 21:26:11,959 TRACE  [main] BasicExtractor: extracted value ([binary_v2_0_1_] : [BLOB]) - [null]
2020-11-25 21:26:11,959 TRACE  [main] BasicExtractor: extracted value ([float_va3_0_1_] : [DOUBLE]) - [148.4131591025766]
2020-11-25 21:26:11,960 TRACE  [main] BasicExtractor: extracted value ([i4_0_1_] : [INTEGER]) - [0]
2020-11-25 21:26:11,960 TRACE  [main] BasicExtractor: extracted value ([is_condi5_0_1_] : [BOOLEAN]) - [true]
2020-11-25 21:26:11,960 TRACE  [main] BasicExtractor: extracted value ([j6_0_1_] : [INTEGER]) - [5]
2020-11-25 21:26:11,960 TRACE  [main] BasicExtractor: extracted value ([problem_7_0_1_] : [BIGINT]) - [2]
2020-11-25 21:26:11,961 TRACE  [main] BasicExtractor: extracted value ([problem_7_0_0_] : [BIGINT]) - [2]
2020-11-25 21:26:11,961 TRACE  [main] BasicExtractor: extracted value ([id1_0_0_] : [BIGINT]) - [11]
2020-11-25 21:26:12,133 TRACE  [main] BasicBinder: binding parameter [1] as [BIGINT] - [2]
2020-11-25 21:26:12,133 TRACE  [main] BasicExtractor: extracted value ([id1_1_2_] : [BIGINT]) - [null]
2020-11-25 21:26:12,134 TRACE  [main] BasicExtractor: extracted value ([id1_0_4_] : [BIGINT]) - [null]
2020-11-25 21:26:12,134 TRACE  [main] BasicExtractor: extracted value ([descript2_1_0_] : [BLOB]) - [[112, 114, 111, 98, 108, 101, 109, 100, 101, 115, 99, 114, 105, 112, 116, 105, 111, 110]]
2020-11-25 21:26:12,134 TRACE  [main] BasicExtractor: extracted value ([is_solve3_1_0_] : [BOOLEAN]) - [null]
2020-11-25 21:26:12,134 TRACE  [main] BasicExtractor: extracted value ([kind4_1_0_] : [VARCHAR]) - [POLYNOMIAL]
2020-11-25 21:26:12,134 TRACE  [main] BasicExtractor: extracted value ([matrix_d5_1_0_] : [INTEGER]) - [1]
2020-11-25 21:26:12,134 TRACE  [main] BasicExtractor: extracted value ([parent_p7_1_0_] : [BIGINT]) - [null]
2020-11-25 21:26:12,134 TRACE  [main] BasicExtractor: extracted value ([problem_6_1_0_] : [INTEGER]) - [22]
2020-11-25 21:26:12,135 TRACE  [main] BasicExtractor: extracted value ([problem_7_0_3_] : [BIGINT]) - [null]
2020-11-25 21:26:12,135 TRACE  [main] BasicExtractor: extracted value ([parent_p7_1_1_] : [BIGINT]) - [null]
2020-11-25 21:26:12,135 TRACE  [main] CollectionType: Created collection wrapper: [com.sf.back.entities.Problem.matrixes#2]
2020-11-25 21:26:12,136 TRACE  [main] BasicBinder: binding parameter [1] as [BIGINT] - [2]
2020-11-25 21:26:12,136 TRACE  [main] BasicExtractor: extracted value ([id1_0_1_] : [BIGINT]) - [6]
2020-11-25 21:26:12,136 TRACE  [main] BasicExtractor: extracted value ([binary_v2_0_1_] : [BLOB]) - [null]
2020-11-25 21:26:12,137 TRACE  [main] BasicExtractor: extracted value ([float_va3_0_1_] : [DOUBLE]) - [1.0]
2020-11-25 21:26:12,137 TRACE  [main] BasicExtractor: extracted value ([i4_0_1_] : [INTEGER]) - [0]
2020-11-25 21:26:12,137 TRACE  [main] BasicExtractor: extracted value ([is_condi5_0_1_] : [BOOLEAN]) - [true]
2020-11-25 21:26:12,137 TRACE  [main] BasicExtractor: extracted value ([j6_0_1_] : [INTEGER]) - [0]
2020-11-25 21:26:12,138 TRACE  [main] BasicExtractor: extracted value ([problem_7_0_1_] : [BIGINT]) - [2]
2020-11-25 21:26:12,138 TRACE  [main] BasicExtractor: extracted value ([problem_7_0_0_] : [BIGINT]) - [2]
2020-11-25 21:26:12,138 TRACE  [main] BasicExtractor: extracted value ([id1_0_0_] : [BIGINT]) - [6]
2020-11-25 21:26:12,138 TRACE  [main] BasicExtractor: extracted value ([id1_0_1_] : [BIGINT]) - [7]
2020-11-25 21:26:12,139 TRACE  [main] BasicExtractor: extracted value ([binary_v2_0_1_] : [BLOB]) - [null]
2020-11-25 21:26:12,139 TRACE  [main] BasicExtractor: extracted value ([float_va3_0_1_] : [DOUBLE]) - [2.718281828459045]
2020-11-25 21:26:12,139 TRACE  [main] BasicExtractor: extracted value ([i4_0_1_] : [INTEGER]) - [0]
2020-11-25 21:26:12,139 TRACE  [main] BasicExtractor: extracted value ([is_condi5_0_1_] : [BOOLEAN]) - [true]
2020-11-25 21:26:12,139 TRACE  [main] BasicExtractor: extracted value ([j6_0_1_] : [INTEGER]) - [1]
2020-11-25 21:26:12,140 TRACE  [main] BasicExtractor: extracted value ([problem_7_0_1_] : [BIGINT]) - [2]
2020-11-25 21:26:12,140 TRACE  [main] BasicExtractor: extracted value ([problem_7_0_0_] : [BIGINT]) - [2]
2020-11-25 21:26:12,140 TRACE  [main] BasicExtractor: extracted value ([id1_0_0_] : [BIGINT]) - [7]
2020-11-25 21:26:12,140 TRACE  [main] BasicExtractor: extracted value ([id1_0_1_] : [BIGINT]) - [8]
2020-11-25 21:26:12,140 TRACE  [main] BasicExtractor: extracted value ([binary_v2_0_1_] : [BLOB]) - [null]
2020-11-25 21:26:12,141 TRACE  [main] BasicExtractor: extracted value ([float_va3_0_1_] : [DOUBLE]) - [7.38905609893065]
2020-11-25 21:26:12,141 TRACE  [main] BasicExtractor: extracted value ([i4_0_1_] : [INTEGER]) - [0]
2020-11-25 21:26:12,141 TRACE  [main] BasicExtractor: extracted value ([is_condi5_0_1_] : [BOOLEAN]) - [true]
2020-11-25 21:26:12,141 TRACE  [main] BasicExtractor: extracted value ([j6_0_1_] : [INTEGER]) - [2]
2020-11-25 21:26:12,141 TRACE  [main] BasicExtractor: extracted value ([problem_7_0_1_] : [BIGINT]) - [2]
2020-11-25 21:26:12,141 TRACE  [main] BasicExtractor: extracted value ([problem_7_0_0_] : [BIGINT]) - [2]
2020-11-25 21:26:12,142 TRACE  [main] BasicExtractor: extracted value ([id1_0_0_] : [BIGINT]) - [8]
2020-11-25 21:26:12,142 TRACE  [main] BasicExtractor: extracted value ([id1_0_1_] : [BIGINT]) - [9]
2020-11-25 21:26:12,142 TRACE  [main] BasicExtractor: extracted value ([binary_v2_0_1_] : [BLOB]) - [null]
2020-11-25 21:26:12,142 TRACE  [main] BasicExtractor: extracted value ([float_va3_0_1_] : [DOUBLE]) - [20.085536923187668]
2020-11-25 21:26:12,142 TRACE  [main] BasicExtractor: extracted value ([i4_0_1_] : [INTEGER]) - [0]
2020-11-25 21:26:12,142 TRACE  [main] BasicExtractor: extracted value ([is_condi5_0_1_] : [BOOLEAN]) - [true]
2020-11-25 21:26:12,142 TRACE  [main] BasicExtractor: extracted value ([j6_0_1_] : [INTEGER]) - [3]
2020-11-25 21:26:12,143 TRACE  [main] BasicExtractor: extracted value ([problem_7_0_1_] : [BIGINT]) - [2]
2020-11-25 21:26:12,143 TRACE  [main] BasicExtractor: extracted value ([problem_7_0_0_] : [BIGINT]) - [2]
2020-11-25 21:26:12,143 TRACE  [main] BasicExtractor: extracted value ([id1_0_0_] : [BIGINT]) - [9]
2020-11-25 21:26:12,143 TRACE  [main] BasicExtractor: extracted value ([id1_0_1_] : [BIGINT]) - [10]
2020-11-25 21:26:12,143 TRACE  [main] BasicExtractor: extracted value ([binary_v2_0_1_] : [BLOB]) - [null]
2020-11-25 21:26:12,143 TRACE  [main] BasicExtractor: extracted value ([float_va3_0_1_] : [DOUBLE]) - [54.598150033144236]
2020-11-25 21:26:12,143 TRACE  [main] BasicExtractor: extracted value ([i4_0_1_] : [INTEGER]) - [0]
2020-11-25 21:26:12,144 TRACE  [main] BasicExtractor: extracted value ([is_condi5_0_1_] : [BOOLEAN]) - [true]
2020-11-25 21:26:12,144 TRACE  [main] BasicExtractor: extracted value ([j6_0_1_] : [INTEGER]) - [4]
2020-11-25 21:26:12,144 TRACE  [main] BasicExtractor: extracted value ([problem_7_0_1_] : [BIGINT]) - [2]
2020-11-25 21:26:12,144 TRACE  [main] BasicExtractor: extracted value ([problem_7_0_0_] : [BIGINT]) - [2]
2020-11-25 21:26:12,144 TRACE  [main] BasicExtractor: extracted value ([id1_0_0_] : [BIGINT]) - [10]
2020-11-25 21:26:12,144 TRACE  [main] BasicExtractor: extracted value ([id1_0_1_] : [BIGINT]) - [11]
2020-11-25 21:26:12,145 TRACE  [main] BasicExtractor: extracted value ([binary_v2_0_1_] : [BLOB]) - [null]
2020-11-25 21:26:12,145 TRACE  [main] BasicExtractor: extracted value ([float_va3_0_1_] : [DOUBLE]) - [148.4131591025766]
2020-11-25 21:26:12,145 TRACE  [main] BasicExtractor: extracted value ([i4_0_1_] : [INTEGER]) - [0]
2020-11-25 21:26:12,145 TRACE  [main] BasicExtractor: extracted value ([is_condi5_0_1_] : [BOOLEAN]) - [true]
2020-11-25 21:26:12,146 TRACE  [main] BasicExtractor: extracted value ([j6_0_1_] : [INTEGER]) - [5]
2020-11-25 21:26:12,146 TRACE  [main] BasicExtractor: extracted value ([problem_7_0_1_] : [BIGINT]) - [2]
2020-11-25 21:26:12,146 TRACE  [main] BasicExtractor: extracted value ([problem_7_0_0_] : [BIGINT]) - [2]
2020-11-25 21:26:12,146 TRACE  [main] BasicExtractor: extracted value ([id1_0_0_] : [BIGINT]) - [11]
2020-11-25 21:26:12,164 TRACE  [main] BasicBinder: binding parameter [1] as [BLOB] - [[100, 101, 115, 99, 114, 105, 112, 116, 105, 111, 110, 100, 101, 115, 99, 114, 105, 112, 116, 105, 111, 110]]
2020-11-25 21:26:12,164 TRACE  [main] BasicBinder: binding parameter [2] as [BOOLEAN] - [null]
2020-11-25 21:26:12,165 TRACE  [main] BasicBinder: binding parameter [3] as [VARCHAR] - [POLYNOMIAL]
2020-11-25 21:26:12,165 TRACE  [main] BasicBinder: binding parameter [4] as [INTEGER] - [1]
2020-11-25 21:26:12,165 TRACE  [main] BasicBinder: binding parameter [5] as [BIGINT] - [null]
2020-11-25 21:26:12,165 TRACE  [main] BasicBinder: binding parameter [6] as [INTEGER] - [22]
2020-11-25 21:26:12,165 TRACE  [main] BasicBinder: binding parameter [7] as [BIGINT] - [2]
2020-11-25 21:26:12,170 TRACE  [main] BasicBinder: binding parameter [1] as [BLOB] - [null]
2020-11-25 21:26:12,171 TRACE  [main] BasicBinder: binding parameter [2] as [DOUBLE] - [1.01]
2020-11-25 21:26:12,172 TRACE  [main] BasicBinder: binding parameter [3] as [INTEGER] - [0]
2020-11-25 21:26:12,173 TRACE  [main] BasicBinder: binding parameter [4] as [BOOLEAN] - [true]
2020-11-25 21:26:12,173 TRACE  [main] BasicBinder: binding parameter [5] as [INTEGER] - [0]
2020-11-25 21:26:12,174 TRACE  [main] BasicBinder: binding parameter [6] as [BIGINT] - [2]
2020-11-25 21:26:12,174 TRACE  [main] BasicBinder: binding parameter [7] as [BIGINT] - [6]
2020-11-25 21:26:12,177 TRACE  [main] BasicBinder: binding parameter [1] as [BIGINT] - [2]
2020-11-25 21:26:12,178 TRACE  [main] BasicExtractor: extracted value ([id1_1_2_] : [BIGINT]) - [null]
2020-11-25 21:26:12,179 TRACE  [main] BasicExtractor: extracted value ([id1_0_4_] : [BIGINT]) - [null]
2020-11-25 21:26:12,180 TRACE  [main] BasicExtractor: extracted value ([descript2_1_0_] : [BLOB]) - [[100, 101, 115, 99, 114, 105, 112, 116, 105, 111, 110, 100, 101, 115, 99, 114, 105, 112, 116, 105, 111, 110]]
2020-11-25 21:26:12,180 TRACE  [main] BasicExtractor: extracted value ([is_solve3_1_0_] : [BOOLEAN]) - [null]
2020-11-25 21:26:12,180 TRACE  [main] BasicExtractor: extracted value ([kind4_1_0_] : [VARCHAR]) - [POLYNOMIAL]
2020-11-25 21:26:12,180 TRACE  [main] BasicExtractor: extracted value ([matrix_d5_1_0_] : [INTEGER]) - [1]
2020-11-25 21:26:12,180 TRACE  [main] BasicExtractor: extracted value ([parent_p7_1_0_] : [BIGINT]) - [null]
2020-11-25 21:26:12,180 TRACE  [main] BasicExtractor: extracted value ([problem_6_1_0_] : [INTEGER]) - [22]
2020-11-25 21:26:12,180 TRACE  [main] BasicExtractor: extracted value ([problem_7_0_3_] : [BIGINT]) - [null]
2020-11-25 21:26:12,180 TRACE  [main] BasicExtractor: extracted value ([parent_p7_1_1_] : [BIGINT]) - [null]
2020-11-25 21:26:12,180 TRACE  [main] CollectionType: Created collection wrapper: [com.sf.back.entities.Problem.matrixes#2]
2020-11-25 21:26:12,181 TRACE  [main] BasicBinder: binding parameter [1] as [BIGINT] - [2]
2020-11-25 21:26:12,181 TRACE  [main] BasicExtractor: extracted value ([id1_0_1_] : [BIGINT]) - [6]
2020-11-25 21:26:12,182 TRACE  [main] BasicExtractor: extracted value ([binary_v2_0_1_] : [BLOB]) - [null]
2020-11-25 21:26:12,182 TRACE  [main] BasicExtractor: extracted value ([float_va3_0_1_] : [DOUBLE]) - [1.01]
2020-11-25 21:26:12,182 TRACE  [main] BasicExtractor: extracted value ([i4_0_1_] : [INTEGER]) - [0]
2020-11-25 21:26:12,182 TRACE  [main] BasicExtractor: extracted value ([is_condi5_0_1_] : [BOOLEAN]) - [true]
2020-11-25 21:26:12,182 TRACE  [main] BasicExtractor: extracted value ([j6_0_1_] : [INTEGER]) - [0]
2020-11-25 21:26:12,182 TRACE  [main] BasicExtractor: extracted value ([problem_7_0_1_] : [BIGINT]) - [2]
2020-11-25 21:26:12,183 TRACE  [main] BasicExtractor: extracted value ([problem_7_0_0_] : [BIGINT]) - [2]
2020-11-25 21:26:12,183 TRACE  [main] BasicExtractor: extracted value ([id1_0_0_] : [BIGINT]) - [6]
2020-11-25 21:26:12,183 TRACE  [main] BasicExtractor: extracted value ([id1_0_1_] : [BIGINT]) - [7]
2020-11-25 21:26:12,183 TRACE  [main] BasicExtractor: extracted value ([binary_v2_0_1_] : [BLOB]) - [null]
2020-11-25 21:26:12,184 TRACE  [main] BasicExtractor: extracted value ([float_va3_0_1_] : [DOUBLE]) - [2.718281828459045]
2020-11-25 21:26:12,184 TRACE  [main] BasicExtractor: extracted value ([i4_0_1_] : [INTEGER]) - [0]
2020-11-25 21:26:12,184 TRACE  [main] BasicExtractor: extracted value ([is_condi5_0_1_] : [BOOLEAN]) - [true]
2020-11-25 21:26:12,184 TRACE  [main] BasicExtractor: extracted value ([j6_0_1_] : [INTEGER]) - [1]
2020-11-25 21:26:12,184 TRACE  [main] BasicExtractor: extracted value ([problem_7_0_1_] : [BIGINT]) - [2]
2020-11-25 21:26:12,184 TRACE  [main] BasicExtractor: extracted value ([problem_7_0_0_] : [BIGINT]) - [2]
2020-11-25 21:26:12,184 TRACE  [main] BasicExtractor: extracted value ([id1_0_0_] : [BIGINT]) - [7]
2020-11-25 21:26:12,185 TRACE  [main] BasicExtractor: extracted value ([id1_0_1_] : [BIGINT]) - [8]
2020-11-25 21:26:12,185 TRACE  [main] BasicExtractor: extracted value ([binary_v2_0_1_] : [BLOB]) - [null]
2020-11-25 21:26:12,185 TRACE  [main] BasicExtractor: extracted value ([float_va3_0_1_] : [DOUBLE]) - [7.38905609893065]
2020-11-25 21:26:12,185 TRACE  [main] BasicExtractor: extracted value ([i4_0_1_] : [INTEGER]) - [0]
2020-11-25 21:26:12,185 TRACE  [main] BasicExtractor: extracted value ([is_condi5_0_1_] : [BOOLEAN]) - [true]
2020-11-25 21:26:12,185 TRACE  [main] BasicExtractor: extracted value ([j6_0_1_] : [INTEGER]) - [2]
2020-11-25 21:26:12,186 TRACE  [main] BasicExtractor: extracted value ([problem_7_0_1_] : [BIGINT]) - [2]
2020-11-25 21:26:12,186 TRACE  [main] BasicExtractor: extracted value ([problem_7_0_0_] : [BIGINT]) - [2]
2020-11-25 21:26:12,186 TRACE  [main] BasicExtractor: extracted value ([id1_0_0_] : [BIGINT]) - [8]
2020-11-25 21:26:12,187 TRACE  [main] BasicExtractor: extracted value ([id1_0_1_] : [BIGINT]) - [9]
2020-11-25 21:26:12,187 TRACE  [main] BasicExtractor: extracted value ([binary_v2_0_1_] : [BLOB]) - [null]
2020-11-25 21:26:12,187 TRACE  [main] BasicExtractor: extracted value ([float_va3_0_1_] : [DOUBLE]) - [20.085536923187668]
2020-11-25 21:26:12,188 TRACE  [main] BasicExtractor: extracted value ([i4_0_1_] : [INTEGER]) - [0]
2020-11-25 21:26:12,188 TRACE  [main] BasicExtractor: extracted value ([is_condi5_0_1_] : [BOOLEAN]) - [true]
2020-11-25 21:26:12,188 TRACE  [main] BasicExtractor: extracted value ([j6_0_1_] : [INTEGER]) - [3]
2020-11-25 21:26:12,188 TRACE  [main] BasicExtractor: extracted value ([problem_7_0_1_] : [BIGINT]) - [2]
2020-11-25 21:26:12,188 TRACE  [main] BasicExtractor: extracted value ([problem_7_0_0_] : [BIGINT]) - [2]
2020-11-25 21:26:12,189 TRACE  [main] BasicExtractor: extracted value ([id1_0_0_] : [BIGINT]) - [9]
2020-11-25 21:26:12,189 TRACE  [main] BasicExtractor: extracted value ([id1_0_1_] : [BIGINT]) - [10]
2020-11-25 21:26:12,190 TRACE  [main] BasicExtractor: extracted value ([binary_v2_0_1_] : [BLOB]) - [null]
2020-11-25 21:26:12,190 TRACE  [main] BasicExtractor: extracted value ([float_va3_0_1_] : [DOUBLE]) - [54.598150033144236]
2020-11-25 21:26:12,190 TRACE  [main] BasicExtractor: extracted value ([i4_0_1_] : [INTEGER]) - [0]
2020-11-25 21:26:12,190 TRACE  [main] BasicExtractor: extracted value ([is_condi5_0_1_] : [BOOLEAN]) - [true]
2020-11-25 21:26:12,190 TRACE  [main] BasicExtractor: extracted value ([j6_0_1_] : [INTEGER]) - [4]
2020-11-25 21:26:12,191 TRACE  [main] BasicExtractor: extracted value ([problem_7_0_1_] : [BIGINT]) - [2]
2020-11-25 21:26:12,191 TRACE  [main] BasicExtractor: extracted value ([problem_7_0_0_] : [BIGINT]) - [2]
2020-11-25 21:26:12,191 TRACE  [main] BasicExtractor: extracted value ([id1_0_0_] : [BIGINT]) - [10]
2020-11-25 21:26:12,191 TRACE  [main] BasicExtractor: extracted value ([id1_0_1_] : [BIGINT]) - [11]
2020-11-25 21:26:12,192 TRACE  [main] BasicExtractor: extracted value ([binary_v2_0_1_] : [BLOB]) - [null]
2020-11-25 21:26:12,192 TRACE  [main] BasicExtractor: extracted value ([float_va3_0_1_] : [DOUBLE]) - [148.4131591025766]
2020-11-25 21:26:12,192 TRACE  [main] BasicExtractor: extracted value ([i4_0_1_] : [INTEGER]) - [0]
2020-11-25 21:26:12,192 TRACE  [main] BasicExtractor: extracted value ([is_condi5_0_1_] : [BOOLEAN]) - [true]
2020-11-25 21:26:12,192 TRACE  [main] BasicExtractor: extracted value ([j6_0_1_] : [INTEGER]) - [5]
2020-11-25 21:26:12,192 TRACE  [main] BasicExtractor: extracted value ([problem_7_0_1_] : [BIGINT]) - [2]
2020-11-25 21:26:12,192 TRACE  [main] BasicExtractor: extracted value ([problem_7_0_0_] : [BIGINT]) - [2]
2020-11-25 21:26:12,193 TRACE  [main] BasicExtractor: extracted value ([id1_0_0_] : [BIGINT]) - [11]
2020-11-25 21:26:12,220 TRACE  [main] BasicBinder: binding parameter [1] as [BLOB] - [[100, 101, 115, 99, 114, 105, 112, 116, 105, 111, 110]]
2020-11-25 21:26:12,221 TRACE  [main] BasicBinder: binding parameter [2] as [BOOLEAN] - [false]
2020-11-25 21:26:12,221 TRACE  [main] BasicBinder: binding parameter [3] as [VARCHAR] - [POLYNOMIAL]
2020-11-25 21:26:12,221 TRACE  [main] BasicBinder: binding parameter [4] as [INTEGER] - [12]
2020-11-25 21:26:12,221 TRACE  [main] BasicBinder: binding parameter [5] as [BIGINT] - [null]
2020-11-25 21:26:12,222 TRACE  [main] BasicBinder: binding parameter [6] as [INTEGER] - [null]
2020-11-25 21:26:12,224 TRACE  [main] BasicBinder: binding parameter [1] as [BLOB] - [null]
2020-11-25 21:26:12,224 TRACE  [main] BasicBinder: binding parameter [2] as [DOUBLE] - [0.0]
2020-11-25 21:26:12,225 TRACE  [main] BasicBinder: binding parameter [3] as [INTEGER] - [0]
2020-11-25 21:26:12,225 TRACE  [main] BasicBinder: binding parameter [4] as [BOOLEAN] - [true]
2020-11-25 21:26:12,225 TRACE  [main] BasicBinder: binding parameter [5] as [INTEGER] - [0]
2020-11-25 21:26:12,225 TRACE  [main] BasicBinder: binding parameter [6] as [BIGINT] - [4]
2020-11-25 21:26:12,226 TRACE  [main] BasicBinder: binding parameter [1] as [BLOB] - [null]
2020-11-25 21:26:12,227 TRACE  [main] BasicBinder: binding parameter [2] as [DOUBLE] - [1.0]
2020-11-25 21:26:12,227 TRACE  [main] BasicBinder: binding parameter [3] as [INTEGER] - [0]
2020-11-25 21:26:12,227 TRACE  [main] BasicBinder: binding parameter [4] as [BOOLEAN] - [true]
2020-11-25 21:26:12,227 TRACE  [main] BasicBinder: binding parameter [5] as [INTEGER] - [1]
2020-11-25 21:26:12,227 TRACE  [main] BasicBinder: binding parameter [6] as [BIGINT] - [4]
2020-11-25 21:26:12,228 TRACE  [main] BasicBinder: binding parameter [1] as [BLOB] - [null]
2020-11-25 21:26:12,229 TRACE  [main] BasicBinder: binding parameter [2] as [DOUBLE] - [2.0]
2020-11-25 21:26:12,229 TRACE  [main] BasicBinder: binding parameter [3] as [INTEGER] - [0]
2020-11-25 21:26:12,229 TRACE  [main] BasicBinder: binding parameter [4] as [BOOLEAN] - [true]
2020-11-25 21:26:12,229 TRACE  [main] BasicBinder: binding parameter [5] as [INTEGER] - [2]
2020-11-25 21:26:12,229 TRACE  [main] BasicBinder: binding parameter [6] as [BIGINT] - [4]
2020-11-25 21:26:12,231 TRACE  [main] BasicBinder: binding parameter [1] as [BLOB] - [null]
2020-11-25 21:26:12,231 TRACE  [main] BasicBinder: binding parameter [2] as [DOUBLE] - [3.0]
2020-11-25 21:26:12,232 TRACE  [main] BasicBinder: binding parameter [3] as [INTEGER] - [0]
2020-11-25 21:26:12,232 TRACE  [main] BasicBinder: binding parameter [4] as [BOOLEAN] - [true]
2020-11-25 21:26:12,232 TRACE  [main] BasicBinder: binding parameter [5] as [INTEGER] - [3]
2020-11-25 21:26:12,232 TRACE  [main] BasicBinder: binding parameter [6] as [BIGINT] - [4]
2020-11-25 21:26:12,233 TRACE  [main] BasicBinder: binding parameter [1] as [BLOB] - [null]
2020-11-25 21:26:12,234 TRACE  [main] BasicBinder: binding parameter [2] as [DOUBLE] - [4.0]
2020-11-25 21:26:12,234 TRACE  [main] BasicBinder: binding parameter [3] as [INTEGER] - [0]
2020-11-25 21:26:12,234 TRACE  [main] BasicBinder: binding parameter [4] as [BOOLEAN] - [true]
2020-11-25 21:26:12,234 TRACE  [main] BasicBinder: binding parameter [5] as [INTEGER] - [4]
2020-11-25 21:26:12,234 TRACE  [main] BasicBinder: binding parameter [6] as [BIGINT] - [4]
2020-11-25 21:26:12,235 TRACE  [main] BasicBinder: binding parameter [1] as [BLOB] - [null]
2020-11-25 21:26:12,236 TRACE  [main] BasicBinder: binding parameter [2] as [DOUBLE] - [5.0]
2020-11-25 21:26:12,236 TRACE  [main] BasicBinder: binding parameter [3] as [INTEGER] - [0]
2020-11-25 21:26:12,236 TRACE  [main] BasicBinder: binding parameter [4] as [BOOLEAN] - [true]
2020-11-25 21:26:12,236 TRACE  [main] BasicBinder: binding parameter [5] as [INTEGER] - [5]
2020-11-25 21:26:12,236 TRACE  [main] BasicBinder: binding parameter [6] as [BIGINT] - [4]
2020-11-25 21:26:12,238 TRACE  [main] BasicBinder: binding parameter [1] as [BLOB] - [null]
2020-11-25 21:26:12,238 TRACE  [main] BasicBinder: binding parameter [2] as [DOUBLE] - [6.0]
2020-11-25 21:26:12,238 TRACE  [main] BasicBinder: binding parameter [3] as [INTEGER] - [0]
2020-11-25 21:26:12,238 TRACE  [main] BasicBinder: binding parameter [4] as [BOOLEAN] - [true]
2020-11-25 21:26:12,238 TRACE  [main] BasicBinder: binding parameter [5] as [INTEGER] - [6]
2020-11-25 21:26:12,239 TRACE  [main] BasicBinder: binding parameter [6] as [BIGINT] - [4]
2020-11-25 21:26:12,240 TRACE  [main] BasicBinder: binding parameter [1] as [BLOB] - [null]
2020-11-25 21:26:12,240 TRACE  [main] BasicBinder: binding parameter [2] as [DOUBLE] - [7.0]
2020-11-25 21:26:12,240 TRACE  [main] BasicBinder: binding parameter [3] as [INTEGER] - [0]
2020-11-25 21:26:12,240 TRACE  [main] BasicBinder: binding parameter [4] as [BOOLEAN] - [true]
2020-11-25 21:26:12,240 TRACE  [main] BasicBinder: binding parameter [5] as [INTEGER] - [7]
2020-11-25 21:26:12,240 TRACE  [main] BasicBinder: binding parameter [6] as [BIGINT] - [4]
2020-11-25 21:26:12,241 TRACE  [main] BasicBinder: binding parameter [1] as [BLOB] - [null]
2020-11-25 21:26:12,242 TRACE  [main] BasicBinder: binding parameter [2] as [DOUBLE] - [8.0]
2020-11-25 21:26:12,242 TRACE  [main] BasicBinder: binding parameter [3] as [INTEGER] - [0]
2020-11-25 21:26:12,242 TRACE  [main] BasicBinder: binding parameter [4] as [BOOLEAN] - [true]
2020-11-25 21:26:12,242 TRACE  [main] BasicBinder: binding parameter [5] as [INTEGER] - [8]
2020-11-25 21:26:12,242 TRACE  [main] BasicBinder: binding parameter [6] as [BIGINT] - [4]
2020-11-25 21:26:12,243 TRACE  [main] BasicBinder: binding parameter [1] as [BLOB] - [null]
2020-11-25 21:26:12,243 TRACE  [main] BasicBinder: binding parameter [2] as [DOUBLE] - [9.0]
2020-11-25 21:26:12,244 TRACE  [main] BasicBinder: binding parameter [3] as [INTEGER] - [0]
2020-11-25 21:26:12,244 TRACE  [main] BasicBinder: binding parameter [4] as [BOOLEAN] - [true]
2020-11-25 21:26:12,244 TRACE  [main] BasicBinder: binding parameter [5] as [INTEGER] - [9]
2020-11-25 21:26:12,244 TRACE  [main] BasicBinder: binding parameter [6] as [BIGINT] - [4]
2020-11-25 21:26:12,451 TRACE  [main] BasicExtractor: extracted value ([id1_1_] : [BIGINT]) - [1]
2020-11-25 21:26:12,451 TRACE  [main] BasicExtractor: extracted value ([descript2_1_] : [BLOB]) - [[70, 105, 110, 100, 32, 97, 108, 108, 32, 114, 111, 111, 116, 115, 32, 111, 102, 32, 103, 105, 118, 101, 110, 32, 112, 111, 108, 121, 110, 111, 109, 105, 97, 108]]
2020-11-25 21:26:12,452 TRACE  [main] BasicExtractor: extracted value ([is_solve3_1_] : [BOOLEAN]) - [false]
2020-11-25 21:26:12,452 TRACE  [main] BasicExtractor: extracted value ([kind4_1_] : [VARCHAR]) - [POLYNOMIAL]
2020-11-25 21:26:12,452 TRACE  [main] BasicExtractor: extracted value ([matrix_d5_1_] : [INTEGER]) - [1]
2020-11-25 21:26:12,452 TRACE  [main] BasicExtractor: extracted value ([parent_p7_1_] : [BIGINT]) - [null]
2020-11-25 21:26:12,452 TRACE  [main] BasicExtractor: extracted value ([problem_6_1_] : [INTEGER]) - [6]
2020-11-25 21:26:12,453 TRACE  [main] BasicExtractor: extracted value ([id1_1_] : [BIGINT]) - [2]
2020-11-25 21:26:12,453 TRACE  [main] BasicExtractor: extracted value ([descript2_1_] : [BLOB]) - [[100, 101, 115, 99, 114, 105, 112, 116, 105, 111, 110, 100, 101, 115, 99, 114, 105, 112, 116, 105, 111, 110]]
2020-11-25 21:26:12,453 TRACE  [main] BasicExtractor: extracted value ([is_solve3_1_] : [BOOLEAN]) - [null]
2020-11-25 21:26:12,453 TRACE  [main] BasicExtractor: extracted value ([kind4_1_] : [VARCHAR]) - [POLYNOMIAL]
2020-11-25 21:26:12,454 TRACE  [main] BasicExtractor: extracted value ([matrix_d5_1_] : [INTEGER]) - [1]
2020-11-25 21:26:12,454 TRACE  [main] BasicExtractor: extracted value ([parent_p7_1_] : [BIGINT]) - [null]
2020-11-25 21:26:12,454 TRACE  [main] BasicExtractor: extracted value ([problem_6_1_] : [INTEGER]) - [22]
2020-11-25 21:26:12,455 TRACE  [main] BasicExtractor: extracted value ([id1_1_] : [BIGINT]) - [3]
2020-11-25 21:26:12,456 TRACE  [main] BasicExtractor: extracted value ([descript2_1_] : [BLOB]) - [[112, 114, 111, 98, 108, 101, 109, 100, 101, 115, 99, 114, 105, 112, 116, 105, 111, 110]]
2020-11-25 21:26:12,456 TRACE  [main] BasicExtractor: extracted value ([is_solve3_1_] : [BOOLEAN]) - [null]
2020-11-25 21:26:12,456 TRACE  [main] BasicExtractor: extracted value ([kind4_1_] : [VARCHAR]) - [POLYNOMIAL]
2020-11-25 21:26:12,456 TRACE  [main] BasicExtractor: extracted value ([matrix_d5_1_] : [INTEGER]) - [1]
2020-11-25 21:26:12,456 TRACE  [main] BasicExtractor: extracted value ([parent_p7_1_] : [BIGINT]) - [null]
2020-11-25 21:26:12,456 TRACE  [main] BasicExtractor: extracted value ([problem_6_1_] : [INTEGER]) - [22]
2020-11-25 21:26:12,457 TRACE  [main] BasicExtractor: extracted value ([id1_1_] : [BIGINT]) - [4]
2020-11-25 21:26:12,457 TRACE  [main] BasicExtractor: extracted value ([descript2_1_] : [BLOB]) - [[100, 101, 115, 99, 114, 105, 112, 116, 105, 111, 110]]
2020-11-25 21:26:12,457 TRACE  [main] BasicExtractor: extracted value ([is_solve3_1_] : [BOOLEAN]) - [false]
2020-11-25 21:26:12,457 TRACE  [main] BasicExtractor: extracted value ([kind4_1_] : [VARCHAR]) - [POLYNOMIAL]
2020-11-25 21:26:12,457 TRACE  [main] BasicExtractor: extracted value ([matrix_d5_1_] : [INTEGER]) - [12]
2020-11-25 21:26:12,458 TRACE  [main] BasicExtractor: extracted value ([parent_p7_1_] : [BIGINT]) - [null]
2020-11-25 21:26:12,458 TRACE  [main] BasicExtractor: extracted value ([problem_6_1_] : [INTEGER]) - [null]
2020-11-25 21:26:12,458 TRACE  [main] BasicExtractor: extracted value ([id1_1_] : [BIGINT]) - [5]
2020-11-25 21:26:12,458 TRACE  [main] BasicExtractor: extracted value ([descript2_1_] : [BLOB]) - [[112, 114, 111, 98, 108, 101, 109, 100, 101, 115, 99, 114, 105, 112, 116, 105, 111, 110]]
2020-11-25 21:26:12,458 TRACE  [main] BasicExtractor: extracted value ([is_solve3_1_] : [BOOLEAN]) - [null]
2020-11-25 21:26:12,459 TRACE  [main] BasicExtractor: extracted value ([kind4_1_] : [VARCHAR]) - [POLYNOMIAL]
2020-11-25 21:26:12,459 TRACE  [main] BasicExtractor: extracted value ([matrix_d5_1_] : [INTEGER]) - [1]
2020-11-25 21:26:12,459 TRACE  [main] BasicExtractor: extracted value ([parent_p7_1_] : [BIGINT]) - [null]
2020-11-25 21:26:12,459 TRACE  [main] BasicExtractor: extracted value ([problem_6_1_] : [INTEGER]) - [22]
2020-11-25 21:26:12,460 TRACE  [main] CollectionType: Created collection wrapper: [com.sf.back.entities.Problem.children#1]
2020-11-25 21:26:12,460 TRACE  [main] CollectionType: Created collection wrapper: [com.sf.back.entities.Problem.matrixes#1]
2020-11-25 21:26:12,460 TRACE  [main] CollectionType: Created collection wrapper: [com.sf.back.entities.Problem.children#2]
2020-11-25 21:26:12,460 TRACE  [main] CollectionType: Created collection wrapper: [com.sf.back.entities.Problem.matrixes#2]
2020-11-25 21:26:12,460 TRACE  [main] CollectionType: Created collection wrapper: [com.sf.back.entities.Problem.children#3]
2020-11-25 21:26:12,461 TRACE  [main] CollectionType: Created collection wrapper: [com.sf.back.entities.Problem.matrixes#3]
2020-11-25 21:26:12,461 TRACE  [main] CollectionType: Created collection wrapper: [com.sf.back.entities.Problem.children#4]
2020-11-25 21:26:12,461 TRACE  [main] CollectionType: Created collection wrapper: [com.sf.back.entities.Problem.matrixes#4]
2020-11-25 21:26:12,461 TRACE  [main] CollectionType: Created collection wrapper: [com.sf.back.entities.Problem.children#5]
2020-11-25 21:26:12,461 TRACE  [main] CollectionType: Created collection wrapper: [com.sf.back.entities.Problem.matrixes#5]
2020-11-25 21:26:12,462 TRACE  [main] BasicBinder: binding parameter [1] as [BIGINT] - [5]
2020-11-25 21:26:12,462 TRACE  [main] BasicExtractor: extracted value ([id1_0_1_] : [BIGINT]) - [28]
2020-11-25 21:26:12,462 TRACE  [main] BasicExtractor: extracted value ([binary_v2_0_1_] : [BLOB]) - [null]
2020-11-25 21:26:12,463 TRACE  [main] BasicExtractor: extracted value ([float_va3_0_1_] : [DOUBLE]) - [1.0]
2020-11-25 21:26:12,463 TRACE  [main] BasicExtractor: extracted value ([i4_0_1_] : [INTEGER]) - [0]
2020-11-25 21:26:12,463 TRACE  [main] BasicExtractor: extracted value ([is_condi5_0_1_] : [BOOLEAN]) - [true]
2020-11-25 21:26:12,463 TRACE  [main] BasicExtractor: extracted value ([j6_0_1_] : [INTEGER]) - [0]
2020-11-25 21:26:12,463 TRACE  [main] BasicExtractor: extracted value ([problem_7_0_1_] : [BIGINT]) - [5]
2020-11-25 21:26:12,463 TRACE  [main] BasicExtractor: extracted value ([problem_7_0_0_] : [BIGINT]) - [5]
2020-11-25 21:26:12,463 TRACE  [main] BasicExtractor: extracted value ([id1_0_0_] : [BIGINT]) - [28]
2020-11-25 21:26:12,464 TRACE  [main] BasicExtractor: extracted value ([id1_0_1_] : [BIGINT]) - [29]
2020-11-25 21:26:12,464 TRACE  [main] BasicExtractor: extracted value ([binary_v2_0_1_] : [BLOB]) - [null]
2020-11-25 21:26:12,464 TRACE  [main] BasicExtractor: extracted value ([float_va3_0_1_] : [DOUBLE]) - [2.718281828459045]
2020-11-25 21:26:12,464 TRACE  [main] BasicExtractor: extracted value ([i4_0_1_] : [INTEGER]) - [0]
2020-11-25 21:26:12,464 TRACE  [main] BasicExtractor: extracted value ([is_condi5_0_1_] : [BOOLEAN]) - [true]
2020-11-25 21:26:12,464 TRACE  [main] BasicExtractor: extracted value ([j6_0_1_] : [INTEGER]) - [1]
2020-11-25 21:26:12,464 TRACE  [main] BasicExtractor: extracted value ([problem_7_0_1_] : [BIGINT]) - [5]
2020-11-25 21:26:12,465 TRACE  [main] BasicExtractor: extracted value ([problem_7_0_0_] : [BIGINT]) - [5]
2020-11-25 21:26:12,466 TRACE  [main] BasicExtractor: extracted value ([id1_0_0_] : [BIGINT]) - [29]
2020-11-25 21:26:12,466 TRACE  [main] BasicExtractor: extracted value ([id1_0_1_] : [BIGINT]) - [30]
2020-11-25 21:26:12,466 TRACE  [main] BasicExtractor: extracted value ([binary_v2_0_1_] : [BLOB]) - [null]
2020-11-25 21:26:12,467 TRACE  [main] BasicExtractor: extracted value ([float_va3_0_1_] : [DOUBLE]) - [7.38905609893065]
2020-11-25 21:26:12,467 TRACE  [main] BasicExtractor: extracted value ([i4_0_1_] : [INTEGER]) - [0]
2020-11-25 21:26:12,467 TRACE  [main] BasicExtractor: extracted value ([is_condi5_0_1_] : [BOOLEAN]) - [true]
2020-11-25 21:26:12,467 TRACE  [main] BasicExtractor: extracted value ([j6_0_1_] : [INTEGER]) - [2]
2020-11-25 21:26:12,467 TRACE  [main] BasicExtractor: extracted value ([problem_7_0_1_] : [BIGINT]) - [5]
2020-11-25 21:26:12,467 TRACE  [main] BasicExtractor: extracted value ([problem_7_0_0_] : [BIGINT]) - [5]
2020-11-25 21:26:12,467 TRACE  [main] BasicExtractor: extracted value ([id1_0_0_] : [BIGINT]) - [30]
2020-11-25 21:26:12,468 TRACE  [main] BasicExtractor: extracted value ([id1_0_1_] : [BIGINT]) - [31]
2020-11-25 21:26:12,468 TRACE  [main] BasicExtractor: extracted value ([binary_v2_0_1_] : [BLOB]) - [null]
2020-11-25 21:26:12,468 TRACE  [main] BasicExtractor: extracted value ([float_va3_0_1_] : [DOUBLE]) - [20.085536923187668]
2020-11-25 21:26:12,468 TRACE  [main] BasicExtractor: extracted value ([i4_0_1_] : [INTEGER]) - [0]
2020-11-25 21:26:12,469 TRACE  [main] BasicExtractor: extracted value ([is_condi5_0_1_] : [BOOLEAN]) - [true]
2020-11-25 21:26:12,469 TRACE  [main] BasicExtractor: extracted value ([j6_0_1_] : [INTEGER]) - [3]
2020-11-25 21:26:12,469 TRACE  [main] BasicExtractor: extracted value ([problem_7_0_1_] : [BIGINT]) - [5]
2020-11-25 21:26:12,469 TRACE  [main] BasicExtractor: extracted value ([problem_7_0_0_] : [BIGINT]) - [5]
2020-11-25 21:26:12,469 TRACE  [main] BasicExtractor: extracted value ([id1_0_0_] : [BIGINT]) - [31]
2020-11-25 21:26:12,469 TRACE  [main] BasicExtractor: extracted value ([id1_0_1_] : [BIGINT]) - [32]
2020-11-25 21:26:12,470 TRACE  [main] BasicExtractor: extracted value ([binary_v2_0_1_] : [BLOB]) - [null]
2020-11-25 21:26:12,470 TRACE  [main] BasicExtractor: extracted value ([float_va3_0_1_] : [DOUBLE]) - [54.598150033144236]
2020-11-25 21:26:12,470 TRACE  [main] BasicExtractor: extracted value ([i4_0_1_] : [INTEGER]) - [0]
2020-11-25 21:26:12,470 TRACE  [main] BasicExtractor: extracted value ([is_condi5_0_1_] : [BOOLEAN]) - [true]
2020-11-25 21:26:12,470 TRACE  [main] BasicExtractor: extracted value ([j6_0_1_] : [INTEGER]) - [4]
2020-11-25 21:26:12,470 TRACE  [main] BasicExtractor: extracted value ([problem_7_0_1_] : [BIGINT]) - [5]
2020-11-25 21:26:12,470 TRACE  [main] BasicExtractor: extracted value ([problem_7_0_0_] : [BIGINT]) - [5]
2020-11-25 21:26:12,471 TRACE  [main] BasicExtractor: extracted value ([id1_0_0_] : [BIGINT]) - [32]
2020-11-25 21:26:12,472 TRACE  [main] BasicExtractor: extracted value ([id1_0_1_] : [BIGINT]) - [33]
2020-11-25 21:26:12,472 TRACE  [main] BasicExtractor: extracted value ([binary_v2_0_1_] : [BLOB]) - [null]
2020-11-25 21:26:12,473 TRACE  [main] BasicExtractor: extracted value ([float_va3_0_1_] : [DOUBLE]) - [148.4131591025766]
2020-11-25 21:26:12,473 TRACE  [main] BasicExtractor: extracted value ([i4_0_1_] : [INTEGER]) - [0]
2020-11-25 21:26:12,474 TRACE  [main] BasicExtractor: extracted value ([is_condi5_0_1_] : [BOOLEAN]) - [true]
2020-11-25 21:26:12,474 TRACE  [main] BasicExtractor: extracted value ([j6_0_1_] : [INTEGER]) - [5]
2020-11-25 21:26:12,474 TRACE  [main] BasicExtractor: extracted value ([problem_7_0_1_] : [BIGINT]) - [5]
2020-11-25 21:26:12,474 TRACE  [main] BasicExtractor: extracted value ([problem_7_0_0_] : [BIGINT]) - [5]
2020-11-25 21:26:12,474 TRACE  [main] BasicExtractor: extracted value ([id1_0_0_] : [BIGINT]) - [33]
2020-11-25 21:26:12,476 TRACE  [main] BasicBinder: binding parameter [1] as [BIGINT] - [5]
2020-11-25 21:26:12,477 TRACE  [main] BasicBinder: binding parameter [1] as [BIGINT] - [4]
2020-11-25 21:26:12,478 TRACE  [main] BasicExtractor: extracted value ([id1_0_1_] : [BIGINT]) - [18]
2020-11-25 21:26:12,478 TRACE  [main] BasicExtractor: extracted value ([binary_v2_0_1_] : [BLOB]) - [null]
2020-11-25 21:26:12,479 TRACE  [main] BasicExtractor: extracted value ([float_va3_0_1_] : [DOUBLE]) - [0.0]
2020-11-25 21:26:12,479 TRACE  [main] BasicExtractor: extracted value ([i4_0_1_] : [INTEGER]) - [0]
2020-11-25 21:26:12,479 TRACE  [main] BasicExtractor: extracted value ([is_condi5_0_1_] : [BOOLEAN]) - [true]
2020-11-25 21:26:12,479 TRACE  [main] BasicExtractor: extracted value ([j6_0_1_] : [INTEGER]) - [0]
2020-11-25 21:26:12,479 TRACE  [main] BasicExtractor: extracted value ([problem_7_0_1_] : [BIGINT]) - [4]
2020-11-25 21:26:12,479 TRACE  [main] BasicExtractor: extracted value ([problem_7_0_0_] : [BIGINT]) - [4]
2020-11-25 21:26:12,480 TRACE  [main] BasicExtractor: extracted value ([id1_0_0_] : [BIGINT]) - [18]
2020-11-25 21:26:12,480 TRACE  [main] BasicExtractor: extracted value ([id1_0_1_] : [BIGINT]) - [19]
2020-11-25 21:26:12,480 TRACE  [main] BasicExtractor: extracted value ([binary_v2_0_1_] : [BLOB]) - [null]
2020-11-25 21:26:12,480 TRACE  [main] BasicExtractor: extracted value ([float_va3_0_1_] : [DOUBLE]) - [1.0]
2020-11-25 21:26:12,481 TRACE  [main] BasicExtractor: extracted value ([i4_0_1_] : [INTEGER]) - [0]
2020-11-25 21:26:12,481 TRACE  [main] BasicExtractor: extracted value ([is_condi5_0_1_] : [BOOLEAN]) - [true]
2020-11-25 21:26:12,482 TRACE  [main] BasicExtractor: extracted value ([j6_0_1_] : [INTEGER]) - [1]
2020-11-25 21:26:12,482 TRACE  [main] BasicExtractor: extracted value ([problem_7_0_1_] : [BIGINT]) - [4]
2020-11-25 21:26:12,482 TRACE  [main] BasicExtractor: extracted value ([problem_7_0_0_] : [BIGINT]) - [4]
2020-11-25 21:26:12,482 TRACE  [main] BasicExtractor: extracted value ([id1_0_0_] : [BIGINT]) - [19]
2020-11-25 21:26:12,482 TRACE  [main] BasicExtractor: extracted value ([id1_0_1_] : [BIGINT]) - [20]
2020-11-25 21:26:12,483 TRACE  [main] BasicExtractor: extracted value ([binary_v2_0_1_] : [BLOB]) - [null]
2020-11-25 21:26:12,483 TRACE  [main] BasicExtractor: extracted value ([float_va3_0_1_] : [DOUBLE]) - [2.0]
2020-11-25 21:26:12,484 TRACE  [main] BasicExtractor: extracted value ([i4_0_1_] : [INTEGER]) - [0]
2020-11-25 21:26:12,484 TRACE  [main] BasicExtractor: extracted value ([is_condi5_0_1_] : [BOOLEAN]) - [true]
2020-11-25 21:26:12,484 TRACE  [main] BasicExtractor: extracted value ([j6_0_1_] : [INTEGER]) - [2]
2020-11-25 21:26:12,484 TRACE  [main] BasicExtractor: extracted value ([problem_7_0_1_] : [BIGINT]) - [4]
2020-11-25 21:26:12,484 TRACE  [main] BasicExtractor: extracted value ([problem_7_0_0_] : [BIGINT]) - [4]
2020-11-25 21:26:12,484 TRACE  [main] BasicExtractor: extracted value ([id1_0_0_] : [BIGINT]) - [20]
2020-11-25 21:26:12,485 TRACE  [main] BasicExtractor: extracted value ([id1_0_1_] : [BIGINT]) - [21]
2020-11-25 21:26:12,485 TRACE  [main] BasicExtractor: extracted value ([binary_v2_0_1_] : [BLOB]) - [null]
2020-11-25 21:26:12,485 TRACE  [main] BasicExtractor: extracted value ([float_va3_0_1_] : [DOUBLE]) - [3.0]
2020-11-25 21:26:12,485 TRACE  [main] BasicExtractor: extracted value ([i4_0_1_] : [INTEGER]) - [0]
2020-11-25 21:26:12,485 TRACE  [main] BasicExtractor: extracted value ([is_condi5_0_1_] : [BOOLEAN]) - [true]
2020-11-25 21:26:12,485 TRACE  [main] BasicExtractor: extracted value ([j6_0_1_] : [INTEGER]) - [3]
2020-11-25 21:26:12,486 TRACE  [main] BasicExtractor: extracted value ([problem_7_0_1_] : [BIGINT]) - [4]
2020-11-25 21:26:12,486 TRACE  [main] BasicExtractor: extracted value ([problem_7_0_0_] : [BIGINT]) - [4]
2020-11-25 21:26:12,486 TRACE  [main] BasicExtractor: extracted value ([id1_0_0_] : [BIGINT]) - [21]
2020-11-25 21:26:12,486 TRACE  [main] BasicExtractor: extracted value ([id1_0_1_] : [BIGINT]) - [22]
2020-11-25 21:26:12,487 TRACE  [main] BasicExtractor: extracted value ([binary_v2_0_1_] : [BLOB]) - [null]
2020-11-25 21:26:12,487 TRACE  [main] BasicExtractor: extracted value ([float_va3_0_1_] : [DOUBLE]) - [4.0]
2020-11-25 21:26:12,487 TRACE  [main] BasicExtractor: extracted value ([i4_0_1_] : [INTEGER]) - [0]
2020-11-25 21:26:12,487 TRACE  [main] BasicExtractor: extracted value ([is_condi5_0_1_] : [BOOLEAN]) - [true]
2020-11-25 21:26:12,487 TRACE  [main] BasicExtractor: extracted value ([j6_0_1_] : [INTEGER]) - [4]
2020-11-25 21:26:12,488 TRACE  [main] BasicExtractor: extracted value ([problem_7_0_1_] : [BIGINT]) - [4]
2020-11-25 21:26:12,488 TRACE  [main] BasicExtractor: extracted value ([problem_7_0_0_] : [BIGINT]) - [4]
2020-11-25 21:26:12,488 TRACE  [main] BasicExtractor: extracted value ([id1_0_0_] : [BIGINT]) - [22]
2020-11-25 21:26:12,489 TRACE  [main] BasicExtractor: extracted value ([id1_0_1_] : [BIGINT]) - [23]
2020-11-25 21:26:12,489 TRACE  [main] BasicExtractor: extracted value ([binary_v2_0_1_] : [BLOB]) - [null]
2020-11-25 21:26:12,489 TRACE  [main] BasicExtractor: extracted value ([float_va3_0_1_] : [DOUBLE]) - [5.0]
2020-11-25 21:26:12,489 TRACE  [main] BasicExtractor: extracted value ([i4_0_1_] : [INTEGER]) - [0]
2020-11-25 21:26:12,489 TRACE  [main] BasicExtractor: extracted value ([is_condi5_0_1_] : [BOOLEAN]) - [true]
2020-11-25 21:26:12,490 TRACE  [main] BasicExtractor: extracted value ([j6_0_1_] : [INTEGER]) - [5]
2020-11-25 21:26:12,490 TRACE  [main] BasicExtractor: extracted value ([problem_7_0_1_] : [BIGINT]) - [4]
2020-11-25 21:26:12,490 TRACE  [main] BasicExtractor: extracted value ([problem_7_0_0_] : [BIGINT]) - [4]
2020-11-25 21:26:12,490 TRACE  [main] BasicExtractor: extracted value ([id1_0_0_] : [BIGINT]) - [23]
2020-11-25 21:26:12,491 TRACE  [main] BasicExtractor: extracted value ([id1_0_1_] : [BIGINT]) - [24]
2020-11-25 21:26:12,491 TRACE  [main] BasicExtractor: extracted value ([binary_v2_0_1_] : [BLOB]) - [null]
2020-11-25 21:26:12,491 TRACE  [main] BasicExtractor: extracted value ([float_va3_0_1_] : [DOUBLE]) - [6.0]
2020-11-25 21:26:12,491 TRACE  [main] BasicExtractor: extracted value ([i4_0_1_] : [INTEGER]) - [0]
2020-11-25 21:26:12,491 TRACE  [main] BasicExtractor: extracted value ([is_condi5_0_1_] : [BOOLEAN]) - [true]
2020-11-25 21:26:12,492 TRACE  [main] BasicExtractor: extracted value ([j6_0_1_] : [INTEGER]) - [6]
2020-11-25 21:26:12,492 TRACE  [main] BasicExtractor: extracted value ([problem_7_0_1_] : [BIGINT]) - [4]
2020-11-25 21:26:12,492 TRACE  [main] BasicExtractor: extracted value ([problem_7_0_0_] : [BIGINT]) - [4]
2020-11-25 21:26:12,492 TRACE  [main] BasicExtractor: extracted value ([id1_0_0_] : [BIGINT]) - [24]
2020-11-25 21:26:12,492 TRACE  [main] BasicExtractor: extracted value ([id1_0_1_] : [BIGINT]) - [25]
2020-11-25 21:26:12,493 TRACE  [main] BasicExtractor: extracted value ([binary_v2_0_1_] : [BLOB]) - [null]
2020-11-25 21:26:12,493 TRACE  [main] BasicExtractor: extracted value ([float_va3_0_1_] : [DOUBLE]) - [7.0]
2020-11-25 21:26:12,493 TRACE  [main] BasicExtractor: extracted value ([i4_0_1_] : [INTEGER]) - [0]
2020-11-25 21:26:12,493 TRACE  [main] BasicExtractor: extracted value ([is_condi5_0_1_] : [BOOLEAN]) - [true]
2020-11-25 21:26:12,493 TRACE  [main] BasicExtractor: extracted value ([j6_0_1_] : [INTEGER]) - [7]
2020-11-25 21:26:12,493 TRACE  [main] BasicExtractor: extracted value ([problem_7_0_1_] : [BIGINT]) - [4]
2020-11-25 21:26:12,493 TRACE  [main] BasicExtractor: extracted value ([problem_7_0_0_] : [BIGINT]) - [4]
2020-11-25 21:26:12,493 TRACE  [main] BasicExtractor: extracted value ([id1_0_0_] : [BIGINT]) - [25]
2020-11-25 21:26:12,494 TRACE  [main] BasicExtractor: extracted value ([id1_0_1_] : [BIGINT]) - [26]
2020-11-25 21:26:12,494 TRACE  [main] BasicExtractor: extracted value ([binary_v2_0_1_] : [BLOB]) - [null]
2020-11-25 21:26:12,494 TRACE  [main] BasicExtractor: extracted value ([float_va3_0_1_] : [DOUBLE]) - [8.0]
2020-11-25 21:26:12,494 TRACE  [main] BasicExtractor: extracted value ([i4_0_1_] : [INTEGER]) - [0]
2020-11-25 21:26:12,494 TRACE  [main] BasicExtractor: extracted value ([is_condi5_0_1_] : [BOOLEAN]) - [true]
2020-11-25 21:26:12,494 TRACE  [main] BasicExtractor: extracted value ([j6_0_1_] : [INTEGER]) - [8]
2020-11-25 21:26:12,494 TRACE  [main] BasicExtractor: extracted value ([problem_7_0_1_] : [BIGINT]) - [4]
2020-11-25 21:26:12,495 TRACE  [main] BasicExtractor: extracted value ([problem_7_0_0_] : [BIGINT]) - [4]
2020-11-25 21:26:12,495 TRACE  [main] BasicExtractor: extracted value ([id1_0_0_] : [BIGINT]) - [26]
2020-11-25 21:26:12,495 TRACE  [main] BasicExtractor: extracted value ([id1_0_1_] : [BIGINT]) - [27]
2020-11-25 21:26:12,496 TRACE  [main] BasicExtractor: extracted value ([binary_v2_0_1_] : [BLOB]) - [null]
2020-11-25 21:26:12,496 TRACE  [main] BasicExtractor: extracted value ([float_va3_0_1_] : [DOUBLE]) - [9.0]
2020-11-25 21:26:12,496 TRACE  [main] BasicExtractor: extracted value ([i4_0_1_] : [INTEGER]) - [0]
2020-11-25 21:26:12,496 TRACE  [main] BasicExtractor: extracted value ([is_condi5_0_1_] : [BOOLEAN]) - [true]
2020-11-25 21:26:12,496 TRACE  [main] BasicExtractor: extracted value ([j6_0_1_] : [INTEGER]) - [9]
2020-11-25 21:26:12,496 TRACE  [main] BasicExtractor: extracted value ([problem_7_0_1_] : [BIGINT]) - [4]
2020-11-25 21:26:12,497 TRACE  [main] BasicExtractor: extracted value ([problem_7_0_0_] : [BIGINT]) - [4]
2020-11-25 21:26:12,497 TRACE  [main] BasicExtractor: extracted value ([id1_0_0_] : [BIGINT]) - [27]
2020-11-25 21:26:12,498 TRACE  [main] BasicBinder: binding parameter [1] as [BIGINT] - [4]
2020-11-25 21:26:12,499 TRACE  [main] BasicBinder: binding parameter [1] as [BIGINT] - [3]
2020-11-25 21:26:12,500 TRACE  [main] BasicExtractor: extracted value ([id1_0_1_] : [BIGINT]) - [12]
2020-11-25 21:26:12,501 TRACE  [main] BasicExtractor: extracted value ([binary_v2_0_1_] : [BLOB]) - [null]
2020-11-25 21:26:12,501 TRACE  [main] BasicExtractor: extracted value ([float_va3_0_1_] : [DOUBLE]) - [1.0]
2020-11-25 21:26:12,501 TRACE  [main] BasicExtractor: extracted value ([i4_0_1_] : [INTEGER]) - [0]
2020-11-25 21:26:12,501 TRACE  [main] BasicExtractor: extracted value ([is_condi5_0_1_] : [BOOLEAN]) - [true]
2020-11-25 21:26:12,501 TRACE  [main] BasicExtractor: extracted value ([j6_0_1_] : [INTEGER]) - [0]
2020-11-25 21:26:12,501 TRACE  [main] BasicExtractor: extracted value ([problem_7_0_1_] : [BIGINT]) - [3]
2020-11-25 21:26:12,502 TRACE  [main] BasicExtractor: extracted value ([problem_7_0_0_] : [BIGINT]) - [3]
2020-11-25 21:26:12,502 TRACE  [main] BasicExtractor: extracted value ([id1_0_0_] : [BIGINT]) - [12]
2020-11-25 21:26:12,502 TRACE  [main] BasicExtractor: extracted value ([id1_0_1_] : [BIGINT]) - [13]
2020-11-25 21:26:12,502 TRACE  [main] BasicExtractor: extracted value ([binary_v2_0_1_] : [BLOB]) - [null]
2020-11-25 21:26:12,503 TRACE  [main] BasicExtractor: extracted value ([float_va3_0_1_] : [DOUBLE]) - [2.718281828459045]
2020-11-25 21:26:12,503 TRACE  [main] BasicExtractor: extracted value ([i4_0_1_] : [INTEGER]) - [0]
2020-11-25 21:26:12,503 TRACE  [main] BasicExtractor: extracted value ([is_condi5_0_1_] : [BOOLEAN]) - [true]
2020-11-25 21:26:12,503 TRACE  [main] BasicExtractor: extracted value ([j6_0_1_] : [INTEGER]) - [1]
2020-11-25 21:26:12,503 TRACE  [main] BasicExtractor: extracted value ([problem_7_0_1_] : [BIGINT]) - [3]
2020-11-25 21:26:12,503 TRACE  [main] BasicExtractor: extracted value ([problem_7_0_0_] : [BIGINT]) - [3]
2020-11-25 21:26:12,503 TRACE  [main] BasicExtractor: extracted value ([id1_0_0_] : [BIGINT]) - [13]
2020-11-25 21:26:12,504 TRACE  [main] BasicExtractor: extracted value ([id1_0_1_] : [BIGINT]) - [14]
2020-11-25 21:26:12,504 TRACE  [main] BasicExtractor: extracted value ([binary_v2_0_1_] : [BLOB]) - [null]
2020-11-25 21:26:12,504 TRACE  [main] BasicExtractor: extracted value ([float_va3_0_1_] : [DOUBLE]) - [7.38905609893065]
2020-11-25 21:26:12,504 TRACE  [main] BasicExtractor: extracted value ([i4_0_1_] : [INTEGER]) - [0]
2020-11-25 21:26:12,505 TRACE  [main] BasicExtractor: extracted value ([is_condi5_0_1_] : [BOOLEAN]) - [true]
2020-11-25 21:26:12,505 TRACE  [main] BasicExtractor: extracted value ([j6_0_1_] : [INTEGER]) - [2]
2020-11-25 21:26:12,505 TRACE  [main] BasicExtractor: extracted value ([problem_7_0_1_] : [BIGINT]) - [3]
2020-11-25 21:26:12,505 TRACE  [main] BasicExtractor: extracted value ([problem_7_0_0_] : [BIGINT]) - [3]
2020-11-25 21:26:12,505 TRACE  [main] BasicExtractor: extracted value ([id1_0_0_] : [BIGINT]) - [14]
2020-11-25 21:26:12,506 TRACE  [main] BasicExtractor: extracted value ([id1_0_1_] : [BIGINT]) - [15]
2020-11-25 21:26:12,506 TRACE  [main] BasicExtractor: extracted value ([binary_v2_0_1_] : [BLOB]) - [null]
2020-11-25 21:26:12,506 TRACE  [main] BasicExtractor: extracted value ([float_va3_0_1_] : [DOUBLE]) - [20.085536923187668]
2020-11-25 21:26:12,506 TRACE  [main] BasicExtractor: extracted value ([i4_0_1_] : [INTEGER]) - [0]
2020-11-25 21:26:12,506 TRACE  [main] BasicExtractor: extracted value ([is_condi5_0_1_] : [BOOLEAN]) - [true]
2020-11-25 21:26:12,507 TRACE  [main] BasicExtractor: extracted value ([j6_0_1_] : [INTEGER]) - [3]
2020-11-25 21:26:12,507 TRACE  [main] BasicExtractor: extracted value ([problem_7_0_1_] : [BIGINT]) - [3]
2020-11-25 21:26:12,507 TRACE  [main] BasicExtractor: extracted value ([problem_7_0_0_] : [BIGINT]) - [3]
2020-11-25 21:26:12,507 TRACE  [main] BasicExtractor: extracted value ([id1_0_0_] : [BIGINT]) - [15]
2020-11-25 21:26:12,508 TRACE  [main] BasicExtractor: extracted value ([id1_0_1_] : [BIGINT]) - [16]
2020-11-25 21:26:12,508 TRACE  [main] BasicExtractor: extracted value ([binary_v2_0_1_] : [BLOB]) - [null]
2020-11-25 21:26:12,509 TRACE  [main] BasicExtractor: extracted value ([float_va3_0_1_] : [DOUBLE]) - [54.598150033144236]
2020-11-25 21:26:12,509 TRACE  [main] BasicExtractor: extracted value ([i4_0_1_] : [INTEGER]) - [0]
2020-11-25 21:26:12,509 TRACE  [main] BasicExtractor: extracted value ([is_condi5_0_1_] : [BOOLEAN]) - [true]
2020-11-25 21:26:12,509 TRACE  [main] BasicExtractor: extracted value ([j6_0_1_] : [INTEGER]) - [4]
2020-11-25 21:26:12,510 TRACE  [main] BasicExtractor: extracted value ([problem_7_0_1_] : [BIGINT]) - [3]
2020-11-25 21:26:12,510 TRACE  [main] BasicExtractor: extracted value ([problem_7_0_0_] : [BIGINT]) - [3]
2020-11-25 21:26:12,510 TRACE  [main] BasicExtractor: extracted value ([id1_0_0_] : [BIGINT]) - [16]
2020-11-25 21:26:12,510 TRACE  [main] BasicExtractor: extracted value ([id1_0_1_] : [BIGINT]) - [17]
2020-11-25 21:26:12,511 TRACE  [main] BasicExtractor: extracted value ([binary_v2_0_1_] : [BLOB]) - [null]
2020-11-25 21:26:12,511 TRACE  [main] BasicExtractor: extracted value ([float_va3_0_1_] : [DOUBLE]) - [148.4131591025766]
2020-11-25 21:26:12,511 TRACE  [main] BasicExtractor: extracted value ([i4_0_1_] : [INTEGER]) - [0]
2020-11-25 21:26:12,511 TRACE  [main] BasicExtractor: extracted value ([is_condi5_0_1_] : [BOOLEAN]) - [true]
2020-11-25 21:26:12,511 TRACE  [main] BasicExtractor: extracted value ([j6_0_1_] : [INTEGER]) - [5]
2020-11-25 21:26:12,511 TRACE  [main] BasicExtractor: extracted value ([problem_7_0_1_] : [BIGINT]) - [3]
2020-11-25 21:26:12,512 TRACE  [main] BasicExtractor: extracted value ([problem_7_0_0_] : [BIGINT]) - [3]
2020-11-25 21:26:12,512 TRACE  [main] BasicExtractor: extracted value ([id1_0_0_] : [BIGINT]) - [17]
2020-11-25 21:26:12,513 TRACE  [main] BasicBinder: binding parameter [1] as [BIGINT] - [3]
2020-11-25 21:26:12,514 TRACE  [main] BasicBinder: binding parameter [1] as [BIGINT] - [2]
2020-11-25 21:26:12,514 TRACE  [main] BasicExtractor: extracted value ([id1_0_1_] : [BIGINT]) - [6]
2020-11-25 21:26:12,515 TRACE  [main] BasicExtractor: extracted value ([binary_v2_0_1_] : [BLOB]) - [null]
2020-11-25 21:26:12,515 TRACE  [main] BasicExtractor: extracted value ([float_va3_0_1_] : [DOUBLE]) - [1.01]
2020-11-25 21:26:12,515 TRACE  [main] BasicExtractor: extracted value ([i4_0_1_] : [INTEGER]) - [0]
2020-11-25 21:26:12,516 TRACE  [main] BasicExtractor: extracted value ([is_condi5_0_1_] : [BOOLEAN]) - [true]
2020-11-25 21:26:12,516 TRACE  [main] BasicExtractor: extracted value ([j6_0_1_] : [INTEGER]) - [0]
2020-11-25 21:26:12,516 TRACE  [main] BasicExtractor: extracted value ([problem_7_0_1_] : [BIGINT]) - [2]
2020-11-25 21:26:12,516 TRACE  [main] BasicExtractor: extracted value ([problem_7_0_0_] : [BIGINT]) - [2]
2020-11-25 21:26:12,516 TRACE  [main] BasicExtractor: extracted value ([id1_0_0_] : [BIGINT]) - [6]
2020-11-25 21:26:12,517 TRACE  [main] BasicExtractor: extracted value ([id1_0_1_] : [BIGINT]) - [7]
2020-11-25 21:26:12,517 TRACE  [main] BasicExtractor: extracted value ([binary_v2_0_1_] : [BLOB]) - [null]
2020-11-25 21:26:12,517 TRACE  [main] BasicExtractor: extracted value ([float_va3_0_1_] : [DOUBLE]) - [2.718281828459045]
2020-11-25 21:26:12,517 TRACE  [main] BasicExtractor: extracted value ([i4_0_1_] : [INTEGER]) - [0]
2020-11-25 21:26:12,517 TRACE  [main] BasicExtractor: extracted value ([is_condi5_0_1_] : [BOOLEAN]) - [true]
2020-11-25 21:26:12,517 TRACE  [main] BasicExtractor: extracted value ([j6_0_1_] : [INTEGER]) - [1]
2020-11-25 21:26:12,518 TRACE  [main] BasicExtractor: extracted value ([problem_7_0_1_] : [BIGINT]) - [2]
2020-11-25 21:26:12,518 TRACE  [main] BasicExtractor: extracted value ([problem_7_0_0_] : [BIGINT]) - [2]
2020-11-25 21:26:12,518 TRACE  [main] BasicExtractor: extracted value ([id1_0_0_] : [BIGINT]) - [7]
2020-11-25 21:26:12,518 TRACE  [main] BasicExtractor: extracted value ([id1_0_1_] : [BIGINT]) - [8]
2020-11-25 21:26:12,518 TRACE  [main] BasicExtractor: extracted value ([binary_v2_0_1_] : [BLOB]) - [null]
2020-11-25 21:26:12,519 TRACE  [main] BasicExtractor: extracted value ([float_va3_0_1_] : [DOUBLE]) - [7.38905609893065]
2020-11-25 21:26:12,519 TRACE  [main] BasicExtractor: extracted value ([i4_0_1_] : [INTEGER]) - [0]
2020-11-25 21:26:12,519 TRACE  [main] BasicExtractor: extracted value ([is_condi5_0_1_] : [BOOLEAN]) - [true]
2020-11-25 21:26:12,519 TRACE  [main] BasicExtractor: extracted value ([j6_0_1_] : [INTEGER]) - [2]
2020-11-25 21:26:12,519 TRACE  [main] BasicExtractor: extracted value ([problem_7_0_1_] : [BIGINT]) - [2]
2020-11-25 21:26:12,519 TRACE  [main] BasicExtractor: extracted value ([problem_7_0_0_] : [BIGINT]) - [2]
2020-11-25 21:26:12,519 TRACE  [main] BasicExtractor: extracted value ([id1_0_0_] : [BIGINT]) - [8]
2020-11-25 21:26:12,520 TRACE  [main] BasicExtractor: extracted value ([id1_0_1_] : [BIGINT]) - [9]
2020-11-25 21:26:12,520 TRACE  [main] BasicExtractor: extracted value ([binary_v2_0_1_] : [BLOB]) - [null]
2020-11-25 21:26:12,520 TRACE  [main] BasicExtractor: extracted value ([float_va3_0_1_] : [DOUBLE]) - [20.085536923187668]
2020-11-25 21:26:12,520 TRACE  [main] BasicExtractor: extracted value ([i4_0_1_] : [INTEGER]) - [0]
2020-11-25 21:26:12,521 TRACE  [main] BasicExtractor: extracted value ([is_condi5_0_1_] : [BOOLEAN]) - [true]
2020-11-25 21:26:12,521 TRACE  [main] BasicExtractor: extracted value ([j6_0_1_] : [INTEGER]) - [3]
2020-11-25 21:26:12,521 TRACE  [main] BasicExtractor: extracted value ([problem_7_0_1_] : [BIGINT]) - [2]
2020-11-25 21:26:12,522 TRACE  [main] BasicExtractor: extracted value ([problem_7_0_0_] : [BIGINT]) - [2]
2020-11-25 21:26:12,522 TRACE  [main] BasicExtractor: extracted value ([id1_0_0_] : [BIGINT]) - [9]
2020-11-25 21:26:12,522 TRACE  [main] BasicExtractor: extracted value ([id1_0_1_] : [BIGINT]) - [10]
2020-11-25 21:26:12,522 TRACE  [main] BasicExtractor: extracted value ([binary_v2_0_1_] : [BLOB]) - [null]
2020-11-25 21:26:12,522 TRACE  [main] BasicExtractor: extracted value ([float_va3_0_1_] : [DOUBLE]) - [54.598150033144236]
2020-11-25 21:26:12,522 TRACE  [main] BasicExtractor: extracted value ([i4_0_1_] : [INTEGER]) - [0]
2020-11-25 21:26:12,523 TRACE  [main] BasicExtractor: extracted value ([is_condi5_0_1_] : [BOOLEAN]) - [true]
2020-11-25 21:26:12,523 TRACE  [main] BasicExtractor: extracted value ([j6_0_1_] : [INTEGER]) - [4]
2020-11-25 21:26:12,523 TRACE  [main] BasicExtractor: extracted value ([problem_7_0_1_] : [BIGINT]) - [2]
2020-11-25 21:26:12,523 TRACE  [main] BasicExtractor: extracted value ([problem_7_0_0_] : [BIGINT]) - [2]
2020-11-25 21:26:12,523 TRACE  [main] BasicExtractor: extracted value ([id1_0_0_] : [BIGINT]) - [10]
2020-11-25 21:26:12,523 TRACE  [main] BasicExtractor: extracted value ([id1_0_1_] : [BIGINT]) - [11]
2020-11-25 21:26:12,524 TRACE  [main] BasicExtractor: extracted value ([binary_v2_0_1_] : [BLOB]) - [null]
2020-11-25 21:26:12,524 TRACE  [main] BasicExtractor: extracted value ([float_va3_0_1_] : [DOUBLE]) - [148.4131591025766]
2020-11-25 21:26:12,524 TRACE  [main] BasicExtractor: extracted value ([i4_0_1_] : [INTEGER]) - [0]
2020-11-25 21:26:12,524 TRACE  [main] BasicExtractor: extracted value ([is_condi5_0_1_] : [BOOLEAN]) - [true]
2020-11-25 21:26:12,524 TRACE  [main] BasicExtractor: extracted value ([j6_0_1_] : [INTEGER]) - [5]
2020-11-25 21:26:12,525 TRACE  [main] BasicExtractor: extracted value ([problem_7_0_1_] : [BIGINT]) - [2]
2020-11-25 21:26:12,525 TRACE  [main] BasicExtractor: extracted value ([problem_7_0_0_] : [BIGINT]) - [2]
2020-11-25 21:26:12,525 TRACE  [main] BasicExtractor: extracted value ([id1_0_0_] : [BIGINT]) - [11]
2020-11-25 21:26:12,526 TRACE  [main] BasicBinder: binding parameter [1] as [BIGINT] - [2]
2020-11-25 21:26:12,528 TRACE  [main] BasicBinder: binding parameter [1] as [BIGINT] - [1]
2020-11-25 21:26:12,528 TRACE  [main] BasicExtractor: extracted value ([id1_0_1_] : [BIGINT]) - [1]
2020-11-25 21:26:12,529 TRACE  [main] BasicExtractor: extracted value ([binary_v2_0_1_] : [BLOB]) - [null]
2020-11-25 21:26:12,529 TRACE  [main] BasicExtractor: extracted value ([float_va3_0_1_] : [DOUBLE]) - [1.0]
2020-11-25 21:26:12,529 TRACE  [main] BasicExtractor: extracted value ([i4_0_1_] : [INTEGER]) - [0]
2020-11-25 21:26:12,529 TRACE  [main] BasicExtractor: extracted value ([is_condi5_0_1_] : [BOOLEAN]) - [true]
2020-11-25 21:26:12,529 TRACE  [main] BasicExtractor: extracted value ([j6_0_1_] : [INTEGER]) - [0]
2020-11-25 21:26:12,529 TRACE  [main] BasicExtractor: extracted value ([problem_7_0_1_] : [BIGINT]) - [1]
2020-11-25 21:26:12,530 TRACE  [main] BasicExtractor: extracted value ([problem_7_0_0_] : [BIGINT]) - [1]
2020-11-25 21:26:12,530 TRACE  [main] BasicExtractor: extracted value ([id1_0_0_] : [BIGINT]) - [1]
2020-11-25 21:26:12,530 TRACE  [main] BasicExtractor: extracted value ([id1_0_1_] : [BIGINT]) - [2]
2020-11-25 21:26:12,530 TRACE  [main] BasicExtractor: extracted value ([binary_v2_0_1_] : [BLOB]) - [null]
2020-11-25 21:26:12,530 TRACE  [main] BasicExtractor: extracted value ([float_va3_0_1_] : [DOUBLE]) - [2.0]
2020-11-25 21:26:12,530 TRACE  [main] BasicExtractor: extracted value ([i4_0_1_] : [INTEGER]) - [0]
2020-11-25 21:26:12,531 TRACE  [main] BasicExtractor: extracted value ([is_condi5_0_1_] : [BOOLEAN]) - [true]
2020-11-25 21:26:12,531 TRACE  [main] BasicExtractor: extracted value ([j6_0_1_] : [INTEGER]) - [1]
2020-11-25 21:26:12,531 TRACE  [main] BasicExtractor: extracted value ([problem_7_0_1_] : [BIGINT]) - [1]
2020-11-25 21:26:12,531 TRACE  [main] BasicExtractor: extracted value ([problem_7_0_0_] : [BIGINT]) - [1]
2020-11-25 21:26:12,531 TRACE  [main] BasicExtractor: extracted value ([id1_0_0_] : [BIGINT]) - [2]
2020-11-25 21:26:12,531 TRACE  [main] BasicExtractor: extracted value ([id1_0_1_] : [BIGINT]) - [3]
2020-11-25 21:26:12,532 TRACE  [main] BasicExtractor: extracted value ([binary_v2_0_1_] : [BLOB]) - [null]
2020-11-25 21:26:12,532 TRACE  [main] BasicExtractor: extracted value ([float_va3_0_1_] : [DOUBLE]) - [1.0]
2020-11-25 21:26:12,532 TRACE  [main] BasicExtractor: extracted value ([i4_0_1_] : [INTEGER]) - [0]
2020-11-25 21:26:12,532 TRACE  [main] BasicExtractor: extracted value ([is_condi5_0_1_] : [BOOLEAN]) - [true]
2020-11-25 21:26:12,532 TRACE  [main] BasicExtractor: extracted value ([j6_0_1_] : [INTEGER]) - [2]
2020-11-25 21:26:12,532 TRACE  [main] BasicExtractor: extracted value ([problem_7_0_1_] : [BIGINT]) - [1]
2020-11-25 21:26:12,532 TRACE  [main] BasicExtractor: extracted value ([problem_7_0_0_] : [BIGINT]) - [1]
2020-11-25 21:26:12,533 TRACE  [main] BasicExtractor: extracted value ([id1_0_0_] : [BIGINT]) - [3]
2020-11-25 21:26:12,533 TRACE  [main] BasicExtractor: extracted value ([id1_0_1_] : [BIGINT]) - [4]
2020-11-25 21:26:12,533 TRACE  [main] BasicExtractor: extracted value ([binary_v2_0_1_] : [BLOB]) - [null]
2020-11-25 21:26:12,533 TRACE  [main] BasicExtractor: extracted value ([float_va3_0_1_] : [DOUBLE]) - [1.0]
2020-11-25 21:26:12,533 TRACE  [main] BasicExtractor: extracted value ([i4_0_1_] : [INTEGER]) - [0]
2020-11-25 21:26:12,534 TRACE  [main] BasicExtractor: extracted value ([is_condi5_0_1_] : [BOOLEAN]) - [false]
2020-11-25 21:26:12,534 TRACE  [main] BasicExtractor: extracted value ([j6_0_1_] : [INTEGER]) - [0]
2020-11-25 21:26:12,534 TRACE  [main] BasicExtractor: extracted value ([problem_7_0_1_] : [BIGINT]) - [1]
2020-11-25 21:26:12,534 TRACE  [main] BasicExtractor: extracted value ([problem_7_0_0_] : [BIGINT]) - [1]
2020-11-25 21:26:12,534 TRACE  [main] BasicExtractor: extracted value ([id1_0_0_] : [BIGINT]) - [4]
2020-11-25 21:26:12,535 TRACE  [main] BasicExtractor: extracted value ([id1_0_1_] : [BIGINT]) - [5]
2020-11-25 21:26:12,535 TRACE  [main] BasicExtractor: extracted value ([binary_v2_0_1_] : [BLOB]) - [null]
2020-11-25 21:26:12,535 TRACE  [main] BasicExtractor: extracted value ([float_va3_0_1_] : [DOUBLE]) - [1.0]
2020-11-25 21:26:12,535 TRACE  [main] BasicExtractor: extracted value ([i4_0_1_] : [INTEGER]) - [0]
2020-11-25 21:26:12,535 TRACE  [main] BasicExtractor: extracted value ([is_condi5_0_1_] : [BOOLEAN]) - [false]
2020-11-25 21:26:12,536 TRACE  [main] BasicExtractor: extracted value ([j6_0_1_] : [INTEGER]) - [1]
2020-11-25 21:26:12,536 TRACE  [main] BasicExtractor: extracted value ([problem_7_0_1_] : [BIGINT]) - [1]
2020-11-25 21:26:12,536 TRACE  [main] BasicExtractor: extracted value ([problem_7_0_0_] : [BIGINT]) - [1]
2020-11-25 21:26:12,536 TRACE  [main] BasicExtractor: extracted value ([id1_0_0_] : [BIGINT]) - [5]
2020-11-25 21:26:12,537 TRACE  [main] BasicBinder: binding parameter [1] as [BIGINT] - [1]
2020-11-25 21:26:12,557 TRACE  [main] BasicBinder: binding parameter [1] as [BIGINT] - [7]
2020-11-25 21:26:12,557 TRACE  [main] BasicExtractor: extracted value ([id1_1_2_] : [BIGINT]) - [null]
2020-11-25 21:26:12,558 TRACE  [main] BasicExtractor: extracted value ([id1_0_4_] : [BIGINT]) - [null]
2020-11-25 21:26:12,558 TRACE  [main] BasicExtractor: extracted value ([descript2_1_0_] : [BLOB]) - [[112, 114, 111, 98, 108, 101, 109, 100, 101, 115, 99, 114, 105, 112, 116, 105, 111, 110]]
2020-11-25 21:26:12,558 TRACE  [main] BasicExtractor: extracted value ([is_solve3_1_0_] : [BOOLEAN]) - [true]
2020-11-25 21:26:12,558 TRACE  [main] BasicExtractor: extracted value ([kind4_1_0_] : [VARCHAR]) - [POLYNOMIAL]
2020-11-25 21:26:12,558 TRACE  [main] BasicExtractor: extracted value ([matrix_d5_1_0_] : [INTEGER]) - [1]
2020-11-25 21:26:12,558 TRACE  [main] BasicExtractor: extracted value ([parent_p7_1_0_] : [BIGINT]) - [null]
2020-11-25 21:26:12,558 TRACE  [main] BasicExtractor: extracted value ([problem_6_1_0_] : [INTEGER]) - [0]
2020-11-25 21:26:12,559 TRACE  [main] BasicExtractor: extracted value ([problem_7_0_3_] : [BIGINT]) - [null]
2020-11-25 21:26:12,559 TRACE  [main] BasicExtractor: extracted value ([parent_p7_1_1_] : [BIGINT]) - [null]
2020-11-25 21:26:12,559 TRACE  [main] CollectionType: Created collection wrapper: [com.sf.back.entities.Problem.matrixes#7]
2020-11-25 21:26:12,559 TRACE  [main] BasicBinder: binding parameter [1] as [BIGINT] - [7]
2020-11-25 21:26:12,560 TRACE  [main] BasicExtractor: extracted value ([id1_0_1_] : [BIGINT]) - [40]
2020-11-25 21:26:12,560 TRACE  [main] BasicExtractor: extracted value ([binary_v2_0_1_] : [BLOB]) - [null]
2020-11-25 21:26:12,560 TRACE  [main] BasicExtractor: extracted value ([float_va3_0_1_] : [DOUBLE]) - [1.0]
2020-11-25 21:26:12,560 TRACE  [main] BasicExtractor: extracted value ([i4_0_1_] : [INTEGER]) - [0]
2020-11-25 21:26:12,560 TRACE  [main] BasicExtractor: extracted value ([is_condi5_0_1_] : [BOOLEAN]) - [true]
2020-11-25 21:26:12,560 TRACE  [main] BasicExtractor: extracted value ([j6_0_1_] : [INTEGER]) - [0]
2020-11-25 21:26:12,560 TRACE  [main] BasicExtractor: extracted value ([problem_7_0_1_] : [BIGINT]) - [7]
2020-11-25 21:26:12,561 TRACE  [main] BasicExtractor: extracted value ([problem_7_0_0_] : [BIGINT]) - [7]
2020-11-25 21:26:12,561 TRACE  [main] BasicExtractor: extracted value ([id1_0_0_] : [BIGINT]) - [40]
2020-11-25 21:26:12,561 TRACE  [main] BasicExtractor: extracted value ([id1_0_1_] : [BIGINT]) - [41]
2020-11-25 21:26:12,561 TRACE  [main] BasicExtractor: extracted value ([binary_v2_0_1_] : [BLOB]) - [null]
2020-11-25 21:26:12,561 TRACE  [main] BasicExtractor: extracted value ([float_va3_0_1_] : [DOUBLE]) - [-3.0]
2020-11-25 21:26:12,561 TRACE  [main] BasicExtractor: extracted value ([i4_0_1_] : [INTEGER]) - [0]
2020-11-25 21:26:12,561 TRACE  [main] BasicExtractor: extracted value ([is_condi5_0_1_] : [BOOLEAN]) - [true]
2020-11-25 21:26:12,561 TRACE  [main] BasicExtractor: extracted value ([j6_0_1_] : [INTEGER]) - [1]
2020-11-25 21:26:12,562 TRACE  [main] BasicExtractor: extracted value ([problem_7_0_1_] : [BIGINT]) - [7]
2020-11-25 21:26:12,562 TRACE  [main] BasicExtractor: extracted value ([problem_7_0_0_] : [BIGINT]) - [7]
2020-11-25 21:26:12,562 TRACE  [main] BasicExtractor: extracted value ([id1_0_0_] : [BIGINT]) - [41]
2020-11-25 21:26:12,562 TRACE  [main] BasicExtractor: extracted value ([id1_0_1_] : [BIGINT]) - [42]
2020-11-25 21:26:12,564 TRACE  [main] BasicExtractor: extracted value ([binary_v2_0_1_] : [BLOB]) - [null]
2020-11-25 21:26:12,564 TRACE  [main] BasicExtractor: extracted value ([float_va3_0_1_] : [DOUBLE]) - [2.0]
2020-11-25 21:26:12,564 TRACE  [main] BasicExtractor: extracted value ([i4_0_1_] : [INTEGER]) - [0]
2020-11-25 21:26:12,564 TRACE  [main] BasicExtractor: extracted value ([is_condi5_0_1_] : [BOOLEAN]) - [true]
2020-11-25 21:26:12,565 TRACE  [main] BasicExtractor: extracted value ([j6_0_1_] : [INTEGER]) - [2]
2020-11-25 21:26:12,565 TRACE  [main] BasicExtractor: extracted value ([problem_7_0_1_] : [BIGINT]) - [7]
2020-11-25 21:26:12,565 TRACE  [main] BasicExtractor: extracted value ([problem_7_0_0_] : [BIGINT]) - [7]
2020-11-25 21:26:12,565 TRACE  [main] BasicExtractor: extracted value ([id1_0_0_] : [BIGINT]) - [42]
2020-11-25 21:26:12,565 TRACE  [main] BasicExtractor: extracted value ([id1_0_1_] : [BIGINT]) - [43]
2020-11-25 21:26:12,566 TRACE  [main] BasicExtractor: extracted value ([binary_v2_0_1_] : [BLOB]) - [null]
2020-11-25 21:26:12,566 TRACE  [main] BasicExtractor: extracted value ([float_va3_0_1_] : [DOUBLE]) - [1.0]
2020-11-25 21:26:12,566 TRACE  [main] BasicExtractor: extracted value ([i4_0_1_] : [INTEGER]) - [0]
2020-11-25 21:26:12,566 TRACE  [main] BasicExtractor: extracted value ([is_condi5_0_1_] : [BOOLEAN]) - [false]
2020-11-25 21:26:12,566 TRACE  [main] BasicExtractor: extracted value ([j6_0_1_] : [INTEGER]) - [0]
2020-11-25 21:26:12,566 TRACE  [main] BasicExtractor: extracted value ([problem_7_0_1_] : [BIGINT]) - [7]
2020-11-25 21:26:12,567 TRACE  [main] BasicExtractor: extracted value ([problem_7_0_0_] : [BIGINT]) - [7]
2020-11-25 21:26:12,568 TRACE  [main] BasicExtractor: extracted value ([id1_0_0_] : [BIGINT]) - [43]
2020-11-25 21:26:12,568 TRACE  [main] BasicExtractor: extracted value ([id1_0_1_] : [BIGINT]) - [44]
2020-11-25 21:26:12,568 TRACE  [main] BasicExtractor: extracted value ([binary_v2_0_1_] : [BLOB]) - [null]
2020-11-25 21:26:12,568 TRACE  [main] BasicExtractor: extracted value ([float_va3_0_1_] : [DOUBLE]) - [2.0]
2020-11-25 21:26:12,569 TRACE  [main] BasicExtractor: extracted value ([i4_0_1_] : [INTEGER]) - [0]
2020-11-25 21:26:12,569 TRACE  [main] BasicExtractor: extracted value ([is_condi5_0_1_] : [BOOLEAN]) - [false]
2020-11-25 21:26:12,569 TRACE  [main] BasicExtractor: extracted value ([j6_0_1_] : [INTEGER]) - [1]
2020-11-25 21:26:12,569 TRACE  [main] BasicExtractor: extracted value ([problem_7_0_1_] : [BIGINT]) - [7]
2020-11-25 21:26:12,569 TRACE  [main] BasicExtractor: extracted value ([problem_7_0_0_] : [BIGINT]) - [7]
2020-11-25 21:26:12,569 TRACE  [main] BasicExtractor: extracted value ([id1_0_0_] : [BIGINT]) - [44]
2020-11-25 21:26:12,613 TRACE  [main] BasicBinder: binding parameter [1] as [BOOLEAN] - [false]
2020-11-25 21:26:12,613 TRACE  [main] BasicBinder: binding parameter [2] as [BIGINT] - [7]
2020-11-25 21:26:12,614 TRACE  [main] BasicExtractor: extracted value ([id1_0_] : [BIGINT]) - [43]
2020-11-25 21:26:12,614 TRACE  [main] BasicExtractor: extracted value ([binary_v2_0_] : [BLOB]) - [null]
2020-11-25 21:26:12,614 TRACE  [main] BasicExtractor: extracted value ([float_va3_0_] : [DOUBLE]) - [1.0]
2020-11-25 21:26:12,614 TRACE  [main] BasicExtractor: extracted value ([i4_0_] : [INTEGER]) - [0]
2020-11-25 21:26:12,614 TRACE  [main] BasicExtractor: extracted value ([is_condi5_0_] : [BOOLEAN]) - [false]
2020-11-25 21:26:12,615 TRACE  [main] BasicExtractor: extracted value ([j6_0_] : [INTEGER]) - [0]
2020-11-25 21:26:12,615 TRACE  [main] BasicExtractor: extracted value ([problem_7_0_] : [BIGINT]) - [7]
2020-11-25 21:26:12,615 TRACE  [main] BasicExtractor: extracted value ([id1_0_] : [BIGINT]) - [44]
2020-11-25 21:26:12,616 TRACE  [main] BasicExtractor: extracted value ([binary_v2_0_] : [BLOB]) - [null]
2020-11-25 21:26:12,616 TRACE  [main] BasicExtractor: extracted value ([float_va3_0_] : [DOUBLE]) - [2.0]
2020-11-25 21:26:12,616 TRACE  [main] BasicExtractor: extracted value ([i4_0_] : [INTEGER]) - [0]
2020-11-25 21:26:12,616 TRACE  [main] BasicExtractor: extracted value ([is_condi5_0_] : [BOOLEAN]) - [false]
2020-11-25 21:26:12,616 TRACE  [main] BasicExtractor: extracted value ([j6_0_] : [INTEGER]) - [1]
2020-11-25 21:26:12,617 TRACE  [main] BasicExtractor: extracted value ([problem_7_0_] : [BIGINT]) - [7]
2020-11-25 21:26:12,617 TRACE  [main] BasicBinder: binding parameter [1] as [BIGINT] - [7]
2020-11-25 21:26:12,619 TRACE  [main] BasicExtractor: extracted value ([id1_1_2_] : [BIGINT]) - [null]
2020-11-25 21:26:12,619 TRACE  [main] BasicExtractor: extracted value ([id1_0_4_] : [BIGINT]) - [null]
2020-11-25 21:26:12,619 TRACE  [main] BasicExtractor: extracted value ([descript2_1_0_] : [BLOB]) - [[112, 114, 111, 98, 108, 101, 109, 100, 101, 115, 99, 114, 105, 112, 116, 105, 111, 110]]
2020-11-25 21:26:12,620 TRACE  [main] BasicExtractor: extracted value ([is_solve3_1_0_] : [BOOLEAN]) - [true]
2020-11-25 21:26:12,620 TRACE  [main] BasicExtractor: extracted value ([kind4_1_0_] : [VARCHAR]) - [POLYNOMIAL]
2020-11-25 21:26:12,620 TRACE  [main] BasicExtractor: extracted value ([matrix_d5_1_0_] : [INTEGER]) - [1]
2020-11-25 21:26:12,620 TRACE  [main] BasicExtractor: extracted value ([parent_p7_1_0_] : [BIGINT]) - [null]
2020-11-25 21:26:12,620 TRACE  [main] BasicExtractor: extracted value ([problem_6_1_0_] : [INTEGER]) - [0]
2020-11-25 21:26:12,621 TRACE  [main] BasicExtractor: extracted value ([problem_7_0_3_] : [BIGINT]) - [null]
2020-11-25 21:26:12,621 TRACE  [main] BasicExtractor: extracted value ([parent_p7_1_1_] : [BIGINT]) - [null]
2020-11-25 21:26:12,621 TRACE  [main] CollectionType: Created collection wrapper: [com.sf.back.entities.Problem.matrixes#7]
2020-11-25 21:26:12,622 TRACE  [main] BasicBinder: binding parameter [1] as [BIGINT] - [7]
2020-11-25 21:26:12,623 TRACE  [main] BasicExtractor: extracted value ([id1_0_1_] : [BIGINT]) - [40]
2020-11-25 21:26:12,623 TRACE  [main] BasicExtractor: extracted value ([binary_v2_0_1_] : [BLOB]) - [null]
2020-11-25 21:26:12,623 TRACE  [main] BasicExtractor: extracted value ([float_va3_0_1_] : [DOUBLE]) - [1.0]
2020-11-25 21:26:12,624 TRACE  [main] BasicExtractor: extracted value ([i4_0_1_] : [INTEGER]) - [0]
2020-11-25 21:26:12,624 TRACE  [main] BasicExtractor: extracted value ([is_condi5_0_1_] : [BOOLEAN]) - [true]
2020-11-25 21:26:12,624 TRACE  [main] BasicExtractor: extracted value ([j6_0_1_] : [INTEGER]) - [0]
2020-11-25 21:26:12,624 TRACE  [main] BasicExtractor: extracted value ([problem_7_0_1_] : [BIGINT]) - [7]
2020-11-25 21:26:12,624 TRACE  [main] BasicExtractor: extracted value ([problem_7_0_0_] : [BIGINT]) - [7]
2020-11-25 21:26:12,624 TRACE  [main] BasicExtractor: extracted value ([id1_0_0_] : [BIGINT]) - [40]
2020-11-25 21:26:12,625 TRACE  [main] BasicExtractor: extracted value ([id1_0_1_] : [BIGINT]) - [41]
2020-11-25 21:26:12,625 TRACE  [main] BasicExtractor: extracted value ([binary_v2_0_1_] : [BLOB]) - [null]
2020-11-25 21:26:12,625 TRACE  [main] BasicExtractor: extracted value ([float_va3_0_1_] : [DOUBLE]) - [-3.0]
2020-11-25 21:26:12,625 TRACE  [main] BasicExtractor: extracted value ([i4_0_1_] : [INTEGER]) - [0]
2020-11-25 21:26:12,625 TRACE  [main] BasicExtractor: extracted value ([is_condi5_0_1_] : [BOOLEAN]) - [true]
2020-11-25 21:26:12,625 TRACE  [main] BasicExtractor: extracted value ([j6_0_1_] : [INTEGER]) - [1]
2020-11-25 21:26:12,626 TRACE  [main] BasicExtractor: extracted value ([problem_7_0_1_] : [BIGINT]) - [7]
2020-11-25 21:26:12,626 TRACE  [main] BasicExtractor: extracted value ([problem_7_0_0_] : [BIGINT]) - [7]
2020-11-25 21:26:12,626 TRACE  [main] BasicExtractor: extracted value ([id1_0_0_] : [BIGINT]) - [41]
2020-11-25 21:26:12,626 TRACE  [main] BasicExtractor: extracted value ([id1_0_1_] : [BIGINT]) - [42]
2020-11-25 21:26:12,626 TRACE  [main] BasicExtractor: extracted value ([binary_v2_0_1_] : [BLOB]) - [null]
2020-11-25 21:26:12,626 TRACE  [main] BasicExtractor: extracted value ([float_va3_0_1_] : [DOUBLE]) - [2.0]
2020-11-25 21:26:12,627 TRACE  [main] BasicExtractor: extracted value ([i4_0_1_] : [INTEGER]) - [0]
2020-11-25 21:26:12,627 TRACE  [main] BasicExtractor: extracted value ([is_condi5_0_1_] : [BOOLEAN]) - [true]
2020-11-25 21:26:12,627 TRACE  [main] BasicExtractor: extracted value ([j6_0_1_] : [INTEGER]) - [2]
2020-11-25 21:26:12,627 TRACE  [main] BasicExtractor: extracted value ([problem_7_0_1_] : [BIGINT]) - [7]
2020-11-25 21:26:12,628 TRACE  [main] BasicExtractor: extracted value ([problem_7_0_0_] : [BIGINT]) - [7]
2020-11-25 21:26:12,628 TRACE  [main] BasicExtractor: extracted value ([id1_0_0_] : [BIGINT]) - [42]
2020-11-25 21:26:12,628 TRACE  [main] BasicExtractor: extracted value ([id1_0_1_] : [BIGINT]) - [43]
2020-11-25 21:26:12,628 TRACE  [main] BasicExtractor: extracted value ([problem_7_0_0_] : [BIGINT]) - [7]
2020-11-25 21:26:12,628 TRACE  [main] BasicExtractor: extracted value ([id1_0_0_] : [BIGINT]) - [43]
2020-11-25 21:26:12,629 TRACE  [main] BasicExtractor: extracted value ([id1_0_1_] : [BIGINT]) - [44]
2020-11-25 21:26:12,629 TRACE  [main] BasicExtractor: extracted value ([problem_7_0_0_] : [BIGINT]) - [7]
2020-11-25 21:26:12,629 TRACE  [main] BasicExtractor: extracted value ([id1_0_0_] : [BIGINT]) - [44]
2020-11-25 21:26:12,647 TRACE  [main] BasicBinder: binding parameter [1] as [BIGINT] - [8]
2020-11-25 21:26:12,649 TRACE  [main] BasicExtractor: extracted value ([id1_1_2_] : [BIGINT]) - [null]
2020-11-25 21:26:12,649 TRACE  [main] BasicExtractor: extracted value ([id1_0_4_] : [BIGINT]) - [null]
2020-11-25 21:26:12,649 TRACE  [main] BasicExtractor: extracted value ([descript2_1_0_] : [BLOB]) - [[112, 114, 111, 98, 108, 101, 109, 100, 101, 115, 99, 114, 105, 112, 116, 105, 111, 110]]
2020-11-25 21:26:12,649 TRACE  [main] BasicExtractor: extracted value ([is_solve3_1_0_] : [BOOLEAN]) - [null]
2020-11-25 21:26:12,649 TRACE  [main] BasicExtractor: extracted value ([kind4_1_0_] : [VARCHAR]) - [POLYNOMIAL]
2020-11-25 21:26:12,649 TRACE  [main] BasicExtractor: extracted value ([matrix_d5_1_0_] : [INTEGER]) - [1]
2020-11-25 21:26:12,649 TRACE  [main] BasicExtractor: extracted value ([parent_p7_1_0_] : [BIGINT]) - [null]
2020-11-25 21:26:12,650 TRACE  [main] BasicExtractor: extracted value ([problem_6_1_0_] : [INTEGER]) - [22]
2020-11-25 21:26:12,650 TRACE  [main] BasicExtractor: extracted value ([problem_7_0_3_] : [BIGINT]) - [null]
2020-11-25 21:26:12,650 TRACE  [main] BasicExtractor: extracted value ([parent_p7_1_1_] : [BIGINT]) - [null]
2020-11-25 21:26:12,651 TRACE  [main] CollectionType: Created collection wrapper: [com.sf.back.entities.Problem.matrixes#8]
2020-11-25 21:26:12,652 TRACE  [main] BasicBinder: binding parameter [1] as [BIGINT] - [8]
2020-11-25 21:26:12,652 TRACE  [main] BasicExtractor: extracted value ([id1_0_1_] : [BIGINT]) - [45]
2020-11-25 21:26:12,653 TRACE  [main] BasicExtractor: extracted value ([binary_v2_0_1_] : [BLOB]) - [null]
2020-11-25 21:26:12,653 TRACE  [main] BasicExtractor: extracted value ([float_va3_0_1_] : [DOUBLE]) - [1.0]
2020-11-25 21:26:12,655 TRACE  [main] BasicExtractor: extracted value ([i4_0_1_] : [INTEGER]) - [0]
2020-11-25 21:26:12,656 TRACE  [main] BasicExtractor: extracted value ([is_condi5_0_1_] : [BOOLEAN]) - [true]
2020-11-25 21:26:12,656 TRACE  [main] BasicExtractor: extracted value ([j6_0_1_] : [INTEGER]) - [0]
2020-11-25 21:26:12,656 TRACE  [main] BasicExtractor: extracted value ([problem_7_0_1_] : [BIGINT]) - [8]
2020-11-25 21:26:12,656 TRACE  [main] BasicExtractor: extracted value ([problem_7_0_0_] : [BIGINT]) - [8]
2020-11-25 21:26:12,656 TRACE  [main] BasicExtractor: extracted value ([id1_0_0_] : [BIGINT]) - [45]
2020-11-25 21:26:12,657 TRACE  [main] BasicExtractor: extracted value ([id1_0_1_] : [BIGINT]) - [46]
2020-11-25 21:26:12,660 TRACE  [main] BasicExtractor: extracted value ([binary_v2_0_1_] : [BLOB]) - [null]
2020-11-25 21:26:12,660 TRACE  [main] BasicExtractor: extracted value ([float_va3_0_1_] : [DOUBLE]) - [2.718281828459045]
2020-11-25 21:26:12,660 TRACE  [main] BasicExtractor: extracted value ([i4_0_1_] : [INTEGER]) - [0]
2020-11-25 21:26:12,661 TRACE  [main] BasicExtractor: extracted value ([is_condi5_0_1_] : [BOOLEAN]) - [true]
2020-11-25 21:26:12,661 TRACE  [main] BasicExtractor: extracted value ([j6_0_1_] : [INTEGER]) - [1]
2020-11-25 21:26:12,661 TRACE  [main] BasicExtractor: extracted value ([problem_7_0_1_] : [BIGINT]) - [8]
2020-11-25 21:26:12,661 TRACE  [main] BasicExtractor: extracted value ([problem_7_0_0_] : [BIGINT]) - [8]
2020-11-25 21:26:12,661 TRACE  [main] BasicExtractor: extracted value ([id1_0_0_] : [BIGINT]) - [46]
2020-11-25 21:26:12,662 TRACE  [main] BasicExtractor: extracted value ([id1_0_1_] : [BIGINT]) - [47]
2020-11-25 21:26:12,662 TRACE  [main] BasicExtractor: extracted value ([binary_v2_0_1_] : [BLOB]) - [null]
2020-11-25 21:26:12,662 TRACE  [main] BasicExtractor: extracted value ([float_va3_0_1_] : [DOUBLE]) - [7.38905609893065]
2020-11-25 21:26:12,662 TRACE  [main] BasicExtractor: extracted value ([i4_0_1_] : [INTEGER]) - [0]
2020-11-25 21:26:12,662 TRACE  [main] BasicExtractor: extracted value ([is_condi5_0_1_] : [BOOLEAN]) - [true]
2020-11-25 21:26:12,662 TRACE  [main] BasicExtractor: extracted value ([j6_0_1_] : [INTEGER]) - [2]
2020-11-25 21:26:12,662 TRACE  [main] BasicExtractor: extracted value ([problem_7_0_1_] : [BIGINT]) - [8]
2020-11-25 21:26:12,663 TRACE  [main] BasicExtractor: extracted value ([problem_7_0_0_] : [BIGINT]) - [8]
2020-11-25 21:26:12,663 TRACE  [main] BasicExtractor: extracted value ([id1_0_0_] : [BIGINT]) - [47]
2020-11-25 21:26:12,663 TRACE  [main] BasicExtractor: extracted value ([id1_0_1_] : [BIGINT]) - [48]
2020-11-25 21:26:12,663 TRACE  [main] BasicExtractor: extracted value ([binary_v2_0_1_] : [BLOB]) - [null]
2020-11-25 21:26:12,663 TRACE  [main] BasicExtractor: extracted value ([float_va3_0_1_] : [DOUBLE]) - [20.085536923187668]
2020-11-25 21:26:12,664 TRACE  [main] BasicExtractor: extracted value ([i4_0_1_] : [INTEGER]) - [0]
2020-11-25 21:26:12,664 TRACE  [main] BasicExtractor: extracted value ([is_condi5_0_1_] : [BOOLEAN]) - [true]
2020-11-25 21:26:12,664 TRACE  [main] BasicExtractor: extracted value ([j6_0_1_] : [INTEGER]) - [3]
2020-11-25 21:26:12,664 TRACE  [main] BasicExtractor: extracted value ([problem_7_0_1_] : [BIGINT]) - [8]
2020-11-25 21:26:12,664 TRACE  [main] BasicExtractor: extracted value ([problem_7_0_0_] : [BIGINT]) - [8]
2020-11-25 21:26:12,664 TRACE  [main] BasicExtractor: extracted value ([id1_0_0_] : [BIGINT]) - [48]
2020-11-25 21:26:12,664 TRACE  [main] BasicExtractor: extracted value ([id1_0_1_] : [BIGINT]) - [49]
2020-11-25 21:26:12,665 TRACE  [main] BasicExtractor: extracted value ([binary_v2_0_1_] : [BLOB]) - [null]
2020-11-25 21:26:12,665 TRACE  [main] BasicExtractor: extracted value ([float_va3_0_1_] : [DOUBLE]) - [54.598150033144236]
2020-11-25 21:26:12,665 TRACE  [main] BasicExtractor: extracted value ([i4_0_1_] : [INTEGER]) - [0]
2020-11-25 21:26:12,665 TRACE  [main] BasicExtractor: extracted value ([is_condi5_0_1_] : [BOOLEAN]) - [true]
2020-11-25 21:26:12,665 TRACE  [main] BasicExtractor: extracted value ([j6_0_1_] : [INTEGER]) - [4]
2020-11-25 21:26:12,665 TRACE  [main] BasicExtractor: extracted value ([problem_7_0_1_] : [BIGINT]) - [8]
2020-11-25 21:26:12,665 TRACE  [main] BasicExtractor: extracted value ([problem_7_0_0_] : [BIGINT]) - [8]
2020-11-25 21:26:12,665 TRACE  [main] BasicExtractor: extracted value ([id1_0_0_] : [BIGINT]) - [49]
2020-11-25 21:26:12,666 TRACE  [main] BasicExtractor: extracted value ([id1_0_1_] : [BIGINT]) - [50]
2020-11-25 21:26:12,666 TRACE  [main] BasicExtractor: extracted value ([binary_v2_0_1_] : [BLOB]) - [null]
2020-11-25 21:26:12,666 TRACE  [main] BasicExtractor: extracted value ([float_va3_0_1_] : [DOUBLE]) - [148.4131591025766]
2020-11-25 21:26:12,666 TRACE  [main] BasicExtractor: extracted value ([i4_0_1_] : [INTEGER]) - [0]
2020-11-25 21:26:12,666 TRACE  [main] BasicExtractor: extracted value ([is_condi5_0_1_] : [BOOLEAN]) - [true]
2020-11-25 21:26:12,666 TRACE  [main] BasicExtractor: extracted value ([j6_0_1_] : [INTEGER]) - [5]
2020-11-25 21:26:12,667 TRACE  [main] BasicExtractor: extracted value ([problem_7_0_1_] : [BIGINT]) - [8]
2020-11-25 21:26:12,668 TRACE  [main] BasicExtractor: extracted value ([problem_7_0_0_] : [BIGINT]) - [8]
2020-11-25 21:26:12,668 TRACE  [main] BasicExtractor: extracted value ([id1_0_0_] : [BIGINT]) - [50]
2020-11-25 21:26:12,683 TRACE  [main] BasicBinder: binding parameter [1] as [BLOB] - [[100, 101, 115, 99, 114, 105, 112, 116, 105, 111, 110]]
2020-11-25 21:26:12,683 TRACE  [main] BasicBinder: binding parameter [2] as [BOOLEAN] - [null]
2020-11-25 21:26:12,683 TRACE  [main] BasicBinder: binding parameter [3] as [VARCHAR] - [POLYNOMIAL]
2020-11-25 21:26:12,684 TRACE  [main] BasicBinder: binding parameter [4] as [INTEGER] - [null]
2020-11-25 21:26:12,684 TRACE  [main] BasicBinder: binding parameter [5] as [BIGINT] - [null]
2020-11-25 21:26:12,684 TRACE  [main] BasicBinder: binding parameter [6] as [INTEGER] - [24]
2020-11-25 21:26:12,685 TRACE  [main] BasicBinder: binding parameter [1] as [BLOB] - [null]
2020-11-25 21:26:12,685 TRACE  [main] BasicBinder: binding parameter [2] as [DOUBLE] - [1.0]
2020-11-25 21:26:12,685 TRACE  [main] BasicBinder: binding parameter [3] as [INTEGER] - [0]
2020-11-25 21:26:12,686 TRACE  [main] BasicBinder: binding parameter [4] as [BOOLEAN] - [true]
2020-11-25 21:26:12,686 TRACE  [main] BasicBinder: binding parameter [5] as [INTEGER] - [0]
2020-11-25 21:26:12,686 TRACE  [main] BasicBinder: binding parameter [6] as [BIGINT] - [10]
2020-11-25 21:26:12,687 TRACE  [main] BasicBinder: binding parameter [1] as [BLOB] - [null]
2020-11-25 21:26:12,687 TRACE  [main] BasicBinder: binding parameter [2] as [DOUBLE] - [2.0]
2020-11-25 21:26:12,687 TRACE  [main] BasicBinder: binding parameter [3] as [INTEGER] - [0]
2020-11-25 21:26:12,688 TRACE  [main] BasicBinder: binding parameter [4] as [BOOLEAN] - [true]
2020-11-25 21:26:12,689 TRACE  [main] BasicBinder: binding parameter [5] as [INTEGER] - [1]
2020-11-25 21:26:12,689 TRACE  [main] BasicBinder: binding parameter [6] as [BIGINT] - [10]
2020-11-25 21:26:12,690 TRACE  [main] BasicBinder: binding parameter [1] as [BLOB] - [null]
2020-11-25 21:26:12,690 TRACE  [main] BasicBinder: binding parameter [2] as [DOUBLE] - [3.0]
2020-11-25 21:26:12,691 TRACE  [main] BasicBinder: binding parameter [3] as [INTEGER] - [0]
2020-11-25 21:26:12,691 TRACE  [main] BasicBinder: binding parameter [4] as [BOOLEAN] - [true]
2020-11-25 21:26:12,691 TRACE  [main] BasicBinder: binding parameter [5] as [INTEGER] - [2]
2020-11-25 21:26:12,691 TRACE  [main] BasicBinder: binding parameter [6] as [BIGINT] - [10]
2020-11-25 21:26:12,693 TRACE  [main] BasicBinder: binding parameter [1] as [BLOB] - [null]
2020-11-25 21:26:12,693 TRACE  [main] BasicBinder: binding parameter [2] as [DOUBLE] - [4.0]
2020-11-25 21:26:12,693 TRACE  [main] BasicBinder: binding parameter [3] as [INTEGER] - [0]
2020-11-25 21:26:12,693 TRACE  [main] BasicBinder: binding parameter [4] as [BOOLEAN] - [true]
2020-11-25 21:26:12,693 TRACE  [main] BasicBinder: binding parameter [5] as [INTEGER] - [3]
2020-11-25 21:26:12,693 TRACE  [main] BasicBinder: binding parameter [6] as [BIGINT] - [10]
2020-11-25 21:26:12,716 TRACE  [main] BasicBinder: binding parameter [1] as [BIGINT] - [10]
2020-11-25 21:26:12,717 TRACE  [main] BasicExtractor: extracted value ([id1_1_2_] : [BIGINT]) - [null]
2020-11-25 21:26:12,717 TRACE  [main] BasicExtractor: extracted value ([id1_0_4_] : [BIGINT]) - [null]
2020-11-25 21:26:12,718 TRACE  [main] BasicExtractor: extracted value ([descript2_1_0_] : [BLOB]) - [[100, 101, 115, 99, 114, 105, 112, 116, 105, 111, 110]]
2020-11-25 21:26:12,718 TRACE  [main] BasicExtractor: extracted value ([is_solve3_1_0_] : [BOOLEAN]) - [null]
2020-11-25 21:26:12,718 TRACE  [main] BasicExtractor: extracted value ([kind4_1_0_] : [VARCHAR]) - [POLYNOMIAL]
2020-11-25 21:26:12,719 TRACE  [main] BasicExtractor: extracted value ([matrix_d5_1_0_] : [INTEGER]) - [null]
2020-11-25 21:26:12,719 TRACE  [main] BasicExtractor: extracted value ([parent_p7_1_0_] : [BIGINT]) - [null]
2020-11-25 21:26:12,719 TRACE  [main] BasicExtractor: extracted value ([problem_6_1_0_] : [INTEGER]) - [24]
2020-11-25 21:26:12,719 TRACE  [main] BasicExtractor: extracted value ([problem_7_0_3_] : [BIGINT]) - [null]
2020-11-25 21:26:12,719 TRACE  [main] BasicExtractor: extracted value ([parent_p7_1_1_] : [BIGINT]) - [null]
2020-11-25 21:26:12,719 TRACE  [main] CollectionType: Created collection wrapper: [com.sf.back.entities.Problem.matrixes#10]
2020-11-25 21:26:12,720 TRACE  [main] BasicBinder: binding parameter [1] as [BIGINT] - [10]
2020-11-25 21:26:12,722 TRACE  [main] BasicExtractor: extracted value ([id1_0_1_] : [BIGINT]) - [57]
2020-11-25 21:26:12,722 TRACE  [main] BasicExtractor: extracted value ([binary_v2_0_1_] : [BLOB]) - [null]
2020-11-25 21:26:12,722 TRACE  [main] BasicExtractor: extracted value ([float_va3_0_1_] : [DOUBLE]) - [1.0]
2020-11-25 21:26:12,722 TRACE  [main] BasicExtractor: extracted value ([i4_0_1_] : [INTEGER]) - [0]
2020-11-25 21:26:12,723 TRACE  [main] BasicExtractor: extracted value ([is_condi5_0_1_] : [BOOLEAN]) - [true]
2020-11-25 21:26:12,723 TRACE  [main] BasicExtractor: extracted value ([j6_0_1_] : [INTEGER]) - [0]
2020-11-25 21:26:12,723 TRACE  [main] BasicExtractor: extracted value ([problem_7_0_1_] : [BIGINT]) - [10]
2020-11-25 21:26:12,723 TRACE  [main] BasicExtractor: extracted value ([problem_7_0_0_] : [BIGINT]) - [10]
2020-11-25 21:26:12,723 TRACE  [main] BasicExtractor: extracted value ([id1_0_0_] : [BIGINT]) - [57]
2020-11-25 21:26:12,724 TRACE  [main] BasicExtractor: extracted value ([id1_0_1_] : [BIGINT]) - [58]
2020-11-25 21:26:12,724 TRACE  [main] BasicExtractor: extracted value ([binary_v2_0_1_] : [BLOB]) - [null]
2020-11-25 21:26:12,724 TRACE  [main] BasicExtractor: extracted value ([float_va3_0_1_] : [DOUBLE]) - [2.0]
2020-11-25 21:26:12,724 TRACE  [main] BasicExtractor: extracted value ([i4_0_1_] : [INTEGER]) - [0]
2020-11-25 21:26:12,724 TRACE  [main] BasicExtractor: extracted value ([is_condi5_0_1_] : [BOOLEAN]) - [true]
2020-11-25 21:26:12,725 TRACE  [main] BasicExtractor: extracted value ([j6_0_1_] : [INTEGER]) - [1]
2020-11-25 21:26:12,725 TRACE  [main] BasicExtractor: extracted value ([problem_7_0_1_] : [BIGINT]) - [10]
2020-11-25 21:26:12,725 TRACE  [main] BasicExtractor: extracted value ([problem_7_0_0_] : [BIGINT]) - [10]
2020-11-25 21:26:12,725 TRACE  [main] BasicExtractor: extracted value ([id1_0_0_] : [BIGINT]) - [58]
2020-11-25 21:26:12,725 TRACE  [main] BasicExtractor: extracted value ([id1_0_1_] : [BIGINT]) - [59]
2020-11-25 21:26:12,726 TRACE  [main] BasicExtractor: extracted value ([binary_v2_0_1_] : [BLOB]) - [null]
2020-11-25 21:26:12,726 TRACE  [main] BasicExtractor: extracted value ([float_va3_0_1_] : [DOUBLE]) - [3.0]
2020-11-25 21:26:12,726 TRACE  [main] BasicExtractor: extracted value ([i4_0_1_] : [INTEGER]) - [0]
2020-11-25 21:26:12,726 TRACE  [main] BasicExtractor: extracted value ([is_condi5_0_1_] : [BOOLEAN]) - [true]
2020-11-25 21:26:12,726 TRACE  [main] BasicExtractor: extracted value ([j6_0_1_] : [INTEGER]) - [2]
2020-11-25 21:26:12,726 TRACE  [main] BasicExtractor: extracted value ([problem_7_0_1_] : [BIGINT]) - [10]
2020-11-25 21:26:12,727 TRACE  [main] BasicExtractor: extracted value ([problem_7_0_0_] : [BIGINT]) - [10]
2020-11-25 21:26:12,727 TRACE  [main] BasicExtractor: extracted value ([id1_0_0_] : [BIGINT]) - [59]
2020-11-25 21:26:12,727 TRACE  [main] BasicExtractor: extracted value ([id1_0_1_] : [BIGINT]) - [60]
2020-11-25 21:26:12,727 TRACE  [main] BasicExtractor: extracted value ([binary_v2_0_1_] : [BLOB]) - [null]
2020-11-25 21:26:12,728 TRACE  [main] BasicExtractor: extracted value ([float_va3_0_1_] : [DOUBLE]) - [4.0]
2020-11-25 21:26:12,728 TRACE  [main] BasicExtractor: extracted value ([i4_0_1_] : [INTEGER]) - [0]
2020-11-25 21:26:12,728 TRACE  [main] BasicExtractor: extracted value ([is_condi5_0_1_] : [BOOLEAN]) - [true]
2020-11-25 21:26:12,728 TRACE  [main] BasicExtractor: extracted value ([j6_0_1_] : [INTEGER]) - [3]
2020-11-25 21:26:12,728 TRACE  [main] BasicExtractor: extracted value ([problem_7_0_1_] : [BIGINT]) - [10]
2020-11-25 21:26:12,728 TRACE  [main] BasicExtractor: extracted value ([problem_7_0_0_] : [BIGINT]) - [10]
2020-11-25 21:26:12,729 TRACE  [main] BasicExtractor: extracted value ([id1_0_0_] : [BIGINT]) - [60]
2020-11-25 21:26:12,747 TRACE  [main] BasicBinder: binding parameter [1] as [BIGINT] - [11]
2020-11-25 21:26:12,748 TRACE  [main] BasicExtractor: extracted value ([id1_1_2_] : [BIGINT]) - [null]
2020-11-25 21:26:12,748 TRACE  [main] BasicExtractor: extracted value ([id1_0_4_] : [BIGINT]) - [null]
2020-11-25 21:26:12,748 TRACE  [main] BasicExtractor: extracted value ([descript2_1_0_] : [BLOB]) - [[112, 114, 111, 98, 108, 101, 109, 100, 101, 115, 99, 114, 105, 112, 116, 105, 111, 110]]
2020-11-25 21:26:12,749 TRACE  [main] BasicExtractor: extracted value ([is_solve3_1_0_] : [BOOLEAN]) - [null]
2020-11-25 21:26:12,749 TRACE  [main] BasicExtractor: extracted value ([kind4_1_0_] : [VARCHAR]) - [POLYNOMIAL]
2020-11-25 21:26:12,749 TRACE  [main] BasicExtractor: extracted value ([matrix_d5_1_0_] : [INTEGER]) - [1]
2020-11-25 21:26:12,749 TRACE  [main] BasicExtractor: extracted value ([parent_p7_1_0_] : [BIGINT]) - [null]
2020-11-25 21:26:12,749 TRACE  [main] BasicExtractor: extracted value ([problem_6_1_0_] : [INTEGER]) - [22]
2020-11-25 21:26:12,749 TRACE  [main] BasicExtractor: extracted value ([problem_7_0_3_] : [BIGINT]) - [null]
2020-11-25 21:26:12,751 TRACE  [main] BasicExtractor: extracted value ([parent_p7_1_1_] : [BIGINT]) - [null]
2020-11-25 21:26:12,751 TRACE  [main] CollectionType: Created collection wrapper: [com.sf.back.entities.Problem.matrixes#11]
2020-11-25 21:26:12,755 TRACE  [main] BasicBinder: binding parameter [1] as [BIGINT] - [11]
2020-11-25 21:26:12,756 TRACE  [main] BasicExtractor: extracted value ([id1_0_1_] : [BIGINT]) - [61]
2020-11-25 21:26:12,756 TRACE  [main] BasicExtractor: extracted value ([binary_v2_0_1_] : [BLOB]) - [null]
2020-11-25 21:26:12,756 TRACE  [main] BasicExtractor: extracted value ([float_va3_0_1_] : [DOUBLE]) - [1.0]
2020-11-25 21:26:12,756 TRACE  [main] BasicExtractor: extracted value ([i4_0_1_] : [INTEGER]) - [0]
2020-11-25 21:26:12,757 TRACE  [main] BasicExtractor: extracted value ([is_condi5_0_1_] : [BOOLEAN]) - [true]
2020-11-25 21:26:12,758 TRACE  [main] BasicExtractor: extracted value ([j6_0_1_] : [INTEGER]) - [0]
2020-11-25 21:26:12,758 TRACE  [main] BasicExtractor: extracted value ([problem_7_0_1_] : [BIGINT]) - [11]
2020-11-25 21:26:12,759 TRACE  [main] BasicExtractor: extracted value ([problem_7_0_0_] : [BIGINT]) - [11]
2020-11-25 21:26:12,759 TRACE  [main] BasicExtractor: extracted value ([id1_0_0_] : [BIGINT]) - [61]
2020-11-25 21:26:12,760 TRACE  [main] BasicExtractor: extracted value ([id1_0_1_] : [BIGINT]) - [62]
2020-11-25 21:26:12,761 TRACE  [main] BasicExtractor: extracted value ([binary_v2_0_1_] : [BLOB]) - [null]
2020-11-25 21:26:12,761 TRACE  [main] BasicExtractor: extracted value ([float_va3_0_1_] : [DOUBLE]) - [2.718281828459045]
2020-11-25 21:26:12,762 TRACE  [main] BasicExtractor: extracted value ([i4_0_1_] : [INTEGER]) - [0]
2020-11-25 21:26:12,762 TRACE  [main] BasicExtractor: extracted value ([is_condi5_0_1_] : [BOOLEAN]) - [true]
2020-11-25 21:26:12,762 TRACE  [main] BasicExtractor: extracted value ([j6_0_1_] : [INTEGER]) - [1]
2020-11-25 21:26:12,763 TRACE  [main] BasicExtractor: extracted value ([problem_7_0_1_] : [BIGINT]) - [11]
2020-11-25 21:26:12,763 TRACE  [main] BasicExtractor: extracted value ([problem_7_0_0_] : [BIGINT]) - [11]
2020-11-25 21:26:12,763 TRACE  [main] BasicExtractor: extracted value ([id1_0_0_] : [BIGINT]) - [62]
2020-11-25 21:26:12,764 TRACE  [main] BasicExtractor: extracted value ([id1_0_1_] : [BIGINT]) - [63]
2020-11-25 21:26:12,765 TRACE  [main] BasicExtractor: extracted value ([binary_v2_0_1_] : [BLOB]) - [null]
2020-11-25 21:26:12,766 TRACE  [main] BasicExtractor: extracted value ([float_va3_0_1_] : [DOUBLE]) - [7.38905609893065]
2020-11-25 21:26:12,766 TRACE  [main] BasicExtractor: extracted value ([i4_0_1_] : [INTEGER]) - [0]
2020-11-25 21:26:12,767 TRACE  [main] BasicExtractor: extracted value ([is_condi5_0_1_] : [BOOLEAN]) - [true]
2020-11-25 21:26:12,767 TRACE  [main] BasicExtractor: extracted value ([j6_0_1_] : [INTEGER]) - [2]
2020-11-25 21:26:12,767 TRACE  [main] BasicExtractor: extracted value ([problem_7_0_1_] : [BIGINT]) - [11]
2020-11-25 21:26:12,767 TRACE  [main] BasicExtractor: extracted value ([problem_7_0_0_] : [BIGINT]) - [11]
2020-11-25 21:26:12,768 TRACE  [main] BasicExtractor: extracted value ([id1_0_0_] : [BIGINT]) - [63]
2020-11-25 21:26:12,768 TRACE  [main] BasicExtractor: extracted value ([id1_0_1_] : [BIGINT]) - [64]
2020-11-25 21:26:12,769 TRACE  [main] BasicExtractor: extracted value ([binary_v2_0_1_] : [BLOB]) - [null]
2020-11-25 21:26:12,769 TRACE  [main] BasicExtractor: extracted value ([float_va3_0_1_] : [DOUBLE]) - [20.085536923187668]
2020-11-25 21:26:12,770 TRACE  [main] BasicExtractor: extracted value ([i4_0_1_] : [INTEGER]) - [0]
2020-11-25 21:26:12,770 TRACE  [main] BasicExtractor: extracted value ([is_condi5_0_1_] : [BOOLEAN]) - [true]
2020-11-25 21:26:12,770 TRACE  [main] BasicExtractor: extracted value ([j6_0_1_] : [INTEGER]) - [3]
2020-11-25 21:26:12,773 TRACE  [main] BasicExtractor: extracted value ([problem_7_0_1_] : [BIGINT]) - [11]
2020-11-25 21:26:12,774 TRACE  [main] BasicExtractor: extracted value ([problem_7_0_0_] : [BIGINT]) - [11]
2020-11-25 21:26:12,774 TRACE  [main] BasicExtractor: extracted value ([id1_0_0_] : [BIGINT]) - [64]
2020-11-25 21:26:12,775 TRACE  [main] BasicExtractor: extracted value ([id1_0_1_] : [BIGINT]) - [65]
2020-11-25 21:26:12,776 TRACE  [main] BasicExtractor: extracted value ([binary_v2_0_1_] : [BLOB]) - [null]
2020-11-25 21:26:12,776 TRACE  [main] BasicExtractor: extracted value ([float_va3_0_1_] : [DOUBLE]) - [54.598150033144236]
2020-11-25 21:26:12,776 TRACE  [main] BasicExtractor: extracted value ([i4_0_1_] : [INTEGER]) - [0]
2020-11-25 21:26:12,777 TRACE  [main] BasicExtractor: extracted value ([is_condi5_0_1_] : [BOOLEAN]) - [true]
2020-11-25 21:26:12,777 TRACE  [main] BasicExtractor: extracted value ([j6_0_1_] : [INTEGER]) - [4]
2020-11-25 21:26:12,778 TRACE  [main] BasicExtractor: extracted value ([problem_7_0_1_] : [BIGINT]) - [11]
2020-11-25 21:26:12,778 TRACE  [main] BasicExtractor: extracted value ([problem_7_0_0_] : [BIGINT]) - [11]
2020-11-25 21:26:12,780 TRACE  [main] BasicExtractor: extracted value ([id1_0_0_] : [BIGINT]) - [65]
2020-11-25 21:26:12,780 TRACE  [main] BasicExtractor: extracted value ([id1_0_1_] : [BIGINT]) - [66]
2020-11-25 21:26:12,781 TRACE  [main] BasicExtractor: extracted value ([binary_v2_0_1_] : [BLOB]) - [null]
2020-11-25 21:26:12,782 TRACE  [main] BasicExtractor: extracted value ([float_va3_0_1_] : [DOUBLE]) - [148.4131591025766]
2020-11-25 21:26:12,782 TRACE  [main] BasicExtractor: extracted value ([i4_0_1_] : [INTEGER]) - [0]
2020-11-25 21:26:12,782 TRACE  [main] BasicExtractor: extracted value ([is_condi5_0_1_] : [BOOLEAN]) - [true]
2020-11-25 21:26:12,783 TRACE  [main] BasicExtractor: extracted value ([j6_0_1_] : [INTEGER]) - [5]
2020-11-25 21:26:12,783 TRACE  [main] BasicExtractor: extracted value ([problem_7_0_1_] : [BIGINT]) - [11]
2020-11-25 21:26:12,784 TRACE  [main] BasicExtractor: extracted value ([problem_7_0_0_] : [BIGINT]) - [11]
2020-11-25 21:26:12,784 TRACE  [main] BasicExtractor: extracted value ([id1_0_0_] : [BIGINT]) - [66]
2020-11-25 21:26:12,806 TRACE  [main] BasicBinder: binding parameter [1] as [BIGINT] - [11]
2020-11-25 21:26:12,806 TRACE  [main] BasicExtractor: extracted value ([id1_0_0_] : [BIGINT]) - [61]
2020-11-25 21:26:12,807 TRACE  [main] BasicExtractor: extracted value ([binary_v2_0_0_] : [BLOB]) - [null]
2020-11-25 21:26:12,807 TRACE  [main] BasicExtractor: extracted value ([float_va3_0_0_] : [DOUBLE]) - [1.0]
2020-11-25 21:26:12,807 TRACE  [main] BasicExtractor: extracted value ([i4_0_0_] : [INTEGER]) - [0]
2020-11-25 21:26:12,807 TRACE  [main] BasicExtractor: extracted value ([is_condi5_0_0_] : [BOOLEAN]) - [true]
2020-11-25 21:26:12,807 TRACE  [main] BasicExtractor: extracted value ([j6_0_0_] : [INTEGER]) - [0]
2020-11-25 21:26:12,807 TRACE  [main] BasicExtractor: extracted value ([problem_7_0_0_] : [BIGINT]) - [11]
2020-11-25 21:26:12,808 TRACE  [main] BasicExtractor: extracted value ([descript2_1_1_] : [BLOB]) - [[112, 114, 111, 98, 108, 101, 109, 100, 101, 115, 99, 114, 105, 112, 116, 105, 111, 110]]
2020-11-25 21:26:12,808 TRACE  [main] BasicExtractor: extracted value ([is_solve3_1_1_] : [BOOLEAN]) - [null]
2020-11-25 21:26:12,808 TRACE  [main] BasicExtractor: extracted value ([kind4_1_1_] : [VARCHAR]) - [POLYNOMIAL]
2020-11-25 21:26:12,808 TRACE  [main] BasicExtractor: extracted value ([matrix_d5_1_1_] : [INTEGER]) - [1]
2020-11-25 21:26:12,808 TRACE  [main] BasicExtractor: extracted value ([parent_p7_1_1_] : [BIGINT]) - [null]
2020-11-25 21:26:12,809 TRACE  [main] BasicExtractor: extracted value ([problem_6_1_1_] : [INTEGER]) - [22]
2020-11-25 21:26:12,810 TRACE  [main] BasicExtractor: extracted value ([problem_7_0_3_] : [BIGINT]) - [11]
2020-11-25 21:26:12,810 TRACE  [main] BasicExtractor: extracted value ([id1_0_3_] : [BIGINT]) - [61]
2020-11-25 21:26:12,810 TRACE  [main] BasicExtractor: extracted value ([id1_0_0_] : [BIGINT]) - [62]
2020-11-25 21:26:12,810 TRACE  [main] BasicExtractor: extracted value ([binary_v2_0_0_] : [BLOB]) - [null]
2020-11-25 21:26:12,810 TRACE  [main] BasicExtractor: extracted value ([float_va3_0_0_] : [DOUBLE]) - [2.718281828459045]
2020-11-25 21:26:12,810 TRACE  [main] BasicExtractor: extracted value ([i4_0_0_] : [INTEGER]) - [0]
2020-11-25 21:26:12,811 TRACE  [main] BasicExtractor: extracted value ([is_condi5_0_0_] : [BOOLEAN]) - [true]
2020-11-25 21:26:12,811 TRACE  [main] BasicExtractor: extracted value ([j6_0_0_] : [INTEGER]) - [1]
2020-11-25 21:26:12,811 TRACE  [main] BasicExtractor: extracted value ([problem_7_0_0_] : [BIGINT]) - [11]
2020-11-25 21:26:12,811 TRACE  [main] BasicExtractor: extracted value ([problem_7_0_3_] : [BIGINT]) - [11]
2020-11-25 21:26:12,811 TRACE  [main] BasicExtractor: extracted value ([id1_0_3_] : [BIGINT]) - [62]
2020-11-25 21:26:12,811 TRACE  [main] BasicExtractor: extracted value ([id1_0_0_] : [BIGINT]) - [63]
2020-11-25 21:26:12,812 TRACE  [main] BasicExtractor: extracted value ([binary_v2_0_0_] : [BLOB]) - [null]
2020-11-25 21:26:12,812 TRACE  [main] BasicExtractor: extracted value ([float_va3_0_0_] : [DOUBLE]) - [7.38905609893065]
2020-11-25 21:26:12,812 TRACE  [main] BasicExtractor: extracted value ([i4_0_0_] : [INTEGER]) - [0]
2020-11-25 21:26:12,812 TRACE  [main] BasicExtractor: extracted value ([is_condi5_0_0_] : [BOOLEAN]) - [true]
2020-11-25 21:26:12,812 TRACE  [main] BasicExtractor: extracted value ([j6_0_0_] : [INTEGER]) - [2]
2020-11-25 21:26:12,812 TRACE  [main] BasicExtractor: extracted value ([problem_7_0_0_] : [BIGINT]) - [11]
2020-11-25 21:26:12,812 TRACE  [main] BasicExtractor: extracted value ([problem_7_0_3_] : [BIGINT]) - [11]
2020-11-25 21:26:12,812 TRACE  [main] BasicExtractor: extracted value ([id1_0_3_] : [BIGINT]) - [63]
2020-11-25 21:26:12,813 TRACE  [main] BasicExtractor: extracted value ([id1_0_0_] : [BIGINT]) - [64]
2020-11-25 21:26:12,813 TRACE  [main] BasicExtractor: extracted value ([binary_v2_0_0_] : [BLOB]) - [null]
2020-11-25 21:26:12,813 TRACE  [main] BasicExtractor: extracted value ([float_va3_0_0_] : [DOUBLE]) - [20.085536923187668]
2020-11-25 21:26:12,813 TRACE  [main] BasicExtractor: extracted value ([i4_0_0_] : [INTEGER]) - [0]
2020-11-25 21:26:12,813 TRACE  [main] BasicExtractor: extracted value ([is_condi5_0_0_] : [BOOLEAN]) - [true]
2020-11-25 21:26:12,813 TRACE  [main] BasicExtractor: extracted value ([j6_0_0_] : [INTEGER]) - [3]
2020-11-25 21:26:12,813 TRACE  [main] BasicExtractor: extracted value ([problem_7_0_0_] : [BIGINT]) - [11]
2020-11-25 21:26:12,814 TRACE  [main] BasicExtractor: extracted value ([problem_7_0_3_] : [BIGINT]) - [11]
2020-11-25 21:26:12,814 TRACE  [main] BasicExtractor: extracted value ([id1_0_3_] : [BIGINT]) - [64]
2020-11-25 21:26:12,815 TRACE  [main] BasicExtractor: extracted value ([id1_0_0_] : [BIGINT]) - [65]
2020-11-25 21:26:12,815 TRACE  [main] BasicExtractor: extracted value ([binary_v2_0_0_] : [BLOB]) - [null]
2020-11-25 21:26:12,815 TRACE  [main] BasicExtractor: extracted value ([float_va3_0_0_] : [DOUBLE]) - [54.598150033144236]
2020-11-25 21:26:12,815 TRACE  [main] BasicExtractor: extracted value ([i4_0_0_] : [INTEGER]) - [0]
2020-11-25 21:26:12,815 TRACE  [main] BasicExtractor: extracted value ([is_condi5_0_0_] : [BOOLEAN]) - [true]
2020-11-25 21:26:12,816 TRACE  [main] BasicExtractor: extracted value ([j6_0_0_] : [INTEGER]) - [4]
2020-11-25 21:26:12,817 TRACE  [main] BasicExtractor: extracted value ([problem_7_0_0_] : [BIGINT]) - [11]
2020-11-25 21:26:12,817 TRACE  [main] BasicExtractor: extracted value ([problem_7_0_3_] : [BIGINT]) - [11]
2020-11-25 21:26:12,817 TRACE  [main] BasicExtractor: extracted value ([id1_0_3_] : [BIGINT]) - [65]
2020-11-25 21:26:12,817 TRACE  [main] BasicExtractor: extracted value ([id1_0_0_] : [BIGINT]) - [66]
2020-11-25 21:26:12,817 TRACE  [main] BasicExtractor: extracted value ([binary_v2_0_0_] : [BLOB]) - [null]
2020-11-25 21:26:12,818 TRACE  [main] BasicExtractor: extracted value ([float_va3_0_0_] : [DOUBLE]) - [148.4131591025766]
2020-11-25 21:26:12,818 TRACE  [main] BasicExtractor: extracted value ([i4_0_0_] : [INTEGER]) - [0]
2020-11-25 21:26:12,818 TRACE  [main] BasicExtractor: extracted value ([is_condi5_0_0_] : [BOOLEAN]) - [true]
2020-11-25 21:26:12,818 TRACE  [main] BasicExtractor: extracted value ([j6_0_0_] : [INTEGER]) - [5]
2020-11-25 21:26:12,818 TRACE  [main] BasicExtractor: extracted value ([problem_7_0_0_] : [BIGINT]) - [11]
2020-11-25 21:26:12,818 TRACE  [main] BasicExtractor: extracted value ([problem_7_0_3_] : [BIGINT]) - [11]
2020-11-25 21:26:12,819 TRACE  [main] BasicExtractor: extracted value ([id1_0_3_] : [BIGINT]) - [66]
2020-11-25 21:26:12,819 TRACE  [main] CollectionType: Created collection wrapper: [com.sf.back.entities.Problem.children#11]
2020-11-25 21:26:12,823 TRACE  [main] BasicBinder: binding parameter [1] as [BIGINT] - [11]
2020-11-25 21:26:12,827 TRACE  [main] BasicBinder: binding parameter [1] as [BLOB] - [null]
2020-11-25 21:26:12,827 TRACE  [main] BasicBinder: binding parameter [2] as [DOUBLE] - [2.0]
2020-11-25 21:26:12,827 TRACE  [main] BasicBinder: binding parameter [3] as [INTEGER] - [0]
2020-11-25 21:26:12,827 TRACE  [main] BasicBinder: binding parameter [4] as [BOOLEAN] - [true]
2020-11-25 21:26:12,827 TRACE  [main] BasicBinder: binding parameter [5] as [INTEGER] - [0]
2020-11-25 21:26:12,827 TRACE  [main] BasicBinder: binding parameter [6] as [BIGINT] - [11]
2020-11-25 21:26:12,828 TRACE  [main] BasicBinder: binding parameter [7] as [BIGINT] - [61]
2020-11-25 21:26:12,829 TRACE  [main] BasicBinder: binding parameter [1] as [BLOB] - [[100, 101, 115, 99, 114, 105, 112, 116, 105, 111, 110, 112, 114, 111, 98, 108, 101, 109]]
2020-11-25 21:26:12,829 TRACE  [main] BasicBinder: binding parameter [2] as [BOOLEAN] - [null]
2020-11-25 21:26:12,830 TRACE  [main] BasicBinder: binding parameter [3] as [VARCHAR] - [POLYNOMIAL]
2020-11-25 21:26:12,830 TRACE  [main] BasicBinder: binding parameter [4] as [INTEGER] - [1]
2020-11-25 21:26:12,830 TRACE  [main] BasicBinder: binding parameter [5] as [BIGINT] - [null]
2020-11-25 21:26:12,830 TRACE  [main] BasicBinder: binding parameter [6] as [INTEGER] - [22]
2020-11-25 21:26:12,830 TRACE  [main] BasicBinder: binding parameter [7] as [BIGINT] - [11]
2020-11-25 21:26:12,843 TRACE  [main] BasicBinder: binding parameter [1] as [BIGINT] - [12]
2020-11-25 21:26:12,843 TRACE  [main] BasicExtractor: extracted value ([id1_1_2_] : [BIGINT]) - [null]
2020-11-25 21:26:12,844 TRACE  [main] BasicExtractor: extracted value ([id1_0_4_] : [BIGINT]) - [null]
2020-11-25 21:26:12,844 TRACE  [main] BasicExtractor: extracted value ([descript2_1_0_] : [BLOB]) - [[112, 114, 111, 98, 108, 101, 109, 100, 101, 115, 99, 114, 105, 112, 116, 105, 111, 110]]
2020-11-25 21:26:12,844 TRACE  [main] BasicExtractor: extracted value ([is_solve3_1_0_] : [BOOLEAN]) - [null]
2020-11-25 21:26:12,844 TRACE  [main] BasicExtractor: extracted value ([kind4_1_0_] : [VARCHAR]) - [POLYNOMIAL]
2020-11-25 21:26:12,844 TRACE  [main] BasicExtractor: extracted value ([matrix_d5_1_0_] : [INTEGER]) - [1]
2020-11-25 21:26:12,844 TRACE  [main] BasicExtractor: extracted value ([parent_p7_1_0_] : [BIGINT]) - [null]
2020-11-25 21:26:12,844 TRACE  [main] BasicExtractor: extracted value ([problem_6_1_0_] : [INTEGER]) - [22]
2020-11-25 21:26:12,845 TRACE  [main] BasicExtractor: extracted value ([problem_7_0_3_] : [BIGINT]) - [null]
2020-11-25 21:26:12,845 TRACE  [main] BasicExtractor: extracted value ([parent_p7_1_1_] : [BIGINT]) - [null]
2020-11-25 21:26:12,845 TRACE  [main] CollectionType: Created collection wrapper: [com.sf.back.entities.Problem.matrixes#12]
2020-11-25 21:26:12,845 TRACE  [main] BasicBinder: binding parameter [1] as [BIGINT] - [12]
2020-11-25 21:26:12,846 TRACE  [main] BasicExtractor: extracted value ([id1_0_1_] : [BIGINT]) - [67]
2020-11-25 21:26:12,846 TRACE  [main] BasicExtractor: extracted value ([binary_v2_0_1_] : [BLOB]) - [null]
2020-11-25 21:26:12,846 TRACE  [main] BasicExtractor: extracted value ([float_va3_0_1_] : [DOUBLE]) - [1.0]
2020-11-25 21:26:12,846 TRACE  [main] BasicExtractor: extracted value ([i4_0_1_] : [INTEGER]) - [0]
2020-11-25 21:26:12,846 TRACE  [main] BasicExtractor: extracted value ([is_condi5_0_1_] : [BOOLEAN]) - [true]
2020-11-25 21:26:12,847 TRACE  [main] BasicExtractor: extracted value ([j6_0_1_] : [INTEGER]) - [0]
2020-11-25 21:26:12,847 TRACE  [main] BasicExtractor: extracted value ([problem_7_0_1_] : [BIGINT]) - [12]
2020-11-25 21:26:12,847 TRACE  [main] BasicExtractor: extracted value ([problem_7_0_0_] : [BIGINT]) - [12]
2020-11-25 21:26:12,847 TRACE  [main] BasicExtractor: extracted value ([id1_0_0_] : [BIGINT]) - [67]
2020-11-25 21:26:12,847 TRACE  [main] BasicExtractor: extracted value ([id1_0_1_] : [BIGINT]) - [68]
2020-11-25 21:26:12,847 TRACE  [main] BasicExtractor: extracted value ([binary_v2_0_1_] : [BLOB]) - [null]
2020-11-25 21:26:12,847 TRACE  [main] BasicExtractor: extracted value ([float_va3_0_1_] : [DOUBLE]) - [2.718281828459045]
2020-11-25 21:26:12,847 TRACE  [main] BasicExtractor: extracted value ([i4_0_1_] : [INTEGER]) - [0]
2020-11-25 21:26:12,847 TRACE  [main] BasicExtractor: extracted value ([is_condi5_0_1_] : [BOOLEAN]) - [true]
2020-11-25 21:26:12,848 TRACE  [main] BasicExtractor: extracted value ([j6_0_1_] : [INTEGER]) - [1]
2020-11-25 21:26:12,848 TRACE  [main] BasicExtractor: extracted value ([problem_7_0_1_] : [BIGINT]) - [12]
2020-11-25 21:26:12,848 TRACE  [main] BasicExtractor: extracted value ([problem_7_0_0_] : [BIGINT]) - [12]
2020-11-25 21:26:12,848 TRACE  [main] BasicExtractor: extracted value ([id1_0_0_] : [BIGINT]) - [68]
2020-11-25 21:26:12,848 TRACE  [main] BasicExtractor: extracted value ([id1_0_1_] : [BIGINT]) - [69]
2020-11-25 21:26:12,848 TRACE  [main] BasicExtractor: extracted value ([binary_v2_0_1_] : [BLOB]) - [null]
2020-11-25 21:26:12,848 TRACE  [main] BasicExtractor: extracted value ([float_va3_0_1_] : [DOUBLE]) - [7.38905609893065]
2020-11-25 21:26:12,849 TRACE  [main] BasicExtractor: extracted value ([i4_0_1_] : [INTEGER]) - [0]
2020-11-25 21:26:12,849 TRACE  [main] BasicExtractor: extracted value ([is_condi5_0_1_] : [BOOLEAN]) - [true]
2020-11-25 21:26:12,849 TRACE  [main] BasicExtractor: extracted value ([j6_0_1_] : [INTEGER]) - [2]
2020-11-25 21:26:12,849 TRACE  [main] BasicExtractor: extracted value ([problem_7_0_1_] : [BIGINT]) - [12]
2020-11-25 21:26:12,850 TRACE  [main] BasicExtractor: extracted value ([problem_7_0_0_] : [BIGINT]) - [12]
2020-11-25 21:26:12,850 TRACE  [main] BasicExtractor: extracted value ([id1_0_0_] : [BIGINT]) - [69]
2020-11-25 21:26:12,851 TRACE  [main] BasicExtractor: extracted value ([id1_0_1_] : [BIGINT]) - [70]
2020-11-25 21:26:12,851 TRACE  [main] BasicExtractor: extracted value ([binary_v2_0_1_] : [BLOB]) - [null]
2020-11-25 21:26:12,851 TRACE  [main] BasicExtractor: extracted value ([float_va3_0_1_] : [DOUBLE]) - [20.085536923187668]
2020-11-25 21:26:12,851 TRACE  [main] BasicExtractor: extracted value ([i4_0_1_] : [INTEGER]) - [0]
2020-11-25 21:26:12,851 TRACE  [main] BasicExtractor: extracted value ([is_condi5_0_1_] : [BOOLEAN]) - [true]
2020-11-25 21:26:12,851 TRACE  [main] BasicExtractor: extracted value ([j6_0_1_] : [INTEGER]) - [3]
2020-11-25 21:26:12,852 TRACE  [main] BasicExtractor: extracted value ([problem_7_0_1_] : [BIGINT]) - [12]
2020-11-25 21:26:12,852 TRACE  [main] BasicExtractor: extracted value ([problem_7_0_0_] : [BIGINT]) - [12]
2020-11-25 21:26:12,852 TRACE  [main] BasicExtractor: extracted value ([id1_0_0_] : [BIGINT]) - [70]
2020-11-25 21:26:12,852 TRACE  [main] BasicExtractor: extracted value ([id1_0_1_] : [BIGINT]) - [71]
2020-11-25 21:26:12,853 TRACE  [main] BasicExtractor: extracted value ([binary_v2_0_1_] : [BLOB]) - [null]
2020-11-25 21:26:12,853 TRACE  [main] BasicExtractor: extracted value ([float_va3_0_1_] : [DOUBLE]) - [54.598150033144236]
2020-11-25 21:26:12,853 TRACE  [main] BasicExtractor: extracted value ([i4_0_1_] : [INTEGER]) - [0]
2020-11-25 21:26:12,853 TRACE  [main] BasicExtractor: extracted value ([is_condi5_0_1_] : [BOOLEAN]) - [true]
2020-11-25 21:26:12,853 TRACE  [main] BasicExtractor: extracted value ([j6_0_1_] : [INTEGER]) - [4]
2020-11-25 21:26:12,853 TRACE  [main] BasicExtractor: extracted value ([problem_7_0_1_] : [BIGINT]) - [12]
2020-11-25 21:26:12,853 TRACE  [main] BasicExtractor: extracted value ([problem_7_0_0_] : [BIGINT]) - [12]
2020-11-25 21:26:12,854 TRACE  [main] BasicExtractor: extracted value ([id1_0_0_] : [BIGINT]) - [71]
2020-11-25 21:26:12,854 TRACE  [main] BasicExtractor: extracted value ([id1_0_1_] : [BIGINT]) - [72]
2020-11-25 21:26:12,854 TRACE  [main] BasicExtractor: extracted value ([binary_v2_0_1_] : [BLOB]) - [null]
2020-11-25 21:26:12,854 TRACE  [main] BasicExtractor: extracted value ([float_va3_0_1_] : [DOUBLE]) - [148.4131591025766]
2020-11-25 21:26:12,854 TRACE  [main] BasicExtractor: extracted value ([i4_0_1_] : [INTEGER]) - [0]
2020-11-25 21:26:12,854 TRACE  [main] BasicExtractor: extracted value ([is_condi5_0_1_] : [BOOLEAN]) - [true]
2020-11-25 21:26:12,854 TRACE  [main] BasicExtractor: extracted value ([j6_0_1_] : [INTEGER]) - [5]
2020-11-25 21:26:12,855 TRACE  [main] BasicExtractor: extracted value ([problem_7_0_1_] : [BIGINT]) - [12]
2020-11-25 21:26:12,855 TRACE  [main] BasicExtractor: extracted value ([problem_7_0_0_] : [BIGINT]) - [12]
2020-11-25 21:26:12,855 TRACE  [main] BasicExtractor: extracted value ([id1_0_0_] : [BIGINT]) - [72]
2020-11-25 21:26:12,865 TRACE  [main] BasicBinder: binding parameter [1] as [BIGINT] - [12]
2020-11-25 21:26:12,866 TRACE  [main] BasicExtractor: extracted value ([id1_1_2_] : [BIGINT]) - [null]
2020-11-25 21:26:12,868 TRACE  [main] BasicExtractor: extracted value ([id1_0_4_] : [BIGINT]) - [null]
2020-11-25 21:26:12,868 TRACE  [main] BasicExtractor: extracted value ([descript2_1_0_] : [BLOB]) - [[112, 114, 111, 98, 108, 101, 109, 100, 101, 115, 99, 114, 105, 112, 116, 105, 111, 110]]
2020-11-25 21:26:12,868 TRACE  [main] BasicExtractor: extracted value ([is_solve3_1_0_] : [BOOLEAN]) - [null]
2020-11-25 21:26:12,868 TRACE  [main] BasicExtractor: extracted value ([kind4_1_0_] : [VARCHAR]) - [POLYNOMIAL]
2020-11-25 21:26:12,869 TRACE  [main] BasicExtractor: extracted value ([matrix_d5_1_0_] : [INTEGER]) - [1]
2020-11-25 21:26:12,869 TRACE  [main] BasicExtractor: extracted value ([parent_p7_1_0_] : [BIGINT]) - [null]
2020-11-25 21:26:12,869 TRACE  [main] BasicExtractor: extracted value ([problem_6_1_0_] : [INTEGER]) - [22]
2020-11-25 21:26:12,869 TRACE  [main] BasicExtractor: extracted value ([problem_7_0_3_] : [BIGINT]) - [null]
2020-11-25 21:26:12,869 TRACE  [main] BasicExtractor: extracted value ([parent_p7_1_1_] : [BIGINT]) - [null]
2020-11-25 21:26:12,869 TRACE  [main] CollectionType: Created collection wrapper: [com.sf.back.entities.Problem.matrixes#12]
2020-11-25 21:26:12,870 TRACE  [main] BasicBinder: binding parameter [1] as [BIGINT] - [12]
2020-11-25 21:26:12,870 TRACE  [main] BasicExtractor: extracted value ([id1_0_1_] : [BIGINT]) - [67]
2020-11-25 21:26:12,871 TRACE  [main] BasicExtractor: extracted value ([binary_v2_0_1_] : [BLOB]) - [null]
2020-11-25 21:26:12,871 TRACE  [main] BasicExtractor: extracted value ([float_va3_0_1_] : [DOUBLE]) - [1.0]
2020-11-25 21:26:12,872 TRACE  [main] BasicExtractor: extracted value ([i4_0_1_] : [INTEGER]) - [0]
2020-11-25 21:26:12,872 TRACE  [main] BasicExtractor: extracted value ([is_condi5_0_1_] : [BOOLEAN]) - [true]
2020-11-25 21:26:12,872 TRACE  [main] BasicExtractor: extracted value ([j6_0_1_] : [INTEGER]) - [0]
2020-11-25 21:26:12,872 TRACE  [main] BasicExtractor: extracted value ([problem_7_0_1_] : [BIGINT]) - [12]
2020-11-25 21:26:12,872 TRACE  [main] BasicExtractor: extracted value ([problem_7_0_0_] : [BIGINT]) - [12]
2020-11-25 21:26:12,872 TRACE  [main] BasicExtractor: extracted value ([id1_0_0_] : [BIGINT]) - [67]
2020-11-25 21:26:12,873 TRACE  [main] BasicExtractor: extracted value ([id1_0_1_] : [BIGINT]) - [68]
2020-11-25 21:26:12,873 TRACE  [main] BasicExtractor: extracted value ([binary_v2_0_1_] : [BLOB]) - [null]
2020-11-25 21:26:12,873 TRACE  [main] BasicExtractor: extracted value ([float_va3_0_1_] : [DOUBLE]) - [2.718281828459045]
2020-11-25 21:26:12,873 TRACE  [main] BasicExtractor: extracted value ([i4_0_1_] : [INTEGER]) - [0]
2020-11-25 21:26:12,874 TRACE  [main] BasicExtractor: extracted value ([is_condi5_0_1_] : [BOOLEAN]) - [true]
2020-11-25 21:26:12,874 TRACE  [main] BasicExtractor: extracted value ([j6_0_1_] : [INTEGER]) - [1]
2020-11-25 21:26:12,875 TRACE  [main] BasicExtractor: extracted value ([problem_7_0_1_] : [BIGINT]) - [12]
2020-11-25 21:26:12,875 TRACE  [main] BasicExtractor: extracted value ([problem_7_0_0_] : [BIGINT]) - [12]
2020-11-25 21:26:12,875 TRACE  [main] BasicExtractor: extracted value ([id1_0_0_] : [BIGINT]) - [68]
2020-11-25 21:26:12,875 TRACE  [main] BasicExtractor: extracted value ([id1_0_1_] : [BIGINT]) - [69]
2020-11-25 21:26:12,875 TRACE  [main] BasicExtractor: extracted value ([binary_v2_0_1_] : [BLOB]) - [null]
2020-11-25 21:26:12,875 TRACE  [main] BasicExtractor: extracted value ([float_va3_0_1_] : [DOUBLE]) - [7.38905609893065]
2020-11-25 21:26:12,875 TRACE  [main] BasicExtractor: extracted value ([i4_0_1_] : [INTEGER]) - [0]
2020-11-25 21:26:12,875 TRACE  [main] BasicExtractor: extracted value ([is_condi5_0_1_] : [BOOLEAN]) - [true]
2020-11-25 21:26:12,881 TRACE  [main] BasicExtractor: extracted value ([j6_0_1_] : [INTEGER]) - [2]
2020-11-25 21:26:12,882 TRACE  [main] BasicExtractor: extracted value ([problem_7_0_1_] : [BIGINT]) - [12]
2020-11-25 21:26:12,882 TRACE  [main] BasicExtractor: extracted value ([problem_7_0_0_] : [BIGINT]) - [12]
2020-11-25 21:26:12,882 TRACE  [main] BasicExtractor: extracted value ([id1_0_0_] : [BIGINT]) - [69]
2020-11-25 21:26:12,882 TRACE  [main] BasicExtractor: extracted value ([id1_0_1_] : [BIGINT]) - [70]
2020-11-25 21:26:12,882 TRACE  [main] BasicExtractor: extracted value ([binary_v2_0_1_] : [BLOB]) - [null]
2020-11-25 21:26:12,882 TRACE  [main] BasicExtractor: extracted value ([float_va3_0_1_] : [DOUBLE]) - [20.085536923187668]
2020-11-25 21:26:12,882 TRACE  [main] BasicExtractor: extracted value ([i4_0_1_] : [INTEGER]) - [0]
2020-11-25 21:26:12,883 TRACE  [main] BasicExtractor: extracted value ([is_condi5_0_1_] : [BOOLEAN]) - [true]
2020-11-25 21:26:12,883 TRACE  [main] BasicExtractor: extracted value ([j6_0_1_] : [INTEGER]) - [3]
2020-11-25 21:26:12,883 TRACE  [main] BasicExtractor: extracted value ([problem_7_0_1_] : [BIGINT]) - [12]
2020-11-25 21:26:12,883 TRACE  [main] BasicExtractor: extracted value ([problem_7_0_0_] : [BIGINT]) - [12]
2020-11-25 21:26:12,883 TRACE  [main] BasicExtractor: extracted value ([id1_0_0_] : [BIGINT]) - [70]
2020-11-25 21:26:12,883 TRACE  [main] BasicExtractor: extracted value ([id1_0_1_] : [BIGINT]) - [71]
2020-11-25 21:26:12,884 TRACE  [main] BasicExtractor: extracted value ([binary_v2_0_1_] : [BLOB]) - [null]
2020-11-25 21:26:12,884 TRACE  [main] BasicExtractor: extracted value ([float_va3_0_1_] : [DOUBLE]) - [54.598150033144236]
2020-11-25 21:26:12,884 TRACE  [main] BasicExtractor: extracted value ([i4_0_1_] : [INTEGER]) - [0]
2020-11-25 21:26:12,884 TRACE  [main] BasicExtractor: extracted value ([is_condi5_0_1_] : [BOOLEAN]) - [true]
2020-11-25 21:26:12,884 TRACE  [main] BasicExtractor: extracted value ([j6_0_1_] : [INTEGER]) - [4]
2020-11-25 21:26:12,885 TRACE  [main] BasicExtractor: extracted value ([problem_7_0_1_] : [BIGINT]) - [12]
2020-11-25 21:26:12,885 TRACE  [main] BasicExtractor: extracted value ([problem_7_0_0_] : [BIGINT]) - [12]
2020-11-25 21:26:12,885 TRACE  [main] BasicExtractor: extracted value ([id1_0_0_] : [BIGINT]) - [71]
2020-11-25 21:26:12,885 TRACE  [main] BasicExtractor: extracted value ([id1_0_1_] : [BIGINT]) - [72]
2020-11-25 21:26:12,885 TRACE  [main] BasicExtractor: extracted value ([binary_v2_0_1_] : [BLOB]) - [null]
2020-11-25 21:26:12,885 TRACE  [main] BasicExtractor: extracted value ([float_va3_0_1_] : [DOUBLE]) - [148.4131591025766]
2020-11-25 21:26:12,885 TRACE  [main] BasicExtractor: extracted value ([i4_0_1_] : [INTEGER]) - [0]
2020-11-25 21:26:12,886 TRACE  [main] BasicExtractor: extracted value ([is_condi5_0_1_] : [BOOLEAN]) - [true]
2020-11-25 21:26:12,886 TRACE  [main] BasicExtractor: extracted value ([j6_0_1_] : [INTEGER]) - [5]
2020-11-25 21:26:12,886 TRACE  [main] BasicExtractor: extracted value ([problem_7_0_1_] : [BIGINT]) - [12]
2020-11-25 21:26:12,886 TRACE  [main] BasicExtractor: extracted value ([problem_7_0_0_] : [BIGINT]) - [12]
2020-11-25 21:26:12,886 TRACE  [main] BasicExtractor: extracted value ([id1_0_0_] : [BIGINT]) - [72]
2020-11-25 21:26:12,901 TRACE  [main] BasicBinder: binding parameter [1] as [BIGINT] - [67]
2020-11-25 21:26:12,904 TRACE  [main] BasicBinder: binding parameter [1] as [BIGINT] - [68]
2020-11-25 21:26:12,904 TRACE  [main] BasicBinder: binding parameter [1] as [BIGINT] - [69]
2020-11-25 21:26:12,905 TRACE  [main] BasicBinder: binding parameter [1] as [BIGINT] - [70]
2020-11-25 21:26:12,907 TRACE  [main] BasicBinder: binding parameter [1] as [BIGINT] - [71]
2020-11-25 21:26:12,908 TRACE  [main] BasicBinder: binding parameter [1] as [BIGINT] - [72]
2020-11-25 21:26:12,909 TRACE  [main] BasicBinder: binding parameter [1] as [BIGINT] - [12]
2020-11-25 21:26:12,912 TRACE  [main] BasicBinder: binding parameter [1] as [BIGINT] - [12]
2020-11-25 21:26:12,914 WARN   [main] ProblemService: Problem with 12 is not found
2020-11-25 21:26:13,681 DEBUG  [main] BasicTypeRegistry: Adding type registration boolean -> org.hibernate.type.BooleanType@7dee835
2020-11-25 21:26:13,681 DEBUG  [main] BasicTypeRegistry: Adding type registration boolean -> org.hibernate.type.BooleanType@7dee835
2020-11-25 21:26:13,682 DEBUG  [main] BasicTypeRegistry: Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@7dee835
2020-11-25 21:26:13,682 DEBUG  [main] BasicTypeRegistry: Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@2c1f8dbd
2020-11-25 21:26:13,682 DEBUG  [main] BasicTypeRegistry: Adding type registration true_false -> org.hibernate.type.TrueFalseType@335f5c69
2020-11-25 21:26:13,683 DEBUG  [main] BasicTypeRegistry: Adding type registration yes_no -> org.hibernate.type.YesNoType@2d258eff
2020-11-25 21:26:13,685 DEBUG  [main] BasicTypeRegistry: Adding type registration byte -> org.hibernate.type.ByteType@2e7af36e
2020-11-25 21:26:13,685 DEBUG  [main] BasicTypeRegistry: Adding type registration byte -> org.hibernate.type.ByteType@2e7af36e
2020-11-25 21:26:13,685 DEBUG  [main] BasicTypeRegistry: Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@2e7af36e
2020-11-25 21:26:13,686 DEBUG  [main] BasicTypeRegistry: Adding type registration character -> org.hibernate.type.CharacterType@7fe07361
2020-11-25 21:26:13,686 DEBUG  [main] BasicTypeRegistry: Adding type registration char -> org.hibernate.type.CharacterType@7fe07361
2020-11-25 21:26:13,686 DEBUG  [main] BasicTypeRegistry: Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@7fe07361
2020-11-25 21:26:13,686 DEBUG  [main] BasicTypeRegistry: Adding type registration short -> org.hibernate.type.ShortType@108e9837
2020-11-25 21:26:13,687 DEBUG  [main] BasicTypeRegistry: Adding type registration short -> org.hibernate.type.ShortType@108e9837
2020-11-25 21:26:13,687 DEBUG  [main] BasicTypeRegistry: Adding type registration java.lang.Short -> org.hibernate.type.ShortType@108e9837
2020-11-25 21:26:13,693 DEBUG  [main] BasicTypeRegistry: Adding type registration integer -> org.hibernate.type.IntegerType@30c19bff
2020-11-25 21:26:13,694 DEBUG  [main] BasicTypeRegistry: Adding type registration int -> org.hibernate.type.IntegerType@30c19bff
2020-11-25 21:26:13,694 DEBUG  [main] BasicTypeRegistry: Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@30c19bff
2020-11-25 21:26:13,694 DEBUG  [main] BasicTypeRegistry: Adding type registration long -> org.hibernate.type.LongType@39da5e49
2020-11-25 21:26:13,695 DEBUG  [main] BasicTypeRegistry: Adding type registration long -> org.hibernate.type.LongType@39da5e49
2020-11-25 21:26:13,695 DEBUG  [main] BasicTypeRegistry: Adding type registration java.lang.Long -> org.hibernate.type.LongType@39da5e49
2020-11-25 21:26:13,695 DEBUG  [main] BasicTypeRegistry: Adding type registration float -> org.hibernate.type.FloatType@5934ca1e
2020-11-25 21:26:13,696 DEBUG  [main] BasicTypeRegistry: Adding type registration float -> org.hibernate.type.FloatType@5934ca1e
2020-11-25 21:26:13,696 DEBUG  [main] BasicTypeRegistry: Adding type registration java.lang.Float -> org.hibernate.type.FloatType@5934ca1e
2020-11-25 21:26:13,696 DEBUG  [main] BasicTypeRegistry: Adding type registration double -> org.hibernate.type.DoubleType@4b87074a
2020-11-25 21:26:13,697 DEBUG  [main] BasicTypeRegistry: Adding type registration double -> org.hibernate.type.DoubleType@4b87074a
2020-11-25 21:26:13,697 DEBUG  [main] BasicTypeRegistry: Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@4b87074a
2020-11-25 21:26:13,697 DEBUG  [main] BasicTypeRegistry: Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@27585351
2020-11-25 21:26:13,698 DEBUG  [main] BasicTypeRegistry: Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@27585351
2020-11-25 21:26:13,698 DEBUG  [main] BasicTypeRegistry: Adding type registration big_integer -> org.hibernate.type.BigIntegerType@56826a75
2020-11-25 21:26:13,698 DEBUG  [main] BasicTypeRegistry: Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@56826a75
2020-11-25 21:26:13,699 DEBUG  [main] BasicTypeRegistry: Adding type registration string -> org.hibernate.type.StringType@740dcae3
2020-11-25 21:26:13,699 DEBUG  [main] BasicTypeRegistry: Adding type registration java.lang.String -> org.hibernate.type.StringType@740dcae3
2020-11-25 21:26:13,699 DEBUG  [main] BasicTypeRegistry: Adding type registration nstring -> org.hibernate.type.StringNVarcharType@2b6c7012
2020-11-25 21:26:13,700 DEBUG  [main] BasicTypeRegistry: Adding type registration ncharacter -> org.hibernate.type.CharacterNCharType@4e80a001
2020-11-25 21:26:13,700 DEBUG  [main] BasicTypeRegistry: Adding type registration url -> org.hibernate.type.UrlType@7455dacb
2020-11-25 21:26:13,700 DEBUG  [main] BasicTypeRegistry: Adding type registration java.net.URL -> org.hibernate.type.UrlType@7455dacb
2020-11-25 21:26:13,700 DEBUG  [main] BasicTypeRegistry: Adding type registration Duration -> org.hibernate.type.DurationType@52bd9a27
2020-11-25 21:26:13,700 DEBUG  [main] BasicTypeRegistry: Adding type registration java.time.Duration -> org.hibernate.type.DurationType@52bd9a27
2020-11-25 21:26:13,701 DEBUG  [main] BasicTypeRegistry: Adding type registration Instant -> org.hibernate.type.InstantType@5ed5b321
2020-11-25 21:26:13,701 DEBUG  [main] BasicTypeRegistry: Adding type registration java.time.Instant -> org.hibernate.type.InstantType@5ed5b321
2020-11-25 21:26:13,701 DEBUG  [main] BasicTypeRegistry: Adding type registration LocalDateTime -> org.hibernate.type.LocalDateTimeType@6d6bff89
2020-11-25 21:26:13,701 DEBUG  [main] BasicTypeRegistry: Adding type registration java.time.LocalDateTime -> org.hibernate.type.LocalDateTimeType@6d6bff89
2020-11-25 21:26:13,701 DEBUG  [main] BasicTypeRegistry: Adding type registration LocalDate -> org.hibernate.type.LocalDateType@61149fa5
2020-11-25 21:26:13,701 DEBUG  [main] BasicTypeRegistry: Adding type registration java.time.LocalDate -> org.hibernate.type.LocalDateType@61149fa5
2020-11-25 21:26:13,701 DEBUG  [main] BasicTypeRegistry: Adding type registration LocalTime -> org.hibernate.type.LocalTimeType@10980560
2020-11-25 21:26:13,702 DEBUG  [main] BasicTypeRegistry: Adding type registration java.time.LocalTime -> org.hibernate.type.LocalTimeType@10980560
2020-11-25 21:26:13,702 DEBUG  [main] BasicTypeRegistry: Adding type registration OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@3d9f0a5
2020-11-25 21:26:13,702 DEBUG  [main] BasicTypeRegistry: Adding type registration java.time.OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@3d9f0a5
2020-11-25 21:26:13,702 DEBUG  [main] BasicTypeRegistry: Adding type registration OffsetTime -> org.hibernate.type.OffsetTimeType@1cb9ef52
2020-11-25 21:26:13,702 DEBUG  [main] BasicTypeRegistry: Adding type registration java.time.OffsetTime -> org.hibernate.type.OffsetTimeType@1cb9ef52
2020-11-25 21:26:13,702 DEBUG  [main] BasicTypeRegistry: Adding type registration ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@2506e949
2020-11-25 21:26:13,702 DEBUG  [main] BasicTypeRegistry: Adding type registration java.time.ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@2506e949
2020-11-25 21:26:13,703 DEBUG  [main] BasicTypeRegistry: Adding type registration date -> org.hibernate.type.DateType@16e99306
2020-11-25 21:26:13,703 DEBUG  [main] BasicTypeRegistry: Adding type registration java.sql.Date -> org.hibernate.type.DateType@16e99306
2020-11-25 21:26:13,703 DEBUG  [main] BasicTypeRegistry: Adding type registration time -> org.hibernate.type.TimeType@11d4d979
2020-11-25 21:26:13,703 DEBUG  [main] BasicTypeRegistry: Adding type registration java.sql.Time -> org.hibernate.type.TimeType@11d4d979
2020-11-25 21:26:13,703 DEBUG  [main] BasicTypeRegistry: Adding type registration timestamp -> org.hibernate.type.TimestampType@1f71194d
2020-11-25 21:26:13,703 DEBUG  [main] BasicTypeRegistry: Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@1f71194d
2020-11-25 21:26:13,703 DEBUG  [main] BasicTypeRegistry: Adding type registration java.util.Date -> org.hibernate.type.TimestampType@1f71194d
2020-11-25 21:26:13,703 DEBUG  [main] BasicTypeRegistry: Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@7a083b96
2020-11-25 21:26:13,704 DEBUG  [main] BasicTypeRegistry: Adding type registration calendar -> org.hibernate.type.CalendarType@260e3837
2020-11-25 21:26:13,704 DEBUG  [main] BasicTypeRegistry: Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@260e3837
2020-11-25 21:26:13,705 DEBUG  [main] BasicTypeRegistry: Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@260e3837
2020-11-25 21:26:13,705 DEBUG  [main] BasicTypeRegistry: Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@498a612d
2020-11-25 21:26:13,705 DEBUG  [main] BasicTypeRegistry: Adding type registration locale -> org.hibernate.type.LocaleType@c1e14f
2020-11-25 21:26:13,705 DEBUG  [main] BasicTypeRegistry: Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@c1e14f
2020-11-25 21:26:13,706 DEBUG  [main] BasicTypeRegistry: Adding type registration currency -> org.hibernate.type.CurrencyType@364b1061
2020-11-25 21:26:13,706 DEBUG  [main] BasicTypeRegistry: Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@364b1061
2020-11-25 21:26:13,706 DEBUG  [main] BasicTypeRegistry: Adding type registration timezone -> org.hibernate.type.TimeZoneType@2c30c81d
2020-11-25 21:26:13,707 DEBUG  [main] BasicTypeRegistry: Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@2c30c81d
2020-11-25 21:26:13,707 DEBUG  [main] BasicTypeRegistry: Adding type registration class -> org.hibernate.type.ClassType@23310248
2020-11-25 21:26:13,707 DEBUG  [main] BasicTypeRegistry: Adding type registration java.lang.Class -> org.hibernate.type.ClassType@23310248
2020-11-25 21:26:13,708 DEBUG  [main] BasicTypeRegistry: Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@3c19592c
2020-11-25 21:26:13,708 DEBUG  [main] BasicTypeRegistry: Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@3c19592c
2020-11-25 21:26:13,708 DEBUG  [main] BasicTypeRegistry: Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@87d9a01
2020-11-25 21:26:13,709 DEBUG  [main] BasicTypeRegistry: Adding type registration binary -> org.hibernate.type.BinaryType@4f7be6c8
2020-11-25 21:26:13,709 DEBUG  [main] BasicTypeRegistry: Adding type registration byte[] -> org.hibernate.type.BinaryType@4f7be6c8
2020-11-25 21:26:13,709 DEBUG  [main] BasicTypeRegistry: Adding type registration [B -> org.hibernate.type.BinaryType@4f7be6c8
2020-11-25 21:26:13,709 DEBUG  [main] BasicTypeRegistry: Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@61e86192
2020-11-25 21:26:13,710 DEBUG  [main] BasicTypeRegistry: Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@61e86192
2020-11-25 21:26:13,710 DEBUG  [main] BasicTypeRegistry: Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@61e86192
2020-11-25 21:26:13,711 DEBUG  [main] BasicTypeRegistry: Adding type registration row_version -> org.hibernate.type.RowVersionType@45a1d057
2020-11-25 21:26:13,711 DEBUG  [main] BasicTypeRegistry: Adding type registration image -> org.hibernate.type.ImageType@4315c28c
2020-11-25 21:26:13,711 DEBUG  [main] BasicTypeRegistry: Adding type registration characters -> org.hibernate.type.CharArrayType@76437e9b
2020-11-25 21:26:13,712 DEBUG  [main] BasicTypeRegistry: Adding type registration char[] -> org.hibernate.type.CharArrayType@76437e9b
2020-11-25 21:26:13,712 DEBUG  [main] BasicTypeRegistry: Adding type registration [C -> org.hibernate.type.CharArrayType@76437e9b
2020-11-25 21:26:13,712 DEBUG  [main] BasicTypeRegistry: Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@32256e68
2020-11-25 21:26:13,712 DEBUG  [main] BasicTypeRegistry: Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@32256e68
2020-11-25 21:26:13,713 DEBUG  [main] BasicTypeRegistry: Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@32256e68
2020-11-25 21:26:13,713 DEBUG  [main] BasicTypeRegistry: Adding type registration text -> org.hibernate.type.TextType@63bfdbcb
2020-11-25 21:26:13,713 DEBUG  [main] BasicTypeRegistry: Adding type registration ntext -> org.hibernate.type.NTextType@3e1f1046
2020-11-25 21:26:13,714 DEBUG  [main] BasicTypeRegistry: Adding type registration blob -> org.hibernate.type.BlobType@4b97b3d2
2020-11-25 21:26:13,714 DEBUG  [main] BasicTypeRegistry: Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@4b97b3d2
2020-11-25 21:26:13,714 DEBUG  [main] BasicTypeRegistry: Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@96897c8
2020-11-25 21:26:13,715 DEBUG  [main] BasicTypeRegistry: Adding type registration clob -> org.hibernate.type.ClobType@4f820f42
2020-11-25 21:26:13,715 DEBUG  [main] BasicTypeRegistry: Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@4f820f42
2020-11-25 21:26:13,715 DEBUG  [main] BasicTypeRegistry: Adding type registration nclob -> org.hibernate.type.NClobType@ce12fbb
2020-11-25 21:26:13,716 DEBUG  [main] BasicTypeRegistry: Adding type registration java.sql.NClob -> org.hibernate.type.NClobType@ce12fbb
2020-11-25 21:26:13,716 DEBUG  [main] BasicTypeRegistry: Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@6c33da7a
2020-11-25 21:26:13,716 DEBUG  [main] BasicTypeRegistry: Adding type registration materialized_nclob -> org.hibernate.type.MaterializedNClobType@15986dd5
2020-11-25 21:26:13,716 DEBUG  [main] BasicTypeRegistry: Adding type registration serializable -> org.hibernate.type.SerializableType@59d0cdb6
2020-11-25 21:26:13,717 DEBUG  [main] BasicTypeRegistry: Adding type registration object -> org.hibernate.type.ObjectType@5a566922
2020-11-25 21:26:13,717 DEBUG  [main] BasicTypeRegistry: Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@5a566922
2020-11-25 21:26:13,717 DEBUG  [main] BasicTypeRegistry: Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@6bbac73d
2020-11-25 21:26:13,718 DEBUG  [main] BasicTypeRegistry: Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@4e53c6ef
2020-11-25 21:26:13,718 DEBUG  [main] BasicTypeRegistry: Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@6164b3a2
2020-11-25 21:26:13,718 DEBUG  [main] BasicTypeRegistry: Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@345af277
2020-11-25 21:26:13,719 DEBUG  [main] BasicTypeRegistry: Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@96448ee
2020-11-25 21:26:13,719 DEBUG  [main] BasicTypeRegistry: Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@59509393
2020-11-25 21:26:13,719 DEBUG  [main] BasicTypeRegistry: Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@1d6dc2b8
2020-11-25 21:26:13,720 DEBUG  [main] BasicTypeRegistry: Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@7ec75228
2020-11-25 21:26:13,743 DEBUG  [main] TypeConfiguration$Scope: Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@7af7c9aa] to MetadataBuildingContext [org.hibernate.boot.internal.MetadataBuildingContextRootImpl@208b8425]
2020-11-25 21:26:13,761 DEBUG  [main] EnumType: Using NAMED-based conversion for Enum com.sf.back.entities.Kind
2020-11-25 21:26:13,765 DEBUG  [main] EnumType: Using NAMED-based conversion for Enum com.sf.back.entities.Kind
2020-11-25 21:26:13,794 DEBUG  [main] TypeConfiguration$Scope: Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@7af7c9aa] to SessionFactoryImpl [org.hibernate.internal.SessionFactoryImpl@e98adb2]
2020-11-25 21:26:13,796 DEBUG  [main] EnumType: Using NAMED-based conversion for Enum com.sf.back.entities.Kind
2020-11-25 21:26:13,796 DEBUG  [main] EnumType: Using NAMED-based conversion for Enum com.sf.back.entities.Kind
2020-11-25 21:26:13,806 DEBUG  [main] EnumType: Using NAMED-based conversion for Enum com.sf.back.entities.Kind
2020-11-25 21:26:13,806 DEBUG  [main] EnumType: Using NAMED-based conversion for Enum com.sf.back.entities.Kind
2020-11-25 21:26:13,826 DEBUG  [main] EnumType: Using NAMED-based conversion for Enum com.sf.back.entities.Kind
2020-11-25 21:26:13,831 DEBUG  [main] EnumType: Using NAMED-based conversion for Enum com.sf.back.entities.Kind
2020-11-25 21:26:13,841 DEBUG  [main] EnumType: Using NAMED-based conversion for Enum com.sf.back.entities.Kind
2020-11-25 21:26:13,849 TRACE  [main] TypeConfiguration$Scope: Handling #sessionFactoryCreated from [org.hibernate.internal.SessionFactoryImpl@e98adb2] for TypeConfiguration
2020-11-25 21:26:14,008 WARN   [main] JpaBaseConfiguration$JpaWebConfiguration: spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2020-11-25 21:26:14,146 WARN   [main] GroovyTemplateAutoConfiguration: Cannot find template location: classpath:/templates/ (please add some templates, check your Groovy configuration, or set spring.groovy.template.check-template-location=false)
2020-11-25 21:26:14,173 TRACE  [main] BasicBinder: binding parameter [1] as [BLOB] - [[70, 105, 110, 100, 32, 97, 108, 108, 32, 114, 111, 111, 116, 115, 32, 111, 102, 32, 103, 105, 118, 101, 110, 32, 112, 111, 108, 121, 110, 111, 109, 105, 97, 108]]
2020-11-25 21:26:14,173 TRACE  [main] BasicBinder: binding parameter [2] as [BOOLEAN] - [false]
2020-11-25 21:26:14,173 TRACE  [main] BasicBinder: binding parameter [3] as [VARCHAR] - [POLYNOMIAL]
2020-11-25 21:26:14,173 TRACE  [main] BasicBinder: binding parameter [4] as [INTEGER] - [1]
2020-11-25 21:26:14,173 TRACE  [main] BasicBinder: binding parameter [5] as [BIGINT] - [null]
2020-11-25 21:26:14,174 TRACE  [main] BasicBinder: binding parameter [6] as [INTEGER] - [6]
2020-11-25 21:26:14,175 TRACE  [main] BasicBinder: binding parameter [1] as [BLOB] - [null]
2020-11-25 21:26:14,175 TRACE  [main] BasicBinder: binding parameter [2] as [DOUBLE] - [1.0]
2020-11-25 21:26:14,175 TRACE  [main] BasicBinder: binding parameter [3] as [INTEGER] - [0]
2020-11-25 21:26:14,176 TRACE  [main] BasicBinder: binding parameter [4] as [BOOLEAN] - [true]
2020-11-25 21:26:14,176 TRACE  [main] BasicBinder: binding parameter [5] as [INTEGER] - [0]
2020-11-25 21:26:14,176 TRACE  [main] BasicBinder: binding parameter [6] as [BIGINT] - [1]
2020-11-25 21:26:14,177 TRACE  [main] BasicBinder: binding parameter [1] as [BLOB] - [null]
2020-11-25 21:26:14,178 TRACE  [main] BasicBinder: binding parameter [2] as [DOUBLE] - [2.0]
2020-11-25 21:26:14,178 TRACE  [main] BasicBinder: binding parameter [3] as [INTEGER] - [0]
2020-11-25 21:26:14,178 TRACE  [main] BasicBinder: binding parameter [4] as [BOOLEAN] - [true]
2020-11-25 21:26:14,178 TRACE  [main] BasicBinder: binding parameter [5] as [INTEGER] - [1]
2020-11-25 21:26:14,178 TRACE  [main] BasicBinder: binding parameter [6] as [BIGINT] - [1]
2020-11-25 21:26:14,180 TRACE  [main] BasicBinder: binding parameter [1] as [BLOB] - [null]
2020-11-25 21:26:14,180 TRACE  [main] BasicBinder: binding parameter [2] as [DOUBLE] - [1.0]
2020-11-25 21:26:14,181 TRACE  [main] BasicBinder: binding parameter [3] as [INTEGER] - [0]
2020-11-25 21:26:14,181 TRACE  [main] BasicBinder: binding parameter [4] as [BOOLEAN] - [true]
2020-11-25 21:26:14,181 TRACE  [main] BasicBinder: binding parameter [5] as [INTEGER] - [2]
2020-11-25 21:26:14,181 TRACE  [main] BasicBinder: binding parameter [6] as [BIGINT] - [1]
2020-11-25 21:26:14,183 TRACE  [main] BasicBinder: binding parameter [1] as [BLOB] - [null]
2020-11-25 21:26:14,183 TRACE  [main] BasicBinder: binding parameter [2] as [DOUBLE] - [1.0]
2020-11-25 21:26:14,183 TRACE  [main] BasicBinder: binding parameter [3] as [INTEGER] - [0]
2020-11-25 21:26:14,183 TRACE  [main] BasicBinder: binding parameter [4] as [BOOLEAN] - [false]
2020-11-25 21:26:14,183 TRACE  [main] BasicBinder: binding parameter [5] as [INTEGER] - [0]
2020-11-25 21:26:14,184 TRACE  [main] BasicBinder: binding parameter [6] as [BIGINT] - [1]
2020-11-25 21:26:14,185 TRACE  [main] BasicBinder: binding parameter [1] as [BLOB] - [null]
2020-11-25 21:26:14,185 TRACE  [main] BasicBinder: binding parameter [2] as [DOUBLE] - [1.0]
2020-11-25 21:26:14,185 TRACE  [main] BasicBinder: binding parameter [3] as [INTEGER] - [0]
2020-11-25 21:26:14,186 TRACE  [main] BasicBinder: binding parameter [4] as [BOOLEAN] - [false]
2020-11-25 21:26:14,186 TRACE  [main] BasicBinder: binding parameter [5] as [INTEGER] - [1]
2020-11-25 21:26:14,186 TRACE  [main] BasicBinder: binding parameter [6] as [BIGINT] - [1]
2020-11-25 21:26:14,530 WARN   [SpringContextShutdownHook] SqlExceptionHelper: SQL Error: 90121, SQLState: 90121
2020-11-25 21:26:14,540 ERROR  [SpringContextShutdownHook] SqlExceptionHelper: Database is already closed (to disable automatic closing at VM shutdown, add ";DB_CLOSE_ON_EXIT=FALSE" to the db URL) [90121-200]
2020-11-25 21:26:14,541 WARN   [SpringContextShutdownHook] SqlExceptionHelper: SQL Error: 90121, SQLState: 90121
2020-11-25 21:26:14,542 ERROR  [SpringContextShutdownHook] SqlExceptionHelper: Database is already closed (to disable automatic closing at VM shutdown, add ";DB_CLOSE_ON_EXIT=FALSE" to the db URL) [90121-200]
2020-11-25 21:26:14,542 WARN   [SpringContextShutdownHook] DisposableBeanAdapter: Invocation of destroy method failed on bean with name 'entityManagerFactory': org.hibernate.exception.JDBCConnectionException: Unable to release JDBC Connection used for DDL execution
2020-11-25 21:26:14,730 TRACE  [SpringContextShutdownHook] TypeConfiguration$Scope: Handling #sessionFactoryClosed from [org.hibernate.internal.SessionFactoryImpl@1ff23bd1] for TypeConfiguration
2020-11-25 21:26:14,731 DEBUG  [SpringContextShutdownHook] TypeConfiguration$Scope: Un-scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration$Scope@734097a6] from SessionFactory [org.hibernate.internal.SessionFactoryImpl@1ff23bd1]
2020-11-25 21:26:14,731 TRACE  [SpringContextShutdownHook] TypeConfiguration$Scope: Handling #sessionFactoryClosed from [org.hibernate.internal.SessionFactoryImpl@21090c88] for TypeConfiguration
2020-11-25 21:26:14,732 DEBUG  [SpringContextShutdownHook] TypeConfiguration$Scope: Un-scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration$Scope@40b401a7] from SessionFactory [org.hibernate.internal.SessionFactoryImpl@21090c88]
2020-11-25 21:27:43,503 DEBUG  [main] BasicTypeRegistry: Adding type registration boolean -> org.hibernate.type.BooleanType@a85644c
2020-11-25 21:27:43,564 DEBUG  [main] BasicTypeRegistry: Adding type registration boolean -> org.hibernate.type.BooleanType@a85644c
2020-11-25 21:27:43,565 DEBUG  [main] BasicTypeRegistry: Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@a85644c
2020-11-25 21:27:43,567 DEBUG  [main] BasicTypeRegistry: Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@30c19bff
2020-11-25 21:27:43,570 DEBUG  [main] BasicTypeRegistry: Adding type registration true_false -> org.hibernate.type.TrueFalseType@71664560
2020-11-25 21:27:43,573 DEBUG  [main] BasicTypeRegistry: Adding type registration yes_no -> org.hibernate.type.YesNoType@2443abd6
2020-11-25 21:27:43,577 DEBUG  [main] BasicTypeRegistry: Adding type registration byte -> org.hibernate.type.ByteType@5348d83c
2020-11-25 21:27:43,580 DEBUG  [main] BasicTypeRegistry: Adding type registration byte -> org.hibernate.type.ByteType@5348d83c
2020-11-25 21:27:43,582 DEBUG  [main] BasicTypeRegistry: Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@5348d83c
2020-11-25 21:27:43,584 DEBUG  [main] BasicTypeRegistry: Adding type registration character -> org.hibernate.type.CharacterType@d3e3085
2020-11-25 21:27:43,585 DEBUG  [main] BasicTypeRegistry: Adding type registration char -> org.hibernate.type.CharacterType@d3e3085
2020-11-25 21:27:43,589 DEBUG  [main] BasicTypeRegistry: Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@d3e3085
2020-11-25 21:27:43,594 DEBUG  [main] BasicTypeRegistry: Adding type registration short -> org.hibernate.type.ShortType@2de6f1bc
2020-11-25 21:27:43,595 DEBUG  [main] BasicTypeRegistry: Adding type registration short -> org.hibernate.type.ShortType@2de6f1bc
2020-11-25 21:27:43,596 DEBUG  [main] BasicTypeRegistry: Adding type registration java.lang.Short -> org.hibernate.type.ShortType@2de6f1bc
2020-11-25 21:27:43,598 DEBUG  [main] BasicTypeRegistry: Adding type registration integer -> org.hibernate.type.IntegerType@49cd946c
2020-11-25 21:27:43,602 DEBUG  [main] BasicTypeRegistry: Adding type registration int -> org.hibernate.type.IntegerType@49cd946c
2020-11-25 21:27:43,603 DEBUG  [main] BasicTypeRegistry: Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@49cd946c
2020-11-25 21:27:43,611 DEBUG  [main] BasicTypeRegistry: Adding type registration long -> org.hibernate.type.LongType@4e140497
2020-11-25 21:27:43,612 DEBUG  [main] BasicTypeRegistry: Adding type registration long -> org.hibernate.type.LongType@4e140497
2020-11-25 21:27:43,613 DEBUG  [main] BasicTypeRegistry: Adding type registration java.lang.Long -> org.hibernate.type.LongType@4e140497
2020-11-25 21:27:43,615 DEBUG  [main] BasicTypeRegistry: Adding type registration float -> org.hibernate.type.FloatType@4e80a001
2020-11-25 21:27:43,616 DEBUG  [main] BasicTypeRegistry: Adding type registration float -> org.hibernate.type.FloatType@4e80a001
2020-11-25 21:27:43,617 DEBUG  [main] BasicTypeRegistry: Adding type registration java.lang.Float -> org.hibernate.type.FloatType@4e80a001
2020-11-25 21:27:43,619 DEBUG  [main] BasicTypeRegistry: Adding type registration double -> org.hibernate.type.DoubleType@7455dacb
2020-11-25 21:27:43,625 DEBUG  [main] BasicTypeRegistry: Adding type registration double -> org.hibernate.type.DoubleType@7455dacb
2020-11-25 21:27:43,628 DEBUG  [main] BasicTypeRegistry: Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@7455dacb
2020-11-25 21:27:43,634 DEBUG  [main] BasicTypeRegistry: Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@52bd9a27
2020-11-25 21:27:43,636 DEBUG  [main] BasicTypeRegistry: Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@52bd9a27
2020-11-25 21:27:43,637 DEBUG  [main] BasicTypeRegistry: Adding type registration big_integer -> org.hibernate.type.BigIntegerType@5ed5b321
2020-11-25 21:27:43,639 DEBUG  [main] BasicTypeRegistry: Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@5ed5b321
2020-11-25 21:27:43,642 DEBUG  [main] BasicTypeRegistry: Adding type registration string -> org.hibernate.type.StringType@6d6bff89
2020-11-25 21:27:43,643 DEBUG  [main] BasicTypeRegistry: Adding type registration java.lang.String -> org.hibernate.type.StringType@6d6bff89
2020-11-25 21:27:43,644 DEBUG  [main] BasicTypeRegistry: Adding type registration nstring -> org.hibernate.type.StringNVarcharType@58eac00e
2020-11-25 21:27:43,646 DEBUG  [main] BasicTypeRegistry: Adding type registration ncharacter -> org.hibernate.type.CharacterNCharType@149c39b
2020-11-25 21:27:43,651 DEBUG  [main] BasicTypeRegistry: Adding type registration url -> org.hibernate.type.UrlType@739e8b96
2020-11-25 21:27:43,652 DEBUG  [main] BasicTypeRegistry: Adding type registration java.net.URL -> org.hibernate.type.UrlType@739e8b96
2020-11-25 21:27:43,654 DEBUG  [main] BasicTypeRegistry: Adding type registration Duration -> org.hibernate.type.DurationType@1953bc95
2020-11-25 21:27:43,656 DEBUG  [main] BasicTypeRegistry: Adding type registration java.time.Duration -> org.hibernate.type.DurationType@1953bc95
2020-11-25 21:27:43,659 DEBUG  [main] BasicTypeRegistry: Adding type registration Instant -> org.hibernate.type.InstantType@5a622fe8
2020-11-25 21:27:43,659 DEBUG  [main] BasicTypeRegistry: Adding type registration java.time.Instant -> org.hibernate.type.InstantType@5a622fe8
2020-11-25 21:27:43,662 DEBUG  [main] BasicTypeRegistry: Adding type registration LocalDateTime -> org.hibernate.type.LocalDateTimeType@4a89ef44
2020-11-25 21:27:43,664 DEBUG  [main] BasicTypeRegistry: Adding type registration java.time.LocalDateTime -> org.hibernate.type.LocalDateTimeType@4a89ef44
2020-11-25 21:27:43,668 DEBUG  [main] BasicTypeRegistry: Adding type registration LocalDate -> org.hibernate.type.LocalDateType@2eada095
2020-11-25 21:27:43,669 DEBUG  [main] BasicTypeRegistry: Adding type registration java.time.LocalDate -> org.hibernate.type.LocalDateType@2eada095
2020-11-25 21:27:43,675 DEBUG  [main] BasicTypeRegistry: Adding type registration LocalTime -> org.hibernate.type.LocalTimeType@6f1c3f18
2020-11-25 21:27:43,677 DEBUG  [main] BasicTypeRegistry: Adding type registration java.time.LocalTime -> org.hibernate.type.LocalTimeType@6f1c3f18
2020-11-25 21:27:43,680 DEBUG  [main] BasicTypeRegistry: Adding type registration OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@236fdf
2020-11-25 21:27:43,681 DEBUG  [main] BasicTypeRegistry: Adding type registration java.time.OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@236fdf
2020-11-25 21:27:43,684 DEBUG  [main] BasicTypeRegistry: Adding type registration OffsetTime -> org.hibernate.type.OffsetTimeType@93501be
2020-11-25 21:27:43,684 DEBUG  [main] BasicTypeRegistry: Adding type registration java.time.OffsetTime -> org.hibernate.type.OffsetTimeType@93501be
2020-11-25 21:27:43,697 DEBUG  [main] BasicTypeRegistry: Adding type registration ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@88b76f2
2020-11-25 21:27:43,698 DEBUG  [main] BasicTypeRegistry: Adding type registration java.time.ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@88b76f2
2020-11-25 21:27:43,702 DEBUG  [main] BasicTypeRegistry: Adding type registration date -> org.hibernate.type.DateType@c1e14f
2020-11-25 21:27:43,702 DEBUG  [main] BasicTypeRegistry: Adding type registration java.sql.Date -> org.hibernate.type.DateType@c1e14f
2020-11-25 21:27:43,708 DEBUG  [main] BasicTypeRegistry: Adding type registration time -> org.hibernate.type.TimeType@364b1061
2020-11-25 21:27:43,709 DEBUG  [main] BasicTypeRegistry: Adding type registration java.sql.Time -> org.hibernate.type.TimeType@364b1061
2020-11-25 21:27:43,713 DEBUG  [main] BasicTypeRegistry: Adding type registration timestamp -> org.hibernate.type.TimestampType@2c30c81d
2020-11-25 21:27:43,714 DEBUG  [main] BasicTypeRegistry: Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@2c30c81d
2020-11-25 21:27:43,714 DEBUG  [main] BasicTypeRegistry: Adding type registration java.util.Date -> org.hibernate.type.TimestampType@2c30c81d
2020-11-25 21:27:43,718 DEBUG  [main] BasicTypeRegistry: Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@19da993b
2020-11-25 21:27:43,725 DEBUG  [main] BasicTypeRegistry: Adding type registration calendar -> org.hibernate.type.CalendarType@741741d0
2020-11-25 21:27:43,726 DEBUG  [main] BasicTypeRegistry: Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@741741d0
2020-11-25 21:27:43,727 DEBUG  [main] BasicTypeRegistry: Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@741741d0
2020-11-25 21:27:43,729 DEBUG  [main] BasicTypeRegistry: Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@60e1d87c
2020-11-25 21:27:43,731 DEBUG  [main] BasicTypeRegistry: Adding type registration locale -> org.hibernate.type.LocaleType@e5c2463
2020-11-25 21:27:43,732 DEBUG  [main] BasicTypeRegistry: Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@e5c2463
2020-11-25 21:27:43,735 DEBUG  [main] BasicTypeRegistry: Adding type registration currency -> org.hibernate.type.CurrencyType@49edcb30
2020-11-25 21:27:43,737 DEBUG  [main] BasicTypeRegistry: Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@49edcb30
2020-11-25 21:27:43,743 DEBUG  [main] BasicTypeRegistry: Adding type registration timezone -> org.hibernate.type.TimeZoneType@4b033eac
2020-11-25 21:27:43,744 DEBUG  [main] BasicTypeRegistry: Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@4b033eac
2020-11-25 21:27:43,748 DEBUG  [main] BasicTypeRegistry: Adding type registration class -> org.hibernate.type.ClassType@4315c28c
2020-11-25 21:27:43,749 DEBUG  [main] BasicTypeRegistry: Adding type registration java.lang.Class -> org.hibernate.type.ClassType@4315c28c
2020-11-25 21:27:43,752 DEBUG  [main] BasicTypeRegistry: Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@76437e9b
2020-11-25 21:27:43,760 DEBUG  [main] BasicTypeRegistry: Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@76437e9b
2020-11-25 21:27:43,765 DEBUG  [main] BasicTypeRegistry: Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@2be818da
2020-11-25 21:27:43,768 DEBUG  [main] BasicTypeRegistry: Adding type registration binary -> org.hibernate.type.BinaryType@63bfdbcb
2020-11-25 21:27:43,769 DEBUG  [main] BasicTypeRegistry: Adding type registration byte[] -> org.hibernate.type.BinaryType@63bfdbcb
2020-11-25 21:27:43,770 DEBUG  [main] BasicTypeRegistry: Adding type registration [B -> org.hibernate.type.BinaryType@63bfdbcb
2020-11-25 21:27:43,775 DEBUG  [main] BasicTypeRegistry: Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@5c931134
2020-11-25 21:27:43,777 DEBUG  [main] BasicTypeRegistry: Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@5c931134
2020-11-25 21:27:43,777 DEBUG  [main] BasicTypeRegistry: Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@5c931134
2020-11-25 21:27:43,779 DEBUG  [main] BasicTypeRegistry: Adding type registration row_version -> org.hibernate.type.RowVersionType@4b97b3d2
2020-11-25 21:27:43,780 DEBUG  [main] BasicTypeRegistry: Adding type registration image -> org.hibernate.type.ImageType@96897c8
2020-11-25 21:27:43,782 DEBUG  [main] BasicTypeRegistry: Adding type registration characters -> org.hibernate.type.CharArrayType@3b9ac754
2020-11-25 21:27:43,783 DEBUG  [main] BasicTypeRegistry: Adding type registration char[] -> org.hibernate.type.CharArrayType@3b9ac754
2020-11-25 21:27:43,784 DEBUG  [main] BasicTypeRegistry: Adding type registration [C -> org.hibernate.type.CharArrayType@3b9ac754
2020-11-25 21:27:43,785 DEBUG  [main] BasicTypeRegistry: Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@79ba0a6f
2020-11-25 21:27:43,787 DEBUG  [main] BasicTypeRegistry: Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@79ba0a6f
2020-11-25 21:27:43,790 DEBUG  [main] BasicTypeRegistry: Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@79ba0a6f
2020-11-25 21:27:43,791 DEBUG  [main] BasicTypeRegistry: Adding type registration text -> org.hibernate.type.TextType@25a1a012
2020-11-25 21:27:43,794 DEBUG  [main] BasicTypeRegistry: Adding type registration ntext -> org.hibernate.type.NTextType@443a53df
2020-11-25 21:27:43,796 DEBUG  [main] BasicTypeRegistry: Adding type registration blob -> org.hibernate.type.BlobType@b950f82
2020-11-25 21:27:43,797 DEBUG  [main] BasicTypeRegistry: Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@b950f82
2020-11-25 21:27:43,798 DEBUG  [main] BasicTypeRegistry: Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@7a1a3468
2020-11-25 21:27:43,802 DEBUG  [main] BasicTypeRegistry: Adding type registration clob -> org.hibernate.type.ClobType@58dad04a
2020-11-25 21:27:43,803 DEBUG  [main] BasicTypeRegistry: Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@58dad04a
2020-11-25 21:27:43,807 DEBUG  [main] BasicTypeRegistry: Adding type registration nclob -> org.hibernate.type.NClobType@467045c4
2020-11-25 21:27:43,808 DEBUG  [main] BasicTypeRegistry: Adding type registration java.sql.NClob -> org.hibernate.type.NClobType@467045c4
2020-11-25 21:27:43,808 DEBUG  [main] BasicTypeRegistry: Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@6f7a2a5
2020-11-25 21:27:43,809 DEBUG  [main] BasicTypeRegistry: Adding type registration materialized_nclob -> org.hibernate.type.MaterializedNClobType@65c17e38
2020-11-25 21:27:43,811 DEBUG  [main] BasicTypeRegistry: Adding type registration serializable -> org.hibernate.type.SerializableType@66749eea
2020-11-25 21:27:43,818 DEBUG  [main] BasicTypeRegistry: Adding type registration object -> org.hibernate.type.ObjectType@15c6027d
2020-11-25 21:27:43,820 DEBUG  [main] BasicTypeRegistry: Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@15c6027d
2020-11-25 21:27:43,821 DEBUG  [main] BasicTypeRegistry: Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@413d2cd1
2020-11-25 21:27:43,824 DEBUG  [main] BasicTypeRegistry: Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@644d1b61
2020-11-25 21:27:43,824 DEBUG  [main] BasicTypeRegistry: Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@2443135
2020-11-25 21:27:43,824 DEBUG  [main] BasicTypeRegistry: Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@184823ed
2020-11-25 21:27:43,825 DEBUG  [main] BasicTypeRegistry: Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@30bbcf91
2020-11-25 21:27:43,828 DEBUG  [main] BasicTypeRegistry: Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@3ca14cf4
2020-11-25 21:27:43,829 DEBUG  [main] BasicTypeRegistry: Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@1f4f0fcc
2020-11-25 21:27:43,830 DEBUG  [main] BasicTypeRegistry: Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@46c10083
2020-11-25 21:27:44,423 DEBUG  [main] TypeConfiguration$Scope: Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@73e1ecd0] to MetadataBuildingContext [org.hibernate.boot.internal.MetadataBuildingContextRootImpl@11eec06b]
2020-11-25 21:27:44,652 DEBUG  [main] EnumType: Using NAMED-based conversion for Enum com.sf.back.entities.Kind
2020-11-25 21:27:44,718 DEBUG  [main] EnumType: Using NAMED-based conversion for Enum com.sf.back.entities.Kind
2020-11-25 21:27:44,841 DEBUG  [main] TypeConfiguration$Scope: Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@73e1ecd0] to SessionFactoryImpl [org.hibernate.internal.SessionFactoryImpl@7996d0d4]
2020-11-25 21:27:45,082 DEBUG  [main] EnumType: Using NAMED-based conversion for Enum com.sf.back.entities.Kind
2020-11-25 21:27:45,083 DEBUG  [main] EnumType: Using NAMED-based conversion for Enum com.sf.back.entities.Kind
2020-11-25 21:27:45,372 DEBUG  [main] EnumType: Using NAMED-based conversion for Enum com.sf.back.entities.Kind
2020-11-25 21:27:45,372 DEBUG  [main] EnumType: Using NAMED-based conversion for Enum com.sf.back.entities.Kind
2020-11-25 21:27:45,548 DEBUG  [main] EnumType: Using NAMED-based conversion for Enum com.sf.back.entities.Kind
2020-11-25 21:27:45,548 DEBUG  [main] EnumType: Using NAMED-based conversion for Enum com.sf.back.entities.Kind
2020-11-25 21:27:45,588 DEBUG  [main] EnumType: Using NAMED-based conversion for Enum com.sf.back.entities.Kind
2020-11-25 21:27:45,614 TRACE  [main] TypeConfiguration$Scope: Handling #sessionFactoryCreated from [org.hibernate.internal.SessionFactoryImpl@7996d0d4] for TypeConfiguration
2020-11-25 21:27:46,186 WARN   [main] GlobalSettings: Dozer configuration file not found: dozer.properties.  Using defaults for all Dozer global properties.
2020-11-25 21:27:47,382 WARN   [main] JpaBaseConfiguration$JpaWebConfiguration: spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2020-11-25 21:27:49,031 WARN   [main] GroovyTemplateAutoConfiguration: Cannot find template location: classpath:/templates/ (please add some templates, check your Groovy configuration, or set spring.groovy.template.check-template-location=false)
2020-11-25 21:27:50,033 TRACE  [main] BasicBinder: binding parameter [1] as [BLOB] - [[70, 105, 110, 100, 32, 97, 108, 108, 32, 114, 111, 111, 116, 115, 32, 111, 102, 32, 103, 105, 118, 101, 110, 32, 112, 111, 108, 121, 110, 111, 109, 105, 97, 108]]
2020-11-25 21:27:50,036 TRACE  [main] BasicBinder: binding parameter [2] as [BOOLEAN] - [false]
2020-11-25 21:27:50,037 TRACE  [main] BasicBinder: binding parameter [3] as [VARCHAR] - [POLYNOMIAL]
2020-11-25 21:27:50,041 TRACE  [main] BasicBinder: binding parameter [4] as [INTEGER] - [1]
2020-11-25 21:27:50,042 TRACE  [main] BasicBinder: binding parameter [5] as [BIGINT] - [null]
2020-11-25 21:27:50,042 TRACE  [main] BasicBinder: binding parameter [6] as [INTEGER] - [6]
2020-11-25 21:27:50,059 TRACE  [main] BasicBinder: binding parameter [1] as [BLOB] - [null]
2020-11-25 21:27:50,060 TRACE  [main] BasicBinder: binding parameter [2] as [DOUBLE] - [1.0]
2020-11-25 21:27:50,062 TRACE  [main] BasicBinder: binding parameter [3] as [INTEGER] - [0]
2020-11-25 21:27:50,063 TRACE  [main] BasicBinder: binding parameter [4] as [BOOLEAN] - [true]
2020-11-25 21:27:50,063 TRACE  [main] BasicBinder: binding parameter [5] as [INTEGER] - [0]
2020-11-25 21:27:50,063 TRACE  [main] BasicBinder: binding parameter [6] as [BIGINT] - [1]
2020-11-25 21:27:50,066 TRACE  [main] BasicBinder: binding parameter [1] as [BLOB] - [null]
2020-11-25 21:27:50,066 TRACE  [main] BasicBinder: binding parameter [2] as [DOUBLE] - [2.0]
2020-11-25 21:27:50,067 TRACE  [main] BasicBinder: binding parameter [3] as [INTEGER] - [0]
2020-11-25 21:27:50,068 TRACE  [main] BasicBinder: binding parameter [4] as [BOOLEAN] - [true]
2020-11-25 21:27:50,070 TRACE  [main] BasicBinder: binding parameter [5] as [INTEGER] - [1]
2020-11-25 21:27:50,071 TRACE  [main] BasicBinder: binding parameter [6] as [BIGINT] - [1]
2020-11-25 21:27:50,074 TRACE  [main] BasicBinder: binding parameter [1] as [BLOB] - [null]
2020-11-25 21:27:50,074 TRACE  [main] BasicBinder: binding parameter [2] as [DOUBLE] - [1.0]
2020-11-25 21:27:50,075 TRACE  [main] BasicBinder: binding parameter [3] as [INTEGER] - [0]
2020-11-25 21:27:50,077 TRACE  [main] BasicBinder: binding parameter [4] as [BOOLEAN] - [true]
2020-11-25 21:27:50,078 TRACE  [main] BasicBinder: binding parameter [5] as [INTEGER] - [2]
2020-11-25 21:27:50,078 TRACE  [main] BasicBinder: binding parameter [6] as [BIGINT] - [1]
2020-11-25 21:27:50,080 TRACE  [main] BasicBinder: binding parameter [1] as [BLOB] - [null]
2020-11-25 21:27:50,081 TRACE  [main] BasicBinder: binding parameter [2] as [DOUBLE] - [1.0]
2020-11-25 21:27:50,082 TRACE  [main] BasicBinder: binding parameter [3] as [INTEGER] - [0]
2020-11-25 21:27:50,082 TRACE  [main] BasicBinder: binding parameter [4] as [BOOLEAN] - [false]
2020-11-25 21:27:50,082 TRACE  [main] BasicBinder: binding parameter [5] as [INTEGER] - [0]
2020-11-25 21:27:50,082 TRACE  [main] BasicBinder: binding parameter [6] as [BIGINT] - [1]
2020-11-25 21:27:50,085 TRACE  [main] BasicBinder: binding parameter [1] as [BLOB] - [null]
2020-11-25 21:27:50,085 TRACE  [main] BasicBinder: binding parameter [2] as [DOUBLE] - [1.0]
2020-11-25 21:27:50,086 TRACE  [main] BasicBinder: binding parameter [3] as [INTEGER] - [0]
2020-11-25 21:27:50,086 TRACE  [main] BasicBinder: binding parameter [4] as [BOOLEAN] - [false]
2020-11-25 21:27:50,086 TRACE  [main] BasicBinder: binding parameter [5] as [INTEGER] - [1]
2020-11-25 21:27:50,087 TRACE  [main] BasicBinder: binding parameter [6] as [BIGINT] - [1]
2020-11-25 21:27:55,506 DEBUG  [main] BasicTypeRegistry: Adding type registration boolean -> org.hibernate.type.BooleanType@a85644c
2020-11-25 21:27:55,507 DEBUG  [main] BasicTypeRegistry: Adding type registration boolean -> org.hibernate.type.BooleanType@a85644c
2020-11-25 21:27:55,508 DEBUG  [main] BasicTypeRegistry: Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@a85644c
2020-11-25 21:27:55,508 DEBUG  [main] BasicTypeRegistry: Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@30c19bff
2020-11-25 21:27:55,509 DEBUG  [main] BasicTypeRegistry: Adding type registration true_false -> org.hibernate.type.TrueFalseType@71664560
2020-11-25 21:27:55,509 DEBUG  [main] BasicTypeRegistry: Adding type registration yes_no -> org.hibernate.type.YesNoType@2443abd6
2020-11-25 21:27:55,511 DEBUG  [main] BasicTypeRegistry: Adding type registration byte -> org.hibernate.type.ByteType@5348d83c
2020-11-25 21:27:55,512 DEBUG  [main] BasicTypeRegistry: Adding type registration byte -> org.hibernate.type.ByteType@5348d83c
2020-11-25 21:27:55,513 DEBUG  [main] BasicTypeRegistry: Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@5348d83c
2020-11-25 21:27:55,514 DEBUG  [main] BasicTypeRegistry: Adding type registration character -> org.hibernate.type.CharacterType@d3e3085
2020-11-25 21:27:55,514 DEBUG  [main] BasicTypeRegistry: Adding type registration char -> org.hibernate.type.CharacterType@d3e3085
2020-11-25 21:27:55,515 DEBUG  [main] BasicTypeRegistry: Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@d3e3085
2020-11-25 21:27:55,516 DEBUG  [main] BasicTypeRegistry: Adding type registration short -> org.hibernate.type.ShortType@2de6f1bc
2020-11-25 21:27:55,516 DEBUG  [main] BasicTypeRegistry: Adding type registration short -> org.hibernate.type.ShortType@2de6f1bc
2020-11-25 21:27:55,517 DEBUG  [main] BasicTypeRegistry: Adding type registration java.lang.Short -> org.hibernate.type.ShortType@2de6f1bc
2020-11-25 21:27:55,517 DEBUG  [main] BasicTypeRegistry: Adding type registration integer -> org.hibernate.type.IntegerType@49cd946c
2020-11-25 21:27:55,518 DEBUG  [main] BasicTypeRegistry: Adding type registration int -> org.hibernate.type.IntegerType@49cd946c
2020-11-25 21:27:55,518 DEBUG  [main] BasicTypeRegistry: Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@49cd946c
2020-11-25 21:27:55,519 DEBUG  [main] BasicTypeRegistry: Adding type registration long -> org.hibernate.type.LongType@4e140497
2020-11-25 21:27:55,520 DEBUG  [main] BasicTypeRegistry: Adding type registration long -> org.hibernate.type.LongType@4e140497
2020-11-25 21:27:55,520 DEBUG  [main] BasicTypeRegistry: Adding type registration java.lang.Long -> org.hibernate.type.LongType@4e140497
2020-11-25 21:27:55,520 DEBUG  [main] BasicTypeRegistry: Adding type registration float -> org.hibernate.type.FloatType@4e80a001
2020-11-25 21:27:55,520 DEBUG  [main] BasicTypeRegistry: Adding type registration float -> org.hibernate.type.FloatType@4e80a001
2020-11-25 21:27:55,521 DEBUG  [main] BasicTypeRegistry: Adding type registration java.lang.Float -> org.hibernate.type.FloatType@4e80a001
2020-11-25 21:27:55,522 DEBUG  [main] BasicTypeRegistry: Adding type registration double -> org.hibernate.type.DoubleType@7455dacb
2020-11-25 21:27:55,523 DEBUG  [main] BasicTypeRegistry: Adding type registration double -> org.hibernate.type.DoubleType@7455dacb
2020-11-25 21:27:55,523 DEBUG  [main] BasicTypeRegistry: Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@7455dacb
2020-11-25 21:27:55,524 DEBUG  [main] BasicTypeRegistry: Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@52bd9a27
2020-11-25 21:27:55,524 DEBUG  [main] BasicTypeRegistry: Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@52bd9a27
2020-11-25 21:27:55,529 DEBUG  [main] BasicTypeRegistry: Adding type registration big_integer -> org.hibernate.type.BigIntegerType@5ed5b321
2020-11-25 21:27:55,529 DEBUG  [main] BasicTypeRegistry: Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@5ed5b321
2020-11-25 21:27:55,530 DEBUG  [main] BasicTypeRegistry: Adding type registration string -> org.hibernate.type.StringType@6d6bff89
2020-11-25 21:27:55,530 DEBUG  [main] BasicTypeRegistry: Adding type registration java.lang.String -> org.hibernate.type.StringType@6d6bff89
2020-11-25 21:27:55,530 DEBUG  [main] BasicTypeRegistry: Adding type registration nstring -> org.hibernate.type.StringNVarcharType@58eac00e
2020-11-25 21:27:55,531 DEBUG  [main] BasicTypeRegistry: Adding type registration ncharacter -> org.hibernate.type.CharacterNCharType@149c39b
2020-11-25 21:27:55,532 DEBUG  [main] BasicTypeRegistry: Adding type registration url -> org.hibernate.type.UrlType@739e8b96
2020-11-25 21:27:55,532 DEBUG  [main] BasicTypeRegistry: Adding type registration java.net.URL -> org.hibernate.type.UrlType@739e8b96
2020-11-25 21:27:55,533 DEBUG  [main] BasicTypeRegistry: Adding type registration Duration -> org.hibernate.type.DurationType@1953bc95
2020-11-25 21:27:55,534 DEBUG  [main] BasicTypeRegistry: Adding type registration java.time.Duration -> org.hibernate.type.DurationType@1953bc95
2020-11-25 21:27:55,534 DEBUG  [main] BasicTypeRegistry: Adding type registration Instant -> org.hibernate.type.InstantType@5a622fe8
2020-11-25 21:27:55,534 DEBUG  [main] BasicTypeRegistry: Adding type registration java.time.Instant -> org.hibernate.type.InstantType@5a622fe8
2020-11-25 21:27:55,535 DEBUG  [main] BasicTypeRegistry: Adding type registration LocalDateTime -> org.hibernate.type.LocalDateTimeType@4a89ef44
2020-11-25 21:27:55,535 DEBUG  [main] BasicTypeRegistry: Adding type registration java.time.LocalDateTime -> org.hibernate.type.LocalDateTimeType@4a89ef44
2020-11-25 21:27:55,535 DEBUG  [main] BasicTypeRegistry: Adding type registration LocalDate -> org.hibernate.type.LocalDateType@2eada095
2020-11-25 21:27:55,535 DEBUG  [main] BasicTypeRegistry: Adding type registration java.time.LocalDate -> org.hibernate.type.LocalDateType@2eada095
2020-11-25 21:27:55,535 DEBUG  [main] BasicTypeRegistry: Adding type registration LocalTime -> org.hibernate.type.LocalTimeType@6f1c3f18
2020-11-25 21:27:55,535 DEBUG  [main] BasicTypeRegistry: Adding type registration java.time.LocalTime -> org.hibernate.type.LocalTimeType@6f1c3f18
2020-11-25 21:27:55,536 DEBUG  [main] BasicTypeRegistry: Adding type registration OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@236fdf
2020-11-25 21:27:55,536 DEBUG  [main] BasicTypeRegistry: Adding type registration java.time.OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@236fdf
2020-11-25 21:27:55,539 DEBUG  [main] BasicTypeRegistry: Adding type registration OffsetTime -> org.hibernate.type.OffsetTimeType@93501be
2020-11-25 21:27:55,540 DEBUG  [main] BasicTypeRegistry: Adding type registration java.time.OffsetTime -> org.hibernate.type.OffsetTimeType@93501be
2020-11-25 21:27:55,540 DEBUG  [main] BasicTypeRegistry: Adding type registration ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@88b76f2
2020-11-25 21:27:55,540 DEBUG  [main] BasicTypeRegistry: Adding type registration java.time.ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@88b76f2
2020-11-25 21:27:55,540 DEBUG  [main] BasicTypeRegistry: Adding type registration date -> org.hibernate.type.DateType@c1e14f
2020-11-25 21:27:55,540 DEBUG  [main] BasicTypeRegistry: Adding type registration java.sql.Date -> org.hibernate.type.DateType@c1e14f
2020-11-25 21:27:55,541 DEBUG  [main] BasicTypeRegistry: Adding type registration time -> org.hibernate.type.TimeType@364b1061
2020-11-25 21:27:55,541 DEBUG  [main] BasicTypeRegistry: Adding type registration java.sql.Time -> org.hibernate.type.TimeType@364b1061
2020-11-25 21:27:55,541 DEBUG  [main] BasicTypeRegistry: Adding type registration timestamp -> org.hibernate.type.TimestampType@2c30c81d
2020-11-25 21:27:55,541 DEBUG  [main] BasicTypeRegistry: Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@2c30c81d
2020-11-25 21:27:55,541 DEBUG  [main] BasicTypeRegistry: Adding type registration java.util.Date -> org.hibernate.type.TimestampType@2c30c81d
2020-11-25 21:27:55,542 DEBUG  [main] BasicTypeRegistry: Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@19da993b
2020-11-25 21:27:55,542 DEBUG  [main] BasicTypeRegistry: Adding type registration calendar -> org.hibernate.type.CalendarType@741741d0
2020-11-25 21:27:55,542 DEBUG  [main] BasicTypeRegistry: Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@741741d0
2020-11-25 21:27:55,543 DEBUG  [main] BasicTypeRegistry: Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@741741d0
2020-11-25 21:27:55,543 DEBUG  [main] BasicTypeRegistry: Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@60e1d87c
2020-11-25 21:27:55,554 DEBUG  [main] BasicTypeRegistry: Adding type registration locale -> org.hibernate.type.LocaleType@e5c2463
2020-11-25 21:27:55,556 DEBUG  [main] BasicTypeRegistry: Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@e5c2463
2020-11-25 21:27:55,557 DEBUG  [main] BasicTypeRegistry: Adding type registration currency -> org.hibernate.type.CurrencyType@49edcb30
2020-11-25 21:27:55,559 DEBUG  [main] BasicTypeRegistry: Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@49edcb30
2020-11-25 21:27:55,560 DEBUG  [main] BasicTypeRegistry: Adding type registration timezone -> org.hibernate.type.TimeZoneType@4b033eac
2020-11-25 21:27:55,561 DEBUG  [main] BasicTypeRegistry: Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@4b033eac
2020-11-25 21:27:55,562 DEBUG  [main] BasicTypeRegistry: Adding type registration class -> org.hibernate.type.ClassType@4315c28c
2020-11-25 21:27:55,563 DEBUG  [main] BasicTypeRegistry: Adding type registration java.lang.Class -> org.hibernate.type.ClassType@4315c28c
2020-11-25 21:27:55,563 DEBUG  [main] BasicTypeRegistry: Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@76437e9b
2020-11-25 21:27:55,564 DEBUG  [main] BasicTypeRegistry: Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@76437e9b
2020-11-25 21:27:55,564 DEBUG  [main] BasicTypeRegistry: Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@2be818da
2020-11-25 21:27:55,565 DEBUG  [main] BasicTypeRegistry: Adding type registration binary -> org.hibernate.type.BinaryType@63bfdbcb
2020-11-25 21:27:55,565 DEBUG  [main] BasicTypeRegistry: Adding type registration byte[] -> org.hibernate.type.BinaryType@63bfdbcb
2020-11-25 21:27:55,566 DEBUG  [main] BasicTypeRegistry: Adding type registration [B -> org.hibernate.type.BinaryType@63bfdbcb
2020-11-25 21:27:55,566 DEBUG  [main] BasicTypeRegistry: Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@5c931134
2020-11-25 21:27:55,567 DEBUG  [main] BasicTypeRegistry: Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@5c931134
2020-11-25 21:27:55,568 DEBUG  [main] BasicTypeRegistry: Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@5c931134
2020-11-25 21:27:55,581 DEBUG  [main] BasicTypeRegistry: Adding type registration row_version -> org.hibernate.type.RowVersionType@4b97b3d2
2020-11-25 21:27:55,581 DEBUG  [main] BasicTypeRegistry: Adding type registration image -> org.hibernate.type.ImageType@96897c8
2020-11-25 21:27:55,582 DEBUG  [main] BasicTypeRegistry: Adding type registration characters -> org.hibernate.type.CharArrayType@3b9ac754
2020-11-25 21:27:55,582 DEBUG  [main] BasicTypeRegistry: Adding type registration char[] -> org.hibernate.type.CharArrayType@3b9ac754
2020-11-25 21:27:55,582 DEBUG  [main] BasicTypeRegistry: Adding type registration [C -> org.hibernate.type.CharArrayType@3b9ac754
2020-11-25 21:27:55,583 DEBUG  [main] BasicTypeRegistry: Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@79ba0a6f
2020-11-25 21:27:55,583 DEBUG  [main] BasicTypeRegistry: Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@79ba0a6f
2020-11-25 21:27:55,584 DEBUG  [main] BasicTypeRegistry: Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@79ba0a6f
2020-11-25 21:27:55,584 DEBUG  [main] BasicTypeRegistry: Adding type registration text -> org.hibernate.type.TextType@25a1a012
2020-11-25 21:27:55,584 DEBUG  [main] BasicTypeRegistry: Adding type registration ntext -> org.hibernate.type.NTextType@443a53df
2020-11-25 21:27:55,586 DEBUG  [main] BasicTypeRegistry: Adding type registration blob -> org.hibernate.type.BlobType@b950f82
2020-11-25 21:27:55,593 DEBUG  [main] BasicTypeRegistry: Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@b950f82
2020-11-25 21:27:55,594 DEBUG  [main] BasicTypeRegistry: Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@7a1a3468
2020-11-25 21:27:55,595 DEBUG  [main] BasicTypeRegistry: Adding type registration clob -> org.hibernate.type.ClobType@58dad04a
2020-11-25 21:27:55,595 DEBUG  [main] BasicTypeRegistry: Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@58dad04a
2020-11-25 21:27:55,596 DEBUG  [main] BasicTypeRegistry: Adding type registration nclob -> org.hibernate.type.NClobType@467045c4
2020-11-25 21:27:55,596 DEBUG  [main] BasicTypeRegistry: Adding type registration java.sql.NClob -> org.hibernate.type.NClobType@467045c4
2020-11-25 21:27:55,596 DEBUG  [main] BasicTypeRegistry: Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@6f7a2a5
2020-11-25 21:27:55,596 DEBUG  [main] BasicTypeRegistry: Adding type registration materialized_nclob -> org.hibernate.type.MaterializedNClobType@65c17e38
2020-11-25 21:27:55,596 DEBUG  [main] BasicTypeRegistry: Adding type registration serializable -> org.hibernate.type.SerializableType@66749eea
2020-11-25 21:27:55,597 DEBUG  [main] BasicTypeRegistry: Adding type registration object -> org.hibernate.type.ObjectType@15c6027d
2020-11-25 21:27:55,597 DEBUG  [main] BasicTypeRegistry: Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@15c6027d
2020-11-25 21:27:55,597 DEBUG  [main] BasicTypeRegistry: Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@749c0669
2020-11-25 21:27:55,597 DEBUG  [main] BasicTypeRegistry: Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@4468c0ea
2020-11-25 21:27:55,597 DEBUG  [main] BasicTypeRegistry: Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@41cf4272
2020-11-25 21:27:55,604 DEBUG  [main] BasicTypeRegistry: Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@53d2b827
2020-11-25 21:27:55,606 DEBUG  [main] BasicTypeRegistry: Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@4769537a
2020-11-25 21:27:55,606 DEBUG  [main] BasicTypeRegistry: Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@4504a4ed
2020-11-25 21:27:55,607 DEBUG  [main] BasicTypeRegistry: Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@7ee3a2ed
2020-11-25 21:27:55,608 DEBUG  [main] BasicTypeRegistry: Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@38363e96
2020-11-25 21:27:55,654 DEBUG  [main] TypeConfiguration$Scope: Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@52fec840] to MetadataBuildingContext [org.hibernate.boot.internal.MetadataBuildingContextRootImpl@7fd4b9ec]
2020-11-25 21:27:55,669 DEBUG  [main] EnumType: Using NAMED-based conversion for Enum com.sf.back.entities.Kind
2020-11-25 21:27:55,675 DEBUG  [main] EnumType: Using NAMED-based conversion for Enum com.sf.back.entities.Kind
2020-11-25 21:27:55,741 DEBUG  [main] TypeConfiguration$Scope: Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@52fec840] to SessionFactoryImpl [org.hibernate.internal.SessionFactoryImpl@41d53813]
2020-11-25 21:27:55,742 DEBUG  [main] EnumType: Using NAMED-based conversion for Enum com.sf.back.entities.Kind
2020-11-25 21:27:55,742 DEBUG  [main] EnumType: Using NAMED-based conversion for Enum com.sf.back.entities.Kind
2020-11-25 21:27:55,744 DEBUG  [main] EnumType: Using NAMED-based conversion for Enum com.sf.back.entities.Kind
2020-11-25 21:27:55,744 DEBUG  [main] EnumType: Using NAMED-based conversion for Enum com.sf.back.entities.Kind
2020-11-25 21:27:55,766 DEBUG  [main] EnumType: Using NAMED-based conversion for Enum com.sf.back.entities.Kind
2020-11-25 21:27:55,767 DEBUG  [main] EnumType: Using NAMED-based conversion for Enum com.sf.back.entities.Kind
2020-11-25 21:27:55,803 DEBUG  [main] EnumType: Using NAMED-based conversion for Enum com.sf.back.entities.Kind
2020-11-25 21:27:55,815 TRACE  [main] TypeConfiguration$Scope: Handling #sessionFactoryCreated from [org.hibernate.internal.SessionFactoryImpl@41d53813] for TypeConfiguration
2020-11-25 21:27:56,440 WARN   [main] JpaBaseConfiguration$JpaWebConfiguration: spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2020-11-25 21:27:56,776 WARN   [main] GroovyTemplateAutoConfiguration: Cannot find template location: classpath:/templates/ (please add some templates, check your Groovy configuration, or set spring.groovy.template.check-template-location=false)
2020-11-25 21:27:56,896 TRACE  [main] BasicBinder: binding parameter [1] as [BLOB] - [[70, 105, 110, 100, 32, 97, 108, 108, 32, 114, 111, 111, 116, 115, 32, 111, 102, 32, 103, 105, 118, 101, 110, 32, 112, 111, 108, 121, 110, 111, 109, 105, 97, 108]]
2020-11-25 21:27:56,898 TRACE  [main] BasicBinder: binding parameter [2] as [BOOLEAN] - [false]
2020-11-25 21:27:56,899 TRACE  [main] BasicBinder: binding parameter [3] as [VARCHAR] - [POLYNOMIAL]
2020-11-25 21:27:56,899 TRACE  [main] BasicBinder: binding parameter [4] as [INTEGER] - [1]
2020-11-25 21:27:56,900 TRACE  [main] BasicBinder: binding parameter [5] as [BIGINT] - [null]
2020-11-25 21:27:56,900 TRACE  [main] BasicBinder: binding parameter [6] as [INTEGER] - [6]
2020-11-25 21:27:56,906 TRACE  [main] BasicBinder: binding parameter [1] as [BLOB] - [null]
2020-11-25 21:27:56,907 TRACE  [main] BasicBinder: binding parameter [2] as [DOUBLE] - [1.0]
2020-11-25 21:27:56,907 TRACE  [main] BasicBinder: binding parameter [3] as [INTEGER] - [0]
2020-11-25 21:27:56,908 TRACE  [main] BasicBinder: binding parameter [4] as [BOOLEAN] - [true]
2020-11-25 21:27:56,908 TRACE  [main] BasicBinder: binding parameter [5] as [INTEGER] - [0]
2020-11-25 21:27:56,909 TRACE  [main] BasicBinder: binding parameter [6] as [BIGINT] - [1]
2020-11-25 21:27:56,910 TRACE  [main] BasicBinder: binding parameter [1] as [BLOB] - [null]
2020-11-25 21:27:56,911 TRACE  [main] BasicBinder: binding parameter [2] as [DOUBLE] - [2.0]
2020-11-25 21:27:56,911 TRACE  [main] BasicBinder: binding parameter [3] as [INTEGER] - [0]
2020-11-25 21:27:56,911 TRACE  [main] BasicBinder: binding parameter [4] as [BOOLEAN] - [true]
2020-11-25 21:27:56,912 TRACE  [main] BasicBinder: binding parameter [5] as [INTEGER] - [1]
2020-11-25 21:27:56,912 TRACE  [main] BasicBinder: binding parameter [6] as [BIGINT] - [1]
2020-11-25 21:27:56,915 TRACE  [main] BasicBinder: binding parameter [1] as [BLOB] - [null]
2020-11-25 21:27:56,916 TRACE  [main] BasicBinder: binding parameter [2] as [DOUBLE] - [1.0]
2020-11-25 21:27:56,916 TRACE  [main] BasicBinder: binding parameter [3] as [INTEGER] - [0]
2020-11-25 21:27:56,916 TRACE  [main] BasicBinder: binding parameter [4] as [BOOLEAN] - [true]
2020-11-25 21:27:56,916 TRACE  [main] BasicBinder: binding parameter [5] as [INTEGER] - [2]
2020-11-25 21:27:56,916 TRACE  [main] BasicBinder: binding parameter [6] as [BIGINT] - [1]
2020-11-25 21:27:56,918 TRACE  [main] BasicBinder: binding parameter [1] as [BLOB] - [null]
2020-11-25 21:27:56,918 TRACE  [main] BasicBinder: binding parameter [2] as [DOUBLE] - [1.0]
2020-11-25 21:27:56,919 TRACE  [main] BasicBinder: binding parameter [3] as [INTEGER] - [0]
2020-11-25 21:27:56,919 TRACE  [main] BasicBinder: binding parameter [4] as [BOOLEAN] - [false]
2020-11-25 21:27:56,919 TRACE  [main] BasicBinder: binding parameter [5] as [INTEGER] - [0]
2020-11-25 21:27:56,919 TRACE  [main] BasicBinder: binding parameter [6] as [BIGINT] - [1]
2020-11-25 21:27:56,923 TRACE  [main] BasicBinder: binding parameter [1] as [BLOB] - [null]
2020-11-25 21:27:56,923 TRACE  [main] BasicBinder: binding parameter [2] as [DOUBLE] - [1.0]
2020-11-25 21:27:56,924 TRACE  [main] BasicBinder: binding parameter [3] as [INTEGER] - [0]
2020-11-25 21:27:56,924 TRACE  [main] BasicBinder: binding parameter [4] as [BOOLEAN] - [false]
2020-11-25 21:27:56,924 TRACE  [main] BasicBinder: binding parameter [5] as [INTEGER] - [1]
2020-11-25 21:27:56,925 TRACE  [main] BasicBinder: binding parameter [6] as [BIGINT] - [1]
2020-11-25 21:27:57,079 TRACE  [main] BasicBinder: binding parameter [1] as [BIGINT] - [2]
2020-11-25 21:27:57,085 TRACE  [main] BasicExtractor: extracted value ([id1_1_2_] : [BIGINT]) - [null]
2020-11-25 21:27:57,086 TRACE  [main] BasicExtractor: extracted value ([id1_0_4_] : [BIGINT]) - [null]
2020-11-25 21:27:57,108 TRACE  [main] BasicExtractor: extracted value ([descript2_1_0_] : [BLOB]) - [[112, 114, 111, 98, 108, 101, 109, 100, 101, 115, 99, 114, 105, 112, 116, 105, 111, 110]]
2020-11-25 21:27:57,111 TRACE  [main] BasicExtractor: extracted value ([is_solve3_1_0_] : [BOOLEAN]) - [null]
2020-11-25 21:27:57,112 TRACE  [main] BasicExtractor: extracted value ([kind4_1_0_] : [VARCHAR]) - [POLYNOMIAL]
2020-11-25 21:27:57,114 TRACE  [main] BasicExtractor: extracted value ([matrix_d5_1_0_] : [INTEGER]) - [1]
2020-11-25 21:27:57,116 TRACE  [main] BasicExtractor: extracted value ([parent_p7_1_0_] : [BIGINT]) - [null]
2020-11-25 21:27:57,117 TRACE  [main] BasicExtractor: extracted value ([problem_6_1_0_] : [INTEGER]) - [22]
2020-11-25 21:27:57,120 TRACE  [main] BasicExtractor: extracted value ([problem_7_0_3_] : [BIGINT]) - [null]
2020-11-25 21:27:57,123 TRACE  [main] BasicExtractor: extracted value ([parent_p7_1_1_] : [BIGINT]) - [null]
2020-11-25 21:27:57,134 TRACE  [main] CollectionType: Created collection wrapper: [com.sf.back.entities.Problem.matrixes#2]
2020-11-25 21:27:57,143 TRACE  [main] BasicBinder: binding parameter [1] as [BIGINT] - [2]
2020-11-25 21:27:57,144 TRACE  [main] BasicExtractor: extracted value ([id1_0_1_] : [BIGINT]) - [6]
2020-11-25 21:27:57,145 TRACE  [main] BasicExtractor: extracted value ([binary_v2_0_1_] : [BLOB]) - [null]
2020-11-25 21:27:57,147 TRACE  [main] BasicExtractor: extracted value ([float_va3_0_1_] : [DOUBLE]) - [1.0]
2020-11-25 21:27:57,148 TRACE  [main] BasicExtractor: extracted value ([i4_0_1_] : [INTEGER]) - [0]
2020-11-25 21:27:57,148 TRACE  [main] BasicExtractor: extracted value ([is_condi5_0_1_] : [BOOLEAN]) - [true]
2020-11-25 21:27:57,148 TRACE  [main] BasicExtractor: extracted value ([j6_0_1_] : [INTEGER]) - [0]
2020-11-25 21:27:57,149 TRACE  [main] BasicExtractor: extracted value ([problem_7_0_1_] : [BIGINT]) - [2]
2020-11-25 21:27:57,149 TRACE  [main] BasicExtractor: extracted value ([problem_7_0_0_] : [BIGINT]) - [2]
2020-11-25 21:27:57,150 TRACE  [main] BasicExtractor: extracted value ([id1_0_0_] : [BIGINT]) - [6]
2020-11-25 21:27:57,151 TRACE  [main] BasicExtractor: extracted value ([id1_0_1_] : [BIGINT]) - [7]
2020-11-25 21:27:57,151 TRACE  [main] BasicExtractor: extracted value ([binary_v2_0_1_] : [BLOB]) - [null]
2020-11-25 21:27:57,152 TRACE  [main] BasicExtractor: extracted value ([float_va3_0_1_] : [DOUBLE]) - [2.718281828459045]
2020-11-25 21:27:57,153 TRACE  [main] BasicExtractor: extracted value ([i4_0_1_] : [INTEGER]) - [0]
2020-11-25 21:27:57,153 TRACE  [main] BasicExtractor: extracted value ([is_condi5_0_1_] : [BOOLEAN]) - [true]
2020-11-25 21:27:57,154 TRACE  [main] BasicExtractor: extracted value ([j6_0_1_] : [INTEGER]) - [1]
2020-11-25 21:27:57,154 TRACE  [main] BasicExtractor: extracted value ([problem_7_0_1_] : [BIGINT]) - [2]
2020-11-25 21:27:57,154 TRACE  [main] BasicExtractor: extracted value ([problem_7_0_0_] : [BIGINT]) - [2]
2020-11-25 21:27:57,157 TRACE  [main] BasicExtractor: extracted value ([id1_0_0_] : [BIGINT]) - [7]
2020-11-25 21:27:57,158 TRACE  [main] BasicExtractor: extracted value ([id1_0_1_] : [BIGINT]) - [8]
2020-11-25 21:27:57,158 TRACE  [main] BasicExtractor: extracted value ([binary_v2_0_1_] : [BLOB]) - [null]
2020-11-25 21:27:57,159 TRACE  [main] BasicExtractor: extracted value ([float_va3_0_1_] : [DOUBLE]) - [7.38905609893065]
2020-11-25 21:27:57,160 TRACE  [main] BasicExtractor: extracted value ([i4_0_1_] : [INTEGER]) - [0]
2020-11-25 21:27:57,160 TRACE  [main] BasicExtractor: extracted value ([is_condi5_0_1_] : [BOOLEAN]) - [true]
2020-11-25 21:27:57,160 TRACE  [main] BasicExtractor: extracted value ([j6_0_1_] : [INTEGER]) - [2]
2020-11-25 21:27:57,161 TRACE  [main] BasicExtractor: extracted value ([problem_7_0_1_] : [BIGINT]) - [2]
2020-11-25 21:27:57,161 TRACE  [main] BasicExtractor: extracted value ([problem_7_0_0_] : [BIGINT]) - [2]
2020-11-25 21:27:57,162 TRACE  [main] BasicExtractor: extracted value ([id1_0_0_] : [BIGINT]) - [8]
2020-11-25 21:27:57,162 TRACE  [main] BasicExtractor: extracted value ([id1_0_1_] : [BIGINT]) - [9]
2020-11-25 21:27:57,162 TRACE  [main] BasicExtractor: extracted value ([binary_v2_0_1_] : [BLOB]) - [null]
2020-11-25 21:27:57,163 TRACE  [main] BasicExtractor: extracted value ([float_va3_0_1_] : [DOUBLE]) - [20.085536923187668]
2020-11-25 21:27:57,163 TRACE  [main] BasicExtractor: extracted value ([i4_0_1_] : [INTEGER]) - [0]
2020-11-25 21:27:57,163 TRACE  [main] BasicExtractor: extracted value ([is_condi5_0_1_] : [BOOLEAN]) - [true]
2020-11-25 21:27:57,164 TRACE  [main] BasicExtractor: extracted value ([j6_0_1_] : [INTEGER]) - [3]
2020-11-25 21:27:57,164 TRACE  [main] BasicExtractor: extracted value ([problem_7_0_1_] : [BIGINT]) - [2]
2020-11-25 21:27:57,164 TRACE  [main] BasicExtractor: extracted value ([problem_7_0_0_] : [BIGINT]) - [2]
2020-11-25 21:27:57,165 TRACE  [main] BasicExtractor: extracted value ([id1_0_0_] : [BIGINT]) - [9]
2020-11-25 21:27:57,165 TRACE  [main] BasicExtractor: extracted value ([id1_0_1_] : [BIGINT]) - [10]
2020-11-25 21:27:57,166 TRACE  [main] BasicExtractor: extracted value ([binary_v2_0_1_] : [BLOB]) - [null]
2020-11-25 21:27:57,166 TRACE  [main] BasicExtractor: extracted value ([float_va3_0_1_] : [DOUBLE]) - [54.598150033144236]
2020-11-25 21:27:57,166 TRACE  [main] BasicExtractor: extracted value ([i4_0_1_] : [INTEGER]) - [0]
2020-11-25 21:27:57,166 TRACE  [main] BasicExtractor: extracted value ([is_condi5_0_1_] : [BOOLEAN]) - [true]
2020-11-25 21:27:57,166 TRACE  [main] BasicExtractor: extracted value ([j6_0_1_] : [INTEGER]) - [4]
2020-11-25 21:27:57,167 TRACE  [main] BasicExtractor: extracted value ([problem_7_0_1_] : [BIGINT]) - [2]
2020-11-25 21:27:57,167 TRACE  [main] BasicExtractor: extracted value ([problem_7_0_0_] : [BIGINT]) - [2]
2020-11-25 21:27:57,168 TRACE  [main] BasicExtractor: extracted value ([id1_0_0_] : [BIGINT]) - [10]
2020-11-25 21:27:57,173 TRACE  [main] BasicExtractor: extracted value ([id1_0_1_] : [BIGINT]) - [11]
2020-11-25 21:27:57,186 TRACE  [main] BasicExtractor: extracted value ([binary_v2_0_1_] : [BLOB]) - [null]
2020-11-25 21:27:57,187 TRACE  [main] BasicExtractor: extracted value ([float_va3_0_1_] : [DOUBLE]) - [148.4131591025766]
2020-11-25 21:27:57,187 TRACE  [main] BasicExtractor: extracted value ([i4_0_1_] : [INTEGER]) - [0]
2020-11-25 21:27:57,190 TRACE  [main] BasicExtractor: extracted value ([is_condi5_0_1_] : [BOOLEAN]) - [true]
2020-11-25 21:27:57,190 TRACE  [main] BasicExtractor: extracted value ([j6_0_1_] : [INTEGER]) - [5]
2020-11-25 21:27:57,191 TRACE  [main] BasicExtractor: extracted value ([problem_7_0_1_] : [BIGINT]) - [2]
2020-11-25 21:27:57,191 TRACE  [main] BasicExtractor: extracted value ([problem_7_0_0_] : [BIGINT]) - [2]
2020-11-25 21:27:57,193 TRACE  [main] BasicExtractor: extracted value ([id1_0_0_] : [BIGINT]) - [11]
2020-11-25 21:27:57,383 TRACE  [main] BasicBinder: binding parameter [1] as [BIGINT] - [2]
2020-11-25 21:27:57,385 TRACE  [main] BasicExtractor: extracted value ([id1_1_2_] : [BIGINT]) - [null]
2020-11-25 21:27:57,386 TRACE  [main] BasicExtractor: extracted value ([id1_0_4_] : [BIGINT]) - [null]
2020-11-25 21:27:57,386 TRACE  [main] BasicExtractor: extracted value ([descript2_1_0_] : [BLOB]) - [[112, 114, 111, 98, 108, 101, 109, 100, 101, 115, 99, 114, 105, 112, 116, 105, 111, 110]]
2020-11-25 21:27:57,387 TRACE  [main] BasicExtractor: extracted value ([is_solve3_1_0_] : [BOOLEAN]) - [null]
2020-11-25 21:27:57,387 TRACE  [main] BasicExtractor: extracted value ([kind4_1_0_] : [VARCHAR]) - [POLYNOMIAL]
2020-11-25 21:27:57,389 TRACE  [main] BasicExtractor: extracted value ([matrix_d5_1_0_] : [INTEGER]) - [1]
2020-11-25 21:27:57,390 TRACE  [main] BasicExtractor: extracted value ([parent_p7_1_0_] : [BIGINT]) - [null]
2020-11-25 21:27:57,391 TRACE  [main] BasicExtractor: extracted value ([problem_6_1_0_] : [INTEGER]) - [22]
2020-11-25 21:27:57,391 TRACE  [main] BasicExtractor: extracted value ([problem_7_0_3_] : [BIGINT]) - [null]
2020-11-25 21:27:57,392 TRACE  [main] BasicExtractor: extracted value ([parent_p7_1_1_] : [BIGINT]) - [null]
2020-11-25 21:27:57,393 TRACE  [main] CollectionType: Created collection wrapper: [com.sf.back.entities.Problem.matrixes#2]
2020-11-25 21:27:57,398 TRACE  [main] BasicBinder: binding parameter [1] as [BIGINT] - [2]
2020-11-25 21:27:57,399 TRACE  [main] BasicExtractor: extracted value ([id1_0_1_] : [BIGINT]) - [6]
2020-11-25 21:27:57,399 TRACE  [main] BasicExtractor: extracted value ([binary_v2_0_1_] : [BLOB]) - [null]
2020-11-25 21:27:57,400 TRACE  [main] BasicExtractor: extracted value ([float_va3_0_1_] : [DOUBLE]) - [1.0]
2020-11-25 21:27:57,401 TRACE  [main] BasicExtractor: extracted value ([i4_0_1_] : [INTEGER]) - [0]
2020-11-25 21:27:57,401 TRACE  [main] BasicExtractor: extracted value ([is_condi5_0_1_] : [BOOLEAN]) - [true]
2020-11-25 21:27:57,401 TRACE  [main] BasicExtractor: extracted value ([j6_0_1_] : [INTEGER]) - [0]
2020-11-25 21:27:57,402 TRACE  [main] BasicExtractor: extracted value ([problem_7_0_1_] : [BIGINT]) - [2]
2020-11-25 21:27:57,402 TRACE  [main] BasicExtractor: extracted value ([problem_7_0_0_] : [BIGINT]) - [2]
2020-11-25 21:27:57,402 TRACE  [main] BasicExtractor: extracted value ([id1_0_0_] : [BIGINT]) - [6]
2020-11-25 21:27:57,403 TRACE  [main] BasicExtractor: extracted value ([id1_0_1_] : [BIGINT]) - [7]
2020-11-25 21:27:57,403 TRACE  [main] BasicExtractor: extracted value ([binary_v2_0_1_] : [BLOB]) - [null]
2020-11-25 21:27:57,404 TRACE  [main] BasicExtractor: extracted value ([float_va3_0_1_] : [DOUBLE]) - [2.718281828459045]
2020-11-25 21:27:57,407 TRACE  [main] BasicExtractor: extracted value ([i4_0_1_] : [INTEGER]) - [0]
2020-11-25 21:27:57,408 TRACE  [main] BasicExtractor: extracted value ([is_condi5_0_1_] : [BOOLEAN]) - [true]
2020-11-25 21:27:57,408 TRACE  [main] BasicExtractor: extracted value ([j6_0_1_] : [INTEGER]) - [1]
2020-11-25 21:27:57,409 TRACE  [main] BasicExtractor: extracted value ([problem_7_0_1_] : [BIGINT]) - [2]
2020-11-25 21:27:57,409 TRACE  [main] BasicExtractor: extracted value ([problem_7_0_0_] : [BIGINT]) - [2]
2020-11-25 21:27:57,409 TRACE  [main] BasicExtractor: extracted value ([id1_0_0_] : [BIGINT]) - [7]
2020-11-25 21:27:57,410 TRACE  [main] BasicExtractor: extracted value ([id1_0_1_] : [BIGINT]) - [8]
2020-11-25 21:27:57,411 TRACE  [main] BasicExtractor: extracted value ([binary_v2_0_1_] : [BLOB]) - [null]
2020-11-25 21:27:57,411 TRACE  [main] BasicExtractor: extracted value ([float_va3_0_1_] : [DOUBLE]) - [7.38905609893065]
2020-11-25 21:27:57,412 TRACE  [main] BasicExtractor: extracted value ([i4_0_1_] : [INTEGER]) - [0]
2020-11-25 21:27:57,412 TRACE  [main] BasicExtractor: extracted value ([is_condi5_0_1_] : [BOOLEAN]) - [true]
2020-11-25 21:27:57,412 TRACE  [main] BasicExtractor: extracted value ([j6_0_1_] : [INTEGER]) - [2]
2020-11-25 21:27:57,413 TRACE  [main] BasicExtractor: extracted value ([problem_7_0_1_] : [BIGINT]) - [2]
2020-11-25 21:27:57,413 TRACE  [main] BasicExtractor: extracted value ([problem_7_0_0_] : [BIGINT]) - [2]
2020-11-25 21:27:57,414 TRACE  [main] BasicExtractor: extracted value ([id1_0_0_] : [BIGINT]) - [8]
2020-11-25 21:27:57,414 TRACE  [main] BasicExtractor: extracted value ([id1_0_1_] : [BIGINT]) - [9]
2020-11-25 21:27:57,416 TRACE  [main] BasicExtractor: extracted value ([binary_v2_0_1_] : [BLOB]) - [null]
2020-11-25 21:27:57,416 TRACE  [main] BasicExtractor: extracted value ([float_va3_0_1_] : [DOUBLE]) - [20.085536923187668]
2020-11-25 21:27:57,417 TRACE  [main] BasicExtractor: extracted value ([i4_0_1_] : [INTEGER]) - [0]
2020-11-25 21:27:57,417 TRACE  [main] BasicExtractor: extracted value ([is_condi5_0_1_] : [BOOLEAN]) - [true]
2020-11-25 21:27:57,417 TRACE  [main] BasicExtractor: extracted value ([j6_0_1_] : [INTEGER]) - [3]
2020-11-25 21:27:57,417 TRACE  [main] BasicExtractor: extracted value ([problem_7_0_1_] : [BIGINT]) - [2]
2020-11-25 21:27:57,417 TRACE  [main] BasicExtractor: extracted value ([problem_7_0_0_] : [BIGINT]) - [2]
2020-11-25 21:27:57,418 TRACE  [main] BasicExtractor: extracted value ([id1_0_0_] : [BIGINT]) - [9]
2020-11-25 21:27:57,418 TRACE  [main] BasicExtractor: extracted value ([id1_0_1_] : [BIGINT]) - [10]
2020-11-25 21:27:57,418 TRACE  [main] BasicExtractor: extracted value ([binary_v2_0_1_] : [BLOB]) - [null]
2020-11-25 21:27:57,418 TRACE  [main] BasicExtractor: extracted value ([float_va3_0_1_] : [DOUBLE]) - [54.598150033144236]
2020-11-25 21:27:57,419 TRACE  [main] BasicExtractor: extracted value ([i4_0_1_] : [INTEGER]) - [0]
2020-11-25 21:27:57,419 TRACE  [main] BasicExtractor: extracted value ([is_condi5_0_1_] : [BOOLEAN]) - [true]
2020-11-25 21:27:57,419 TRACE  [main] BasicExtractor: extracted value ([j6_0_1_] : [INTEGER]) - [4]
2020-11-25 21:27:57,419 TRACE  [main] BasicExtractor: extracted value ([problem_7_0_1_] : [BIGINT]) - [2]
2020-11-25 21:27:57,420 TRACE  [main] BasicExtractor: extracted value ([problem_7_0_0_] : [BIGINT]) - [2]
2020-11-25 21:27:57,420 TRACE  [main] BasicExtractor: extracted value ([id1_0_0_] : [BIGINT]) - [10]
2020-11-25 21:27:57,421 TRACE  [main] BasicExtractor: extracted value ([id1_0_1_] : [BIGINT]) - [11]
2020-11-25 21:27:57,421 TRACE  [main] BasicExtractor: extracted value ([binary_v2_0_1_] : [BLOB]) - [null]
2020-11-25 21:27:57,422 TRACE  [main] BasicExtractor: extracted value ([float_va3_0_1_] : [DOUBLE]) - [148.4131591025766]
2020-11-25 21:27:57,423 TRACE  [main] BasicExtractor: extracted value ([i4_0_1_] : [INTEGER]) - [0]
2020-11-25 21:27:57,423 TRACE  [main] BasicExtractor: extracted value ([is_condi5_0_1_] : [BOOLEAN]) - [true]
2020-11-25 21:27:57,423 TRACE  [main] BasicExtractor: extracted value ([j6_0_1_] : [INTEGER]) - [5]
2020-11-25 21:27:57,423 TRACE  [main] BasicExtractor: extracted value ([problem_7_0_1_] : [BIGINT]) - [2]
2020-11-25 21:27:57,423 TRACE  [main] BasicExtractor: extracted value ([problem_7_0_0_] : [BIGINT]) - [2]
2020-11-25 21:27:57,424 TRACE  [main] BasicExtractor: extracted value ([id1_0_0_] : [BIGINT]) - [11]
2020-11-25 21:27:57,453 TRACE  [main] BasicBinder: binding parameter [1] as [BLOB] - [[100, 101, 115, 99, 114, 105, 112, 116, 105, 111, 110, 100, 101, 115, 99, 114, 105, 112, 116, 105, 111, 110]]
2020-11-25 21:27:57,453 TRACE  [main] BasicBinder: binding parameter [2] as [BOOLEAN] - [null]
2020-11-25 21:27:57,456 TRACE  [main] BasicBinder: binding parameter [3] as [VARCHAR] - [POLYNOMIAL]
2020-11-25 21:27:57,457 TRACE  [main] BasicBinder: binding parameter [4] as [INTEGER] - [1]
2020-11-25 21:27:57,457 TRACE  [main] BasicBinder: binding parameter [5] as [BIGINT] - [null]
2020-11-25 21:27:57,457 TRACE  [main] BasicBinder: binding parameter [6] as [INTEGER] - [22]
2020-11-25 21:27:57,458 TRACE  [main] BasicBinder: binding parameter [7] as [BIGINT] - [2]
2020-11-25 21:27:57,463 TRACE  [main] BasicBinder: binding parameter [1] as [BLOB] - [null]
2020-11-25 21:27:57,463 TRACE  [main] BasicBinder: binding parameter [2] as [DOUBLE] - [1.01]
2020-11-25 21:27:57,464 TRACE  [main] BasicBinder: binding parameter [3] as [INTEGER] - [0]
2020-11-25 21:27:57,464 TRACE  [main] BasicBinder: binding parameter [4] as [BOOLEAN] - [true]
2020-11-25 21:27:57,464 TRACE  [main] BasicBinder: binding parameter [5] as [INTEGER] - [0]
2020-11-25 21:27:57,464 TRACE  [main] BasicBinder: binding parameter [6] as [BIGINT] - [2]
2020-11-25 21:27:57,464 TRACE  [main] BasicBinder: binding parameter [7] as [BIGINT] - [6]
2020-11-25 21:27:57,471 TRACE  [main] BasicBinder: binding parameter [1] as [BIGINT] - [2]
2020-11-25 21:27:57,474 TRACE  [main] BasicExtractor: extracted value ([id1_1_2_] : [BIGINT]) - [null]
2020-11-25 21:27:57,474 TRACE  [main] BasicExtractor: extracted value ([id1_0_4_] : [BIGINT]) - [null]
2020-11-25 21:27:57,474 TRACE  [main] BasicExtractor: extracted value ([descript2_1_0_] : [BLOB]) - [[100, 101, 115, 99, 114, 105, 112, 116, 105, 111, 110, 100, 101, 115, 99, 114, 105, 112, 116, 105, 111, 110]]
2020-11-25 21:27:57,475 TRACE  [main] BasicExtractor: extracted value ([is_solve3_1_0_] : [BOOLEAN]) - [null]
2020-11-25 21:27:57,479 TRACE  [main] BasicExtractor: extracted value ([kind4_1_0_] : [VARCHAR]) - [POLYNOMIAL]
2020-11-25 21:27:57,479 TRACE  [main] BasicExtractor: extracted value ([matrix_d5_1_0_] : [INTEGER]) - [1]
2020-11-25 21:27:57,480 TRACE  [main] BasicExtractor: extracted value ([parent_p7_1_0_] : [BIGINT]) - [null]
2020-11-25 21:27:57,480 TRACE  [main] BasicExtractor: extracted value ([problem_6_1_0_] : [INTEGER]) - [22]
2020-11-25 21:27:57,481 TRACE  [main] BasicExtractor: extracted value ([problem_7_0_3_] : [BIGINT]) - [null]
2020-11-25 21:27:57,481 TRACE  [main] BasicExtractor: extracted value ([parent_p7_1_1_] : [BIGINT]) - [null]
2020-11-25 21:27:57,485 TRACE  [main] CollectionType: Created collection wrapper: [com.sf.back.entities.Problem.matrixes#2]
2020-11-25 21:27:57,486 TRACE  [main] BasicBinder: binding parameter [1] as [BIGINT] - [2]
2020-11-25 21:27:57,487 TRACE  [main] BasicExtractor: extracted value ([id1_0_1_] : [BIGINT]) - [6]
2020-11-25 21:27:57,488 TRACE  [main] BasicExtractor: extracted value ([binary_v2_0_1_] : [BLOB]) - [null]
2020-11-25 21:27:57,489 TRACE  [main] BasicExtractor: extracted value ([float_va3_0_1_] : [DOUBLE]) - [1.01]
2020-11-25 21:27:57,489 TRACE  [main] BasicExtractor: extracted value ([i4_0_1_] : [INTEGER]) - [0]
2020-11-25 21:27:57,490 TRACE  [main] BasicExtractor: extracted value ([is_condi5_0_1_] : [BOOLEAN]) - [true]
2020-11-25 21:27:57,490 TRACE  [main] BasicExtractor: extracted value ([j6_0_1_] : [INTEGER]) - [0]
2020-11-25 21:27:57,491 TRACE  [main] BasicExtractor: extracted value ([problem_7_0_1_] : [BIGINT]) - [2]
2020-11-25 21:27:57,491 TRACE  [main] BasicExtractor: extracted value ([problem_7_0_0_] : [BIGINT]) - [2]
2020-11-25 21:27:57,492 TRACE  [main] BasicExtractor: extracted value ([id1_0_0_] : [BIGINT]) - [6]
2020-11-25 21:27:57,492 TRACE  [main] BasicExtractor: extracted value ([id1_0_1_] : [BIGINT]) - [7]
2020-11-25 21:27:57,492 TRACE  [main] BasicExtractor: extracted value ([binary_v2_0_1_] : [BLOB]) - [null]
2020-11-25 21:27:57,492 TRACE  [main] BasicExtractor: extracted value ([float_va3_0_1_] : [DOUBLE]) - [2.718281828459045]
2020-11-25 21:27:57,493 TRACE  [main] BasicExtractor: extracted value ([i4_0_1_] : [INTEGER]) - [0]
2020-11-25 21:27:57,493 TRACE  [main] BasicExtractor: extracted value ([is_condi5_0_1_] : [BOOLEAN]) - [true]
2020-11-25 21:27:57,493 TRACE  [main] BasicExtractor: extracted value ([j6_0_1_] : [INTEGER]) - [1]
2020-11-25 21:27:57,493 TRACE  [main] BasicExtractor: extracted value ([problem_7_0_1_] : [BIGINT]) - [2]
2020-11-25 21:27:57,493 TRACE  [main] BasicExtractor: extracted value ([problem_7_0_0_] : [BIGINT]) - [2]
2020-11-25 21:27:57,494 TRACE  [main] BasicExtractor: extracted value ([id1_0_0_] : [BIGINT]) - [7]
2020-11-25 21:27:57,494 TRACE  [main] BasicExtractor: extracted value ([id1_0_1_] : [BIGINT]) - [8]
2020-11-25 21:27:57,494 TRACE  [main] BasicExtractor: extracted value ([binary_v2_0_1_] : [BLOB]) - [null]
2020-11-25 21:27:57,495 TRACE  [main] BasicExtractor: extracted value ([float_va3_0_1_] : [DOUBLE]) - [7.38905609893065]
2020-11-25 21:27:57,495 TRACE  [main] BasicExtractor: extracted value ([i4_0_1_] : [INTEGER]) - [0]
2020-11-25 21:27:57,495 TRACE  [main] BasicExtractor: extracted value ([is_condi5_0_1_] : [BOOLEAN]) - [true]
2020-11-25 21:27:57,496 TRACE  [main] BasicExtractor: extracted value ([j6_0_1_] : [INTEGER]) - [2]
2020-11-25 21:27:57,496 TRACE  [main] BasicExtractor: extracted value ([problem_7_0_1_] : [BIGINT]) - [2]
2020-11-25 21:27:57,497 TRACE  [main] BasicExtractor: extracted value ([problem_7_0_0_] : [BIGINT]) - [2]
2020-11-25 21:27:57,497 TRACE  [main] BasicExtractor: extracted value ([id1_0_0_] : [BIGINT]) - [8]
2020-11-25 21:27:57,497 TRACE  [main] BasicExtractor: extracted value ([id1_0_1_] : [BIGINT]) - [9]
2020-11-25 21:27:57,497 TRACE  [main] BasicExtractor: extracted value ([binary_v2_0_1_] : [BLOB]) - [null]
2020-11-25 21:27:57,497 TRACE  [main] BasicExtractor: extracted value ([float_va3_0_1_] : [DOUBLE]) - [20.085536923187668]
2020-11-25 21:27:57,497 TRACE  [main] BasicExtractor: extracted value ([i4_0_1_] : [INTEGER]) - [0]
2020-11-25 21:27:57,498 TRACE  [main] BasicExtractor: extracted value ([is_condi5_0_1_] : [BOOLEAN]) - [true]
2020-11-25 21:27:57,498 TRACE  [main] BasicExtractor: extracted value ([j6_0_1_] : [INTEGER]) - [3]
2020-11-25 21:27:57,498 TRACE  [main] BasicExtractor: extracted value ([problem_7_0_1_] : [BIGINT]) - [2]
2020-11-25 21:27:57,498 TRACE  [main] BasicExtractor: extracted value ([problem_7_0_0_] : [BIGINT]) - [2]
2020-11-25 21:27:57,498 TRACE  [main] BasicExtractor: extracted value ([id1_0_0_] : [BIGINT]) - [9]
2020-11-25 21:27:57,498 TRACE  [main] BasicExtractor: extracted value ([id1_0_1_] : [BIGINT]) - [10]
2020-11-25 21:27:57,499 TRACE  [main] BasicExtractor: extracted value ([binary_v2_0_1_] : [BLOB]) - [null]
2020-11-25 21:27:57,499 TRACE  [main] BasicExtractor: extracted value ([float_va3_0_1_] : [DOUBLE]) - [54.598150033144236]
2020-11-25 21:27:57,499 TRACE  [main] BasicExtractor: extracted value ([i4_0_1_] : [INTEGER]) - [0]
2020-11-25 21:27:57,499 TRACE  [main] BasicExtractor: extracted value ([is_condi5_0_1_] : [BOOLEAN]) - [true]
2020-11-25 21:27:57,499 TRACE  [main] BasicExtractor: extracted value ([j6_0_1_] : [INTEGER]) - [4]
2020-11-25 21:27:57,499 TRACE  [main] BasicExtractor: extracted value ([problem_7_0_1_] : [BIGINT]) - [2]
2020-11-25 21:27:57,502 TRACE  [main] BasicExtractor: extracted value ([problem_7_0_0_] : [BIGINT]) - [2]
2020-11-25 21:27:57,503 TRACE  [main] BasicExtractor: extracted value ([id1_0_0_] : [BIGINT]) - [10]
2020-11-25 21:27:57,503 TRACE  [main] BasicExtractor: extracted value ([id1_0_1_] : [BIGINT]) - [11]
2020-11-25 21:27:57,503 TRACE  [main] BasicExtractor: extracted value ([binary_v2_0_1_] : [BLOB]) - [null]
2020-11-25 21:27:57,503 TRACE  [main] BasicExtractor: extracted value ([float_va3_0_1_] : [DOUBLE]) - [148.4131591025766]
2020-11-25 21:27:57,503 TRACE  [main] BasicExtractor: extracted value ([i4_0_1_] : [INTEGER]) - [0]
2020-11-25 21:27:57,503 TRACE  [main] BasicExtractor: extracted value ([is_condi5_0_1_] : [BOOLEAN]) - [true]
2020-11-25 21:27:57,504 TRACE  [main] BasicExtractor: extracted value ([j6_0_1_] : [INTEGER]) - [5]
2020-11-25 21:27:57,504 TRACE  [main] BasicExtractor: extracted value ([problem_7_0_1_] : [BIGINT]) - [2]
2020-11-25 21:27:57,506 TRACE  [main] BasicExtractor: extracted value ([problem_7_0_0_] : [BIGINT]) - [2]
2020-11-25 21:27:57,506 TRACE  [main] BasicExtractor: extracted value ([id1_0_0_] : [BIGINT]) - [11]
2020-11-25 21:27:57,545 TRACE  [main] BasicBinder: binding parameter [1] as [BLOB] - [[100, 101, 115, 99, 114, 105, 112, 116, 105, 111, 110]]
2020-11-25 21:27:57,546 TRACE  [main] BasicBinder: binding parameter [2] as [BOOLEAN] - [false]
2020-11-25 21:27:57,546 TRACE  [main] BasicBinder: binding parameter [3] as [VARCHAR] - [POLYNOMIAL]
2020-11-25 21:27:57,546 TRACE  [main] BasicBinder: binding parameter [4] as [INTEGER] - [12]
2020-11-25 21:27:57,546 TRACE  [main] BasicBinder: binding parameter [5] as [BIGINT] - [null]
2020-11-25 21:27:57,546 TRACE  [main] BasicBinder: binding parameter [6] as [INTEGER] - [null]
2020-11-25 21:27:57,548 TRACE  [main] BasicBinder: binding parameter [1] as [BLOB] - [null]
2020-11-25 21:27:57,548 TRACE  [main] BasicBinder: binding parameter [2] as [DOUBLE] - [0.0]
2020-11-25 21:27:57,548 TRACE  [main] BasicBinder: binding parameter [3] as [INTEGER] - [0]
2020-11-25 21:27:57,548 TRACE  [main] BasicBinder: binding parameter [4] as [BOOLEAN] - [true]
2020-11-25 21:27:57,548 TRACE  [main] BasicBinder: binding parameter [5] as [INTEGER] - [0]
2020-11-25 21:27:57,548 TRACE  [main] BasicBinder: binding parameter [6] as [BIGINT] - [4]
2020-11-25 21:27:57,550 TRACE  [main] BasicBinder: binding parameter [1] as [BLOB] - [null]
2020-11-25 21:27:57,550 TRACE  [main] BasicBinder: binding parameter [2] as [DOUBLE] - [1.0]
2020-11-25 21:27:57,550 TRACE  [main] BasicBinder: binding parameter [3] as [INTEGER] - [0]
2020-11-25 21:27:57,550 TRACE  [main] BasicBinder: binding parameter [4] as [BOOLEAN] - [true]
2020-11-25 21:27:57,550 TRACE  [main] BasicBinder: binding parameter [5] as [INTEGER] - [1]
2020-11-25 21:27:57,550 TRACE  [main] BasicBinder: binding parameter [6] as [BIGINT] - [4]
2020-11-25 21:27:57,552 TRACE  [main] BasicBinder: binding parameter [1] as [BLOB] - [null]
2020-11-25 21:27:57,552 TRACE  [main] BasicBinder: binding parameter [2] as [DOUBLE] - [2.0]
2020-11-25 21:27:57,552 TRACE  [main] BasicBinder: binding parameter [3] as [INTEGER] - [0]
2020-11-25 21:27:57,552 TRACE  [main] BasicBinder: binding parameter [4] as [BOOLEAN] - [true]
2020-11-25 21:27:57,552 TRACE  [main] BasicBinder: binding parameter [5] as [INTEGER] - [2]
2020-11-25 21:27:57,553 TRACE  [main] BasicBinder: binding parameter [6] as [BIGINT] - [4]
2020-11-25 21:27:57,554 TRACE  [main] BasicBinder: binding parameter [1] as [BLOB] - [null]
2020-11-25 21:27:57,555 TRACE  [main] BasicBinder: binding parameter [2] as [DOUBLE] - [3.0]
2020-11-25 21:27:57,556 TRACE  [main] BasicBinder: binding parameter [3] as [INTEGER] - [0]
2020-11-25 21:27:57,556 TRACE  [main] BasicBinder: binding parameter [4] as [BOOLEAN] - [true]
2020-11-25 21:27:57,556 TRACE  [main] BasicBinder: binding parameter [5] as [INTEGER] - [3]
2020-11-25 21:27:57,556 TRACE  [main] BasicBinder: binding parameter [6] as [BIGINT] - [4]
2020-11-25 21:27:57,558 TRACE  [main] BasicBinder: binding parameter [1] as [BLOB] - [null]
2020-11-25 21:27:57,558 TRACE  [main] BasicBinder: binding parameter [2] as [DOUBLE] - [4.0]
2020-11-25 21:27:57,558 TRACE  [main] BasicBinder: binding parameter [3] as [INTEGER] - [0]
2020-11-25 21:27:57,558 TRACE  [main] BasicBinder: binding parameter [4] as [BOOLEAN] - [true]
2020-11-25 21:27:57,559 TRACE  [main] BasicBinder: binding parameter [5] as [INTEGER] - [4]
2020-11-25 21:27:57,559 TRACE  [main] BasicBinder: binding parameter [6] as [BIGINT] - [4]
2020-11-25 21:27:57,560 TRACE  [main] BasicBinder: binding parameter [1] as [BLOB] - [null]
2020-11-25 21:27:57,560 TRACE  [main] BasicBinder: binding parameter [2] as [DOUBLE] - [5.0]
2020-11-25 21:27:57,561 TRACE  [main] BasicBinder: binding parameter [3] as [INTEGER] - [0]
2020-11-25 21:27:57,561 TRACE  [main] BasicBinder: binding parameter [4] as [BOOLEAN] - [true]
2020-11-25 21:27:57,561 TRACE  [main] BasicBinder: binding parameter [5] as [INTEGER] - [5]
2020-11-25 21:27:57,562 TRACE  [main] BasicBinder: binding parameter [6] as [BIGINT] - [4]
2020-11-25 21:27:57,563 TRACE  [main] BasicBinder: binding parameter [1] as [BLOB] - [null]
2020-11-25 21:27:57,564 TRACE  [main] BasicBinder: binding parameter [2] as [DOUBLE] - [6.0]
2020-11-25 21:27:57,564 TRACE  [main] BasicBinder: binding parameter [3] as [INTEGER] - [0]
2020-11-25 21:27:57,564 TRACE  [main] BasicBinder: binding parameter [4] as [BOOLEAN] - [true]
2020-11-25 21:27:57,564 TRACE  [main] BasicBinder: binding parameter [5] as [INTEGER] - [6]
2020-11-25 21:27:57,564 TRACE  [main] BasicBinder: binding parameter [6] as [BIGINT] - [4]
2020-11-25 21:27:57,569 TRACE  [main] BasicBinder: binding parameter [1] as [BLOB] - [null]
2020-11-25 21:27:57,569 TRACE  [main] BasicBinder: binding parameter [2] as [DOUBLE] - [7.0]
2020-11-25 21:27:57,569 TRACE  [main] BasicBinder: binding parameter [3] as [INTEGER] - [0]
2020-11-25 21:27:57,570 TRACE  [main] BasicBinder: binding parameter [4] as [BOOLEAN] - [true]
2020-11-25 21:27:57,570 TRACE  [main] BasicBinder: binding parameter [5] as [INTEGER] - [7]
2020-11-25 21:27:57,571 TRACE  [main] BasicBinder: binding parameter [6] as [BIGINT] - [4]
2020-11-25 21:27:57,574 TRACE  [main] BasicBinder: binding parameter [1] as [BLOB] - [null]
2020-11-25 21:27:57,574 TRACE  [main] BasicBinder: binding parameter [2] as [DOUBLE] - [8.0]
2020-11-25 21:27:57,574 TRACE  [main] BasicBinder: binding parameter [3] as [INTEGER] - [0]
2020-11-25 21:27:57,575 TRACE  [main] BasicBinder: binding parameter [4] as [BOOLEAN] - [true]
2020-11-25 21:27:57,575 TRACE  [main] BasicBinder: binding parameter [5] as [INTEGER] - [8]
2020-11-25 21:27:57,575 TRACE  [main] BasicBinder: binding parameter [6] as [BIGINT] - [4]
2020-11-25 21:27:57,577 TRACE  [main] BasicBinder: binding parameter [1] as [BLOB] - [null]
2020-11-25 21:27:57,578 TRACE  [main] BasicBinder: binding parameter [2] as [DOUBLE] - [9.0]
2020-11-25 21:27:57,578 TRACE  [main] BasicBinder: binding parameter [3] as [INTEGER] - [0]
2020-11-25 21:27:57,578 TRACE  [main] BasicBinder: binding parameter [4] as [BOOLEAN] - [true]
2020-11-25 21:27:57,578 TRACE  [main] BasicBinder: binding parameter [5] as [INTEGER] - [9]
2020-11-25 21:27:57,578 TRACE  [main] BasicBinder: binding parameter [6] as [BIGINT] - [4]
2020-11-25 21:27:57,817 TRACE  [main] BasicExtractor: extracted value ([id1_1_] : [BIGINT]) - [1]
2020-11-25 21:27:57,819 TRACE  [main] BasicExtractor: extracted value ([descript2_1_] : [BLOB]) - [[70, 105, 110, 100, 32, 97, 108, 108, 32, 114, 111, 111, 116, 115, 32, 111, 102, 32, 103, 105, 118, 101, 110, 32, 112, 111, 108, 121, 110, 111, 109, 105, 97, 108]]
2020-11-25 21:27:57,819 TRACE  [main] BasicExtractor: extracted value ([is_solve3_1_] : [BOOLEAN]) - [false]
2020-11-25 21:27:57,820 TRACE  [main] BasicExtractor: extracted value ([kind4_1_] : [VARCHAR]) - [POLYNOMIAL]
2020-11-25 21:27:57,820 TRACE  [main] BasicExtractor: extracted value ([matrix_d5_1_] : [INTEGER]) - [1]
2020-11-25 21:27:57,820 TRACE  [main] BasicExtractor: extracted value ([parent_p7_1_] : [BIGINT]) - [null]
2020-11-25 21:27:57,821 TRACE  [main] BasicExtractor: extracted value ([problem_6_1_] : [INTEGER]) - [6]
2020-11-25 21:27:57,823 TRACE  [main] BasicExtractor: extracted value ([id1_1_] : [BIGINT]) - [2]
2020-11-25 21:27:57,824 TRACE  [main] BasicExtractor: extracted value ([descript2_1_] : [BLOB]) - [[100, 101, 115, 99, 114, 105, 112, 116, 105, 111, 110, 100, 101, 115, 99, 114, 105, 112, 116, 105, 111, 110]]
2020-11-25 21:27:57,824 TRACE  [main] BasicExtractor: extracted value ([is_solve3_1_] : [BOOLEAN]) - [null]
2020-11-25 21:27:57,825 TRACE  [main] BasicExtractor: extracted value ([kind4_1_] : [VARCHAR]) - [POLYNOMIAL]
2020-11-25 21:27:57,826 TRACE  [main] BasicExtractor: extracted value ([matrix_d5_1_] : [INTEGER]) - [1]
2020-11-25 21:27:57,827 TRACE  [main] BasicExtractor: extracted value ([parent_p7_1_] : [BIGINT]) - [null]
2020-11-25 21:27:57,827 TRACE  [main] BasicExtractor: extracted value ([problem_6_1_] : [INTEGER]) - [22]
2020-11-25 21:27:57,828 TRACE  [main] BasicExtractor: extracted value ([id1_1_] : [BIGINT]) - [3]
2020-11-25 21:27:57,829 TRACE  [main] BasicExtractor: extracted value ([descript2_1_] : [BLOB]) - [[112, 114, 111, 98, 108, 101, 109, 100, 101, 115, 99, 114, 105, 112, 116, 105, 111, 110]]
2020-11-25 21:27:57,829 TRACE  [main] BasicExtractor: extracted value ([is_solve3_1_] : [BOOLEAN]) - [null]
2020-11-25 21:27:57,830 TRACE  [main] BasicExtractor: extracted value ([kind4_1_] : [VARCHAR]) - [POLYNOMIAL]
2020-11-25 21:27:57,830 TRACE  [main] BasicExtractor: extracted value ([matrix_d5_1_] : [INTEGER]) - [1]
2020-11-25 21:27:57,830 TRACE  [main] BasicExtractor: extracted value ([parent_p7_1_] : [BIGINT]) - [null]
2020-11-25 21:27:57,831 TRACE  [main] BasicExtractor: extracted value ([problem_6_1_] : [INTEGER]) - [22]
2020-11-25 21:27:57,832 TRACE  [main] BasicExtractor: extracted value ([id1_1_] : [BIGINT]) - [4]
2020-11-25 21:27:57,832 TRACE  [main] BasicExtractor: extracted value ([descript2_1_] : [BLOB]) - [[100, 101, 115, 99, 114, 105, 112, 116, 105, 111, 110]]
2020-11-25 21:27:57,833 TRACE  [main] BasicExtractor: extracted value ([is_solve3_1_] : [BOOLEAN]) - [false]
2020-11-25 21:27:57,833 TRACE  [main] BasicExtractor: extracted value ([kind4_1_] : [VARCHAR]) - [POLYNOMIAL]
2020-11-25 21:27:57,833 TRACE  [main] BasicExtractor: extracted value ([matrix_d5_1_] : [INTEGER]) - [12]
2020-11-25 21:27:57,833 TRACE  [main] BasicExtractor: extracted value ([parent_p7_1_] : [BIGINT]) - [null]
2020-11-25 21:27:57,833 TRACE  [main] BasicExtractor: extracted value ([problem_6_1_] : [INTEGER]) - [null]
2020-11-25 21:27:57,833 TRACE  [main] BasicExtractor: extracted value ([id1_1_] : [BIGINT]) - [5]
2020-11-25 21:27:57,834 TRACE  [main] BasicExtractor: extracted value ([descript2_1_] : [BLOB]) - [[112, 114, 111, 98, 108, 101, 109, 100, 101, 115, 99, 114, 105, 112, 116, 105, 111, 110]]
2020-11-25 21:27:57,834 TRACE  [main] BasicExtractor: extracted value ([is_solve3_1_] : [BOOLEAN]) - [null]
2020-11-25 21:27:57,835 TRACE  [main] BasicExtractor: extracted value ([kind4_1_] : [VARCHAR]) - [POLYNOMIAL]
2020-11-25 21:27:57,835 TRACE  [main] BasicExtractor: extracted value ([matrix_d5_1_] : [INTEGER]) - [1]
2020-11-25 21:27:57,835 TRACE  [main] BasicExtractor: extracted value ([parent_p7_1_] : [BIGINT]) - [null]
2020-11-25 21:27:57,835 TRACE  [main] BasicExtractor: extracted value ([problem_6_1_] : [INTEGER]) - [22]
2020-11-25 21:27:57,836 TRACE  [main] CollectionType: Created collection wrapper: [com.sf.back.entities.Problem.children#1]
2020-11-25 21:27:57,836 TRACE  [main] CollectionType: Created collection wrapper: [com.sf.back.entities.Problem.matrixes#1]
2020-11-25 21:27:57,840 TRACE  [main] CollectionType: Created collection wrapper: [com.sf.back.entities.Problem.children#2]
2020-11-25 21:27:57,840 TRACE  [main] CollectionType: Created collection wrapper: [com.sf.back.entities.Problem.matrixes#2]
2020-11-25 21:27:57,840 TRACE  [main] CollectionType: Created collection wrapper: [com.sf.back.entities.Problem.children#3]
2020-11-25 21:27:57,841 TRACE  [main] CollectionType: Created collection wrapper: [com.sf.back.entities.Problem.matrixes#3]
2020-11-25 21:27:57,841 TRACE  [main] CollectionType: Created collection wrapper: [com.sf.back.entities.Problem.children#4]
2020-11-25 21:27:57,841 TRACE  [main] CollectionType: Created collection wrapper: [com.sf.back.entities.Problem.matrixes#4]
2020-11-25 21:27:57,841 TRACE  [main] CollectionType: Created collection wrapper: [com.sf.back.entities.Problem.children#5]
2020-11-25 21:27:57,841 TRACE  [main] CollectionType: Created collection wrapper: [com.sf.back.entities.Problem.matrixes#5]
2020-11-25 21:27:57,843 TRACE  [main] BasicBinder: binding parameter [1] as [BIGINT] - [5]
2020-11-25 21:27:57,844 TRACE  [main] BasicExtractor: extracted value ([id1_0_1_] : [BIGINT]) - [28]
2020-11-25 21:27:57,844 TRACE  [main] BasicExtractor: extracted value ([binary_v2_0_1_] : [BLOB]) - [null]
2020-11-25 21:27:57,844 TRACE  [main] BasicExtractor: extracted value ([float_va3_0_1_] : [DOUBLE]) - [1.0]
2020-11-25 21:27:57,845 TRACE  [main] BasicExtractor: extracted value ([i4_0_1_] : [INTEGER]) - [0]
2020-11-25 21:27:57,845 TRACE  [main] BasicExtractor: extracted value ([is_condi5_0_1_] : [BOOLEAN]) - [true]
2020-11-25 21:27:57,845 TRACE  [main] BasicExtractor: extracted value ([j6_0_1_] : [INTEGER]) - [0]
2020-11-25 21:27:57,845 TRACE  [main] BasicExtractor: extracted value ([problem_7_0_1_] : [BIGINT]) - [5]
2020-11-25 21:27:57,845 TRACE  [main] BasicExtractor: extracted value ([problem_7_0_0_] : [BIGINT]) - [5]
2020-11-25 21:27:57,845 TRACE  [main] BasicExtractor: extracted value ([id1_0_0_] : [BIGINT]) - [28]
2020-11-25 21:27:57,845 TRACE  [main] BasicExtractor: extracted value ([id1_0_1_] : [BIGINT]) - [29]
2020-11-25 21:27:57,846 TRACE  [main] BasicExtractor: extracted value ([binary_v2_0_1_] : [BLOB]) - [null]
2020-11-25 21:27:57,846 TRACE  [main] BasicExtractor: extracted value ([float_va3_0_1_] : [DOUBLE]) - [2.718281828459045]
2020-11-25 21:27:57,846 TRACE  [main] BasicExtractor: extracted value ([i4_0_1_] : [INTEGER]) - [0]
2020-11-25 21:27:57,846 TRACE  [main] BasicExtractor: extracted value ([is_condi5_0_1_] : [BOOLEAN]) - [true]
2020-11-25 21:27:57,846 TRACE  [main] BasicExtractor: extracted value ([j6_0_1_] : [INTEGER]) - [1]
2020-11-25 21:27:57,847 TRACE  [main] BasicExtractor: extracted value ([problem_7_0_1_] : [BIGINT]) - [5]
2020-11-25 21:27:57,847 TRACE  [main] BasicExtractor: extracted value ([problem_7_0_0_] : [BIGINT]) - [5]
2020-11-25 21:27:57,847 TRACE  [main] BasicExtractor: extracted value ([id1_0_0_] : [BIGINT]) - [29]
2020-11-25 21:27:57,847 TRACE  [main] BasicExtractor: extracted value ([id1_0_1_] : [BIGINT]) - [30]
2020-11-25 21:27:57,847 TRACE  [main] BasicExtractor: extracted value ([binary_v2_0_1_] : [BLOB]) - [null]
2020-11-25 21:27:57,847 TRACE  [main] BasicExtractor: extracted value ([float_va3_0_1_] : [DOUBLE]) - [7.38905609893065]
2020-11-25 21:27:57,847 TRACE  [main] BasicExtractor: extracted value ([i4_0_1_] : [INTEGER]) - [0]
2020-11-25 21:27:57,848 TRACE  [main] BasicExtractor: extracted value ([is_condi5_0_1_] : [BOOLEAN]) - [true]
2020-11-25 21:27:57,848 TRACE  [main] BasicExtractor: extracted value ([j6_0_1_] : [INTEGER]) - [2]
2020-11-25 21:27:57,848 TRACE  [main] BasicExtractor: extracted value ([problem_7_0_1_] : [BIGINT]) - [5]
2020-11-25 21:27:57,848 TRACE  [main] BasicExtractor: extracted value ([problem_7_0_0_] : [BIGINT]) - [5]
2020-11-25 21:27:57,848 TRACE  [main] BasicExtractor: extracted value ([id1_0_0_] : [BIGINT]) - [30]
2020-11-25 21:27:57,848 TRACE  [main] BasicExtractor: extracted value ([id1_0_1_] : [BIGINT]) - [31]
2020-11-25 21:27:57,848 TRACE  [main] BasicExtractor: extracted value ([binary_v2_0_1_] : [BLOB]) - [null]
2020-11-25 21:27:57,848 TRACE  [main] BasicExtractor: extracted value ([float_va3_0_1_] : [DOUBLE]) - [20.085536923187668]
2020-11-25 21:27:57,849 TRACE  [main] BasicExtractor: extracted value ([i4_0_1_] : [INTEGER]) - [0]
2020-11-25 21:27:57,849 TRACE  [main] BasicExtractor: extracted value ([is_condi5_0_1_] : [BOOLEAN]) - [true]
2020-11-25 21:27:57,849 TRACE  [main] BasicExtractor: extracted value ([j6_0_1_] : [INTEGER]) - [3]
2020-11-25 21:27:57,849 TRACE  [main] BasicExtractor: extracted value ([problem_7_0_1_] : [BIGINT]) - [5]
2020-11-25 21:27:57,849 TRACE  [main] BasicExtractor: extracted value ([problem_7_0_0_] : [BIGINT]) - [5]
2020-11-25 21:27:57,849 TRACE  [main] BasicExtractor: extracted value ([id1_0_0_] : [BIGINT]) - [31]
2020-11-25 21:27:57,849 TRACE  [main] BasicExtractor: extracted value ([id1_0_1_] : [BIGINT]) - [32]
2020-11-25 21:27:57,850 TRACE  [main] BasicExtractor: extracted value ([binary_v2_0_1_] : [BLOB]) - [null]
2020-11-25 21:27:57,850 TRACE  [main] BasicExtractor: extracted value ([float_va3_0_1_] : [DOUBLE]) - [54.598150033144236]
2020-11-25 21:27:57,850 TRACE  [main] BasicExtractor: extracted value ([i4_0_1_] : [INTEGER]) - [0]
2020-11-25 21:27:57,850 TRACE  [main] BasicExtractor: extracted value ([is_condi5_0_1_] : [BOOLEAN]) - [true]
2020-11-25 21:27:57,850 TRACE  [main] BasicExtractor: extracted value ([j6_0_1_] : [INTEGER]) - [4]
2020-11-25 21:27:57,850 TRACE  [main] BasicExtractor: extracted value ([problem_7_0_1_] : [BIGINT]) - [5]
2020-11-25 21:27:57,851 TRACE  [main] BasicExtractor: extracted value ([problem_7_0_0_] : [BIGINT]) - [5]
2020-11-25 21:27:57,851 TRACE  [main] BasicExtractor: extracted value ([id1_0_0_] : [BIGINT]) - [32]
2020-11-25 21:27:57,852 TRACE  [main] BasicExtractor: extracted value ([id1_0_1_] : [BIGINT]) - [33]
2020-11-25 21:27:57,852 TRACE  [main] BasicExtractor: extracted value ([binary_v2_0_1_] : [BLOB]) - [null]
2020-11-25 21:27:57,852 TRACE  [main] BasicExtractor: extracted value ([float_va3_0_1_] : [DOUBLE]) - [148.4131591025766]
2020-11-25 21:27:57,852 TRACE  [main] BasicExtractor: extracted value ([i4_0_1_] : [INTEGER]) - [0]
2020-11-25 21:27:57,852 TRACE  [main] BasicExtractor: extracted value ([is_condi5_0_1_] : [BOOLEAN]) - [true]
2020-11-25 21:27:57,852 TRACE  [main] BasicExtractor: extracted value ([j6_0_1_] : [INTEGER]) - [5]
2020-11-25 21:27:57,852 TRACE  [main] BasicExtractor: extracted value ([problem_7_0_1_] : [BIGINT]) - [5]
2020-11-25 21:27:57,853 TRACE  [main] BasicExtractor: extracted value ([problem_7_0_0_] : [BIGINT]) - [5]
2020-11-25 21:27:57,853 TRACE  [main] BasicExtractor: extracted value ([id1_0_0_] : [BIGINT]) - [33]
2020-11-25 21:27:57,854 TRACE  [main] BasicBinder: binding parameter [1] as [BIGINT] - [5]
2020-11-25 21:27:57,857 TRACE  [main] BasicBinder: binding parameter [1] as [BIGINT] - [4]
2020-11-25 21:27:57,858 TRACE  [main] BasicExtractor: extracted value ([id1_0_1_] : [BIGINT]) - [18]
2020-11-25 21:27:57,858 TRACE  [main] BasicExtractor: extracted value ([binary_v2_0_1_] : [BLOB]) - [null]
2020-11-25 21:27:57,859 TRACE  [main] BasicExtractor: extracted value ([float_va3_0_1_] : [DOUBLE]) - [0.0]
2020-11-25 21:27:57,859 TRACE  [main] BasicExtractor: extracted value ([i4_0_1_] : [INTEGER]) - [0]
2020-11-25 21:27:57,859 TRACE  [main] BasicExtractor: extracted value ([is_condi5_0_1_] : [BOOLEAN]) - [true]
2020-11-25 21:27:57,859 TRACE  [main] BasicExtractor: extracted value ([j6_0_1_] : [INTEGER]) - [0]
2020-11-25 21:27:57,859 TRACE  [main] BasicExtractor: extracted value ([problem_7_0_1_] : [BIGINT]) - [4]
2020-11-25 21:27:57,860 TRACE  [main] BasicExtractor: extracted value ([problem_7_0_0_] : [BIGINT]) - [4]
2020-11-25 21:27:57,861 TRACE  [main] BasicExtractor: extracted value ([id1_0_0_] : [BIGINT]) - [18]
2020-11-25 21:27:57,861 TRACE  [main] BasicExtractor: extracted value ([id1_0_1_] : [BIGINT]) - [19]
2020-11-25 21:27:57,861 TRACE  [main] BasicExtractor: extracted value ([binary_v2_0_1_] : [BLOB]) - [null]
2020-11-25 21:27:57,861 TRACE  [main] BasicExtractor: extracted value ([float_va3_0_1_] : [DOUBLE]) - [1.0]
2020-11-25 21:27:57,862 TRACE  [main] BasicExtractor: extracted value ([i4_0_1_] : [INTEGER]) - [0]
2020-11-25 21:27:57,862 TRACE  [main] BasicExtractor: extracted value ([is_condi5_0_1_] : [BOOLEAN]) - [true]
2020-11-25 21:27:57,862 TRACE  [main] BasicExtractor: extracted value ([j6_0_1_] : [INTEGER]) - [1]
2020-11-25 21:27:57,862 TRACE  [main] BasicExtractor: extracted value ([problem_7_0_1_] : [BIGINT]) - [4]
2020-11-25 21:27:57,862 TRACE  [main] BasicExtractor: extracted value ([problem_7_0_0_] : [BIGINT]) - [4]
2020-11-25 21:27:57,862 TRACE  [main] BasicExtractor: extracted value ([id1_0_0_] : [BIGINT]) - [19]
2020-11-25 21:27:57,863 TRACE  [main] BasicExtractor: extracted value ([id1_0_1_] : [BIGINT]) - [20]
2020-11-25 21:27:57,863 TRACE  [main] BasicExtractor: extracted value ([binary_v2_0_1_] : [BLOB]) - [null]
2020-11-25 21:27:57,863 TRACE  [main] BasicExtractor: extracted value ([float_va3_0_1_] : [DOUBLE]) - [2.0]
2020-11-25 21:27:57,863 TRACE  [main] BasicExtractor: extracted value ([i4_0_1_] : [INTEGER]) - [0]
2020-11-25 21:27:57,863 TRACE  [main] BasicExtractor: extracted value ([is_condi5_0_1_] : [BOOLEAN]) - [true]
2020-11-25 21:27:57,864 TRACE  [main] BasicExtractor: extracted value ([j6_0_1_] : [INTEGER]) - [2]
2020-11-25 21:27:57,864 TRACE  [main] BasicExtractor: extracted value ([problem_7_0_1_] : [BIGINT]) - [4]
2020-11-25 21:27:57,864 TRACE  [main] BasicExtractor: extracted value ([problem_7_0_0_] : [BIGINT]) - [4]
2020-11-25 21:27:57,864 TRACE  [main] BasicExtractor: extracted value ([id1_0_0_] : [BIGINT]) - [20]
2020-11-25 21:27:57,864 TRACE  [main] BasicExtractor: extracted value ([id1_0_1_] : [BIGINT]) - [21]
2020-11-25 21:27:57,864 TRACE  [main] BasicExtractor: extracted value ([binary_v2_0_1_] : [BLOB]) - [null]
2020-11-25 21:27:57,865 TRACE  [main] BasicExtractor: extracted value ([float_va3_0_1_] : [DOUBLE]) - [3.0]
2020-11-25 21:27:57,865 TRACE  [main] BasicExtractor: extracted value ([i4_0_1_] : [INTEGER]) - [0]
2020-11-25 21:27:57,865 TRACE  [main] BasicExtractor: extracted value ([is_condi5_0_1_] : [BOOLEAN]) - [true]
2020-11-25 21:27:57,865 TRACE  [main] BasicExtractor: extracted value ([j6_0_1_] : [INTEGER]) - [3]
2020-11-25 21:27:57,865 TRACE  [main] BasicExtractor: extracted value ([problem_7_0_1_] : [BIGINT]) - [4]
2020-11-25 21:27:57,865 TRACE  [main] BasicExtractor: extracted value ([problem_7_0_0_] : [BIGINT]) - [4]
2020-11-25 21:27:57,866 TRACE  [main] BasicExtractor: extracted value ([id1_0_0_] : [BIGINT]) - [21]
2020-11-25 21:27:57,866 TRACE  [main] BasicExtractor: extracted value ([id1_0_1_] : [BIGINT]) - [22]
2020-11-25 21:27:57,866 TRACE  [main] BasicExtractor: extracted value ([binary_v2_0_1_] : [BLOB]) - [null]
2020-11-25 21:27:57,867 TRACE  [main] BasicExtractor: extracted value ([float_va3_0_1_] : [DOUBLE]) - [4.0]
2020-11-25 21:27:57,867 TRACE  [main] BasicExtractor: extracted value ([i4_0_1_] : [INTEGER]) - [0]
2020-11-25 21:27:57,867 TRACE  [main] BasicExtractor: extracted value ([is_condi5_0_1_] : [BOOLEAN]) - [true]
2020-11-25 21:27:57,867 TRACE  [main] BasicExtractor: extracted value ([j6_0_1_] : [INTEGER]) - [4]
2020-11-25 21:27:57,867 TRACE  [main] BasicExtractor: extracted value ([problem_7_0_1_] : [BIGINT]) - [4]
2020-11-25 21:27:57,867 TRACE  [main] BasicExtractor: extracted value ([problem_7_0_0_] : [BIGINT]) - [4]
2020-11-25 21:27:57,867 TRACE  [main] BasicExtractor: extracted value ([id1_0_0_] : [BIGINT]) - [22]
2020-11-25 21:27:57,869 TRACE  [main] BasicExtractor: extracted value ([id1_0_1_] : [BIGINT]) - [23]
2020-11-25 21:27:57,869 TRACE  [main] BasicExtractor: extracted value ([binary_v2_0_1_] : [BLOB]) - [null]
2020-11-25 21:27:57,869 TRACE  [main] BasicExtractor: extracted value ([float_va3_0_1_] : [DOUBLE]) - [5.0]
2020-11-25 21:27:57,869 TRACE  [main] BasicExtractor: extracted value ([i4_0_1_] : [INTEGER]) - [0]
2020-11-25 21:27:57,869 TRACE  [main] BasicExtractor: extracted value ([is_condi5_0_1_] : [BOOLEAN]) - [true]
2020-11-25 21:27:57,869 TRACE  [main] BasicExtractor: extracted value ([j6_0_1_] : [INTEGER]) - [5]
2020-11-25 21:27:57,869 TRACE  [main] BasicExtractor: extracted value ([problem_7_0_1_] : [BIGINT]) - [4]
2020-11-25 21:27:57,870 TRACE  [main] BasicExtractor: extracted value ([problem_7_0_0_] : [BIGINT]) - [4]
2020-11-25 21:27:57,870 TRACE  [main] BasicExtractor: extracted value ([id1_0_0_] : [BIGINT]) - [23]
2020-11-25 21:27:57,871 TRACE  [main] BasicExtractor: extracted value ([id1_0_1_] : [BIGINT]) - [24]
2020-11-25 21:27:57,871 TRACE  [main] BasicExtractor: extracted value ([binary_v2_0_1_] : [BLOB]) - [null]
2020-11-25 21:27:57,871 TRACE  [main] BasicExtractor: extracted value ([float_va3_0_1_] : [DOUBLE]) - [6.0]
2020-11-25 21:27:57,871 TRACE  [main] BasicExtractor: extracted value ([i4_0_1_] : [INTEGER]) - [0]
2020-11-25 21:27:57,872 TRACE  [main] BasicExtractor: extracted value ([is_condi5_0_1_] : [BOOLEAN]) - [true]
2020-11-25 21:27:57,872 TRACE  [main] BasicExtractor: extracted value ([j6_0_1_] : [INTEGER]) - [6]
2020-11-25 21:27:57,872 TRACE  [main] BasicExtractor: extracted value ([problem_7_0_1_] : [BIGINT]) - [4]
2020-11-25 21:27:57,873 TRACE  [main] BasicExtractor: extracted value ([problem_7_0_0_] : [BIGINT]) - [4]
2020-11-25 21:27:57,873 TRACE  [main] BasicExtractor: extracted value ([id1_0_0_] : [BIGINT]) - [24]
2020-11-25 21:27:57,873 TRACE  [main] BasicExtractor: extracted value ([id1_0_1_] : [BIGINT]) - [25]
2020-11-25 21:27:57,873 TRACE  [main] BasicExtractor: extracted value ([binary_v2_0_1_] : [BLOB]) - [null]
2020-11-25 21:27:57,873 TRACE  [main] BasicExtractor: extracted value ([float_va3_0_1_] : [DOUBLE]) - [7.0]
2020-11-25 21:27:57,873 TRACE  [main] BasicExtractor: extracted value ([i4_0_1_] : [INTEGER]) - [0]
2020-11-25 21:27:57,873 TRACE  [main] BasicExtractor: extracted value ([is_condi5_0_1_] : [BOOLEAN]) - [true]
2020-11-25 21:27:57,874 TRACE  [main] BasicExtractor: extracted value ([j6_0_1_] : [INTEGER]) - [7]
2020-11-25 21:27:57,874 TRACE  [main] BasicExtractor: extracted value ([problem_7_0_1_] : [BIGINT]) - [4]
2020-11-25 21:27:57,874 TRACE  [main] BasicExtractor: extracted value ([problem_7_0_0_] : [BIGINT]) - [4]
2020-11-25 21:27:57,874 TRACE  [main] BasicExtractor: extracted value ([id1_0_0_] : [BIGINT]) - [25]
2020-11-25 21:27:57,874 TRACE  [main] BasicExtractor: extracted value ([id1_0_1_] : [BIGINT]) - [26]
2020-11-25 21:27:57,874 TRACE  [main] BasicExtractor: extracted value ([binary_v2_0_1_] : [BLOB]) - [null]
2020-11-25 21:27:57,874 TRACE  [main] BasicExtractor: extracted value ([float_va3_0_1_] : [DOUBLE]) - [8.0]
2020-11-25 21:27:57,875 TRACE  [main] BasicExtractor: extracted value ([i4_0_1_] : [INTEGER]) - [0]
2020-11-25 21:27:57,875 TRACE  [main] BasicExtractor: extracted value ([is_condi5_0_1_] : [BOOLEAN]) - [true]
2020-11-25 21:27:57,875 TRACE  [main] BasicExtractor: extracted value ([j6_0_1_] : [INTEGER]) - [8]
2020-11-25 21:27:57,875 TRACE  [main] BasicExtractor: extracted value ([problem_7_0_1_] : [BIGINT]) - [4]
2020-11-25 21:27:57,876 TRACE  [main] BasicExtractor: extracted value ([problem_7_0_0_] : [BIGINT]) - [4]
2020-11-25 21:27:57,876 TRACE  [main] BasicExtractor: extracted value ([id1_0_0_] : [BIGINT]) - [26]
2020-11-25 21:27:57,876 TRACE  [main] BasicExtractor: extracted value ([id1_0_1_] : [BIGINT]) - [27]
2020-11-25 21:27:57,876 TRACE  [main] BasicExtractor: extracted value ([binary_v2_0_1_] : [BLOB]) - [null]
2020-11-25 21:27:57,876 TRACE  [main] BasicExtractor: extracted value ([float_va3_0_1_] : [DOUBLE]) - [9.0]
2020-11-25 21:27:57,877 TRACE  [main] BasicExtractor: extracted value ([i4_0_1_] : [INTEGER]) - [0]
2020-11-25 21:27:57,877 TRACE  [main] BasicExtractor: extracted value ([is_condi5_0_1_] : [BOOLEAN]) - [true]
2020-11-25 21:27:57,877 TRACE  [main] BasicExtractor: extracted value ([j6_0_1_] : [INTEGER]) - [9]
2020-11-25 21:27:57,877 TRACE  [main] BasicExtractor: extracted value ([problem_7_0_1_] : [BIGINT]) - [4]
2020-11-25 21:27:57,877 TRACE  [main] BasicExtractor: extracted value ([problem_7_0_0_] : [BIGINT]) - [4]
2020-11-25 21:27:57,877 TRACE  [main] BasicExtractor: extracted value ([id1_0_0_] : [BIGINT]) - [27]
2020-11-25 21:27:57,879 TRACE  [main] BasicBinder: binding parameter [1] as [BIGINT] - [4]
2020-11-25 21:27:57,879 TRACE  [main] BasicBinder: binding parameter [1] as [BIGINT] - [3]
2020-11-25 21:27:57,880 TRACE  [main] BasicExtractor: extracted value ([id1_0_1_] : [BIGINT]) - [12]
2020-11-25 21:27:57,880 TRACE  [main] BasicExtractor: extracted value ([binary_v2_0_1_] : [BLOB]) - [null]
2020-11-25 21:27:57,880 TRACE  [main] BasicExtractor: extracted value ([float_va3_0_1_] : [DOUBLE]) - [1.0]
2020-11-25 21:27:57,880 TRACE  [main] BasicExtractor: extracted value ([i4_0_1_] : [INTEGER]) - [0]
2020-11-25 21:27:57,880 TRACE  [main] BasicExtractor: extracted value ([is_condi5_0_1_] : [BOOLEAN]) - [true]
2020-11-25 21:27:57,880 TRACE  [main] BasicExtractor: extracted value ([j6_0_1_] : [INTEGER]) - [0]
2020-11-25 21:27:57,880 TRACE  [main] BasicExtractor: extracted value ([problem_7_0_1_] : [BIGINT]) - [3]
2020-11-25 21:27:57,880 TRACE  [main] BasicExtractor: extracted value ([problem_7_0_0_] : [BIGINT]) - [3]
2020-11-25 21:27:57,881 TRACE  [main] BasicExtractor: extracted value ([id1_0_0_] : [BIGINT]) - [12]
2020-11-25 21:27:57,881 TRACE  [main] BasicExtractor: extracted value ([id1_0_1_] : [BIGINT]) - [13]
2020-11-25 21:27:57,881 TRACE  [main] BasicExtractor: extracted value ([binary_v2_0_1_] : [BLOB]) - [null]
2020-11-25 21:27:57,881 TRACE  [main] BasicExtractor: extracted value ([float_va3_0_1_] : [DOUBLE]) - [2.718281828459045]
2020-11-25 21:27:57,881 TRACE  [main] BasicExtractor: extracted value ([i4_0_1_] : [INTEGER]) - [0]
2020-11-25 21:27:57,881 TRACE  [main] BasicExtractor: extracted value ([is_condi5_0_1_] : [BOOLEAN]) - [true]
2020-11-25 21:27:57,881 TRACE  [main] BasicExtractor: extracted value ([j6_0_1_] : [INTEGER]) - [1]
2020-11-25 21:27:57,881 TRACE  [main] BasicExtractor: extracted value ([problem_7_0_1_] : [BIGINT]) - [3]
2020-11-25 21:27:57,881 TRACE  [main] BasicExtractor: extracted value ([problem_7_0_0_] : [BIGINT]) - [3]
2020-11-25 21:27:57,881 TRACE  [main] BasicExtractor: extracted value ([id1_0_0_] : [BIGINT]) - [13]
2020-11-25 21:27:57,882 TRACE  [main] BasicExtractor: extracted value ([id1_0_1_] : [BIGINT]) - [14]
2020-11-25 21:27:57,882 TRACE  [main] BasicExtractor: extracted value ([binary_v2_0_1_] : [BLOB]) - [null]
2020-11-25 21:27:57,882 TRACE  [main] BasicExtractor: extracted value ([float_va3_0_1_] : [DOUBLE]) - [7.38905609893065]
2020-11-25 21:27:57,882 TRACE  [main] BasicExtractor: extracted value ([i4_0_1_] : [INTEGER]) - [0]
2020-11-25 21:27:57,882 TRACE  [main] BasicExtractor: extracted value ([is_condi5_0_1_] : [BOOLEAN]) - [true]
2020-11-25 21:27:57,882 TRACE  [main] BasicExtractor: extracted value ([j6_0_1_] : [INTEGER]) - [2]
2020-11-25 21:27:57,882 TRACE  [main] BasicExtractor: extracted value ([problem_7_0_1_] : [BIGINT]) - [3]
2020-11-25 21:27:57,882 TRACE  [main] BasicExtractor: extracted value ([problem_7_0_0_] : [BIGINT]) - [3]
2020-11-25 21:27:57,882 TRACE  [main] BasicExtractor: extracted value ([id1_0_0_] : [BIGINT]) - [14]
2020-11-25 21:27:57,882 TRACE  [main] BasicExtractor: extracted value ([id1_0_1_] : [BIGINT]) - [15]
2020-11-25 21:27:57,883 TRACE  [main] BasicExtractor: extracted value ([binary_v2_0_1_] : [BLOB]) - [null]
2020-11-25 21:27:57,883 TRACE  [main] BasicExtractor: extracted value ([float_va3_0_1_] : [DOUBLE]) - [20.085536923187668]
2020-11-25 21:27:57,883 TRACE  [main] BasicExtractor: extracted value ([i4_0_1_] : [INTEGER]) - [0]
2020-11-25 21:27:57,883 TRACE  [main] BasicExtractor: extracted value ([is_condi5_0_1_] : [BOOLEAN]) - [true]
2020-11-25 21:27:57,883 TRACE  [main] BasicExtractor: extracted value ([j6_0_1_] : [INTEGER]) - [3]
2020-11-25 21:27:57,883 TRACE  [main] BasicExtractor: extracted value ([problem_7_0_1_] : [BIGINT]) - [3]
2020-11-25 21:27:57,883 TRACE  [main] BasicExtractor: extracted value ([problem_7_0_0_] : [BIGINT]) - [3]
2020-11-25 21:27:57,883 TRACE  [main] BasicExtractor: extracted value ([id1_0_0_] : [BIGINT]) - [15]
2020-11-25 21:27:57,884 TRACE  [main] BasicExtractor: extracted value ([id1_0_1_] : [BIGINT]) - [16]
2020-11-25 21:27:57,884 TRACE  [main] BasicExtractor: extracted value ([binary_v2_0_1_] : [BLOB]) - [null]
2020-11-25 21:27:57,884 TRACE  [main] BasicExtractor: extracted value ([float_va3_0_1_] : [DOUBLE]) - [54.598150033144236]
2020-11-25 21:27:57,884 TRACE  [main] BasicExtractor: extracted value ([i4_0_1_] : [INTEGER]) - [0]
2020-11-25 21:27:57,884 TRACE  [main] BasicExtractor: extracted value ([is_condi5_0_1_] : [BOOLEAN]) - [true]
2020-11-25 21:27:57,884 TRACE  [main] BasicExtractor: extracted value ([j6_0_1_] : [INTEGER]) - [4]
2020-11-25 21:27:57,884 TRACE  [main] BasicExtractor: extracted value ([problem_7_0_1_] : [BIGINT]) - [3]
2020-11-25 21:27:57,884 TRACE  [main] BasicExtractor: extracted value ([problem_7_0_0_] : [BIGINT]) - [3]
2020-11-25 21:27:57,884 TRACE  [main] BasicExtractor: extracted value ([id1_0_0_] : [BIGINT]) - [16]
2020-11-25 21:27:57,885 TRACE  [main] BasicExtractor: extracted value ([id1_0_1_] : [BIGINT]) - [17]
2020-11-25 21:27:57,885 TRACE  [main] BasicExtractor: extracted value ([binary_v2_0_1_] : [BLOB]) - [null]
2020-11-25 21:27:57,885 TRACE  [main] BasicExtractor: extracted value ([float_va3_0_1_] : [DOUBLE]) - [148.4131591025766]
2020-11-25 21:27:57,885 TRACE  [main] BasicExtractor: extracted value ([i4_0_1_] : [INTEGER]) - [0]
2020-11-25 21:27:57,885 TRACE  [main] BasicExtractor: extracted value ([is_condi5_0_1_] : [BOOLEAN]) - [true]
2020-11-25 21:27:57,885 TRACE  [main] BasicExtractor: extracted value ([j6_0_1_] : [INTEGER]) - [5]
2020-11-25 21:27:57,885 TRACE  [main] BasicExtractor: extracted value ([problem_7_0_1_] : [BIGINT]) - [3]
2020-11-25 21:27:57,885 TRACE  [main] BasicExtractor: extracted value ([problem_7_0_0_] : [BIGINT]) - [3]
2020-11-25 21:27:57,885 TRACE  [main] BasicExtractor: extracted value ([id1_0_0_] : [BIGINT]) - [17]
2020-11-25 21:27:57,886 TRACE  [main] BasicBinder: binding parameter [1] as [BIGINT] - [3]
2020-11-25 21:27:57,887 TRACE  [main] BasicBinder: binding parameter [1] as [BIGINT] - [2]
2020-11-25 21:27:57,887 TRACE  [main] BasicExtractor: extracted value ([id1_0_1_] : [BIGINT]) - [6]
2020-11-25 21:27:57,887 TRACE  [main] BasicExtractor: extracted value ([binary_v2_0_1_] : [BLOB]) - [null]
2020-11-25 21:27:57,887 TRACE  [main] BasicExtractor: extracted value ([float_va3_0_1_] : [DOUBLE]) - [1.01]
2020-11-25 21:27:57,888 TRACE  [main] BasicExtractor: extracted value ([i4_0_1_] : [INTEGER]) - [0]
2020-11-25 21:27:57,888 TRACE  [main] BasicExtractor: extracted value ([is_condi5_0_1_] : [BOOLEAN]) - [true]
2020-11-25 21:27:57,888 TRACE  [main] BasicExtractor: extracted value ([j6_0_1_] : [INTEGER]) - [0]
2020-11-25 21:27:57,888 TRACE  [main] BasicExtractor: extracted value ([problem_7_0_1_] : [BIGINT]) - [2]
2020-11-25 21:27:57,888 TRACE  [main] BasicExtractor: extracted value ([problem_7_0_0_] : [BIGINT]) - [2]
2020-11-25 21:27:57,888 TRACE  [main] BasicExtractor: extracted value ([id1_0_0_] : [BIGINT]) - [6]
2020-11-25 21:27:57,889 TRACE  [main] BasicExtractor: extracted value ([id1_0_1_] : [BIGINT]) - [7]
2020-11-25 21:27:57,889 TRACE  [main] BasicExtractor: extracted value ([binary_v2_0_1_] : [BLOB]) - [null]
2020-11-25 21:27:57,889 TRACE  [main] BasicExtractor: extracted value ([float_va3_0_1_] : [DOUBLE]) - [2.718281828459045]
2020-11-25 21:27:57,889 TRACE  [main] BasicExtractor: extracted value ([i4_0_1_] : [INTEGER]) - [0]
2020-11-25 21:27:57,889 TRACE  [main] BasicExtractor: extracted value ([is_condi5_0_1_] : [BOOLEAN]) - [true]
2020-11-25 21:27:57,889 TRACE  [main] BasicExtractor: extracted value ([j6_0_1_] : [INTEGER]) - [1]
2020-11-25 21:27:57,889 TRACE  [main] BasicExtractor: extracted value ([problem_7_0_1_] : [BIGINT]) - [2]
2020-11-25 21:27:57,889 TRACE  [main] BasicExtractor: extracted value ([problem_7_0_0_] : [BIGINT]) - [2]
2020-11-25 21:27:57,889 TRACE  [main] BasicExtractor: extracted value ([id1_0_0_] : [BIGINT]) - [7]
2020-11-25 21:27:57,889 TRACE  [main] BasicExtractor: extracted value ([id1_0_1_] : [BIGINT]) - [8]
2020-11-25 21:27:57,890 TRACE  [main] BasicExtractor: extracted value ([binary_v2_0_1_] : [BLOB]) - [null]
2020-11-25 21:27:57,890 TRACE  [main] BasicExtractor: extracted value ([float_va3_0_1_] : [DOUBLE]) - [7.38905609893065]
2020-11-25 21:27:57,890 TRACE  [main] BasicExtractor: extracted value ([i4_0_1_] : [INTEGER]) - [0]
2020-11-25 21:27:57,890 TRACE  [main] BasicExtractor: extracted value ([is_condi5_0_1_] : [BOOLEAN]) - [true]
2020-11-25 21:27:57,890 TRACE  [main] BasicExtractor: extracted value ([j6_0_1_] : [INTEGER]) - [2]
2020-11-25 21:27:57,890 TRACE  [main] BasicExtractor: extracted value ([problem_7_0_1_] : [BIGINT]) - [2]
2020-11-25 21:27:57,890 TRACE  [main] BasicExtractor: extracted value ([problem_7_0_0_] : [BIGINT]) - [2]
2020-11-25 21:27:57,890 TRACE  [main] BasicExtractor: extracted value ([id1_0_0_] : [BIGINT]) - [8]
2020-11-25 21:27:57,891 TRACE  [main] BasicExtractor: extracted value ([id1_0_1_] : [BIGINT]) - [9]
2020-11-25 21:27:57,891 TRACE  [main] BasicExtractor: extracted value ([binary_v2_0_1_] : [BLOB]) - [null]
2020-11-25 21:27:57,891 TRACE  [main] BasicExtractor: extracted value ([float_va3_0_1_] : [DOUBLE]) - [20.085536923187668]
2020-11-25 21:27:57,891 TRACE  [main] BasicExtractor: extracted value ([i4_0_1_] : [INTEGER]) - [0]
2020-11-25 21:27:57,891 TRACE  [main] BasicExtractor: extracted value ([is_condi5_0_1_] : [BOOLEAN]) - [true]
2020-11-25 21:27:57,891 TRACE  [main] BasicExtractor: extracted value ([j6_0_1_] : [INTEGER]) - [3]
2020-11-25 21:27:57,891 TRACE  [main] BasicExtractor: extracted value ([problem_7_0_1_] : [BIGINT]) - [2]
2020-11-25 21:27:57,891 TRACE  [main] BasicExtractor: extracted value ([problem_7_0_0_] : [BIGINT]) - [2]
2020-11-25 21:27:57,891 TRACE  [main] BasicExtractor: extracted value ([id1_0_0_] : [BIGINT]) - [9]
2020-11-25 21:27:57,891 TRACE  [main] BasicExtractor: extracted value ([id1_0_1_] : [BIGINT]) - [10]
2020-11-25 21:27:57,891 TRACE  [main] BasicExtractor: extracted value ([binary_v2_0_1_] : [BLOB]) - [null]
2020-11-25 21:27:57,892 TRACE  [main] BasicExtractor: extracted value ([float_va3_0_1_] : [DOUBLE]) - [54.598150033144236]
2020-11-25 21:27:57,892 TRACE  [main] BasicExtractor: extracted value ([i4_0_1_] : [INTEGER]) - [0]
2020-11-25 21:27:57,892 TRACE  [main] BasicExtractor: extracted value ([is_condi5_0_1_] : [BOOLEAN]) - [true]
2020-11-25 21:27:57,892 TRACE  [main] BasicExtractor: extracted value ([j6_0_1_] : [INTEGER]) - [4]
2020-11-25 21:27:57,892 TRACE  [main] BasicExtractor: extracted value ([problem_7_0_1_] : [BIGINT]) - [2]
2020-11-25 21:27:57,892 TRACE  [main] BasicExtractor: extracted value ([problem_7_0_0_] : [BIGINT]) - [2]
2020-11-25 21:27:57,892 TRACE  [main] BasicExtractor: extracted value ([id1_0_0_] : [BIGINT]) - [10]
2020-11-25 21:27:57,892 TRACE  [main] BasicExtractor: extracted value ([id1_0_1_] : [BIGINT]) - [11]
2020-11-25 21:27:57,893 TRACE  [main] BasicExtractor: extracted value ([binary_v2_0_1_] : [BLOB]) - [null]
2020-11-25 21:27:57,893 TRACE  [main] BasicExtractor: extracted value ([float_va3_0_1_] : [DOUBLE]) - [148.4131591025766]
2020-11-25 21:27:57,893 TRACE  [main] BasicExtractor: extracted value ([i4_0_1_] : [INTEGER]) - [0]
2020-11-25 21:27:57,893 TRACE  [main] BasicExtractor: extracted value ([is_condi5_0_1_] : [BOOLEAN]) - [true]
2020-11-25 21:27:57,893 TRACE  [main] BasicExtractor: extracted value ([j6_0_1_] : [INTEGER]) - [5]
2020-11-25 21:27:57,893 TRACE  [main] BasicExtractor: extracted value ([problem_7_0_1_] : [BIGINT]) - [2]
2020-11-25 21:27:57,893 TRACE  [main] BasicExtractor: extracted value ([problem_7_0_0_] : [BIGINT]) - [2]
2020-11-25 21:27:57,893 TRACE  [main] BasicExtractor: extracted value ([id1_0_0_] : [BIGINT]) - [11]
2020-11-25 21:27:57,894 TRACE  [main] BasicBinder: binding parameter [1] as [BIGINT] - [2]
2020-11-25 21:27:57,895 TRACE  [main] BasicBinder: binding parameter [1] as [BIGINT] - [1]
2020-11-25 21:27:57,895 TRACE  [main] BasicExtractor: extracted value ([id1_0_1_] : [BIGINT]) - [1]
2020-11-25 21:27:57,896 TRACE  [main] BasicExtractor: extracted value ([binary_v2_0_1_] : [BLOB]) - [null]
2020-11-25 21:27:57,896 TRACE  [main] BasicExtractor: extracted value ([float_va3_0_1_] : [DOUBLE]) - [1.0]
2020-11-25 21:27:57,896 TRACE  [main] BasicExtractor: extracted value ([i4_0_1_] : [INTEGER]) - [0]
2020-11-25 21:27:57,896 TRACE  [main] BasicExtractor: extracted value ([is_condi5_0_1_] : [BOOLEAN]) - [true]
2020-11-25 21:27:57,896 TRACE  [main] BasicExtractor: extracted value ([j6_0_1_] : [INTEGER]) - [0]
2020-11-25 21:27:57,896 TRACE  [main] BasicExtractor: extracted value ([problem_7_0_1_] : [BIGINT]) - [1]
2020-11-25 21:27:57,896 TRACE  [main] BasicExtractor: extracted value ([problem_7_0_0_] : [BIGINT]) - [1]
2020-11-25 21:27:57,896 TRACE  [main] BasicExtractor: extracted value ([id1_0_0_] : [BIGINT]) - [1]
2020-11-25 21:27:57,896 TRACE  [main] BasicExtractor: extracted value ([id1_0_1_] : [BIGINT]) - [2]
2020-11-25 21:27:57,896 TRACE  [main] BasicExtractor: extracted value ([binary_v2_0_1_] : [BLOB]) - [null]
2020-11-25 21:27:57,897 TRACE  [main] BasicExtractor: extracted value ([float_va3_0_1_] : [DOUBLE]) - [2.0]
2020-11-25 21:27:57,897 TRACE  [main] BasicExtractor: extracted value ([i4_0_1_] : [INTEGER]) - [0]
2020-11-25 21:27:57,897 TRACE  [main] BasicExtractor: extracted value ([is_condi5_0_1_] : [BOOLEAN]) - [true]
2020-11-25 21:27:57,897 TRACE  [main] BasicExtractor: extracted value ([j6_0_1_] : [INTEGER]) - [1]
2020-11-25 21:27:57,897 TRACE  [main] BasicExtractor: extracted value ([problem_7_0_1_] : [BIGINT]) - [1]
2020-11-25 21:27:57,897 TRACE  [main] BasicExtractor: extracted value ([problem_7_0_0_] : [BIGINT]) - [1]
2020-11-25 21:27:57,897 TRACE  [main] BasicExtractor: extracted value ([id1_0_0_] : [BIGINT]) - [2]
2020-11-25 21:27:57,897 TRACE  [main] BasicExtractor: extracted value ([id1_0_1_] : [BIGINT]) - [3]
2020-11-25 21:27:57,897 TRACE  [main] BasicExtractor: extracted value ([binary_v2_0_1_] : [BLOB]) - [null]
2020-11-25 21:27:57,898 TRACE  [main] BasicExtractor: extracted value ([float_va3_0_1_] : [DOUBLE]) - [1.0]
2020-11-25 21:27:57,898 TRACE  [main] BasicExtractor: extracted value ([i4_0_1_] : [INTEGER]) - [0]
2020-11-25 21:27:57,898 TRACE  [main] BasicExtractor: extracted value ([is_condi5_0_1_] : [BOOLEAN]) - [true]
2020-11-25 21:27:57,898 TRACE  [main] BasicExtractor: extracted value ([j6_0_1_] : [INTEGER]) - [2]
2020-11-25 21:27:57,898 TRACE  [main] BasicExtractor: extracted value ([problem_7_0_1_] : [BIGINT]) - [1]
2020-11-25 21:27:57,898 TRACE  [main] BasicExtractor: extracted value ([problem_7_0_0_] : [BIGINT]) - [1]
2020-11-25 21:27:57,898 TRACE  [main] BasicExtractor: extracted value ([id1_0_0_] : [BIGINT]) - [3]
2020-11-25 21:27:57,898 TRACE  [main] BasicExtractor: extracted value ([id1_0_1_] : [BIGINT]) - [4]
2020-11-25 21:27:57,898 TRACE  [main] BasicExtractor: extracted value ([binary_v2_0_1_] : [BLOB]) - [null]
2020-11-25 21:27:57,899 TRACE  [main] BasicExtractor: extracted value ([float_va3_0_1_] : [DOUBLE]) - [1.0]
2020-11-25 21:27:57,899 TRACE  [main] BasicExtractor: extracted value ([i4_0_1_] : [INTEGER]) - [0]
2020-11-25 21:27:57,899 TRACE  [main] BasicExtractor: extracted value ([is_condi5_0_1_] : [BOOLEAN]) - [false]
2020-11-25 21:27:57,899 TRACE  [main] BasicExtractor: extracted value ([j6_0_1_] : [INTEGER]) - [0]
2020-11-25 21:27:57,899 TRACE  [main] BasicExtractor: extracted value ([problem_7_0_1_] : [BIGINT]) - [1]
2020-11-25 21:27:57,899 TRACE  [main] BasicExtractor: extracted value ([problem_7_0_0_] : [BIGINT]) - [1]
2020-11-25 21:27:57,899 TRACE  [main] BasicExtractor: extracted value ([id1_0_0_] : [BIGINT]) - [4]
2020-11-25 21:27:57,899 TRACE  [main] BasicExtractor: extracted value ([id1_0_1_] : [BIGINT]) - [5]
2020-11-25 21:27:57,899 TRACE  [main] BasicExtractor: extracted value ([binary_v2_0_1_] : [BLOB]) - [null]
2020-11-25 21:27:57,899 TRACE  [main] BasicExtractor: extracted value ([float_va3_0_1_] : [DOUBLE]) - [1.0]
2020-11-25 21:27:57,900 TRACE  [main] BasicExtractor: extracted value ([i4_0_1_] : [INTEGER]) - [0]
2020-11-25 21:27:57,903 TRACE  [main] BasicExtractor: extracted value ([is_condi5_0_1_] : [BOOLEAN]) - [false]
2020-11-25 21:27:57,903 TRACE  [main] BasicExtractor: extracted value ([j6_0_1_] : [INTEGER]) - [1]
2020-11-25 21:27:57,904 TRACE  [main] BasicExtractor: extracted value ([problem_7_0_1_] : [BIGINT]) - [1]
2020-11-25 21:27:57,904 TRACE  [main] BasicExtractor: extracted value ([problem_7_0_0_] : [BIGINT]) - [1]
2020-11-25 21:27:57,904 TRACE  [main] BasicExtractor: extracted value ([id1_0_0_] : [BIGINT]) - [5]
2020-11-25 21:27:57,905 TRACE  [main] BasicBinder: binding parameter [1] as [BIGINT] - [1]
2020-11-25 21:27:57,927 TRACE  [main] BasicBinder: binding parameter [1] as [BIGINT] - [7]
2020-11-25 21:27:57,928 TRACE  [main] BasicExtractor: extracted value ([id1_1_2_] : [BIGINT]) - [null]
2020-11-25 21:27:57,928 TRACE  [main] BasicExtractor: extracted value ([id1_0_4_] : [BIGINT]) - [null]
2020-11-25 21:27:57,928 TRACE  [main] BasicExtractor: extracted value ([descript2_1_0_] : [BLOB]) - [[112, 114, 111, 98, 108, 101, 109, 100, 101, 115, 99, 114, 105, 112, 116, 105, 111, 110]]
2020-11-25 21:27:57,929 TRACE  [main] BasicExtractor: extracted value ([is_solve3_1_0_] : [BOOLEAN]) - [true]
2020-11-25 21:27:57,929 TRACE  [main] BasicExtractor: extracted value ([kind4_1_0_] : [VARCHAR]) - [POLYNOMIAL]
2020-11-25 21:27:57,929 TRACE  [main] BasicExtractor: extracted value ([matrix_d5_1_0_] : [INTEGER]) - [1]
2020-11-25 21:27:57,929 TRACE  [main] BasicExtractor: extracted value ([parent_p7_1_0_] : [BIGINT]) - [null]
2020-11-25 21:27:57,929 TRACE  [main] BasicExtractor: extracted value ([problem_6_1_0_] : [INTEGER]) - [0]
2020-11-25 21:27:57,929 TRACE  [main] BasicExtractor: extracted value ([problem_7_0_3_] : [BIGINT]) - [null]
2020-11-25 21:27:57,929 TRACE  [main] BasicExtractor: extracted value ([parent_p7_1_1_] : [BIGINT]) - [null]
2020-11-25 21:27:57,930 TRACE  [main] CollectionType: Created collection wrapper: [com.sf.back.entities.Problem.matrixes#7]
2020-11-25 21:27:57,931 TRACE  [main] BasicBinder: binding parameter [1] as [BIGINT] - [7]
2020-11-25 21:27:57,931 TRACE  [main] BasicExtractor: extracted value ([id1_0_1_] : [BIGINT]) - [40]
2020-11-25 21:27:57,931 TRACE  [main] BasicExtractor: extracted value ([binary_v2_0_1_] : [BLOB]) - [null]
2020-11-25 21:27:57,931 TRACE  [main] BasicExtractor: extracted value ([float_va3_0_1_] : [DOUBLE]) - [1.0]
2020-11-25 21:27:57,931 TRACE  [main] BasicExtractor: extracted value ([i4_0_1_] : [INTEGER]) - [0]
2020-11-25 21:27:57,932 TRACE  [main] BasicExtractor: extracted value ([is_condi5_0_1_] : [BOOLEAN]) - [true]
2020-11-25 21:27:57,932 TRACE  [main] BasicExtractor: extracted value ([j6_0_1_] : [INTEGER]) - [0]
2020-11-25 21:27:57,932 TRACE  [main] BasicExtractor: extracted value ([problem_7_0_1_] : [BIGINT]) - [7]
2020-11-25 21:27:57,932 TRACE  [main] BasicExtractor: extracted value ([problem_7_0_0_] : [BIGINT]) - [7]
2020-11-25 21:27:57,932 TRACE  [main] BasicExtractor: extracted value ([id1_0_0_] : [BIGINT]) - [40]
2020-11-25 21:27:57,932 TRACE  [main] BasicExtractor: extracted value ([id1_0_1_] : [BIGINT]) - [41]
2020-11-25 21:27:57,933 TRACE  [main] BasicExtractor: extracted value ([binary_v2_0_1_] : [BLOB]) - [null]
2020-11-25 21:27:57,933 TRACE  [main] BasicExtractor: extracted value ([float_va3_0_1_] : [DOUBLE]) - [-3.0]
2020-11-25 21:27:57,933 TRACE  [main] BasicExtractor: extracted value ([i4_0_1_] : [INTEGER]) - [0]
2020-11-25 21:27:57,933 TRACE  [main] BasicExtractor: extracted value ([is_condi5_0_1_] : [BOOLEAN]) - [true]
2020-11-25 21:27:57,933 TRACE  [main] BasicExtractor: extracted value ([j6_0_1_] : [INTEGER]) - [1]
2020-11-25 21:27:57,933 TRACE  [main] BasicExtractor: extracted value ([problem_7_0_1_] : [BIGINT]) - [7]
2020-11-25 21:27:57,934 TRACE  [main] BasicExtractor: extracted value ([problem_7_0_0_] : [BIGINT]) - [7]
2020-11-25 21:27:57,934 TRACE  [main] BasicExtractor: extracted value ([id1_0_0_] : [BIGINT]) - [41]
2020-11-25 21:27:57,934 TRACE  [main] BasicExtractor: extracted value ([id1_0_1_] : [BIGINT]) - [42]
2020-11-25 21:27:57,934 TRACE  [main] BasicExtractor: extracted value ([binary_v2_0_1_] : [BLOB]) - [null]
2020-11-25 21:27:57,935 TRACE  [main] BasicExtractor: extracted value ([float_va3_0_1_] : [DOUBLE]) - [2.0]
2020-11-25 21:27:57,935 TRACE  [main] BasicExtractor: extracted value ([i4_0_1_] : [INTEGER]) - [0]
2020-11-25 21:27:57,935 TRACE  [main] BasicExtractor: extracted value ([is_condi5_0_1_] : [BOOLEAN]) - [true]
2020-11-25 21:27:57,935 TRACE  [main] BasicExtractor: extracted value ([j6_0_1_] : [INTEGER]) - [2]
2020-11-25 21:27:57,935 TRACE  [main] BasicExtractor: extracted value ([problem_7_0_1_] : [BIGINT]) - [7]
2020-11-25 21:27:57,935 TRACE  [main] BasicExtractor: extracted value ([problem_7_0_0_] : [BIGINT]) - [7]
2020-11-25 21:27:57,935 TRACE  [main] BasicExtractor: extracted value ([id1_0_0_] : [BIGINT]) - [42]
2020-11-25 21:27:57,936 TRACE  [main] BasicExtractor: extracted value ([id1_0_1_] : [BIGINT]) - [43]
2020-11-25 21:27:57,936 TRACE  [main] BasicExtractor: extracted value ([binary_v2_0_1_] : [BLOB]) - [null]
2020-11-25 21:27:57,936 TRACE  [main] BasicExtractor: extracted value ([float_va3_0_1_] : [DOUBLE]) - [1.0]
2020-11-25 21:27:57,936 TRACE  [main] BasicExtractor: extracted value ([i4_0_1_] : [INTEGER]) - [0]
2020-11-25 21:27:57,936 TRACE  [main] BasicExtractor: extracted value ([is_condi5_0_1_] : [BOOLEAN]) - [false]
2020-11-25 21:27:57,936 TRACE  [main] BasicExtractor: extracted value ([j6_0_1_] : [INTEGER]) - [0]
2020-11-25 21:27:57,936 TRACE  [main] BasicExtractor: extracted value ([problem_7_0_1_] : [BIGINT]) - [7]
2020-11-25 21:27:57,936 TRACE  [main] BasicExtractor: extracted value ([problem_7_0_0_] : [BIGINT]) - [7]
2020-11-25 21:27:57,936 TRACE  [main] BasicExtractor: extracted value ([id1_0_0_] : [BIGINT]) - [43]
2020-11-25 21:27:57,937 TRACE  [main] BasicExtractor: extracted value ([id1_0_1_] : [BIGINT]) - [44]
2020-11-25 21:27:57,937 TRACE  [main] BasicExtractor: extracted value ([binary_v2_0_1_] : [BLOB]) - [null]
2020-11-25 21:27:57,937 TRACE  [main] BasicExtractor: extracted value ([float_va3_0_1_] : [DOUBLE]) - [2.0]
2020-11-25 21:27:57,937 TRACE  [main] BasicExtractor: extracted value ([i4_0_1_] : [INTEGER]) - [0]
2020-11-25 21:27:57,937 TRACE  [main] BasicExtractor: extracted value ([is_condi5_0_1_] : [BOOLEAN]) - [false]
2020-11-25 21:27:57,937 TRACE  [main] BasicExtractor: extracted value ([j6_0_1_] : [INTEGER]) - [1]
2020-11-25 21:27:57,937 TRACE  [main] BasicExtractor: extracted value ([problem_7_0_1_] : [BIGINT]) - [7]
2020-11-25 21:27:57,937 TRACE  [main] BasicExtractor: extracted value ([problem_7_0_0_] : [BIGINT]) - [7]
2020-11-25 21:27:57,938 TRACE  [main] BasicExtractor: extracted value ([id1_0_0_] : [BIGINT]) - [44]
2020-11-25 21:27:58,029 TRACE  [main] BasicBinder: binding parameter [1] as [BOOLEAN] - [false]
2020-11-25 21:27:58,030 TRACE  [main] BasicBinder: binding parameter [2] as [BIGINT] - [7]
2020-11-25 21:27:58,030 TRACE  [main] BasicExtractor: extracted value ([id1_0_] : [BIGINT]) - [43]
2020-11-25 21:27:58,030 TRACE  [main] BasicExtractor: extracted value ([binary_v2_0_] : [BLOB]) - [null]
2020-11-25 21:27:58,030 TRACE  [main] BasicExtractor: extracted value ([float_va3_0_] : [DOUBLE]) - [1.0]
2020-11-25 21:27:58,031 TRACE  [main] BasicExtractor: extracted value ([i4_0_] : [INTEGER]) - [0]
2020-11-25 21:27:58,031 TRACE  [main] BasicExtractor: extracted value ([is_condi5_0_] : [BOOLEAN]) - [false]
2020-11-25 21:27:58,031 TRACE  [main] BasicExtractor: extracted value ([j6_0_] : [INTEGER]) - [0]
2020-11-25 21:27:58,032 TRACE  [main] BasicExtractor: extracted value ([problem_7_0_] : [BIGINT]) - [7]
2020-11-25 21:27:58,032 TRACE  [main] BasicExtractor: extracted value ([id1_0_] : [BIGINT]) - [44]
2020-11-25 21:27:58,032 TRACE  [main] BasicExtractor: extracted value ([binary_v2_0_] : [BLOB]) - [null]
2020-11-25 21:27:58,032 TRACE  [main] BasicExtractor: extracted value ([float_va3_0_] : [DOUBLE]) - [2.0]
2020-11-25 21:27:58,032 TRACE  [main] BasicExtractor: extracted value ([i4_0_] : [INTEGER]) - [0]
2020-11-25 21:27:58,033 TRACE  [main] BasicExtractor: extracted value ([is_condi5_0_] : [BOOLEAN]) - [false]
2020-11-25 21:27:58,033 TRACE  [main] BasicExtractor: extracted value ([j6_0_] : [INTEGER]) - [1]
2020-11-25 21:27:58,033 TRACE  [main] BasicExtractor: extracted value ([problem_7_0_] : [BIGINT]) - [7]
2020-11-25 21:27:58,033 TRACE  [main] BasicBinder: binding parameter [1] as [BIGINT] - [7]
2020-11-25 21:27:58,034 TRACE  [main] BasicExtractor: extracted value ([id1_1_2_] : [BIGINT]) - [null]
2020-11-25 21:27:58,034 TRACE  [main] BasicExtractor: extracted value ([id1_0_4_] : [BIGINT]) - [null]
2020-11-25 21:27:58,034 TRACE  [main] BasicExtractor: extracted value ([descript2_1_0_] : [BLOB]) - [[112, 114, 111, 98, 108, 101, 109, 100, 101, 115, 99, 114, 105, 112, 116, 105, 111, 110]]
2020-11-25 21:27:58,034 TRACE  [main] BasicExtractor: extracted value ([is_solve3_1_0_] : [BOOLEAN]) - [true]
2020-11-25 21:27:58,035 TRACE  [main] BasicExtractor: extracted value ([kind4_1_0_] : [VARCHAR]) - [POLYNOMIAL]
2020-11-25 21:27:58,035 TRACE  [main] BasicExtractor: extracted value ([matrix_d5_1_0_] : [INTEGER]) - [1]
2020-11-25 21:27:58,035 TRACE  [main] BasicExtractor: extracted value ([parent_p7_1_0_] : [BIGINT]) - [null]
2020-11-25 21:27:58,039 TRACE  [main] BasicExtractor: extracted value ([problem_6_1_0_] : [INTEGER]) - [0]
2020-11-25 21:27:58,040 TRACE  [main] BasicExtractor: extracted value ([problem_7_0_3_] : [BIGINT]) - [null]
2020-11-25 21:27:58,040 TRACE  [main] BasicExtractor: extracted value ([parent_p7_1_1_] : [BIGINT]) - [null]
2020-11-25 21:27:58,040 TRACE  [main] CollectionType: Created collection wrapper: [com.sf.back.entities.Problem.matrixes#7]
2020-11-25 21:27:58,041 TRACE  [main] BasicBinder: binding parameter [1] as [BIGINT] - [7]
2020-11-25 21:27:58,042 TRACE  [main] BasicExtractor: extracted value ([id1_0_1_] : [BIGINT]) - [40]
2020-11-25 21:27:58,042 TRACE  [main] BasicExtractor: extracted value ([binary_v2_0_1_] : [BLOB]) - [null]
2020-11-25 21:27:58,042 TRACE  [main] BasicExtractor: extracted value ([float_va3_0_1_] : [DOUBLE]) - [1.0]
2020-11-25 21:27:58,042 TRACE  [main] BasicExtractor: extracted value ([i4_0_1_] : [INTEGER]) - [0]
2020-11-25 21:27:58,042 TRACE  [main] BasicExtractor: extracted value ([is_condi5_0_1_] : [BOOLEAN]) - [true]
2020-11-25 21:27:58,042 TRACE  [main] BasicExtractor: extracted value ([j6_0_1_] : [INTEGER]) - [0]
2020-11-25 21:27:58,042 TRACE  [main] BasicExtractor: extracted value ([problem_7_0_1_] : [BIGINT]) - [7]
2020-11-25 21:27:58,042 TRACE  [main] BasicExtractor: extracted value ([problem_7_0_0_] : [BIGINT]) - [7]
2020-11-25 21:27:58,042 TRACE  [main] BasicExtractor: extracted value ([id1_0_0_] : [BIGINT]) - [40]
2020-11-25 21:27:58,042 TRACE  [main] BasicExtractor: extracted value ([id1_0_1_] : [BIGINT]) - [41]
2020-11-25 21:27:58,042 TRACE  [main] BasicExtractor: extracted value ([binary_v2_0_1_] : [BLOB]) - [null]
2020-11-25 21:27:58,043 TRACE  [main] BasicExtractor: extracted value ([float_va3_0_1_] : [DOUBLE]) - [-3.0]
2020-11-25 21:27:58,043 TRACE  [main] BasicExtractor: extracted value ([i4_0_1_] : [INTEGER]) - [0]
2020-11-25 21:27:58,043 TRACE  [main] BasicExtractor: extracted value ([is_condi5_0_1_] : [BOOLEAN]) - [true]
2020-11-25 21:27:58,043 TRACE  [main] BasicExtractor: extracted value ([j6_0_1_] : [INTEGER]) - [1]
2020-11-25 21:27:58,043 TRACE  [main] BasicExtractor: extracted value ([problem_7_0_1_] : [BIGINT]) - [7]
2020-11-25 21:27:58,043 TRACE  [main] BasicExtractor: extracted value ([problem_7_0_0_] : [BIGINT]) - [7]
2020-11-25 21:27:58,043 TRACE  [main] BasicExtractor: extracted value ([id1_0_0_] : [BIGINT]) - [41]
2020-11-25 21:27:58,044 TRACE  [main] BasicExtractor: extracted value ([id1_0_1_] : [BIGINT]) - [42]
2020-11-25 21:27:58,044 TRACE  [main] BasicExtractor: extracted value ([binary_v2_0_1_] : [BLOB]) - [null]
2020-11-25 21:27:58,044 TRACE  [main] BasicExtractor: extracted value ([float_va3_0_1_] : [DOUBLE]) - [2.0]
2020-11-25 21:27:58,044 TRACE  [main] BasicExtractor: extracted value ([i4_0_1_] : [INTEGER]) - [0]
2020-11-25 21:27:58,044 TRACE  [main] BasicExtractor: extracted value ([is_condi5_0_1_] : [BOOLEAN]) - [true]
2020-11-25 21:27:58,044 TRACE  [main] BasicExtractor: extracted value ([j6_0_1_] : [INTEGER]) - [2]
2020-11-25 21:27:58,044 TRACE  [main] BasicExtractor: extracted value ([problem_7_0_1_] : [BIGINT]) - [7]
2020-11-25 21:27:58,045 TRACE  [main] BasicExtractor: extracted value ([problem_7_0_0_] : [BIGINT]) - [7]
2020-11-25 21:27:58,045 TRACE  [main] BasicExtractor: extracted value ([id1_0_0_] : [BIGINT]) - [42]
2020-11-25 21:27:58,046 TRACE  [main] BasicExtractor: extracted value ([id1_0_1_] : [BIGINT]) - [43]
2020-11-25 21:27:58,046 TRACE  [main] BasicExtractor: extracted value ([problem_7_0_0_] : [BIGINT]) - [7]
2020-11-25 21:27:58,046 TRACE  [main] BasicExtractor: extracted value ([id1_0_0_] : [BIGINT]) - [43]
2020-11-25 21:27:58,047 TRACE  [main] BasicExtractor: extracted value ([id1_0_1_] : [BIGINT]) - [44]
2020-11-25 21:27:58,047 TRACE  [main] BasicExtractor: extracted value ([problem_7_0_0_] : [BIGINT]) - [7]
2020-11-25 21:27:58,047 TRACE  [main] BasicExtractor: extracted value ([id1_0_0_] : [BIGINT]) - [44]
2020-11-25 21:27:58,064 TRACE  [main] BasicBinder: binding parameter [1] as [BIGINT] - [8]
2020-11-25 21:27:58,066 TRACE  [main] BasicExtractor: extracted value ([id1_1_2_] : [BIGINT]) - [null]
2020-11-25 21:27:58,067 TRACE  [main] BasicExtractor: extracted value ([id1_0_4_] : [BIGINT]) - [null]
2020-11-25 21:27:58,067 TRACE  [main] BasicExtractor: extracted value ([descript2_1_0_] : [BLOB]) - [[112, 114, 111, 98, 108, 101, 109, 100, 101, 115, 99, 114, 105, 112, 116, 105, 111, 110]]
2020-11-25 21:27:58,067 TRACE  [main] BasicExtractor: extracted value ([is_solve3_1_0_] : [BOOLEAN]) - [null]
2020-11-25 21:27:58,067 TRACE  [main] BasicExtractor: extracted value ([kind4_1_0_] : [VARCHAR]) - [POLYNOMIAL]
2020-11-25 21:27:58,067 TRACE  [main] BasicExtractor: extracted value ([matrix_d5_1_0_] : [INTEGER]) - [1]
2020-11-25 21:27:58,067 TRACE  [main] BasicExtractor: extracted value ([parent_p7_1_0_] : [BIGINT]) - [null]
2020-11-25 21:27:58,068 TRACE  [main] BasicExtractor: extracted value ([problem_6_1_0_] : [INTEGER]) - [22]
2020-11-25 21:27:58,068 TRACE  [main] BasicExtractor: extracted value ([problem_7_0_3_] : [BIGINT]) - [null]
2020-11-25 21:27:58,068 TRACE  [main] BasicExtractor: extracted value ([parent_p7_1_1_] : [BIGINT]) - [null]
2020-11-25 21:27:58,068 TRACE  [main] CollectionType: Created collection wrapper: [com.sf.back.entities.Problem.matrixes#8]
2020-11-25 21:27:58,069 TRACE  [main] BasicBinder: binding parameter [1] as [BIGINT] - [8]
2020-11-25 21:27:58,070 TRACE  [main] BasicExtractor: extracted value ([id1_0_1_] : [BIGINT]) - [45]
2020-11-25 21:27:58,070 TRACE  [main] BasicExtractor: extracted value ([binary_v2_0_1_] : [BLOB]) - [null]
2020-11-25 21:27:58,070 TRACE  [main] BasicExtractor: extracted value ([float_va3_0_1_] : [DOUBLE]) - [1.0]
2020-11-25 21:27:58,070 TRACE  [main] BasicExtractor: extracted value ([i4_0_1_] : [INTEGER]) - [0]
2020-11-25 21:27:58,070 TRACE  [main] BasicExtractor: extracted value ([is_condi5_0_1_] : [BOOLEAN]) - [true]
2020-11-25 21:27:58,071 TRACE  [main] BasicExtractor: extracted value ([j6_0_1_] : [INTEGER]) - [0]
2020-11-25 21:27:58,071 TRACE  [main] BasicExtractor: extracted value ([problem_7_0_1_] : [BIGINT]) - [8]
2020-11-25 21:27:58,071 TRACE  [main] BasicExtractor: extracted value ([problem_7_0_0_] : [BIGINT]) - [8]
2020-11-25 21:27:58,071 TRACE  [main] BasicExtractor: extracted value ([id1_0_0_] : [BIGINT]) - [45]
2020-11-25 21:27:58,072 TRACE  [main] BasicExtractor: extracted value ([id1_0_1_] : [BIGINT]) - [46]
2020-11-25 21:27:58,072 TRACE  [main] BasicExtractor: extracted value ([binary_v2_0_1_] : [BLOB]) - [null]
2020-11-25 21:27:58,073 TRACE  [main] BasicExtractor: extracted value ([float_va3_0_1_] : [DOUBLE]) - [2.718281828459045]
2020-11-25 21:27:58,073 TRACE  [main] BasicExtractor: extracted value ([i4_0_1_] : [INTEGER]) - [0]
2020-11-25 21:27:58,073 TRACE  [main] BasicExtractor: extracted value ([is_condi5_0_1_] : [BOOLEAN]) - [true]
2020-11-25 21:27:58,074 TRACE  [main] BasicExtractor: extracted value ([j6_0_1_] : [INTEGER]) - [1]
2020-11-25 21:27:58,074 TRACE  [main] BasicExtractor: extracted value ([problem_7_0_1_] : [BIGINT]) - [8]
2020-11-25 21:27:58,074 TRACE  [main] BasicExtractor: extracted value ([problem_7_0_0_] : [BIGINT]) - [8]
2020-11-25 21:27:58,075 TRACE  [main] BasicExtractor: extracted value ([id1_0_0_] : [BIGINT]) - [46]
2020-11-25 21:27:58,075 TRACE  [main] BasicExtractor: extracted value ([id1_0_1_] : [BIGINT]) - [47]
2020-11-25 21:27:58,076 TRACE  [main] BasicExtractor: extracted value ([binary_v2_0_1_] : [BLOB]) - [null]
2020-11-25 21:27:58,076 TRACE  [main] BasicExtractor: extracted value ([float_va3_0_1_] : [DOUBLE]) - [7.38905609893065]
2020-11-25 21:27:58,077 TRACE  [main] BasicExtractor: extracted value ([i4_0_1_] : [INTEGER]) - [0]
2020-11-25 21:27:58,077 TRACE  [main] BasicExtractor: extracted value ([is_condi5_0_1_] : [BOOLEAN]) - [true]
2020-11-25 21:27:58,077 TRACE  [main] BasicExtractor: extracted value ([j6_0_1_] : [INTEGER]) - [2]
2020-11-25 21:27:58,078 TRACE  [main] BasicExtractor: extracted value ([problem_7_0_1_] : [BIGINT]) - [8]
2020-11-25 21:27:58,078 TRACE  [main] BasicExtractor: extracted value ([problem_7_0_0_] : [BIGINT]) - [8]
2020-11-25 21:27:58,079 TRACE  [main] BasicExtractor: extracted value ([id1_0_0_] : [BIGINT]) - [47]
2020-11-25 21:27:58,079 TRACE  [main] BasicExtractor: extracted value ([id1_0_1_] : [BIGINT]) - [48]
2020-11-25 21:27:58,080 TRACE  [main] BasicExtractor: extracted value ([binary_v2_0_1_] : [BLOB]) - [null]
2020-11-25 21:27:58,080 TRACE  [main] BasicExtractor: extracted value ([float_va3_0_1_] : [DOUBLE]) - [20.085536923187668]
2020-11-25 21:27:58,081 TRACE  [main] BasicExtractor: extracted value ([i4_0_1_] : [INTEGER]) - [0]
2020-11-25 21:27:58,081 TRACE  [main] BasicExtractor: extracted value ([is_condi5_0_1_] : [BOOLEAN]) - [true]
2020-11-25 21:27:58,081 TRACE  [main] BasicExtractor: extracted value ([j6_0_1_] : [INTEGER]) - [3]
2020-11-25 21:27:58,081 TRACE  [main] BasicExtractor: extracted value ([problem_7_0_1_] : [BIGINT]) - [8]
2020-11-25 21:27:58,082 TRACE  [main] BasicExtractor: extracted value ([problem_7_0_0_] : [BIGINT]) - [8]
2020-11-25 21:27:58,082 TRACE  [main] BasicExtractor: extracted value ([id1_0_0_] : [BIGINT]) - [48]
2020-11-25 21:27:58,082 TRACE  [main] BasicExtractor: extracted value ([id1_0_1_] : [BIGINT]) - [49]
2020-11-25 21:27:58,082 TRACE  [main] BasicExtractor: extracted value ([binary_v2_0_1_] : [BLOB]) - [null]
2020-11-25 21:27:58,083 TRACE  [main] BasicExtractor: extracted value ([float_va3_0_1_] : [DOUBLE]) - [54.598150033144236]
2020-11-25 21:27:58,083 TRACE  [main] BasicExtractor: extracted value ([i4_0_1_] : [INTEGER]) - [0]
2020-11-25 21:27:58,083 TRACE  [main] BasicExtractor: extracted value ([is_condi5_0_1_] : [BOOLEAN]) - [true]
2020-11-25 21:27:58,083 TRACE  [main] BasicExtractor: extracted value ([j6_0_1_] : [INTEGER]) - [4]
2020-11-25 21:27:58,083 TRACE  [main] BasicExtractor: extracted value ([problem_7_0_1_] : [BIGINT]) - [8]
2020-11-25 21:27:58,083 TRACE  [main] BasicExtractor: extracted value ([problem_7_0_0_] : [BIGINT]) - [8]
2020-11-25 21:27:58,083 TRACE  [main] BasicExtractor: extracted value ([id1_0_0_] : [BIGINT]) - [49]
2020-11-25 21:27:58,084 TRACE  [main] BasicExtractor: extracted value ([id1_0_1_] : [BIGINT]) - [50]
2020-11-25 21:27:58,084 TRACE  [main] BasicExtractor: extracted value ([binary_v2_0_1_] : [BLOB]) - [null]
2020-11-25 21:27:58,084 TRACE  [main] BasicExtractor: extracted value ([float_va3_0_1_] : [DOUBLE]) - [148.4131591025766]
2020-11-25 21:27:58,084 TRACE  [main] BasicExtractor: extracted value ([i4_0_1_] : [INTEGER]) - [0]
2020-11-25 21:27:58,084 TRACE  [main] BasicExtractor: extracted value ([is_condi5_0_1_] : [BOOLEAN]) - [true]
2020-11-25 21:27:58,084 TRACE  [main] BasicExtractor: extracted value ([j6_0_1_] : [INTEGER]) - [5]
2020-11-25 21:27:58,085 TRACE  [main] BasicExtractor: extracted value ([problem_7_0_1_] : [BIGINT]) - [8]
2020-11-25 21:27:58,085 TRACE  [main] BasicExtractor: extracted value ([problem_7_0_0_] : [BIGINT]) - [8]
2020-11-25 21:27:58,085 TRACE  [main] BasicExtractor: extracted value ([id1_0_0_] : [BIGINT]) - [50]
2020-11-25 21:27:58,102 TRACE  [main] BasicBinder: binding parameter [1] as [BLOB] - [[100, 101, 115, 99, 114, 105, 112, 116, 105, 111, 110]]
2020-11-25 21:27:58,102 TRACE  [main] BasicBinder: binding parameter [2] as [BOOLEAN] - [null]
2020-11-25 21:27:58,102 TRACE  [main] BasicBinder: binding parameter [3] as [VARCHAR] - [POLYNOMIAL]
2020-11-25 21:27:58,102 TRACE  [main] BasicBinder: binding parameter [4] as [INTEGER] - [null]
2020-11-25 21:27:58,102 TRACE  [main] BasicBinder: binding parameter [5] as [BIGINT] - [null]
2020-11-25 21:27:58,102 TRACE  [main] BasicBinder: binding parameter [6] as [INTEGER] - [24]
2020-11-25 21:27:58,105 TRACE  [main] BasicBinder: binding parameter [1] as [BLOB] - [null]
2020-11-25 21:27:58,105 TRACE  [main] BasicBinder: binding parameter [2] as [DOUBLE] - [1.0]
2020-11-25 21:27:58,105 TRACE  [main] BasicBinder: binding parameter [3] as [INTEGER] - [0]
2020-11-25 21:27:58,105 TRACE  [main] BasicBinder: binding parameter [4] as [BOOLEAN] - [true]
2020-11-25 21:27:58,105 TRACE  [main] BasicBinder: binding parameter [5] as [INTEGER] - [0]
2020-11-25 21:27:58,105 TRACE  [main] BasicBinder: binding parameter [6] as [BIGINT] - [10]
2020-11-25 21:27:58,107 TRACE  [main] BasicBinder: binding parameter [1] as [BLOB] - [null]
2020-11-25 21:27:58,107 TRACE  [main] BasicBinder: binding parameter [2] as [DOUBLE] - [2.0]
2020-11-25 21:27:58,107 TRACE  [main] BasicBinder: binding parameter [3] as [INTEGER] - [0]
2020-11-25 21:27:58,107 TRACE  [main] BasicBinder: binding parameter [4] as [BOOLEAN] - [true]
2020-11-25 21:27:58,107 TRACE  [main] BasicBinder: binding parameter [5] as [INTEGER] - [1]
2020-11-25 21:27:58,108 TRACE  [main] BasicBinder: binding parameter [6] as [BIGINT] - [10]
2020-11-25 21:27:58,109 TRACE  [main] BasicBinder: binding parameter [1] as [BLOB] - [null]
2020-11-25 21:27:58,109 TRACE  [main] BasicBinder: binding parameter [2] as [DOUBLE] - [3.0]
2020-11-25 21:27:58,109 TRACE  [main] BasicBinder: binding parameter [3] as [INTEGER] - [0]
2020-11-25 21:27:58,110 TRACE  [main] BasicBinder: binding parameter [4] as [BOOLEAN] - [true]
2020-11-25 21:27:58,110 TRACE  [main] BasicBinder: binding parameter [5] as [INTEGER] - [2]
2020-11-25 21:27:58,110 TRACE  [main] BasicBinder: binding parameter [6] as [BIGINT] - [10]
2020-11-25 21:27:58,111 TRACE  [main] BasicBinder: binding parameter [1] as [BLOB] - [null]
2020-11-25 21:27:58,111 TRACE  [main] BasicBinder: binding parameter [2] as [DOUBLE] - [4.0]
2020-11-25 21:27:58,111 TRACE  [main] BasicBinder: binding parameter [3] as [INTEGER] - [0]
2020-11-25 21:27:58,111 TRACE  [main] BasicBinder: binding parameter [4] as [BOOLEAN] - [true]
2020-11-25 21:27:58,111 TRACE  [main] BasicBinder: binding parameter [5] as [INTEGER] - [3]
2020-11-25 21:27:58,112 TRACE  [main] BasicBinder: binding parameter [6] as [BIGINT] - [10]
2020-11-25 21:27:58,136 TRACE  [main] BasicBinder: binding parameter [1] as [BIGINT] - [10]
2020-11-25 21:27:58,138 TRACE  [main] BasicExtractor: extracted value ([id1_1_2_] : [BIGINT]) - [null]
2020-11-25 21:27:58,138 TRACE  [main] BasicExtractor: extracted value ([id1_0_4_] : [BIGINT]) - [null]
2020-11-25 21:27:58,139 TRACE  [main] BasicExtractor: extracted value ([descript2_1_0_] : [BLOB]) - [[100, 101, 115, 99, 114, 105, 112, 116, 105, 111, 110]]
2020-11-25 21:27:58,139 TRACE  [main] BasicExtractor: extracted value ([is_solve3_1_0_] : [BOOLEAN]) - [null]
2020-11-25 21:27:58,140 TRACE  [main] BasicExtractor: extracted value ([kind4_1_0_] : [VARCHAR]) - [POLYNOMIAL]
2020-11-25 21:27:58,140 TRACE  [main] BasicExtractor: extracted value ([matrix_d5_1_0_] : [INTEGER]) - [null]
2020-11-25 21:27:58,140 TRACE  [main] BasicExtractor: extracted value ([parent_p7_1_0_] : [BIGINT]) - [null]
2020-11-25 21:27:58,140 TRACE  [main] BasicExtractor: extracted value ([problem_6_1_0_] : [INTEGER]) - [24]
2020-11-25 21:27:58,140 TRACE  [main] BasicExtractor: extracted value ([problem_7_0_3_] : [BIGINT]) - [null]
2020-11-25 21:27:58,140 TRACE  [main] BasicExtractor: extracted value ([parent_p7_1_1_] : [BIGINT]) - [null]
2020-11-25 21:27:58,140 TRACE  [main] CollectionType: Created collection wrapper: [com.sf.back.entities.Problem.matrixes#10]
2020-11-25 21:27:58,141 TRACE  [main] BasicBinder: binding parameter [1] as [BIGINT] - [10]
2020-11-25 21:27:58,142 TRACE  [main] BasicExtractor: extracted value ([id1_0_1_] : [BIGINT]) - [57]
2020-11-25 21:27:58,142 TRACE  [main] BasicExtractor: extracted value ([binary_v2_0_1_] : [BLOB]) - [null]
2020-11-25 21:27:58,142 TRACE  [main] BasicExtractor: extracted value ([float_va3_0_1_] : [DOUBLE]) - [1.0]
2020-11-25 21:27:58,142 TRACE  [main] BasicExtractor: extracted value ([i4_0_1_] : [INTEGER]) - [0]
2020-11-25 21:27:58,143 TRACE  [main] BasicExtractor: extracted value ([is_condi5_0_1_] : [BOOLEAN]) - [true]
2020-11-25 21:27:58,143 TRACE  [main] BasicExtractor: extracted value ([j6_0_1_] : [INTEGER]) - [0]
2020-11-25 21:27:58,143 TRACE  [main] BasicExtractor: extracted value ([problem_7_0_1_] : [BIGINT]) - [10]
2020-11-25 21:27:58,143 TRACE  [main] BasicExtractor: extracted value ([problem_7_0_0_] : [BIGINT]) - [10]
2020-11-25 21:27:58,143 TRACE  [main] BasicExtractor: extracted value ([id1_0_0_] : [BIGINT]) - [57]
2020-11-25 21:27:58,144 TRACE  [main] BasicExtractor: extracted value ([id1_0_1_] : [BIGINT]) - [58]
2020-11-25 21:27:58,144 TRACE  [main] BasicExtractor: extracted value ([binary_v2_0_1_] : [BLOB]) - [null]
2020-11-25 21:27:58,144 TRACE  [main] BasicExtractor: extracted value ([float_va3_0_1_] : [DOUBLE]) - [2.0]
2020-11-25 21:27:58,144 TRACE  [main] BasicExtractor: extracted value ([i4_0_1_] : [INTEGER]) - [0]
2020-11-25 21:27:58,144 TRACE  [main] BasicExtractor: extracted value ([is_condi5_0_1_] : [BOOLEAN]) - [true]
2020-11-25 21:27:58,144 TRACE  [main] BasicExtractor: extracted value ([j6_0_1_] : [INTEGER]) - [1]
2020-11-25 21:27:58,144 TRACE  [main] BasicExtractor: extracted value ([problem_7_0_1_] : [BIGINT]) - [10]
2020-11-25 21:27:58,145 TRACE  [main] BasicExtractor: extracted value ([problem_7_0_0_] : [BIGINT]) - [10]
2020-11-25 21:27:58,145 TRACE  [main] BasicExtractor: extracted value ([id1_0_0_] : [BIGINT]) - [58]
2020-11-25 21:27:58,145 TRACE  [main] BasicExtractor: extracted value ([id1_0_1_] : [BIGINT]) - [59]
2020-11-25 21:27:58,145 TRACE  [main] BasicExtractor: extracted value ([binary_v2_0_1_] : [BLOB]) - [null]
2020-11-25 21:27:58,145 TRACE  [main] BasicExtractor: extracted value ([float_va3_0_1_] : [DOUBLE]) - [3.0]
2020-11-25 21:27:58,146 TRACE  [main] BasicExtractor: extracted value ([i4_0_1_] : [INTEGER]) - [0]
2020-11-25 21:27:58,146 TRACE  [main] BasicExtractor: extracted value ([is_condi5_0_1_] : [BOOLEAN]) - [true]
2020-11-25 21:27:58,146 TRACE  [main] BasicExtractor: extracted value ([j6_0_1_] : [INTEGER]) - [2]
2020-11-25 21:27:58,146 TRACE  [main] BasicExtractor: extracted value ([problem_7_0_1_] : [BIGINT]) - [10]
2020-11-25 21:27:58,146 TRACE  [main] BasicExtractor: extracted value ([problem_7_0_0_] : [BIGINT]) - [10]
2020-11-25 21:27:58,146 TRACE  [main] BasicExtractor: extracted value ([id1_0_0_] : [BIGINT]) - [59]
2020-11-25 21:27:58,147 TRACE  [main] BasicExtractor: extracted value ([id1_0_1_] : [BIGINT]) - [60]
2020-11-25 21:27:58,147 TRACE  [main] BasicExtractor: extracted value ([binary_v2_0_1_] : [BLOB]) - [null]
2020-11-25 21:27:58,147 TRACE  [main] BasicExtractor: extracted value ([float_va3_0_1_] : [DOUBLE]) - [4.0]
2020-11-25 21:27:58,147 TRACE  [main] BasicExtractor: extracted value ([i4_0_1_] : [INTEGER]) - [0]
2020-11-25 21:27:58,147 TRACE  [main] BasicExtractor: extracted value ([is_condi5_0_1_] : [BOOLEAN]) - [true]
2020-11-25 21:27:58,147 TRACE  [main] BasicExtractor: extracted value ([j6_0_1_] : [INTEGER]) - [3]
2020-11-25 21:27:58,148 TRACE  [main] BasicExtractor: extracted value ([problem_7_0_1_] : [BIGINT]) - [10]
2020-11-25 21:27:58,148 TRACE  [main] BasicExtractor: extracted value ([problem_7_0_0_] : [BIGINT]) - [10]
2020-11-25 21:27:58,148 TRACE  [main] BasicExtractor: extracted value ([id1_0_0_] : [BIGINT]) - [60]
2020-11-25 21:27:58,158 TRACE  [main] BasicBinder: binding parameter [1] as [BIGINT] - [11]
2020-11-25 21:27:58,160 TRACE  [main] BasicExtractor: extracted value ([id1_1_2_] : [BIGINT]) - [null]
2020-11-25 21:27:58,160 TRACE  [main] BasicExtractor: extracted value ([id1_0_4_] : [BIGINT]) - [null]
2020-11-25 21:27:58,161 TRACE  [main] BasicExtractor: extracted value ([descript2_1_0_] : [BLOB]) - [[112, 114, 111, 98, 108, 101, 109, 100, 101, 115, 99, 114, 105, 112, 116, 105, 111, 110]]
2020-11-25 21:27:58,161 TRACE  [main] BasicExtractor: extracted value ([is_solve3_1_0_] : [BOOLEAN]) - [null]
2020-11-25 21:27:58,161 TRACE  [main] BasicExtractor: extracted value ([kind4_1_0_] : [VARCHAR]) - [POLYNOMIAL]
2020-11-25 21:27:58,161 TRACE  [main] BasicExtractor: extracted value ([matrix_d5_1_0_] : [INTEGER]) - [1]
2020-11-25 21:27:58,161 TRACE  [main] BasicExtractor: extracted value ([parent_p7_1_0_] : [BIGINT]) - [null]
2020-11-25 21:27:58,161 TRACE  [main] BasicExtractor: extracted value ([problem_6_1_0_] : [INTEGER]) - [22]
2020-11-25 21:27:58,161 TRACE  [main] BasicExtractor: extracted value ([problem_7_0_3_] : [BIGINT]) - [null]
2020-11-25 21:27:58,162 TRACE  [main] BasicExtractor: extracted value ([parent_p7_1_1_] : [BIGINT]) - [null]
2020-11-25 21:27:58,162 TRACE  [main] CollectionType: Created collection wrapper: [com.sf.back.entities.Problem.matrixes#11]
2020-11-25 21:27:58,163 TRACE  [main] BasicBinder: binding parameter [1] as [BIGINT] - [11]
2020-11-25 21:27:58,164 TRACE  [main] BasicExtractor: extracted value ([id1_0_1_] : [BIGINT]) - [61]
2020-11-25 21:27:58,164 TRACE  [main] BasicExtractor: extracted value ([binary_v2_0_1_] : [BLOB]) - [null]
2020-11-25 21:27:58,164 TRACE  [main] BasicExtractor: extracted value ([float_va3_0_1_] : [DOUBLE]) - [1.0]
2020-11-25 21:27:58,164 TRACE  [main] BasicExtractor: extracted value ([i4_0_1_] : [INTEGER]) - [0]
2020-11-25 21:27:58,165 TRACE  [main] BasicExtractor: extracted value ([is_condi5_0_1_] : [BOOLEAN]) - [true]
2020-11-25 21:27:58,165 TRACE  [main] BasicExtractor: extracted value ([j6_0_1_] : [INTEGER]) - [0]
2020-11-25 21:27:58,165 TRACE  [main] BasicExtractor: extracted value ([problem_7_0_1_] : [BIGINT]) - [11]
2020-11-25 21:27:58,165 TRACE  [main] BasicExtractor: extracted value ([problem_7_0_0_] : [BIGINT]) - [11]
2020-11-25 21:27:58,165 TRACE  [main] BasicExtractor: extracted value ([id1_0_0_] : [BIGINT]) - [61]
2020-11-25 21:27:58,166 TRACE  [main] BasicExtractor: extracted value ([id1_0_1_] : [BIGINT]) - [62]
2020-11-25 21:27:58,166 TRACE  [main] BasicExtractor: extracted value ([binary_v2_0_1_] : [BLOB]) - [null]
2020-11-25 21:27:58,166 TRACE  [main] BasicExtractor: extracted value ([float_va3_0_1_] : [DOUBLE]) - [2.718281828459045]
2020-11-25 21:27:58,166 TRACE  [main] BasicExtractor: extracted value ([i4_0_1_] : [INTEGER]) - [0]
2020-11-25 21:27:58,166 TRACE  [main] BasicExtractor: extracted value ([is_condi5_0_1_] : [BOOLEAN]) - [true]
2020-11-25 21:27:58,166 TRACE  [main] BasicExtractor: extracted value ([j6_0_1_] : [INTEGER]) - [1]
2020-11-25 21:27:58,167 TRACE  [main] BasicExtractor: extracted value ([problem_7_0_1_] : [BIGINT]) - [11]
2020-11-25 21:27:58,167 TRACE  [main] BasicExtractor: extracted value ([problem_7_0_0_] : [BIGINT]) - [11]
2020-11-25 21:27:58,167 TRACE  [main] BasicExtractor: extracted value ([id1_0_0_] : [BIGINT]) - [62]
2020-11-25 21:27:58,167 TRACE  [main] BasicExtractor: extracted value ([id1_0_1_] : [BIGINT]) - [63]
2020-11-25 21:27:58,168 TRACE  [main] BasicExtractor: extracted value ([binary_v2_0_1_] : [BLOB]) - [null]
2020-11-25 21:27:58,168 TRACE  [main] BasicExtractor: extracted value ([float_va3_0_1_] : [DOUBLE]) - [7.38905609893065]
2020-11-25 21:27:58,168 TRACE  [main] BasicExtractor: extracted value ([i4_0_1_] : [INTEGER]) - [0]
2020-11-25 21:27:58,168 TRACE  [main] BasicExtractor: extracted value ([is_condi5_0_1_] : [BOOLEAN]) - [true]
2020-11-25 21:27:58,168 TRACE  [main] BasicExtractor: extracted value ([j6_0_1_] : [INTEGER]) - [2]
2020-11-25 21:27:58,168 TRACE  [main] BasicExtractor: extracted value ([problem_7_0_1_] : [BIGINT]) - [11]
2020-11-25 21:27:58,169 TRACE  [main] BasicExtractor: extracted value ([problem_7_0_0_] : [BIGINT]) - [11]
2020-11-25 21:27:58,169 TRACE  [main] BasicExtractor: extracted value ([id1_0_0_] : [BIGINT]) - [63]
2020-11-25 21:27:58,169 TRACE  [main] BasicExtractor: extracted value ([id1_0_1_] : [BIGINT]) - [64]
2020-11-25 21:27:58,169 TRACE  [main] BasicExtractor: extracted value ([binary_v2_0_1_] : [BLOB]) - [null]
2020-11-25 21:27:58,169 TRACE  [main] BasicExtractor: extracted value ([float_va3_0_1_] : [DOUBLE]) - [20.085536923187668]
2020-11-25 21:27:58,169 TRACE  [main] BasicExtractor: extracted value ([i4_0_1_] : [INTEGER]) - [0]
2020-11-25 21:27:58,170 TRACE  [main] BasicExtractor: extracted value ([is_condi5_0_1_] : [BOOLEAN]) - [true]
2020-11-25 21:27:58,170 TRACE  [main] BasicExtractor: extracted value ([j6_0_1_] : [INTEGER]) - [3]
2020-11-25 21:27:58,170 TRACE  [main] BasicExtractor: extracted value ([problem_7_0_1_] : [BIGINT]) - [11]
2020-11-25 21:27:58,170 TRACE  [main] BasicExtractor: extracted value ([problem_7_0_0_] : [BIGINT]) - [11]
2020-11-25 21:27:58,170 TRACE  [main] BasicExtractor: extracted value ([id1_0_0_] : [BIGINT]) - [64]
2020-11-25 21:27:58,171 TRACE  [main] BasicExtractor: extracted value ([id1_0_1_] : [BIGINT]) - [65]
2020-11-25 21:27:58,171 TRACE  [main] BasicExtractor: extracted value ([binary_v2_0_1_] : [BLOB]) - [null]
2020-11-25 21:27:58,171 TRACE  [main] BasicExtractor: extracted value ([float_va3_0_1_] : [DOUBLE]) - [54.598150033144236]
2020-11-25 21:27:58,172 TRACE  [main] BasicExtractor: extracted value ([i4_0_1_] : [INTEGER]) - [0]
2020-11-25 21:27:58,172 TRACE  [main] BasicExtractor: extracted value ([is_condi5_0_1_] : [BOOLEAN]) - [true]
2020-11-25 21:27:58,172 TRACE  [main] BasicExtractor: extracted value ([j6_0_1_] : [INTEGER]) - [4]
2020-11-25 21:27:58,172 TRACE  [main] BasicExtractor: extracted value ([problem_7_0_1_] : [BIGINT]) - [11]
2020-11-25 21:27:58,172 TRACE  [main] BasicExtractor: extracted value ([problem_7_0_0_] : [BIGINT]) - [11]
2020-11-25 21:27:58,173 TRACE  [main] BasicExtractor: extracted value ([id1_0_0_] : [BIGINT]) - [65]
2020-11-25 21:27:58,173 TRACE  [main] BasicExtractor: extracted value ([id1_0_1_] : [BIGINT]) - [66]
2020-11-25 21:27:58,173 TRACE  [main] BasicExtractor: extracted value ([binary_v2_0_1_] : [BLOB]) - [null]
2020-11-25 21:27:58,173 TRACE  [main] BasicExtractor: extracted value ([float_va3_0_1_] : [DOUBLE]) - [148.4131591025766]
2020-11-25 21:27:58,173 TRACE  [main] BasicExtractor: extracted value ([i4_0_1_] : [INTEGER]) - [0]
2020-11-25 21:27:58,174 TRACE  [main] BasicExtractor: extracted value ([is_condi5_0_1_] : [BOOLEAN]) - [true]
2020-11-25 21:27:58,174 TRACE  [main] BasicExtractor: extracted value ([j6_0_1_] : [INTEGER]) - [5]
2020-11-25 21:27:58,174 TRACE  [main] BasicExtractor: extracted value ([problem_7_0_1_] : [BIGINT]) - [11]
2020-11-25 21:27:58,174 TRACE  [main] BasicExtractor: extracted value ([problem_7_0_0_] : [BIGINT]) - [11]
2020-11-25 21:27:58,174 TRACE  [main] BasicExtractor: extracted value ([id1_0_0_] : [BIGINT]) - [66]
2020-11-25 21:27:58,179 TRACE  [main] BasicBinder: binding parameter [1] as [BIGINT] - [11]
2020-11-25 21:27:58,179 TRACE  [main] BasicExtractor: extracted value ([id1_0_0_] : [BIGINT]) - [61]
2020-11-25 21:27:58,180 TRACE  [main] BasicExtractor: extracted value ([binary_v2_0_0_] : [BLOB]) - [null]
2020-11-25 21:27:58,180 TRACE  [main] BasicExtractor: extracted value ([float_va3_0_0_] : [DOUBLE]) - [1.0]
2020-11-25 21:27:58,180 TRACE  [main] BasicExtractor: extracted value ([i4_0_0_] : [INTEGER]) - [0]
2020-11-25 21:27:58,180 TRACE  [main] BasicExtractor: extracted value ([is_condi5_0_0_] : [BOOLEAN]) - [true]
2020-11-25 21:27:58,180 TRACE  [main] BasicExtractor: extracted value ([j6_0_0_] : [INTEGER]) - [0]
2020-11-25 21:27:58,181 TRACE  [main] BasicExtractor: extracted value ([problem_7_0_0_] : [BIGINT]) - [11]
2020-11-25 21:27:58,181 TRACE  [main] BasicExtractor: extracted value ([descript2_1_1_] : [BLOB]) - [[112, 114, 111, 98, 108, 101, 109, 100, 101, 115, 99, 114, 105, 112, 116, 105, 111, 110]]
2020-11-25 21:27:58,181 TRACE  [main] BasicExtractor: extracted value ([is_solve3_1_1_] : [BOOLEAN]) - [null]
2020-11-25 21:27:58,181 TRACE  [main] BasicExtractor: extracted value ([kind4_1_1_] : [VARCHAR]) - [POLYNOMIAL]
2020-11-25 21:27:58,181 TRACE  [main] BasicExtractor: extracted value ([matrix_d5_1_1_] : [INTEGER]) - [1]
2020-11-25 21:27:58,181 TRACE  [main] BasicExtractor: extracted value ([parent_p7_1_1_] : [BIGINT]) - [null]
2020-11-25 21:27:58,181 TRACE  [main] BasicExtractor: extracted value ([problem_6_1_1_] : [INTEGER]) - [22]
2020-11-25 21:27:58,182 TRACE  [main] BasicExtractor: extracted value ([problem_7_0_3_] : [BIGINT]) - [11]
2020-11-25 21:27:58,182 TRACE  [main] BasicExtractor: extracted value ([id1_0_3_] : [BIGINT]) - [61]
2020-11-25 21:27:58,182 TRACE  [main] BasicExtractor: extracted value ([id1_0_0_] : [BIGINT]) - [62]
2020-11-25 21:27:58,183 TRACE  [main] BasicExtractor: extracted value ([binary_v2_0_0_] : [BLOB]) - [null]
2020-11-25 21:27:58,183 TRACE  [main] BasicExtractor: extracted value ([float_va3_0_0_] : [DOUBLE]) - [2.718281828459045]
2020-11-25 21:27:58,183 TRACE  [main] BasicExtractor: extracted value ([i4_0_0_] : [INTEGER]) - [0]
2020-11-25 21:27:58,183 TRACE  [main] BasicExtractor: extracted value ([is_condi5_0_0_] : [BOOLEAN]) - [true]
2020-11-25 21:27:58,183 TRACE  [main] BasicExtractor: extracted value ([j6_0_0_] : [INTEGER]) - [1]
2020-11-25 21:27:58,184 TRACE  [main] BasicExtractor: extracted value ([problem_7_0_0_] : [BIGINT]) - [11]
2020-11-25 21:27:58,184 TRACE  [main] BasicExtractor: extracted value ([problem_7_0_3_] : [BIGINT]) - [11]
2020-11-25 21:27:58,184 TRACE  [main] BasicExtractor: extracted value ([id1_0_3_] : [BIGINT]) - [62]
2020-11-25 21:27:58,184 TRACE  [main] BasicExtractor: extracted value ([id1_0_0_] : [BIGINT]) - [63]
2020-11-25 21:27:58,185 TRACE  [main] BasicExtractor: extracted value ([binary_v2_0_0_] : [BLOB]) - [null]
2020-11-25 21:27:58,185 TRACE  [main] BasicExtractor: extracted value ([float_va3_0_0_] : [DOUBLE]) - [7.38905609893065]
2020-11-25 21:27:58,185 TRACE  [main] BasicExtractor: extracted value ([i4_0_0_] : [INTEGER]) - [0]
2020-11-25 21:27:58,185 TRACE  [main] BasicExtractor: extracted value ([is_condi5_0_0_] : [BOOLEAN]) - [true]
2020-11-25 21:27:58,185 TRACE  [main] BasicExtractor: extracted value ([j6_0_0_] : [INTEGER]) - [2]
2020-11-25 21:27:58,185 TRACE  [main] BasicExtractor: extracted value ([problem_7_0_0_] : [BIGINT]) - [11]
2020-11-25 21:27:58,185 TRACE  [main] BasicExtractor: extracted value ([problem_7_0_3_] : [BIGINT]) - [11]
2020-11-25 21:27:58,186 TRACE  [main] BasicExtractor: extracted value ([id1_0_3_] : [BIGINT]) - [63]
2020-11-25 21:27:58,186 TRACE  [main] BasicExtractor: extracted value ([id1_0_0_] : [BIGINT]) - [64]
2020-11-25 21:27:58,186 TRACE  [main] BasicExtractor: extracted value ([binary_v2_0_0_] : [BLOB]) - [null]
2020-11-25 21:27:58,186 TRACE  [main] BasicExtractor: extracted value ([float_va3_0_0_] : [DOUBLE]) - [20.085536923187668]
2020-11-25 21:27:58,186 TRACE  [main] BasicExtractor: extracted value ([i4_0_0_] : [INTEGER]) - [0]
2020-11-25 21:27:58,187 TRACE  [main] BasicExtractor: extracted value ([is_condi5_0_0_] : [BOOLEAN]) - [true]
2020-11-25 21:27:58,187 TRACE  [main] BasicExtractor: extracted value ([j6_0_0_] : [INTEGER]) - [3]
2020-11-25 21:27:58,187 TRACE  [main] BasicExtractor: extracted value ([problem_7_0_0_] : [BIGINT]) - [11]
2020-11-25 21:27:58,187 TRACE  [main] BasicExtractor: extracted value ([problem_7_0_3_] : [BIGINT]) - [11]
2020-11-25 21:27:58,187 TRACE  [main] BasicExtractor: extracted value ([id1_0_3_] : [BIGINT]) - [64]
2020-11-25 21:27:58,188 TRACE  [main] BasicExtractor: extracted value ([id1_0_0_] : [BIGINT]) - [65]
2020-11-25 21:27:58,188 TRACE  [main] BasicExtractor: extracted value ([binary_v2_0_0_] : [BLOB]) - [null]
2020-11-25 21:27:58,188 TRACE  [main] BasicExtractor: extracted value ([float_va3_0_0_] : [DOUBLE]) - [54.598150033144236]
2020-11-25 21:27:58,188 TRACE  [main] BasicExtractor: extracted value ([i4_0_0_] : [INTEGER]) - [0]
2020-11-25 21:27:58,188 TRACE  [main] BasicExtractor: extracted value ([is_condi5_0_0_] : [BOOLEAN]) - [true]
2020-11-25 21:27:58,188 TRACE  [main] BasicExtractor: extracted value ([j6_0_0_] : [INTEGER]) - [4]
2020-11-25 21:27:58,189 TRACE  [main] BasicExtractor: extracted value ([problem_7_0_0_] : [BIGINT]) - [11]
2020-11-25 21:27:58,189 TRACE  [main] BasicExtractor: extracted value ([problem_7_0_3_] : [BIGINT]) - [11]
2020-11-25 21:27:58,189 TRACE  [main] BasicExtractor: extracted value ([id1_0_3_] : [BIGINT]) - [65]
2020-11-25 21:27:58,189 TRACE  [main] BasicExtractor: extracted value ([id1_0_0_] : [BIGINT]) - [66]
2020-11-25 21:27:58,189 TRACE  [main] BasicExtractor: extracted value ([binary_v2_0_0_] : [BLOB]) - [null]
2020-11-25 21:27:58,189 TRACE  [main] BasicExtractor: extracted value ([float_va3_0_0_] : [DOUBLE]) - [148.4131591025766]
2020-11-25 21:27:58,189 TRACE  [main] BasicExtractor: extracted value ([i4_0_0_] : [INTEGER]) - [0]
2020-11-25 21:27:58,189 TRACE  [main] BasicExtractor: extracted value ([is_condi5_0_0_] : [BOOLEAN]) - [true]
2020-11-25 21:27:58,190 TRACE  [main] BasicExtractor: extracted value ([j6_0_0_] : [INTEGER]) - [5]
2020-11-25 21:27:58,190 TRACE  [main] BasicExtractor: extracted value ([problem_7_0_0_] : [BIGINT]) - [11]
2020-11-25 21:27:58,190 TRACE  [main] BasicExtractor: extracted value ([problem_7_0_3_] : [BIGINT]) - [11]
2020-11-25 21:27:58,190 TRACE  [main] BasicExtractor: extracted value ([id1_0_3_] : [BIGINT]) - [66]
2020-11-25 21:27:58,190 TRACE  [main] CollectionType: Created collection wrapper: [com.sf.back.entities.Problem.children#11]
2020-11-25 21:27:58,191 TRACE  [main] BasicBinder: binding parameter [1] as [BIGINT] - [11]
2020-11-25 21:27:58,194 TRACE  [main] BasicBinder: binding parameter [1] as [BLOB] - [null]
2020-11-25 21:27:58,194 TRACE  [main] BasicBinder: binding parameter [2] as [DOUBLE] - [2.0]
2020-11-25 21:27:58,194 TRACE  [main] BasicBinder: binding parameter [3] as [INTEGER] - [0]
2020-11-25 21:27:58,194 TRACE  [main] BasicBinder: binding parameter [4] as [BOOLEAN] - [true]
2020-11-25 21:27:58,194 TRACE  [main] BasicBinder: binding parameter [5] as [INTEGER] - [0]
2020-11-25 21:27:58,194 TRACE  [main] BasicBinder: binding parameter [6] as [BIGINT] - [11]
2020-11-25 21:27:58,194 TRACE  [main] BasicBinder: binding parameter [7] as [BIGINT] - [61]
2020-11-25 21:27:58,195 TRACE  [main] BasicBinder: binding parameter [1] as [BLOB] - [[100, 101, 115, 99, 114, 105, 112, 116, 105, 111, 110, 112, 114, 111, 98, 108, 101, 109]]
2020-11-25 21:27:58,196 TRACE  [main] BasicBinder: binding parameter [2] as [BOOLEAN] - [null]
2020-11-25 21:27:58,196 TRACE  [main] BasicBinder: binding parameter [3] as [VARCHAR] - [POLYNOMIAL]
2020-11-25 21:27:58,196 TRACE  [main] BasicBinder: binding parameter [4] as [INTEGER] - [1]
2020-11-25 21:27:58,196 TRACE  [main] BasicBinder: binding parameter [5] as [BIGINT] - [null]
2020-11-25 21:27:58,196 TRACE  [main] BasicBinder: binding parameter [6] as [INTEGER] - [22]
2020-11-25 21:27:58,196 TRACE  [main] BasicBinder: binding parameter [7] as [BIGINT] - [11]
2020-11-25 21:27:58,212 TRACE  [main] BasicBinder: binding parameter [1] as [BIGINT] - [12]
2020-11-25 21:27:58,213 TRACE  [main] BasicExtractor: extracted value ([id1_1_2_] : [BIGINT]) - [null]
2020-11-25 21:27:58,214 TRACE  [main] BasicExtractor: extracted value ([id1_0_4_] : [BIGINT]) - [null]
2020-11-25 21:27:58,214 TRACE  [main] BasicExtractor: extracted value ([descript2_1_0_] : [BLOB]) - [[112, 114, 111, 98, 108, 101, 109, 100, 101, 115, 99, 114, 105, 112, 116, 105, 111, 110]]
2020-11-25 21:27:58,214 TRACE  [main] BasicExtractor: extracted value ([is_solve3_1_0_] : [BOOLEAN]) - [null]
2020-11-25 21:27:58,215 TRACE  [main] BasicExtractor: extracted value ([kind4_1_0_] : [VARCHAR]) - [POLYNOMIAL]
2020-11-25 21:27:58,215 TRACE  [main] BasicExtractor: extracted value ([matrix_d5_1_0_] : [INTEGER]) - [1]
2020-11-25 21:27:58,215 TRACE  [main] BasicExtractor: extracted value ([parent_p7_1_0_] : [BIGINT]) - [null]
2020-11-25 21:27:58,215 TRACE  [main] BasicExtractor: extracted value ([problem_6_1_0_] : [INTEGER]) - [22]
2020-11-25 21:27:58,215 TRACE  [main] BasicExtractor: extracted value ([problem_7_0_3_] : [BIGINT]) - [null]
2020-11-25 21:27:58,215 TRACE  [main] BasicExtractor: extracted value ([parent_p7_1_1_] : [BIGINT]) - [null]
2020-11-25 21:27:58,216 TRACE  [main] CollectionType: Created collection wrapper: [com.sf.back.entities.Problem.matrixes#12]
2020-11-25 21:27:58,216 TRACE  [main] BasicBinder: binding parameter [1] as [BIGINT] - [12]
2020-11-25 21:27:58,217 TRACE  [main] BasicExtractor: extracted value ([id1_0_1_] : [BIGINT]) - [67]
2020-11-25 21:27:58,218 TRACE  [main] BasicExtractor: extracted value ([binary_v2_0_1_] : [BLOB]) - [null]
2020-11-25 21:27:58,218 TRACE  [main] BasicExtractor: extracted value ([float_va3_0_1_] : [DOUBLE]) - [1.0]
2020-11-25 21:27:58,219 TRACE  [main] BasicExtractor: extracted value ([i4_0_1_] : [INTEGER]) - [0]
2020-11-25 21:27:58,219 TRACE  [main] BasicExtractor: extracted value ([is_condi5_0_1_] : [BOOLEAN]) - [true]
2020-11-25 21:27:58,219 TRACE  [main] BasicExtractor: extracted value ([j6_0_1_] : [INTEGER]) - [0]
2020-11-25 21:27:58,219 TRACE  [main] BasicExtractor: extracted value ([problem_7_0_1_] : [BIGINT]) - [12]
2020-11-25 21:27:58,219 TRACE  [main] BasicExtractor: extracted value ([problem_7_0_0_] : [BIGINT]) - [12]
2020-11-25 21:27:58,219 TRACE  [main] BasicExtractor: extracted value ([id1_0_0_] : [BIGINT]) - [67]
2020-11-25 21:27:58,220 TRACE  [main] BasicExtractor: extracted value ([id1_0_1_] : [BIGINT]) - [68]
2020-11-25 21:27:58,220 TRACE  [main] BasicExtractor: extracted value ([binary_v2_0_1_] : [BLOB]) - [null]
2020-11-25 21:27:58,220 TRACE  [main] BasicExtractor: extracted value ([float_va3_0_1_] : [DOUBLE]) - [2.718281828459045]
2020-11-25 21:27:58,220 TRACE  [main] BasicExtractor: extracted value ([i4_0_1_] : [INTEGER]) - [0]
2020-11-25 21:27:58,220 TRACE  [main] BasicExtractor: extracted value ([is_condi5_0_1_] : [BOOLEAN]) - [true]
2020-11-25 21:27:58,220 TRACE  [main] BasicExtractor: extracted value ([j6_0_1_] : [INTEGER]) - [1]
2020-11-25 21:27:58,220 TRACE  [main] BasicExtractor: extracted value ([problem_7_0_1_] : [BIGINT]) - [12]
2020-11-25 21:27:58,221 TRACE  [main] BasicExtractor: extracted value ([problem_7_0_0_] : [BIGINT]) - [12]
2020-11-25 21:27:58,222 TRACE  [main] BasicExtractor: extracted value ([id1_0_0_] : [BIGINT]) - [68]
2020-11-25 21:27:58,222 TRACE  [main] BasicExtractor: extracted value ([id1_0_1_] : [BIGINT]) - [69]
2020-11-25 21:27:58,222 TRACE  [main] BasicExtractor: extracted value ([binary_v2_0_1_] : [BLOB]) - [null]
2020-11-25 21:27:58,223 TRACE  [main] BasicExtractor: extracted value ([float_va3_0_1_] : [DOUBLE]) - [7.38905609893065]
2020-11-25 21:27:58,223 TRACE  [main] BasicExtractor: extracted value ([i4_0_1_] : [INTEGER]) - [0]
2020-11-25 21:27:58,223 TRACE  [main] BasicExtractor: extracted value ([is_condi5_0_1_] : [BOOLEAN]) - [true]
2020-11-25 21:27:58,223 TRACE  [main] BasicExtractor: extracted value ([j6_0_1_] : [INTEGER]) - [2]
2020-11-25 21:27:58,223 TRACE  [main] BasicExtractor: extracted value ([problem_7_0_1_] : [BIGINT]) - [12]
2020-11-25 21:27:58,224 TRACE  [main] BasicExtractor: extracted value ([problem_7_0_0_] : [BIGINT]) - [12]
2020-11-25 21:27:58,224 TRACE  [main] BasicExtractor: extracted value ([id1_0_0_] : [BIGINT]) - [69]
2020-11-25 21:27:58,224 TRACE  [main] BasicExtractor: extracted value ([id1_0_1_] : [BIGINT]) - [70]
2020-11-25 21:27:58,224 TRACE  [main] BasicExtractor: extracted value ([binary_v2_0_1_] : [BLOB]) - [null]
2020-11-25 21:27:58,224 TRACE  [main] BasicExtractor: extracted value ([float_va3_0_1_] : [DOUBLE]) - [20.085536923187668]
2020-11-25 21:27:58,225 TRACE  [main] BasicExtractor: extracted value ([i4_0_1_] : [INTEGER]) - [0]
2020-11-25 21:27:58,225 TRACE  [main] BasicExtractor: extracted value ([is_condi5_0_1_] : [BOOLEAN]) - [true]
2020-11-25 21:27:58,225 TRACE  [main] BasicExtractor: extracted value ([j6_0_1_] : [INTEGER]) - [3]
2020-11-25 21:27:58,225 TRACE  [main] BasicExtractor: extracted value ([problem_7_0_1_] : [BIGINT]) - [12]
2020-11-25 21:27:58,225 TRACE  [main] BasicExtractor: extracted value ([problem_7_0_0_] : [BIGINT]) - [12]
2020-11-25 21:27:58,225 TRACE  [main] BasicExtractor: extracted value ([id1_0_0_] : [BIGINT]) - [70]
2020-11-25 21:27:58,226 TRACE  [main] BasicExtractor: extracted value ([id1_0_1_] : [BIGINT]) - [71]
2020-11-25 21:27:58,226 TRACE  [main] BasicExtractor: extracted value ([binary_v2_0_1_] : [BLOB]) - [null]
2020-11-25 21:27:58,227 TRACE  [main] BasicExtractor: extracted value ([float_va3_0_1_] : [DOUBLE]) - [54.598150033144236]
2020-11-25 21:27:58,227 TRACE  [main] BasicExtractor: extracted value ([i4_0_1_] : [INTEGER]) - [0]
2020-11-25 21:27:58,227 TRACE  [main] BasicExtractor: extracted value ([is_condi5_0_1_] : [BOOLEAN]) - [true]
2020-11-25 21:27:58,228 TRACE  [main] BasicExtractor: extracted value ([j6_0_1_] : [INTEGER]) - [4]
2020-11-25 21:27:58,228 TRACE  [main] BasicExtractor: extracted value ([problem_7_0_1_] : [BIGINT]) - [12]
2020-11-25 21:27:58,228 TRACE  [main] BasicExtractor: extracted value ([problem_7_0_0_] : [BIGINT]) - [12]
2020-11-25 21:27:58,228 TRACE  [main] BasicExtractor: extracted value ([id1_0_0_] : [BIGINT]) - [71]
2020-11-25 21:27:58,228 TRACE  [main] BasicExtractor: extracted value ([id1_0_1_] : [BIGINT]) - [72]
2020-11-25 21:27:58,229 TRACE  [main] BasicExtractor: extracted value ([binary_v2_0_1_] : [BLOB]) - [null]
2020-11-25 21:27:58,229 TRACE  [main] BasicExtractor: extracted value ([float_va3_0_1_] : [DOUBLE]) - [148.4131591025766]
2020-11-25 21:27:58,229 TRACE  [main] BasicExtractor: extracted value ([i4_0_1_] : [INTEGER]) - [0]
2020-11-25 21:27:58,229 TRACE  [main] BasicExtractor: extracted value ([is_condi5_0_1_] : [BOOLEAN]) - [true]
2020-11-25 21:27:58,229 TRACE  [main] BasicExtractor: extracted value ([j6_0_1_] : [INTEGER]) - [5]
2020-11-25 21:27:58,229 TRACE  [main] BasicExtractor: extracted value ([problem_7_0_1_] : [BIGINT]) - [12]
2020-11-25 21:27:58,229 TRACE  [main] BasicExtractor: extracted value ([problem_7_0_0_] : [BIGINT]) - [12]
2020-11-25 21:27:58,230 TRACE  [main] BasicExtractor: extracted value ([id1_0_0_] : [BIGINT]) - [72]
2020-11-25 21:27:58,237 TRACE  [main] BasicBinder: binding parameter [1] as [BIGINT] - [12]
2020-11-25 21:27:58,239 TRACE  [main] BasicExtractor: extracted value ([id1_1_2_] : [BIGINT]) - [null]
2020-11-25 21:27:58,239 TRACE  [main] BasicExtractor: extracted value ([id1_0_4_] : [BIGINT]) - [null]
2020-11-25 21:27:58,240 TRACE  [main] BasicExtractor: extracted value ([descript2_1_0_] : [BLOB]) - [[112, 114, 111, 98, 108, 101, 109, 100, 101, 115, 99, 114, 105, 112, 116, 105, 111, 110]]
2020-11-25 21:27:58,241 TRACE  [main] BasicExtractor: extracted value ([is_solve3_1_0_] : [BOOLEAN]) - [null]
2020-11-25 21:27:58,241 TRACE  [main] BasicExtractor: extracted value ([kind4_1_0_] : [VARCHAR]) - [POLYNOMIAL]
2020-11-25 21:27:58,241 TRACE  [main] BasicExtractor: extracted value ([matrix_d5_1_0_] : [INTEGER]) - [1]
2020-11-25 21:27:58,242 TRACE  [main] BasicExtractor: extracted value ([parent_p7_1_0_] : [BIGINT]) - [null]
2020-11-25 21:27:58,242 TRACE  [main] BasicExtractor: extracted value ([problem_6_1_0_] : [INTEGER]) - [22]
2020-11-25 21:27:58,243 TRACE  [main] BasicExtractor: extracted value ([problem_7_0_3_] : [BIGINT]) - [null]
2020-11-25 21:27:58,243 TRACE  [main] BasicExtractor: extracted value ([parent_p7_1_1_] : [BIGINT]) - [null]
2020-11-25 21:27:58,244 TRACE  [main] CollectionType: Created collection wrapper: [com.sf.back.entities.Problem.matrixes#12]
2020-11-25 21:27:58,245 TRACE  [main] BasicBinder: binding parameter [1] as [BIGINT] - [12]
2020-11-25 21:27:58,246 TRACE  [main] BasicExtractor: extracted value ([id1_0_1_] : [BIGINT]) - [67]
2020-11-25 21:27:58,247 TRACE  [main] BasicExtractor: extracted value ([binary_v2_0_1_] : [BLOB]) - [null]
2020-11-25 21:27:58,247 TRACE  [main] BasicExtractor: extracted value ([float_va3_0_1_] : [DOUBLE]) - [1.0]
2020-11-25 21:27:58,247 TRACE  [main] BasicExtractor: extracted value ([i4_0_1_] : [INTEGER]) - [0]
2020-11-25 21:27:58,248 TRACE  [main] BasicExtractor: extracted value ([is_condi5_0_1_] : [BOOLEAN]) - [true]
2020-11-25 21:27:58,248 TRACE  [main] BasicExtractor: extracted value ([j6_0_1_] : [INTEGER]) - [0]
2020-11-25 21:27:58,249 TRACE  [main] BasicExtractor: extracted value ([problem_7_0_1_] : [BIGINT]) - [12]
2020-11-25 21:27:58,249 TRACE  [main] BasicExtractor: extracted value ([problem_7_0_0_] : [BIGINT]) - [12]
2020-11-25 21:27:58,249 TRACE  [main] BasicExtractor: extracted value ([id1_0_0_] : [BIGINT]) - [67]
2020-11-25 21:27:58,250 TRACE  [main] BasicExtractor: extracted value ([id1_0_1_] : [BIGINT]) - [68]
2020-11-25 21:27:58,251 TRACE  [main] BasicExtractor: extracted value ([binary_v2_0_1_] : [BLOB]) - [null]
2020-11-25 21:27:58,251 TRACE  [main] BasicExtractor: extracted value ([float_va3_0_1_] : [DOUBLE]) - [2.718281828459045]
2020-11-25 21:27:58,251 TRACE  [main] BasicExtractor: extracted value ([i4_0_1_] : [INTEGER]) - [0]
2020-11-25 21:27:58,252 TRACE  [main] BasicExtractor: extracted value ([is_condi5_0_1_] : [BOOLEAN]) - [true]
2020-11-25 21:27:58,252 TRACE  [main] BasicExtractor: extracted value ([j6_0_1_] : [INTEGER]) - [1]
2020-11-25 21:27:58,252 TRACE  [main] BasicExtractor: extracted value ([problem_7_0_1_] : [BIGINT]) - [12]
2020-11-25 21:27:58,253 TRACE  [main] BasicExtractor: extracted value ([problem_7_0_0_] : [BIGINT]) - [12]
2020-11-25 21:27:58,253 TRACE  [main] BasicExtractor: extracted value ([id1_0_0_] : [BIGINT]) - [68]
2020-11-25 21:27:58,254 TRACE  [main] BasicExtractor: extracted value ([id1_0_1_] : [BIGINT]) - [69]
2020-11-25 21:27:58,254 TRACE  [main] BasicExtractor: extracted value ([binary_v2_0_1_] : [BLOB]) - [null]
2020-11-25 21:27:58,254 TRACE  [main] BasicExtractor: extracted value ([float_va3_0_1_] : [DOUBLE]) - [7.38905609893065]
2020-11-25 21:27:58,256 TRACE  [main] BasicExtractor: extracted value ([i4_0_1_] : [INTEGER]) - [0]
2020-11-25 21:27:58,257 TRACE  [main] BasicExtractor: extracted value ([is_condi5_0_1_] : [BOOLEAN]) - [true]
2020-11-25 21:27:58,257 TRACE  [main] BasicExtractor: extracted value ([j6_0_1_] : [INTEGER]) - [2]
2020-11-25 21:27:58,257 TRACE  [main] BasicExtractor: extracted value ([problem_7_0_1_] : [BIGINT]) - [12]
2020-11-25 21:27:58,257 TRACE  [main] BasicExtractor: extracted value ([problem_7_0_0_] : [BIGINT]) - [12]
2020-11-25 21:27:58,258 TRACE  [main] BasicExtractor: extracted value ([id1_0_0_] : [BIGINT]) - [69]
2020-11-25 21:27:58,258 TRACE  [main] BasicExtractor: extracted value ([id1_0_1_] : [BIGINT]) - [70]
2020-11-25 21:27:58,259 TRACE  [main] BasicExtractor: extracted value ([binary_v2_0_1_] : [BLOB]) - [null]
2020-11-25 21:27:58,259 TRACE  [main] BasicExtractor: extracted value ([float_va3_0_1_] : [DOUBLE]) - [20.085536923187668]
2020-11-25 21:27:58,259 TRACE  [main] BasicExtractor: extracted value ([i4_0_1_] : [INTEGER]) - [0]
2020-11-25 21:27:58,260 TRACE  [main] BasicExtractor: extracted value ([is_condi5_0_1_] : [BOOLEAN]) - [true]
2020-11-25 21:27:58,260 TRACE  [main] BasicExtractor: extracted value ([j6_0_1_] : [INTEGER]) - [3]
2020-11-25 21:27:58,260 TRACE  [main] BasicExtractor: extracted value ([problem_7_0_1_] : [BIGINT]) - [12]
2020-11-25 21:27:58,261 TRACE  [main] BasicExtractor: extracted value ([problem_7_0_0_] : [BIGINT]) - [12]
2020-11-25 21:27:58,261 TRACE  [main] BasicExtractor: extracted value ([id1_0_0_] : [BIGINT]) - [70]
2020-11-25 21:27:58,262 TRACE  [main] BasicExtractor: extracted value ([id1_0_1_] : [BIGINT]) - [71]
2020-11-25 21:27:58,263 TRACE  [main] BasicExtractor: extracted value ([binary_v2_0_1_] : [BLOB]) - [null]
2020-11-25 21:27:58,263 TRACE  [main] BasicExtractor: extracted value ([float_va3_0_1_] : [DOUBLE]) - [54.598150033144236]
2020-11-25 21:27:58,264 TRACE  [main] BasicExtractor: extracted value ([i4_0_1_] : [INTEGER]) - [0]
2020-11-25 21:27:58,264 TRACE  [main] BasicExtractor: extracted value ([is_condi5_0_1_] : [BOOLEAN]) - [true]
2020-11-25 21:27:58,264 TRACE  [main] BasicExtractor: extracted value ([j6_0_1_] : [INTEGER]) - [4]
2020-11-25 21:27:58,265 TRACE  [main] BasicExtractor: extracted value ([problem_7_0_1_] : [BIGINT]) - [12]
2020-11-25 21:27:58,265 TRACE  [main] BasicExtractor: extracted value ([problem_7_0_0_] : [BIGINT]) - [12]
2020-11-25 21:27:58,265 TRACE  [main] BasicExtractor: extracted value ([id1_0_0_] : [BIGINT]) - [71]
2020-11-25 21:27:58,265 TRACE  [main] BasicExtractor: extracted value ([id1_0_1_] : [BIGINT]) - [72]
2020-11-25 21:27:58,266 TRACE  [main] BasicExtractor: extracted value ([binary_v2_0_1_] : [BLOB]) - [null]
2020-11-25 21:27:58,266 TRACE  [main] BasicExtractor: extracted value ([float_va3_0_1_] : [DOUBLE]) - [148.4131591025766]
2020-11-25 21:27:58,267 TRACE  [main] BasicExtractor: extracted value ([i4_0_1_] : [INTEGER]) - [0]
2020-11-25 21:27:58,267 TRACE  [main] BasicExtractor: extracted value ([is_condi5_0_1_] : [BOOLEAN]) - [true]
2020-11-25 21:27:58,267 TRACE  [main] BasicExtractor: extracted value ([j6_0_1_] : [INTEGER]) - [5]
2020-11-25 21:27:58,267 TRACE  [main] BasicExtractor: extracted value ([problem_7_0_1_] : [BIGINT]) - [12]
2020-11-25 21:27:58,268 TRACE  [main] BasicExtractor: extracted value ([problem_7_0_0_] : [BIGINT]) - [12]
2020-11-25 21:27:58,268 TRACE  [main] BasicExtractor: extracted value ([id1_0_0_] : [BIGINT]) - [72]
2020-11-25 21:27:58,289 TRACE  [main] BasicBinder: binding parameter [1] as [BIGINT] - [67]
2020-11-25 21:27:58,293 TRACE  [main] BasicBinder: binding parameter [1] as [BIGINT] - [68]
2020-11-25 21:27:58,294 TRACE  [main] BasicBinder: binding parameter [1] as [BIGINT] - [69]
2020-11-25 21:27:58,294 TRACE  [main] BasicBinder: binding parameter [1] as [BIGINT] - [70]
2020-11-25 21:27:58,300 TRACE  [main] BasicBinder: binding parameter [1] as [BIGINT] - [71]
2020-11-25 21:27:58,301 TRACE  [main] BasicBinder: binding parameter [1] as [BIGINT] - [72]
2020-11-25 21:27:58,302 TRACE  [main] BasicBinder: binding parameter [1] as [BIGINT] - [12]
2020-11-25 21:27:58,306 TRACE  [main] BasicBinder: binding parameter [1] as [BIGINT] - [12]
2020-11-25 21:27:58,308 WARN   [main] ProblemService: Problem with 12 is not found
2020-11-25 21:27:59,057 DEBUG  [main] BasicTypeRegistry: Adding type registration boolean -> org.hibernate.type.BooleanType@a85644c
2020-11-25 21:27:59,057 DEBUG  [main] BasicTypeRegistry: Adding type registration boolean -> org.hibernate.type.BooleanType@a85644c
2020-11-25 21:27:59,058 DEBUG  [main] BasicTypeRegistry: Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@a85644c
2020-11-25 21:27:59,058 DEBUG  [main] BasicTypeRegistry: Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@30c19bff
2020-11-25 21:27:59,059 DEBUG  [main] BasicTypeRegistry: Adding type registration true_false -> org.hibernate.type.TrueFalseType@71664560
2020-11-25 21:27:59,059 DEBUG  [main] BasicTypeRegistry: Adding type registration yes_no -> org.hibernate.type.YesNoType@2443abd6
2020-11-25 21:27:59,060 DEBUG  [main] BasicTypeRegistry: Adding type registration byte -> org.hibernate.type.ByteType@5348d83c
2020-11-25 21:27:59,060 DEBUG  [main] BasicTypeRegistry: Adding type registration byte -> org.hibernate.type.ByteType@5348d83c
2020-11-25 21:27:59,060 DEBUG  [main] BasicTypeRegistry: Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@5348d83c
2020-11-25 21:27:59,061 DEBUG  [main] BasicTypeRegistry: Adding type registration character -> org.hibernate.type.CharacterType@d3e3085
2020-11-25 21:27:59,061 DEBUG  [main] BasicTypeRegistry: Adding type registration char -> org.hibernate.type.CharacterType@d3e3085
2020-11-25 21:27:59,061 DEBUG  [main] BasicTypeRegistry: Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@d3e3085
2020-11-25 21:27:59,061 DEBUG  [main] BasicTypeRegistry: Adding type registration short -> org.hibernate.type.ShortType@2de6f1bc
2020-11-25 21:27:59,061 DEBUG  [main] BasicTypeRegistry: Adding type registration short -> org.hibernate.type.ShortType@2de6f1bc
2020-11-25 21:27:59,061 DEBUG  [main] BasicTypeRegistry: Adding type registration java.lang.Short -> org.hibernate.type.ShortType@2de6f1bc
2020-11-25 21:27:59,062 DEBUG  [main] BasicTypeRegistry: Adding type registration integer -> org.hibernate.type.IntegerType@49cd946c
2020-11-25 21:27:59,062 DEBUG  [main] BasicTypeRegistry: Adding type registration int -> org.hibernate.type.IntegerType@49cd946c
2020-11-25 21:27:59,062 DEBUG  [main] BasicTypeRegistry: Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@49cd946c
2020-11-25 21:27:59,062 DEBUG  [main] BasicTypeRegistry: Adding type registration long -> org.hibernate.type.LongType@4e140497
2020-11-25 21:27:59,062 DEBUG  [main] BasicTypeRegistry: Adding type registration long -> org.hibernate.type.LongType@4e140497
2020-11-25 21:27:59,062 DEBUG  [main] BasicTypeRegistry: Adding type registration java.lang.Long -> org.hibernate.type.LongType@4e140497
2020-11-25 21:27:59,062 DEBUG  [main] BasicTypeRegistry: Adding type registration float -> org.hibernate.type.FloatType@4e80a001
2020-11-25 21:27:59,063 DEBUG  [main] BasicTypeRegistry: Adding type registration float -> org.hibernate.type.FloatType@4e80a001
2020-11-25 21:27:59,063 DEBUG  [main] BasicTypeRegistry: Adding type registration java.lang.Float -> org.hibernate.type.FloatType@4e80a001
2020-11-25 21:27:59,063 DEBUG  [main] BasicTypeRegistry: Adding type registration double -> org.hibernate.type.DoubleType@7455dacb
2020-11-25 21:27:59,063 DEBUG  [main] BasicTypeRegistry: Adding type registration double -> org.hibernate.type.DoubleType@7455dacb
2020-11-25 21:27:59,063 DEBUG  [main] BasicTypeRegistry: Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@7455dacb
2020-11-25 21:27:59,063 DEBUG  [main] BasicTypeRegistry: Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@52bd9a27
2020-11-25 21:27:59,063 DEBUG  [main] BasicTypeRegistry: Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@52bd9a27
2020-11-25 21:27:59,064 DEBUG  [main] BasicTypeRegistry: Adding type registration big_integer -> org.hibernate.type.BigIntegerType@5ed5b321
2020-11-25 21:27:59,064 DEBUG  [main] BasicTypeRegistry: Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@5ed5b321
2020-11-25 21:27:59,064 DEBUG  [main] BasicTypeRegistry: Adding type registration string -> org.hibernate.type.StringType@6d6bff89
2020-11-25 21:27:59,064 DEBUG  [main] BasicTypeRegistry: Adding type registration java.lang.String -> org.hibernate.type.StringType@6d6bff89
2020-11-25 21:27:59,064 DEBUG  [main] BasicTypeRegistry: Adding type registration nstring -> org.hibernate.type.StringNVarcharType@58eac00e
2020-11-25 21:27:59,064 DEBUG  [main] BasicTypeRegistry: Adding type registration ncharacter -> org.hibernate.type.CharacterNCharType@149c39b
2020-11-25 21:27:59,064 DEBUG  [main] BasicTypeRegistry: Adding type registration url -> org.hibernate.type.UrlType@739e8b96
2020-11-25 21:27:59,065 DEBUG  [main] BasicTypeRegistry: Adding type registration java.net.URL -> org.hibernate.type.UrlType@739e8b96
2020-11-25 21:27:59,065 DEBUG  [main] BasicTypeRegistry: Adding type registration Duration -> org.hibernate.type.DurationType@1953bc95
2020-11-25 21:27:59,065 DEBUG  [main] BasicTypeRegistry: Adding type registration java.time.Duration -> org.hibernate.type.DurationType@1953bc95
2020-11-25 21:27:59,065 DEBUG  [main] BasicTypeRegistry: Adding type registration Instant -> org.hibernate.type.InstantType@5a622fe8
2020-11-25 21:27:59,065 DEBUG  [main] BasicTypeRegistry: Adding type registration java.time.Instant -> org.hibernate.type.InstantType@5a622fe8
2020-11-25 21:27:59,065 DEBUG  [main] BasicTypeRegistry: Adding type registration LocalDateTime -> org.hibernate.type.LocalDateTimeType@4a89ef44
2020-11-25 21:27:59,066 DEBUG  [main] BasicTypeRegistry: Adding type registration java.time.LocalDateTime -> org.hibernate.type.LocalDateTimeType@4a89ef44
2020-11-25 21:27:59,066 DEBUG  [main] BasicTypeRegistry: Adding type registration LocalDate -> org.hibernate.type.LocalDateType@2eada095
2020-11-25 21:27:59,066 DEBUG  [main] BasicTypeRegistry: Adding type registration java.time.LocalDate -> org.hibernate.type.LocalDateType@2eada095
2020-11-25 21:27:59,066 DEBUG  [main] BasicTypeRegistry: Adding type registration LocalTime -> org.hibernate.type.LocalTimeType@6f1c3f18
2020-11-25 21:27:59,066 DEBUG  [main] BasicTypeRegistry: Adding type registration java.time.LocalTime -> org.hibernate.type.LocalTimeType@6f1c3f18
2020-11-25 21:27:59,066 DEBUG  [main] BasicTypeRegistry: Adding type registration OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@236fdf
2020-11-25 21:27:59,067 DEBUG  [main] BasicTypeRegistry: Adding type registration java.time.OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@236fdf
2020-11-25 21:27:59,067 DEBUG  [main] BasicTypeRegistry: Adding type registration OffsetTime -> org.hibernate.type.OffsetTimeType@93501be
2020-11-25 21:27:59,067 DEBUG  [main] BasicTypeRegistry: Adding type registration java.time.OffsetTime -> org.hibernate.type.OffsetTimeType@93501be
2020-11-25 21:27:59,067 DEBUG  [main] BasicTypeRegistry: Adding type registration ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@88b76f2
2020-11-25 21:27:59,067 DEBUG  [main] BasicTypeRegistry: Adding type registration java.time.ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@88b76f2
2020-11-25 21:27:59,067 DEBUG  [main] BasicTypeRegistry: Adding type registration date -> org.hibernate.type.DateType@c1e14f
2020-11-25 21:27:59,068 DEBUG  [main] BasicTypeRegistry: Adding type registration java.sql.Date -> org.hibernate.type.DateType@c1e14f
2020-11-25 21:27:59,068 DEBUG  [main] BasicTypeRegistry: Adding type registration time -> org.hibernate.type.TimeType@364b1061
2020-11-25 21:27:59,068 DEBUG  [main] BasicTypeRegistry: Adding type registration java.sql.Time -> org.hibernate.type.TimeType@364b1061
2020-11-25 21:27:59,068 DEBUG  [main] BasicTypeRegistry: Adding type registration timestamp -> org.hibernate.type.TimestampType@2c30c81d
2020-11-25 21:27:59,068 DEBUG  [main] BasicTypeRegistry: Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@2c30c81d
2020-11-25 21:27:59,068 DEBUG  [main] BasicTypeRegistry: Adding type registration java.util.Date -> org.hibernate.type.TimestampType@2c30c81d
2020-11-25 21:27:59,068 DEBUG  [main] BasicTypeRegistry: Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@19da993b
2020-11-25 21:27:59,069 DEBUG  [main] BasicTypeRegistry: Adding type registration calendar -> org.hibernate.type.CalendarType@741741d0
2020-11-25 21:27:59,069 DEBUG  [main] BasicTypeRegistry: Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@741741d0
2020-11-25 21:27:59,069 DEBUG  [main] BasicTypeRegistry: Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@741741d0
2020-11-25 21:27:59,069 DEBUG  [main] BasicTypeRegistry: Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@60e1d87c
2020-11-25 21:27:59,069 DEBUG  [main] BasicTypeRegistry: Adding type registration locale -> org.hibernate.type.LocaleType@e5c2463
2020-11-25 21:27:59,069 DEBUG  [main] BasicTypeRegistry: Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@e5c2463
2020-11-25 21:27:59,069 DEBUG  [main] BasicTypeRegistry: Adding type registration currency -> org.hibernate.type.CurrencyType@49edcb30
2020-11-25 21:27:59,069 DEBUG  [main] BasicTypeRegistry: Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@49edcb30
2020-11-25 21:27:59,070 DEBUG  [main] BasicTypeRegistry: Adding type registration timezone -> org.hibernate.type.TimeZoneType@4b033eac
2020-11-25 21:27:59,070 DEBUG  [main] BasicTypeRegistry: Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@4b033eac
2020-11-25 21:27:59,070 DEBUG  [main] BasicTypeRegistry: Adding type registration class -> org.hibernate.type.ClassType@4315c28c
2020-11-25 21:27:59,070 DEBUG  [main] BasicTypeRegistry: Adding type registration java.lang.Class -> org.hibernate.type.ClassType@4315c28c
2020-11-25 21:27:59,070 DEBUG  [main] BasicTypeRegistry: Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@76437e9b
2020-11-25 21:27:59,070 DEBUG  [main] BasicTypeRegistry: Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@76437e9b
2020-11-25 21:27:59,071 DEBUG  [main] BasicTypeRegistry: Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@2be818da
2020-11-25 21:27:59,071 DEBUG  [main] BasicTypeRegistry: Adding type registration binary -> org.hibernate.type.BinaryType@63bfdbcb
2020-11-25 21:27:59,071 DEBUG  [main] BasicTypeRegistry: Adding type registration byte[] -> org.hibernate.type.BinaryType@63bfdbcb
2020-11-25 21:27:59,071 DEBUG  [main] BasicTypeRegistry: Adding type registration [B -> org.hibernate.type.BinaryType@63bfdbcb
2020-11-25 21:27:59,071 DEBUG  [main] BasicTypeRegistry: Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@5c931134
2020-11-25 21:27:59,071 DEBUG  [main] BasicTypeRegistry: Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@5c931134
2020-11-25 21:27:59,072 DEBUG  [main] BasicTypeRegistry: Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@5c931134
2020-11-25 21:27:59,072 DEBUG  [main] BasicTypeRegistry: Adding type registration row_version -> org.hibernate.type.RowVersionType@4b97b3d2
2020-11-25 21:27:59,072 DEBUG  [main] BasicTypeRegistry: Adding type registration image -> org.hibernate.type.ImageType@96897c8
2020-11-25 21:27:59,072 DEBUG  [main] BasicTypeRegistry: Adding type registration characters -> org.hibernate.type.CharArrayType@3b9ac754
2020-11-25 21:27:59,072 DEBUG  [main] BasicTypeRegistry: Adding type registration char[] -> org.hibernate.type.CharArrayType@3b9ac754
2020-11-25 21:27:59,072 DEBUG  [main] BasicTypeRegistry: Adding type registration [C -> org.hibernate.type.CharArrayType@3b9ac754
2020-11-25 21:27:59,073 DEBUG  [main] BasicTypeRegistry: Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@79ba0a6f
2020-11-25 21:27:59,073 DEBUG  [main] BasicTypeRegistry: Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@79ba0a6f
2020-11-25 21:27:59,073 DEBUG  [main] BasicTypeRegistry: Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@79ba0a6f
2020-11-25 21:27:59,073 DEBUG  [main] BasicTypeRegistry: Adding type registration text -> org.hibernate.type.TextType@25a1a012
2020-11-25 21:27:59,073 DEBUG  [main] BasicTypeRegistry: Adding type registration ntext -> org.hibernate.type.NTextType@443a53df
2020-11-25 21:27:59,073 DEBUG  [main] BasicTypeRegistry: Adding type registration blob -> org.hibernate.type.BlobType@b950f82
2020-11-25 21:27:59,073 DEBUG  [main] BasicTypeRegistry: Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@b950f82
2020-11-25 21:27:59,074 DEBUG  [main] BasicTypeRegistry: Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@7a1a3468
2020-11-25 21:27:59,074 DEBUG  [main] BasicTypeRegistry: Adding type registration clob -> org.hibernate.type.ClobType@58dad04a
2020-11-25 21:27:59,074 DEBUG  [main] BasicTypeRegistry: Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@58dad04a
2020-11-25 21:27:59,074 DEBUG  [main] BasicTypeRegistry: Adding type registration nclob -> org.hibernate.type.NClobType@467045c4
2020-11-25 21:27:59,074 DEBUG  [main] BasicTypeRegistry: Adding type registration java.sql.NClob -> org.hibernate.type.NClobType@467045c4
2020-11-25 21:27:59,075 DEBUG  [main] BasicTypeRegistry: Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@6f7a2a5
2020-11-25 21:27:59,075 DEBUG  [main] BasicTypeRegistry: Adding type registration materialized_nclob -> org.hibernate.type.MaterializedNClobType@65c17e38
2020-11-25 21:27:59,075 DEBUG  [main] BasicTypeRegistry: Adding type registration serializable -> org.hibernate.type.SerializableType@66749eea
2020-11-25 21:27:59,075 DEBUG  [main] BasicTypeRegistry: Adding type registration object -> org.hibernate.type.ObjectType@15c6027d
2020-11-25 21:27:59,075 DEBUG  [main] BasicTypeRegistry: Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@15c6027d
2020-11-25 21:27:59,075 DEBUG  [main] BasicTypeRegistry: Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@21251e43
2020-11-25 21:27:59,075 DEBUG  [main] BasicTypeRegistry: Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@677274e7
2020-11-25 21:27:59,076 DEBUG  [main] BasicTypeRegistry: Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@54c17a2b
2020-11-25 21:27:59,076 DEBUG  [main] BasicTypeRegistry: Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@16279a5d
2020-11-25 21:27:59,076 DEBUG  [main] BasicTypeRegistry: Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@1f7949dc
2020-11-25 21:27:59,076 DEBUG  [main] BasicTypeRegistry: Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@6bd8c398
2020-11-25 21:27:59,076 DEBUG  [main] BasicTypeRegistry: Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@3497ecea
2020-11-25 21:27:59,076 DEBUG  [main] BasicTypeRegistry: Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@1e487d57
2020-11-25 21:27:59,087 DEBUG  [main] TypeConfiguration$Scope: Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@4f836d9] to MetadataBuildingContext [org.hibernate.boot.internal.MetadataBuildingContextRootImpl@2a4f1bc5]
2020-11-25 21:27:59,097 DEBUG  [main] EnumType: Using NAMED-based conversion for Enum com.sf.back.entities.Kind
2020-11-25 21:27:59,100 DEBUG  [main] EnumType: Using NAMED-based conversion for Enum com.sf.back.entities.Kind
2020-11-25 21:27:59,131 DEBUG  [main] TypeConfiguration$Scope: Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@4f836d9] to SessionFactoryImpl [org.hibernate.internal.SessionFactoryImpl@45a4587d]
2020-11-25 21:27:59,132 DEBUG  [main] EnumType: Using NAMED-based conversion for Enum com.sf.back.entities.Kind
2020-11-25 21:27:59,132 DEBUG  [main] EnumType: Using NAMED-based conversion for Enum com.sf.back.entities.Kind
2020-11-25 21:27:59,135 DEBUG  [main] EnumType: Using NAMED-based conversion for Enum com.sf.back.entities.Kind
2020-11-25 21:27:59,135 DEBUG  [main] EnumType: Using NAMED-based conversion for Enum com.sf.back.entities.Kind
2020-11-25 21:27:59,143 DEBUG  [main] EnumType: Using NAMED-based conversion for Enum com.sf.back.entities.Kind
2020-11-25 21:27:59,143 DEBUG  [main] EnumType: Using NAMED-based conversion for Enum com.sf.back.entities.Kind
2020-11-25 21:27:59,149 DEBUG  [main] EnumType: Using NAMED-based conversion for Enum com.sf.back.entities.Kind
2020-11-25 21:27:59,157 TRACE  [main] TypeConfiguration$Scope: Handling #sessionFactoryCreated from [org.hibernate.internal.SessionFactoryImpl@45a4587d] for TypeConfiguration
2020-11-25 21:27:59,282 WARN   [main] JpaBaseConfiguration$JpaWebConfiguration: spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2020-11-25 21:27:59,399 WARN   [main] GroovyTemplateAutoConfiguration: Cannot find template location: classpath:/templates/ (please add some templates, check your Groovy configuration, or set spring.groovy.template.check-template-location=false)
2020-11-25 21:27:59,428 TRACE  [main] BasicBinder: binding parameter [1] as [BLOB] - [[70, 105, 110, 100, 32, 97, 108, 108, 32, 114, 111, 111, 116, 115, 32, 111, 102, 32, 103, 105, 118, 101, 110, 32, 112, 111, 108, 121, 110, 111, 109, 105, 97, 108]]
2020-11-25 21:27:59,428 TRACE  [main] BasicBinder: binding parameter [2] as [BOOLEAN] - [false]
2020-11-25 21:27:59,429 TRACE  [main] BasicBinder: binding parameter [3] as [VARCHAR] - [POLYNOMIAL]
2020-11-25 21:27:59,429 TRACE  [main] BasicBinder: binding parameter [4] as [INTEGER] - [1]
2020-11-25 21:27:59,429 TRACE  [main] BasicBinder: binding parameter [5] as [BIGINT] - [null]
2020-11-25 21:27:59,429 TRACE  [main] BasicBinder: binding parameter [6] as [INTEGER] - [6]
2020-11-25 21:27:59,431 TRACE  [main] BasicBinder: binding parameter [1] as [BLOB] - [null]
2020-11-25 21:27:59,431 TRACE  [main] BasicBinder: binding parameter [2] as [DOUBLE] - [1.0]
2020-11-25 21:27:59,431 TRACE  [main] BasicBinder: binding parameter [3] as [INTEGER] - [0]
2020-11-25 21:27:59,432 TRACE  [main] BasicBinder: binding parameter [4] as [BOOLEAN] - [true]
2020-11-25 21:27:59,432 TRACE  [main] BasicBinder: binding parameter [5] as [INTEGER] - [0]
2020-11-25 21:27:59,432 TRACE  [main] BasicBinder: binding parameter [6] as [BIGINT] - [1]
2020-11-25 21:27:59,433 TRACE  [main] BasicBinder: binding parameter [1] as [BLOB] - [null]
2020-11-25 21:27:59,434 TRACE  [main] BasicBinder: binding parameter [2] as [DOUBLE] - [2.0]
2020-11-25 21:27:59,434 TRACE  [main] BasicBinder: binding parameter [3] as [INTEGER] - [0]
2020-11-25 21:27:59,434 TRACE  [main] BasicBinder: binding parameter [4] as [BOOLEAN] - [true]
2020-11-25 21:27:59,434 TRACE  [main] BasicBinder: binding parameter [5] as [INTEGER] - [1]
2020-11-25 21:27:59,435 TRACE  [main] BasicBinder: binding parameter [6] as [BIGINT] - [1]
2020-11-25 21:27:59,436 TRACE  [main] BasicBinder: binding parameter [1] as [BLOB] - [null]
2020-11-25 21:27:59,436 TRACE  [main] BasicBinder: binding parameter [2] as [DOUBLE] - [1.0]
2020-11-25 21:27:59,436 TRACE  [main] BasicBinder: binding parameter [3] as [INTEGER] - [0]
2020-11-25 21:27:59,436 TRACE  [main] BasicBinder: binding parameter [4] as [BOOLEAN] - [true]
2020-11-25 21:27:59,437 TRACE  [main] BasicBinder: binding parameter [5] as [INTEGER] - [2]
2020-11-25 21:27:59,437 TRACE  [main] BasicBinder: binding parameter [6] as [BIGINT] - [1]
2020-11-25 21:27:59,439 TRACE  [main] BasicBinder: binding parameter [1] as [BLOB] - [null]
2020-11-25 21:27:59,439 TRACE  [main] BasicBinder: binding parameter [2] as [DOUBLE] - [1.0]
2020-11-25 21:27:59,439 TRACE  [main] BasicBinder: binding parameter [3] as [INTEGER] - [0]
2020-11-25 21:27:59,439 TRACE  [main] BasicBinder: binding parameter [4] as [BOOLEAN] - [false]
2020-11-25 21:27:59,439 TRACE  [main] BasicBinder: binding parameter [5] as [INTEGER] - [0]
2020-11-25 21:27:59,440 TRACE  [main] BasicBinder: binding parameter [6] as [BIGINT] - [1]
2020-11-25 21:27:59,441 TRACE  [main] BasicBinder: binding parameter [1] as [BLOB] - [null]
2020-11-25 21:27:59,441 TRACE  [main] BasicBinder: binding parameter [2] as [DOUBLE] - [1.0]
2020-11-25 21:27:59,441 TRACE  [main] BasicBinder: binding parameter [3] as [INTEGER] - [0]
2020-11-25 21:27:59,441 TRACE  [main] BasicBinder: binding parameter [4] as [BOOLEAN] - [false]
2020-11-25 21:27:59,441 TRACE  [main] BasicBinder: binding parameter [5] as [INTEGER] - [1]
2020-11-25 21:27:59,441 TRACE  [main] BasicBinder: binding parameter [6] as [BIGINT] - [1]
2020-11-25 21:27:59,745 WARN   [SpringContextShutdownHook] SqlExceptionHelper: SQL Error: 90121, SQLState: 90121
2020-11-25 21:27:59,750 ERROR  [SpringContextShutdownHook] SqlExceptionHelper: Database is already closed (to disable automatic closing at VM shutdown, add ";DB_CLOSE_ON_EXIT=FALSE" to the db URL) [90121-200]
2020-11-25 21:27:59,751 WARN   [SpringContextShutdownHook] SqlExceptionHelper: SQL Error: 90121, SQLState: 90121
2020-11-25 21:27:59,751 ERROR  [SpringContextShutdownHook] SqlExceptionHelper: Database is already closed (to disable automatic closing at VM shutdown, add ";DB_CLOSE_ON_EXIT=FALSE" to the db URL) [90121-200]
2020-11-25 21:27:59,751 WARN   [SpringContextShutdownHook] DisposableBeanAdapter: Invocation of destroy method failed on bean with name 'entityManagerFactory': org.hibernate.exception.JDBCConnectionException: Unable to release JDBC Connection used for DDL execution
2020-11-25 21:27:59,938 TRACE  [SpringContextShutdownHook] TypeConfiguration$Scope: Handling #sessionFactoryClosed from [org.hibernate.internal.SessionFactoryImpl@41d53813] for TypeConfiguration
2020-11-25 21:27:59,938 TRACE  [SpringContextShutdownHook] TypeConfiguration$Scope: Handling #sessionFactoryClosed from [org.hibernate.internal.SessionFactoryImpl@7996d0d4] for TypeConfiguration
2020-11-25 21:27:59,938 DEBUG  [SpringContextShutdownHook] TypeConfiguration$Scope: Un-scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration$Scope@2e3b466a] from SessionFactory [org.hibernate.internal.SessionFactoryImpl@41d53813]
2020-11-25 21:27:59,938 DEBUG  [SpringContextShutdownHook] TypeConfiguration$Scope: Un-scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration$Scope@7ed0ce97] from SessionFactory [org.hibernate.internal.SessionFactoryImpl@7996d0d4]
2020-11-25 21:28:47,728 WARN   [main] dev-updater: Use the './' prefix for files in JAR files: 'flow-component-renderer.js', please update your component.
2020-11-25 21:28:58,042 WARN   [main] AnnotationConfigServletWebServerApplicationContext: Exception encountered during context initialization - cancelling refresh attempt: org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'entityManagerFactory' defined in class path resource [org/springframework/boot/autoconfigure/orm/jpa/HibernateJpaConfiguration.class]: Invocation of init method failed; nested exception is org.hibernate.AnnotationException: No identifier specified for entity: com.sf.back.entities.Matrix
2020-11-25 21:28:58,072 WARN   [main] WebappClassLoaderBase: The web application [ROOT] appears to have started a thread named [Thread-4] but has failed to stop it. This is very likely to create a memory leak. Stack trace of thread:
 java.net.DualStackPlainSocketImpl.accept0(Native Method)
 java.net.DualStackPlainSocketImpl.socketAccept(DualStackPlainSocketImpl.java:131)
 java.net.AbstractPlainSocketImpl.accept(AbstractPlainSocketImpl.java:409)
 java.net.PlainSocketImpl.accept(PlainSocketImpl.java:199)
 java.net.ServerSocket.implAccept(ServerSocket.java:545)
 java.net.ServerSocket.accept(ServerSocket.java:513)
 com.vaadin.flow.server.DevServerWatchDog$WatchDogServer.run(DevServerWatchDog.java:58)
 java.lang.Thread.run(Thread.java:748)
2020-11-25 21:28:58,074 WARN   [main] WebappClassLoaderBase: The web application [ROOT] appears to have started a thread named [webpack] but has failed to stop it. This is very likely to create a memory leak. Stack trace of thread:
 java.io.FileInputStream.readBytes(Native Method)
 java.io.FileInputStream.read(FileInputStream.java:255)
 java.io.BufferedInputStream.read1(BufferedInputStream.java:284)
 java.io.BufferedInputStream.read(BufferedInputStream.java:345)
 sun.nio.cs.StreamDecoder.readBytes(StreamDecoder.java:284)
 sun.nio.cs.StreamDecoder.implRead(StreamDecoder.java:326)
 sun.nio.cs.StreamDecoder.read(StreamDecoder.java:178)
 java.io.InputStreamReader.read(InputStreamReader.java:184)
 java.io.BufferedReader.fill(BufferedReader.java:161)
 java.io.BufferedReader.readLine(BufferedReader.java:324)
 java.io.BufferedReader.readLine(BufferedReader.java:389)
 com.vaadin.flow.server.DevModeHandler.readLinesLoop(DevModeHandler.java:450)
 com.vaadin.flow.server.DevModeHandler.lambda$logStream$1(DevModeHandler.java:429)
 com.vaadin.flow.server.DevModeHandler$$Lambda$561/1627887210.run(Unknown Source)
 java.lang.Thread.run(Thread.java:748)
2020-11-25 21:28:58,098 ERROR  [main] SpringApplication: Application run failed
org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'entityManagerFactory' defined in class path resource [org/springframework/boot/autoconfigure/orm/jpa/HibernateJpaConfiguration.class]: Invocation of init method failed; nested exception is org.hibernate.AnnotationException: No identifier specified for entity: com.sf.back.entities.Matrix
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1803)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:595)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:517)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:323)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:222)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:321)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:202)
	at org.springframework.context.support.AbstractApplicationContext.getBean(AbstractApplicationContext.java:1108)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:868)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:550)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.refresh(ServletWebServerApplicationContext.java:141)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:747)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:397)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:315)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1226)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1215)
	at com.sf.VaadinMathSolverApplication.main(VaadinMathSolverApplication.java:23)
Caused by: org.hibernate.AnnotationException: No identifier specified for entity: com.sf.back.entities.Matrix
	at org.hibernate.cfg.InheritanceState.determineDefaultAccessType(InheritanceState.java:266)
	at org.hibernate.cfg.InheritanceState.getElementsToProcess(InheritanceState.java:211)
	at org.hibernate.cfg.AnnotationBinder.bindClass(AnnotationBinder.java:781)
	at org.hibernate.boot.model.source.internal.annotations.AnnotationMetadataSourceProcessorImpl.processEntityHierarchies(AnnotationMetadataSourceProcessorImpl.java:254)
	at org.hibernate.boot.model.process.spi.MetadataBuildingProcess$1.processEntityHierarchies(MetadataBuildingProcess.java:230)
	at org.hibernate.boot.model.process.spi.MetadataBuildingProcess.complete(MetadataBuildingProcess.java:273)
	at org.hibernate.jpa.boot.internal.EntityManagerFactoryBuilderImpl.metadata(EntityManagerFactoryBuilderImpl.java:1214)
	at org.hibernate.jpa.boot.internal.EntityManagerFactoryBuilderImpl.build(EntityManagerFactoryBuilderImpl.java:1245)
	at org.springframework.orm.jpa.vendor.SpringHibernateJpaPersistenceProvider.createContainerEntityManagerFactory(SpringHibernateJpaPersistenceProvider.java:58)
	at org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean.createNativeEntityManagerFactory(LocalContainerEntityManagerFactoryBean.java:365)
	at org.springframework.orm.jpa.AbstractEntityManagerFactoryBean.buildNativeEntityManagerFactory(AbstractEntityManagerFactoryBean.java:391)
	at org.springframework.orm.jpa.AbstractEntityManagerFactoryBean.afterPropertiesSet(AbstractEntityManagerFactoryBean.java:378)
	at org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean.afterPropertiesSet(LocalContainerEntityManagerFactoryBean.java:341)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1862)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1799)
	... 16 common frames omitted
2020-11-25 21:30:36,320 DEBUG  [main] BasicTypeRegistry: Adding type registration boolean -> org.hibernate.type.BooleanType@902fdbe
2020-11-25 21:30:36,396 DEBUG  [main] BasicTypeRegistry: Adding type registration boolean -> org.hibernate.type.BooleanType@902fdbe
2020-11-25 21:30:36,397 DEBUG  [main] BasicTypeRegistry: Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@902fdbe
2020-11-25 21:30:36,398 DEBUG  [main] BasicTypeRegistry: Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@4a058df8
2020-11-25 21:30:36,406 DEBUG  [main] BasicTypeRegistry: Adding type registration true_false -> org.hibernate.type.TrueFalseType@1283ca23
2020-11-25 21:30:36,409 DEBUG  [main] BasicTypeRegistry: Adding type registration yes_no -> org.hibernate.type.YesNoType@733e6df7
2020-11-25 21:30:36,412 DEBUG  [main] BasicTypeRegistry: Adding type registration byte -> org.hibernate.type.ByteType@32227215
2020-11-25 21:30:36,416 DEBUG  [main] BasicTypeRegistry: Adding type registration byte -> org.hibernate.type.ByteType@32227215
2020-11-25 21:30:36,418 DEBUG  [main] BasicTypeRegistry: Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@32227215
2020-11-25 21:30:36,421 DEBUG  [main] BasicTypeRegistry: Adding type registration character -> org.hibernate.type.CharacterType@59845579
2020-11-25 21:30:36,425 DEBUG  [main] BasicTypeRegistry: Adding type registration char -> org.hibernate.type.CharacterType@59845579
2020-11-25 21:30:36,426 DEBUG  [main] BasicTypeRegistry: Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@59845579
2020-11-25 21:30:36,430 DEBUG  [main] BasicTypeRegistry: Adding type registration short -> org.hibernate.type.ShortType@4d4436d0
2020-11-25 21:30:36,431 DEBUG  [main] BasicTypeRegistry: Adding type registration short -> org.hibernate.type.ShortType@4d4436d0
2020-11-25 21:30:36,432 DEBUG  [main] BasicTypeRegistry: Adding type registration java.lang.Short -> org.hibernate.type.ShortType@4d4436d0
2020-11-25 21:30:36,446 DEBUG  [main] BasicTypeRegistry: Adding type registration integer -> org.hibernate.type.IntegerType@6010d0d1
2020-11-25 21:30:36,447 DEBUG  [main] BasicTypeRegistry: Adding type registration int -> org.hibernate.type.IntegerType@6010d0d1
2020-11-25 21:30:36,448 DEBUG  [main] BasicTypeRegistry: Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@6010d0d1
2020-11-25 21:30:36,450 DEBUG  [main] BasicTypeRegistry: Adding type registration long -> org.hibernate.type.LongType@5e9bbd9d
2020-11-25 21:30:36,450 DEBUG  [main] BasicTypeRegistry: Adding type registration long -> org.hibernate.type.LongType@5e9bbd9d
2020-11-25 21:30:36,450 DEBUG  [main] BasicTypeRegistry: Adding type registration java.lang.Long -> org.hibernate.type.LongType@5e9bbd9d
2020-11-25 21:30:36,452 DEBUG  [main] BasicTypeRegistry: Adding type registration float -> org.hibernate.type.FloatType@5b1efaaf
2020-11-25 21:30:36,453 DEBUG  [main] BasicTypeRegistry: Adding type registration float -> org.hibernate.type.FloatType@5b1efaaf
2020-11-25 21:30:36,453 DEBUG  [main] BasicTypeRegistry: Adding type registration java.lang.Float -> org.hibernate.type.FloatType@5b1efaaf
2020-11-25 21:30:36,455 DEBUG  [main] BasicTypeRegistry: Adding type registration double -> org.hibernate.type.DoubleType@4c731956
2020-11-25 21:30:36,455 DEBUG  [main] BasicTypeRegistry: Adding type registration double -> org.hibernate.type.DoubleType@4c731956
2020-11-25 21:30:36,456 DEBUG  [main] BasicTypeRegistry: Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@4c731956
2020-11-25 21:30:36,458 DEBUG  [main] BasicTypeRegistry: Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@51c65a43
2020-11-25 21:30:36,459 DEBUG  [main] BasicTypeRegistry: Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@51c65a43
2020-11-25 21:30:36,461 DEBUG  [main] BasicTypeRegistry: Adding type registration big_integer -> org.hibernate.type.BigIntegerType@31acfd4e
2020-11-25 21:30:36,462 DEBUG  [main] BasicTypeRegistry: Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@31acfd4e
2020-11-25 21:30:36,464 DEBUG  [main] BasicTypeRegistry: Adding type registration string -> org.hibernate.type.StringType@1c30cb85
2020-11-25 21:30:36,464 DEBUG  [main] BasicTypeRegistry: Adding type registration java.lang.String -> org.hibernate.type.StringType@1c30cb85
2020-11-25 21:30:36,465 DEBUG  [main] BasicTypeRegistry: Adding type registration nstring -> org.hibernate.type.StringNVarcharType@7634f2b
2020-11-25 21:30:36,467 DEBUG  [main] BasicTypeRegistry: Adding type registration ncharacter -> org.hibernate.type.CharacterNCharType@4fba8eec
2020-11-25 21:30:36,483 DEBUG  [main] BasicTypeRegistry: Adding type registration url -> org.hibernate.type.UrlType@4d98e41b
2020-11-25 21:30:36,484 DEBUG  [main] BasicTypeRegistry: Adding type registration java.net.URL -> org.hibernate.type.UrlType@4d98e41b
2020-11-25 21:30:36,493 DEBUG  [main] BasicTypeRegistry: Adding type registration Duration -> org.hibernate.type.DurationType@d54d0f5
2020-11-25 21:30:36,494 DEBUG  [main] BasicTypeRegistry: Adding type registration java.time.Duration -> org.hibernate.type.DurationType@d54d0f5
2020-11-25 21:30:36,497 DEBUG  [main] BasicTypeRegistry: Adding type registration Instant -> org.hibernate.type.InstantType@6acffb2d
2020-11-25 21:30:36,498 DEBUG  [main] BasicTypeRegistry: Adding type registration java.time.Instant -> org.hibernate.type.InstantType@6acffb2d
2020-11-25 21:30:36,504 DEBUG  [main] BasicTypeRegistry: Adding type registration LocalDateTime -> org.hibernate.type.LocalDateTimeType@5f025000
2020-11-25 21:30:36,505 DEBUG  [main] BasicTypeRegistry: Adding type registration java.time.LocalDateTime -> org.hibernate.type.LocalDateTimeType@5f025000
2020-11-25 21:30:36,508 DEBUG  [main] BasicTypeRegistry: Adding type registration LocalDate -> org.hibernate.type.LocalDateType@49c099b
2020-11-25 21:30:36,510 DEBUG  [main] BasicTypeRegistry: Adding type registration java.time.LocalDate -> org.hibernate.type.LocalDateType@49c099b
2020-11-25 21:30:36,513 DEBUG  [main] BasicTypeRegistry: Adding type registration LocalTime -> org.hibernate.type.LocalTimeType@188a5fc2
2020-11-25 21:30:36,514 DEBUG  [main] BasicTypeRegistry: Adding type registration java.time.LocalTime -> org.hibernate.type.LocalTimeType@188a5fc2
2020-11-25 21:30:36,516 DEBUG  [main] BasicTypeRegistry: Adding type registration OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@415d88de
2020-11-25 21:30:36,518 DEBUG  [main] BasicTypeRegistry: Adding type registration java.time.OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@415d88de
2020-11-25 21:30:36,520 DEBUG  [main] BasicTypeRegistry: Adding type registration OffsetTime -> org.hibernate.type.OffsetTimeType@4971f459
2020-11-25 21:30:36,521 DEBUG  [main] BasicTypeRegistry: Adding type registration java.time.OffsetTime -> org.hibernate.type.OffsetTimeType@4971f459
2020-11-25 21:30:36,527 DEBUG  [main] BasicTypeRegistry: Adding type registration ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@48581a3b
2020-11-25 21:30:36,528 DEBUG  [main] BasicTypeRegistry: Adding type registration java.time.ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@48581a3b
2020-11-25 21:30:36,531 DEBUG  [main] BasicTypeRegistry: Adding type registration date -> org.hibernate.type.DateType@2a140ce5
2020-11-25 21:30:36,531 DEBUG  [main] BasicTypeRegistry: Adding type registration java.sql.Date -> org.hibernate.type.DateType@2a140ce5
2020-11-25 21:30:36,534 DEBUG  [main] BasicTypeRegistry: Adding type registration time -> org.hibernate.type.TimeType@6da4feeb
2020-11-25 21:30:36,534 DEBUG  [main] BasicTypeRegistry: Adding type registration java.sql.Time -> org.hibernate.type.TimeType@6da4feeb
2020-11-25 21:30:36,536 DEBUG  [main] BasicTypeRegistry: Adding type registration timestamp -> org.hibernate.type.TimestampType@88b76f2
2020-11-25 21:30:36,543 DEBUG  [main] BasicTypeRegistry: Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@88b76f2
2020-11-25 21:30:36,579 DEBUG  [main] BasicTypeRegistry: Adding type registration java.util.Date -> org.hibernate.type.TimestampType@88b76f2
2020-11-25 21:30:36,583 DEBUG  [main] BasicTypeRegistry: Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@1e1237ab
2020-11-25 21:30:36,586 DEBUG  [main] BasicTypeRegistry: Adding type registration calendar -> org.hibernate.type.CalendarType@226de93c
2020-11-25 21:30:36,587 DEBUG  [main] BasicTypeRegistry: Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@226de93c
2020-11-25 21:30:36,589 DEBUG  [main] BasicTypeRegistry: Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@226de93c
2020-11-25 21:30:36,594 DEBUG  [main] BasicTypeRegistry: Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@7b222230
2020-11-25 21:30:36,596 DEBUG  [main] BasicTypeRegistry: Adding type registration locale -> org.hibernate.type.LocaleType@13d019a4
2020-11-25 21:30:36,597 DEBUG  [main] BasicTypeRegistry: Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@13d019a4
2020-11-25 21:30:36,599 DEBUG  [main] BasicTypeRegistry: Adding type registration currency -> org.hibernate.type.CurrencyType@3380ca3d
2020-11-25 21:30:36,600 DEBUG  [main] BasicTypeRegistry: Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@3380ca3d
2020-11-25 21:30:36,602 DEBUG  [main] BasicTypeRegistry: Adding type registration timezone -> org.hibernate.type.TimeZoneType@5f9f3e58
2020-11-25 21:30:36,602 DEBUG  [main] BasicTypeRegistry: Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@5f9f3e58
2020-11-25 21:30:36,604 DEBUG  [main] BasicTypeRegistry: Adding type registration class -> org.hibernate.type.ClassType@7e5b621b
2020-11-25 21:30:36,606 DEBUG  [main] BasicTypeRegistry: Adding type registration java.lang.Class -> org.hibernate.type.ClassType@7e5b621b
2020-11-25 21:30:36,609 DEBUG  [main] BasicTypeRegistry: Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@647b9364
2020-11-25 21:30:36,612 DEBUG  [main] BasicTypeRegistry: Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@647b9364
2020-11-25 21:30:36,613 DEBUG  [main] BasicTypeRegistry: Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@59303963
2020-11-25 21:30:36,615 DEBUG  [main] BasicTypeRegistry: Adding type registration binary -> org.hibernate.type.BinaryType@69c532af
2020-11-25 21:30:36,616 DEBUG  [main] BasicTypeRegistry: Adding type registration byte[] -> org.hibernate.type.BinaryType@69c532af
2020-11-25 21:30:36,617 DEBUG  [main] BasicTypeRegistry: Adding type registration [B -> org.hibernate.type.BinaryType@69c532af
2020-11-25 21:30:36,621 DEBUG  [main] BasicTypeRegistry: Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@8fd91d1
2020-11-25 21:30:36,622 DEBUG  [main] BasicTypeRegistry: Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@8fd91d1
2020-11-25 21:30:36,623 DEBUG  [main] BasicTypeRegistry: Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@8fd91d1
2020-11-25 21:30:36,625 DEBUG  [main] BasicTypeRegistry: Adding type registration row_version -> org.hibernate.type.RowVersionType@236ae13d
2020-11-25 21:30:36,626 DEBUG  [main] BasicTypeRegistry: Adding type registration image -> org.hibernate.type.ImageType@46320c9a
2020-11-25 21:30:36,629 DEBUG  [main] BasicTypeRegistry: Adding type registration characters -> org.hibernate.type.CharArrayType@7af0affa
2020-11-25 21:30:36,630 DEBUG  [main] BasicTypeRegistry: Adding type registration char[] -> org.hibernate.type.CharArrayType@7af0affa
2020-11-25 21:30:36,631 DEBUG  [main] BasicTypeRegistry: Adding type registration [C -> org.hibernate.type.CharArrayType@7af0affa
2020-11-25 21:30:36,647 DEBUG  [main] BasicTypeRegistry: Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@1d7eb170
2020-11-25 21:30:36,649 DEBUG  [main] BasicTypeRegistry: Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@1d7eb170
2020-11-25 21:30:36,650 DEBUG  [main] BasicTypeRegistry: Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@1d7eb170
2020-11-25 21:30:36,651 DEBUG  [main] BasicTypeRegistry: Adding type registration text -> org.hibernate.type.TextType@230a73f2
2020-11-25 21:30:36,653 DEBUG  [main] BasicTypeRegistry: Adding type registration ntext -> org.hibernate.type.NTextType@798deee8
2020-11-25 21:30:36,657 DEBUG  [main] BasicTypeRegistry: Adding type registration blob -> org.hibernate.type.BlobType@5e002356
2020-11-25 21:30:36,658 DEBUG  [main] BasicTypeRegistry: Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@5e002356
2020-11-25 21:30:36,659 DEBUG  [main] BasicTypeRegistry: Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@267f9765
2020-11-25 21:30:36,661 DEBUG  [main] BasicTypeRegistry: Adding type registration clob -> org.hibernate.type.ClobType@443a53df
2020-11-25 21:30:36,662 DEBUG  [main] BasicTypeRegistry: Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@443a53df
2020-11-25 21:30:36,664 DEBUG  [main] BasicTypeRegistry: Adding type registration nclob -> org.hibernate.type.NClobType@b950f82
2020-11-25 21:30:36,665 DEBUG  [main] BasicTypeRegistry: Adding type registration java.sql.NClob -> org.hibernate.type.NClobType@b950f82
2020-11-25 21:30:36,666 DEBUG  [main] BasicTypeRegistry: Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@7a1a3468
2020-11-25 21:30:36,667 DEBUG  [main] BasicTypeRegistry: Adding type registration materialized_nclob -> org.hibernate.type.MaterializedNClobType@629e8212
2020-11-25 21:30:36,670 DEBUG  [main] BasicTypeRegistry: Adding type registration serializable -> org.hibernate.type.SerializableType@4d0cc83e
2020-11-25 21:30:36,676 DEBUG  [main] BasicTypeRegistry: Adding type registration object -> org.hibernate.type.ObjectType@34d480b9
2020-11-25 21:30:36,677 DEBUG  [main] BasicTypeRegistry: Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@34d480b9
2020-11-25 21:30:36,679 DEBUG  [main] BasicTypeRegistry: Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@7135ce0a
2020-11-25 21:30:36,679 DEBUG  [main] BasicTypeRegistry: Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@617449dd
2020-11-25 21:30:36,680 DEBUG  [main] BasicTypeRegistry: Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@2e590b
2020-11-25 21:30:36,680 DEBUG  [main] BasicTypeRegistry: Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@42ef042a
2020-11-25 21:30:36,680 DEBUG  [main] BasicTypeRegistry: Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@1df5c7e3
2020-11-25 21:30:36,681 DEBUG  [main] BasicTypeRegistry: Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@5e0c4f21
2020-11-25 21:30:36,681 DEBUG  [main] BasicTypeRegistry: Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@2c18a3ea
2020-11-25 21:30:36,681 DEBUG  [main] BasicTypeRegistry: Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@166c2c17
2020-11-25 21:30:37,506 DEBUG  [main] TypeConfiguration$Scope: Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@7f2b584b] to MetadataBuildingContext [org.hibernate.boot.internal.MetadataBuildingContextRootImpl@5866731]
2020-11-25 21:30:37,702 DEBUG  [main] EnumType: Using NAMED-based conversion for Enum com.sf.back.entities.Kind
2020-11-25 21:30:37,767 DEBUG  [main] EnumType: Using NAMED-based conversion for Enum com.sf.back.entities.Kind
2020-11-25 21:30:37,864 DEBUG  [main] TypeConfiguration$Scope: Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@7f2b584b] to SessionFactoryImpl [org.hibernate.internal.SessionFactoryImpl@45d7495e]
2020-11-25 21:30:38,099 DEBUG  [main] EnumType: Using NAMED-based conversion for Enum com.sf.back.entities.Kind
2020-11-25 21:30:38,100 DEBUG  [main] EnumType: Using NAMED-based conversion for Enum com.sf.back.entities.Kind
2020-11-25 21:30:38,436 DEBUG  [main] EnumType: Using NAMED-based conversion for Enum com.sf.back.entities.Kind
2020-11-25 21:30:38,437 DEBUG  [main] EnumType: Using NAMED-based conversion for Enum com.sf.back.entities.Kind
2020-11-25 21:30:38,719 DEBUG  [main] EnumType: Using NAMED-based conversion for Enum com.sf.back.entities.Kind
2020-11-25 21:30:38,719 DEBUG  [main] EnumType: Using NAMED-based conversion for Enum com.sf.back.entities.Kind
2020-11-25 21:30:38,787 DEBUG  [main] EnumType: Using NAMED-based conversion for Enum com.sf.back.entities.Kind
2020-11-25 21:30:38,821 TRACE  [main] TypeConfiguration$Scope: Handling #sessionFactoryCreated from [org.hibernate.internal.SessionFactoryImpl@45d7495e] for TypeConfiguration
2020-11-25 21:30:39,737 WARN   [main] GlobalSettings: Dozer configuration file not found: dozer.properties.  Using defaults for all Dozer global properties.
2020-11-25 21:30:40,469 WARN   [main] JpaBaseConfiguration$JpaWebConfiguration: spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2020-11-25 21:30:41,243 WARN   [main] GroovyTemplateAutoConfiguration: Cannot find template location: classpath:/templates/ (please add some templates, check your Groovy configuration, or set spring.groovy.template.check-template-location=false)
2020-11-25 21:30:41,850 TRACE  [main] BasicBinder: binding parameter [1] as [BLOB] - [[70, 105, 110, 100, 32, 97, 108, 108, 32, 114, 111, 111, 116, 115, 32, 111, 102, 32, 103, 105, 118, 101, 110, 32, 112, 111, 108, 121, 110, 111, 109, 105, 97, 108]]
2020-11-25 21:30:41,852 TRACE  [main] BasicBinder: binding parameter [2] as [BOOLEAN] - [false]
2020-11-25 21:30:41,852 TRACE  [main] BasicBinder: binding parameter [3] as [VARCHAR] - [POLYNOMIAL]
2020-11-25 21:30:41,853 TRACE  [main] BasicBinder: binding parameter [4] as [INTEGER] - [1]
2020-11-25 21:30:41,854 TRACE  [main] BasicBinder: binding parameter [5] as [BIGINT] - [null]
2020-11-25 21:30:41,854 TRACE  [main] BasicBinder: binding parameter [6] as [INTEGER] - [6]
2020-11-25 21:30:41,868 TRACE  [main] BasicBinder: binding parameter [1] as [BLOB] - [null]
2020-11-25 21:30:41,869 TRACE  [main] BasicBinder: binding parameter [2] as [DOUBLE] - [1.0]
2020-11-25 21:30:41,870 TRACE  [main] BasicBinder: binding parameter [3] as [INTEGER] - [0]
2020-11-25 21:30:41,872 TRACE  [main] BasicBinder: binding parameter [4] as [BOOLEAN] - [true]
2020-11-25 21:30:41,873 TRACE  [main] BasicBinder: binding parameter [5] as [INTEGER] - [0]
2020-11-25 21:30:41,875 TRACE  [main] BasicBinder: binding parameter [6] as [BIGINT] - [1]
2020-11-25 21:30:41,879 TRACE  [main] BasicBinder: binding parameter [1] as [BLOB] - [null]
2020-11-25 21:30:41,881 TRACE  [main] BasicBinder: binding parameter [2] as [DOUBLE] - [2.0]
2020-11-25 21:30:41,882 TRACE  [main] BasicBinder: binding parameter [3] as [INTEGER] - [0]
2020-11-25 21:30:41,883 TRACE  [main] BasicBinder: binding parameter [4] as [BOOLEAN] - [true]
2020-11-25 21:30:41,883 TRACE  [main] BasicBinder: binding parameter [5] as [INTEGER] - [1]
2020-11-25 21:30:41,885 TRACE  [main] BasicBinder: binding parameter [6] as [BIGINT] - [1]
2020-11-25 21:30:41,887 TRACE  [main] BasicBinder: binding parameter [1] as [BLOB] - [null]
2020-11-25 21:30:41,888 TRACE  [main] BasicBinder: binding parameter [2] as [DOUBLE] - [1.0]
2020-11-25 21:30:41,888 TRACE  [main] BasicBinder: binding parameter [3] as [INTEGER] - [0]
2020-11-25 21:30:41,889 TRACE  [main] BasicBinder: binding parameter [4] as [BOOLEAN] - [true]
2020-11-25 21:30:41,889 TRACE  [main] BasicBinder: binding parameter [5] as [INTEGER] - [2]
2020-11-25 21:30:41,890 TRACE  [main] BasicBinder: binding parameter [6] as [BIGINT] - [1]
2020-11-25 21:30:41,892 TRACE  [main] BasicBinder: binding parameter [1] as [BLOB] - [null]
2020-11-25 21:30:41,892 TRACE  [main] BasicBinder: binding parameter [2] as [DOUBLE] - [1.0]
2020-11-25 21:30:41,892 TRACE  [main] BasicBinder: binding parameter [3] as [INTEGER] - [0]
2020-11-25 21:30:41,892 TRACE  [main] BasicBinder: binding parameter [4] as [BOOLEAN] - [false]
2020-11-25 21:30:41,892 TRACE  [main] BasicBinder: binding parameter [5] as [INTEGER] - [0]
2020-11-25 21:30:41,893 TRACE  [main] BasicBinder: binding parameter [6] as [BIGINT] - [1]
2020-11-25 21:30:41,894 TRACE  [main] BasicBinder: binding parameter [1] as [BLOB] - [null]
2020-11-25 21:30:41,895 TRACE  [main] BasicBinder: binding parameter [2] as [DOUBLE] - [1.0]
2020-11-25 21:30:41,895 TRACE  [main] BasicBinder: binding parameter [3] as [INTEGER] - [0]
2020-11-25 21:30:41,895 TRACE  [main] BasicBinder: binding parameter [4] as [BOOLEAN] - [false]
2020-11-25 21:30:41,896 TRACE  [main] BasicBinder: binding parameter [5] as [INTEGER] - [1]
2020-11-25 21:30:41,896 TRACE  [main] BasicBinder: binding parameter [6] as [BIGINT] - [1]
2020-11-25 21:30:47,278 DEBUG  [main] BasicTypeRegistry: Adding type registration boolean -> org.hibernate.type.BooleanType@902fdbe
2020-11-25 21:30:47,279 DEBUG  [main] BasicTypeRegistry: Adding type registration boolean -> org.hibernate.type.BooleanType@902fdbe
2020-11-25 21:30:47,279 DEBUG  [main] BasicTypeRegistry: Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@902fdbe
2020-11-25 21:30:47,279 DEBUG  [main] BasicTypeRegistry: Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@4a058df8
2020-11-25 21:30:47,280 DEBUG  [main] BasicTypeRegistry: Adding type registration true_false -> org.hibernate.type.TrueFalseType@1283ca23
2020-11-25 21:30:47,280 DEBUG  [main] BasicTypeRegistry: Adding type registration yes_no -> org.hibernate.type.YesNoType@733e6df7
2020-11-25 21:30:47,280 DEBUG  [main] BasicTypeRegistry: Adding type registration byte -> org.hibernate.type.ByteType@32227215
2020-11-25 21:30:47,280 DEBUG  [main] BasicTypeRegistry: Adding type registration byte -> org.hibernate.type.ByteType@32227215
2020-11-25 21:30:47,280 DEBUG  [main] BasicTypeRegistry: Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@32227215
2020-11-25 21:30:47,280 DEBUG  [main] BasicTypeRegistry: Adding type registration character -> org.hibernate.type.CharacterType@59845579
2020-11-25 21:30:47,280 DEBUG  [main] BasicTypeRegistry: Adding type registration char -> org.hibernate.type.CharacterType@59845579
2020-11-25 21:30:47,280 DEBUG  [main] BasicTypeRegistry: Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@59845579
2020-11-25 21:30:47,281 DEBUG  [main] BasicTypeRegistry: Adding type registration short -> org.hibernate.type.ShortType@4d4436d0
2020-11-25 21:30:47,281 DEBUG  [main] BasicTypeRegistry: Adding type registration short -> org.hibernate.type.ShortType@4d4436d0
2020-11-25 21:30:47,281 DEBUG  [main] BasicTypeRegistry: Adding type registration java.lang.Short -> org.hibernate.type.ShortType@4d4436d0
2020-11-25 21:30:47,281 DEBUG  [main] BasicTypeRegistry: Adding type registration integer -> org.hibernate.type.IntegerType@6010d0d1
2020-11-25 21:30:47,281 DEBUG  [main] BasicTypeRegistry: Adding type registration int -> org.hibernate.type.IntegerType@6010d0d1
2020-11-25 21:30:47,281 DEBUG  [main] BasicTypeRegistry: Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@6010d0d1
2020-11-25 21:30:47,282 DEBUG  [main] BasicTypeRegistry: Adding type registration long -> org.hibernate.type.LongType@5e9bbd9d
2020-11-25 21:30:47,282 DEBUG  [main] BasicTypeRegistry: Adding type registration long -> org.hibernate.type.LongType@5e9bbd9d
2020-11-25 21:30:47,282 DEBUG  [main] BasicTypeRegistry: Adding type registration java.lang.Long -> org.hibernate.type.LongType@5e9bbd9d
2020-11-25 21:30:47,282 DEBUG  [main] BasicTypeRegistry: Adding type registration float -> org.hibernate.type.FloatType@5b1efaaf
2020-11-25 21:30:47,283 DEBUG  [main] BasicTypeRegistry: Adding type registration float -> org.hibernate.type.FloatType@5b1efaaf
2020-11-25 21:30:47,283 DEBUG  [main] BasicTypeRegistry: Adding type registration java.lang.Float -> org.hibernate.type.FloatType@5b1efaaf
2020-11-25 21:30:47,284 DEBUG  [main] BasicTypeRegistry: Adding type registration double -> org.hibernate.type.DoubleType@4c731956
2020-11-25 21:30:47,286 DEBUG  [main] BasicTypeRegistry: Adding type registration double -> org.hibernate.type.DoubleType@4c731956
2020-11-25 21:30:47,286 DEBUG  [main] BasicTypeRegistry: Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@4c731956
2020-11-25 21:30:47,287 DEBUG  [main] BasicTypeRegistry: Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@51c65a43
2020-11-25 21:30:47,287 DEBUG  [main] BasicTypeRegistry: Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@51c65a43
2020-11-25 21:30:47,287 DEBUG  [main] BasicTypeRegistry: Adding type registration big_integer -> org.hibernate.type.BigIntegerType@31acfd4e
2020-11-25 21:30:47,288 DEBUG  [main] BasicTypeRegistry: Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@31acfd4e
2020-11-25 21:30:47,289 DEBUG  [main] BasicTypeRegistry: Adding type registration string -> org.hibernate.type.StringType@1c30cb85
2020-11-25 21:30:47,290 DEBUG  [main] BasicTypeRegistry: Adding type registration java.lang.String -> org.hibernate.type.StringType@1c30cb85
2020-11-25 21:30:47,290 DEBUG  [main] BasicTypeRegistry: Adding type registration nstring -> org.hibernate.type.StringNVarcharType@7634f2b
2020-11-25 21:30:47,291 DEBUG  [main] BasicTypeRegistry: Adding type registration ncharacter -> org.hibernate.type.CharacterNCharType@4fba8eec
2020-11-25 21:30:47,291 DEBUG  [main] BasicTypeRegistry: Adding type registration url -> org.hibernate.type.UrlType@4d98e41b
2020-11-25 21:30:47,292 DEBUG  [main] BasicTypeRegistry: Adding type registration java.net.URL -> org.hibernate.type.UrlType@4d98e41b
2020-11-25 21:30:47,292 DEBUG  [main] BasicTypeRegistry: Adding type registration Duration -> org.hibernate.type.DurationType@d54d0f5
2020-11-25 21:30:47,292 DEBUG  [main] BasicTypeRegistry: Adding type registration java.time.Duration -> org.hibernate.type.DurationType@d54d0f5
2020-11-25 21:30:47,293 DEBUG  [main] BasicTypeRegistry: Adding type registration Instant -> org.hibernate.type.InstantType@6acffb2d
2020-11-25 21:30:47,293 DEBUG  [main] BasicTypeRegistry: Adding type registration java.time.Instant -> org.hibernate.type.InstantType@6acffb2d
2020-11-25 21:30:47,293 DEBUG  [main] BasicTypeRegistry: Adding type registration LocalDateTime -> org.hibernate.type.LocalDateTimeType@5f025000
2020-11-25 21:30:47,293 DEBUG  [main] BasicTypeRegistry: Adding type registration java.time.LocalDateTime -> org.hibernate.type.LocalDateTimeType@5f025000
2020-11-25 21:30:47,293 DEBUG  [main] BasicTypeRegistry: Adding type registration LocalDate -> org.hibernate.type.LocalDateType@49c099b
2020-11-25 21:30:47,294 DEBUG  [main] BasicTypeRegistry: Adding type registration java.time.LocalDate -> org.hibernate.type.LocalDateType@49c099b
2020-11-25 21:30:47,297 DEBUG  [main] BasicTypeRegistry: Adding type registration LocalTime -> org.hibernate.type.LocalTimeType@188a5fc2
2020-11-25 21:30:47,298 DEBUG  [main] BasicTypeRegistry: Adding type registration java.time.LocalTime -> org.hibernate.type.LocalTimeType@188a5fc2
2020-11-25 21:30:47,299 DEBUG  [main] BasicTypeRegistry: Adding type registration OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@415d88de
2020-11-25 21:30:47,299 DEBUG  [main] BasicTypeRegistry: Adding type registration java.time.OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@415d88de
2020-11-25 21:30:47,299 DEBUG  [main] BasicTypeRegistry: Adding type registration OffsetTime -> org.hibernate.type.OffsetTimeType@4971f459
2020-11-25 21:30:47,299 DEBUG  [main] BasicTypeRegistry: Adding type registration java.time.OffsetTime -> org.hibernate.type.OffsetTimeType@4971f459
2020-11-25 21:30:47,300 DEBUG  [main] BasicTypeRegistry: Adding type registration ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@48581a3b
2020-11-25 21:30:47,300 DEBUG  [main] BasicTypeRegistry: Adding type registration java.time.ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@48581a3b
2020-11-25 21:30:47,300 DEBUG  [main] BasicTypeRegistry: Adding type registration date -> org.hibernate.type.DateType@2a140ce5
2020-11-25 21:30:47,300 DEBUG  [main] BasicTypeRegistry: Adding type registration java.sql.Date -> org.hibernate.type.DateType@2a140ce5
2020-11-25 21:30:47,300 DEBUG  [main] BasicTypeRegistry: Adding type registration time -> org.hibernate.type.TimeType@6da4feeb
2020-11-25 21:30:47,300 DEBUG  [main] BasicTypeRegistry: Adding type registration java.sql.Time -> org.hibernate.type.TimeType@6da4feeb
2020-11-25 21:30:47,301 DEBUG  [main] BasicTypeRegistry: Adding type registration timestamp -> org.hibernate.type.TimestampType@88b76f2
2020-11-25 21:30:47,301 DEBUG  [main] BasicTypeRegistry: Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@88b76f2
2020-11-25 21:30:47,301 DEBUG  [main] BasicTypeRegistry: Adding type registration java.util.Date -> org.hibernate.type.TimestampType@88b76f2
2020-11-25 21:30:47,301 DEBUG  [main] BasicTypeRegistry: Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@1e1237ab
2020-11-25 21:30:47,301 DEBUG  [main] BasicTypeRegistry: Adding type registration calendar -> org.hibernate.type.CalendarType@226de93c
2020-11-25 21:30:47,302 DEBUG  [main] BasicTypeRegistry: Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@226de93c
2020-11-25 21:30:47,302 DEBUG  [main] BasicTypeRegistry: Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@226de93c
2020-11-25 21:30:47,302 DEBUG  [main] BasicTypeRegistry: Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@7b222230
2020-11-25 21:30:47,302 DEBUG  [main] BasicTypeRegistry: Adding type registration locale -> org.hibernate.type.LocaleType@13d019a4
2020-11-25 21:30:47,303 DEBUG  [main] BasicTypeRegistry: Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@13d019a4
2020-11-25 21:30:47,304 DEBUG  [main] BasicTypeRegistry: Adding type registration currency -> org.hibernate.type.CurrencyType@3380ca3d
2020-11-25 21:30:47,304 DEBUG  [main] BasicTypeRegistry: Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@3380ca3d
2020-11-25 21:30:47,305 DEBUG  [main] BasicTypeRegistry: Adding type registration timezone -> org.hibernate.type.TimeZoneType@5f9f3e58
2020-11-25 21:30:47,306 DEBUG  [main] BasicTypeRegistry: Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@5f9f3e58
2020-11-25 21:30:47,306 DEBUG  [main] BasicTypeRegistry: Adding type registration class -> org.hibernate.type.ClassType@7e5b621b
2020-11-25 21:30:47,307 DEBUG  [main] BasicTypeRegistry: Adding type registration java.lang.Class -> org.hibernate.type.ClassType@7e5b621b
2020-11-25 21:30:47,307 DEBUG  [main] BasicTypeRegistry: Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@647b9364
2020-11-25 21:30:47,307 DEBUG  [main] BasicTypeRegistry: Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@647b9364
2020-11-25 21:30:47,308 DEBUG  [main] BasicTypeRegistry: Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@59303963
2020-11-25 21:30:47,308 DEBUG  [main] BasicTypeRegistry: Adding type registration binary -> org.hibernate.type.BinaryType@69c532af
2020-11-25 21:30:47,309 DEBUG  [main] BasicTypeRegistry: Adding type registration byte[] -> org.hibernate.type.BinaryType@69c532af
2020-11-25 21:30:47,309 DEBUG  [main] BasicTypeRegistry: Adding type registration [B -> org.hibernate.type.BinaryType@69c532af
2020-11-25 21:30:47,309 DEBUG  [main] BasicTypeRegistry: Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@8fd91d1
2020-11-25 21:30:47,310 DEBUG  [main] BasicTypeRegistry: Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@8fd91d1
2020-11-25 21:30:47,310 DEBUG  [main] BasicTypeRegistry: Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@8fd91d1
2020-11-25 21:30:47,312 DEBUG  [main] BasicTypeRegistry: Adding type registration row_version -> org.hibernate.type.RowVersionType@236ae13d
2020-11-25 21:30:47,313 DEBUG  [main] BasicTypeRegistry: Adding type registration image -> org.hibernate.type.ImageType@46320c9a
2020-11-25 21:30:47,313 DEBUG  [main] BasicTypeRegistry: Adding type registration characters -> org.hibernate.type.CharArrayType@7af0affa
2020-11-25 21:30:47,315 DEBUG  [main] BasicTypeRegistry: Adding type registration char[] -> org.hibernate.type.CharArrayType@7af0affa
2020-11-25 21:30:47,315 DEBUG  [main] BasicTypeRegistry: Adding type registration [C -> org.hibernate.type.CharArrayType@7af0affa
2020-11-25 21:30:47,316 DEBUG  [main] BasicTypeRegistry: Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@1d7eb170
2020-11-25 21:30:47,316 DEBUG  [main] BasicTypeRegistry: Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@1d7eb170
2020-11-25 21:30:47,317 DEBUG  [main] BasicTypeRegistry: Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@1d7eb170
2020-11-25 21:30:47,317 DEBUG  [main] BasicTypeRegistry: Adding type registration text -> org.hibernate.type.TextType@230a73f2
2020-11-25 21:30:47,318 DEBUG  [main] BasicTypeRegistry: Adding type registration ntext -> org.hibernate.type.NTextType@798deee8
2020-11-25 21:30:47,319 DEBUG  [main] BasicTypeRegistry: Adding type registration blob -> org.hibernate.type.BlobType@5e002356
2020-11-25 21:30:47,325 DEBUG  [main] BasicTypeRegistry: Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@5e002356
2020-11-25 21:30:47,325 DEBUG  [main] BasicTypeRegistry: Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@267f9765
2020-11-25 21:30:47,326 DEBUG  [main] BasicTypeRegistry: Adding type registration clob -> org.hibernate.type.ClobType@443a53df
2020-11-25 21:30:47,326 DEBUG  [main] BasicTypeRegistry: Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@443a53df
2020-11-25 21:30:47,327 DEBUG  [main] BasicTypeRegistry: Adding type registration nclob -> org.hibernate.type.NClobType@b950f82
2020-11-25 21:30:47,327 DEBUG  [main] BasicTypeRegistry: Adding type registration java.sql.NClob -> org.hibernate.type.NClobType@b950f82
2020-11-25 21:30:47,327 DEBUG  [main] BasicTypeRegistry: Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@7a1a3468
2020-11-25 21:30:47,327 DEBUG  [main] BasicTypeRegistry: Adding type registration materialized_nclob -> org.hibernate.type.MaterializedNClobType@629e8212
2020-11-25 21:30:47,328 DEBUG  [main] BasicTypeRegistry: Adding type registration serializable -> org.hibernate.type.SerializableType@4d0cc83e
2020-11-25 21:30:47,328 DEBUG  [main] BasicTypeRegistry: Adding type registration object -> org.hibernate.type.ObjectType@34d480b9
2020-11-25 21:30:47,328 DEBUG  [main] BasicTypeRegistry: Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@34d480b9
2020-11-25 21:30:47,328 DEBUG  [main] BasicTypeRegistry: Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@21ed4a51
2020-11-25 21:30:47,329 DEBUG  [main] BasicTypeRegistry: Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@13866865
2020-11-25 21:30:47,329 DEBUG  [main] BasicTypeRegistry: Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@4891d727
2020-11-25 21:30:47,330 DEBUG  [main] BasicTypeRegistry: Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@550574cb
2020-11-25 21:30:47,331 DEBUG  [main] BasicTypeRegistry: Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@1e7113f8
2020-11-25 21:30:47,332 DEBUG  [main] BasicTypeRegistry: Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@3e149513
2020-11-25 21:30:47,336 DEBUG  [main] BasicTypeRegistry: Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@787a4519
2020-11-25 21:30:47,337 DEBUG  [main] BasicTypeRegistry: Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@627d5f1
2020-11-25 21:30:47,353 DEBUG  [main] TypeConfiguration$Scope: Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@74797b90] to MetadataBuildingContext [org.hibernate.boot.internal.MetadataBuildingContextRootImpl@7676b2b9]
2020-11-25 21:30:47,364 DEBUG  [main] EnumType: Using NAMED-based conversion for Enum com.sf.back.entities.Kind
2020-11-25 21:30:47,367 DEBUG  [main] EnumType: Using NAMED-based conversion for Enum com.sf.back.entities.Kind
2020-11-25 21:30:47,392 DEBUG  [main] TypeConfiguration$Scope: Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@74797b90] to SessionFactoryImpl [org.hibernate.internal.SessionFactoryImpl@84becbe]
2020-11-25 21:30:47,393 DEBUG  [main] EnumType: Using NAMED-based conversion for Enum com.sf.back.entities.Kind
2020-11-25 21:30:47,393 DEBUG  [main] EnumType: Using NAMED-based conversion for Enum com.sf.back.entities.Kind
2020-11-25 21:30:47,395 DEBUG  [main] EnumType: Using NAMED-based conversion for Enum com.sf.back.entities.Kind
2020-11-25 21:30:47,395 DEBUG  [main] EnumType: Using NAMED-based conversion for Enum com.sf.back.entities.Kind
2020-11-25 21:30:47,404 DEBUG  [main] EnumType: Using NAMED-based conversion for Enum com.sf.back.entities.Kind
2020-11-25 21:30:47,404 DEBUG  [main] EnumType: Using NAMED-based conversion for Enum com.sf.back.entities.Kind
2020-11-25 21:30:47,416 DEBUG  [main] EnumType: Using NAMED-based conversion for Enum com.sf.back.entities.Kind
2020-11-25 21:30:47,437 TRACE  [main] TypeConfiguration$Scope: Handling #sessionFactoryCreated from [org.hibernate.internal.SessionFactoryImpl@84becbe] for TypeConfiguration
2020-11-25 21:30:47,717 WARN   [main] JpaBaseConfiguration$JpaWebConfiguration: spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2020-11-25 21:30:47,843 WARN   [main] GroovyTemplateAutoConfiguration: Cannot find template location: classpath:/templates/ (please add some templates, check your Groovy configuration, or set spring.groovy.template.check-template-location=false)
2020-11-25 21:30:47,906 TRACE  [main] BasicBinder: binding parameter [1] as [BLOB] - [[70, 105, 110, 100, 32, 97, 108, 108, 32, 114, 111, 111, 116, 115, 32, 111, 102, 32, 103, 105, 118, 101, 110, 32, 112, 111, 108, 121, 110, 111, 109, 105, 97, 108]]
2020-11-25 21:30:47,908 TRACE  [main] BasicBinder: binding parameter [2] as [BOOLEAN] - [false]
2020-11-25 21:30:47,909 TRACE  [main] BasicBinder: binding parameter [3] as [VARCHAR] - [POLYNOMIAL]
2020-11-25 21:30:47,909 TRACE  [main] BasicBinder: binding parameter [4] as [INTEGER] - [1]
2020-11-25 21:30:47,910 TRACE  [main] BasicBinder: binding parameter [5] as [BIGINT] - [null]
2020-11-25 21:30:47,910 TRACE  [main] BasicBinder: binding parameter [6] as [INTEGER] - [6]
2020-11-25 21:30:47,917 TRACE  [main] BasicBinder: binding parameter [1] as [BLOB] - [null]
2020-11-25 21:30:47,918 TRACE  [main] BasicBinder: binding parameter [2] as [DOUBLE] - [1.0]
2020-11-25 21:30:47,918 TRACE  [main] BasicBinder: binding parameter [3] as [INTEGER] - [0]
2020-11-25 21:30:47,918 TRACE  [main] BasicBinder: binding parameter [4] as [BOOLEAN] - [true]
2020-11-25 21:30:47,918 TRACE  [main] BasicBinder: binding parameter [5] as [INTEGER] - [0]
2020-11-25 21:30:47,918 TRACE  [main] BasicBinder: binding parameter [6] as [BIGINT] - [1]
2020-11-25 21:30:47,923 TRACE  [main] BasicBinder: binding parameter [1] as [BLOB] - [null]
2020-11-25 21:30:47,923 TRACE  [main] BasicBinder: binding parameter [2] as [DOUBLE] - [2.0]
2020-11-25 21:30:47,924 TRACE  [main] BasicBinder: binding parameter [3] as [INTEGER] - [0]
2020-11-25 21:30:47,924 TRACE  [main] BasicBinder: binding parameter [4] as [BOOLEAN] - [true]
2020-11-25 21:30:47,925 TRACE  [main] BasicBinder: binding parameter [5] as [INTEGER] - [1]
2020-11-25 21:30:47,925 TRACE  [main] BasicBinder: binding parameter [6] as [BIGINT] - [1]
2020-11-25 21:30:47,927 TRACE  [main] BasicBinder: binding parameter [1] as [BLOB] - [null]
2020-11-25 21:30:47,928 TRACE  [main] BasicBinder: binding parameter [2] as [DOUBLE] - [1.0]
2020-11-25 21:30:47,929 TRACE  [main] BasicBinder: binding parameter [3] as [INTEGER] - [0]
2020-11-25 21:30:47,931 TRACE  [main] BasicBinder: binding parameter [4] as [BOOLEAN] - [true]
2020-11-25 21:30:47,931 TRACE  [main] BasicBinder: binding parameter [5] as [INTEGER] - [2]
2020-11-25 21:30:47,932 TRACE  [main] BasicBinder: binding parameter [6] as [BIGINT] - [1]
2020-11-25 21:30:47,945 TRACE  [main] BasicBinder: binding parameter [1] as [BLOB] - [null]
2020-11-25 21:30:47,946 TRACE  [main] BasicBinder: binding parameter [2] as [DOUBLE] - [1.0]
2020-11-25 21:30:47,946 TRACE  [main] BasicBinder: binding parameter [3] as [INTEGER] - [0]
2020-11-25 21:30:47,948 TRACE  [main] BasicBinder: binding parameter [4] as [BOOLEAN] - [false]
2020-11-25 21:30:47,949 TRACE  [main] BasicBinder: binding parameter [5] as [INTEGER] - [0]
2020-11-25 21:30:47,950 TRACE  [main] BasicBinder: binding parameter [6] as [BIGINT] - [1]
2020-11-25 21:30:47,953 TRACE  [main] BasicBinder: binding parameter [1] as [BLOB] - [null]
2020-11-25 21:30:47,953 TRACE  [main] BasicBinder: binding parameter [2] as [DOUBLE] - [1.0]
2020-11-25 21:30:47,954 TRACE  [main] BasicBinder: binding parameter [3] as [INTEGER] - [0]
2020-11-25 21:30:47,955 TRACE  [main] BasicBinder: binding parameter [4] as [BOOLEAN] - [false]
2020-11-25 21:30:47,957 TRACE  [main] BasicBinder: binding parameter [5] as [INTEGER] - [1]
2020-11-25 21:30:47,957 TRACE  [main] BasicBinder: binding parameter [6] as [BIGINT] - [1]
2020-11-25 21:30:48,061 TRACE  [main] BasicBinder: binding parameter [1] as [BIGINT] - [2]
2020-11-25 21:30:48,070 TRACE  [main] BasicExtractor: extracted value ([id1_1_2_] : [BIGINT]) - [null]
2020-11-25 21:30:48,071 TRACE  [main] BasicExtractor: extracted value ([id1_0_4_] : [BIGINT]) - [null]
2020-11-25 21:30:48,081 TRACE  [main] BasicExtractor: extracted value ([descript2_1_0_] : [BLOB]) - [[112, 114, 111, 98, 108, 101, 109, 100, 101, 115, 99, 114, 105, 112, 116, 105, 111, 110]]
2020-11-25 21:30:48,083 TRACE  [main] BasicExtractor: extracted value ([is_solve3_1_0_] : [BOOLEAN]) - [null]
2020-11-25 21:30:48,083 TRACE  [main] BasicExtractor: extracted value ([kind4_1_0_] : [VARCHAR]) - [POLYNOMIAL]
2020-11-25 21:30:48,084 TRACE  [main] BasicExtractor: extracted value ([matrix_d5_1_0_] : [INTEGER]) - [1]
2020-11-25 21:30:48,084 TRACE  [main] BasicExtractor: extracted value ([parent_p7_1_0_] : [BIGINT]) - [null]
2020-11-25 21:30:48,085 TRACE  [main] BasicExtractor: extracted value ([problem_6_1_0_] : [INTEGER]) - [22]
2020-11-25 21:30:48,086 TRACE  [main] BasicExtractor: extracted value ([problem_7_0_3_] : [BIGINT]) - [null]
2020-11-25 21:30:48,087 TRACE  [main] BasicExtractor: extracted value ([parent_p7_1_1_] : [BIGINT]) - [null]
2020-11-25 21:30:48,097 TRACE  [main] CollectionType: Created collection wrapper: [com.sf.back.entities.Problem.matrixes#2]
2020-11-25 21:30:48,108 TRACE  [main] BasicBinder: binding parameter [1] as [BIGINT] - [2]
2020-11-25 21:30:48,111 TRACE  [main] BasicExtractor: extracted value ([id1_0_1_] : [BIGINT]) - [6]
2020-11-25 21:30:48,112 TRACE  [main] BasicExtractor: extracted value ([binary_v2_0_1_] : [BLOB]) - [null]
2020-11-25 21:30:48,113 TRACE  [main] BasicExtractor: extracted value ([float_va3_0_1_] : [DOUBLE]) - [1.0]
2020-11-25 21:30:48,114 TRACE  [main] BasicExtractor: extracted value ([i4_0_1_] : [INTEGER]) - [0]
2020-11-25 21:30:48,114 TRACE  [main] BasicExtractor: extracted value ([is_condi5_0_1_] : [BOOLEAN]) - [true]
2020-11-25 21:30:48,114 TRACE  [main] BasicExtractor: extracted value ([j6_0_1_] : [INTEGER]) - [0]
2020-11-25 21:30:48,115 TRACE  [main] BasicExtractor: extracted value ([problem_7_0_1_] : [BIGINT]) - [2]
2020-11-25 21:30:48,116 TRACE  [main] BasicExtractor: extracted value ([problem_7_0_0_] : [BIGINT]) - [2]
2020-11-25 21:30:48,123 TRACE  [main] BasicExtractor: extracted value ([id1_0_0_] : [BIGINT]) - [6]
2020-11-25 21:30:48,124 TRACE  [main] BasicExtractor: extracted value ([id1_0_1_] : [BIGINT]) - [7]
2020-11-25 21:30:48,125 TRACE  [main] BasicExtractor: extracted value ([binary_v2_0_1_] : [BLOB]) - [null]
2020-11-25 21:30:48,125 TRACE  [main] BasicExtractor: extracted value ([float_va3_0_1_] : [DOUBLE]) - [2.718281828459045]
2020-11-25 21:30:48,126 TRACE  [main] BasicExtractor: extracted value ([i4_0_1_] : [INTEGER]) - [0]
2020-11-25 21:30:48,127 TRACE  [main] BasicExtractor: extracted value ([is_condi5_0_1_] : [BOOLEAN]) - [true]
2020-11-25 21:30:48,128 TRACE  [main] BasicExtractor: extracted value ([j6_0_1_] : [INTEGER]) - [1]
2020-11-25 21:30:48,128 TRACE  [main] BasicExtractor: extracted value ([problem_7_0_1_] : [BIGINT]) - [2]
2020-11-25 21:30:48,129 TRACE  [main] BasicExtractor: extracted value ([problem_7_0_0_] : [BIGINT]) - [2]
2020-11-25 21:30:48,130 TRACE  [main] BasicExtractor: extracted value ([id1_0_0_] : [BIGINT]) - [7]
2020-11-25 21:30:48,130 TRACE  [main] BasicExtractor: extracted value ([id1_0_1_] : [BIGINT]) - [8]
2020-11-25 21:30:48,131 TRACE  [main] BasicExtractor: extracted value ([binary_v2_0_1_] : [BLOB]) - [null]
2020-11-25 21:30:48,131 TRACE  [main] BasicExtractor: extracted value ([float_va3_0_1_] : [DOUBLE]) - [7.38905609893065]
2020-11-25 21:30:48,133 TRACE  [main] BasicExtractor: extracted value ([i4_0_1_] : [INTEGER]) - [0]
2020-11-25 21:30:48,133 TRACE  [main] BasicExtractor: extracted value ([is_condi5_0_1_] : [BOOLEAN]) - [true]
2020-11-25 21:30:48,133 TRACE  [main] BasicExtractor: extracted value ([j6_0_1_] : [INTEGER]) - [2]
2020-11-25 21:30:48,134 TRACE  [main] BasicExtractor: extracted value ([problem_7_0_1_] : [BIGINT]) - [2]
2020-11-25 21:30:48,134 TRACE  [main] BasicExtractor: extracted value ([problem_7_0_0_] : [BIGINT]) - [2]
2020-11-25 21:30:48,134 TRACE  [main] BasicExtractor: extracted value ([id1_0_0_] : [BIGINT]) - [8]
2020-11-25 21:30:48,135 TRACE  [main] BasicExtractor: extracted value ([id1_0_1_] : [BIGINT]) - [9]
2020-11-25 21:30:48,136 TRACE  [main] BasicExtractor: extracted value ([binary_v2_0_1_] : [BLOB]) - [null]
2020-11-25 21:30:48,137 TRACE  [main] BasicExtractor: extracted value ([float_va3_0_1_] : [DOUBLE]) - [20.085536923187668]
2020-11-25 21:30:48,138 TRACE  [main] BasicExtractor: extracted value ([i4_0_1_] : [INTEGER]) - [0]
2020-11-25 21:30:48,140 TRACE  [main] BasicExtractor: extracted value ([is_condi5_0_1_] : [BOOLEAN]) - [true]
2020-11-25 21:30:48,141 TRACE  [main] BasicExtractor: extracted value ([j6_0_1_] : [INTEGER]) - [3]
2020-11-25 21:30:48,141 TRACE  [main] BasicExtractor: extracted value ([problem_7_0_1_] : [BIGINT]) - [2]
2020-11-25 21:30:48,142 TRACE  [main] BasicExtractor: extracted value ([problem_7_0_0_] : [BIGINT]) - [2]
2020-11-25 21:30:48,142 TRACE  [main] BasicExtractor: extracted value ([id1_0_0_] : [BIGINT]) - [9]
2020-11-25 21:30:48,142 TRACE  [main] BasicExtractor: extracted value ([id1_0_1_] : [BIGINT]) - [10]
2020-11-25 21:30:48,143 TRACE  [main] BasicExtractor: extracted value ([binary_v2_0_1_] : [BLOB]) - [null]
2020-11-25 21:30:48,143 TRACE  [main] BasicExtractor: extracted value ([float_va3_0_1_] : [DOUBLE]) - [54.598150033144236]
2020-11-25 21:30:48,144 TRACE  [main] BasicExtractor: extracted value ([i4_0_1_] : [INTEGER]) - [0]
2020-11-25 21:30:48,144 TRACE  [main] BasicExtractor: extracted value ([is_condi5_0_1_] : [BOOLEAN]) - [true]
2020-11-25 21:30:48,144 TRACE  [main] BasicExtractor: extracted value ([j6_0_1_] : [INTEGER]) - [4]
2020-11-25 21:30:48,145 TRACE  [main] BasicExtractor: extracted value ([problem_7_0_1_] : [BIGINT]) - [2]
2020-11-25 21:30:48,145 TRACE  [main] BasicExtractor: extracted value ([problem_7_0_0_] : [BIGINT]) - [2]
2020-11-25 21:30:48,146 TRACE  [main] BasicExtractor: extracted value ([id1_0_0_] : [BIGINT]) - [10]
2020-11-25 21:30:48,150 TRACE  [main] BasicExtractor: extracted value ([id1_0_1_] : [BIGINT]) - [11]
2020-11-25 21:30:48,160 TRACE  [main] BasicExtractor: extracted value ([binary_v2_0_1_] : [BLOB]) - [null]
2020-11-25 21:30:48,161 TRACE  [main] BasicExtractor: extracted value ([float_va3_0_1_] : [DOUBLE]) - [148.4131591025766]
2020-11-25 21:30:48,161 TRACE  [main] BasicExtractor: extracted value ([i4_0_1_] : [INTEGER]) - [0]
2020-11-25 21:30:48,161 TRACE  [main] BasicExtractor: extracted value ([is_condi5_0_1_] : [BOOLEAN]) - [true]
2020-11-25 21:30:48,161 TRACE  [main] BasicExtractor: extracted value ([j6_0_1_] : [INTEGER]) - [5]
2020-11-25 21:30:48,162 TRACE  [main] BasicExtractor: extracted value ([problem_7_0_1_] : [BIGINT]) - [2]
2020-11-25 21:30:48,162 TRACE  [main] BasicExtractor: extracted value ([problem_7_0_0_] : [BIGINT]) - [2]
2020-11-25 21:30:48,162 TRACE  [main] BasicExtractor: extracted value ([id1_0_0_] : [BIGINT]) - [11]
2020-11-25 21:30:48,296 TRACE  [main] BasicBinder: binding parameter [1] as [BIGINT] - [2]
2020-11-25 21:30:48,299 TRACE  [main] BasicExtractor: extracted value ([id1_1_2_] : [BIGINT]) - [null]
2020-11-25 21:30:48,299 TRACE  [main] BasicExtractor: extracted value ([id1_0_4_] : [BIGINT]) - [null]
2020-11-25 21:30:48,300 TRACE  [main] BasicExtractor: extracted value ([descript2_1_0_] : [BLOB]) - [[112, 114, 111, 98, 108, 101, 109, 100, 101, 115, 99, 114, 105, 112, 116, 105, 111, 110]]
2020-11-25 21:30:48,300 TRACE  [main] BasicExtractor: extracted value ([is_solve3_1_0_] : [BOOLEAN]) - [null]
2020-11-25 21:30:48,300 TRACE  [main] BasicExtractor: extracted value ([kind4_1_0_] : [VARCHAR]) - [POLYNOMIAL]
2020-11-25 21:30:48,301 TRACE  [main] BasicExtractor: extracted value ([matrix_d5_1_0_] : [INTEGER]) - [1]
2020-11-25 21:30:48,301 TRACE  [main] BasicExtractor: extracted value ([parent_p7_1_0_] : [BIGINT]) - [null]
2020-11-25 21:30:48,301 TRACE  [main] BasicExtractor: extracted value ([problem_6_1_0_] : [INTEGER]) - [22]
2020-11-25 21:30:48,302 TRACE  [main] BasicExtractor: extracted value ([problem_7_0_3_] : [BIGINT]) - [null]
2020-11-25 21:30:48,302 TRACE  [main] BasicExtractor: extracted value ([parent_p7_1_1_] : [BIGINT]) - [null]
2020-11-25 21:30:48,302 TRACE  [main] CollectionType: Created collection wrapper: [com.sf.back.entities.Problem.matrixes#2]
2020-11-25 21:30:48,303 TRACE  [main] BasicBinder: binding parameter [1] as [BIGINT] - [2]
2020-11-25 21:30:48,303 TRACE  [main] BasicExtractor: extracted value ([id1_0_1_] : [BIGINT]) - [6]
2020-11-25 21:30:48,303 TRACE  [main] BasicExtractor: extracted value ([binary_v2_0_1_] : [BLOB]) - [null]
2020-11-25 21:30:48,304 TRACE  [main] BasicExtractor: extracted value ([float_va3_0_1_] : [DOUBLE]) - [1.0]
2020-11-25 21:30:48,304 TRACE  [main] BasicExtractor: extracted value ([i4_0_1_] : [INTEGER]) - [0]
2020-11-25 21:30:48,304 TRACE  [main] BasicExtractor: extracted value ([is_condi5_0_1_] : [BOOLEAN]) - [true]
2020-11-25 21:30:48,304 TRACE  [main] BasicExtractor: extracted value ([j6_0_1_] : [INTEGER]) - [0]
2020-11-25 21:30:48,305 TRACE  [main] BasicExtractor: extracted value ([problem_7_0_1_] : [BIGINT]) - [2]
2020-11-25 21:30:48,306 TRACE  [main] BasicExtractor: extracted value ([problem_7_0_0_] : [BIGINT]) - [2]
2020-11-25 21:30:48,306 TRACE  [main] BasicExtractor: extracted value ([id1_0_0_] : [BIGINT]) - [6]
2020-11-25 21:30:48,307 TRACE  [main] BasicExtractor: extracted value ([id1_0_1_] : [BIGINT]) - [7]
2020-11-25 21:30:48,307 TRACE  [main] BasicExtractor: extracted value ([binary_v2_0_1_] : [BLOB]) - [null]
2020-11-25 21:30:48,308 TRACE  [main] BasicExtractor: extracted value ([float_va3_0_1_] : [DOUBLE]) - [2.718281828459045]
2020-11-25 21:30:48,308 TRACE  [main] BasicExtractor: extracted value ([i4_0_1_] : [INTEGER]) - [0]
2020-11-25 21:30:48,309 TRACE  [main] BasicExtractor: extracted value ([is_condi5_0_1_] : [BOOLEAN]) - [true]
2020-11-25 21:30:48,309 TRACE  [main] BasicExtractor: extracted value ([j6_0_1_] : [INTEGER]) - [1]
2020-11-25 21:30:48,309 TRACE  [main] BasicExtractor: extracted value ([problem_7_0_1_] : [BIGINT]) - [2]
2020-11-25 21:30:48,310 TRACE  [main] BasicExtractor: extracted value ([problem_7_0_0_] : [BIGINT]) - [2]
2020-11-25 21:30:48,310 TRACE  [main] BasicExtractor: extracted value ([id1_0_0_] : [BIGINT]) - [7]
2020-11-25 21:30:48,310 TRACE  [main] BasicExtractor: extracted value ([id1_0_1_] : [BIGINT]) - [8]
2020-11-25 21:30:48,311 TRACE  [main] BasicExtractor: extracted value ([binary_v2_0_1_] : [BLOB]) - [null]
2020-11-25 21:30:48,311 TRACE  [main] BasicExtractor: extracted value ([float_va3_0_1_] : [DOUBLE]) - [7.38905609893065]
2020-11-25 21:30:48,312 TRACE  [main] BasicExtractor: extracted value ([i4_0_1_] : [INTEGER]) - [0]
2020-11-25 21:30:48,312 TRACE  [main] BasicExtractor: extracted value ([is_condi5_0_1_] : [BOOLEAN]) - [true]
2020-11-25 21:30:48,312 TRACE  [main] BasicExtractor: extracted value ([j6_0_1_] : [INTEGER]) - [2]
2020-11-25 21:30:48,312 TRACE  [main] BasicExtractor: extracted value ([problem_7_0_1_] : [BIGINT]) - [2]
2020-11-25 21:30:48,313 TRACE  [main] BasicExtractor: extracted value ([problem_7_0_0_] : [BIGINT]) - [2]
2020-11-25 21:30:48,313 TRACE  [main] BasicExtractor: extracted value ([id1_0_0_] : [BIGINT]) - [8]
2020-11-25 21:30:48,314 TRACE  [main] BasicExtractor: extracted value ([id1_0_1_] : [BIGINT]) - [9]
2020-11-25 21:30:48,315 TRACE  [main] BasicExtractor: extracted value ([binary_v2_0_1_] : [BLOB]) - [null]
2020-11-25 21:30:48,315 TRACE  [main] BasicExtractor: extracted value ([float_va3_0_1_] : [DOUBLE]) - [20.085536923187668]
2020-11-25 21:30:48,316 TRACE  [main] BasicExtractor: extracted value ([i4_0_1_] : [INTEGER]) - [0]
2020-11-25 21:30:48,316 TRACE  [main] BasicExtractor: extracted value ([is_condi5_0_1_] : [BOOLEAN]) - [true]
2020-11-25 21:30:48,316 TRACE  [main] BasicExtractor: extracted value ([j6_0_1_] : [INTEGER]) - [3]
2020-11-25 21:30:48,317 TRACE  [main] BasicExtractor: extracted value ([problem_7_0_1_] : [BIGINT]) - [2]
2020-11-25 21:30:48,318 TRACE  [main] BasicExtractor: extracted value ([problem_7_0_0_] : [BIGINT]) - [2]
2020-11-25 21:30:48,319 TRACE  [main] BasicExtractor: extracted value ([id1_0_0_] : [BIGINT]) - [9]
2020-11-25 21:30:48,319 TRACE  [main] BasicExtractor: extracted value ([id1_0_1_] : [BIGINT]) - [10]
2020-11-25 21:30:48,319 TRACE  [main] BasicExtractor: extracted value ([binary_v2_0_1_] : [BLOB]) - [null]
2020-11-25 21:30:48,320 TRACE  [main] BasicExtractor: extracted value ([float_va3_0_1_] : [DOUBLE]) - [54.598150033144236]
2020-11-25 21:30:48,320 TRACE  [main] BasicExtractor: extracted value ([i4_0_1_] : [INTEGER]) - [0]
2020-11-25 21:30:48,321 TRACE  [main] BasicExtractor: extracted value ([is_condi5_0_1_] : [BOOLEAN]) - [true]
2020-11-25 21:30:48,321 TRACE  [main] BasicExtractor: extracted value ([j6_0_1_] : [INTEGER]) - [4]
2020-11-25 21:30:48,321 TRACE  [main] BasicExtractor: extracted value ([problem_7_0_1_] : [BIGINT]) - [2]
2020-11-25 21:30:48,322 TRACE  [main] BasicExtractor: extracted value ([problem_7_0_0_] : [BIGINT]) - [2]
2020-11-25 21:30:48,322 TRACE  [main] BasicExtractor: extracted value ([id1_0_0_] : [BIGINT]) - [10]
2020-11-25 21:30:48,323 TRACE  [main] BasicExtractor: extracted value ([id1_0_1_] : [BIGINT]) - [11]
2020-11-25 21:30:48,323 TRACE  [main] BasicExtractor: extracted value ([binary_v2_0_1_] : [BLOB]) - [null]
2020-11-25 21:30:48,324 TRACE  [main] BasicExtractor: extracted value ([float_va3_0_1_] : [DOUBLE]) - [148.4131591025766]
2020-11-25 21:30:48,324 TRACE  [main] BasicExtractor: extracted value ([i4_0_1_] : [INTEGER]) - [0]
2020-11-25 21:30:48,325 TRACE  [main] BasicExtractor: extracted value ([is_condi5_0_1_] : [BOOLEAN]) - [true]
2020-11-25 21:30:48,325 TRACE  [main] BasicExtractor: extracted value ([j6_0_1_] : [INTEGER]) - [5]
2020-11-25 21:30:48,330 TRACE  [main] BasicExtractor: extracted value ([problem_7_0_1_] : [BIGINT]) - [2]
2020-11-25 21:30:48,331 TRACE  [main] BasicExtractor: extracted value ([problem_7_0_0_] : [BIGINT]) - [2]
2020-11-25 21:30:48,332 TRACE  [main] BasicExtractor: extracted value ([id1_0_0_] : [BIGINT]) - [11]
2020-11-25 21:30:48,351 TRACE  [main] BasicBinder: binding parameter [1] as [BLOB] - [[100, 101, 115, 99, 114, 105, 112, 116, 105, 111, 110, 100, 101, 115, 99, 114, 105, 112, 116, 105, 111, 110]]
2020-11-25 21:30:48,352 TRACE  [main] BasicBinder: binding parameter [2] as [BOOLEAN] - [null]
2020-11-25 21:30:48,352 TRACE  [main] BasicBinder: binding parameter [3] as [VARCHAR] - [POLYNOMIAL]
2020-11-25 21:30:48,353 TRACE  [main] BasicBinder: binding parameter [4] as [INTEGER] - [1]
2020-11-25 21:30:48,353 TRACE  [main] BasicBinder: binding parameter [5] as [BIGINT] - [null]
2020-11-25 21:30:48,360 TRACE  [main] BasicBinder: binding parameter [6] as [INTEGER] - [22]
2020-11-25 21:30:48,360 TRACE  [main] BasicBinder: binding parameter [7] as [BIGINT] - [2]
2020-11-25 21:30:48,364 TRACE  [main] BasicBinder: binding parameter [1] as [BLOB] - [null]
2020-11-25 21:30:48,364 TRACE  [main] BasicBinder: binding parameter [2] as [DOUBLE] - [1.01]
2020-11-25 21:30:48,365 TRACE  [main] BasicBinder: binding parameter [3] as [INTEGER] - [0]
2020-11-25 21:30:48,365 TRACE  [main] BasicBinder: binding parameter [4] as [BOOLEAN] - [true]
2020-11-25 21:30:48,365 TRACE  [main] BasicBinder: binding parameter [5] as [INTEGER] - [0]
2020-11-25 21:30:48,365 TRACE  [main] BasicBinder: binding parameter [6] as [BIGINT] - [2]
2020-11-25 21:30:48,365 TRACE  [main] BasicBinder: binding parameter [7] as [BIGINT] - [6]
2020-11-25 21:30:48,367 TRACE  [main] BasicBinder: binding parameter [1] as [BIGINT] - [2]
2020-11-25 21:30:48,368 TRACE  [main] BasicExtractor: extracted value ([id1_1_2_] : [BIGINT]) - [null]
2020-11-25 21:30:48,368 TRACE  [main] BasicExtractor: extracted value ([id1_0_4_] : [BIGINT]) - [null]
2020-11-25 21:30:48,368 TRACE  [main] BasicExtractor: extracted value ([descript2_1_0_] : [BLOB]) - [[100, 101, 115, 99, 114, 105, 112, 116, 105, 111, 110, 100, 101, 115, 99, 114, 105, 112, 116, 105, 111, 110]]
2020-11-25 21:30:48,369 TRACE  [main] BasicExtractor: extracted value ([is_solve3_1_0_] : [BOOLEAN]) - [null]
2020-11-25 21:30:48,369 TRACE  [main] BasicExtractor: extracted value ([kind4_1_0_] : [VARCHAR]) - [POLYNOMIAL]
2020-11-25 21:30:48,369 TRACE  [main] BasicExtractor: extracted value ([matrix_d5_1_0_] : [INTEGER]) - [1]
2020-11-25 21:30:48,369 TRACE  [main] BasicExtractor: extracted value ([parent_p7_1_0_] : [BIGINT]) - [null]
2020-11-25 21:30:48,369 TRACE  [main] BasicExtractor: extracted value ([problem_6_1_0_] : [INTEGER]) - [22]
2020-11-25 21:30:48,369 TRACE  [main] BasicExtractor: extracted value ([problem_7_0_3_] : [BIGINT]) - [null]
2020-11-25 21:30:48,370 TRACE  [main] BasicExtractor: extracted value ([parent_p7_1_1_] : [BIGINT]) - [null]
2020-11-25 21:30:48,370 TRACE  [main] CollectionType: Created collection wrapper: [com.sf.back.entities.Problem.matrixes#2]
2020-11-25 21:30:48,371 TRACE  [main] BasicBinder: binding parameter [1] as [BIGINT] - [2]
2020-11-25 21:30:48,371 TRACE  [main] BasicExtractor: extracted value ([id1_0_1_] : [BIGINT]) - [6]
2020-11-25 21:30:48,372 TRACE  [main] BasicExtractor: extracted value ([binary_v2_0_1_] : [BLOB]) - [null]
2020-11-25 21:30:48,372 TRACE  [main] BasicExtractor: extracted value ([float_va3_0_1_] : [DOUBLE]) - [1.01]
2020-11-25 21:30:48,372 TRACE  [main] BasicExtractor: extracted value ([i4_0_1_] : [INTEGER]) - [0]
2020-11-25 21:30:48,372 TRACE  [main] BasicExtractor: extracted value ([is_condi5_0_1_] : [BOOLEAN]) - [true]
2020-11-25 21:30:48,372 TRACE  [main] BasicExtractor: extracted value ([j6_0_1_] : [INTEGER]) - [0]
2020-11-25 21:30:48,373 TRACE  [main] BasicExtractor: extracted value ([problem_7_0_1_] : [BIGINT]) - [2]
2020-11-25 21:30:48,373 TRACE  [main] BasicExtractor: extracted value ([problem_7_0_0_] : [BIGINT]) - [2]
2020-11-25 21:30:48,374 TRACE  [main] BasicExtractor: extracted value ([id1_0_0_] : [BIGINT]) - [6]
2020-11-25 21:30:48,374 TRACE  [main] BasicExtractor: extracted value ([id1_0_1_] : [BIGINT]) - [7]
2020-11-25 21:30:48,375 TRACE  [main] BasicExtractor: extracted value ([binary_v2_0_1_] : [BLOB]) - [null]
2020-11-25 21:30:48,375 TRACE  [main] BasicExtractor: extracted value ([float_va3_0_1_] : [DOUBLE]) - [2.718281828459045]
2020-11-25 21:30:48,375 TRACE  [main] BasicExtractor: extracted value ([i4_0_1_] : [INTEGER]) - [0]
2020-11-25 21:30:48,375 TRACE  [main] BasicExtractor: extracted value ([is_condi5_0_1_] : [BOOLEAN]) - [true]
2020-11-25 21:30:48,375 TRACE  [main] BasicExtractor: extracted value ([j6_0_1_] : [INTEGER]) - [1]
2020-11-25 21:30:48,375 TRACE  [main] BasicExtractor: extracted value ([problem_7_0_1_] : [BIGINT]) - [2]
2020-11-25 21:30:48,375 TRACE  [main] BasicExtractor: extracted value ([problem_7_0_0_] : [BIGINT]) - [2]
2020-11-25 21:30:48,375 TRACE  [main] BasicExtractor: extracted value ([id1_0_0_] : [BIGINT]) - [7]
2020-11-25 21:30:48,375 TRACE  [main] BasicExtractor: extracted value ([id1_0_1_] : [BIGINT]) - [8]
2020-11-25 21:30:48,375 TRACE  [main] BasicExtractor: extracted value ([binary_v2_0_1_] : [BLOB]) - [null]
2020-11-25 21:30:48,375 TRACE  [main] BasicExtractor: extracted value ([float_va3_0_1_] : [DOUBLE]) - [7.38905609893065]
2020-11-25 21:30:48,375 TRACE  [main] BasicExtractor: extracted value ([i4_0_1_] : [INTEGER]) - [0]
2020-11-25 21:30:48,375 TRACE  [main] BasicExtractor: extracted value ([is_condi5_0_1_] : [BOOLEAN]) - [true]
2020-11-25 21:30:48,376 TRACE  [main] BasicExtractor: extracted value ([j6_0_1_] : [INTEGER]) - [2]
2020-11-25 21:30:48,376 TRACE  [main] BasicExtractor: extracted value ([problem_7_0_1_] : [BIGINT]) - [2]
2020-11-25 21:30:48,377 TRACE  [main] BasicExtractor: extracted value ([problem_7_0_0_] : [BIGINT]) - [2]
2020-11-25 21:30:48,377 TRACE  [main] BasicExtractor: extracted value ([id1_0_0_] : [BIGINT]) - [8]
2020-11-25 21:30:48,377 TRACE  [main] BasicExtractor: extracted value ([id1_0_1_] : [BIGINT]) - [9]
2020-11-25 21:30:48,377 TRACE  [main] BasicExtractor: extracted value ([binary_v2_0_1_] : [BLOB]) - [null]
2020-11-25 21:30:48,378 TRACE  [main] BasicExtractor: extracted value ([float_va3_0_1_] : [DOUBLE]) - [20.085536923187668]
2020-11-25 21:30:48,378 TRACE  [main] BasicExtractor: extracted value ([i4_0_1_] : [INTEGER]) - [0]
2020-11-25 21:30:48,378 TRACE  [main] BasicExtractor: extracted value ([is_condi5_0_1_] : [BOOLEAN]) - [true]
2020-11-25 21:30:48,378 TRACE  [main] BasicExtractor: extracted value ([j6_0_1_] : [INTEGER]) - [3]
2020-11-25 21:30:48,379 TRACE  [main] BasicExtractor: extracted value ([problem_7_0_1_] : [BIGINT]) - [2]
2020-11-25 21:30:48,379 TRACE  [main] BasicExtractor: extracted value ([problem_7_0_0_] : [BIGINT]) - [2]
2020-11-25 21:30:48,379 TRACE  [main] BasicExtractor: extracted value ([id1_0_0_] : [BIGINT]) - [9]
2020-11-25 21:30:48,379 TRACE  [main] BasicExtractor: extracted value ([id1_0_1_] : [BIGINT]) - [10]
2020-11-25 21:30:48,379 TRACE  [main] BasicExtractor: extracted value ([binary_v2_0_1_] : [BLOB]) - [null]
2020-11-25 21:30:48,380 TRACE  [main] BasicExtractor: extracted value ([float_va3_0_1_] : [DOUBLE]) - [54.598150033144236]
2020-11-25 21:30:48,380 TRACE  [main] BasicExtractor: extracted value ([i4_0_1_] : [INTEGER]) - [0]
2020-11-25 21:30:48,380 TRACE  [main] BasicExtractor: extracted value ([is_condi5_0_1_] : [BOOLEAN]) - [true]
2020-11-25 21:30:48,380 TRACE  [main] BasicExtractor: extracted value ([j6_0_1_] : [INTEGER]) - [4]
2020-11-25 21:30:48,380 TRACE  [main] BasicExtractor: extracted value ([problem_7_0_1_] : [BIGINT]) - [2]
2020-11-25 21:30:48,380 TRACE  [main] BasicExtractor: extracted value ([problem_7_0_0_] : [BIGINT]) - [2]
2020-11-25 21:30:48,380 TRACE  [main] BasicExtractor: extracted value ([id1_0_0_] : [BIGINT]) - [10]
2020-11-25 21:30:48,381 TRACE  [main] BasicExtractor: extracted value ([id1_0_1_] : [BIGINT]) - [11]
2020-11-25 21:30:48,381 TRACE  [main] BasicExtractor: extracted value ([binary_v2_0_1_] : [BLOB]) - [null]
2020-11-25 21:30:48,381 TRACE  [main] BasicExtractor: extracted value ([float_va3_0_1_] : [DOUBLE]) - [148.4131591025766]
2020-11-25 21:30:48,381 TRACE  [main] BasicExtractor: extracted value ([i4_0_1_] : [INTEGER]) - [0]
2020-11-25 21:30:48,381 TRACE  [main] BasicExtractor: extracted value ([is_condi5_0_1_] : [BOOLEAN]) - [true]
2020-11-25 21:30:48,382 TRACE  [main] BasicExtractor: extracted value ([j6_0_1_] : [INTEGER]) - [5]
2020-11-25 21:30:48,382 TRACE  [main] BasicExtractor: extracted value ([problem_7_0_1_] : [BIGINT]) - [2]
2020-11-25 21:30:48,382 TRACE  [main] BasicExtractor: extracted value ([problem_7_0_0_] : [BIGINT]) - [2]
2020-11-25 21:30:48,382 TRACE  [main] BasicExtractor: extracted value ([id1_0_0_] : [BIGINT]) - [11]
2020-11-25 21:30:48,401 TRACE  [main] BasicBinder: binding parameter [1] as [BLOB] - [[100, 101, 115, 99, 114, 105, 112, 116, 105, 111, 110]]
2020-11-25 21:30:48,401 TRACE  [main] BasicBinder: binding parameter [2] as [BOOLEAN] - [false]
2020-11-25 21:30:48,401 TRACE  [main] BasicBinder: binding parameter [3] as [VARCHAR] - [POLYNOMIAL]
2020-11-25 21:30:48,401 TRACE  [main] BasicBinder: binding parameter [4] as [INTEGER] - [12]
2020-11-25 21:30:48,401 TRACE  [main] BasicBinder: binding parameter [5] as [BIGINT] - [null]
2020-11-25 21:30:48,401 TRACE  [main] BasicBinder: binding parameter [6] as [INTEGER] - [null]
2020-11-25 21:30:48,403 TRACE  [main] BasicBinder: binding parameter [1] as [BLOB] - [null]
2020-11-25 21:30:48,403 TRACE  [main] BasicBinder: binding parameter [2] as [DOUBLE] - [0.0]
2020-11-25 21:30:48,403 TRACE  [main] BasicBinder: binding parameter [3] as [INTEGER] - [0]
2020-11-25 21:30:48,403 TRACE  [main] BasicBinder: binding parameter [4] as [BOOLEAN] - [true]
2020-11-25 21:30:48,403 TRACE  [main] BasicBinder: binding parameter [5] as [INTEGER] - [0]
2020-11-25 21:30:48,403 TRACE  [main] BasicBinder: binding parameter [6] as [BIGINT] - [4]
2020-11-25 21:30:48,404 TRACE  [main] BasicBinder: binding parameter [1] as [BLOB] - [null]
2020-11-25 21:30:48,404 TRACE  [main] BasicBinder: binding parameter [2] as [DOUBLE] - [1.0]
2020-11-25 21:30:48,404 TRACE  [main] BasicBinder: binding parameter [3] as [INTEGER] - [0]
2020-11-25 21:30:48,404 TRACE  [main] BasicBinder: binding parameter [4] as [BOOLEAN] - [true]
2020-11-25 21:30:48,404 TRACE  [main] BasicBinder: binding parameter [5] as [INTEGER] - [1]
2020-11-25 21:30:48,405 TRACE  [main] BasicBinder: binding parameter [6] as [BIGINT] - [4]
2020-11-25 21:30:48,406 TRACE  [main] BasicBinder: binding parameter [1] as [BLOB] - [null]
2020-11-25 21:30:48,406 TRACE  [main] BasicBinder: binding parameter [2] as [DOUBLE] - [2.0]
2020-11-25 21:30:48,406 TRACE  [main] BasicBinder: binding parameter [3] as [INTEGER] - [0]
2020-11-25 21:30:48,406 TRACE  [main] BasicBinder: binding parameter [4] as [BOOLEAN] - [true]
2020-11-25 21:30:48,406 TRACE  [main] BasicBinder: binding parameter [5] as [INTEGER] - [2]
2020-11-25 21:30:48,406 TRACE  [main] BasicBinder: binding parameter [6] as [BIGINT] - [4]
2020-11-25 21:30:48,408 TRACE  [main] BasicBinder: binding parameter [1] as [BLOB] - [null]
2020-11-25 21:30:48,408 TRACE  [main] BasicBinder: binding parameter [2] as [DOUBLE] - [3.0]
2020-11-25 21:30:48,408 TRACE  [main] BasicBinder: binding parameter [3] as [INTEGER] - [0]
2020-11-25 21:30:48,408 TRACE  [main] BasicBinder: binding parameter [4] as [BOOLEAN] - [true]
2020-11-25 21:30:48,408 TRACE  [main] BasicBinder: binding parameter [5] as [INTEGER] - [3]
2020-11-25 21:30:48,408 TRACE  [main] BasicBinder: binding parameter [6] as [BIGINT] - [4]
2020-11-25 21:30:48,409 TRACE  [main] BasicBinder: binding parameter [1] as [BLOB] - [null]
2020-11-25 21:30:48,409 TRACE  [main] BasicBinder: binding parameter [2] as [DOUBLE] - [4.0]
2020-11-25 21:30:48,409 TRACE  [main] BasicBinder: binding parameter [3] as [INTEGER] - [0]
2020-11-25 21:30:48,410 TRACE  [main] BasicBinder: binding parameter [4] as [BOOLEAN] - [true]
2020-11-25 21:30:48,410 TRACE  [main] BasicBinder: binding parameter [5] as [INTEGER] - [4]
2020-11-25 21:30:48,410 TRACE  [main] BasicBinder: binding parameter [6] as [BIGINT] - [4]
2020-11-25 21:30:48,411 TRACE  [main] BasicBinder: binding parameter [1] as [BLOB] - [null]
2020-11-25 21:30:48,411 TRACE  [main] BasicBinder: binding parameter [2] as [DOUBLE] - [5.0]
2020-11-25 21:30:48,411 TRACE  [main] BasicBinder: binding parameter [3] as [INTEGER] - [0]
2020-11-25 21:30:48,411 TRACE  [main] BasicBinder: binding parameter [4] as [BOOLEAN] - [true]
2020-11-25 21:30:48,411 TRACE  [main] BasicBinder: binding parameter [5] as [INTEGER] - [5]
2020-11-25 21:30:48,411 TRACE  [main] BasicBinder: binding parameter [6] as [BIGINT] - [4]
2020-11-25 21:30:48,412 TRACE  [main] BasicBinder: binding parameter [1] as [BLOB] - [null]
2020-11-25 21:30:48,412 TRACE  [main] BasicBinder: binding parameter [2] as [DOUBLE] - [6.0]
2020-11-25 21:30:48,412 TRACE  [main] BasicBinder: binding parameter [3] as [INTEGER] - [0]
2020-11-25 21:30:48,412 TRACE  [main] BasicBinder: binding parameter [4] as [BOOLEAN] - [true]
2020-11-25 21:30:48,412 TRACE  [main] BasicBinder: binding parameter [5] as [INTEGER] - [6]
2020-11-25 21:30:48,412 TRACE  [main] BasicBinder: binding parameter [6] as [BIGINT] - [4]
2020-11-25 21:30:48,413 TRACE  [main] BasicBinder: binding parameter [1] as [BLOB] - [null]
2020-11-25 21:30:48,414 TRACE  [main] BasicBinder: binding parameter [2] as [DOUBLE] - [7.0]
2020-11-25 21:30:48,414 TRACE  [main] BasicBinder: binding parameter [3] as [INTEGER] - [0]
2020-11-25 21:30:48,414 TRACE  [main] BasicBinder: binding parameter [4] as [BOOLEAN] - [true]
2020-11-25 21:30:48,414 TRACE  [main] BasicBinder: binding parameter [5] as [INTEGER] - [7]
2020-11-25 21:30:48,414 TRACE  [main] BasicBinder: binding parameter [6] as [BIGINT] - [4]
2020-11-25 21:30:48,415 TRACE  [main] BasicBinder: binding parameter [1] as [BLOB] - [null]
2020-11-25 21:30:48,415 TRACE  [main] BasicBinder: binding parameter [2] as [DOUBLE] - [8.0]
2020-11-25 21:30:48,415 TRACE  [main] BasicBinder: binding parameter [3] as [INTEGER] - [0]
2020-11-25 21:30:48,415 TRACE  [main] BasicBinder: binding parameter [4] as [BOOLEAN] - [true]
2020-11-25 21:30:48,415 TRACE  [main] BasicBinder: binding parameter [5] as [INTEGER] - [8]
2020-11-25 21:30:48,415 TRACE  [main] BasicBinder: binding parameter [6] as [BIGINT] - [4]
2020-11-25 21:30:48,417 TRACE  [main] BasicBinder: binding parameter [1] as [BLOB] - [null]
2020-11-25 21:30:48,417 TRACE  [main] BasicBinder: binding parameter [2] as [DOUBLE] - [9.0]
2020-11-25 21:30:48,417 TRACE  [main] BasicBinder: binding parameter [3] as [INTEGER] - [0]
2020-11-25 21:30:48,417 TRACE  [main] BasicBinder: binding parameter [4] as [BOOLEAN] - [true]
2020-11-25 21:30:48,417 TRACE  [main] BasicBinder: binding parameter [5] as [INTEGER] - [9]
2020-11-25 21:30:48,417 TRACE  [main] BasicBinder: binding parameter [6] as [BIGINT] - [4]
2020-11-25 21:30:48,586 TRACE  [main] BasicExtractor: extracted value ([id1_1_] : [BIGINT]) - [1]
2020-11-25 21:30:48,587 TRACE  [main] BasicExtractor: extracted value ([descript2_1_] : [BLOB]) - [[70, 105, 110, 100, 32, 97, 108, 108, 32, 114, 111, 111, 116, 115, 32, 111, 102, 32, 103, 105, 118, 101, 110, 32, 112, 111, 108, 121, 110, 111, 109, 105, 97, 108]]
2020-11-25 21:30:48,587 TRACE  [main] BasicExtractor: extracted value ([is_solve3_1_] : [BOOLEAN]) - [false]
2020-11-25 21:30:48,587 TRACE  [main] BasicExtractor: extracted value ([kind4_1_] : [VARCHAR]) - [POLYNOMIAL]
2020-11-25 21:30:48,587 TRACE  [main] BasicExtractor: extracted value ([matrix_d5_1_] : [INTEGER]) - [1]
2020-11-25 21:30:48,587 TRACE  [main] BasicExtractor: extracted value ([parent_p7_1_] : [BIGINT]) - [null]
2020-11-25 21:30:48,587 TRACE  [main] BasicExtractor: extracted value ([problem_6_1_] : [INTEGER]) - [6]
2020-11-25 21:30:48,588 TRACE  [main] BasicExtractor: extracted value ([id1_1_] : [BIGINT]) - [2]
2020-11-25 21:30:48,588 TRACE  [main] BasicExtractor: extracted value ([descript2_1_] : [BLOB]) - [[100, 101, 115, 99, 114, 105, 112, 116, 105, 111, 110, 100, 101, 115, 99, 114, 105, 112, 116, 105, 111, 110]]
2020-11-25 21:30:48,589 TRACE  [main] BasicExtractor: extracted value ([is_solve3_1_] : [BOOLEAN]) - [null]
2020-11-25 21:30:48,589 TRACE  [main] BasicExtractor: extracted value ([kind4_1_] : [VARCHAR]) - [POLYNOMIAL]
2020-11-25 21:30:48,589 TRACE  [main] BasicExtractor: extracted value ([matrix_d5_1_] : [INTEGER]) - [1]
2020-11-25 21:30:48,589 TRACE  [main] BasicExtractor: extracted value ([parent_p7_1_] : [BIGINT]) - [null]
2020-11-25 21:30:48,590 TRACE  [main] BasicExtractor: extracted value ([problem_6_1_] : [INTEGER]) - [22]
2020-11-25 21:30:48,590 TRACE  [main] BasicExtractor: extracted value ([id1_1_] : [BIGINT]) - [3]
2020-11-25 21:30:48,590 TRACE  [main] BasicExtractor: extracted value ([descript2_1_] : [BLOB]) - [[112, 114, 111, 98, 108, 101, 109, 100, 101, 115, 99, 114, 105, 112, 116, 105, 111, 110]]
2020-11-25 21:30:48,590 TRACE  [main] BasicExtractor: extracted value ([is_solve3_1_] : [BOOLEAN]) - [null]
2020-11-25 21:30:48,590 TRACE  [main] BasicExtractor: extracted value ([kind4_1_] : [VARCHAR]) - [POLYNOMIAL]
2020-11-25 21:30:48,590 TRACE  [main] BasicExtractor: extracted value ([matrix_d5_1_] : [INTEGER]) - [1]
2020-11-25 21:30:48,591 TRACE  [main] BasicExtractor: extracted value ([parent_p7_1_] : [BIGINT]) - [null]
2020-11-25 21:30:48,591 TRACE  [main] BasicExtractor: extracted value ([problem_6_1_] : [INTEGER]) - [22]
2020-11-25 21:30:48,591 TRACE  [main] BasicExtractor: extracted value ([id1_1_] : [BIGINT]) - [4]
2020-11-25 21:30:48,591 TRACE  [main] BasicExtractor: extracted value ([descript2_1_] : [BLOB]) - [[100, 101, 115, 99, 114, 105, 112, 116, 105, 111, 110]]
2020-11-25 21:30:48,591 TRACE  [main] BasicExtractor: extracted value ([is_solve3_1_] : [BOOLEAN]) - [false]
2020-11-25 21:30:48,591 TRACE  [main] BasicExtractor: extracted value ([kind4_1_] : [VARCHAR]) - [POLYNOMIAL]
2020-11-25 21:30:48,592 TRACE  [main] BasicExtractor: extracted value ([matrix_d5_1_] : [INTEGER]) - [12]
2020-11-25 21:30:48,592 TRACE  [main] BasicExtractor: extracted value ([parent_p7_1_] : [BIGINT]) - [null]
2020-11-25 21:30:48,592 TRACE  [main] BasicExtractor: extracted value ([problem_6_1_] : [INTEGER]) - [null]
2020-11-25 21:30:48,592 TRACE  [main] BasicExtractor: extracted value ([id1_1_] : [BIGINT]) - [5]
2020-11-25 21:30:48,592 TRACE  [main] BasicExtractor: extracted value ([descript2_1_] : [BLOB]) - [[112, 114, 111, 98, 108, 101, 109, 100, 101, 115, 99, 114, 105, 112, 116, 105, 111, 110]]
2020-11-25 21:30:48,592 TRACE  [main] BasicExtractor: extracted value ([is_solve3_1_] : [BOOLEAN]) - [null]
2020-11-25 21:30:48,593 TRACE  [main] BasicExtractor: extracted value ([kind4_1_] : [VARCHAR]) - [POLYNOMIAL]
2020-11-25 21:30:48,593 TRACE  [main] BasicExtractor: extracted value ([matrix_d5_1_] : [INTEGER]) - [1]
2020-11-25 21:30:48,593 TRACE  [main] BasicExtractor: extracted value ([parent_p7_1_] : [BIGINT]) - [null]
2020-11-25 21:30:48,593 TRACE  [main] BasicExtractor: extracted value ([problem_6_1_] : [INTEGER]) - [22]
2020-11-25 21:30:48,593 TRACE  [main] CollectionType: Created collection wrapper: [com.sf.back.entities.Problem.children#1]
2020-11-25 21:30:48,594 TRACE  [main] CollectionType: Created collection wrapper: [com.sf.back.entities.Problem.matrixes#1]
2020-11-25 21:30:48,594 TRACE  [main] CollectionType: Created collection wrapper: [com.sf.back.entities.Problem.children#2]
2020-11-25 21:30:48,594 TRACE  [main] CollectionType: Created collection wrapper: [com.sf.back.entities.Problem.matrixes#2]
2020-11-25 21:30:48,595 TRACE  [main] CollectionType: Created collection wrapper: [com.sf.back.entities.Problem.children#3]
2020-11-25 21:30:48,595 TRACE  [main] CollectionType: Created collection wrapper: [com.sf.back.entities.Problem.matrixes#3]
2020-11-25 21:30:48,595 TRACE  [main] CollectionType: Created collection wrapper: [com.sf.back.entities.Problem.children#4]
2020-11-25 21:30:48,596 TRACE  [main] CollectionType: Created collection wrapper: [com.sf.back.entities.Problem.matrixes#4]
2020-11-25 21:30:48,596 TRACE  [main] CollectionType: Created collection wrapper: [com.sf.back.entities.Problem.children#5]
2020-11-25 21:30:48,596 TRACE  [main] CollectionType: Created collection wrapper: [com.sf.back.entities.Problem.matrixes#5]
2020-11-25 21:30:48,597 TRACE  [main] BasicBinder: binding parameter [1] as [BIGINT] - [5]
2020-11-25 21:30:48,598 TRACE  [main] BasicExtractor: extracted value ([id1_0_1_] : [BIGINT]) - [28]
2020-11-25 21:30:48,598 TRACE  [main] BasicExtractor: extracted value ([binary_v2_0_1_] : [BLOB]) - [null]
2020-11-25 21:30:48,598 TRACE  [main] BasicExtractor: extracted value ([float_va3_0_1_] : [DOUBLE]) - [1.0]
2020-11-25 21:30:48,599 TRACE  [main] BasicExtractor: extracted value ([i4_0_1_] : [INTEGER]) - [0]
2020-11-25 21:30:48,599 TRACE  [main] BasicExtractor: extracted value ([is_condi5_0_1_] : [BOOLEAN]) - [true]
2020-11-25 21:30:48,599 TRACE  [main] BasicExtractor: extracted value ([j6_0_1_] : [INTEGER]) - [0]
2020-11-25 21:30:48,599 TRACE  [main] BasicExtractor: extracted value ([problem_7_0_1_] : [BIGINT]) - [5]
2020-11-25 21:30:48,599 TRACE  [main] BasicExtractor: extracted value ([problem_7_0_0_] : [BIGINT]) - [5]
2020-11-25 21:30:48,599 TRACE  [main] BasicExtractor: extracted value ([id1_0_0_] : [BIGINT]) - [28]
2020-11-25 21:30:48,600 TRACE  [main] BasicExtractor: extracted value ([id1_0_1_] : [BIGINT]) - [29]
2020-11-25 21:30:48,600 TRACE  [main] BasicExtractor: extracted value ([binary_v2_0_1_] : [BLOB]) - [null]
2020-11-25 21:30:48,600 TRACE  [main] BasicExtractor: extracted value ([float_va3_0_1_] : [DOUBLE]) - [2.718281828459045]
2020-11-25 21:30:48,600 TRACE  [main] BasicExtractor: extracted value ([i4_0_1_] : [INTEGER]) - [0]
2020-11-25 21:30:48,600 TRACE  [main] BasicExtractor: extracted value ([is_condi5_0_1_] : [BOOLEAN]) - [true]
2020-11-25 21:30:48,600 TRACE  [main] BasicExtractor: extracted value ([j6_0_1_] : [INTEGER]) - [1]
2020-11-25 21:30:48,601 TRACE  [main] BasicExtractor: extracted value ([problem_7_0_1_] : [BIGINT]) - [5]
2020-11-25 21:30:48,601 TRACE  [main] BasicExtractor: extracted value ([problem_7_0_0_] : [BIGINT]) - [5]
2020-11-25 21:30:48,601 TRACE  [main] BasicExtractor: extracted value ([id1_0_0_] : [BIGINT]) - [29]
2020-11-25 21:30:48,601 TRACE  [main] BasicExtractor: extracted value ([id1_0_1_] : [BIGINT]) - [30]
2020-11-25 21:30:48,602 TRACE  [main] BasicExtractor: extracted value ([binary_v2_0_1_] : [BLOB]) - [null]
2020-11-25 21:30:48,602 TRACE  [main] BasicExtractor: extracted value ([float_va3_0_1_] : [DOUBLE]) - [7.38905609893065]
2020-11-25 21:30:48,602 TRACE  [main] BasicExtractor: extracted value ([i4_0_1_] : [INTEGER]) - [0]
2020-11-25 21:30:48,602 TRACE  [main] BasicExtractor: extracted value ([is_condi5_0_1_] : [BOOLEAN]) - [true]
2020-11-25 21:30:48,602 TRACE  [main] BasicExtractor: extracted value ([j6_0_1_] : [INTEGER]) - [2]
2020-11-25 21:30:48,602 TRACE  [main] BasicExtractor: extracted value ([problem_7_0_1_] : [BIGINT]) - [5]
2020-11-25 21:30:48,603 TRACE  [main] BasicExtractor: extracted value ([problem_7_0_0_] : [BIGINT]) - [5]
2020-11-25 21:30:48,603 TRACE  [main] BasicExtractor: extracted value ([id1_0_0_] : [BIGINT]) - [30]
2020-11-25 21:30:48,603 TRACE  [main] BasicExtractor: extracted value ([id1_0_1_] : [BIGINT]) - [31]
2020-11-25 21:30:48,603 TRACE  [main] BasicExtractor: extracted value ([binary_v2_0_1_] : [BLOB]) - [null]
2020-11-25 21:30:48,604 TRACE  [main] BasicExtractor: extracted value ([float_va3_0_1_] : [DOUBLE]) - [20.085536923187668]
2020-11-25 21:30:48,604 TRACE  [main] BasicExtractor: extracted value ([i4_0_1_] : [INTEGER]) - [0]
2020-11-25 21:30:48,604 TRACE  [main] BasicExtractor: extracted value ([is_condi5_0_1_] : [BOOLEAN]) - [true]
2020-11-25 21:30:48,605 TRACE  [main] BasicExtractor: extracted value ([j6_0_1_] : [INTEGER]) - [3]
2020-11-25 21:30:48,605 TRACE  [main] BasicExtractor: extracted value ([problem_7_0_1_] : [BIGINT]) - [5]
2020-11-25 21:30:48,606 TRACE  [main] BasicExtractor: extracted value ([problem_7_0_0_] : [BIGINT]) - [5]
2020-11-25 21:30:48,606 TRACE  [main] BasicExtractor: extracted value ([id1_0_0_] : [BIGINT]) - [31]
2020-11-25 21:30:48,606 TRACE  [main] BasicExtractor: extracted value ([id1_0_1_] : [BIGINT]) - [32]
2020-11-25 21:30:48,606 TRACE  [main] BasicExtractor: extracted value ([binary_v2_0_1_] : [BLOB]) - [null]
2020-11-25 21:30:48,607 TRACE  [main] BasicExtractor: extracted value ([float_va3_0_1_] : [DOUBLE]) - [54.598150033144236]
2020-11-25 21:30:48,607 TRACE  [main] BasicExtractor: extracted value ([i4_0_1_] : [INTEGER]) - [0]
2020-11-25 21:30:48,607 TRACE  [main] BasicExtractor: extracted value ([is_condi5_0_1_] : [BOOLEAN]) - [true]
2020-11-25 21:30:48,608 TRACE  [main] BasicExtractor: extracted value ([j6_0_1_] : [INTEGER]) - [4]
2020-11-25 21:30:48,608 TRACE  [main] BasicExtractor: extracted value ([problem_7_0_1_] : [BIGINT]) - [5]
2020-11-25 21:30:48,608 TRACE  [main] BasicExtractor: extracted value ([problem_7_0_0_] : [BIGINT]) - [5]
2020-11-25 21:30:48,609 TRACE  [main] BasicExtractor: extracted value ([id1_0_0_] : [BIGINT]) - [32]
2020-11-25 21:30:48,609 TRACE  [main] BasicExtractor: extracted value ([id1_0_1_] : [BIGINT]) - [33]
2020-11-25 21:30:48,609 TRACE  [main] BasicExtractor: extracted value ([binary_v2_0_1_] : [BLOB]) - [null]
2020-11-25 21:30:48,610 TRACE  [main] BasicExtractor: extracted value ([float_va3_0_1_] : [DOUBLE]) - [148.4131591025766]
2020-11-25 21:30:48,610 TRACE  [main] BasicExtractor: extracted value ([i4_0_1_] : [INTEGER]) - [0]
2020-11-25 21:30:48,610 TRACE  [main] BasicExtractor: extracted value ([is_condi5_0_1_] : [BOOLEAN]) - [true]
2020-11-25 21:30:48,610 TRACE  [main] BasicExtractor: extracted value ([j6_0_1_] : [INTEGER]) - [5]
2020-11-25 21:30:48,611 TRACE  [main] BasicExtractor: extracted value ([problem_7_0_1_] : [BIGINT]) - [5]
2020-11-25 21:30:48,611 TRACE  [main] BasicExtractor: extracted value ([problem_7_0_0_] : [BIGINT]) - [5]
2020-11-25 21:30:48,611 TRACE  [main] BasicExtractor: extracted value ([id1_0_0_] : [BIGINT]) - [33]
2020-11-25 21:30:48,613 TRACE  [main] BasicBinder: binding parameter [1] as [BIGINT] - [5]
2020-11-25 21:30:48,614 TRACE  [main] BasicBinder: binding parameter [1] as [BIGINT] - [4]
2020-11-25 21:30:48,615 TRACE  [main] BasicExtractor: extracted value ([id1_0_1_] : [BIGINT]) - [18]
2020-11-25 21:30:48,615 TRACE  [main] BasicExtractor: extracted value ([binary_v2_0_1_] : [BLOB]) - [null]
2020-11-25 21:30:48,615 TRACE  [main] BasicExtractor: extracted value ([float_va3_0_1_] : [DOUBLE]) - [0.0]
2020-11-25 21:30:48,615 TRACE  [main] BasicExtractor: extracted value ([i4_0_1_] : [INTEGER]) - [0]
2020-11-25 21:30:48,616 TRACE  [main] BasicExtractor: extracted value ([is_condi5_0_1_] : [BOOLEAN]) - [true]
2020-11-25 21:30:48,616 TRACE  [main] BasicExtractor: extracted value ([j6_0_1_] : [INTEGER]) - [0]
2020-11-25 21:30:48,616 TRACE  [main] BasicExtractor: extracted value ([problem_7_0_1_] : [BIGINT]) - [4]
2020-11-25 21:30:48,616 TRACE  [main] BasicExtractor: extracted value ([problem_7_0_0_] : [BIGINT]) - [4]
2020-11-25 21:30:48,616 TRACE  [main] BasicExtractor: extracted value ([id1_0_0_] : [BIGINT]) - [18]
2020-11-25 21:30:48,616 TRACE  [main] BasicExtractor: extracted value ([id1_0_1_] : [BIGINT]) - [19]
2020-11-25 21:30:48,617 TRACE  [main] BasicExtractor: extracted value ([binary_v2_0_1_] : [BLOB]) - [null]
2020-11-25 21:30:48,617 TRACE  [main] BasicExtractor: extracted value ([float_va3_0_1_] : [DOUBLE]) - [1.0]
2020-11-25 21:30:48,617 TRACE  [main] BasicExtractor: extracted value ([i4_0_1_] : [INTEGER]) - [0]
2020-11-25 21:30:48,617 TRACE  [main] BasicExtractor: extracted value ([is_condi5_0_1_] : [BOOLEAN]) - [true]
2020-11-25 21:30:48,617 TRACE  [main] BasicExtractor: extracted value ([j6_0_1_] : [INTEGER]) - [1]
2020-11-25 21:30:48,617 TRACE  [main] BasicExtractor: extracted value ([problem_7_0_1_] : [BIGINT]) - [4]
2020-11-25 21:30:48,617 TRACE  [main] BasicExtractor: extracted value ([problem_7_0_0_] : [BIGINT]) - [4]
2020-11-25 21:30:48,617 TRACE  [main] BasicExtractor: extracted value ([id1_0_0_] : [BIGINT]) - [19]
2020-11-25 21:30:48,618 TRACE  [main] BasicExtractor: extracted value ([id1_0_1_] : [BIGINT]) - [20]
2020-11-25 21:30:48,618 TRACE  [main] BasicExtractor: extracted value ([binary_v2_0_1_] : [BLOB]) - [null]
2020-11-25 21:30:48,618 TRACE  [main] BasicExtractor: extracted value ([float_va3_0_1_] : [DOUBLE]) - [2.0]
2020-11-25 21:30:48,618 TRACE  [main] BasicExtractor: extracted value ([i4_0_1_] : [INTEGER]) - [0]
2020-11-25 21:30:48,619 TRACE  [main] BasicExtractor: extracted value ([is_condi5_0_1_] : [BOOLEAN]) - [true]
2020-11-25 21:30:48,619 TRACE  [main] BasicExtractor: extracted value ([j6_0_1_] : [INTEGER]) - [2]
2020-11-25 21:30:48,619 TRACE  [main] BasicExtractor: extracted value ([problem_7_0_1_] : [BIGINT]) - [4]
2020-11-25 21:30:48,619 TRACE  [main] BasicExtractor: extracted value ([problem_7_0_0_] : [BIGINT]) - [4]
2020-11-25 21:30:48,619 TRACE  [main] BasicExtractor: extracted value ([id1_0_0_] : [BIGINT]) - [20]
2020-11-25 21:30:48,619 TRACE  [main] BasicExtractor: extracted value ([id1_0_1_] : [BIGINT]) - [21]
2020-11-25 21:30:48,619 TRACE  [main] BasicExtractor: extracted value ([binary_v2_0_1_] : [BLOB]) - [null]
2020-11-25 21:30:48,620 TRACE  [main] BasicExtractor: extracted value ([float_va3_0_1_] : [DOUBLE]) - [3.0]
2020-11-25 21:30:48,620 TRACE  [main] BasicExtractor: extracted value ([i4_0_1_] : [INTEGER]) - [0]
2020-11-25 21:30:48,620 TRACE  [main] BasicExtractor: extracted value ([is_condi5_0_1_] : [BOOLEAN]) - [true]
2020-11-25 21:30:48,620 TRACE  [main] BasicExtractor: extracted value ([j6_0_1_] : [INTEGER]) - [3]
2020-11-25 21:30:48,620 TRACE  [main] BasicExtractor: extracted value ([problem_7_0_1_] : [BIGINT]) - [4]
2020-11-25 21:30:48,620 TRACE  [main] BasicExtractor: extracted value ([problem_7_0_0_] : [BIGINT]) - [4]
2020-11-25 21:30:48,620 TRACE  [main] BasicExtractor: extracted value ([id1_0_0_] : [BIGINT]) - [21]
2020-11-25 21:30:48,620 TRACE  [main] BasicExtractor: extracted value ([id1_0_1_] : [BIGINT]) - [22]
2020-11-25 21:30:48,621 TRACE  [main] BasicExtractor: extracted value ([binary_v2_0_1_] : [BLOB]) - [null]
2020-11-25 21:30:48,621 TRACE  [main] BasicExtractor: extracted value ([float_va3_0_1_] : [DOUBLE]) - [4.0]
2020-11-25 21:30:48,621 TRACE  [main] BasicExtractor: extracted value ([i4_0_1_] : [INTEGER]) - [0]
2020-11-25 21:30:48,621 TRACE  [main] BasicExtractor: extracted value ([is_condi5_0_1_] : [BOOLEAN]) - [true]
2020-11-25 21:30:48,621 TRACE  [main] BasicExtractor: extracted value ([j6_0_1_] : [INTEGER]) - [4]
2020-11-25 21:30:48,622 TRACE  [main] BasicExtractor: extracted value ([problem_7_0_1_] : [BIGINT]) - [4]
2020-11-25 21:30:48,622 TRACE  [main] BasicExtractor: extracted value ([problem_7_0_0_] : [BIGINT]) - [4]
2020-11-25 21:30:48,622 TRACE  [main] BasicExtractor: extracted value ([id1_0_0_] : [BIGINT]) - [22]
2020-11-25 21:30:48,623 TRACE  [main] BasicExtractor: extracted value ([id1_0_1_] : [BIGINT]) - [23]
2020-11-25 21:30:48,623 TRACE  [main] BasicExtractor: extracted value ([binary_v2_0_1_] : [BLOB]) - [null]
2020-11-25 21:30:48,623 TRACE  [main] BasicExtractor: extracted value ([float_va3_0_1_] : [DOUBLE]) - [5.0]
2020-11-25 21:30:48,623 TRACE  [main] BasicExtractor: extracted value ([i4_0_1_] : [INTEGER]) - [0]
2020-11-25 21:30:48,623 TRACE  [main] BasicExtractor: extracted value ([is_condi5_0_1_] : [BOOLEAN]) - [true]
2020-11-25 21:30:48,623 TRACE  [main] BasicExtractor: extracted value ([j6_0_1_] : [INTEGER]) - [5]
2020-11-25 21:30:48,623 TRACE  [main] BasicExtractor: extracted value ([problem_7_0_1_] : [BIGINT]) - [4]
2020-11-25 21:30:48,624 TRACE  [main] BasicExtractor: extracted value ([problem_7_0_0_] : [BIGINT]) - [4]
2020-11-25 21:30:48,624 TRACE  [main] BasicExtractor: extracted value ([id1_0_0_] : [BIGINT]) - [23]
2020-11-25 21:30:48,624 TRACE  [main] BasicExtractor: extracted value ([id1_0_1_] : [BIGINT]) - [24]
2020-11-25 21:30:48,624 TRACE  [main] BasicExtractor: extracted value ([binary_v2_0_1_] : [BLOB]) - [null]
2020-11-25 21:30:48,625 TRACE  [main] BasicExtractor: extracted value ([float_va3_0_1_] : [DOUBLE]) - [6.0]
2020-11-25 21:30:48,625 TRACE  [main] BasicExtractor: extracted value ([i4_0_1_] : [INTEGER]) - [0]
2020-11-25 21:30:48,625 TRACE  [main] BasicExtractor: extracted value ([is_condi5_0_1_] : [BOOLEAN]) - [true]
2020-11-25 21:30:48,625 TRACE  [main] BasicExtractor: extracted value ([j6_0_1_] : [INTEGER]) - [6]
2020-11-25 21:30:48,625 TRACE  [main] BasicExtractor: extracted value ([problem_7_0_1_] : [BIGINT]) - [4]
2020-11-25 21:30:48,625 TRACE  [main] BasicExtractor: extracted value ([problem_7_0_0_] : [BIGINT]) - [4]
2020-11-25 21:30:48,625 TRACE  [main] BasicExtractor: extracted value ([id1_0_0_] : [BIGINT]) - [24]
2020-11-25 21:30:48,625 TRACE  [main] BasicExtractor: extracted value ([id1_0_1_] : [BIGINT]) - [25]
2020-11-25 21:30:48,626 TRACE  [main] BasicExtractor: extracted value ([binary_v2_0_1_] : [BLOB]) - [null]
2020-11-25 21:30:48,626 TRACE  [main] BasicExtractor: extracted value ([float_va3_0_1_] : [DOUBLE]) - [7.0]
2020-11-25 21:30:48,626 TRACE  [main] BasicExtractor: extracted value ([i4_0_1_] : [INTEGER]) - [0]
2020-11-25 21:30:48,626 TRACE  [main] BasicExtractor: extracted value ([is_condi5_0_1_] : [BOOLEAN]) - [true]
2020-11-25 21:30:48,626 TRACE  [main] BasicExtractor: extracted value ([j6_0_1_] : [INTEGER]) - [7]
2020-11-25 21:30:48,626 TRACE  [main] BasicExtractor: extracted value ([problem_7_0_1_] : [BIGINT]) - [4]
2020-11-25 21:30:48,626 TRACE  [main] BasicExtractor: extracted value ([problem_7_0_0_] : [BIGINT]) - [4]
2020-11-25 21:30:48,626 TRACE  [main] BasicExtractor: extracted value ([id1_0_0_] : [BIGINT]) - [25]
2020-11-25 21:30:48,627 TRACE  [main] BasicExtractor: extracted value ([id1_0_1_] : [BIGINT]) - [26]
2020-11-25 21:30:48,627 TRACE  [main] BasicExtractor: extracted value ([binary_v2_0_1_] : [BLOB]) - [null]
2020-11-25 21:30:48,627 TRACE  [main] BasicExtractor: extracted value ([float_va3_0_1_] : [DOUBLE]) - [8.0]
2020-11-25 21:30:48,627 TRACE  [main] BasicExtractor: extracted value ([i4_0_1_] : [INTEGER]) - [0]
2020-11-25 21:30:48,627 TRACE  [main] BasicExtractor: extracted value ([is_condi5_0_1_] : [BOOLEAN]) - [true]
2020-11-25 21:30:48,627 TRACE  [main] BasicExtractor: extracted value ([j6_0_1_] : [INTEGER]) - [8]
2020-11-25 21:30:48,627 TRACE  [main] BasicExtractor: extracted value ([problem_7_0_1_] : [BIGINT]) - [4]
2020-11-25 21:30:48,628 TRACE  [main] BasicExtractor: extracted value ([problem_7_0_0_] : [BIGINT]) - [4]
2020-11-25 21:30:48,628 TRACE  [main] BasicExtractor: extracted value ([id1_0_0_] : [BIGINT]) - [26]
2020-11-25 21:30:48,628 TRACE  [main] BasicExtractor: extracted value ([id1_0_1_] : [BIGINT]) - [27]
2020-11-25 21:30:48,628 TRACE  [main] BasicExtractor: extracted value ([binary_v2_0_1_] : [BLOB]) - [null]
2020-11-25 21:30:48,628 TRACE  [main] BasicExtractor: extracted value ([float_va3_0_1_] : [DOUBLE]) - [9.0]
2020-11-25 21:30:48,628 TRACE  [main] BasicExtractor: extracted value ([i4_0_1_] : [INTEGER]) - [0]
2020-11-25 21:30:48,628 TRACE  [main] BasicExtractor: extracted value ([is_condi5_0_1_] : [BOOLEAN]) - [true]
2020-11-25 21:30:48,628 TRACE  [main] BasicExtractor: extracted value ([j6_0_1_] : [INTEGER]) - [9]
2020-11-25 21:30:48,628 TRACE  [main] BasicExtractor: extracted value ([problem_7_0_1_] : [BIGINT]) - [4]
2020-11-25 21:30:48,629 TRACE  [main] BasicExtractor: extracted value ([problem_7_0_0_] : [BIGINT]) - [4]
2020-11-25 21:30:48,629 TRACE  [main] BasicExtractor: extracted value ([id1_0_0_] : [BIGINT]) - [27]
2020-11-25 21:30:48,631 TRACE  [main] BasicBinder: binding parameter [1] as [BIGINT] - [4]
2020-11-25 21:30:48,632 TRACE  [main] BasicBinder: binding parameter [1] as [BIGINT] - [3]
2020-11-25 21:30:48,633 TRACE  [main] BasicExtractor: extracted value ([id1_0_1_] : [BIGINT]) - [12]
2020-11-25 21:30:48,633 TRACE  [main] BasicExtractor: extracted value ([binary_v2_0_1_] : [BLOB]) - [null]
2020-11-25 21:30:48,633 TRACE  [main] BasicExtractor: extracted value ([float_va3_0_1_] : [DOUBLE]) - [1.0]
2020-11-25 21:30:48,634 TRACE  [main] BasicExtractor: extracted value ([i4_0_1_] : [INTEGER]) - [0]
2020-11-25 21:30:48,634 TRACE  [main] BasicExtractor: extracted value ([is_condi5_0_1_] : [BOOLEAN]) - [true]
2020-11-25 21:30:48,634 TRACE  [main] BasicExtractor: extracted value ([j6_0_1_] : [INTEGER]) - [0]
2020-11-25 21:30:48,634 TRACE  [main] BasicExtractor: extracted value ([problem_7_0_1_] : [BIGINT]) - [3]
2020-11-25 21:30:48,634 TRACE  [main] BasicExtractor: extracted value ([problem_7_0_0_] : [BIGINT]) - [3]
2020-11-25 21:30:48,635 TRACE  [main] BasicExtractor: extracted value ([id1_0_0_] : [BIGINT]) - [12]
2020-11-25 21:30:48,635 TRACE  [main] BasicExtractor: extracted value ([id1_0_1_] : [BIGINT]) - [13]
2020-11-25 21:30:48,635 TRACE  [main] BasicExtractor: extracted value ([binary_v2_0_1_] : [BLOB]) - [null]
2020-11-25 21:30:48,635 TRACE  [main] BasicExtractor: extracted value ([float_va3_0_1_] : [DOUBLE]) - [2.718281828459045]
2020-11-25 21:30:48,635 TRACE  [main] BasicExtractor: extracted value ([i4_0_1_] : [INTEGER]) - [0]
2020-11-25 21:30:48,635 TRACE  [main] BasicExtractor: extracted value ([is_condi5_0_1_] : [BOOLEAN]) - [true]
2020-11-25 21:30:48,636 TRACE  [main] BasicExtractor: extracted value ([j6_0_1_] : [INTEGER]) - [1]
2020-11-25 21:30:48,636 TRACE  [main] BasicExtractor: extracted value ([problem_7_0_1_] : [BIGINT]) - [3]
2020-11-25 21:30:48,636 TRACE  [main] BasicExtractor: extracted value ([problem_7_0_0_] : [BIGINT]) - [3]
2020-11-25 21:30:48,636 TRACE  [main] BasicExtractor: extracted value ([id1_0_0_] : [BIGINT]) - [13]
2020-11-25 21:30:48,636 TRACE  [main] BasicExtractor: extracted value ([id1_0_1_] : [BIGINT]) - [14]
2020-11-25 21:30:48,636 TRACE  [main] BasicExtractor: extracted value ([binary_v2_0_1_] : [BLOB]) - [null]
2020-11-25 21:30:48,637 TRACE  [main] BasicExtractor: extracted value ([float_va3_0_1_] : [DOUBLE]) - [7.38905609893065]
2020-11-25 21:30:48,637 TRACE  [main] BasicExtractor: extracted value ([i4_0_1_] : [INTEGER]) - [0]
2020-11-25 21:30:48,637 TRACE  [main] BasicExtractor: extracted value ([is_condi5_0_1_] : [BOOLEAN]) - [true]
2020-11-25 21:30:48,637 TRACE  [main] BasicExtractor: extracted value ([j6_0_1_] : [INTEGER]) - [2]
2020-11-25 21:30:48,637 TRACE  [main] BasicExtractor: extracted value ([problem_7_0_1_] : [BIGINT]) - [3]
2020-11-25 21:30:48,637 TRACE  [main] BasicExtractor: extracted value ([problem_7_0_0_] : [BIGINT]) - [3]
2020-11-25 21:30:48,637 TRACE  [main] BasicExtractor: extracted value ([id1_0_0_] : [BIGINT]) - [14]
2020-11-25 21:30:48,637 TRACE  [main] BasicExtractor: extracted value ([id1_0_1_] : [BIGINT]) - [15]
2020-11-25 21:30:48,638 TRACE  [main] BasicExtractor: extracted value ([binary_v2_0_1_] : [BLOB]) - [null]
2020-11-25 21:30:48,638 TRACE  [main] BasicExtractor: extracted value ([float_va3_0_1_] : [DOUBLE]) - [20.085536923187668]
2020-11-25 21:30:48,638 TRACE  [main] BasicExtractor: extracted value ([i4_0_1_] : [INTEGER]) - [0]
2020-11-25 21:30:48,638 TRACE  [main] BasicExtractor: extracted value ([is_condi5_0_1_] : [BOOLEAN]) - [true]
2020-11-25 21:30:48,638 TRACE  [main] BasicExtractor: extracted value ([j6_0_1_] : [INTEGER]) - [3]
2020-11-25 21:30:48,638 TRACE  [main] BasicExtractor: extracted value ([problem_7_0_1_] : [BIGINT]) - [3]
2020-11-25 21:30:48,638 TRACE  [main] BasicExtractor: extracted value ([problem_7_0_0_] : [BIGINT]) - [3]
2020-11-25 21:30:48,638 TRACE  [main] BasicExtractor: extracted value ([id1_0_0_] : [BIGINT]) - [15]
2020-11-25 21:30:48,638 TRACE  [main] BasicExtractor: extracted value ([id1_0_1_] : [BIGINT]) - [16]
2020-11-25 21:30:48,639 TRACE  [main] BasicExtractor: extracted value ([binary_v2_0_1_] : [BLOB]) - [null]
2020-11-25 21:30:48,639 TRACE  [main] BasicExtractor: extracted value ([float_va3_0_1_] : [DOUBLE]) - [54.598150033144236]
2020-11-25 21:30:48,639 TRACE  [main] BasicExtractor: extracted value ([i4_0_1_] : [INTEGER]) - [0]
2020-11-25 21:30:48,643 TRACE  [main] BasicExtractor: extracted value ([is_condi5_0_1_] : [BOOLEAN]) - [true]
2020-11-25 21:30:48,643 TRACE  [main] BasicExtractor: extracted value ([j6_0_1_] : [INTEGER]) - [4]
2020-11-25 21:30:48,644 TRACE  [main] BasicExtractor: extracted value ([problem_7_0_1_] : [BIGINT]) - [3]
2020-11-25 21:30:48,644 TRACE  [main] BasicExtractor: extracted value ([problem_7_0_0_] : [BIGINT]) - [3]
2020-11-25 21:30:48,644 TRACE  [main] BasicExtractor: extracted value ([id1_0_0_] : [BIGINT]) - [16]
2020-11-25 21:30:48,645 TRACE  [main] BasicExtractor: extracted value ([id1_0_1_] : [BIGINT]) - [17]
2020-11-25 21:30:48,645 TRACE  [main] BasicExtractor: extracted value ([binary_v2_0_1_] : [BLOB]) - [null]
2020-11-25 21:30:48,645 TRACE  [main] BasicExtractor: extracted value ([float_va3_0_1_] : [DOUBLE]) - [148.4131591025766]
2020-11-25 21:30:48,646 TRACE  [main] BasicExtractor: extracted value ([i4_0_1_] : [INTEGER]) - [0]
2020-11-25 21:30:48,646 TRACE  [main] BasicExtractor: extracted value ([is_condi5_0_1_] : [BOOLEAN]) - [true]
2020-11-25 21:30:48,646 TRACE  [main] BasicExtractor: extracted value ([j6_0_1_] : [INTEGER]) - [5]
2020-11-25 21:30:48,647 TRACE  [main] BasicExtractor: extracted value ([problem_7_0_1_] : [BIGINT]) - [3]
2020-11-25 21:30:48,647 TRACE  [main] BasicExtractor: extracted value ([problem_7_0_0_] : [BIGINT]) - [3]
2020-11-25 21:30:48,647 TRACE  [main] BasicExtractor: extracted value ([id1_0_0_] : [BIGINT]) - [17]
2020-11-25 21:30:48,652 TRACE  [main] BasicBinder: binding parameter [1] as [BIGINT] - [3]
2020-11-25 21:30:48,655 TRACE  [main] BasicBinder: binding parameter [1] as [BIGINT] - [2]
2020-11-25 21:30:48,656 TRACE  [main] BasicExtractor: extracted value ([id1_0_1_] : [BIGINT]) - [6]
2020-11-25 21:30:48,657 TRACE  [main] BasicExtractor: extracted value ([binary_v2_0_1_] : [BLOB]) - [null]
2020-11-25 21:30:48,658 TRACE  [main] BasicExtractor: extracted value ([float_va3_0_1_] : [DOUBLE]) - [1.01]
2020-11-25 21:30:48,658 TRACE  [main] BasicExtractor: extracted value ([i4_0_1_] : [INTEGER]) - [0]
2020-11-25 21:30:48,658 TRACE  [main] BasicExtractor: extracted value ([is_condi5_0_1_] : [BOOLEAN]) - [true]
2020-11-25 21:30:48,659 TRACE  [main] BasicExtractor: extracted value ([j6_0_1_] : [INTEGER]) - [0]
2020-11-25 21:30:48,659 TRACE  [main] BasicExtractor: extracted value ([problem_7_0_1_] : [BIGINT]) - [2]
2020-11-25 21:30:48,659 TRACE  [main] BasicExtractor: extracted value ([problem_7_0_0_] : [BIGINT]) - [2]
2020-11-25 21:30:48,659 TRACE  [main] BasicExtractor: extracted value ([id1_0_0_] : [BIGINT]) - [6]
2020-11-25 21:30:48,659 TRACE  [main] BasicExtractor: extracted value ([id1_0_1_] : [BIGINT]) - [7]
2020-11-25 21:30:48,660 TRACE  [main] BasicExtractor: extracted value ([binary_v2_0_1_] : [BLOB]) - [null]
2020-11-25 21:30:48,660 TRACE  [main] BasicExtractor: extracted value ([float_va3_0_1_] : [DOUBLE]) - [2.718281828459045]
2020-11-25 21:30:48,660 TRACE  [main] BasicExtractor: extracted value ([i4_0_1_] : [INTEGER]) - [0]
2020-11-25 21:30:48,660 TRACE  [main] BasicExtractor: extracted value ([is_condi5_0_1_] : [BOOLEAN]) - [true]
2020-11-25 21:30:48,660 TRACE  [main] BasicExtractor: extracted value ([j6_0_1_] : [INTEGER]) - [1]
2020-11-25 21:30:48,660 TRACE  [main] BasicExtractor: extracted value ([problem_7_0_1_] : [BIGINT]) - [2]
2020-11-25 21:30:48,660 TRACE  [main] BasicExtractor: extracted value ([problem_7_0_0_] : [BIGINT]) - [2]
2020-11-25 21:30:48,661 TRACE  [main] BasicExtractor: extracted value ([id1_0_0_] : [BIGINT]) - [7]
2020-11-25 21:30:48,661 TRACE  [main] BasicExtractor: extracted value ([id1_0_1_] : [BIGINT]) - [8]
2020-11-25 21:30:48,661 TRACE  [main] BasicExtractor: extracted value ([binary_v2_0_1_] : [BLOB]) - [null]
2020-11-25 21:30:48,662 TRACE  [main] BasicExtractor: extracted value ([float_va3_0_1_] : [DOUBLE]) - [7.38905609893065]
2020-11-25 21:30:48,662 TRACE  [main] BasicExtractor: extracted value ([i4_0_1_] : [INTEGER]) - [0]
2020-11-25 21:30:48,663 TRACE  [main] BasicExtractor: extracted value ([is_condi5_0_1_] : [BOOLEAN]) - [true]
2020-11-25 21:30:48,663 TRACE  [main] BasicExtractor: extracted value ([j6_0_1_] : [INTEGER]) - [2]
2020-11-25 21:30:48,663 TRACE  [main] BasicExtractor: extracted value ([problem_7_0_1_] : [BIGINT]) - [2]
2020-11-25 21:30:48,663 TRACE  [main] BasicExtractor: extracted value ([problem_7_0_0_] : [BIGINT]) - [2]
2020-11-25 21:30:48,663 TRACE  [main] BasicExtractor: extracted value ([id1_0_0_] : [BIGINT]) - [8]
2020-11-25 21:30:48,664 TRACE  [main] BasicExtractor: extracted value ([id1_0_1_] : [BIGINT]) - [9]
2020-11-25 21:30:48,664 TRACE  [main] BasicExtractor: extracted value ([binary_v2_0_1_] : [BLOB]) - [null]
2020-11-25 21:30:48,664 TRACE  [main] BasicExtractor: extracted value ([float_va3_0_1_] : [DOUBLE]) - [20.085536923187668]
2020-11-25 21:30:48,664 TRACE  [main] BasicExtractor: extracted value ([i4_0_1_] : [INTEGER]) - [0]
2020-11-25 21:30:48,664 TRACE  [main] BasicExtractor: extracted value ([is_condi5_0_1_] : [BOOLEAN]) - [true]
2020-11-25 21:30:48,665 TRACE  [main] BasicExtractor: extracted value ([j6_0_1_] : [INTEGER]) - [3]
2020-11-25 21:30:48,665 TRACE  [main] BasicExtractor: extracted value ([problem_7_0_1_] : [BIGINT]) - [2]
2020-11-25 21:30:48,665 TRACE  [main] BasicExtractor: extracted value ([problem_7_0_0_] : [BIGINT]) - [2]
2020-11-25 21:30:48,665 TRACE  [main] BasicExtractor: extracted value ([id1_0_0_] : [BIGINT]) - [9]
2020-11-25 21:30:48,665 TRACE  [main] BasicExtractor: extracted value ([id1_0_1_] : [BIGINT]) - [10]
2020-11-25 21:30:48,665 TRACE  [main] BasicExtractor: extracted value ([binary_v2_0_1_] : [BLOB]) - [null]
2020-11-25 21:30:48,666 TRACE  [main] BasicExtractor: extracted value ([float_va3_0_1_] : [DOUBLE]) - [54.598150033144236]
2020-11-25 21:30:48,666 TRACE  [main] BasicExtractor: extracted value ([i4_0_1_] : [INTEGER]) - [0]
2020-11-25 21:30:48,666 TRACE  [main] BasicExtractor: extracted value ([is_condi5_0_1_] : [BOOLEAN]) - [true]
2020-11-25 21:30:48,666 TRACE  [main] BasicExtractor: extracted value ([j6_0_1_] : [INTEGER]) - [4]
2020-11-25 21:30:48,666 TRACE  [main] BasicExtractor: extracted value ([problem_7_0_1_] : [BIGINT]) - [2]
2020-11-25 21:30:48,666 TRACE  [main] BasicExtractor: extracted value ([problem_7_0_0_] : [BIGINT]) - [2]
2020-11-25 21:30:48,666 TRACE  [main] BasicExtractor: extracted value ([id1_0_0_] : [BIGINT]) - [10]
2020-11-25 21:30:48,667 TRACE  [main] BasicExtractor: extracted value ([id1_0_1_] : [BIGINT]) - [11]
2020-11-25 21:30:48,667 TRACE  [main] BasicExtractor: extracted value ([binary_v2_0_1_] : [BLOB]) - [null]
2020-11-25 21:30:48,667 TRACE  [main] BasicExtractor: extracted value ([float_va3_0_1_] : [DOUBLE]) - [148.4131591025766]
2020-11-25 21:30:48,668 TRACE  [main] BasicExtractor: extracted value ([i4_0_1_] : [INTEGER]) - [0]
2020-11-25 21:30:48,668 TRACE  [main] BasicExtractor: extracted value ([is_condi5_0_1_] : [BOOLEAN]) - [true]
2020-11-25 21:30:48,668 TRACE  [main] BasicExtractor: extracted value ([j6_0_1_] : [INTEGER]) - [5]
2020-11-25 21:30:48,668 TRACE  [main] BasicExtractor: extracted value ([problem_7_0_1_] : [BIGINT]) - [2]
2020-11-25 21:30:48,669 TRACE  [main] BasicExtractor: extracted value ([problem_7_0_0_] : [BIGINT]) - [2]
2020-11-25 21:30:48,669 TRACE  [main] BasicExtractor: extracted value ([id1_0_0_] : [BIGINT]) - [11]
2020-11-25 21:30:48,673 TRACE  [main] BasicBinder: binding parameter [1] as [BIGINT] - [2]
2020-11-25 21:30:48,675 TRACE  [main] BasicBinder: binding parameter [1] as [BIGINT] - [1]
2020-11-25 21:30:48,675 TRACE  [main] BasicExtractor: extracted value ([id1_0_1_] : [BIGINT]) - [1]
2020-11-25 21:30:48,676 TRACE  [main] BasicExtractor: extracted value ([binary_v2_0_1_] : [BLOB]) - [null]
2020-11-25 21:30:48,676 TRACE  [main] BasicExtractor: extracted value ([float_va3_0_1_] : [DOUBLE]) - [1.0]
2020-11-25 21:30:48,676 TRACE  [main] BasicExtractor: extracted value ([i4_0_1_] : [INTEGER]) - [0]
2020-11-25 21:30:48,676 TRACE  [main] BasicExtractor: extracted value ([is_condi5_0_1_] : [BOOLEAN]) - [true]
2020-11-25 21:30:48,676 TRACE  [main] BasicExtractor: extracted value ([j6_0_1_] : [INTEGER]) - [0]
2020-11-25 21:30:48,676 TRACE  [main] BasicExtractor: extracted value ([problem_7_0_1_] : [BIGINT]) - [1]
2020-11-25 21:30:48,677 TRACE  [main] BasicExtractor: extracted value ([problem_7_0_0_] : [BIGINT]) - [1]
2020-11-25 21:30:48,677 TRACE  [main] BasicExtractor: extracted value ([id1_0_0_] : [BIGINT]) - [1]
2020-11-25 21:30:48,677 TRACE  [main] BasicExtractor: extracted value ([id1_0_1_] : [BIGINT]) - [2]
2020-11-25 21:30:48,677 TRACE  [main] BasicExtractor: extracted value ([binary_v2_0_1_] : [BLOB]) - [null]
2020-11-25 21:30:48,677 TRACE  [main] BasicExtractor: extracted value ([float_va3_0_1_] : [DOUBLE]) - [2.0]
2020-11-25 21:30:48,678 TRACE  [main] BasicExtractor: extracted value ([i4_0_1_] : [INTEGER]) - [0]
2020-11-25 21:30:48,678 TRACE  [main] BasicExtractor: extracted value ([is_condi5_0_1_] : [BOOLEAN]) - [true]
2020-11-25 21:30:48,678 TRACE  [main] BasicExtractor: extracted value ([j6_0_1_] : [INTEGER]) - [1]
2020-11-25 21:30:48,678 TRACE  [main] BasicExtractor: extracted value ([problem_7_0_1_] : [BIGINT]) - [1]
2020-11-25 21:30:48,678 TRACE  [main] BasicExtractor: extracted value ([problem_7_0_0_] : [BIGINT]) - [1]
2020-11-25 21:30:48,678 TRACE  [main] BasicExtractor: extracted value ([id1_0_0_] : [BIGINT]) - [2]
2020-11-25 21:30:48,678 TRACE  [main] BasicExtractor: extracted value ([id1_0_1_] : [BIGINT]) - [3]
2020-11-25 21:30:48,679 TRACE  [main] BasicExtractor: extracted value ([binary_v2_0_1_] : [BLOB]) - [null]
2020-11-25 21:30:48,679 TRACE  [main] BasicExtractor: extracted value ([float_va3_0_1_] : [DOUBLE]) - [1.0]
2020-11-25 21:30:48,679 TRACE  [main] BasicExtractor: extracted value ([i4_0_1_] : [INTEGER]) - [0]
2020-11-25 21:30:48,679 TRACE  [main] BasicExtractor: extracted value ([is_condi5_0_1_] : [BOOLEAN]) - [true]
2020-11-25 21:30:48,679 TRACE  [main] BasicExtractor: extracted value ([j6_0_1_] : [INTEGER]) - [2]
2020-11-25 21:30:48,680 TRACE  [main] BasicExtractor: extracted value ([problem_7_0_1_] : [BIGINT]) - [1]
2020-11-25 21:30:48,680 TRACE  [main] BasicExtractor: extracted value ([problem_7_0_0_] : [BIGINT]) - [1]
2020-11-25 21:30:48,680 TRACE  [main] BasicExtractor: extracted value ([id1_0_0_] : [BIGINT]) - [3]
2020-11-25 21:30:48,680 TRACE  [main] BasicExtractor: extracted value ([id1_0_1_] : [BIGINT]) - [4]
2020-11-25 21:30:48,680 TRACE  [main] BasicExtractor: extracted value ([binary_v2_0_1_] : [BLOB]) - [null]
2020-11-25 21:30:48,681 TRACE  [main] BasicExtractor: extracted value ([float_va3_0_1_] : [DOUBLE]) - [1.0]
2020-11-25 21:30:48,681 TRACE  [main] BasicExtractor: extracted value ([i4_0_1_] : [INTEGER]) - [0]
2020-11-25 21:30:48,681 TRACE  [main] BasicExtractor: extracted value ([is_condi5_0_1_] : [BOOLEAN]) - [false]
2020-11-25 21:30:48,682 TRACE  [main] BasicExtractor: extracted value ([j6_0_1_] : [INTEGER]) - [0]
2020-11-25 21:30:48,682 TRACE  [main] BasicExtractor: extracted value ([problem_7_0_1_] : [BIGINT]) - [1]
2020-11-25 21:30:48,682 TRACE  [main] BasicExtractor: extracted value ([problem_7_0_0_] : [BIGINT]) - [1]
2020-11-25 21:30:48,683 TRACE  [main] BasicExtractor: extracted value ([id1_0_0_] : [BIGINT]) - [4]
2020-11-25 21:30:48,683 TRACE  [main] BasicExtractor: extracted value ([id1_0_1_] : [BIGINT]) - [5]
2020-11-25 21:30:48,684 TRACE  [main] BasicExtractor: extracted value ([binary_v2_0_1_] : [BLOB]) - [null]
2020-11-25 21:30:48,684 TRACE  [main] BasicExtractor: extracted value ([float_va3_0_1_] : [DOUBLE]) - [1.0]
2020-11-25 21:30:48,685 TRACE  [main] BasicExtractor: extracted value ([i4_0_1_] : [INTEGER]) - [0]
2020-11-25 21:30:48,685 TRACE  [main] BasicExtractor: extracted value ([is_condi5_0_1_] : [BOOLEAN]) - [false]
2020-11-25 21:30:48,685 TRACE  [main] BasicExtractor: extracted value ([j6_0_1_] : [INTEGER]) - [1]
2020-11-25 21:30:48,685 TRACE  [main] BasicExtractor: extracted value ([problem_7_0_1_] : [BIGINT]) - [1]
2020-11-25 21:30:48,686 TRACE  [main] BasicExtractor: extracted value ([problem_7_0_0_] : [BIGINT]) - [1]
2020-11-25 21:30:48,686 TRACE  [main] BasicExtractor: extracted value ([id1_0_0_] : [BIGINT]) - [5]
2020-11-25 21:30:48,687 TRACE  [main] BasicBinder: binding parameter [1] as [BIGINT] - [1]
2020-11-25 21:30:48,725 TRACE  [main] BasicBinder: binding parameter [1] as [BIGINT] - [7]
2020-11-25 21:30:48,725 TRACE  [main] BasicExtractor: extracted value ([id1_1_2_] : [BIGINT]) - [null]
2020-11-25 21:30:48,725 TRACE  [main] BasicExtractor: extracted value ([id1_0_4_] : [BIGINT]) - [null]
2020-11-25 21:30:48,725 TRACE  [main] BasicExtractor: extracted value ([descript2_1_0_] : [BLOB]) - [[112, 114, 111, 98, 108, 101, 109, 100, 101, 115, 99, 114, 105, 112, 116, 105, 111, 110]]
2020-11-25 21:30:48,726 TRACE  [main] BasicExtractor: extracted value ([is_solve3_1_0_] : [BOOLEAN]) - [true]
2020-11-25 21:30:48,726 TRACE  [main] BasicExtractor: extracted value ([kind4_1_0_] : [VARCHAR]) - [POLYNOMIAL]
2020-11-25 21:30:48,726 TRACE  [main] BasicExtractor: extracted value ([matrix_d5_1_0_] : [INTEGER]) - [1]
2020-11-25 21:30:48,726 TRACE  [main] BasicExtractor: extracted value ([parent_p7_1_0_] : [BIGINT]) - [null]
2020-11-25 21:30:48,726 TRACE  [main] BasicExtractor: extracted value ([problem_6_1_0_] : [INTEGER]) - [0]
2020-11-25 21:30:48,726 TRACE  [main] BasicExtractor: extracted value ([problem_7_0_3_] : [BIGINT]) - [null]
2020-11-25 21:30:48,726 TRACE  [main] BasicExtractor: extracted value ([parent_p7_1_1_] : [BIGINT]) - [null]
2020-11-25 21:30:48,726 TRACE  [main] CollectionType: Created collection wrapper: [com.sf.back.entities.Problem.matrixes#7]
2020-11-25 21:30:48,727 TRACE  [main] BasicBinder: binding parameter [1] as [BIGINT] - [7]
2020-11-25 21:30:48,727 TRACE  [main] BasicExtractor: extracted value ([id1_0_1_] : [BIGINT]) - [40]
2020-11-25 21:30:48,728 TRACE  [main] BasicExtractor: extracted value ([binary_v2_0_1_] : [BLOB]) - [null]
2020-11-25 21:30:48,728 TRACE  [main] BasicExtractor: extracted value ([float_va3_0_1_] : [DOUBLE]) - [1.0]
2020-11-25 21:30:48,728 TRACE  [main] BasicExtractor: extracted value ([i4_0_1_] : [INTEGER]) - [0]
2020-11-25 21:30:48,728 TRACE  [main] BasicExtractor: extracted value ([is_condi5_0_1_] : [BOOLEAN]) - [true]
2020-11-25 21:30:48,728 TRACE  [main] BasicExtractor: extracted value ([j6_0_1_] : [INTEGER]) - [0]
2020-11-25 21:30:48,728 TRACE  [main] BasicExtractor: extracted value ([problem_7_0_1_] : [BIGINT]) - [7]
2020-11-25 21:30:48,728 TRACE  [main] BasicExtractor: extracted value ([problem_7_0_0_] : [BIGINT]) - [7]
2020-11-25 21:30:48,728 TRACE  [main] BasicExtractor: extracted value ([id1_0_0_] : [BIGINT]) - [40]
2020-11-25 21:30:48,729 TRACE  [main] BasicExtractor: extracted value ([id1_0_1_] : [BIGINT]) - [41]
2020-11-25 21:30:48,729 TRACE  [main] BasicExtractor: extracted value ([binary_v2_0_1_] : [BLOB]) - [null]
2020-11-25 21:30:48,729 TRACE  [main] BasicExtractor: extracted value ([float_va3_0_1_] : [DOUBLE]) - [-3.0]
2020-11-25 21:30:48,729 TRACE  [main] BasicExtractor: extracted value ([i4_0_1_] : [INTEGER]) - [0]
2020-11-25 21:30:48,729 TRACE  [main] BasicExtractor: extracted value ([is_condi5_0_1_] : [BOOLEAN]) - [true]
2020-11-25 21:30:48,729 TRACE  [main] BasicExtractor: extracted value ([j6_0_1_] : [INTEGER]) - [1]
2020-11-25 21:30:48,729 TRACE  [main] BasicExtractor: extracted value ([problem_7_0_1_] : [BIGINT]) - [7]
2020-11-25 21:30:48,730 TRACE  [main] BasicExtractor: extracted value ([problem_7_0_0_] : [BIGINT]) - [7]
2020-11-25 21:30:48,730 TRACE  [main] BasicExtractor: extracted value ([id1_0_0_] : [BIGINT]) - [41]
2020-11-25 21:30:48,730 TRACE  [main] BasicExtractor: extracted value ([id1_0_1_] : [BIGINT]) - [42]
2020-11-25 21:30:48,730 TRACE  [main] BasicExtractor: extracted value ([binary_v2_0_1_] : [BLOB]) - [null]
2020-11-25 21:30:48,730 TRACE  [main] BasicExtractor: extracted value ([float_va3_0_1_] : [DOUBLE]) - [2.0]
2020-11-25 21:30:48,730 TRACE  [main] BasicExtractor: extracted value ([i4_0_1_] : [INTEGER]) - [0]
2020-11-25 21:30:48,731 TRACE  [main] BasicExtractor: extracted value ([is_condi5_0_1_] : [BOOLEAN]) - [true]
2020-11-25 21:30:48,731 TRACE  [main] BasicExtractor: extracted value ([j6_0_1_] : [INTEGER]) - [2]
2020-11-25 21:30:48,731 TRACE  [main] BasicExtractor: extracted value ([problem_7_0_1_] : [BIGINT]) - [7]
2020-11-25 21:30:48,731 TRACE  [main] BasicExtractor: extracted value ([problem_7_0_0_] : [BIGINT]) - [7]
2020-11-25 21:30:48,731 TRACE  [main] BasicExtractor: extracted value ([id1_0_0_] : [BIGINT]) - [42]
2020-11-25 21:30:48,731 TRACE  [main] BasicExtractor: extracted value ([id1_0_1_] : [BIGINT]) - [43]
2020-11-25 21:30:48,731 TRACE  [main] BasicExtractor: extracted value ([binary_v2_0_1_] : [BLOB]) - [null]
2020-11-25 21:30:48,731 TRACE  [main] BasicExtractor: extracted value ([float_va3_0_1_] : [DOUBLE]) - [1.0]
2020-11-25 21:30:48,732 TRACE  [main] BasicExtractor: extracted value ([i4_0_1_] : [INTEGER]) - [0]
2020-11-25 21:30:48,732 TRACE  [main] BasicExtractor: extracted value ([is_condi5_0_1_] : [BOOLEAN]) - [false]
2020-11-25 21:30:48,732 TRACE  [main] BasicExtractor: extracted value ([j6_0_1_] : [INTEGER]) - [0]
2020-11-25 21:30:48,732 TRACE  [main] BasicExtractor: extracted value ([problem_7_0_1_] : [BIGINT]) - [7]
2020-11-25 21:30:48,732 TRACE  [main] BasicExtractor: extracted value ([problem_7_0_0_] : [BIGINT]) - [7]
2020-11-25 21:30:48,738 TRACE  [main] BasicExtractor: extracted value ([id1_0_0_] : [BIGINT]) - [43]
2020-11-25 21:30:48,738 TRACE  [main] BasicExtractor: extracted value ([id1_0_1_] : [BIGINT]) - [44]
2020-11-25 21:30:48,739 TRACE  [main] BasicExtractor: extracted value ([binary_v2_0_1_] : [BLOB]) - [null]
2020-11-25 21:30:48,739 TRACE  [main] BasicExtractor: extracted value ([float_va3_0_1_] : [DOUBLE]) - [2.0]
2020-11-25 21:30:48,740 TRACE  [main] BasicExtractor: extracted value ([i4_0_1_] : [INTEGER]) - [0]
2020-11-25 21:30:48,740 TRACE  [main] BasicExtractor: extracted value ([is_condi5_0_1_] : [BOOLEAN]) - [false]
2020-11-25 21:30:48,740 TRACE  [main] BasicExtractor: extracted value ([j6_0_1_] : [INTEGER]) - [1]
2020-11-25 21:30:48,740 TRACE  [main] BasicExtractor: extracted value ([problem_7_0_1_] : [BIGINT]) - [7]
2020-11-25 21:30:48,740 TRACE  [main] BasicExtractor: extracted value ([problem_7_0_0_] : [BIGINT]) - [7]
2020-11-25 21:30:48,740 TRACE  [main] BasicExtractor: extracted value ([id1_0_0_] : [BIGINT]) - [44]
2020-11-25 21:30:48,811 TRACE  [main] BasicBinder: binding parameter [1] as [BOOLEAN] - [false]
2020-11-25 21:30:48,811 TRACE  [main] BasicBinder: binding parameter [2] as [BIGINT] - [7]
2020-11-25 21:30:48,812 TRACE  [main] BasicExtractor: extracted value ([id1_0_] : [BIGINT]) - [43]
2020-11-25 21:30:48,813 TRACE  [main] BasicExtractor: extracted value ([binary_v2_0_] : [BLOB]) - [null]
2020-11-25 21:30:48,813 TRACE  [main] BasicExtractor: extracted value ([float_va3_0_] : [DOUBLE]) - [1.0]
2020-11-25 21:30:48,813 TRACE  [main] BasicExtractor: extracted value ([i4_0_] : [INTEGER]) - [0]
2020-11-25 21:30:48,814 TRACE  [main] BasicExtractor: extracted value ([is_condi5_0_] : [BOOLEAN]) - [false]
2020-11-25 21:30:48,814 TRACE  [main] BasicExtractor: extracted value ([j6_0_] : [INTEGER]) - [0]
2020-11-25 21:30:48,815 TRACE  [main] BasicExtractor: extracted value ([problem_7_0_] : [BIGINT]) - [7]
2020-11-25 21:30:48,816 TRACE  [main] BasicExtractor: extracted value ([id1_0_] : [BIGINT]) - [44]
2020-11-25 21:30:48,816 TRACE  [main] BasicExtractor: extracted value ([binary_v2_0_] : [BLOB]) - [null]
2020-11-25 21:30:48,817 TRACE  [main] BasicExtractor: extracted value ([float_va3_0_] : [DOUBLE]) - [2.0]
2020-11-25 21:30:48,817 TRACE  [main] BasicExtractor: extracted value ([i4_0_] : [INTEGER]) - [0]
2020-11-25 21:30:48,817 TRACE  [main] BasicExtractor: extracted value ([is_condi5_0_] : [BOOLEAN]) - [false]
2020-11-25 21:30:48,817 TRACE  [main] BasicExtractor: extracted value ([j6_0_] : [INTEGER]) - [1]
2020-11-25 21:30:48,817 TRACE  [main] BasicExtractor: extracted value ([problem_7_0_] : [BIGINT]) - [7]
2020-11-25 21:30:48,821 TRACE  [main] BasicBinder: binding parameter [1] as [BIGINT] - [7]
2020-11-25 21:30:48,822 TRACE  [main] BasicExtractor: extracted value ([id1_1_2_] : [BIGINT]) - [null]
2020-11-25 21:30:48,823 TRACE  [main] BasicExtractor: extracted value ([id1_0_4_] : [BIGINT]) - [null]
2020-11-25 21:30:48,823 TRACE  [main] BasicExtractor: extracted value ([descript2_1_0_] : [BLOB]) - [[112, 114, 111, 98, 108, 101, 109, 100, 101, 115, 99, 114, 105, 112, 116, 105, 111, 110]]
2020-11-25 21:30:48,823 TRACE  [main] BasicExtractor: extracted value ([is_solve3_1_0_] : [BOOLEAN]) - [true]
2020-11-25 21:30:48,824 TRACE  [main] BasicExtractor: extracted value ([kind4_1_0_] : [VARCHAR]) - [POLYNOMIAL]
2020-11-25 21:30:48,824 TRACE  [main] BasicExtractor: extracted value ([matrix_d5_1_0_] : [INTEGER]) - [1]
2020-11-25 21:30:48,824 TRACE  [main] BasicExtractor: extracted value ([parent_p7_1_0_] : [BIGINT]) - [null]
2020-11-25 21:30:48,825 TRACE  [main] BasicExtractor: extracted value ([problem_6_1_0_] : [INTEGER]) - [0]
2020-11-25 21:30:48,825 TRACE  [main] BasicExtractor: extracted value ([problem_7_0_3_] : [BIGINT]) - [null]
2020-11-25 21:30:48,825 TRACE  [main] BasicExtractor: extracted value ([parent_p7_1_1_] : [BIGINT]) - [null]
2020-11-25 21:30:48,826 TRACE  [main] CollectionType: Created collection wrapper: [com.sf.back.entities.Problem.matrixes#7]
2020-11-25 21:30:48,827 TRACE  [main] BasicBinder: binding parameter [1] as [BIGINT] - [7]
2020-11-25 21:30:48,827 TRACE  [main] BasicExtractor: extracted value ([id1_0_1_] : [BIGINT]) - [40]
2020-11-25 21:30:48,827 TRACE  [main] BasicExtractor: extracted value ([binary_v2_0_1_] : [BLOB]) - [null]
2020-11-25 21:30:48,828 TRACE  [main] BasicExtractor: extracted value ([float_va3_0_1_] : [DOUBLE]) - [1.0]
2020-11-25 21:30:48,828 TRACE  [main] BasicExtractor: extracted value ([i4_0_1_] : [INTEGER]) - [0]
2020-11-25 21:30:48,828 TRACE  [main] BasicExtractor: extracted value ([is_condi5_0_1_] : [BOOLEAN]) - [true]
2020-11-25 21:30:48,828 TRACE  [main] BasicExtractor: extracted value ([j6_0_1_] : [INTEGER]) - [0]
2020-11-25 21:30:48,828 TRACE  [main] BasicExtractor: extracted value ([problem_7_0_1_] : [BIGINT]) - [7]
2020-11-25 21:30:48,828 TRACE  [main] BasicExtractor: extracted value ([problem_7_0_0_] : [BIGINT]) - [7]
2020-11-25 21:30:48,828 TRACE  [main] BasicExtractor: extracted value ([id1_0_0_] : [BIGINT]) - [40]
2020-11-25 21:30:48,829 TRACE  [main] BasicExtractor: extracted value ([id1_0_1_] : [BIGINT]) - [41]
2020-11-25 21:30:48,829 TRACE  [main] BasicExtractor: extracted value ([binary_v2_0_1_] : [BLOB]) - [null]
2020-11-25 21:30:48,829 TRACE  [main] BasicExtractor: extracted value ([float_va3_0_1_] : [DOUBLE]) - [-3.0]
2020-11-25 21:30:48,830 TRACE  [main] BasicExtractor: extracted value ([i4_0_1_] : [INTEGER]) - [0]
2020-11-25 21:30:48,830 TRACE  [main] BasicExtractor: extracted value ([is_condi5_0_1_] : [BOOLEAN]) - [true]
2020-11-25 21:30:48,830 TRACE  [main] BasicExtractor: extracted value ([j6_0_1_] : [INTEGER]) - [1]
2020-11-25 21:30:48,830 TRACE  [main] BasicExtractor: extracted value ([problem_7_0_1_] : [BIGINT]) - [7]
2020-11-25 21:30:48,831 TRACE  [main] BasicExtractor: extracted value ([problem_7_0_0_] : [BIGINT]) - [7]
2020-11-25 21:30:48,831 TRACE  [main] BasicExtractor: extracted value ([id1_0_0_] : [BIGINT]) - [41]
2020-11-25 21:30:48,831 TRACE  [main] BasicExtractor: extracted value ([id1_0_1_] : [BIGINT]) - [42]
2020-11-25 21:30:48,831 TRACE  [main] BasicExtractor: extracted value ([binary_v2_0_1_] : [BLOB]) - [null]
2020-11-25 21:30:48,831 TRACE  [main] BasicExtractor: extracted value ([float_va3_0_1_] : [DOUBLE]) - [2.0]
2020-11-25 21:30:48,832 TRACE  [main] BasicExtractor: extracted value ([i4_0_1_] : [INTEGER]) - [0]
2020-11-25 21:30:48,832 TRACE  [main] BasicExtractor: extracted value ([is_condi5_0_1_] : [BOOLEAN]) - [true]
2020-11-25 21:30:48,832 TRACE  [main] BasicExtractor: extracted value ([j6_0_1_] : [INTEGER]) - [2]
2020-11-25 21:30:48,832 TRACE  [main] BasicExtractor: extracted value ([problem_7_0_1_] : [BIGINT]) - [7]
2020-11-25 21:30:48,832 TRACE  [main] BasicExtractor: extracted value ([problem_7_0_0_] : [BIGINT]) - [7]
2020-11-25 21:30:48,833 TRACE  [main] BasicExtractor: extracted value ([id1_0_0_] : [BIGINT]) - [42]
2020-11-25 21:30:48,833 TRACE  [main] BasicExtractor: extracted value ([id1_0_1_] : [BIGINT]) - [43]
2020-11-25 21:30:48,833 TRACE  [main] BasicExtractor: extracted value ([problem_7_0_0_] : [BIGINT]) - [7]
2020-11-25 21:30:48,833 TRACE  [main] BasicExtractor: extracted value ([id1_0_0_] : [BIGINT]) - [43]
2020-11-25 21:30:48,833 TRACE  [main] BasicExtractor: extracted value ([id1_0_1_] : [BIGINT]) - [44]
2020-11-25 21:30:48,834 TRACE  [main] BasicExtractor: extracted value ([problem_7_0_0_] : [BIGINT]) - [7]
2020-11-25 21:30:48,834 TRACE  [main] BasicExtractor: extracted value ([id1_0_0_] : [BIGINT]) - [44]
2020-11-25 21:30:48,867 TRACE  [main] BasicBinder: binding parameter [1] as [BIGINT] - [8]
2020-11-25 21:30:48,869 TRACE  [main] BasicExtractor: extracted value ([id1_1_2_] : [BIGINT]) - [null]
2020-11-25 21:30:48,870 TRACE  [main] BasicExtractor: extracted value ([id1_0_4_] : [BIGINT]) - [null]
2020-11-25 21:30:48,870 TRACE  [main] BasicExtractor: extracted value ([descript2_1_0_] : [BLOB]) - [[112, 114, 111, 98, 108, 101, 109, 100, 101, 115, 99, 114, 105, 112, 116, 105, 111, 110]]
2020-11-25 21:30:48,870 TRACE  [main] BasicExtractor: extracted value ([is_solve3_1_0_] : [BOOLEAN]) - [null]
2020-11-25 21:30:48,871 TRACE  [main] BasicExtractor: extracted value ([kind4_1_0_] : [VARCHAR]) - [POLYNOMIAL]
2020-11-25 21:30:48,871 TRACE  [main] BasicExtractor: extracted value ([matrix_d5_1_0_] : [INTEGER]) - [1]
2020-11-25 21:30:48,872 TRACE  [main] BasicExtractor: extracted value ([parent_p7_1_0_] : [BIGINT]) - [null]
2020-11-25 21:30:48,872 TRACE  [main] BasicExtractor: extracted value ([problem_6_1_0_] : [INTEGER]) - [22]
2020-11-25 21:30:48,873 TRACE  [main] BasicExtractor: extracted value ([problem_7_0_3_] : [BIGINT]) - [null]
2020-11-25 21:30:48,873 TRACE  [main] BasicExtractor: extracted value ([parent_p7_1_1_] : [BIGINT]) - [null]
2020-11-25 21:30:48,873 TRACE  [main] CollectionType: Created collection wrapper: [com.sf.back.entities.Problem.matrixes#8]
2020-11-25 21:30:48,874 TRACE  [main] BasicBinder: binding parameter [1] as [BIGINT] - [8]
2020-11-25 21:30:48,875 TRACE  [main] BasicExtractor: extracted value ([id1_0_1_] : [BIGINT]) - [45]
2020-11-25 21:30:48,875 TRACE  [main] BasicExtractor: extracted value ([binary_v2_0_1_] : [BLOB]) - [null]
2020-11-25 21:30:48,875 TRACE  [main] BasicExtractor: extracted value ([float_va3_0_1_] : [DOUBLE]) - [1.0]
2020-11-25 21:30:48,876 TRACE  [main] BasicExtractor: extracted value ([i4_0_1_] : [INTEGER]) - [0]
2020-11-25 21:30:48,876 TRACE  [main] BasicExtractor: extracted value ([is_condi5_0_1_] : [BOOLEAN]) - [true]
2020-11-25 21:30:48,876 TRACE  [main] BasicExtractor: extracted value ([j6_0_1_] : [INTEGER]) - [0]
2020-11-25 21:30:48,876 TRACE  [main] BasicExtractor: extracted value ([problem_7_0_1_] : [BIGINT]) - [8]
2020-11-25 21:30:48,876 TRACE  [main] BasicExtractor: extracted value ([problem_7_0_0_] : [BIGINT]) - [8]
2020-11-25 21:30:48,876 TRACE  [main] BasicExtractor: extracted value ([id1_0_0_] : [BIGINT]) - [45]
2020-11-25 21:30:48,877 TRACE  [main] BasicExtractor: extracted value ([id1_0_1_] : [BIGINT]) - [46]
2020-11-25 21:30:48,878 TRACE  [main] BasicExtractor: extracted value ([binary_v2_0_1_] : [BLOB]) - [null]
2020-11-25 21:30:48,879 TRACE  [main] BasicExtractor: extracted value ([float_va3_0_1_] : [DOUBLE]) - [2.718281828459045]
2020-11-25 21:30:48,879 TRACE  [main] BasicExtractor: extracted value ([i4_0_1_] : [INTEGER]) - [0]
2020-11-25 21:30:48,880 TRACE  [main] BasicExtractor: extracted value ([is_condi5_0_1_] : [BOOLEAN]) - [true]
2020-11-25 21:30:48,880 TRACE  [main] BasicExtractor: extracted value ([j6_0_1_] : [INTEGER]) - [1]
2020-11-25 21:30:48,880 TRACE  [main] BasicExtractor: extracted value ([problem_7_0_1_] : [BIGINT]) - [8]
2020-11-25 21:30:48,881 TRACE  [main] BasicExtractor: extracted value ([problem_7_0_0_] : [BIGINT]) - [8]
2020-11-25 21:30:48,881 TRACE  [main] BasicExtractor: extracted value ([id1_0_0_] : [BIGINT]) - [46]
2020-11-25 21:30:48,882 TRACE  [main] BasicExtractor: extracted value ([id1_0_1_] : [BIGINT]) - [47]
2020-11-25 21:30:48,882 TRACE  [main] BasicExtractor: extracted value ([binary_v2_0_1_] : [BLOB]) - [null]
2020-11-25 21:30:48,883 TRACE  [main] BasicExtractor: extracted value ([float_va3_0_1_] : [DOUBLE]) - [7.38905609893065]
2020-11-25 21:30:48,883 TRACE  [main] BasicExtractor: extracted value ([i4_0_1_] : [INTEGER]) - [0]
2020-11-25 21:30:48,883 TRACE  [main] BasicExtractor: extracted value ([is_condi5_0_1_] : [BOOLEAN]) - [true]
2020-11-25 21:30:48,883 TRACE  [main] BasicExtractor: extracted value ([j6_0_1_] : [INTEGER]) - [2]
2020-11-25 21:30:48,884 TRACE  [main] BasicExtractor: extracted value ([problem_7_0_1_] : [BIGINT]) - [8]
2020-11-25 21:30:48,884 TRACE  [main] BasicExtractor: extracted value ([problem_7_0_0_] : [BIGINT]) - [8]
2020-11-25 21:30:48,885 TRACE  [main] BasicExtractor: extracted value ([id1_0_0_] : [BIGINT]) - [47]
2020-11-25 21:30:48,885 TRACE  [main] BasicExtractor: extracted value ([id1_0_1_] : [BIGINT]) - [48]
2020-11-25 21:30:48,885 TRACE  [main] BasicExtractor: extracted value ([binary_v2_0_1_] : [BLOB]) - [null]
2020-11-25 21:30:48,886 TRACE  [main] BasicExtractor: extracted value ([float_va3_0_1_] : [DOUBLE]) - [20.085536923187668]
2020-11-25 21:30:48,886 TRACE  [main] BasicExtractor: extracted value ([i4_0_1_] : [INTEGER]) - [0]
2020-11-25 21:30:48,886 TRACE  [main] BasicExtractor: extracted value ([is_condi5_0_1_] : [BOOLEAN]) - [true]
2020-11-25 21:30:48,886 TRACE  [main] BasicExtractor: extracted value ([j6_0_1_] : [INTEGER]) - [3]
2020-11-25 21:30:48,886 TRACE  [main] BasicExtractor: extracted value ([problem_7_0_1_] : [BIGINT]) - [8]
2020-11-25 21:30:48,886 TRACE  [main] BasicExtractor: extracted value ([problem_7_0_0_] : [BIGINT]) - [8]
2020-11-25 21:30:48,887 TRACE  [main] BasicExtractor: extracted value ([id1_0_0_] : [BIGINT]) - [48]
2020-11-25 21:30:48,887 TRACE  [main] BasicExtractor: extracted value ([id1_0_1_] : [BIGINT]) - [49]
2020-11-25 21:30:48,888 TRACE  [main] BasicExtractor: extracted value ([binary_v2_0_1_] : [BLOB]) - [null]
2020-11-25 21:30:48,889 TRACE  [main] BasicExtractor: extracted value ([float_va3_0_1_] : [DOUBLE]) - [54.598150033144236]
2020-11-25 21:30:48,889 TRACE  [main] BasicExtractor: extracted value ([i4_0_1_] : [INTEGER]) - [0]
2020-11-25 21:30:48,889 TRACE  [main] BasicExtractor: extracted value ([is_condi5_0_1_] : [BOOLEAN]) - [true]
2020-11-25 21:30:48,890 TRACE  [main] BasicExtractor: extracted value ([j6_0_1_] : [INTEGER]) - [4]
2020-11-25 21:30:48,890 TRACE  [main] BasicExtractor: extracted value ([problem_7_0_1_] : [BIGINT]) - [8]
2020-11-25 21:30:48,890 TRACE  [main] BasicExtractor: extracted value ([problem_7_0_0_] : [BIGINT]) - [8]
2020-11-25 21:30:48,890 TRACE  [main] BasicExtractor: extracted value ([id1_0_0_] : [BIGINT]) - [49]
2020-11-25 21:30:48,890 TRACE  [main] BasicExtractor: extracted value ([id1_0_1_] : [BIGINT]) - [50]
2020-11-25 21:30:48,891 TRACE  [main] BasicExtractor: extracted value ([binary_v2_0_1_] : [BLOB]) - [null]
2020-11-25 21:30:48,891 TRACE  [main] BasicExtractor: extracted value ([float_va3_0_1_] : [DOUBLE]) - [148.4131591025766]
2020-11-25 21:30:48,891 TRACE  [main] BasicExtractor: extracted value ([i4_0_1_] : [INTEGER]) - [0]
2020-11-25 21:30:48,891 TRACE  [main] BasicExtractor: extracted value ([is_condi5_0_1_] : [BOOLEAN]) - [true]
2020-11-25 21:30:48,891 TRACE  [main] BasicExtractor: extracted value ([j6_0_1_] : [INTEGER]) - [5]
2020-11-25 21:30:48,891 TRACE  [main] BasicExtractor: extracted value ([problem_7_0_1_] : [BIGINT]) - [8]
2020-11-25 21:30:48,892 TRACE  [main] BasicExtractor: extracted value ([problem_7_0_0_] : [BIGINT]) - [8]
2020-11-25 21:30:48,892 TRACE  [main] BasicExtractor: extracted value ([id1_0_0_] : [BIGINT]) - [50]
2020-11-25 21:30:48,903 TRACE  [main] BasicBinder: binding parameter [1] as [BLOB] - [[100, 101, 115, 99, 114, 105, 112, 116, 105, 111, 110]]
2020-11-25 21:30:48,903 TRACE  [main] BasicBinder: binding parameter [2] as [BOOLEAN] - [null]
2020-11-25 21:30:48,904 TRACE  [main] BasicBinder: binding parameter [3] as [VARCHAR] - [POLYNOMIAL]
2020-11-25 21:30:48,904 TRACE  [main] BasicBinder: binding parameter [4] as [INTEGER] - [null]
2020-11-25 21:30:48,904 TRACE  [main] BasicBinder: binding parameter [5] as [BIGINT] - [null]
2020-11-25 21:30:48,904 TRACE  [main] BasicBinder: binding parameter [6] as [INTEGER] - [24]
2020-11-25 21:30:48,905 TRACE  [main] BasicBinder: binding parameter [1] as [BLOB] - [null]
2020-11-25 21:30:48,906 TRACE  [main] BasicBinder: binding parameter [2] as [DOUBLE] - [1.0]
2020-11-25 21:30:48,906 TRACE  [main] BasicBinder: binding parameter [3] as [INTEGER] - [0]
2020-11-25 21:30:48,906 TRACE  [main] BasicBinder: binding parameter [4] as [BOOLEAN] - [true]
2020-11-25 21:30:48,906 TRACE  [main] BasicBinder: binding parameter [5] as [INTEGER] - [0]
2020-11-25 21:30:48,907 TRACE  [main] BasicBinder: binding parameter [6] as [BIGINT] - [10]
2020-11-25 21:30:48,908 TRACE  [main] BasicBinder: binding parameter [1] as [BLOB] - [null]
2020-11-25 21:30:48,908 TRACE  [main] BasicBinder: binding parameter [2] as [DOUBLE] - [2.0]
2020-11-25 21:30:48,908 TRACE  [main] BasicBinder: binding parameter [3] as [INTEGER] - [0]
2020-11-25 21:30:48,908 TRACE  [main] BasicBinder: binding parameter [4] as [BOOLEAN] - [true]
2020-11-25 21:30:48,909 TRACE  [main] BasicBinder: binding parameter [5] as [INTEGER] - [1]
2020-11-25 21:30:48,909 TRACE  [main] BasicBinder: binding parameter [6] as [BIGINT] - [10]
2020-11-25 21:30:48,912 TRACE  [main] BasicBinder: binding parameter [1] as [BLOB] - [null]
2020-11-25 21:30:48,912 TRACE  [main] BasicBinder: binding parameter [2] as [DOUBLE] - [3.0]
2020-11-25 21:30:48,913 TRACE  [main] BasicBinder: binding parameter [3] as [INTEGER] - [0]
2020-11-25 21:30:48,913 TRACE  [main] BasicBinder: binding parameter [4] as [BOOLEAN] - [true]
2020-11-25 21:30:48,913 TRACE  [main] BasicBinder: binding parameter [5] as [INTEGER] - [2]
2020-11-25 21:30:48,914 TRACE  [main] BasicBinder: binding parameter [6] as [BIGINT] - [10]
2020-11-25 21:30:48,916 TRACE  [main] BasicBinder: binding parameter [1] as [BLOB] - [null]
2020-11-25 21:30:48,917 TRACE  [main] BasicBinder: binding parameter [2] as [DOUBLE] - [4.0]
2020-11-25 21:30:48,917 TRACE  [main] BasicBinder: binding parameter [3] as [INTEGER] - [0]
2020-11-25 21:30:48,917 TRACE  [main] BasicBinder: binding parameter [4] as [BOOLEAN] - [true]
2020-11-25 21:30:48,917 TRACE  [main] BasicBinder: binding parameter [5] as [INTEGER] - [3]
2020-11-25 21:30:48,918 TRACE  [main] BasicBinder: binding parameter [6] as [BIGINT] - [10]
2020-11-25 21:30:48,947 TRACE  [main] BasicBinder: binding parameter [1] as [BIGINT] - [10]
2020-11-25 21:30:48,948 TRACE  [main] BasicExtractor: extracted value ([id1_1_2_] : [BIGINT]) - [null]
2020-11-25 21:30:48,949 TRACE  [main] BasicExtractor: extracted value ([id1_0_4_] : [BIGINT]) - [null]
2020-11-25 21:30:48,950 TRACE  [main] BasicExtractor: extracted value ([descript2_1_0_] : [BLOB]) - [[100, 101, 115, 99, 114, 105, 112, 116, 105, 111, 110]]
2020-11-25 21:30:48,950 TRACE  [main] BasicExtractor: extracted value ([is_solve3_1_0_] : [BOOLEAN]) - [null]
2020-11-25 21:30:48,950 TRACE  [main] BasicExtractor: extracted value ([kind4_1_0_] : [VARCHAR]) - [POLYNOMIAL]
2020-11-25 21:30:48,951 TRACE  [main] BasicExtractor: extracted value ([matrix_d5_1_0_] : [INTEGER]) - [null]
2020-11-25 21:30:48,952 TRACE  [main] BasicExtractor: extracted value ([parent_p7_1_0_] : [BIGINT]) - [null]
2020-11-25 21:30:48,952 TRACE  [main] BasicExtractor: extracted value ([problem_6_1_0_] : [INTEGER]) - [24]
2020-11-25 21:30:48,952 TRACE  [main] BasicExtractor: extracted value ([problem_7_0_3_] : [BIGINT]) - [null]
2020-11-25 21:30:48,952 TRACE  [main] BasicExtractor: extracted value ([parent_p7_1_1_] : [BIGINT]) - [null]
2020-11-25 21:30:48,953 TRACE  [main] CollectionType: Created collection wrapper: [com.sf.back.entities.Problem.matrixes#10]
2020-11-25 21:30:48,953 TRACE  [main] BasicBinder: binding parameter [1] as [BIGINT] - [10]
2020-11-25 21:30:48,956 TRACE  [main] BasicExtractor: extracted value ([id1_0_1_] : [BIGINT]) - [57]
2020-11-25 21:30:48,957 TRACE  [main] BasicExtractor: extracted value ([binary_v2_0_1_] : [BLOB]) - [null]
2020-11-25 21:30:48,957 TRACE  [main] BasicExtractor: extracted value ([float_va3_0_1_] : [DOUBLE]) - [1.0]
2020-11-25 21:30:48,958 TRACE  [main] BasicExtractor: extracted value ([i4_0_1_] : [INTEGER]) - [0]
2020-11-25 21:30:48,958 TRACE  [main] BasicExtractor: extracted value ([is_condi5_0_1_] : [BOOLEAN]) - [true]
2020-11-25 21:30:48,958 TRACE  [main] BasicExtractor: extracted value ([j6_0_1_] : [INTEGER]) - [0]
2020-11-25 21:30:48,958 TRACE  [main] BasicExtractor: extracted value ([problem_7_0_1_] : [BIGINT]) - [10]
2020-11-25 21:30:48,959 TRACE  [main] BasicExtractor: extracted value ([problem_7_0_0_] : [BIGINT]) - [10]
2020-11-25 21:30:48,959 TRACE  [main] BasicExtractor: extracted value ([id1_0_0_] : [BIGINT]) - [57]
2020-11-25 21:30:48,959 TRACE  [main] BasicExtractor: extracted value ([id1_0_1_] : [BIGINT]) - [58]
2020-11-25 21:30:48,959 TRACE  [main] BasicExtractor: extracted value ([binary_v2_0_1_] : [BLOB]) - [null]
2020-11-25 21:30:48,959 TRACE  [main] BasicExtractor: extracted value ([float_va3_0_1_] : [DOUBLE]) - [2.0]
2020-11-25 21:30:48,960 TRACE  [main] BasicExtractor: extracted value ([i4_0_1_] : [INTEGER]) - [0]
2020-11-25 21:30:48,960 TRACE  [main] BasicExtractor: extracted value ([is_condi5_0_1_] : [BOOLEAN]) - [true]
2020-11-25 21:30:48,960 TRACE  [main] BasicExtractor: extracted value ([j6_0_1_] : [INTEGER]) - [1]
2020-11-25 21:30:48,960 TRACE  [main] BasicExtractor: extracted value ([problem_7_0_1_] : [BIGINT]) - [10]
2020-11-25 21:30:48,960 TRACE  [main] BasicExtractor: extracted value ([problem_7_0_0_] : [BIGINT]) - [10]
2020-11-25 21:30:48,960 TRACE  [main] BasicExtractor: extracted value ([id1_0_0_] : [BIGINT]) - [58]
2020-11-25 21:30:48,960 TRACE  [main] BasicExtractor: extracted value ([id1_0_1_] : [BIGINT]) - [59]
2020-11-25 21:30:48,961 TRACE  [main] BasicExtractor: extracted value ([binary_v2_0_1_] : [BLOB]) - [null]
2020-11-25 21:30:48,961 TRACE  [main] BasicExtractor: extracted value ([float_va3_0_1_] : [DOUBLE]) - [3.0]
2020-11-25 21:30:48,961 TRACE  [main] BasicExtractor: extracted value ([i4_0_1_] : [INTEGER]) - [0]
2020-11-25 21:30:48,961 TRACE  [main] BasicExtractor: extracted value ([is_condi5_0_1_] : [BOOLEAN]) - [true]
2020-11-25 21:30:48,961 TRACE  [main] BasicExtractor: extracted value ([j6_0_1_] : [INTEGER]) - [2]
2020-11-25 21:30:48,961 TRACE  [main] BasicExtractor: extracted value ([problem_7_0_1_] : [BIGINT]) - [10]
2020-11-25 21:30:48,962 TRACE  [main] BasicExtractor: extracted value ([problem_7_0_0_] : [BIGINT]) - [10]
2020-11-25 21:30:48,963 TRACE  [main] BasicExtractor: extracted value ([id1_0_0_] : [BIGINT]) - [59]
2020-11-25 21:30:48,965 TRACE  [main] BasicExtractor: extracted value ([id1_0_1_] : [BIGINT]) - [60]
2020-11-25 21:30:48,965 TRACE  [main] BasicExtractor: extracted value ([binary_v2_0_1_] : [BLOB]) - [null]
2020-11-25 21:30:48,965 TRACE  [main] BasicExtractor: extracted value ([float_va3_0_1_] : [DOUBLE]) - [4.0]
2020-11-25 21:30:48,965 TRACE  [main] BasicExtractor: extracted value ([i4_0_1_] : [INTEGER]) - [0]
2020-11-25 21:30:48,966 TRACE  [main] BasicExtractor: extracted value ([is_condi5_0_1_] : [BOOLEAN]) - [true]
2020-11-25 21:30:48,966 TRACE  [main] BasicExtractor: extracted value ([j6_0_1_] : [INTEGER]) - [3]
2020-11-25 21:30:48,966 TRACE  [main] BasicExtractor: extracted value ([problem_7_0_1_] : [BIGINT]) - [10]
2020-11-25 21:30:48,967 TRACE  [main] BasicExtractor: extracted value ([problem_7_0_0_] : [BIGINT]) - [10]
2020-11-25 21:30:48,967 TRACE  [main] BasicExtractor: extracted value ([id1_0_0_] : [BIGINT]) - [60]
2020-11-25 21:30:48,983 TRACE  [main] BasicBinder: binding parameter [1] as [BIGINT] - [11]
2020-11-25 21:30:48,984 TRACE  [main] BasicExtractor: extracted value ([id1_1_2_] : [BIGINT]) - [null]
2020-11-25 21:30:48,984 TRACE  [main] BasicExtractor: extracted value ([id1_0_4_] : [BIGINT]) - [null]
2020-11-25 21:30:48,985 TRACE  [main] BasicExtractor: extracted value ([descript2_1_0_] : [BLOB]) - [[112, 114, 111, 98, 108, 101, 109, 100, 101, 115, 99, 114, 105, 112, 116, 105, 111, 110]]
2020-11-25 21:30:48,985 TRACE  [main] BasicExtractor: extracted value ([is_solve3_1_0_] : [BOOLEAN]) - [null]
2020-11-25 21:30:48,985 TRACE  [main] BasicExtractor: extracted value ([kind4_1_0_] : [VARCHAR]) - [POLYNOMIAL]
2020-11-25 21:30:48,985 TRACE  [main] BasicExtractor: extracted value ([matrix_d5_1_0_] : [INTEGER]) - [1]
2020-11-25 21:30:48,985 TRACE  [main] BasicExtractor: extracted value ([parent_p7_1_0_] : [BIGINT]) - [null]
2020-11-25 21:30:48,985 TRACE  [main] BasicExtractor: extracted value ([problem_6_1_0_] : [INTEGER]) - [22]
2020-11-25 21:30:48,985 TRACE  [main] BasicExtractor: extracted value ([problem_7_0_3_] : [BIGINT]) - [null]
2020-11-25 21:30:48,986 TRACE  [main] BasicExtractor: extracted value ([parent_p7_1_1_] : [BIGINT]) - [null]
2020-11-25 21:30:48,986 TRACE  [main] CollectionType: Created collection wrapper: [com.sf.back.entities.Problem.matrixes#11]
2020-11-25 21:30:48,987 TRACE  [main] BasicBinder: binding parameter [1] as [BIGINT] - [11]
2020-11-25 21:30:48,987 TRACE  [main] BasicExtractor: extracted value ([id1_0_1_] : [BIGINT]) - [61]
2020-11-25 21:30:48,987 TRACE  [main] BasicExtractor: extracted value ([binary_v2_0_1_] : [BLOB]) - [null]
2020-11-25 21:30:48,988 TRACE  [main] BasicExtractor: extracted value ([float_va3_0_1_] : [DOUBLE]) - [1.0]
2020-11-25 21:30:48,988 TRACE  [main] BasicExtractor: extracted value ([i4_0_1_] : [INTEGER]) - [0]
2020-11-25 21:30:48,988 TRACE  [main] BasicExtractor: extracted value ([is_condi5_0_1_] : [BOOLEAN]) - [true]
2020-11-25 21:30:48,988 TRACE  [main] BasicExtractor: extracted value ([j6_0_1_] : [INTEGER]) - [0]
2020-11-25 21:30:48,988 TRACE  [main] BasicExtractor: extracted value ([problem_7_0_1_] : [BIGINT]) - [11]
2020-11-25 21:30:48,988 TRACE  [main] BasicExtractor: extracted value ([problem_7_0_0_] : [BIGINT]) - [11]
2020-11-25 21:30:48,988 TRACE  [main] BasicExtractor: extracted value ([id1_0_0_] : [BIGINT]) - [61]
2020-11-25 21:30:48,989 TRACE  [main] BasicExtractor: extracted value ([id1_0_1_] : [BIGINT]) - [62]
2020-11-25 21:30:48,989 TRACE  [main] BasicExtractor: extracted value ([binary_v2_0_1_] : [BLOB]) - [null]
2020-11-25 21:30:48,989 TRACE  [main] BasicExtractor: extracted value ([float_va3_0_1_] : [DOUBLE]) - [2.718281828459045]
2020-11-25 21:30:48,989 TRACE  [main] BasicExtractor: extracted value ([i4_0_1_] : [INTEGER]) - [0]
2020-11-25 21:30:48,990 TRACE  [main] BasicExtractor: extracted value ([is_condi5_0_1_] : [BOOLEAN]) - [true]
2020-11-25 21:30:48,990 TRACE  [main] BasicExtractor: extracted value ([j6_0_1_] : [INTEGER]) - [1]
2020-11-25 21:30:48,990 TRACE  [main] BasicExtractor: extracted value ([problem_7_0_1_] : [BIGINT]) - [11]
2020-11-25 21:30:48,990 TRACE  [main] BasicExtractor: extracted value ([problem_7_0_0_] : [BIGINT]) - [11]
2020-11-25 21:30:48,990 TRACE  [main] BasicExtractor: extracted value ([id1_0_0_] : [BIGINT]) - [62]
2020-11-25 21:30:48,990 TRACE  [main] BasicExtractor: extracted value ([id1_0_1_] : [BIGINT]) - [63]
2020-11-25 21:30:48,991 TRACE  [main] BasicExtractor: extracted value ([binary_v2_0_1_] : [BLOB]) - [null]
2020-11-25 21:30:48,991 TRACE  [main] BasicExtractor: extracted value ([float_va3_0_1_] : [DOUBLE]) - [7.38905609893065]
2020-11-25 21:30:48,991 TRACE  [main] BasicExtractor: extracted value ([i4_0_1_] : [INTEGER]) - [0]
2020-11-25 21:30:48,991 TRACE  [main] BasicExtractor: extracted value ([is_condi5_0_1_] : [BOOLEAN]) - [true]
2020-11-25 21:30:48,991 TRACE  [main] BasicExtractor: extracted value ([j6_0_1_] : [INTEGER]) - [2]
2020-11-25 21:30:48,991 TRACE  [main] BasicExtractor: extracted value ([problem_7_0_1_] : [BIGINT]) - [11]
2020-11-25 21:30:48,991 TRACE  [main] BasicExtractor: extracted value ([problem_7_0_0_] : [BIGINT]) - [11]
2020-11-25 21:30:48,991 TRACE  [main] BasicExtractor: extracted value ([id1_0_0_] : [BIGINT]) - [63]
2020-11-25 21:30:48,992 TRACE  [main] BasicExtractor: extracted value ([id1_0_1_] : [BIGINT]) - [64]
2020-11-25 21:30:48,992 TRACE  [main] BasicExtractor: extracted value ([binary_v2_0_1_] : [BLOB]) - [null]
2020-11-25 21:30:48,992 TRACE  [main] BasicExtractor: extracted value ([float_va3_0_1_] : [DOUBLE]) - [20.085536923187668]
2020-11-25 21:30:48,992 TRACE  [main] BasicExtractor: extracted value ([i4_0_1_] : [INTEGER]) - [0]
2020-11-25 21:30:48,992 TRACE  [main] BasicExtractor: extracted value ([is_condi5_0_1_] : [BOOLEAN]) - [true]
2020-11-25 21:30:48,992 TRACE  [main] BasicExtractor: extracted value ([j6_0_1_] : [INTEGER]) - [3]
2020-11-25 21:30:48,993 TRACE  [main] BasicExtractor: extracted value ([problem_7_0_1_] : [BIGINT]) - [11]
2020-11-25 21:30:48,993 TRACE  [main] BasicExtractor: extracted value ([problem_7_0_0_] : [BIGINT]) - [11]
2020-11-25 21:30:48,993 TRACE  [main] BasicExtractor: extracted value ([id1_0_0_] : [BIGINT]) - [64]
2020-11-25 21:30:48,993 TRACE  [main] BasicExtractor: extracted value ([id1_0_1_] : [BIGINT]) - [65]
2020-11-25 21:30:48,993 TRACE  [main] BasicExtractor: extracted value ([binary_v2_0_1_] : [BLOB]) - [null]
2020-11-25 21:30:48,993 TRACE  [main] BasicExtractor: extracted value ([float_va3_0_1_] : [DOUBLE]) - [54.598150033144236]
2020-11-25 21:30:48,993 TRACE  [main] BasicExtractor: extracted value ([i4_0_1_] : [INTEGER]) - [0]
2020-11-25 21:30:48,993 TRACE  [main] BasicExtractor: extracted value ([is_condi5_0_1_] : [BOOLEAN]) - [true]
2020-11-25 21:30:48,994 TRACE  [main] BasicExtractor: extracted value ([j6_0_1_] : [INTEGER]) - [4]
2020-11-25 21:30:48,994 TRACE  [main] BasicExtractor: extracted value ([problem_7_0_1_] : [BIGINT]) - [11]
2020-11-25 21:30:48,994 TRACE  [main] BasicExtractor: extracted value ([problem_7_0_0_] : [BIGINT]) - [11]
2020-11-25 21:30:48,994 TRACE  [main] BasicExtractor: extracted value ([id1_0_0_] : [BIGINT]) - [65]
2020-11-25 21:30:48,994 TRACE  [main] BasicExtractor: extracted value ([id1_0_1_] : [BIGINT]) - [66]
2020-11-25 21:30:48,994 TRACE  [main] BasicExtractor: extracted value ([binary_v2_0_1_] : [BLOB]) - [null]
2020-11-25 21:30:48,994 TRACE  [main] BasicExtractor: extracted value ([float_va3_0_1_] : [DOUBLE]) - [148.4131591025766]
2020-11-25 21:30:48,994 TRACE  [main] BasicExtractor: extracted value ([i4_0_1_] : [INTEGER]) - [0]
2020-11-25 21:30:48,994 TRACE  [main] BasicExtractor: extracted value ([is_condi5_0_1_] : [BOOLEAN]) - [true]
2020-11-25 21:30:48,995 TRACE  [main] BasicExtractor: extracted value ([j6_0_1_] : [INTEGER]) - [5]
2020-11-25 21:30:48,996 TRACE  [main] BasicExtractor: extracted value ([problem_7_0_1_] : [BIGINT]) - [11]
2020-11-25 21:30:48,996 TRACE  [main] BasicExtractor: extracted value ([problem_7_0_0_] : [BIGINT]) - [11]
2020-11-25 21:30:48,996 TRACE  [main] BasicExtractor: extracted value ([id1_0_0_] : [BIGINT]) - [66]
2020-11-25 21:30:49,001 TRACE  [main] BasicBinder: binding parameter [1] as [BIGINT] - [11]
2020-11-25 21:30:49,001 TRACE  [main] BasicExtractor: extracted value ([id1_0_0_] : [BIGINT]) - [61]
2020-11-25 21:30:49,002 TRACE  [main] BasicExtractor: extracted value ([binary_v2_0_0_] : [BLOB]) - [null]
2020-11-25 21:30:49,002 TRACE  [main] BasicExtractor: extracted value ([float_va3_0_0_] : [DOUBLE]) - [1.0]
2020-11-25 21:30:49,002 TRACE  [main] BasicExtractor: extracted value ([i4_0_0_] : [INTEGER]) - [0]
2020-11-25 21:30:49,002 TRACE  [main] BasicExtractor: extracted value ([is_condi5_0_0_] : [BOOLEAN]) - [true]
2020-11-25 21:30:49,002 TRACE  [main] BasicExtractor: extracted value ([j6_0_0_] : [INTEGER]) - [0]
2020-11-25 21:30:49,002 TRACE  [main] BasicExtractor: extracted value ([problem_7_0_0_] : [BIGINT]) - [11]
2020-11-25 21:30:49,003 TRACE  [main] BasicExtractor: extracted value ([descript2_1_1_] : [BLOB]) - [[112, 114, 111, 98, 108, 101, 109, 100, 101, 115, 99, 114, 105, 112, 116, 105, 111, 110]]
2020-11-25 21:30:49,003 TRACE  [main] BasicExtractor: extracted value ([is_solve3_1_1_] : [BOOLEAN]) - [null]
2020-11-25 21:30:49,003 TRACE  [main] BasicExtractor: extracted value ([kind4_1_1_] : [VARCHAR]) - [POLYNOMIAL]
2020-11-25 21:30:49,003 TRACE  [main] BasicExtractor: extracted value ([matrix_d5_1_1_] : [INTEGER]) - [1]
2020-11-25 21:30:49,003 TRACE  [main] BasicExtractor: extracted value ([parent_p7_1_1_] : [BIGINT]) - [null]
2020-11-25 21:30:49,003 TRACE  [main] BasicExtractor: extracted value ([problem_6_1_1_] : [INTEGER]) - [22]
2020-11-25 21:30:49,004 TRACE  [main] BasicExtractor: extracted value ([problem_7_0_3_] : [BIGINT]) - [11]
2020-11-25 21:30:49,004 TRACE  [main] BasicExtractor: extracted value ([id1_0_3_] : [BIGINT]) - [61]
2020-11-25 21:30:49,004 TRACE  [main] BasicExtractor: extracted value ([id1_0_0_] : [BIGINT]) - [62]
2020-11-25 21:30:49,004 TRACE  [main] BasicExtractor: extracted value ([binary_v2_0_0_] : [BLOB]) - [null]
2020-11-25 21:30:49,004 TRACE  [main] BasicExtractor: extracted value ([float_va3_0_0_] : [DOUBLE]) - [2.718281828459045]
2020-11-25 21:30:49,004 TRACE  [main] BasicExtractor: extracted value ([i4_0_0_] : [INTEGER]) - [0]
2020-11-25 21:30:49,005 TRACE  [main] BasicExtractor: extracted value ([is_condi5_0_0_] : [BOOLEAN]) - [true]
2020-11-25 21:30:49,005 TRACE  [main] BasicExtractor: extracted value ([j6_0_0_] : [INTEGER]) - [1]
2020-11-25 21:30:49,005 TRACE  [main] BasicExtractor: extracted value ([problem_7_0_0_] : [BIGINT]) - [11]
2020-11-25 21:30:49,005 TRACE  [main] BasicExtractor: extracted value ([problem_7_0_3_] : [BIGINT]) - [11]
2020-11-25 21:30:49,006 TRACE  [main] BasicExtractor: extracted value ([id1_0_3_] : [BIGINT]) - [62]
2020-11-25 21:30:49,006 TRACE  [main] BasicExtractor: extracted value ([id1_0_0_] : [BIGINT]) - [63]
2020-11-25 21:30:49,006 TRACE  [main] BasicExtractor: extracted value ([binary_v2_0_0_] : [BLOB]) - [null]
2020-11-25 21:30:49,006 TRACE  [main] BasicExtractor: extracted value ([float_va3_0_0_] : [DOUBLE]) - [7.38905609893065]
2020-11-25 21:30:49,006 TRACE  [main] BasicExtractor: extracted value ([i4_0_0_] : [INTEGER]) - [0]
2020-11-25 21:30:49,006 TRACE  [main] BasicExtractor: extracted value ([is_condi5_0_0_] : [BOOLEAN]) - [true]
2020-11-25 21:30:49,006 TRACE  [main] BasicExtractor: extracted value ([j6_0_0_] : [INTEGER]) - [2]
2020-11-25 21:30:49,007 TRACE  [main] BasicExtractor: extracted value ([problem_7_0_0_] : [BIGINT]) - [11]
2020-11-25 21:30:49,007 TRACE  [main] BasicExtractor: extracted value ([problem_7_0_3_] : [BIGINT]) - [11]
2020-11-25 21:30:49,007 TRACE  [main] BasicExtractor: extracted value ([id1_0_3_] : [BIGINT]) - [63]
2020-11-25 21:30:49,007 TRACE  [main] BasicExtractor: extracted value ([id1_0_0_] : [BIGINT]) - [64]
2020-11-25 21:30:49,007 TRACE  [main] BasicExtractor: extracted value ([binary_v2_0_0_] : [BLOB]) - [null]
2020-11-25 21:30:49,007 TRACE  [main] BasicExtractor: extracted value ([float_va3_0_0_] : [DOUBLE]) - [20.085536923187668]
2020-11-25 21:30:49,007 TRACE  [main] BasicExtractor: extracted value ([i4_0_0_] : [INTEGER]) - [0]
2020-11-25 21:30:49,007 TRACE  [main] BasicExtractor: extracted value ([is_condi5_0_0_] : [BOOLEAN]) - [true]
2020-11-25 21:30:49,008 TRACE  [main] BasicExtractor: extracted value ([j6_0_0_] : [INTEGER]) - [3]
2020-11-25 21:30:49,008 TRACE  [main] BasicExtractor: extracted value ([problem_7_0_0_] : [BIGINT]) - [11]
2020-11-25 21:30:49,008 TRACE  [main] BasicExtractor: extracted value ([problem_7_0_3_] : [BIGINT]) - [11]
2020-11-25 21:30:49,008 TRACE  [main] BasicExtractor: extracted value ([id1_0_3_] : [BIGINT]) - [64]
2020-11-25 21:30:49,008 TRACE  [main] BasicExtractor: extracted value ([id1_0_0_] : [BIGINT]) - [65]
2020-11-25 21:30:49,008 TRACE  [main] BasicExtractor: extracted value ([binary_v2_0_0_] : [BLOB]) - [null]
2020-11-25 21:30:49,008 TRACE  [main] BasicExtractor: extracted value ([float_va3_0_0_] : [DOUBLE]) - [54.598150033144236]
2020-11-25 21:30:49,009 TRACE  [main] BasicExtractor: extracted value ([i4_0_0_] : [INTEGER]) - [0]
2020-11-25 21:30:49,009 TRACE  [main] BasicExtractor: extracted value ([is_condi5_0_0_] : [BOOLEAN]) - [true]
2020-11-25 21:30:49,009 TRACE  [main] BasicExtractor: extracted value ([j6_0_0_] : [INTEGER]) - [4]
2020-11-25 21:30:49,009 TRACE  [main] BasicExtractor: extracted value ([problem_7_0_0_] : [BIGINT]) - [11]
2020-11-25 21:30:49,009 TRACE  [main] BasicExtractor: extracted value ([problem_7_0_3_] : [BIGINT]) - [11]
2020-11-25 21:30:49,009 TRACE  [main] BasicExtractor: extracted value ([id1_0_3_] : [BIGINT]) - [65]
2020-11-25 21:30:49,009 TRACE  [main] BasicExtractor: extracted value ([id1_0_0_] : [BIGINT]) - [66]
2020-11-25 21:30:49,009 TRACE  [main] BasicExtractor: extracted value ([binary_v2_0_0_] : [BLOB]) - [null]
2020-11-25 21:30:49,009 TRACE  [main] BasicExtractor: extracted value ([float_va3_0_0_] : [DOUBLE]) - [148.4131591025766]
2020-11-25 21:30:49,022 TRACE  [main] BasicExtractor: extracted value ([i4_0_0_] : [INTEGER]) - [0]
2020-11-25 21:30:49,023 TRACE  [main] BasicExtractor: extracted value ([is_condi5_0_0_] : [BOOLEAN]) - [true]
2020-11-25 21:30:49,023 TRACE  [main] BasicExtractor: extracted value ([j6_0_0_] : [INTEGER]) - [5]
2020-11-25 21:30:49,025 TRACE  [main] BasicExtractor: extracted value ([problem_7_0_0_] : [BIGINT]) - [11]
2020-11-25 21:30:49,025 TRACE  [main] BasicExtractor: extracted value ([problem_7_0_3_] : [BIGINT]) - [11]
2020-11-25 21:30:49,026 TRACE  [main] BasicExtractor: extracted value ([id1_0_3_] : [BIGINT]) - [66]
2020-11-25 21:30:49,026 TRACE  [main] CollectionType: Created collection wrapper: [com.sf.back.entities.Problem.children#11]
2020-11-25 21:30:49,029 TRACE  [main] BasicBinder: binding parameter [1] as [BIGINT] - [11]
2020-11-25 21:30:49,041 TRACE  [main] BasicBinder: binding parameter [1] as [BLOB] - [null]
2020-11-25 21:30:49,041 TRACE  [main] BasicBinder: binding parameter [2] as [DOUBLE] - [2.0]
2020-11-25 21:30:49,042 TRACE  [main] BasicBinder: binding parameter [3] as [INTEGER] - [0]
2020-11-25 21:30:49,042 TRACE  [main] BasicBinder: binding parameter [4] as [BOOLEAN] - [true]
2020-11-25 21:30:49,042 TRACE  [main] BasicBinder: binding parameter [5] as [INTEGER] - [0]
2020-11-25 21:30:49,043 TRACE  [main] BasicBinder: binding parameter [6] as [BIGINT] - [11]
2020-11-25 21:30:49,043 TRACE  [main] BasicBinder: binding parameter [7] as [BIGINT] - [61]
2020-11-25 21:30:49,046 TRACE  [main] BasicBinder: binding parameter [1] as [BLOB] - [[100, 101, 115, 99, 114, 105, 112, 116, 105, 111, 110, 112, 114, 111, 98, 108, 101, 109]]
2020-11-25 21:30:49,047 TRACE  [main] BasicBinder: binding parameter [2] as [BOOLEAN] - [null]
2020-11-25 21:30:49,047 TRACE  [main] BasicBinder: binding parameter [3] as [VARCHAR] - [POLYNOMIAL]
2020-11-25 21:30:49,047 TRACE  [main] BasicBinder: binding parameter [4] as [INTEGER] - [1]
2020-11-25 21:30:49,047 TRACE  [main] BasicBinder: binding parameter [5] as [BIGINT] - [null]
2020-11-25 21:30:49,048 TRACE  [main] BasicBinder: binding parameter [6] as [INTEGER] - [22]
2020-11-25 21:30:49,048 TRACE  [main] BasicBinder: binding parameter [7] as [BIGINT] - [11]
2020-11-25 21:30:49,069 TRACE  [main] BasicBinder: binding parameter [1] as [BIGINT] - [12]
2020-11-25 21:30:49,069 TRACE  [main] BasicExtractor: extracted value ([id1_1_2_] : [BIGINT]) - [null]
2020-11-25 21:30:49,070 TRACE  [main] BasicExtractor: extracted value ([id1_0_4_] : [BIGINT]) - [null]
2020-11-25 21:30:49,070 TRACE  [main] BasicExtractor: extracted value ([descript2_1_0_] : [BLOB]) - [[112, 114, 111, 98, 108, 101, 109, 100, 101, 115, 99, 114, 105, 112, 116, 105, 111, 110]]
2020-11-25 21:30:49,070 TRACE  [main] BasicExtractor: extracted value ([is_solve3_1_0_] : [BOOLEAN]) - [null]
2020-11-25 21:30:49,070 TRACE  [main] BasicExtractor: extracted value ([kind4_1_0_] : [VARCHAR]) - [POLYNOMIAL]
2020-11-25 21:30:49,071 TRACE  [main] BasicExtractor: extracted value ([matrix_d5_1_0_] : [INTEGER]) - [1]
2020-11-25 21:30:49,071 TRACE  [main] BasicExtractor: extracted value ([parent_p7_1_0_] : [BIGINT]) - [null]
2020-11-25 21:30:49,071 TRACE  [main] BasicExtractor: extracted value ([problem_6_1_0_] : [INTEGER]) - [22]
2020-11-25 21:30:49,071 TRACE  [main] BasicExtractor: extracted value ([problem_7_0_3_] : [BIGINT]) - [null]
2020-11-25 21:30:49,071 TRACE  [main] BasicExtractor: extracted value ([parent_p7_1_1_] : [BIGINT]) - [null]
2020-11-25 21:30:49,072 TRACE  [main] CollectionType: Created collection wrapper: [com.sf.back.entities.Problem.matrixes#12]
2020-11-25 21:30:49,073 TRACE  [main] BasicBinder: binding parameter [1] as [BIGINT] - [12]
2020-11-25 21:30:49,073 TRACE  [main] BasicExtractor: extracted value ([id1_0_1_] : [BIGINT]) - [67]
2020-11-25 21:30:49,074 TRACE  [main] BasicExtractor: extracted value ([binary_v2_0_1_] : [BLOB]) - [null]
2020-11-25 21:30:49,074 TRACE  [main] BasicExtractor: extracted value ([float_va3_0_1_] : [DOUBLE]) - [1.0]
2020-11-25 21:30:49,075 TRACE  [main] BasicExtractor: extracted value ([i4_0_1_] : [INTEGER]) - [0]
2020-11-25 21:30:49,075 TRACE  [main] BasicExtractor: extracted value ([is_condi5_0_1_] : [BOOLEAN]) - [true]
2020-11-25 21:30:49,075 TRACE  [main] BasicExtractor: extracted value ([j6_0_1_] : [INTEGER]) - [0]
2020-11-25 21:30:49,076 TRACE  [main] BasicExtractor: extracted value ([problem_7_0_1_] : [BIGINT]) - [12]
2020-11-25 21:30:49,076 TRACE  [main] BasicExtractor: extracted value ([problem_7_0_0_] : [BIGINT]) - [12]
2020-11-25 21:30:49,076 TRACE  [main] BasicExtractor: extracted value ([id1_0_0_] : [BIGINT]) - [67]
2020-11-25 21:30:49,078 TRACE  [main] BasicExtractor: extracted value ([id1_0_1_] : [BIGINT]) - [68]
2020-11-25 21:30:49,079 TRACE  [main] BasicExtractor: extracted value ([binary_v2_0_1_] : [BLOB]) - [null]
2020-11-25 21:30:49,079 TRACE  [main] BasicExtractor: extracted value ([float_va3_0_1_] : [DOUBLE]) - [2.718281828459045]
2020-11-25 21:30:49,080 TRACE  [main] BasicExtractor: extracted value ([i4_0_1_] : [INTEGER]) - [0]
2020-11-25 21:30:49,080 TRACE  [main] BasicExtractor: extracted value ([is_condi5_0_1_] : [BOOLEAN]) - [true]
2020-11-25 21:30:49,080 TRACE  [main] BasicExtractor: extracted value ([j6_0_1_] : [INTEGER]) - [1]
2020-11-25 21:30:49,081 TRACE  [main] BasicExtractor: extracted value ([problem_7_0_1_] : [BIGINT]) - [12]
2020-11-25 21:30:49,081 TRACE  [main] BasicExtractor: extracted value ([problem_7_0_0_] : [BIGINT]) - [12]
2020-11-25 21:30:49,081 TRACE  [main] BasicExtractor: extracted value ([id1_0_0_] : [BIGINT]) - [68]
2020-11-25 21:30:49,082 TRACE  [main] BasicExtractor: extracted value ([id1_0_1_] : [BIGINT]) - [69]
2020-11-25 21:30:49,082 TRACE  [main] BasicExtractor: extracted value ([binary_v2_0_1_] : [BLOB]) - [null]
2020-11-25 21:30:49,082 TRACE  [main] BasicExtractor: extracted value ([float_va3_0_1_] : [DOUBLE]) - [7.38905609893065]
2020-11-25 21:30:49,082 TRACE  [main] BasicExtractor: extracted value ([i4_0_1_] : [INTEGER]) - [0]
2020-11-25 21:30:49,083 TRACE  [main] BasicExtractor: extracted value ([is_condi5_0_1_] : [BOOLEAN]) - [true]
2020-11-25 21:30:49,083 TRACE  [main] BasicExtractor: extracted value ([j6_0_1_] : [INTEGER]) - [2]
2020-11-25 21:30:49,083 TRACE  [main] BasicExtractor: extracted value ([problem_7_0_1_] : [BIGINT]) - [12]
2020-11-25 21:30:49,083 TRACE  [main] BasicExtractor: extracted value ([problem_7_0_0_] : [BIGINT]) - [12]
2020-11-25 21:30:49,083 TRACE  [main] BasicExtractor: extracted value ([id1_0_0_] : [BIGINT]) - [69]
2020-11-25 21:30:49,083 TRACE  [main] BasicExtractor: extracted value ([id1_0_1_] : [BIGINT]) - [70]
2020-11-25 21:30:49,084 TRACE  [main] BasicExtractor: extracted value ([binary_v2_0_1_] : [BLOB]) - [null]
2020-11-25 21:30:49,084 TRACE  [main] BasicExtractor: extracted value ([float_va3_0_1_] : [DOUBLE]) - [20.085536923187668]
2020-11-25 21:30:49,084 TRACE  [main] BasicExtractor: extracted value ([i4_0_1_] : [INTEGER]) - [0]
2020-11-25 21:30:49,084 TRACE  [main] BasicExtractor: extracted value ([is_condi5_0_1_] : [BOOLEAN]) - [true]
2020-11-25 21:30:49,084 TRACE  [main] BasicExtractor: extracted value ([j6_0_1_] : [INTEGER]) - [3]
2020-11-25 21:30:49,085 TRACE  [main] BasicExtractor: extracted value ([problem_7_0_1_] : [BIGINT]) - [12]
2020-11-25 21:30:49,085 TRACE  [main] BasicExtractor: extracted value ([problem_7_0_0_] : [BIGINT]) - [12]
2020-11-25 21:30:49,085 TRACE  [main] BasicExtractor: extracted value ([id1_0_0_] : [BIGINT]) - [70]
2020-11-25 21:30:49,085 TRACE  [main] BasicExtractor: extracted value ([id1_0_1_] : [BIGINT]) - [71]
2020-11-25 21:30:49,085 TRACE  [main] BasicExtractor: extracted value ([binary_v2_0_1_] : [BLOB]) - [null]
2020-11-25 21:30:49,086 TRACE  [main] BasicExtractor: extracted value ([float_va3_0_1_] : [DOUBLE]) - [54.598150033144236]
2020-11-25 21:30:49,086 TRACE  [main] BasicExtractor: extracted value ([i4_0_1_] : [INTEGER]) - [0]
2020-11-25 21:30:49,086 TRACE  [main] BasicExtractor: extracted value ([is_condi5_0_1_] : [BOOLEAN]) - [true]
2020-11-25 21:30:49,086 TRACE  [main] BasicExtractor: extracted value ([j6_0_1_] : [INTEGER]) - [4]
2020-11-25 21:30:49,086 TRACE  [main] BasicExtractor: extracted value ([problem_7_0_1_] : [BIGINT]) - [12]
2020-11-25 21:30:49,086 TRACE  [main] BasicExtractor: extracted value ([problem_7_0_0_] : [BIGINT]) - [12]
2020-11-25 21:30:49,086 TRACE  [main] BasicExtractor: extracted value ([id1_0_0_] : [BIGINT]) - [71]
2020-11-25 21:30:49,087 TRACE  [main] BasicExtractor: extracted value ([id1_0_1_] : [BIGINT]) - [72]
2020-11-25 21:30:49,087 TRACE  [main] BasicExtractor: extracted value ([binary_v2_0_1_] : [BLOB]) - [null]
2020-11-25 21:30:49,087 TRACE  [main] BasicExtractor: extracted value ([float_va3_0_1_] : [DOUBLE]) - [148.4131591025766]
2020-11-25 21:30:49,087 TRACE  [main] BasicExtractor: extracted value ([i4_0_1_] : [INTEGER]) - [0]
2020-11-25 21:30:49,087 TRACE  [main] BasicExtractor: extracted value ([is_condi5_0_1_] : [BOOLEAN]) - [true]
2020-11-25 21:30:49,087 TRACE  [main] BasicExtractor: extracted value ([j6_0_1_] : [INTEGER]) - [5]
2020-11-25 21:30:49,088 TRACE  [main] BasicExtractor: extracted value ([problem_7_0_1_] : [BIGINT]) - [12]
2020-11-25 21:30:49,088 TRACE  [main] BasicExtractor: extracted value ([problem_7_0_0_] : [BIGINT]) - [12]
2020-11-25 21:30:49,088 TRACE  [main] BasicExtractor: extracted value ([id1_0_0_] : [BIGINT]) - [72]
2020-11-25 21:30:49,093 TRACE  [main] BasicBinder: binding parameter [1] as [BIGINT] - [12]
2020-11-25 21:30:49,094 TRACE  [main] BasicExtractor: extracted value ([id1_1_2_] : [BIGINT]) - [null]
2020-11-25 21:30:49,094 TRACE  [main] BasicExtractor: extracted value ([id1_0_4_] : [BIGINT]) - [null]
2020-11-25 21:30:49,094 TRACE  [main] BasicExtractor: extracted value ([descript2_1_0_] : [BLOB]) - [[112, 114, 111, 98, 108, 101, 109, 100, 101, 115, 99, 114, 105, 112, 116, 105, 111, 110]]
2020-11-25 21:30:49,095 TRACE  [main] BasicExtractor: extracted value ([is_solve3_1_0_] : [BOOLEAN]) - [null]
2020-11-25 21:30:49,095 TRACE  [main] BasicExtractor: extracted value ([kind4_1_0_] : [VARCHAR]) - [POLYNOMIAL]
2020-11-25 21:30:49,095 TRACE  [main] BasicExtractor: extracted value ([matrix_d5_1_0_] : [INTEGER]) - [1]
2020-11-25 21:30:49,098 TRACE  [main] BasicExtractor: extracted value ([parent_p7_1_0_] : [BIGINT]) - [null]
2020-11-25 21:30:49,099 TRACE  [main] BasicExtractor: extracted value ([problem_6_1_0_] : [INTEGER]) - [22]
2020-11-25 21:30:49,099 TRACE  [main] BasicExtractor: extracted value ([problem_7_0_3_] : [BIGINT]) - [null]
2020-11-25 21:30:49,100 TRACE  [main] BasicExtractor: extracted value ([parent_p7_1_1_] : [BIGINT]) - [null]
2020-11-25 21:30:49,100 TRACE  [main] CollectionType: Created collection wrapper: [com.sf.back.entities.Problem.matrixes#12]
2020-11-25 21:30:49,102 TRACE  [main] BasicBinder: binding parameter [1] as [BIGINT] - [12]
2020-11-25 21:30:49,103 TRACE  [main] BasicExtractor: extracted value ([id1_0_1_] : [BIGINT]) - [67]
2020-11-25 21:30:49,103 TRACE  [main] BasicExtractor: extracted value ([binary_v2_0_1_] : [BLOB]) - [null]
2020-11-25 21:30:49,103 TRACE  [main] BasicExtractor: extracted value ([float_va3_0_1_] : [DOUBLE]) - [1.0]
2020-11-25 21:30:49,104 TRACE  [main] BasicExtractor: extracted value ([i4_0_1_] : [INTEGER]) - [0]
2020-11-25 21:30:49,104 TRACE  [main] BasicExtractor: extracted value ([is_condi5_0_1_] : [BOOLEAN]) - [true]
2020-11-25 21:30:49,104 TRACE  [main] BasicExtractor: extracted value ([j6_0_1_] : [INTEGER]) - [0]
2020-11-25 21:30:49,104 TRACE  [main] BasicExtractor: extracted value ([problem_7_0_1_] : [BIGINT]) - [12]
2020-11-25 21:30:49,104 TRACE  [main] BasicExtractor: extracted value ([problem_7_0_0_] : [BIGINT]) - [12]
2020-11-25 21:30:49,104 TRACE  [main] BasicExtractor: extracted value ([id1_0_0_] : [BIGINT]) - [67]
2020-11-25 21:30:49,105 TRACE  [main] BasicExtractor: extracted value ([id1_0_1_] : [BIGINT]) - [68]
2020-11-25 21:30:49,105 TRACE  [main] BasicExtractor: extracted value ([binary_v2_0_1_] : [BLOB]) - [null]
2020-11-25 21:30:49,105 TRACE  [main] BasicExtractor: extracted value ([float_va3_0_1_] : [DOUBLE]) - [2.718281828459045]
2020-11-25 21:30:49,105 TRACE  [main] BasicExtractor: extracted value ([i4_0_1_] : [INTEGER]) - [0]
2020-11-25 21:30:49,105 TRACE  [main] BasicExtractor: extracted value ([is_condi5_0_1_] : [BOOLEAN]) - [true]
2020-11-25 21:30:49,106 TRACE  [main] BasicExtractor: extracted value ([j6_0_1_] : [INTEGER]) - [1]
2020-11-25 21:30:49,106 TRACE  [main] BasicExtractor: extracted value ([problem_7_0_1_] : [BIGINT]) - [12]
2020-11-25 21:30:49,106 TRACE  [main] BasicExtractor: extracted value ([problem_7_0_0_] : [BIGINT]) - [12]
2020-11-25 21:30:49,106 TRACE  [main] BasicExtractor: extracted value ([id1_0_0_] : [BIGINT]) - [68]
2020-11-25 21:30:49,107 TRACE  [main] BasicExtractor: extracted value ([id1_0_1_] : [BIGINT]) - [69]
2020-11-25 21:30:49,107 TRACE  [main] BasicExtractor: extracted value ([binary_v2_0_1_] : [BLOB]) - [null]
2020-11-25 21:30:49,107 TRACE  [main] BasicExtractor: extracted value ([float_va3_0_1_] : [DOUBLE]) - [7.38905609893065]
2020-11-25 21:30:49,107 TRACE  [main] BasicExtractor: extracted value ([i4_0_1_] : [INTEGER]) - [0]
2020-11-25 21:30:49,107 TRACE  [main] BasicExtractor: extracted value ([is_condi5_0_1_] : [BOOLEAN]) - [true]
2020-11-25 21:30:49,107 TRACE  [main] BasicExtractor: extracted value ([j6_0_1_] : [INTEGER]) - [2]
2020-11-25 21:30:49,107 TRACE  [main] BasicExtractor: extracted value ([problem_7_0_1_] : [BIGINT]) - [12]
2020-11-25 21:30:49,108 TRACE  [main] BasicExtractor: extracted value ([problem_7_0_0_] : [BIGINT]) - [12]
2020-11-25 21:30:49,108 TRACE  [main] BasicExtractor: extracted value ([id1_0_0_] : [BIGINT]) - [69]
2020-11-25 21:30:49,108 TRACE  [main] BasicExtractor: extracted value ([id1_0_1_] : [BIGINT]) - [70]
2020-11-25 21:30:49,108 TRACE  [main] BasicExtractor: extracted value ([binary_v2_0_1_] : [BLOB]) - [null]
2020-11-25 21:30:49,108 TRACE  [main] BasicExtractor: extracted value ([float_va3_0_1_] : [DOUBLE]) - [20.085536923187668]
2020-11-25 21:30:49,108 TRACE  [main] BasicExtractor: extracted value ([i4_0_1_] : [INTEGER]) - [0]
2020-11-25 21:30:49,108 TRACE  [main] BasicExtractor: extracted value ([is_condi5_0_1_] : [BOOLEAN]) - [true]
2020-11-25 21:30:49,109 TRACE  [main] BasicExtractor: extracted value ([j6_0_1_] : [INTEGER]) - [3]
2020-11-25 21:30:49,109 TRACE  [main] BasicExtractor: extracted value ([problem_7_0_1_] : [BIGINT]) - [12]
2020-11-25 21:30:49,109 TRACE  [main] BasicExtractor: extracted value ([problem_7_0_0_] : [BIGINT]) - [12]
2020-11-25 21:30:49,110 TRACE  [main] BasicExtractor: extracted value ([id1_0_0_] : [BIGINT]) - [70]
2020-11-25 21:30:49,110 TRACE  [main] BasicExtractor: extracted value ([id1_0_1_] : [BIGINT]) - [71]
2020-11-25 21:30:49,111 TRACE  [main] BasicExtractor: extracted value ([binary_v2_0_1_] : [BLOB]) - [null]
2020-11-25 21:30:49,111 TRACE  [main] BasicExtractor: extracted value ([float_va3_0_1_] : [DOUBLE]) - [54.598150033144236]
2020-11-25 21:30:49,111 TRACE  [main] BasicExtractor: extracted value ([i4_0_1_] : [INTEGER]) - [0]
2020-11-25 21:30:49,111 TRACE  [main] BasicExtractor: extracted value ([is_condi5_0_1_] : [BOOLEAN]) - [true]
2020-11-25 21:30:49,112 TRACE  [main] BasicExtractor: extracted value ([j6_0_1_] : [INTEGER]) - [4]
2020-11-25 21:30:49,112 TRACE  [main] BasicExtractor: extracted value ([problem_7_0_1_] : [BIGINT]) - [12]
2020-11-25 21:30:49,112 TRACE  [main] BasicExtractor: extracted value ([problem_7_0_0_] : [BIGINT]) - [12]
2020-11-25 21:30:49,113 TRACE  [main] BasicExtractor: extracted value ([id1_0_0_] : [BIGINT]) - [71]
2020-11-25 21:30:49,113 TRACE  [main] BasicExtractor: extracted value ([id1_0_1_] : [BIGINT]) - [72]
2020-11-25 21:30:49,113 TRACE  [main] BasicExtractor: extracted value ([binary_v2_0_1_] : [BLOB]) - [null]
2020-11-25 21:30:49,114 TRACE  [main] BasicExtractor: extracted value ([float_va3_0_1_] : [DOUBLE]) - [148.4131591025766]
2020-11-25 21:30:49,114 TRACE  [main] BasicExtractor: extracted value ([i4_0_1_] : [INTEGER]) - [0]
2020-11-25 21:30:49,114 TRACE  [main] BasicExtractor: extracted value ([is_condi5_0_1_] : [BOOLEAN]) - [true]
2020-11-25 21:30:49,115 TRACE  [main] BasicExtractor: extracted value ([j6_0_1_] : [INTEGER]) - [5]
2020-11-25 21:30:49,115 TRACE  [main] BasicExtractor: extracted value ([problem_7_0_1_] : [BIGINT]) - [12]
2020-11-25 21:30:49,115 TRACE  [main] BasicExtractor: extracted value ([problem_7_0_0_] : [BIGINT]) - [12]
2020-11-25 21:30:49,116 TRACE  [main] BasicExtractor: extracted value ([id1_0_0_] : [BIGINT]) - [72]
2020-11-25 21:30:49,131 TRACE  [main] BasicBinder: binding parameter [1] as [BIGINT] - [67]
2020-11-25 21:30:49,134 TRACE  [main] BasicBinder: binding parameter [1] as [BIGINT] - [68]
2020-11-25 21:30:49,135 TRACE  [main] BasicBinder: binding parameter [1] as [BIGINT] - [69]
2020-11-25 21:30:49,135 TRACE  [main] BasicBinder: binding parameter [1] as [BIGINT] - [70]
2020-11-25 21:30:49,136 TRACE  [main] BasicBinder: binding parameter [1] as [BIGINT] - [71]
2020-11-25 21:30:49,136 TRACE  [main] BasicBinder: binding parameter [1] as [BIGINT] - [72]
2020-11-25 21:30:49,137 TRACE  [main] BasicBinder: binding parameter [1] as [BIGINT] - [12]
2020-11-25 21:30:49,140 TRACE  [main] BasicBinder: binding parameter [1] as [BIGINT] - [12]
2020-11-25 21:30:49,141 WARN   [main] ProblemService: Problem with 12 is not found
2020-11-25 21:30:50,035 DEBUG  [main] BasicTypeRegistry: Adding type registration boolean -> org.hibernate.type.BooleanType@902fdbe
2020-11-25 21:30:50,035 DEBUG  [main] BasicTypeRegistry: Adding type registration boolean -> org.hibernate.type.BooleanType@902fdbe
2020-11-25 21:30:50,036 DEBUG  [main] BasicTypeRegistry: Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@902fdbe
2020-11-25 21:30:50,036 DEBUG  [main] BasicTypeRegistry: Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@4a058df8
2020-11-25 21:30:50,036 DEBUG  [main] BasicTypeRegistry: Adding type registration true_false -> org.hibernate.type.TrueFalseType@1283ca23
2020-11-25 21:30:50,037 DEBUG  [main] BasicTypeRegistry: Adding type registration yes_no -> org.hibernate.type.YesNoType@733e6df7
2020-11-25 21:30:50,037 DEBUG  [main] BasicTypeRegistry: Adding type registration byte -> org.hibernate.type.ByteType@32227215
2020-11-25 21:30:50,037 DEBUG  [main] BasicTypeRegistry: Adding type registration byte -> org.hibernate.type.ByteType@32227215
2020-11-25 21:30:50,038 DEBUG  [main] BasicTypeRegistry: Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@32227215
2020-11-25 21:30:50,038 DEBUG  [main] BasicTypeRegistry: Adding type registration character -> org.hibernate.type.CharacterType@59845579
2020-11-25 21:30:50,039 DEBUG  [main] BasicTypeRegistry: Adding type registration char -> org.hibernate.type.CharacterType@59845579
2020-11-25 21:30:50,039 DEBUG  [main] BasicTypeRegistry: Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@59845579
2020-11-25 21:30:50,040 DEBUG  [main] BasicTypeRegistry: Adding type registration short -> org.hibernate.type.ShortType@4d4436d0
2020-11-25 21:30:50,040 DEBUG  [main] BasicTypeRegistry: Adding type registration short -> org.hibernate.type.ShortType@4d4436d0
2020-11-25 21:30:50,040 DEBUG  [main] BasicTypeRegistry: Adding type registration java.lang.Short -> org.hibernate.type.ShortType@4d4436d0
2020-11-25 21:30:50,040 DEBUG  [main] BasicTypeRegistry: Adding type registration integer -> org.hibernate.type.IntegerType@6010d0d1
2020-11-25 21:30:50,041 DEBUG  [main] BasicTypeRegistry: Adding type registration int -> org.hibernate.type.IntegerType@6010d0d1
2020-11-25 21:30:50,041 DEBUG  [main] BasicTypeRegistry: Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@6010d0d1
2020-11-25 21:30:50,041 DEBUG  [main] BasicTypeRegistry: Adding type registration long -> org.hibernate.type.LongType@5e9bbd9d
2020-11-25 21:30:50,041 DEBUG  [main] BasicTypeRegistry: Adding type registration long -> org.hibernate.type.LongType@5e9bbd9d
2020-11-25 21:30:50,041 DEBUG  [main] BasicTypeRegistry: Adding type registration java.lang.Long -> org.hibernate.type.LongType@5e9bbd9d
2020-11-25 21:30:50,041 DEBUG  [main] BasicTypeRegistry: Adding type registration float -> org.hibernate.type.FloatType@5b1efaaf
2020-11-25 21:30:50,042 DEBUG  [main] BasicTypeRegistry: Adding type registration float -> org.hibernate.type.FloatType@5b1efaaf
2020-11-25 21:30:50,042 DEBUG  [main] BasicTypeRegistry: Adding type registration java.lang.Float -> org.hibernate.type.FloatType@5b1efaaf
2020-11-25 21:30:50,042 DEBUG  [main] BasicTypeRegistry: Adding type registration double -> org.hibernate.type.DoubleType@4c731956
2020-11-25 21:30:50,042 DEBUG  [main] BasicTypeRegistry: Adding type registration double -> org.hibernate.type.DoubleType@4c731956
2020-11-25 21:30:50,042 DEBUG  [main] BasicTypeRegistry: Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@4c731956
2020-11-25 21:30:50,042 DEBUG  [main] BasicTypeRegistry: Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@51c65a43
2020-11-25 21:30:50,042 DEBUG  [main] BasicTypeRegistry: Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@51c65a43
2020-11-25 21:30:50,042 DEBUG  [main] BasicTypeRegistry: Adding type registration big_integer -> org.hibernate.type.BigIntegerType@31acfd4e
2020-11-25 21:30:50,043 DEBUG  [main] BasicTypeRegistry: Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@31acfd4e
2020-11-25 21:30:50,043 DEBUG  [main] BasicTypeRegistry: Adding type registration string -> org.hibernate.type.StringType@1c30cb85
2020-11-25 21:30:50,043 DEBUG  [main] BasicTypeRegistry: Adding type registration java.lang.String -> org.hibernate.type.StringType@1c30cb85
2020-11-25 21:30:50,043 DEBUG  [main] BasicTypeRegistry: Adding type registration nstring -> org.hibernate.type.StringNVarcharType@7634f2b
2020-11-25 21:30:50,043 DEBUG  [main] BasicTypeRegistry: Adding type registration ncharacter -> org.hibernate.type.CharacterNCharType@4fba8eec
2020-11-25 21:30:50,043 DEBUG  [main] BasicTypeRegistry: Adding type registration url -> org.hibernate.type.UrlType@4d98e41b
2020-11-25 21:30:50,043 DEBUG  [main] BasicTypeRegistry: Adding type registration java.net.URL -> org.hibernate.type.UrlType@4d98e41b
2020-11-25 21:30:50,043 DEBUG  [main] BasicTypeRegistry: Adding type registration Duration -> org.hibernate.type.DurationType@d54d0f5
2020-11-25 21:30:50,044 DEBUG  [main] BasicTypeRegistry: Adding type registration java.time.Duration -> org.hibernate.type.DurationType@d54d0f5
2020-11-25 21:30:50,044 DEBUG  [main] BasicTypeRegistry: Adding type registration Instant -> org.hibernate.type.InstantType@6acffb2d
2020-11-25 21:30:50,044 DEBUG  [main] BasicTypeRegistry: Adding type registration java.time.Instant -> org.hibernate.type.InstantType@6acffb2d
2020-11-25 21:30:50,044 DEBUG  [main] BasicTypeRegistry: Adding type registration LocalDateTime -> org.hibernate.type.LocalDateTimeType@5f025000
2020-11-25 21:30:50,044 DEBUG  [main] BasicTypeRegistry: Adding type registration java.time.LocalDateTime -> org.hibernate.type.LocalDateTimeType@5f025000
2020-11-25 21:30:50,058 DEBUG  [main] BasicTypeRegistry: Adding type registration LocalDate -> org.hibernate.type.LocalDateType@49c099b
2020-11-25 21:30:50,058 DEBUG  [main] BasicTypeRegistry: Adding type registration java.time.LocalDate -> org.hibernate.type.LocalDateType@49c099b
2020-11-25 21:30:50,059 DEBUG  [main] BasicTypeRegistry: Adding type registration LocalTime -> org.hibernate.type.LocalTimeType@188a5fc2
2020-11-25 21:30:50,059 DEBUG  [main] BasicTypeRegistry: Adding type registration java.time.LocalTime -> org.hibernate.type.LocalTimeType@188a5fc2
2020-11-25 21:30:50,059 DEBUG  [main] BasicTypeRegistry: Adding type registration OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@415d88de
2020-11-25 21:30:50,060 DEBUG  [main] BasicTypeRegistry: Adding type registration java.time.OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@415d88de
2020-11-25 21:30:50,060 DEBUG  [main] BasicTypeRegistry: Adding type registration OffsetTime -> org.hibernate.type.OffsetTimeType@4971f459
2020-11-25 21:30:50,061 DEBUG  [main] BasicTypeRegistry: Adding type registration java.time.OffsetTime -> org.hibernate.type.OffsetTimeType@4971f459
2020-11-25 21:30:50,061 DEBUG  [main] BasicTypeRegistry: Adding type registration ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@48581a3b
2020-11-25 21:30:50,061 DEBUG  [main] BasicTypeRegistry: Adding type registration java.time.ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@48581a3b
2020-11-25 21:30:50,061 DEBUG  [main] BasicTypeRegistry: Adding type registration date -> org.hibernate.type.DateType@2a140ce5
2020-11-25 21:30:50,062 DEBUG  [main] BasicTypeRegistry: Adding type registration java.sql.Date -> org.hibernate.type.DateType@2a140ce5
2020-11-25 21:30:50,062 DEBUG  [main] BasicTypeRegistry: Adding type registration time -> org.hibernate.type.TimeType@6da4feeb
2020-11-25 21:30:50,062 DEBUG  [main] BasicTypeRegistry: Adding type registration java.sql.Time -> org.hibernate.type.TimeType@6da4feeb
2020-11-25 21:30:50,063 DEBUG  [main] BasicTypeRegistry: Adding type registration timestamp -> org.hibernate.type.TimestampType@88b76f2
2020-11-25 21:30:50,063 DEBUG  [main] BasicTypeRegistry: Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@88b76f2
2020-11-25 21:30:50,063 DEBUG  [main] BasicTypeRegistry: Adding type registration java.util.Date -> org.hibernate.type.TimestampType@88b76f2
2020-11-25 21:30:50,064 DEBUG  [main] BasicTypeRegistry: Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@1e1237ab
2020-11-25 21:30:50,064 DEBUG  [main] BasicTypeRegistry: Adding type registration calendar -> org.hibernate.type.CalendarType@226de93c
2020-11-25 21:30:50,064 DEBUG  [main] BasicTypeRegistry: Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@226de93c
2020-11-25 21:30:50,064 DEBUG  [main] BasicTypeRegistry: Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@226de93c
2020-11-25 21:30:50,065 DEBUG  [main] BasicTypeRegistry: Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@7b222230
2020-11-25 21:30:50,065 DEBUG  [main] BasicTypeRegistry: Adding type registration locale -> org.hibernate.type.LocaleType@13d019a4
2020-11-25 21:30:50,065 DEBUG  [main] BasicTypeRegistry: Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@13d019a4
2020-11-25 21:30:50,066 DEBUG  [main] BasicTypeRegistry: Adding type registration currency -> org.hibernate.type.CurrencyType@3380ca3d
2020-11-25 21:30:50,066 DEBUG  [main] BasicTypeRegistry: Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@3380ca3d
2020-11-25 21:30:50,066 DEBUG  [main] BasicTypeRegistry: Adding type registration timezone -> org.hibernate.type.TimeZoneType@5f9f3e58
2020-11-25 21:30:50,066 DEBUG  [main] BasicTypeRegistry: Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@5f9f3e58
2020-11-25 21:30:50,067 DEBUG  [main] BasicTypeRegistry: Adding type registration class -> org.hibernate.type.ClassType@7e5b621b
2020-11-25 21:30:50,067 DEBUG  [main] BasicTypeRegistry: Adding type registration java.lang.Class -> org.hibernate.type.ClassType@7e5b621b
2020-11-25 21:30:50,067 DEBUG  [main] BasicTypeRegistry: Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@647b9364
2020-11-25 21:30:50,067 DEBUG  [main] BasicTypeRegistry: Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@647b9364
2020-11-25 21:30:50,068 DEBUG  [main] BasicTypeRegistry: Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@59303963
2020-11-25 21:30:50,068 DEBUG  [main] BasicTypeRegistry: Adding type registration binary -> org.hibernate.type.BinaryType@69c532af
2020-11-25 21:30:50,068 DEBUG  [main] BasicTypeRegistry: Adding type registration byte[] -> org.hibernate.type.BinaryType@69c532af
2020-11-25 21:30:50,068 DEBUG  [main] BasicTypeRegistry: Adding type registration [B -> org.hibernate.type.BinaryType@69c532af
2020-11-25 21:30:50,069 DEBUG  [main] BasicTypeRegistry: Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@8fd91d1
2020-11-25 21:30:50,069 DEBUG  [main] BasicTypeRegistry: Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@8fd91d1
2020-11-25 21:30:50,069 DEBUG  [main] BasicTypeRegistry: Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@8fd91d1
2020-11-25 21:30:50,070 DEBUG  [main] BasicTypeRegistry: Adding type registration row_version -> org.hibernate.type.RowVersionType@236ae13d
2020-11-25 21:30:50,071 DEBUG  [main] BasicTypeRegistry: Adding type registration image -> org.hibernate.type.ImageType@46320c9a
2020-11-25 21:30:50,071 DEBUG  [main] BasicTypeRegistry: Adding type registration characters -> org.hibernate.type.CharArrayType@7af0affa
2020-11-25 21:30:50,071 DEBUG  [main] BasicTypeRegistry: Adding type registration char[] -> org.hibernate.type.CharArrayType@7af0affa
2020-11-25 21:30:50,072 DEBUG  [main] BasicTypeRegistry: Adding type registration [C -> org.hibernate.type.CharArrayType@7af0affa
2020-11-25 21:30:50,072 DEBUG  [main] BasicTypeRegistry: Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@1d7eb170
2020-11-25 21:30:50,073 DEBUG  [main] BasicTypeRegistry: Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@1d7eb170
2020-11-25 21:30:50,073 DEBUG  [main] BasicTypeRegistry: Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@1d7eb170
2020-11-25 21:30:50,073 DEBUG  [main] BasicTypeRegistry: Adding type registration text -> org.hibernate.type.TextType@230a73f2
2020-11-25 21:30:50,074 DEBUG  [main] BasicTypeRegistry: Adding type registration ntext -> org.hibernate.type.NTextType@798deee8
2020-11-25 21:30:50,074 DEBUG  [main] BasicTypeRegistry: Adding type registration blob -> org.hibernate.type.BlobType@5e002356
2020-11-25 21:30:50,074 DEBUG  [main] BasicTypeRegistry: Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@5e002356
2020-11-25 21:30:50,075 DEBUG  [main] BasicTypeRegistry: Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@267f9765
2020-11-25 21:30:50,075 DEBUG  [main] BasicTypeRegistry: Adding type registration clob -> org.hibernate.type.ClobType@443a53df
2020-11-25 21:30:50,075 DEBUG  [main] BasicTypeRegistry: Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@443a53df
2020-11-25 21:30:50,076 DEBUG  [main] BasicTypeRegistry: Adding type registration nclob -> org.hibernate.type.NClobType@b950f82
2020-11-25 21:30:50,076 DEBUG  [main] BasicTypeRegistry: Adding type registration java.sql.NClob -> org.hibernate.type.NClobType@b950f82
2020-11-25 21:30:50,076 DEBUG  [main] BasicTypeRegistry: Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@7a1a3468
2020-11-25 21:30:50,076 DEBUG  [main] BasicTypeRegistry: Adding type registration materialized_nclob -> org.hibernate.type.MaterializedNClobType@629e8212
2020-11-25 21:30:50,077 DEBUG  [main] BasicTypeRegistry: Adding type registration serializable -> org.hibernate.type.SerializableType@4d0cc83e
2020-11-25 21:30:50,077 DEBUG  [main] BasicTypeRegistry: Adding type registration object -> org.hibernate.type.ObjectType@34d480b9
2020-11-25 21:30:50,077 DEBUG  [main] BasicTypeRegistry: Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@34d480b9
2020-11-25 21:30:50,078 DEBUG  [main] BasicTypeRegistry: Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@1a99744a
2020-11-25 21:30:50,078 DEBUG  [main] BasicTypeRegistry: Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@32084a01
2020-11-25 21:30:50,078 DEBUG  [main] BasicTypeRegistry: Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@66d73e2d
2020-11-25 21:30:50,078 DEBUG  [main] BasicTypeRegistry: Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@2433bcd4
2020-11-25 21:30:50,079 DEBUG  [main] BasicTypeRegistry: Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@75d9b73c
2020-11-25 21:30:50,079 DEBUG  [main] BasicTypeRegistry: Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@5f1a3c4
2020-11-25 21:30:50,079 DEBUG  [main] BasicTypeRegistry: Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@5a08d301
2020-11-25 21:30:50,079 DEBUG  [main] BasicTypeRegistry: Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@63e40188
2020-11-25 21:30:50,095 DEBUG  [main] TypeConfiguration$Scope: Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@1a22325d] to MetadataBuildingContext [org.hibernate.boot.internal.MetadataBuildingContextRootImpl@3c5cb013]
2020-11-25 21:30:50,105 DEBUG  [main] EnumType: Using NAMED-based conversion for Enum com.sf.back.entities.Kind
2020-11-25 21:30:50,108 DEBUG  [main] EnumType: Using NAMED-based conversion for Enum com.sf.back.entities.Kind
2020-11-25 21:30:50,138 DEBUG  [main] TypeConfiguration$Scope: Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@1a22325d] to SessionFactoryImpl [org.hibernate.internal.SessionFactoryImpl@17e4beda]
2020-11-25 21:30:50,139 DEBUG  [main] EnumType: Using NAMED-based conversion for Enum com.sf.back.entities.Kind
2020-11-25 21:30:50,139 DEBUG  [main] EnumType: Using NAMED-based conversion for Enum com.sf.back.entities.Kind
2020-11-25 21:30:50,145 DEBUG  [main] EnumType: Using NAMED-based conversion for Enum com.sf.back.entities.Kind
2020-11-25 21:30:50,146 DEBUG  [main] EnumType: Using NAMED-based conversion for Enum com.sf.back.entities.Kind
2020-11-25 21:30:50,155 DEBUG  [main] EnumType: Using NAMED-based conversion for Enum com.sf.back.entities.Kind
2020-11-25 21:30:50,155 DEBUG  [main] EnumType: Using NAMED-based conversion for Enum com.sf.back.entities.Kind
2020-11-25 21:30:50,163 DEBUG  [main] EnumType: Using NAMED-based conversion for Enum com.sf.back.entities.Kind
2020-11-25 21:30:50,174 TRACE  [main] TypeConfiguration$Scope: Handling #sessionFactoryCreated from [org.hibernate.internal.SessionFactoryImpl@17e4beda] for TypeConfiguration
2020-11-25 21:30:50,327 WARN   [main] JpaBaseConfiguration$JpaWebConfiguration: spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2020-11-25 21:30:50,489 WARN   [main] GroovyTemplateAutoConfiguration: Cannot find template location: classpath:/templates/ (please add some templates, check your Groovy configuration, or set spring.groovy.template.check-template-location=false)
2020-11-25 21:30:50,543 TRACE  [main] BasicBinder: binding parameter [1] as [BLOB] - [[70, 105, 110, 100, 32, 97, 108, 108, 32, 114, 111, 111, 116, 115, 32, 111, 102, 32, 103, 105, 118, 101, 110, 32, 112, 111, 108, 121, 110, 111, 109, 105, 97, 108]]
2020-11-25 21:30:50,543 TRACE  [main] BasicBinder: binding parameter [2] as [BOOLEAN] - [false]
2020-11-25 21:30:50,543 TRACE  [main] BasicBinder: binding parameter [3] as [VARCHAR] - [POLYNOMIAL]
2020-11-25 21:30:50,543 TRACE  [main] BasicBinder: binding parameter [4] as [INTEGER] - [1]
2020-11-25 21:30:50,544 TRACE  [main] BasicBinder: binding parameter [5] as [BIGINT] - [null]
2020-11-25 21:30:50,544 TRACE  [main] BasicBinder: binding parameter [6] as [INTEGER] - [6]
2020-11-25 21:30:50,547 TRACE  [main] BasicBinder: binding parameter [1] as [BLOB] - [null]
2020-11-25 21:30:50,548 TRACE  [main] BasicBinder: binding parameter [2] as [DOUBLE] - [1.0]
2020-11-25 21:30:50,548 TRACE  [main] BasicBinder: binding parameter [3] as [INTEGER] - [0]
2020-11-25 21:30:50,548 TRACE  [main] BasicBinder: binding parameter [4] as [BOOLEAN] - [true]
2020-11-25 21:30:50,549 TRACE  [main] BasicBinder: binding parameter [5] as [INTEGER] - [0]
2020-11-25 21:30:50,549 TRACE  [main] BasicBinder: binding parameter [6] as [BIGINT] - [1]
2020-11-25 21:30:50,551 TRACE  [main] BasicBinder: binding parameter [1] as [BLOB] - [null]
2020-11-25 21:30:50,551 TRACE  [main] BasicBinder: binding parameter [2] as [DOUBLE] - [2.0]
2020-11-25 21:30:50,552 TRACE  [main] BasicBinder: binding parameter [3] as [INTEGER] - [0]
2020-11-25 21:30:50,552 TRACE  [main] BasicBinder: binding parameter [4] as [BOOLEAN] - [true]
2020-11-25 21:30:50,552 TRACE  [main] BasicBinder: binding parameter [5] as [INTEGER] - [1]
2020-11-25 21:30:50,552 TRACE  [main] BasicBinder: binding parameter [6] as [BIGINT] - [1]
2020-11-25 21:30:50,554 TRACE  [main] BasicBinder: binding parameter [1] as [BLOB] - [null]
2020-11-25 21:30:50,555 TRACE  [main] BasicBinder: binding parameter [2] as [DOUBLE] - [1.0]
2020-11-25 21:30:50,556 TRACE  [main] BasicBinder: binding parameter [3] as [INTEGER] - [0]
2020-11-25 21:30:50,557 TRACE  [main] BasicBinder: binding parameter [4] as [BOOLEAN] - [true]
2020-11-25 21:30:50,557 TRACE  [main] BasicBinder: binding parameter [5] as [INTEGER] - [2]
2020-11-25 21:30:50,557 TRACE  [main] BasicBinder: binding parameter [6] as [BIGINT] - [1]
2020-11-25 21:30:50,559 TRACE  [main] BasicBinder: binding parameter [1] as [BLOB] - [null]
2020-11-25 21:30:50,560 TRACE  [main] BasicBinder: binding parameter [2] as [DOUBLE] - [1.0]
2020-11-25 21:30:50,561 TRACE  [main] BasicBinder: binding parameter [3] as [INTEGER] - [0]
2020-11-25 21:30:50,561 TRACE  [main] BasicBinder: binding parameter [4] as [BOOLEAN] - [false]
2020-11-25 21:30:50,561 TRACE  [main] BasicBinder: binding parameter [5] as [INTEGER] - [0]
2020-11-25 21:30:50,561 TRACE  [main] BasicBinder: binding parameter [6] as [BIGINT] - [1]
2020-11-25 21:30:50,563 TRACE  [main] BasicBinder: binding parameter [1] as [BLOB] - [null]
2020-11-25 21:30:50,563 TRACE  [main] BasicBinder: binding parameter [2] as [DOUBLE] - [1.0]
2020-11-25 21:30:50,563 TRACE  [main] BasicBinder: binding parameter [3] as [INTEGER] - [0]
2020-11-25 21:30:50,563 TRACE  [main] BasicBinder: binding parameter [4] as [BOOLEAN] - [false]
2020-11-25 21:30:50,564 TRACE  [main] BasicBinder: binding parameter [5] as [INTEGER] - [1]
2020-11-25 21:30:50,564 TRACE  [main] BasicBinder: binding parameter [6] as [BIGINT] - [1]
2020-11-25 21:30:51,345 TRACE  [SpringContextShutdownHook] TypeConfiguration$Scope: Handling #sessionFactoryClosed from [org.hibernate.internal.SessionFactoryImpl@17e4beda] for TypeConfiguration
2020-11-25 21:30:51,353 DEBUG  [SpringContextShutdownHook] TypeConfiguration$Scope: Un-scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration$Scope@69c4e570] from SessionFactory [org.hibernate.internal.SessionFactoryImpl@17e4beda]
2020-11-25 21:30:51,343 TRACE  [SpringContextShutdownHook] TypeConfiguration$Scope: Handling #sessionFactoryClosed from [org.hibernate.internal.SessionFactoryImpl@45d7495e] for TypeConfiguration
2020-11-25 21:30:51,355 DEBUG  [SpringContextShutdownHook] TypeConfiguration$Scope: Un-scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration$Scope@3272ca51] from SessionFactory [org.hibernate.internal.SessionFactoryImpl@45d7495e]
2020-11-25 21:30:51,342 TRACE  [SpringContextShutdownHook] TypeConfiguration$Scope: Handling #sessionFactoryClosed from [org.hibernate.internal.SessionFactoryImpl@84becbe] for TypeConfiguration
2020-11-25 21:30:51,356 DEBUG  [SpringContextShutdownHook] TypeConfiguration$Scope: Un-scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration$Scope@5bf3469e] from SessionFactory [org.hibernate.internal.SessionFactoryImpl@84becbe]
2020-11-25 21:31:55,652 WARN   [main] dev-updater: Use the './' prefix for files in JAR files: 'flow-component-renderer.js', please update your component.
2020-11-25 21:32:06,565 WARN   [main] AnnotationConfigServletWebServerApplicationContext: Exception encountered during context initialization - cancelling refresh attempt: org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'entityManagerFactory' defined in class path resource [org/springframework/boot/autoconfigure/orm/jpa/HibernateJpaConfiguration.class]: Invocation of init method failed; nested exception is org.hibernate.AnnotationException: No identifier specified for entity: com.sf.back.entities.Matrix
2020-11-25 21:32:06,585 WARN   [main] WebappClassLoaderBase: The web application [ROOT] appears to have started a thread named [Thread-4] but has failed to stop it. This is very likely to create a memory leak. Stack trace of thread:
 java.net.DualStackPlainSocketImpl.accept0(Native Method)
 java.net.DualStackPlainSocketImpl.socketAccept(DualStackPlainSocketImpl.java:131)
 java.net.AbstractPlainSocketImpl.accept(AbstractPlainSocketImpl.java:409)
 java.net.PlainSocketImpl.accept(PlainSocketImpl.java:199)
 java.net.ServerSocket.implAccept(ServerSocket.java:545)
 java.net.ServerSocket.accept(ServerSocket.java:513)
 com.vaadin.flow.server.DevServerWatchDog$WatchDogServer.run(DevServerWatchDog.java:58)
 java.lang.Thread.run(Thread.java:748)
2020-11-25 21:32:06,586 WARN   [main] WebappClassLoaderBase: The web application [ROOT] appears to have started a thread named [webpack] but has failed to stop it. This is very likely to create a memory leak. Stack trace of thread:
 java.io.FileInputStream.readBytes(Native Method)
 java.io.FileInputStream.read(FileInputStream.java:255)
 java.io.BufferedInputStream.read1(BufferedInputStream.java:284)
 java.io.BufferedInputStream.read(BufferedInputStream.java:345)
 sun.nio.cs.StreamDecoder.readBytes(StreamDecoder.java:284)
 sun.nio.cs.StreamDecoder.implRead(StreamDecoder.java:326)
 sun.nio.cs.StreamDecoder.read(StreamDecoder.java:178)
 java.io.InputStreamReader.read(InputStreamReader.java:184)
 java.io.BufferedReader.fill(BufferedReader.java:161)
 java.io.BufferedReader.readLine(BufferedReader.java:324)
 java.io.BufferedReader.readLine(BufferedReader.java:389)
 com.vaadin.flow.server.DevModeHandler.readLinesLoop(DevModeHandler.java:450)
 com.vaadin.flow.server.DevModeHandler.lambda$logStream$1(DevModeHandler.java:429)
 com.vaadin.flow.server.DevModeHandler$$Lambda$561/1318384216.run(Unknown Source)
 java.lang.Thread.run(Thread.java:748)
2020-11-25 21:32:06,608 ERROR  [main] SpringApplication: Application run failed
org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'entityManagerFactory' defined in class path resource [org/springframework/boot/autoconfigure/orm/jpa/HibernateJpaConfiguration.class]: Invocation of init method failed; nested exception is org.hibernate.AnnotationException: No identifier specified for entity: com.sf.back.entities.Matrix
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1803)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:595)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:517)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:323)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:222)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:321)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:202)
	at org.springframework.context.support.AbstractApplicationContext.getBean(AbstractApplicationContext.java:1108)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:868)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:550)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.refresh(ServletWebServerApplicationContext.java:141)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:747)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:397)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:315)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1226)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1215)
	at com.sf.VaadinMathSolverApplication.main(VaadinMathSolverApplication.java:23)
Caused by: org.hibernate.AnnotationException: No identifier specified for entity: com.sf.back.entities.Matrix
	at org.hibernate.cfg.InheritanceState.determineDefaultAccessType(InheritanceState.java:266)
	at org.hibernate.cfg.InheritanceState.getElementsToProcess(InheritanceState.java:211)
	at org.hibernate.cfg.AnnotationBinder.bindClass(AnnotationBinder.java:781)
	at org.hibernate.boot.model.source.internal.annotations.AnnotationMetadataSourceProcessorImpl.processEntityHierarchies(AnnotationMetadataSourceProcessorImpl.java:254)
	at org.hibernate.boot.model.process.spi.MetadataBuildingProcess$1.processEntityHierarchies(MetadataBuildingProcess.java:230)
	at org.hibernate.boot.model.process.spi.MetadataBuildingProcess.complete(MetadataBuildingProcess.java:273)
	at org.hibernate.jpa.boot.internal.EntityManagerFactoryBuilderImpl.metadata(EntityManagerFactoryBuilderImpl.java:1214)
	at org.hibernate.jpa.boot.internal.EntityManagerFactoryBuilderImpl.build(EntityManagerFactoryBuilderImpl.java:1245)
	at org.springframework.orm.jpa.vendor.SpringHibernateJpaPersistenceProvider.createContainerEntityManagerFactory(SpringHibernateJpaPersistenceProvider.java:58)
	at org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean.createNativeEntityManagerFactory(LocalContainerEntityManagerFactoryBean.java:365)
	at org.springframework.orm.jpa.AbstractEntityManagerFactoryBean.buildNativeEntityManagerFactory(AbstractEntityManagerFactoryBean.java:391)
	at org.springframework.orm.jpa.AbstractEntityManagerFactoryBean.afterPropertiesSet(AbstractEntityManagerFactoryBean.java:378)
	at org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean.afterPropertiesSet(LocalContainerEntityManagerFactoryBean.java:341)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1862)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1799)
	... 16 common frames omitted
