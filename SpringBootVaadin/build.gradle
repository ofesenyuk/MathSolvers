plugins {
	id 'org.springframework.boot' version '2.4.0'
	id 'io.spring.dependency-management' version '1.0.10.RELEASE'
	id 'groovy'
	id 'eclipse' // optional (to generate Eclipse project files)
	id 'idea' // optional (to generate IntelliJ IDEA project files)
}

group = 'com.sf'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = '8'

configurations {
	compileOnly {
		extendsFrom annotationProcessor
	}
}

repositories {
	mavenCentral()
}

ext {
    set('groovy.version', "3.0.6")
    set('vaadinVersion', "14.3.7")
}

dependencies {
	implementation 'com.vaadin:vaadin-spring-boot-starter'
	implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
	implementation 'org.springframework.boot:spring-boot-starter-groovy-templates'
	implementation 'com.vaadin:vaadin-spring-boot-starter'
	implementation 'org.codehaus.groovy:groovy'
	implementation(localGroovy())
	compileOnly 'org.projectlombok:lombok'
	compile group: 'org.springframework.boot', name: 'spring-boot-devtools'
	compile group: 'net.sf.dozer', name: 'dozer', version: '5.5.1'
	runtimeOnly 'com.h2database:h2'
	runtimeOnly 'mysql:mysql-connector-java'
	runtimeOnly 'org.postgresql:postgresql'
	annotationProcessor 'org.projectlombok:lombok'
	testCompile group: 'junit', name: 'junit', version: '4.13.1'
	testImplementation('org.springframework.boot:spring-boot-starter-test') {
		exclude group: 'org.junit.vintage', module: 'junit-vintage-engine'
	}
}

dependencyManagement {
	imports {
		mavenBom "com.vaadin:vaadin-bom:${vaadinVersion}"
	}
}

sourceSets {
    main {
        java { srcDirs = [] }
        groovy { srcDirs += ['src/main/java'] }
    }
}

test {
	useJUnitPlatform()
}
